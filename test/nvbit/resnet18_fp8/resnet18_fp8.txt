------------- NVBit (NVidia Binary Instrumentation Tool v1.7.4) Loaded --------------
NVBit core environment variables (mostly for nvbit-devs):
ACK_CTX_INIT_LIMITATION = 0 - if set, no warning will be printed for nvbit_at_ctx_init()
            NVDISASM = nvdisasm - override default nvdisasm found in PATH
            NOBANNER = 0 - if set, does not print this banner
       NO_EAGER_LOAD = 0 - eager module loading is turned on by NVBit to prevent potential NVBit tool deadlock, turn it off if you want to use the lazy module loading feature
---------------------------------------------------------------------------------
      START_GRID_NUM = 0 - Beginning of the kernel gird launch interval where to apply instrumentation
        END_GRID_NUM = 4294967295 - End of the kernel grid launch interval where to apply instrumentation
    COUNT_WARP_LEVEL = 1 - Count warp level or thread level instructions
    EXCLUDE_PRED_OFF = 0 - Exclude predicated off instruction from count
   ACTIVE_FROM_START = 1 - Start instruction counting from start or wait for cuProfilerStart and cuProfilerStop
       MANGLED_NAMES = 1 - Print kernel names mangled or not
        TOOL_VERBOSE = 1 - Enable verbosity inside the tool
----------------------------------------------------------------------------------------------------
Function void at::native::vectorized_elementwise_kernel<8, at::native::float16_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::float16_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda(float)#1}, std::array<char*, 2ul>)
Basic block id 0 - num instructions 10
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R4, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - IMAD.MOV.U32 R5, RZ, RZ, RZ ;
 Instr 3 @ 0x30 (48) - CS2R R6, SRZ ;
 Instr 4 @ 0x40 (64) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 5 @ 0x50 (80) - S2R R19, SR_TID.X ;
 Instr 6 @ 0x60 (96) - IMAD.SHL.U32 R4, R4, 0x400, RZ ;
 Instr 7 @ 0x70 (112) - IADD3 R0, -R4, c[0x0][0x160], RZ ;
 Instr 8 @ 0x80 (128) - ISETP.GE.U32.AND P0, PT, R0, 0x400, PT ;
 Instr 9 @ 0x90 (144) - @!P0 BRA 0x200 ;
Basic block id 1 - num instructions 22
 Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R3, RZ, RZ, 0x4 ;
 Instr 11 @ 0xb0 (176) - IMAD.WIDE R2, R4, R3, c[0x0][0x170] ;
 Instr 12 @ 0xc0 (192) - IMAD.WIDE.U32 R2, R19, 0x20, R2 ;
 Instr 13 @ 0xd0 (208) - LDG.E.128.SYS R8, [R2] ;
 Instr 14 @ 0xe0 (224) - LDG.E.128.SYS R12, [R2+0x10] ;
 Instr 15 @ 0xf0 (240) - IMAD.MOV.U32 R5, RZ, RZ, 0x2 ;
 Instr 16 @ 0x100 (256) - IMAD.WIDE.U32 R4, R4, R5, c[0x0][0x168] ;
 Instr 17 @ 0x110 (272) - IMAD.WIDE R4, R19, 0x10, R4 ;
 Instr 18 @ 0x120 (288) - F2F.F16.F32 R11, R11 ;
 Instr 19 @ 0x130 (304) - F2F.F16.F32 R10, R10 ;
 Instr 20 @ 0x140 (320) - F2F.F16.F32 R9, R9 ;
 Instr 21 @ 0x150 (336) - F2F.F16.F32 R8, R8 ;
 Instr 22 @ 0x160 (352) - PRMT R17, R10, 0x5410, R11 ;
 Instr 23 @ 0x170 (368) - F2F.F16.F32 R15, R15 ;
 Instr 24 @ 0x180 (384) - F2F.F16.F32 R14, R14 ;
 Instr 25 @ 0x190 (400) - PRMT R16, R8, 0x5410, R9 ;
 Instr 26 @ 0x1a0 (416) - F2F.F16.F32 R13, R13 ;
 Instr 27 @ 0x1b0 (432) - F2F.F16.F32 R12, R12 ;
 Instr 28 @ 0x1c0 (448) - PRMT R19, R14, 0x5410, R15 ;
 Instr 29 @ 0x1d0 (464) - PRMT R18, R12, 0x5410, R13 ;
 Instr 30 @ 0x1e0 (480) - STG.E.128.SYS [R4], R16 ;
 Instr 31 @ 0x1f0 (496) - EXIT ;
Basic block id 2 - num instructions 6
 Instr 32 @ 0x200 (512) - ISETP.GE.AND P6, PT, R19, R0, PT ;
 Instr 33 @ 0x210 (528) - BMOV.32.CLEAR RZ, B0 ;
 Instr 34 @ 0x220 (544) - BSSY B0, 0x460 ;
 Instr 35 @ 0x230 (560) - CS2R R8, SRZ ;
 Instr 36 @ 0x240 (576) - CS2R R10, SRZ ;
 Instr 37 @ 0x250 (592) - @P6 BRA 0x450 ;
Basic block id 3 - num instructions 7
 Instr 38 @ 0x260 (608) - IMAD.IADD R2, R4, 0x1, R19 ;
 Instr 39 @ 0x270 (624) - IMAD.MOV.U32 R3, RZ, RZ, 0x4 ;
 Instr 40 @ 0x280 (640) - IMAD.WIDE.U32 R2, R2, R3, c[0x0][0x170] ;
 Instr 41 @ 0x290 (656) - LDG.E.SYS R11, [R2] ;
 Instr 42 @ 0x2a0 (672) - IADD3 R13, R19, 0x80, RZ ;
 Instr 43 @ 0x2b0 (688) - ISETP.GE.AND P0, PT, R13, R0, PT ;
 Instr 44 @ 0x2c0 (704) - @P0 BRA 0x450 ;
Basic block id 4 - num instructions 4
 Instr 45 @ 0x2d0 (720) - LDG.E.SYS R10, [R2+0x200] ;
 Instr 46 @ 0x2e0 (736) - IADD3 R13, R19, 0x100, RZ ;
 Instr 47 @ 0x2f0 (752) - ISETP.GE.AND P0, PT, R13, R0, PT ;
 Instr 48 @ 0x300 (768) - @P0 BRA 0x450 ;
Basic block id 5 - num instructions 4
 Instr 49 @ 0x310 (784) - LDG.E.SYS R9, [R2+0x400] ;
 Instr 50 @ 0x320 (800) - IADD3 R13, R19, 0x180, RZ ;
 Instr 51 @ 0x330 (816) - ISETP.GE.AND P0, PT, R13, R0, PT ;
 Instr 52 @ 0x340 (832) - @P0 BRA 0x450 ;
Basic block id 6 - num instructions 4
 Instr 53 @ 0x350 (848) - LDG.E.SYS R8, [R2+0x600] ;
 Instr 54 @ 0x360 (864) - IADD3 R13, R19, 0x200, RZ ;
 Instr 55 @ 0x370 (880) - ISETP.GE.AND P0, PT, R13, R0, PT ;
 Instr 56 @ 0x380 (896) - @P0 BRA 0x450 ;
Basic block id 7 - num instructions 4
 Instr 57 @ 0x390 (912) - LDG.E.SYS R7, [R2+0x800] ;
 Instr 58 @ 0x3a0 (928) - IADD3 R13, R19, 0x280, RZ ;
 Instr 59 @ 0x3b0 (944) - ISETP.GE.AND P0, PT, R13, R0, PT ;
 Instr 60 @ 0x3c0 (960) - @P0 BRA 0x450 ;
Basic block id 8 - num instructions 4
 Instr 61 @ 0x3d0 (976) - LDG.E.SYS R12, [R2+0xa00] ;
 Instr 62 @ 0x3e0 (992) - IADD3 R13, R19, 0x300, RZ ;
 Instr 63 @ 0x3f0 (1008) - ISETP.GE.AND P0, PT, R13, R0, PT ;
 Instr 64 @ 0x400 (1024) - @P0 BRA 0x450 ;
Basic block id 9 - num instructions 4
 Instr 65 @ 0x410 (1040) - IADD3 R13, R19, 0x380, RZ ;
 Instr 66 @ 0x420 (1056) - LDG.E.SYS R6, [R2+0xc00] ;
 Instr 67 @ 0x430 (1072) - ISETP.GE.AND P0, PT, R13, R0, PT ;
 Instr 68 @ 0x440 (1088) - @!P0 LDG.E.SYS R5, [R2+0xe00] ;
Basic block id 10 - num instructions 23
 Instr 69 @ 0x450 (1104) - BSYNC B0 ;
 Instr 70 @ 0x460 (1120) - IADD3 R3, R19.reuse, 0x80, RZ ;
 Instr 71 @ 0x470 (1136) - @!P6 F2F.F16.F32 R11, R11 ;
 Instr 72 @ 0x480 (1152) - IADD3 R21, R19, 0x380, RZ ;
 Instr 73 @ 0x490 (1168) - ISETP.GE.AND P1, PT, R3, R0.reuse, PT ;
 Instr 74 @ 0x4a0 (1184) - IADD3 R3, R19, 0x100, RZ ;
 Instr 75 @ 0x4b0 (1200) - P2R R2, PR, RZ, 0x2 ;
 Instr 76 @ 0x4c0 (1216) - ISETP.GE.AND P0, PT, R3, R0, PT ;
 Instr 77 @ 0x4d0 (1232) - IADD3 R3, R19, 0x180, RZ ;
 Instr 78 @ 0x4e0 (1248) - ISETP.GE.AND P5, PT, R21, R0.reuse, PT ;
 Instr 79 @ 0x4f0 (1264) - @!P1 F2F.F16.F32 R13, R10 ;
 Instr 80 @ 0x500 (1280) - ISETP.GE.AND P1, PT, R3, R0, PT ;
 Instr 81 @ 0x510 (1296) - IADD3 R3, R19, 0x200, RZ ;
 Instr 82 @ 0x520 (1312) - ISETP.GE.AND P2, PT, R3, R0, PT ;
 Instr 83 @ 0x530 (1328) - @!P0 F2F.F16.F32 R9, R9 ;
 Instr 84 @ 0x540 (1344) - IADD3 R3, R19, 0x280, RZ ;
 Instr 85 @ 0x550 (1360) - ISETP.GE.AND P3, PT, R3, R0.reuse, PT ;
 Instr 86 @ 0x560 (1376) - IADD3 R3, R19, 0x300, RZ ;
 Instr 87 @ 0x570 (1392) - @!P1 F2F.F16.F32 R15, R8 ;
 Instr 88 @ 0x580 (1408) - ISETP.GE.AND P4, PT, R3, R0, PT ;
 Instr 89 @ 0x590 (1424) - @!P2 F2F.F16.F32 R7, R7 ;
 Instr 90 @ 0x5a0 (1440) - @!P3 F2F.F16.F32 R17, R12 ;
 Instr 91 @ 0x5b0 (1456) - @P6 EXIT ;
Basic block id 11 - num instructions 8
 Instr 92 @ 0x5c0 (1472) - ISETP.NE.AND P6, PT, R2, RZ, PT ;
 Instr 93 @ 0x5d0 (1488) - IMAD.IADD R2, R4, 0x1, R19 ;
 Instr 94 @ 0x5e0 (1504) - @!P5 F2F.F16.F32 R5, R5 ;
 Instr 95 @ 0x5f0 (1520) - IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 96 @ 0x600 (1536) - IMAD.WIDE.U32 R2, R2, R3, c[0x0][0x168] ;
 Instr 97 @ 0x610 (1552) - @!P4 F2F.F16.F32 R19, R6 ;
 Instr 98 @ 0x620 (1568) - STG.E.U16.SYS [R2], R11 ;
 Instr 99 @ 0x630 (1584) - @P6 EXIT ;
Basic block id 12 - num instructions 2
 Instr 100 @ 0x640 (1600) - STG.E.U16.SYS [R2+0x100], R13 ;
 Instr 101 @ 0x650 (1616) - @P0 EXIT ;
Basic block id 13 - num instructions 2
 Instr 102 @ 0x660 (1632) - STG.E.U16.SYS [R2+0x200], R9 ;
 Instr 103 @ 0x670 (1648) - @P1 EXIT ;
Basic block id 14 - num instructions 2
 Instr 104 @ 0x680 (1664) - STG.E.U16.SYS [R2+0x300], R15 ;
 Instr 105 @ 0x690 (1680) - @P2 EXIT ;
Basic block id 15 - num instructions 2
 Instr 106 @ 0x6a0 (1696) - STG.E.U16.SYS [R2+0x400], R7 ;
 Instr 107 @ 0x6b0 (1712) - @P3 EXIT ;
Basic block id 16 - num instructions 2
 Instr 108 @ 0x6c0 (1728) - STG.E.U16.SYS [R2+0x500], R17 ;
 Instr 109 @ 0x6d0 (1744) - @P4 EXIT ;
Basic block id 17 - num instructions 2
 Instr 110 @ 0x6e0 (1760) - STG.E.U16.SYS [R2+0x600], R19 ;
 Instr 111 @ 0x6f0 (1776) - @P5 EXIT ;
Basic block id 18 - num instructions 2
 Instr 112 @ 0x700 (1792) - STG.E.U16.SYS [R2+0x700], R5 ;
 Instr 113 @ 0x710 (1808) - EXIT ;
Basic block id 19 - num instructions 1
 Instr 114 @ 0x720 (1824) - BRA 0x720;
inspecting void at::native::vectorized_elementwise_kernel<8, at::native::float16_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::float16_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda(float)#1}, std::array<char*, 2ul>) - number basic blocks 20
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R3, RZ, RZ, 0x4 ;
Inject count_instr before - Instr 32 @ 0x200 (512) - ISETP.GE.AND P6, PT, R19, R0, PT ;
Inject count_instr before - Instr 38 @ 0x260 (608) - IMAD.IADD R2, R4, 0x1, R19 ;
Inject count_instr before - Instr 45 @ 0x2d0 (720) - LDG.E.SYS R10, [R2+0x200] ;
Inject count_instr before - Instr 49 @ 0x310 (784) - LDG.E.SYS R9, [R2+0x400] ;
Inject count_instr before - Instr 53 @ 0x350 (848) - LDG.E.SYS R8, [R2+0x600] ;
Inject count_instr before - Instr 57 @ 0x390 (912) - LDG.E.SYS R7, [R2+0x800] ;
Inject count_instr before - Instr 61 @ 0x3d0 (976) - LDG.E.SYS R12, [R2+0xa00] ;
Inject count_instr before - Instr 65 @ 0x410 (1040) - IADD3 R13, R19, 0x380, RZ ;
Inject count_instr before - Instr 69 @ 0x450 (1104) - BSYNC B0 ;
Inject count_instr before - Instr 92 @ 0x5c0 (1472) - ISETP.NE.AND P6, PT, R2, RZ, PT ;
Inject count_instr before - Instr 100 @ 0x640 (1600) - STG.E.U16.SYS [R2+0x100], R13 ;
Inject count_instr before - Instr 102 @ 0x660 (1632) - STG.E.U16.SYS [R2+0x200], R9 ;
Inject count_instr before - Instr 104 @ 0x680 (1664) - STG.E.U16.SYS [R2+0x300], R15 ;
Inject count_instr before - Instr 106 @ 0x6a0 (1696) - STG.E.U16.SYS [R2+0x400], R7 ;
Inject count_instr before - Instr 108 @ 0x6c0 (1728) - STG.E.U16.SYS [R2+0x500], R17 ;
Inject count_instr before - Instr 110 @ 0x6e0 (1760) - STG.E.U16.SYS [R2+0x600], R19 ;
Inject count_instr before - Instr 112 @ 0x700 (1792) - STG.E.U16.SYS [R2+0x700], R5 ;
Inject count_instr before - Instr 114 @ 0x720 (1824) - BRA 0x720;
kernel 0 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 10,  kernel instructions 1380, total instructions 1380
kernel 1 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 1566
kernel 2 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 1752
kernel 3 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 1938
kernel 4 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 2124
kernel 5 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 36,  kernel instructions 4608, total instructions 6732
kernel 6 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 6918
kernel 7 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 7104
kernel 8 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 7290
kernel 9 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 7476
kernel 10 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 36,  kernel instructions 4608, total instructions 12084
kernel 11 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 12270
kernel 12 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 12456
kernel 13 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 12642
kernel 14 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 12828
kernel 15 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 36,  kernel instructions 4608, total instructions 17436
kernel 16 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 17622
kernel 17 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 17808
kernel 18 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 17994
kernel 19 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 18180
kernel 20 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 36,  kernel instructions 4608, total instructions 22788
kernel 21 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 22974
kernel 22 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 23160
kernel 23 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 23346
kernel 24 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 186, total instructions 23532
kernel 25 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 72,  kernel instructions 9216, total instructions 32748
kernel 26 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 32964
kernel 27 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 33180
kernel 28 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 33396
kernel 29 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 33612
kernel 30 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 144,  kernel instructions 18432, total instructions 52044
kernel 31 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 52260
kernel 32 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 52476
kernel 33 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 52692
kernel 34 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 52908
kernel 35 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 8,  kernel instructions 1024, total instructions 53932
kernel 36 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 54148
kernel 37 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 54364
kernel 38 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 54580
kernel 39 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 54796
kernel 40 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 144,  kernel instructions 18432, total instructions 73228
kernel 41 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 73444
kernel 42 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 73660
kernel 43 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 73876
kernel 44 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 74092
kernel 45 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 144,  kernel instructions 18432, total instructions 92524
kernel 46 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 92740
kernel 47 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 92956
kernel 48 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 93172
kernel 49 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 216, total instructions 93388
kernel 50 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 288,  kernel instructions 36864, total instructions 130252
kernel 51 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 130492
kernel 52 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 130732
kernel 53 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 130972
kernel 54 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 131212
kernel 55 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 576,  kernel instructions 73728, total instructions 204940
kernel 56 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 205180
kernel 57 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 205420
kernel 58 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 205660
kernel 59 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 205900
kernel 60 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 32,  kernel instructions 4096, total instructions 209996
kernel 61 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 210236
kernel 62 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 210476
kernel 63 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 210716
kernel 64 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 210956
kernel 65 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 576,  kernel instructions 73728, total instructions 284684
kernel 66 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 284924
kernel 67 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 285164
kernel 68 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 285404
kernel 69 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 285644
kernel 70 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 576,  kernel instructions 73728, total instructions 359372
kernel 71 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 359612
kernel 72 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 359852
kernel 73 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 360092
kernel 74 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 240, total instructions 360332
kernel 75 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1152,  kernel instructions 147456, total instructions 507788
kernel 76 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 508076
kernel 77 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 508364
kernel 78 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 508652
kernel 79 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 508940
kernel 80 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 2304,  kernel instructions 294912, total instructions 803852
kernel 81 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 804140
kernel 82 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 804428
kernel 83 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 804716
kernel 84 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 805004
kernel 85 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 128,  kernel instructions 16384, total instructions 821388
kernel 86 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 821676
kernel 87 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 821964
kernel 88 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 822252
kernel 89 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 822540
kernel 90 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 2304,  kernel instructions 294912, total instructions 1117452
kernel 91 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1117740
kernel 92 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1118028
kernel 93 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1118316
kernel 94 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1118604
kernel 95 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 2304,  kernel instructions 294912, total instructions 1413516
kernel 96 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1413804
kernel 97 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1414092
kernel 98 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1414380
kernel 99 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 288, total instructions 1414668
kernel 100 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 500,  kernel instructions 64000, total instructions 1478668
kernel 101 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 368, total instructions 1479036
kernel 102 - _ZN2at6native29vectorized_elementwise_kernelILi8EZNS0_24float16_copy_kernel_cudaERNS_18TensorIteratorBaseEEUlfE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 147,  kernel instructions 18816, total instructions 1497852
Function void cudnn::engines_precompiled::nchwToNhwcKernel<__half, __half, float, false, true, (cudnnKernelDataType_t)0>(cudnn::engines_precompiled::nchw2nhwc_params_t<float>, __half const*, __half*)
Basic block id 0 - num instructions 16
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R5, SR_TID.X ;
 Instr 2 @ 0x20 (32) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3 @ 0x30 (48) - BSSY B0, 0xf30 ;
 Instr 4 @ 0x40 (64) - S2R R3, SR_CTAID.X ;
 Instr 5 @ 0x50 (80) - S2R R0, SR_CTAID.Y ;
 Instr 6 @ 0x60 (96) - SHF.R.S32.HI R2, RZ, 0x1f, R5 ;
 Instr 7 @ 0x70 (112) - LEA.HI R4, R2, R5, RZ, 0x5 ;
 Instr 8 @ 0x80 (128) - IMAD.SHL.U32 R2, R3, 0x20, RZ ;
 Instr 9 @ 0x90 (144) - LOP3.LUT R6, R4, 0xffffffe0, RZ, 0xc0, !PT ;
 Instr 10 @ 0xa0 (160) - SHF.R.S32.HI R4, RZ, 0x5, R4 ;
 Instr 11 @ 0xb0 (176) - IMAD.IADD R3, R5, 0x1, -R6 ;
 Instr 12 @ 0xc0 (192) - IMAD.IADD R6, R3, 0x1, R2 ;
 Instr 13 @ 0xd0 (208) - ISETP.GE.AND P0, PT, R6, c[0x0][0x170], PT ;
 Instr 14 @ 0xe0 (224) - IMAD R6, R0, 0x20, R4 ;
 Instr 15 @ 0xf0 (240) - @P0 BRA 0xf20 ;
Basic block id 1 - num instructions 9
 Instr 16 @ 0x100 (256) - S2R R7, SR_CTAID.Z ;
 Instr 17 @ 0x110 (272) - LEA R8, R0, 0x20, 0x5 ;
 Instr 18 @ 0x120 (288) - IMAD.MOV.U32 R13, RZ, RZ, R6 ;
 Instr 19 @ 0x130 (304) - IMAD.MOV.U32 R9, RZ, RZ, 0x2 ;
 Instr 20 @ 0x140 (320) - ISETP.GE.AND P0, PT, R8, c[0x0][0x168], PT ;
 Instr 21 @ 0x150 (336) - IMAD R6, R13, c[0x0][0x174], R2 ;
 Instr 22 @ 0x160 (352) - IMAD R6, R7, c[0x0][0x16c], R6 ;
 Instr 23 @ 0x170 (368) - IMAD.WIDE R6, R6, R9, c[0x0][0x1a8] ;
 Instr 24 @ 0x180 (384) - @!P0 BRA 0xe20 ;
Basic block id 2 - num instructions 2
 Instr 25 @ 0x190 (400) - ISETP.GT.AND P0, PT, R5, 0x3ff, PT ;
 Instr 26 @ 0x1a0 (416) - @P0 BRA 0xf20 ;
Basic block id 3 - num instructions 9
 Instr 27 @ 0x1b0 (432) - IMNMX R9, R4.reuse, 0x18, !PT ;
 Instr 28 @ 0x1c0 (448) - BMOV.32.CLEAR RZ, B1 ;
 Instr 29 @ 0x1d0 (464) - BSSY B1, 0x360 ;
 Instr 30 @ 0x1e0 (480) - IMAD.MOV.U32 R12, RZ, RZ, R4 ;
 Instr 31 @ 0x1f0 (496) - IADD3 R9, -R4, 0x7, R9 ;
 Instr 32 @ 0x200 (512) - LEA.HI R8, R9.reuse, 0x1, RZ, 0x1d ;
 Instr 33 @ 0x210 (528) - ISETP.GE.U32.AND P1, PT, R9, 0x18, PT ;
 Instr 34 @ 0x220 (544) - IMAD.MOV.U32 R9, RZ, RZ, c[0x0][0x174] ;
 Instr 35 @ 0x230 (560) - LOP3.LUT R8, R8, 0x3, RZ, 0xc0, !PT ;
Basic block id 4 - num instructions 3
 Instr 36 @ 0x240 (576) - IMAD.SHL.U32 R9, R9, 0x8, RZ ;
 Instr 37 @ 0x250 (592) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 38 @ 0x260 (608) - @!P0 BRA 0x350 ;
Basic block id 5 - num instructions 3
 Instr 39 @ 0x270 (624) - IMAD R10, R3, 0x21, R4.reuse ;
 Instr 40 @ 0x280 (640) - IMAD.MOV.U32 R12, RZ, RZ, R4 ;
 Instr 41 @ 0x290 (656) - IMAD.SHL.U32 R14, R10, 0x2, RZ ;
Basic block id 6 - num instructions 11
 Instr 42 @ 0x2a0 (672) - ISETP.GE.AND P0, PT, R13, c[0x0][0x168], PT ;
 Instr 43 @ 0x2b0 (688) - @!P0 IMAD.WIDE R10, R3, 0x2, R6 ;
 Instr 44 @ 0x2c0 (704) - @!P0 LDG.E.U16.SYS R11, [R10] ;
 Instr 45 @ 0x2d0 (720) - IADD3 R8, R8, -0x1, RZ ;
 Instr 46 @ 0x2e0 (736) - IMAD.WIDE R6, R9, 0x2, R6 ;
 Instr 47 @ 0x2f0 (752) - IADD3 R12, R12, 0x8, RZ ;
 Instr 48 @ 0x300 (768) - IADD3 R13, R13, 0x8, RZ ;
 Instr 49 @ 0x310 (784) - @!P0 STS.U16 [R14], R11 ;
 Instr 50 @ 0x320 (800) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 51 @ 0x330 (816) - IADD3 R14, R14, 0x10, RZ ;
 Instr 52 @ 0x340 (832) - @P0 BRA 0x2a0 ;
Basic block id 7 - num instructions 2
 Instr 53 @ 0x350 (848) - BSYNC B1 ;
 Instr 54 @ 0x360 (864) - @!P1 BRA 0xf20 ;
Basic block id 8 - num instructions 12
 Instr 55 @ 0x370 (880) - IADD3 R10, R12, -0x20, RZ ;
 Instr 56 @ 0x380 (896) - IMAD R11, R0, 0x20, R12 ;
 Instr 57 @ 0x390 (912) - BMOV.32.CLEAR RZ, B1 ;
 Instr 58 @ 0x3a0 (928) - BSSY B1, 0x990 ;
 Instr 59 @ 0x3b0 (944) - IMAD.WIDE R6, R3, 0x2, R6 ;
 Instr 60 @ 0x3c0 (960) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 61 @ 0x3d0 (976) - IADD3 R11, R11, 0x18, RZ ;
 Instr 62 @ 0x3e0 (992) - IMAD.MOV R8, RZ, RZ, -R10 ;
 Instr 63 @ 0x3f0 (1008) - ISETP.GT.AND P1, PT, R8, 0x60, PT ;
 Instr 64 @ 0x400 (1024) - IMAD R8, R3, 0x21, R12 ;
 Instr 65 @ 0x410 (1040) - LEA R8, R8, 0x20, 0x1 ;
 Instr 66 @ 0x420 (1056) - @!P1 BRA 0x980 ;
Basic block id 9 - num instructions 1
 Instr 67 @ 0x430 (1072) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Basic block id 10 - num instructions 84
 Instr 68 @ 0x440 (1088) - IADD3 R13, R11.reuse, -0x8, RZ ;
 Instr 69 @ 0x450 (1104) - IADD3 R12, R11, -0x10, RZ ;
 Instr 70 @ 0x460 (1120) - ISETP.GE.AND P3, PT, R13, c[0x0][0x168], PT ;
 Instr 71 @ 0x470 (1136) - ISETP.GE.AND P4, PT, R11.reuse, c[0x0][0x168], PT ;
 Instr 72 @ 0x480 (1152) - ISETP.GE.AND P2, PT, R12, c[0x0][0x168], PT ;
 Instr 73 @ 0x490 (1168) - IADD3 R12, R11, 0x20, RZ ;
 Instr 74 @ 0x4a0 (1184) - ISETP.GE.AND P5, PT, R12, c[0x0][0x168], PT ;
 Instr 75 @ 0x4b0 (1200) - IMAD.WIDE R12, R9, 0x8, R6 ;
 Instr 76 @ 0x4c0 (1216) - @!P3 IMAD.WIDE R16, R9, 0x4, R6 ;
 Instr 77 @ 0x4d0 (1232) - @!P4 IMAD.WIDE R18, R9, 0x6, R6 ;
 Instr 78 @ 0x4e0 (1248) - @!P2 IMAD.WIDE R14, R9.reuse, 0x2, R6 ;
 Instr 79 @ 0x4f0 (1264) - @!P3 LDG.E.U16.SYS R23, [R16] ;
 Instr 80 @ 0x500 (1280) - @!P4 LDG.E.U16.SYS R27, [R18] ;
 Instr 81 @ 0x510 (1296) - @!P5 IMAD.WIDE R20, R9, 0x6, R12 ;
 Instr 82 @ 0x520 (1312) - @!P2 LDG.E.U16.SYS R15, [R14] ;
 Instr 83 @ 0x530 (1328) - @!P5 LDG.E.U16.SYS R29, [R20] ;
 Instr 84 @ 0x540 (1344) - IADD3 R24, R11, 0x18, RZ ;
 Instr 85 @ 0x550 (1360) - ISETP.GE.AND P1, PT, R24, c[0x0][0x168], PT ;
 Instr 86 @ 0x560 (1376) - IADD3 R24, R11.reuse, 0x40, RZ ;
 Instr 87 @ 0x570 (1392) - IADD3 R14, R11.reuse, 0x30, RZ ;
 Instr 88 @ 0x580 (1408) - IADD3 R22, R11, 0x10, RZ ;
 Instr 89 @ 0x590 (1424) - ISETP.GE.AND P6, PT, R22, c[0x0][0x168], PT ;
 Instr 90 @ 0x5a0 (1440) - @!P1 IMAD.WIDE R18, R9, 0x4, R12 ;
 Instr 91 @ 0x5b0 (1456) - IADD3 R22, R11.reuse, 0x8, RZ ;
 Instr 92 @ 0x5c0 (1472) - IADD3 R20, R11, 0x38, RZ ;
 Instr 93 @ 0x5d0 (1488) - @!P1 LDG.E.U16.SYS R19, [R18] ;
 Instr 94 @ 0x5e0 (1504) - @!P6 IMAD.WIDE R16, R9, 0x2, R12 ;
 Instr 95 @ 0x5f0 (1520) - @!P6 LDG.E.U16.SYS R17, [R16] ;
 Instr 96 @ 0x600 (1536) - @!P3 STS.U16 [R8], R23 ;
 Instr 97 @ 0x610 (1552) - ISETP.GE.AND P3, PT, R24, c[0x0][0x168], PT ;
 Instr 98 @ 0x620 (1568) - @!P4 STS.U16 [R8+0x10], R27 ;
 Instr 99 @ 0x630 (1584) - ISETP.GE.AND P4, PT, R14, c[0x0][0x168], PT ;
 Instr 100 @ 0x640 (1600) - @!P2 STS.U16 [R8+-0x10], R15 ;
 Instr 101 @ 0x650 (1616) - ISETP.GE.AND P2, PT, R22, c[0x0][0x168], PT ;
 Instr 102 @ 0x660 (1632) - IMAD.WIDE R14, R9, 0x8, R12 ;
 Instr 103 @ 0x670 (1648) - @!P5 STS.U16 [R8+0x50], R29 ;
 Instr 104 @ 0x680 (1664) - ISETP.GE.AND P5, PT, R20, c[0x0][0x168], PT ;
 Instr 105 @ 0x690 (1680) - @!P2 LDG.E.U16.SYS R13, [R12] ;
 Instr 106 @ 0x6a0 (1696) - @!P3 IMAD.WIDE R24, R9, 0x6, R14 ;
 Instr 107 @ 0x6b0 (1712) - @!P4 IMAD.WIDE R20, R9, 0x2, R14 ;
 Instr 108 @ 0x6c0 (1728) - @!P3 LDG.E.U16.SYS R25, [R24] ;
 Instr 109 @ 0x6d0 (1744) - @!P5 IMAD.WIDE R22, R9, 0x4, R14 ;
 Instr 110 @ 0x6e0 (1760) - @!P4 LDG.E.U16.SYS R27, [R20] ;
 Instr 111 @ 0x6f0 (1776) - @!P5 LDG.E.U16.SYS R29, [R22] ;
 Instr 112 @ 0x700 (1792) - IADD3 R16, R11, 0x50, RZ ;
 Instr 113 @ 0x710 (1808) - @!P1 STS.U16 [R8+0x40], R19 ;
 Instr 114 @ 0x720 (1824) - ISETP.GE.AND P1, PT, R16, c[0x0][0x168], PT ;
 Instr 115 @ 0x730 (1840) - IADD3 R12, R11, 0x28, RZ ;
 Instr 116 @ 0x740 (1856) - IMAD.WIDE R20, R9, 0x8, R14 ;
 Instr 117 @ 0x750 (1872) - IADD3 R26, R11.reuse, 0x60, RZ ;
 Instr 118 @ 0x760 (1888) - IADD3 R18, R11.reuse, 0x58, RZ ;
 Instr 119 @ 0x770 (1904) - @!P6 STS.U16 [R8+0x30], R17 ;
 Instr 120 @ 0x780 (1920) - ISETP.GE.AND P6, PT, R26, c[0x0][0x168], PT ;
 Instr 121 @ 0x790 (1936) - IADD3 R16, R11, 0x48, RZ ;
 Instr 122 @ 0x7a0 (1952) - @!P2 STS.U16 [R8+0x20], R13 ;
 Instr 123 @ 0x7b0 (1968) - @!P3 STS.U16 [R8+0x90], R25 ;
 Instr 124 @ 0x7c0 (1984) - ISETP.GE.AND P3, PT, R12, c[0x0][0x168], PT ;
 Instr 125 @ 0x7d0 (2000) - IADD3 R12, R11, -0x18, RZ ;
 Instr 126 @ 0x7e0 (2016) - @!P4 STS.U16 [R8+0x70], R27 ;
 Instr 127 @ 0x7f0 (2032) - ISETP.GE.AND P4, PT, R12, c[0x0][0x168], PT ;
 Instr 128 @ 0x800 (2048) - @!P1 IMAD.WIDE R12, R9, 0x2, R20 ;
 Instr 129 @ 0x810 (2064) - ISETP.GE.AND P2, PT, R18, c[0x0][0x168], PT ;
 Instr 130 @ 0x820 (2080) - @!P5 STS.U16 [R8+0x80], R29 ;
 Instr 131 @ 0x830 (2096) - ISETP.GE.AND P5, PT, R16, c[0x0][0x168], PT ;
 Instr 132 @ 0x840 (2112) - @!P3 LDG.E.U16.SYS R15, [R14] ;
 Instr 133 @ 0x850 (2128) - @!P1 LDG.E.U16.SYS R13, [R12] ;
 Instr 134 @ 0x860 (2144) - @!P6 IMAD.WIDE R18, R9, 0x6, R20 ;
 Instr 135 @ 0x870 (2160) - @!P4 LDG.E.U16.SYS R23, [R6] ;
 Instr 136 @ 0x880 (2176) - @!P2 IMAD.WIDE R16, R9, 0x4, R20 ;
 Instr 137 @ 0x890 (2192) - @!P5 LDG.E.U16.SYS R25, [R20] ;
 Instr 138 @ 0x8a0 (2208) - @!P6 LDG.E.U16.SYS R19, [R18] ;
 Instr 139 @ 0x8b0 (2224) - @!P2 LDG.E.U16.SYS R17, [R16] ;
 Instr 140 @ 0x8c0 (2240) - IADD3 R10, R10, 0x80, RZ ;
 Instr 141 @ 0x8d0 (2256) - IMAD.WIDE R6, R9, 0x8, R20 ;
 Instr 142 @ 0x8e0 (2272) - IADD3 R11, R11, 0x80, RZ ;
 Instr 143 @ 0x8f0 (2288) - @!P1 STS.U16 [R8+0xb0], R13 ;
 Instr 144 @ 0x900 (2304) - ISETP.GE.AND P1, PT, R10, -0x60, PT ;
 Instr 145 @ 0x910 (2320) - @!P3 STS.U16 [R8+0x60], R15 ;
 Instr 146 @ 0x920 (2336) - @!P4 STS.U16 [R8+-0x20], R23 ;
 Instr 147 @ 0x930 (2352) - @!P6 STS.U16 [R8+0xd0], R19 ;
 Instr 148 @ 0x940 (2368) - @!P2 STS.U16 [R8+0xc0], R17 ;
 Instr 149 @ 0x950 (2384) - @!P5 STS.U16 [R8+0xa0], R25 ;
 Instr 150 @ 0x960 (2400) - IADD3 R8, R8, 0x100, RZ ;
 Instr 151 @ 0x970 (2416) - @!P1 BRA 0x440 ;
Basic block id 11 - num instructions 6
 Instr 152 @ 0x980 (2432) - BSYNC B1 ;
 Instr 153 @ 0x990 (2448) - IMAD.MOV R12, RZ, RZ, -R10 ;
 Instr 154 @ 0x9a0 (2464) - BMOV.32.CLEAR RZ, B1 ;
 Instr 155 @ 0x9b0 (2480) - BSSY B1, 0xcc0 ;
 Instr 156 @ 0x9c0 (2496) - ISETP.GT.AND P1, PT, R12, 0x20, PT ;
 Instr 157 @ 0x9d0 (2512) - @!P1 BRA 0xcb0 ;
Basic block id 12 - num instructions 10
 Instr 158 @ 0x9e0 (2528) - IADD3 R12, R11, 0x8, RZ ;
 Instr 159 @ 0x9f0 (2544) - ISETP.GE.AND P6, PT, R12, c[0x0][0x168], PT ;
 Instr 160 @ 0xa00 (2560) - IMAD.WIDE R12, R9, 0x8, R6 ;
 Instr 161 @ 0xa10 (2576) - @!P6 LDG.E.U16.SYS R27, [R12] ;
 Instr 162 @ 0xa20 (2592) - IADD3 R14, R11.reuse, -0x10, RZ ;
 Instr 163 @ 0xa30 (2608) - IADD3 R15, R11.reuse, -0x8, RZ ;
 Instr 164 @ 0xa40 (2624) - IADD3 R26, R11, 0x20, RZ ;
 Instr 165 @ 0xa50 (2640) - ISETP.GE.AND P0, PT, R14, c[0x0][0x168], PT ;
 Instr 166 @ 0xa60 (2656) - ISETP.GE.AND P1, PT, R15, c[0x0][0x168], PT ;
 Instr 167 @ 0xa70 (2672) - IADD3 R14, R26, -0x10, RZ ;
Basic block id 13 - num instructions 35
 Instr 168 @ 0xa80 (2688) - IADD3 R15, R26, -0x8, RZ ;
 Instr 169 @ 0xa90 (2704) - ISETP.GE.AND P2, PT, R11, c[0x0][0x168], PT ;
 Instr 170 @ 0xaa0 (2720) - ISETP.GE.AND P3, PT, R14, c[0x0][0x168], PT ;
 Instr 171 @ 0xab0 (2736) - ISETP.GE.AND P4, PT, R15, c[0x0][0x168], PT ;
 Instr 172 @ 0xac0 (2752) - @!P0 IMAD.WIDE R14, R9, 0x2, R6.reuse ;
 Instr 173 @ 0xad0 (2768) - ISETP.GE.AND P5, PT, R26, c[0x0][0x168], PT ;
 Instr 174 @ 0xae0 (2784) - IADD3 R11, R11, -0x18, RZ ;
 Instr 175 @ 0xaf0 (2800) - @!P1 IMAD.WIDE R16, R9, 0x4, R6 ;
 Instr 176 @ 0xb00 (2816) - @!P2 IMAD.WIDE R18, R9.reuse, 0x6, R6 ;
 Instr 177 @ 0xb10 (2832) - @!P0 LDG.E.U16.SYS R15, [R14] ;
 Instr 178 @ 0xb20 (2848) - @!P3 IMAD.WIDE R20, R9.reuse, 0x2, R12.reuse ;
 Instr 179 @ 0xb30 (2864) - @!P1 LDG.E.U16.SYS R17, [R16] ;
 Instr 180 @ 0xb40 (2880) - @!P4 IMAD.WIDE R22, R9.reuse, 0x4, R12.reuse ;
 Instr 181 @ 0xb50 (2896) - @!P2 LDG.E.U16.SYS R19, [R18] ;
 Instr 182 @ 0xb60 (2912) - @!P5 IMAD.WIDE R24, R9, 0x6, R12 ;
 Instr 183 @ 0xb70 (2928) - @!P3 LDG.E.U16.SYS R20, [R20] ;
 Instr 184 @ 0xb80 (2944) - @!P4 LDG.E.U16.SYS R22, [R22] ;
 Instr 185 @ 0xb90 (2960) - @!P5 LDG.E.U16.SYS R24, [R24] ;
 Instr 186 @ 0xba0 (2976) - @!P6 STS.U16 [R8+0x20], R27 ;
 Instr 187 @ 0xbb0 (2992) - ISETP.GE.AND P6, PT, R11, c[0x0][0x168], PT ;
 Instr 188 @ 0xbc0 (3008) - @!P6 LDG.E.U16.SYS R27, [R6] ;
 Instr 189 @ 0xbd0 (3024) - IADD3 R29, R8, 0x40, RZ ;
 Instr 190 @ 0xbe0 (3040) - @!P0 STS.U16 [R8+-0x10], R15 ;
 Instr 191 @ 0xbf0 (3056) - @!P1 STS.U16 [R8], R17 ;
 Instr 192 @ 0xc00 (3072) - @!P2 STS.U16 [R8+0x10], R19 ;
 Instr 193 @ 0xc10 (3088) - IADD3 R10, R10, 0x20, RZ ;
 Instr 194 @ 0xc20 (3104) - IMAD.WIDE R6, R9, 0x8, R12 ;
 Instr 195 @ 0xc30 (3120) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 196 @ 0xc40 (3136) - IADD3 R10, R10, 0x20, RZ ;
 Instr 197 @ 0xc50 (3152) - IADD3 R11, R26, 0x20, RZ ;
 Instr 198 @ 0xc60 (3168) - @!P6 STS.U16 [R8+-0x20], R27 ;
 Instr 199 @ 0xc70 (3184) - @!P3 STS.U16 [R29+-0x10], R20 ;
 Instr 200 @ 0xc80 (3200) - @!P4 STS.U16 [R29], R22 ;
 Instr 201 @ 0xc90 (3216) - @!P5 STS.U16 [R29+0x10], R24 ;
 Instr 202 @ 0xca0 (3232) - IADD3 R8, R29, 0x40, RZ ;
Basic block id 14 - num instructions 3
 Instr 203 @ 0xcb0 (3248) - BSYNC B1 ;
 Instr 204 @ 0xcc0 (3264) - ISETP.LT.OR P0, PT, R10, RZ, P0 ;
 Instr 205 @ 0xcd0 (3280) - @!P0 BRA 0xf20 ;
Basic block id 15 - num instructions 16
 Instr 206 @ 0xce0 (3296) - IADD3 R10, R11.reuse, -0x10, RZ ;
 Instr 207 @ 0xcf0 (3312) - IADD3 R12, R11.reuse, -0x8, RZ ;
 Instr 208 @ 0xd00 (3328) - ISETP.GE.AND P1, PT, R10, c[0x0][0x168], PT ;
 Instr 209 @ 0xd10 (3344) - ISETP.GE.AND P2, PT, R12, c[0x0][0x168], PT ;
 Instr 210 @ 0xd20 (3360) - IADD3 R10, R11, -0x18, RZ ;
 Instr 211 @ 0xd30 (3376) - ISETP.GE.AND P0, PT, R10, c[0x0][0x168], PT ;
 Instr 212 @ 0xd40 (3392) - @!P1 IMAD.WIDE R12, R9, 0x2, R6 ;
 Instr 213 @ 0xd50 (3408) - @!P2 IMAD.WIDE R14, R9, 0x4, R6 ;
 Instr 214 @ 0xd60 (3424) - @!P1 LDG.E.U16.SYS R13, [R12] ;
 Instr 215 @ 0xd70 (3440) - @!P2 LDG.E.U16.SYS R15, [R14] ;
 Instr 216 @ 0xd80 (3456) - @!P0 LDG.E.U16.SYS R17, [R6] ;
 Instr 217 @ 0xd90 (3472) - @!P1 STS.U16 [R8+-0x10], R13 ;
 Instr 218 @ 0xda0 (3488) - @!P2 STS.U16 [R8], R15 ;
 Instr 219 @ 0xdb0 (3504) - @!P0 STS.U16 [R8+-0x20], R17 ;
 Instr 220 @ 0xdc0 (3520) - ISETP.GE.AND P0, PT, R11, c[0x0][0x168], PT ;
 Instr 221 @ 0xdd0 (3536) - @P0 BRA 0xf20 ;
Basic block id 16 - num instructions 4
 Instr 222 @ 0xde0 (3552) - IMAD.WIDE R6, R9, 0x6, R6 ;
 Instr 223 @ 0xdf0 (3568) - LDG.E.U16.SYS R7, [R6] ;
 Instr 224 @ 0xe00 (3584) - STS.U16 [R8+0x10], R7 ;
 Instr 225 @ 0xe10 (3600) - BRA 0xf20 ;
Basic block id 17 - num instructions 16
 Instr 226 @ 0xe20 (3616) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x174] ;
 Instr 227 @ 0xe30 (3632) - IMAD.WIDE R6, R3, 0x2, R6 ;
 Instr 228 @ 0xe40 (3648) - IMAD.SHL.U32 R13, R8, 0x8, RZ ;
 Instr 229 @ 0xe50 (3664) - IMAD.WIDE R8, R13.reuse, 0x2, R6 ;
 Instr 230 @ 0xe60 (3680) - LDG.E.U16.SYS R6, [R6] ;
 Instr 231 @ 0xe70 (3696) - IMAD.WIDE R10, R13.reuse, 0x2, R8 ;
 Instr 232 @ 0xe80 (3712) - LDG.E.U16.SYS R8, [R8] ;
 Instr 233 @ 0xe90 (3728) - IMAD.WIDE R12, R13, 0x2, R10 ;
 Instr 234 @ 0xea0 (3744) - LDG.E.U16.SYS R10, [R10] ;
 Instr 235 @ 0xeb0 (3760) - LDG.E.U16.SYS R12, [R12] ;
 Instr 236 @ 0xec0 (3776) - IMAD R14, R3, 0x21, R4 ;
 Instr 237 @ 0xed0 (3792) - IMAD.SHL.U32 R15, R14, 0x2, RZ ;
 Instr 238 @ 0xee0 (3808) - STS.U16 [R15], R6 ;
 Instr 239 @ 0xef0 (3824) - STS.U16 [R15+0x10], R8 ;
 Instr 240 @ 0xf00 (3840) - STS.U16 [R15+0x20], R10 ;
 Instr 241 @ 0xf10 (3856) - STS.U16 [R15+0x30], R12 ;
Basic block id 18 - num instructions 5
 Instr 242 @ 0xf20 (3872) - BSYNC B0 ;
 Instr 243 @ 0xf30 (3888) - IMAD R6, R0, 0x20, R3 ;
 Instr 244 @ 0xf40 (3904) - BAR.SYNC 0x0 ;
 Instr 245 @ 0xf50 (3920) - ISETP.GE.AND P0, PT, R6, c[0x0][0x168], PT ;
 Instr 246 @ 0xf60 (3936) - @P0 EXIT ;
Basic block id 19 - num instructions 3
 Instr 247 @ 0xf70 (3952) - IADD3 R7, R2, 0x20, RZ ;
 Instr 248 @ 0xf80 (3968) - ISETP.GE.AND P0, PT, R7, c[0x0][0x170], PT ;
 Instr 249 @ 0xf90 (3984) - @!P0 BRA 0x15d0 ;
Basic block id 20 - num instructions 2
 Instr 250 @ 0xfa0 (4000) - ISETP.GT.AND P0, PT, R5, 0x3ff, PT ;
 Instr 251 @ 0xfb0 (4016) - @P0 EXIT ;
Basic block id 21 - num instructions 9
 Instr 252 @ 0xfc0 (4032) - IMNMX R5, R4.reuse, 0x18, !PT ;
 Instr 253 @ 0xfd0 (4048) - BMOV.32.CLEAR RZ, B0 ;
 Instr 254 @ 0xfe0 (4064) - BSSY B0, 0x11d0 ;
 Instr 255 @ 0xff0 (4080) - IADD3 R6, -R4, 0x7, R5 ;
 Instr 256 @ 0x1000 (4096) - LEA.HI R5, R6.reuse, 0x1, RZ, 0x1d ;
 Instr 257 @ 0x1010 (4112) - ISETP.GE.U32.AND P1, PT, R6, 0x18, PT ;
 Instr 258 @ 0x1020 (4128) - LOP3.LUT R5, R5, 0x3, RZ, 0xc0, !PT ;
 Instr 259 @ 0x1030 (4144) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
 Instr 260 @ 0x1040 (4160) - @!P0 BRA 0x11c0 ;
Basic block id 22 - num instructions 8
 Instr 261 @ 0x1050 (4176) - S2R R6, SR_CTAID.Z ;
 Instr 262 @ 0x1060 (4192) - IMAD.IADD R10, R2, 0x1, R4 ;
 Instr 263 @ 0x1070 (4208) - IMAD.MOV.U32 R12, RZ, RZ, 0x8 ;
 Instr 264 @ 0x1080 (4224) - IMAD R7, R6, c[0x0][0x17c], R3.reuse ;
 Instr 265 @ 0x1090 (4240) - IMAD R6, R4, 0x21, R3 ;
 Instr 266 @ 0x10a0 (4256) - IMAD R7, R10, c[0x0][0x180], R7 ;
 Instr 267 @ 0x10b0 (4272) - IMAD.SHL.U32 R8, R6, 0x2, RZ ;
 Instr 268 @ 0x10c0 (4288) - IMAD R9, R0, 0x20, R7 ;
Basic block id 23 - num instructions 15
 Instr 269 @ 0x10d0 (4304) - ISETP.GE.AND P0, PT, R10, c[0x0][0x170], PT ;
 Instr 270 @ 0x10e0 (4320) - IADD3 R5, R5, -0x1, RZ ;
 Instr 271 @ 0x10f0 (4336) - IADD3 R4, R4, 0x8, RZ ;
 Instr 272 @ 0x1100 (4352) - IADD3 R10, R10, 0x8, RZ ;
 Instr 273 @ 0x1110 (4368) - @!P0 LDS.U.U16 R6, [R8] ;
 Instr 274 @ 0x1120 (4384) - IADD3 R8, R8, 0x210, RZ ;
 Instr 275 @ 0x1130 (4400) - @!P0 HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 276 @ 0x1140 (4416) - @!P0 FMUL R11, R6, c[0x0][0x19c] ;
 Instr 277 @ 0x1150 (4432) - @!P0 IMAD.MOV.U32 R6, RZ, RZ, 0x2 ;
 Instr 278 @ 0x1160 (4448) - @!P0 F2F.F16.F32 R11, R11 ;
 Instr 279 @ 0x1170 (4464) - @!P0 IMAD.WIDE R6, R9, R6, c[0x0][0x1b0] ;
 Instr 280 @ 0x1180 (4480) - IMAD R9, R12, c[0x0][0x180], R9 ;
 Instr 281 @ 0x1190 (4496) - @!P0 STG.E.U16.SYS [R6], R11 ;
 Instr 282 @ 0x11a0 (4512) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
 Instr 283 @ 0x11b0 (4528) - @P0 BRA 0x10d0 ;
Basic block id 24 - num instructions 2
 Instr 284 @ 0x11c0 (4544) - BSYNC B0 ;
 Instr 285 @ 0x11d0 (4560) - @!P1 EXIT ;
Basic block id 25 - num instructions 17
 Instr 286 @ 0x11e0 (4576) - S2R R6, SR_CTAID.Z ;
 Instr 287 @ 0x11f0 (4592) - IMAD.IADD R10, R2, 0x1, R4 ;
 Instr 288 @ 0x1200 (4608) - IADD3 R2, R10.reuse, 0x18, RZ ;
 Instr 289 @ 0x1210 (4624) - IADD3 R8, R10, 0x8, RZ ;
 Instr 290 @ 0x1220 (4640) - IMAD R11, R6, c[0x0][0x17c], R3.reuse ;
 Instr 291 @ 0x1230 (4656) - IADD3 R6, R10, 0x10, RZ ;
 Instr 292 @ 0x1240 (4672) - IMAD R3, R4, 0x21, R3 ;
 Instr 293 @ 0x1250 (4688) - IMAD R5, R2, c[0x0][0x180], R11.reuse ;
 Instr 294 @ 0x1260 (4704) - IMAD R9, R6, c[0x0][0x180], R11.reuse ;
 Instr 295 @ 0x1270 (4720) - IMAD R7, R10, c[0x0][0x180], R11 ;
 Instr 296 @ 0x1280 (4736) - IMAD R11, R8, c[0x0][0x180], R11 ;
 Instr 297 @ 0x1290 (4752) - IMAD R12, R0.reuse, 0x20, R5 ;
 Instr 298 @ 0x12a0 (4768) - IMAD R14, R0.reuse, 0x20, R9 ;
 Instr 299 @ 0x12b0 (4784) - IMAD R13, R0.reuse, 0x20, R7 ;
 Instr 300 @ 0x12c0 (4800) - IMAD R15, R0, 0x20, R11 ;
 Instr 301 @ 0x12d0 (4816) - IADD3 R0, R4, -0x20, RZ ;
 Instr 302 @ 0x12e0 (4832) - LEA R11, R3, 0x420, 0x1 ;
Basic block id 26 - num instructions 45
 Instr 303 @ 0x12f0 (4848) - IADD3 R2, R10.reuse, 0x8, RZ ;
 Instr 304 @ 0x1300 (4864) - IADD3 R3, R10, 0x10, RZ ;
 Instr 305 @ 0x1310 (4880) - IADD3 R4, R10.reuse, 0x18, RZ ;
 Instr 306 @ 0x1320 (4896) - ISETP.GE.AND P0, PT, R10, c[0x0][0x170], PT ;
 Instr 307 @ 0x1330 (4912) - ISETP.GE.AND P1, PT, R2, c[0x0][0x170], PT ;
 Instr 308 @ 0x1340 (4928) - ISETP.GE.AND P2, PT, R3, c[0x0][0x170], PT ;
 Instr 309 @ 0x1350 (4944) - ISETP.GE.AND P3, PT, R4, c[0x0][0x170], PT ;
 Instr 310 @ 0x1360 (4960) - IADD3 R0, R0, 0x20, RZ ;
 Instr 311 @ 0x1370 (4976) - IADD3 R10, R10, 0x20, RZ ;
 Instr 312 @ 0x1380 (4992) - @!P0 LDS.U.U16 R2, [R11+-0x420] ;
 Instr 313 @ 0x1390 (5008) - @!P1 IMAD.MOV.U32 R8, RZ, RZ, 0x2 ;
 Instr 314 @ 0x13a0 (5024) - @!P1 LDS.U.U16 R3, [R11+-0x210] ;
 Instr 315 @ 0x13b0 (5040) - @!P2 IMAD.MOV.U32 R7, RZ, RZ, 0x2 ;
 Instr 316 @ 0x13c0 (5056) - @!P3 IMAD.MOV.U32 R9, RZ, RZ, 0x2 ;
 Instr 317 @ 0x13d0 (5072) - @!P2 LDS.U.U16 R4, [R11] ;
 Instr 318 @ 0x13e0 (5088) - @!P3 LDS.U.U16 R6, [R11+0x210] ;
 Instr 319 @ 0x13f0 (5104) - IADD3 R11, R11, 0x840, RZ ;
 Instr 320 @ 0x1400 (5120) - @!P0 HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
 Instr 321 @ 0x1410 (5136) - @!P1 HADD2.F32 R3, R3.H0_H0, -RZ.H0_H0 ;
 Instr 322 @ 0x1420 (5152) - @!P2 HADD2.F32 R5, R4.H0_H0, -RZ.H0_H0 ;
 Instr 323 @ 0x1430 (5168) - @!P0 FMUL R2, R2, c[0x0][0x19c] ;
 Instr 324 @ 0x1440 (5184) - @!P3 HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 325 @ 0x1450 (5200) - @!P1 FMUL R4, R3, c[0x0][0x19c] ;
 Instr 326 @ 0x1460 (5216) - @!P0 F2F.F16.F32 R17, R2 ;
 Instr 327 @ 0x1470 (5232) - @!P2 FMUL R16, R5, c[0x0][0x19c] ;
 Instr 328 @ 0x1480 (5248) - @!P3 FMUL R18, R6, c[0x0][0x19c] ;
 Instr 329 @ 0x1490 (5264) - @!P0 IMAD.MOV.U32 R6, RZ, RZ, 0x2 ;
 Instr 330 @ 0x14a0 (5280) - @!P1 F2F.F16.F32 R19, R4 ;
 Instr 331 @ 0x14b0 (5296) - @!P0 IMAD.WIDE R2, R13, R6, c[0x0][0x1b0] ;
 Instr 332 @ 0x14c0 (5312) - @!P2 IMAD.WIDE R6, R14, R7, c[0x0][0x1b0] ;
 Instr 333 @ 0x14d0 (5328) - @!P2 F2F.F16.F32 R21, R16 ;
 Instr 334 @ 0x14e0 (5344) - @!P1 IMAD.WIDE R4, R15, R8, c[0x0][0x1b0] ;
 Instr 335 @ 0x14f0 (5360) - @!P0 STG.E.U16.SYS [R2], R17 ;
 Instr 336 @ 0x1500 (5376) - ISETP.GE.AND P0, PT, R0, RZ, PT ;
 Instr 337 @ 0x1510 (5392) - @!P3 IMAD.WIDE R8, R12, R9, c[0x0][0x1b0] ;
 Instr 338 @ 0x1520 (5408) - @!P3 F2F.F16.F32 R23, R18 ;
 Instr 339 @ 0x1530 (5424) - @!P1 STG.E.U16.SYS [R4], R19 ;
 Instr 340 @ 0x1540 (5440) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x180] ;
 Instr 341 @ 0x1550 (5456) - @!P2 STG.E.U16.SYS [R6], R21 ;
 Instr 342 @ 0x1560 (5472) - IMAD R13, R16.reuse, 0x20, R13 ;
 Instr 343 @ 0x1570 (5488) - IMAD R12, R16.reuse, 0x20, R12 ;
 Instr 344 @ 0x1580 (5504) - IMAD R14, R16.reuse, 0x20, R14 ;
 Instr 345 @ 0x1590 (5520) - IMAD R15, R16, 0x20, R15 ;
 Instr 346 @ 0x15a0 (5536) - @!P3 STG.E.U16.SYS [R8], R23 ;
 Instr 347 @ 0x15b0 (5552) - @!P0 BRA 0x12f0 ;
Basic block id 27 - num instructions 1
 Instr 348 @ 0x15c0 (5568) - EXIT ;
Basic block id 28 - num instructions 34
 Instr 349 @ 0x15d0 (5584) - IMAD R3, R4, 0x21, R3 ;
 Instr 350 @ 0x15e0 (5600) - S2R R9, SR_CTAID.Z ;
 Instr 351 @ 0x15f0 (5616) - IMAD.IADD R13, R2, 0x1, R4 ;
 Instr 352 @ 0x1600 (5632) - IMAD.SHL.U32 R8, R3, 0x2, RZ ;
 Instr 353 @ 0x1610 (5648) - LDS.U.U16 R3, [R8+0x210] ;
 Instr 354 @ 0x1620 (5664) - LDS.U.U16 R0, [R8] ;
 Instr 355 @ 0x1630 (5680) - LDS.U.U16 R5, [R8+0x420] ;
 Instr 356 @ 0x1640 (5696) - LDS.U.U16 R7, [R8+0x630] ;
 Instr 357 @ 0x1650 (5712) - IMAD R6, R9, c[0x0][0x17c], R6 ;
 Instr 358 @ 0x1660 (5728) - IMAD.MOV.U32 R9, RZ, RZ, c[0x0][0x180] ;
 Instr 359 @ 0x1670 (5744) - IMAD R2, R13, c[0x0][0x180], R6 ;
 Instr 360 @ 0x1680 (5760) - IMAD.SHL.U32 R9, R9, 0x8, RZ ;
 Instr 361 @ 0x1690 (5776) - HADD2.F32 R3, R3.H0_H0, -RZ.H0_H0 ;
 Instr 362 @ 0x16a0 (5792) - HADD2.F32 R0, R0.H0_H0, -RZ.H0_H0 ;
 Instr 363 @ 0x16b0 (5808) - HADD2.F32 R5, R5.H0_H0, -RZ.H0_H0 ;
 Instr 364 @ 0x16c0 (5824) - FMUL R10, R3, c[0x0][0x19c] ;
 Instr 365 @ 0x16d0 (5840) - IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 366 @ 0x16e0 (5856) - HADD2.F32 R7, R7.H0_H0, -RZ.H0_H0 ;
 Instr 367 @ 0x16f0 (5872) - FMUL R0, R0, c[0x0][0x19c] ;
 Instr 368 @ 0x1700 (5888) - IMAD.WIDE R2, R2, R3, c[0x0][0x1b0] ;
 Instr 369 @ 0x1710 (5904) - F2F.F16.F32 R13, R10 ;
 Instr 370 @ 0x1720 (5920) - FMUL R12, R5, c[0x0][0x19c] ;
 Instr 371 @ 0x1730 (5936) - IMAD.WIDE R4, R9, 0x2, R2 ;
 Instr 372 @ 0x1740 (5952) - F2F.F16.F32 R11, R0 ;
 Instr 373 @ 0x1750 (5968) - FMUL R0, R7, c[0x0][0x19c] ;
 Instr 374 @ 0x1760 (5984) - F2F.F16.F32 R15, R12 ;
 Instr 375 @ 0x1770 (6000) - IMAD.WIDE R6, R9, 0x2, R4 ;
 Instr 376 @ 0x1780 (6016) - IMAD.WIDE R8, R9, 0x2, R6 ;
 Instr 377 @ 0x1790 (6032) - F2F.F16.F32 R17, R0 ;
 Instr 378 @ 0x17a0 (6048) - STG.E.U16.SYS [R2], R11 ;
 Instr 379 @ 0x17b0 (6064) - STG.E.U16.SYS [R4], R13 ;
 Instr 380 @ 0x17c0 (6080) - STG.E.U16.SYS [R6], R15 ;
 Instr 381 @ 0x17d0 (6096) - STG.E.U16.SYS [R8], R17 ;
 Instr 382 @ 0x17e0 (6112) - EXIT ;
Basic block id 29 - num instructions 1
 Instr 383 @ 0x17f0 (6128) - BRA 0x17f0;
inspecting void cudnn::engines_precompiled::nchwToNhwcKernel<__half, __half, float, false, true, (cudnnKernelDataType_t)0>(cudnn::engines_precompiled::nchw2nhwc_params_t<float>, __half const*, __half*) - number basic blocks 30
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 16 @ 0x100 (256) - S2R R7, SR_CTAID.Z ;
Inject count_instr before - Instr 25 @ 0x190 (400) - ISETP.GT.AND P0, PT, R5, 0x3ff, PT ;
Inject count_instr before - Instr 27 @ 0x1b0 (432) - IMNMX R9, R4.reuse, 0x18, !PT ;
Inject count_instr before - Instr 36 @ 0x240 (576) - IMAD.SHL.U32 R9, R9, 0x8, RZ ;
Inject count_instr before - Instr 39 @ 0x270 (624) - IMAD R10, R3, 0x21, R4.reuse ;
Inject count_instr before - Instr 42 @ 0x2a0 (672) - ISETP.GE.AND P0, PT, R13, c[0x0][0x168], PT ;
Inject count_instr before - Instr 53 @ 0x350 (848) - BSYNC B1 ;
Inject count_instr before - Instr 55 @ 0x370 (880) - IADD3 R10, R12, -0x20, RZ ;
Inject count_instr before - Instr 67 @ 0x430 (1072) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 68 @ 0x440 (1088) - IADD3 R13, R11.reuse, -0x8, RZ ;
Inject count_instr before - Instr 152 @ 0x980 (2432) - BSYNC B1 ;
Inject count_instr before - Instr 158 @ 0x9e0 (2528) - IADD3 R12, R11, 0x8, RZ ;
Inject count_instr before - Instr 168 @ 0xa80 (2688) - IADD3 R15, R26, -0x8, RZ ;
Inject count_instr before - Instr 203 @ 0xcb0 (3248) - BSYNC B1 ;
Inject count_instr before - Instr 206 @ 0xce0 (3296) - IADD3 R10, R11.reuse, -0x10, RZ ;
Inject count_instr before - Instr 222 @ 0xde0 (3552) - IMAD.WIDE R6, R9, 0x6, R6 ;
Inject count_instr before - Instr 226 @ 0xe20 (3616) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x174] ;
Inject count_instr before - Instr 242 @ 0xf20 (3872) - BSYNC B0 ;
Inject count_instr before - Instr 247 @ 0xf70 (3952) - IADD3 R7, R2, 0x20, RZ ;
Inject count_instr before - Instr 250 @ 0xfa0 (4000) - ISETP.GT.AND P0, PT, R5, 0x3ff, PT ;
Inject count_instr before - Instr 252 @ 0xfc0 (4032) - IMNMX R5, R4.reuse, 0x18, !PT ;
Inject count_instr before - Instr 261 @ 0x1050 (4176) - S2R R6, SR_CTAID.Z ;
Inject count_instr before - Instr 269 @ 0x10d0 (4304) - ISETP.GE.AND P0, PT, R10, c[0x0][0x170], PT ;
Inject count_instr before - Instr 284 @ 0x11c0 (4544) - BSYNC B0 ;
Inject count_instr before - Instr 286 @ 0x11e0 (4576) - S2R R6, SR_CTAID.Z ;
Inject count_instr before - Instr 303 @ 0x12f0 (4848) - IADD3 R2, R10.reuse, 0x8, RZ ;
Inject count_instr before - Instr 348 @ 0x15c0 (5568) - EXIT ;
Inject count_instr before - Instr 349 @ 0x15d0 (5584) - IMAD R3, R4, 0x21, R3 ;
Inject count_instr before - Instr 383 @ 0x17f0 (6128) - BRA 0x17f0;
kernel 103 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 1568,  kernel instructions 1505616, total instructions 3003468
kernel 104 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 128,  kernel instructions 146944, total instructions 3150412
Function sm75_xmma_fprop_implicit_gemm_indexed_wo_smem_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna2_alignc8_execute_kernel__5x_cudnn
Basic block id 0 - num instructions 8
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2UR UR5, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x660], PT ;
 Instr 3 @ 0x30 (48) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x318], PT ;
 Instr 4 @ 0x40 (64) - S2UR UR4, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - IMAD.U32 R4, RZ, RZ, UR5 ;
 Instr 6 @ 0x60 (96) - IMAD.U32 R95, RZ, RZ, UR4 ;
 Instr 7 @ 0x70 (112) - @!P0 BRA 0x320 ;
Basic block id 1 - num instructions 14
 Instr 8 @ 0x80 (128) - IMAD.MOV.U32 R6, RZ, RZ, -0x1 ;
 Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x344] ;
 Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 11 @ 0xb0 (176) - SHF.L.U32 R6, R6, c[0x0][0x65c], RZ ;
 Instr 12 @ 0xc0 (192) - IMAD.MOV.U32 R7, RZ, RZ, c[0x0][0x65c] ;
 Instr 13 @ 0xd0 (208) - SEL R8, R3, c[0x0][0x340], !P1 ;
 Instr 14 @ 0xe0 (224) - LOP3.LUT R9, R95, R6, RZ, 0xf3, !PT ;
 Instr 15 @ 0xf0 (240) - SHF.L.U32 R0, R0, c[0x0][0x65c], RZ ;
 Instr 16 @ 0x100 (256) - ISETP.GE.U32.AND P0, PT, R9, R8, PT ;
 Instr 17 @ 0x110 (272) - LOP3.LUT P2, RZ, R0, R95, RZ, 0xc0, !PT ;
 Instr 18 @ 0x120 (288) - SEL R3, R3, c[0x0][0x340], P1 ;
 Instr 19 @ 0x130 (304) - LOP3.LUT R6, RZ, R6, RZ, 0x33, !PT ;
 Instr 20 @ 0x140 (320) - SEL R5, RZ, 0x1, !P2 ;
 Instr 21 @ 0x150 (336) - @!P0 BRA 0x230 ;
Basic block id 2 - num instructions 1
 Instr 22 @ 0x160 (352) - MOV R0, 0x1 ;
Basic block id 3 - num instructions 3
 Instr 23 @ 0x170 (368) - ISETP.NE.AND P2, PT, R9, R8, PT ;
 Instr 24 @ 0x180 (384) - ISETP.EQ.AND P0, PT, R7, 0x2, PT ;
 Instr 25 @ 0x190 (400) - @!P2 BRA P0, 0x280 ;
Basic block id 4 - num instructions 9
 Instr 26 @ 0x1a0 (416) - SHF.R.U32.HI R6, RZ, 0x1, R6 ;
 Instr 27 @ 0x1b0 (432) - IADD3 R7, R7, -0x1, RZ ;
 Instr 28 @ 0x1c0 (448) - LOP3.LUT R9, R6, R95, RZ, 0xfc, !PT ;
 Instr 29 @ 0x1d0 (464) - SHF.L.U32 R2, R0, R7, RZ ;
 Instr 30 @ 0x1e0 (480) - ISETP.GE.U32.AND P0, PT, R9, R8, PT ;
 Instr 31 @ 0x1f0 (496) - LOP3.LUT P3, RZ, R2, R95, RZ, 0xc0, !PT ;
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P2, PT, R5, RZ, PT ;
 Instr 33 @ 0x210 (528) - @P3 SEL R5, RZ, 0x1, P2 ;
 Instr 34 @ 0x220 (544) - @P0 BRA 0x170 ;
Basic block id 5 - num instructions 5
 Instr 35 @ 0x230 (560) - LOP3.LUT R0, R6, R95, RZ, 0xc0, !PT ;
 Instr 36 @ 0x240 (576) - IMAD R0, R0, R3, R4 ;
 Instr 37 @ 0x250 (592) - LOP3.LUT R95, R95, R6, R0.reuse, 0xb8, !PT ;
 Instr 38 @ 0x260 (608) - SHF.R.U32.HI R7, RZ, R7, R0 ;
 Instr 39 @ 0x270 (624) - BRA 0x2e0 ;
Basic block id 6 - num instructions 6
 Instr 40 @ 0x280 (640) - LOP3.LUT R0, R6, R95, RZ, 0xc0, !PT ;
 Instr 41 @ 0x290 (656) - LOP3.LUT R95, R95, R6, RZ, 0x30, !PT ;
 Instr 42 @ 0x2a0 (672) - IMAD R0, R0, R3, R4 ;
 Instr 43 @ 0x2b0 (688) - IMAD.WIDE.U32 R6, R0.reuse, 0x55555556, RZ ;
 Instr 44 @ 0x2c0 (704) - IADD3 R95, R0, R95, RZ ;
 Instr 45 @ 0x2d0 (720) - IMAD R95, R7, -0x3, R95 ;
Basic block id 7 - num instructions 4
 Instr 46 @ 0x2e0 (736) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
 Instr 47 @ 0x2f0 (752) - IMAD.MOV.U32 R4, RZ, RZ, R7 ;
 Instr 48 @ 0x300 (768) - LOP3.LUT R0, RZ, R4, RZ, 0x33, !PT ;
 Instr 49 @ 0x310 (784) - @P0 IMAD.IADD R4, R0, 0x1, R3 ;
Basic block id 8 - num instructions 19
 Instr 50 @ 0x320 (800) - S2R R90, SR_TID.X ;
 Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 52 @ 0x340 (832) - SEL R89, R4, R95, !P1 ;
 Instr 53 @ 0x350 (848) - BMOV.32.CLEAR RZ, B0 ;
 Instr 54 @ 0x360 (864) - SEL R95, R95, R4, !P1 ;
 Instr 55 @ 0x370 (880) - BSSY B0, 0x650 ;
 Instr 56 @ 0x380 (896) - ISETP.NE.AND P0, PT, R0, c[0x0][0x414], PT ;
 Instr 57 @ 0x390 (912) - IMAD.MOV.U32 R3, RZ, RZ, R95 ;
 Instr 58 @ 0x3a0 (928) - @P0 IMAD.HI.U32 R4, R95, c[0x0][0x40c], RZ ;
 Instr 59 @ 0x3b0 (944) - @P0 SHF.R.U32.HI R3, RZ, c[0x0][0x410], R4 ;
 Instr 60 @ 0x3c0 (960) - IMAD R2, R89, 0x80, R90 ;
 Instr 61 @ 0x3d0 (976) - IMAD R96, R3, c[0x0][0x1a8], RZ ;
 Instr 62 @ 0x3e0 (992) - ISETP.GE.AND P1, PT, R2, c[0x0][0x3c4], PT ;
 Instr 63 @ 0x3f0 (1008) - IMAD.WIDE R96, R96, 0x2, RZ ;
 Instr 64 @ 0x400 (1024) - @P1 IADD3 R5, R0.reuse, c[0x0][0x19c], RZ ;
 Instr 65 @ 0x410 (1040) - @P1 IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 66 @ 0x420 (1056) - @P1 IADD3 R6, R0.reuse, c[0x0][0x1a0], RZ ;
 Instr 67 @ 0x430 (1072) - @P1 IADD3 R7, R0, c[0x0][0x1a4], RZ ;
 Instr 68 @ 0x440 (1088) - @P1 BRA 0x640 ;
Basic block id 9 - num instructions 31
 Instr 69 @ 0x450 (1104) - ISETP.NE.AND P3, PT, R0.reuse, c[0x0][0x3c8], PT ;
 Instr 70 @ 0x460 (1120) - ISETP.NE.AND P2, PT, R0.reuse, c[0x0][0x3cc], PT ;
 Instr 71 @ 0x470 (1136) - MOV R5, RZ ;
 Instr 72 @ 0x480 (1152) - ISETP.NE.AND P1, PT, R0, c[0x0][0x1b4], PT ;
 Instr 73 @ 0x490 (1168) - MOV R9, RZ ;
 Instr 74 @ 0x4a0 (1184) - MOV R7, RZ ;
 Instr 75 @ 0x4b0 (1200) - @P3 IMAD.HI.U32 R4, R2, c[0x0][0x3dc], RZ ;
 Instr 76 @ 0x4c0 (1216) - @P3 SHF.R.U32.HI R4, RZ, c[0x0][0x3e0], R4 ;
 Instr 77 @ 0x4d0 (1232) - @P3 IADD3 R3, -R4, RZ, RZ ;
 Instr 78 @ 0x4e0 (1248) - @P3 IMAD R5, R3, c[0x0][0x3c8], R2 ;
 Instr 79 @ 0x4f0 (1264) - @P3 IMAD.MOV.U32 R2, RZ, RZ, R4 ;
 Instr 80 @ 0x500 (1280) - @P2 IMAD.HI.U32 R6, R5, c[0x0][0x3e4], RZ ;
 Instr 81 @ 0x510 (1296) - IMAD R2, R2, c[0x0][0x230], RZ ;
 Instr 82 @ 0x520 (1312) - @P2 SHF.R.U32.HI R6, RZ, c[0x0][0x3e8], R6 ;
 Instr 83 @ 0x530 (1328) - @P2 IADD3 R0, -R6, RZ, RZ ;
 Instr 84 @ 0x540 (1344) - @P2 IMAD R9, R0, c[0x0][0x3cc], R5 ;
 Instr 85 @ 0x550 (1360) - @P2 IMAD.MOV.U32 R5, RZ, RZ, R6 ;
 Instr 86 @ 0x560 (1376) - MOV R6, c[0x0][0x274] ;
 Instr 87 @ 0x570 (1392) - @P1 IMAD.HI.U32 R3, R9, c[0x0][0x3ec], RZ ;
 Instr 88 @ 0x580 (1408) - IMAD R5, R5, R6, -c[0x0][0x25c] ;
 Instr 89 @ 0x590 (1424) - @P1 SHF.R.U32.HI R3, RZ, c[0x0][0x3f0], R3 ;
 Instr 90 @ 0x5a0 (1440) - MOV R6, c[0x0][0x278] ;
 Instr 91 @ 0x5b0 (1456) - @P1 IADD3 R0, -R3, RZ, RZ ;
 Instr 92 @ 0x5c0 (1472) - @P1 IMAD R7, R0, c[0x0][0x1b4], R9 ;
 Instr 93 @ 0x5d0 (1488) - @P1 MOV R9, R3 ;
 Instr 94 @ 0x5e0 (1504) - IMAD R3, R5, c[0x0][0x234], R2 ;
 Instr 95 @ 0x5f0 (1520) - MOV R0, c[0x0][0x27c] ;
 Instr 96 @ 0x600 (1536) - IMAD R6, R9, R6, -c[0x0][0x264] ;
 Instr 97 @ 0x610 (1552) - IMAD R7, R7, R0, -c[0x0][0x26c] ;
 Instr 98 @ 0x620 (1568) - IMAD R4, R6, c[0x0][0x238], R3 ;
 Instr 99 @ 0x630 (1584) - IMAD R4, R7, c[0x0][0x23c], R4 ;
Basic block id 10 - num instructions 9
 Instr 100 @ 0x640 (1600) - BSYNC B0 ;
 Instr 101 @ 0x650 (1616) - STS.128 [R90.X16], R4 ;
 Instr 102 @ 0x660 (1632) - ISETP.GE.U32.AND P1, PT, R90, c[0x0][0x3d0], PT ;
 Instr 103 @ 0x670 (1648) - BMOV.32.CLEAR RZ, B0 ;
 Instr 104 @ 0x680 (1664) - BSSY B0, 0x880 ;
 Instr 105 @ 0x690 (1680) - IMAD.MOV.U32 R88, RZ, RZ, RZ ;
 Instr 106 @ 0x6a0 (1696) - MOV R8, RZ ;
 Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R13, RZ, RZ, -0x1 ;
 Instr 108 @ 0x6c0 (1728) - @P1 BRA 0x870 ;
Basic block id 11 - num instructions 26
 Instr 109 @ 0x6d0 (1744) - MOV R0, c[0x0][0x3d4] ;
 Instr 110 @ 0x6e0 (1760) - CS2R R14, SRZ ;
 Instr 111 @ 0x6f0 (1776) - MOV R4, R90 ;
 Instr 112 @ 0x700 (1792) - ISETP.NE.AND P1, PT, R0, 0x1, PT ;
 Instr 113 @ 0x710 (1808) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x3d8] ;
 Instr 114 @ 0x720 (1824) - MOV R8, RZ ;
 Instr 115 @ 0x730 (1840) - ISETP.NE.AND P2, PT, R0, 0x1, PT ;
 Instr 116 @ 0x740 (1856) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x1a8] ;
 Instr 117 @ 0x750 (1872) - @P1 IMAD.HI.U32 R2, R90, c[0x0][0x3f4], RZ ;
 Instr 118 @ 0x760 (1888) - @P1 SHF.R.U32.HI R4, RZ, c[0x0][0x3f8], R2 ;
 Instr 119 @ 0x770 (1904) - @P1 IADD3 R3, -R4.reuse, RZ, RZ ;
 Instr 120 @ 0x780 (1920) - IMAD R13, R4, c[0x0][0x280], RZ ;
 Instr 121 @ 0x790 (1936) - @P1 IMAD R14, R3, c[0x0][0x3d4], R90 ;
 Instr 122 @ 0x7a0 (1952) - ISETP.NE.AND P1, PT, R0, 0x1, PT ;
 Instr 123 @ 0x7b0 (1968) - @P2 IMAD.HI.U32 R3, R14, c[0x0][0x3fc], RZ ;
 Instr 124 @ 0x7c0 (1984) - @P2 SHF.R.U32.HI R3, RZ, c[0x0][0x400], R3 ;
 Instr 125 @ 0x7d0 (2000) - @P2 IADD3 R5, -R3, RZ, RZ ;
 Instr 126 @ 0x7e0 (2016) - @P2 IMAD R15, R5, c[0x0][0x3d8], R14 ;
 Instr 127 @ 0x7f0 (2032) - @P2 MOV R14, R3 ;
 Instr 128 @ 0x800 (2048) - @P1 IMAD.HI.U32 R2, R15, c[0x0][0x404], RZ ;
 Instr 129 @ 0x810 (2064) - IMAD R14, R14, c[0x0][0x284], RZ ;
 Instr 130 @ 0x820 (2080) - @P1 SHF.R.U32.HI R2, RZ, c[0x0][0x408], R2 ;
 Instr 131 @ 0x830 (2096) - @P1 IMAD.MOV R0, RZ, RZ, -R2 ;
 Instr 132 @ 0x840 (2112) - @P1 IMAD R8, R0, c[0x0][0x1a8], R15 ;
 Instr 133 @ 0x850 (2128) - @P1 MOV R15, R2 ;
 Instr 134 @ 0x860 (2144) - IMAD R15, R15, c[0x0][0x288], RZ ;
Basic block id 12 - num instructions 46
 Instr 135 @ 0x870 (2160) - BSYNC B0 ;
 Instr 136 @ 0x880 (2176) - SHF.R.S32.HI R3, RZ, 0x1f, R90 ;
 Instr 137 @ 0x890 (2192) - @P0 IMAD.HI.U32 R4, R95, c[0x0][0x40c], RZ ;
 Instr 138 @ 0x8a0 (2208) - LOP3.LUT R38, R90, 0x1c, RZ, 0xc0, !PT ;
 Instr 139 @ 0x8b0 (2224) - CS2R R10, SRZ ;
 Instr 140 @ 0x8c0 (2240) - LEA.HI R0, R3, R90, RZ, 0x2 ;
 Instr 141 @ 0x8d0 (2256) - IMAD.MOV.U32 R2, RZ, RZ, R95 ;
 Instr 142 @ 0x8e0 (2272) - CS2R R16, SRZ ;
 Instr 143 @ 0x8f0 (2288) - IMAD R7, R13, c[0x0][0x234], R8 ;
 Instr 144 @ 0x900 (2304) - SHF.R.S32.HI R5, RZ, 0x2, R0 ;
 Instr 145 @ 0x910 (2320) - CS2R R8, SRZ ;
 Instr 146 @ 0x920 (2336) - @P0 SHF.R.U32.HI R2, RZ, c[0x0][0x410], R4 ;
 Instr 147 @ 0x930 (2352) - IMAD R12, R14, c[0x0][0x238], R7 ;
 Instr 148 @ 0x940 (2368) - LEA.HI R3, R0, R5, RZ, 0x1 ;
 Instr 149 @ 0x950 (2384) - CS2R R18, SRZ ;
 Instr 150 @ 0x960 (2400) - LOP3.LUT R7, R90, 0x60, RZ, 0xc0, !PT ;
 Instr 151 @ 0x970 (2416) - @P0 IMAD.MOV R4, RZ, RZ, -R2 ;
 Instr 152 @ 0x980 (2432) - LOP3.LUT R3, R3, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 153 @ 0x990 (2448) - IMAD R12, R15, c[0x0][0x23c], R12 ;
 Instr 154 @ 0x9a0 (2464) - SHF.R.U32.HI R7, RZ, 0x1, R7 ;
 Instr 155 @ 0x9b0 (2480) - CS2R R20, SRZ ;
 Instr 156 @ 0x9c0 (2496) - CS2R R22, SRZ ;
 Instr 157 @ 0x9d0 (2512) - IMAD.IADD R3, R5, 0x1, -R3 ;
 Instr 158 @ 0x9e0 (2528) - LEA.HI R38, R38, R7, RZ, 0x1e ;
 Instr 159 @ 0x9f0 (2544) - @P0 IMAD R5, R4, c[0x0][0x414], R95 ;
 Instr 160 @ 0xa00 (2560) - LOP3.LUT R4, R90, 0x18, RZ, 0xc0, !PT ;
 Instr 161 @ 0xa10 (2576) - STS.128 [R90.X16+0x800], R12 ;
 Instr 162 @ 0xa20 (2592) - CS2R R6, SRZ ;
 Instr 163 @ 0xa30 (2608) - @P0 IMAD.SHL.U32 R88, R5, 0x20, RZ ;
 Instr 164 @ 0xa40 (2624) - LEA.HI R3, R4, R3, RZ, 0x1f ;
 Instr 165 @ 0xa50 (2640) - CS2R R24, SRZ ;
 Instr 166 @ 0xa60 (2656) - ISETP.LE.AND P0, PT, RZ, c[0x0][0x648], PT ;
 Instr 167 @ 0xa70 (2672) - CS2R R4, SRZ ;
 Instr 168 @ 0xa80 (2688) - CS2R R26, SRZ ;
 Instr 169 @ 0xa90 (2704) - IMAD.IADD R88, R3, 0x1, R88 ;
 Instr 170 @ 0xaa0 (2720) - LOP3.LUT R3, R0, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 171 @ 0xab0 (2736) - CS2R R28, SRZ ;
 Instr 172 @ 0xac0 (2752) - CS2R R30, SRZ ;
 Instr 173 @ 0xad0 (2768) - CS2R R32, SRZ ;
 Instr 174 @ 0xae0 (2784) - CS2R R34, SRZ ;
 Instr 175 @ 0xaf0 (2800) - IMAD.IADD R3, R90, 0x1, -R3 ;
 Instr 176 @ 0xb00 (2816) - CS2R R12, SRZ ;
 Instr 177 @ 0xb10 (2832) - CS2R R14, SRZ ;
 Instr 178 @ 0xb20 (2848) - IMAD R37, R88, c[0x0][0x3d0], R3 ;
 Instr 179 @ 0xb30 (2864) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 180 @ 0xb40 (2880) - @!P0 BRA 0x2210 ;
Basic block id 13 - num instructions 26
 Instr 181 @ 0xb50 (2896) - LDS.U.128 R72, [R38.X16] ;
 Instr 182 @ 0xb60 (2912) - IMAD R99, R2, c[0x0][0x3d0], RZ ;
 Instr 183 @ 0xb70 (2928) - SHF.R.S32.HI R2, RZ, 0x1f, R37 ;
 Instr 184 @ 0xb80 (2944) - IMAD.SHL.U32 R98, R37, 0x2, RZ ;
 Instr 185 @ 0xb90 (2960) - ULDC UR4, c[0x0][0x648] ;
 Instr 186 @ 0xba0 (2976) - IMAD R99, R99, c[0x0][0x1b8], RZ ;
 Instr 187 @ 0xbb0 (2992) - SHF.L.U64.HI R2, R37, 0x1, R2 ;
 Instr 188 @ 0xbc0 (3008) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 189 @ 0xbd0 (3024) - LDS.U.128 R68, [R38.X16+0x80] ;
 Instr 190 @ 0xbe0 (3040) - LOP3.LUT R91, R0, 0xffffffc, RZ, 0xc0, !PT ;
 Instr 191 @ 0xbf0 (3056) - LEA R98, P0, R99, R98, 0x1 ;
 Instr 192 @ 0xc00 (3072) - SHF.R.S32.HI R36, RZ, 0x1f, R99 ;
 Instr 193 @ 0xc10 (3088) - IMAD.IADD R91, R90, 0x1, -R91 ;
 Instr 194 @ 0xc20 (3104) - IADD3 R94, -R3, c[0x0][0x3d0], RZ ;
 Instr 195 @ 0xc30 (3120) - LDS.U.128 R64, [R38.X16+0x400] ;
 Instr 196 @ 0xc40 (3136) - LEA.HI.X R99, R99, R2, R36, 0x1, P0 ;
 Instr 197 @ 0xc50 (3152) - IMAD.U32 R92, RZ, RZ, UR4 ;
 Instr 198 @ 0xc60 (3168) - IADD3 R98, P0, R98, c[0x0][0x168], RZ ;
 Instr 199 @ 0xc70 (3184) - IADD3 R88, -R88, c[0x0][0x1b8], RZ ;
 Instr 200 @ 0xc80 (3200) - ISETP.GT.AND P6, PT, R94.reuse, 0xc, PT ;
 Instr 201 @ 0xc90 (3216) - LDS.U.128 R60, [R38.X16+0x480] ;
 Instr 202 @ 0xca0 (3232) - ISETP.GT.AND P5, PT, R94.reuse, 0x8, PT ;
 Instr 203 @ 0xcb0 (3248) - ISETP.GT.AND P4, PT, R94.reuse, 0x4, PT ;
 Instr 204 @ 0xcc0 (3264) - ISETP.GT.AND P3, PT, R94, RZ, PT ;
 Instr 205 @ 0xcd0 (3280) - IADD3 R93, R90, 0x10, RZ ;
 Instr 206 @ 0xce0 (3296) - IADD3.X R99, R99, c[0x0][0x16c], RZ, P0, !PT ;
Basic block id 14 - num instructions 288
 Instr 207 @ 0xcf0 (3312) - ISETP.LT.OR P0, PT, R88.reuse, 0x3, !P4 ;
 Instr 208 @ 0xd00 (3328) - LDS.U.128 R84, [R91.X16+0x800] ;
 Instr 209 @ 0xd10 (3344) - ISETP.LT.OR P1, PT, R88.reuse, 0x3, !P3 ;
 Instr 210 @ 0xd20 (3360) - IMAD.MOV.U32 R57, RZ, RZ, c[0x0][0x3d0] ;
 Instr 211 @ 0xd30 (3376) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 212 @ 0xd40 (3392) - ULDC.64 UR4, c[0x0][0x160] ;
 Instr 213 @ 0xd50 (3408) - PRMT R3, RZ, 0x7610, R3 ;
 Instr 214 @ 0xd60 (3424) - IMAD.SHL.U32 R79, R57.reuse, 0x2, RZ ;
 Instr 215 @ 0xd70 (3440) - PRMT R46, RZ, 0x7610, R46 ;
 Instr 216 @ 0xd80 (3456) - ISETP.LT.OR P2, PT, R88.reuse, 0x13, !P4 ;
 Instr 217 @ 0xd90 (3472) - @!P0 LEA R77, R57, 0x4, 0x1 ;
 Instr 218 @ 0xda0 (3488) - PRMT R38, RZ, 0x7610, R38 ;
 Instr 219 @ 0xdb0 (3504) - @!P1 IMAD.WIDE.U32 R80, R79, 0x2, R98 ;
 Instr 220 @ 0xdc0 (3520) - PRMT R45, RZ, 0x7610, R45 ;
 Instr 221 @ 0xdd0 (3536) - PRMT R39, RZ, 0x7610, R39 ;
 Instr 222 @ 0xde0 (3552) - @!P0 IMAD.WIDE.U32 R100, R77, 0x2, R98 ;
 Instr 223 @ 0xdf0 (3568) - PRMT R47, RZ, 0x7610, R47 ;
 Instr 224 @ 0xe00 (3584) - PRMT R37, RZ, 0x7610, R37 ;
 Instr 225 @ 0xe10 (3600) - @!P1 LDG.E.U16.SYS R0, [R80] ;
 Instr 226 @ 0xe20 (3616) - ISETP.LT.OR P1, PT, R88.reuse, 0x13, !P3 ;
 Instr 227 @ 0xe30 (3632) - PRMT R48, RZ, 0x7610, R48 ;
 Instr 228 @ 0xe40 (3648) - PRMT R42, RZ, 0x7610, R42 ;
 Instr 229 @ 0xe50 (3664) - @!P0 LDG.E.U16.SYS R3, [R100] ;
 Instr 230 @ 0xe60 (3680) - ISETP.LT.OR P0, PT, R88, 0x3, !P5 ;
 Instr 231 @ 0xe70 (3696) - PRMT R43, RZ, 0x7610, R43 ;
 Instr 232 @ 0xe80 (3712) - PRMT R49, RZ, 0x7610, R49 ;
 Instr 233 @ 0xe90 (3728) - PRMT R56, RZ, 0x7610, R56 ;
 Instr 234 @ 0xea0 (3744) - @!P1 IMAD R79, R57.reuse, 0x12, RZ ;
 Instr 235 @ 0xeb0 (3760) - IMAD R100, R57, 0x7, R57 ;
 Instr 236 @ 0xec0 (3776) - @!P1 IMAD.WIDE.U32 R102, R79, 0x2, R98.reuse ;
 Instr 237 @ 0xed0 (3792) - @!P0 LEA R77, R57, 0x8, 0x1 ;
 Instr 238 @ 0xee0 (3808) - IMAD.SHL.U32 R100, R100, 0x2, RZ ;
 Instr 239 @ 0xef0 (3824) - @!P0 IMAD.WIDE.U32 R82, R77, 0x2, R98 ;
 Instr 240 @ 0xf00 (3840) - @!P1 LDG.E.U16.SYS R38, [R102] ;
 Instr 241 @ 0xf10 (3856) - ISETP.LT.OR P1, PT, R88.reuse, 0x3, !P6 ;
 Instr 242 @ 0xf20 (3872) - @!P2 IMAD R81, R57, 0x2, R100 ;
 Instr 243 @ 0xf30 (3888) - @!P0 LDG.E.U16.SYS R46, [R82] ;
 Instr 244 @ 0xf40 (3904) - ISETP.LT.OR P0, PT, R88, 0x13, !P5 ;
 Instr 245 @ 0xf50 (3920) - @!P2 IADD3 R81, R81, 0x4, RZ ;
 Instr 246 @ 0xf60 (3936) - @!P1 LEA R79, R57, 0xc, 0x1 ;
 Instr 247 @ 0xf70 (3952) - @!P2 IMAD.WIDE.U32 R106, R81, 0x2, R98.reuse ;
 Instr 248 @ 0xf80 (3968) - IADD3 R81, R100, 0xc, RZ ;
 Instr 249 @ 0xf90 (3984) - @!P1 IMAD.WIDE.U32 R102, R79, 0x2, R98 ;
 Instr 250 @ 0xfa0 (4000) - @!P0 IMAD R77, R57, 0x2, R100 ;
 Instr 251 @ 0xfb0 (4016) - @!P2 LDG.E.U16.SYS R45, [R106] ;
 Instr 252 @ 0xfc0 (4032) - ISETP.LT.OR P2, PT, R88.reuse, 0x11, !P3 ;
 Instr 253 @ 0xfd0 (4048) - ISETP.LT.OR P3, PT, R88.reuse, 0x1, !P3 ;
 Instr 254 @ 0xfe0 (4064) - @!P0 IADD3 R77, R77, 0x8, RZ ;
 Instr 255 @ 0xff0 (4080) - @!P1 LDG.E.U16.SYS R47, [R102] ;
 Instr 256 @ 0x1000 (4096) - ISETP.LT.OR P1, PT, R88.reuse, 0x11, !P4 ;
 Instr 257 @ 0x1010 (4112) - ISETP.LT.OR P4, PT, R88.reuse, 0x1, !P4 ;
 Instr 258 @ 0x1020 (4128) - @!P0 IMAD.WIDE.U32 R104, R77, 0x2, R98 ;
 Instr 259 @ 0x1030 (4144) - LDS.U.128 R76, [R91.X16+0x840] ;
 Instr 260 @ 0x1040 (4160) - @!P0 LDG.E.U16.SYS R39, [R104] ;
 Instr 261 @ 0x1050 (4176) - LEA R82, P0, R81.reuse, R98, 0x1 ;
 Instr 262 @ 0x1060 (4192) - LEA.HI.X R83, R81, R99, RZ, 0x1, P0 ;
 Instr 263 @ 0x1070 (4208) - @!P4 LDG.E.U16.SYS R49, [R98+0x8] ;
 Instr 264 @ 0x1080 (4224) - @!P2 LDG.E.U16.SYS R37, [R82+-0x18] ;
 Instr 265 @ 0x1090 (4240) - ISETP.LT.OR P2, PT, R88.reuse, 0x11, !P5 ;
 Instr 266 @ 0x10a0 (4256) - ISETP.LT.OR P5, PT, R88.reuse, 0x1, !P5 ;
 Instr 267 @ 0x10b0 (4272) - @!P1 LDG.E.U16.SYS R48, [R82+-0x10] ;
 Instr 268 @ 0x10c0 (4288) - ISETP.LT.OR P1, PT, R88, 0x11, !P6 ;
 Instr 269 @ 0x10d0 (4304) - @!P2 LDG.E.U16.SYS R42, [R82+-0x8] ;
 Instr 270 @ 0x10e0 (4320) - @!P1 LDG.E.U16.SYS R43, [R82] ;
 Instr 271 @ 0x10f0 (4336) - PRMT R36, R0, 0x5410, R3 ;
 Instr 272 @ 0x1100 (4352) - IMAD.IADD R80, R74, 0x1, R86 ;
 Instr 273 @ 0x1110 (4368) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 274 @ 0x1120 (4384) - IMAD.IADD R81, R66, 0x1, R86.reuse ;
 Instr 275 @ 0x1130 (4400) - ISETP.GE.U32.AND P0, PT, R80, c[0x0][0x1a0], PT ;
 Instr 276 @ 0x1140 (4416) - IMAD.IADD R80, R73, 0x1, R85.reuse ;
 Instr 277 @ 0x1150 (4432) - ISETP.GE.U32.AND P1, PT, R81, c[0x0][0x1a0], PT ;
 Instr 278 @ 0x1160 (4448) - IMAD.IADD R81, R65, 0x1, R85 ;
 Instr 279 @ 0x1170 (4464) - @!P3 LDG.E.U16.SYS R0, [R98] ;
 Instr 280 @ 0x1180 (4480) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x19c], !P0 ;
 Instr 281 @ 0x1190 (4496) - IMAD.IADD R80, R75, 0x1, R87 ;
 Instr 282 @ 0x11a0 (4512) - ISETP.LT.U32.AND P1, PT, R81, c[0x0][0x19c], !P1 ;
 Instr 283 @ 0x11b0 (4528) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x1a4], P0 ;
 Instr 284 @ 0x11c0 (4544) - IMAD.IADD R80, R70, 0x1, R86.reuse ;
 Instr 285 @ 0x11d0 (4560) - IMAD.IADD R86, R62, 0x1, R86 ;
 Instr 286 @ 0x11e0 (4576) - ISETP.GT.AND P0, PT, R85, -0x1, P0 ;
 Instr 287 @ 0x11f0 (4592) - ISETP.GE.U32.AND P2, PT, R80, c[0x0][0x1a0], PT ;
 Instr 288 @ 0x1200 (4608) - IMAD.IADD R80, R69, 0x1, R85 ;
 Instr 289 @ 0x1210 (4624) - ISETP.LT.U32.AND P2, PT, R80, c[0x0][0x19c], !P2 ;
 Instr 290 @ 0x1220 (4640) - IMAD.IADD R80, R71, 0x1, R87 ;
 Instr 291 @ 0x1230 (4656) - @!P0 PRMT R41, RZ, 0x7610, R41 ;
 Instr 292 @ 0x1240 (4672) - @P0 IMAD.IADD R81, R72, 0x1, R84 ;
 Instr 293 @ 0x1250 (4688) - ISETP.LT.U32.AND P2, PT, R80, c[0x0][0x1a4], P2 ;
 Instr 294 @ 0x1260 (4704) - IMAD.IADD R80, R67, 0x1, R87 ;
 Instr 295 @ 0x1270 (4720) - @P0 IMAD.WIDE R102, R81, 0x2, R96 ;
 Instr 296 @ 0x1280 (4736) - ISETP.GT.AND P2, PT, R85, -0x1, P2 ;
 Instr 297 @ 0x1290 (4752) - ISETP.LT.U32.AND P1, PT, R80, c[0x0][0x1a4], P1 ;
 Instr 298 @ 0x12a0 (4768) - IMAD.IADD R87, R63, 0x1, R87 ;
 Instr 299 @ 0x12b0 (4784) - PRMT R38, R38, 0x5410, R45 ;
 Instr 300 @ 0x12c0 (4800) - IMAD.IADD R80, R74, 0x1, R78 ;
 Instr 301 @ 0x12d0 (4816) - ISETP.GT.AND P1, PT, R85, -0x1, P1 ;
 Instr 302 @ 0x12e0 (4832) - @P0 LDG.E.U16.SYS R41, [R102.64+UR4] ;
 Instr 303 @ 0x12f0 (4848) - ISETP.GE.U32.AND P0, PT, R80, c[0x0][0x1a0], PT ;
 Instr 304 @ 0x1300 (4864) - IMAD.IADD R80, R73, 0x1, R77 ;
 Instr 305 @ 0x1310 (4880) - @!P2 PRMT R44, RZ, 0x7610, R44 ;
 Instr 306 @ 0x1320 (4896) - @P2 IMAD.IADD R81, R68, 0x1, R84 ;
 Instr 307 @ 0x1330 (4912) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x19c], !P0 ;
 Instr 308 @ 0x1340 (4928) - @P2 IMAD.WIDE R102, R81, 0x2, R96 ;
 Instr 309 @ 0x1350 (4944) - @!P1 PRMT R55, RZ, 0x7610, R55 ;
 Instr 310 @ 0x1360 (4960) - @P1 IMAD.IADD R81, R64, 0x1, R84 ;
 Instr 311 @ 0x1370 (4976) - IMAD.IADD R80, R75, 0x1, R79 ;
 Instr 312 @ 0x1380 (4992) - @P1 IMAD.WIDE R82, R81, 0x2, R96 ;
 Instr 313 @ 0x1390 (5008) - @P2 LDG.E.U16.SYS R44, [R102.64+UR4] ;
 Instr 314 @ 0x13a0 (5024) - ISETP.GE.U32.AND P2, PT, R86, c[0x0][0x1a0], PT ;
 Instr 315 @ 0x13b0 (5040) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x1a4], P0 ;
 Instr 316 @ 0x13c0 (5056) - IMAD.IADD R81, R69, 0x1, R77 ;
 Instr 317 @ 0x13d0 (5072) - IMAD.IADD R80, R70, 0x1, R78 ;
 Instr 318 @ 0x13e0 (5088) - ISETP.GT.AND P0, PT, R77, -0x1, P0 ;
 Instr 319 @ 0x13f0 (5104) - @P1 LDG.E.U16.SYS R55, [R82.64+UR4] ;
 Instr 320 @ 0x1400 (5120) - ISETP.GE.U32.AND P1, PT, R80, c[0x0][0x1a0], PT ;
 Instr 321 @ 0x1410 (5136) - IMAD.IADD R80, R61, 0x1, R85 ;
 Instr 322 @ 0x1420 (5152) - ISETP.LT.U32.AND P1, PT, R81, c[0x0][0x19c], !P1 ;
 Instr 323 @ 0x1430 (5168) - ISETP.LT.U32.AND P2, PT, R80, c[0x0][0x19c], !P2 ;
 Instr 324 @ 0x1440 (5184) - IMAD.IADD R80, R71, 0x1, R79 ;
 Instr 325 @ 0x1450 (5200) - @!P0 PRMT R2, RZ, 0x7610, R2 ;
 Instr 326 @ 0x1460 (5216) - @P0 IMAD.IADD R83, R72, 0x1, R76 ;
 Instr 327 @ 0x1470 (5232) - ISETP.LT.U32.AND P2, PT, R87, c[0x0][0x1a4], P2 ;
 Instr 328 @ 0x1480 (5248) - PRMT R37, R37, 0x5410, R48 ;
 Instr 329 @ 0x1490 (5264) - @P0 IMAD.WIDE R102, R83, 0x2, R96 ;
 Instr 330 @ 0x14a0 (5280) - ISETP.GT.AND P2, PT, R85, -0x1, P2 ;
 Instr 331 @ 0x14b0 (5296) - PRMT R48, RZ, 0x7610, R48 ;
 Instr 332 @ 0x14c0 (5312) - @P0 LDG.E.U16.SYS R2, [R102.64+UR4] ;
 Instr 333 @ 0x14d0 (5328) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x1a4], P1 ;
 Instr 334 @ 0x14e0 (5344) - IMAD.IADD R80, R66, 0x1, R78.reuse ;
 Instr 335 @ 0x14f0 (5360) - IMAD.IADD R78, R62, 0x1, R78 ;
 Instr 336 @ 0x1500 (5376) - ISETP.GT.AND P0, PT, R77, -0x1, P0 ;
 Instr 337 @ 0x1510 (5392) - @!P2 PRMT R54, RZ, 0x7610, R54 ;
 Instr 338 @ 0x1520 (5408) - @!P0 PRMT R3, RZ, 0x7610, R3 ;
 Instr 339 @ 0x1530 (5424) - @P0 IMAD.IADD R81, R68, 0x1, R76 ;
 Instr 340 @ 0x1540 (5440) - @P0 IMAD.WIDE R82, R81, 0x2, R96 ;
 Instr 341 @ 0x1550 (5456) - @P0 LDG.E.U16.SYS R3, [R82.64+UR4] ;
 Instr 342 @ 0x1560 (5472) - ISETP.GE.U32.AND P0, PT, R80, c[0x0][0x1a0], PT ;
 Instr 343 @ 0x1570 (5488) - IMAD.IADD R80, R65, 0x1, R77 ;
 Instr 344 @ 0x1580 (5504) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x19c], !P0 ;
 Instr 345 @ 0x1590 (5520) - IMAD.IADD R80, R67, 0x1, R79.reuse ;
 Instr 346 @ 0x15a0 (5536) - IMAD.IADD R79, R63, 0x1, R79 ;
 Instr 347 @ 0x15b0 (5552) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x1a4], P0 ;
 Instr 348 @ 0x15c0 (5568) - ISETP.GT.AND P0, PT, R77, -0x1, P0 ;
 Instr 349 @ 0x15d0 (5584) - @P0 IMAD.IADD R81, R64, 0x1, R76 ;
 Instr 350 @ 0x15e0 (5600) - @!P0 PRMT R40, RZ, 0x7610, R40 ;
 Instr 351 @ 0x15f0 (5616) - @P0 IMAD.WIDE R86, R81, 0x2, R96 ;
 Instr 352 @ 0x1600 (5632) - LDS.U.128 R80, [R91.X16+0x880] ;
 Instr 353 @ 0x1610 (5648) - @P0 LDG.E.U16.SYS R40, [R86.64+UR4] ;
 Instr 354 @ 0x1620 (5664) - ISETP.GE.U32.AND P0, PT, R78, c[0x0][0x1a0], PT ;
 Instr 355 @ 0x1630 (5680) - IMAD.IADD R78, R61, 0x1, R77 ;
 Instr 356 @ 0x1640 (5696) - ISETP.LT.U32.AND P0, PT, R78, c[0x0][0x19c], !P0 ;
 Instr 357 @ 0x1650 (5712) - ISETP.LT.U32.AND P0, PT, R79, c[0x0][0x1a4], P0 ;
 Instr 358 @ 0x1660 (5728) - ISETP.GT.AND P0, PT, R77, -0x1, P0 ;
 Instr 359 @ 0x1670 (5744) - @P2 IMAD.IADD R77, R60.reuse, 0x1, R84 ;
 Instr 360 @ 0x1680 (5760) - @P0 IMAD.IADD R79, R60, 0x1, R76 ;
 Instr 361 @ 0x1690 (5776) - @!P0 PRMT R53, RZ, 0x7610, R53 ;
 Instr 362 @ 0x16a0 (5792) - @P2 IMAD.WIDE R76, R77, 0x2, R96.reuse ;
 Instr 363 @ 0x16b0 (5808) - @P0 IMAD.WIDE R78, R79, 0x2, R96 ;
 Instr 364 @ 0x16c0 (5824) - @P2 LDG.E.U16.SYS R54, [R76.64+UR4] ;
 Instr 365 @ 0x16d0 (5840) - IMAD.IADD R85, R74, 0x1, R82.reuse ;
 Instr 366 @ 0x16e0 (5856) - IMAD.IADD R84, R70, 0x1, R82.reuse ;
 Instr 367 @ 0x16f0 (5872) - @P0 LDG.E.U16.SYS R53, [R78.64+UR4] ;
 Instr 368 @ 0x1700 (5888) - ISETP.GE.U32.AND P0, PT, R85, c[0x0][0x1a0], PT ;
 Instr 369 @ 0x1710 (5904) - IMAD.IADD R85, R73, 0x1, R81 ;
 Instr 370 @ 0x1720 (5920) - ISETP.GE.U32.AND P4, PT, R84, c[0x0][0x1a0], PT ;
 Instr 371 @ 0x1730 (5936) - IMAD.IADD R84, R66, 0x1, R82.reuse ;
 Instr 372 @ 0x1740 (5952) - IMAD.IADD R82, R62, 0x1, R82 ;
 Instr 373 @ 0x1750 (5968) - ISETP.LT.U32.AND P0, PT, R85, c[0x0][0x19c], !P0 ;
 Instr 374 @ 0x1760 (5984) - IMAD.IADD R85, R75, 0x1, R83 ;
 Instr 375 @ 0x1770 (6000) - LDS.U.128 R76, [R91.X16+0x8c0] ;
 Instr 376 @ 0x1780 (6016) - ISETP.GE.U32.AND P3, PT, R84, c[0x0][0x1a0], PT ;
 Instr 377 @ 0x1790 (6032) - IMAD.IADD R84, R69, 0x1, R81.reuse ;
 Instr 378 @ 0x17a0 (6048) - ISETP.GE.U32.AND P2, PT, R82, c[0x0][0x1a0], PT ;
 Instr 379 @ 0x17b0 (6064) - IMAD.IADD R82, R61, 0x1, R81 ;
 Instr 380 @ 0x17c0 (6080) - ISETP.LT.U32.AND P0, PT, R85, c[0x0][0x1a4], P0 ;
 Instr 381 @ 0x17d0 (6096) - IMAD.IADD R85, R71, 0x1, R83 ;
 Instr 382 @ 0x17e0 (6112) - ISETP.LT.U32.AND P4, PT, R84, c[0x0][0x19c], !P4 ;
 Instr 383 @ 0x17f0 (6128) - IMAD.IADD R84, R65, 0x1, R81 ;
 Instr 384 @ 0x1800 (6144) - ISETP.GT.AND P0, PT, R81, -0x1, P0 ;
 Instr 385 @ 0x1810 (6160) - ISETP.LT.U32.AND P4, PT, R85, c[0x0][0x1a4], P4 ;
 Instr 386 @ 0x1820 (6176) - ISETP.LT.U32.AND P2, PT, R82, c[0x0][0x19c], !P2 ;
 Instr 387 @ 0x1830 (6192) - IMAD.IADD R82, R67, 0x1, R83.reuse ;
 Instr 388 @ 0x1840 (6208) - ISETP.GT.AND P4, PT, R81, -0x1, P4 ;
 Instr 389 @ 0x1850 (6224) - IMAD.IADD R83, R63, 0x1, R83 ;
 Instr 390 @ 0x1860 (6240) - ISETP.LT.U32.AND P3, PT, R84, c[0x0][0x19c], !P3 ;
 Instr 391 @ 0x1870 (6256) - @P0 IMAD.IADD R87, R72, 0x1, R80 ;
 Instr 392 @ 0x1880 (6272) - ISETP.LT.U32.AND P3, PT, R82, c[0x0][0x1a4], P3 ;
 Instr 393 @ 0x1890 (6288) - ISETP.LT.U32.AND P2, PT, R83, c[0x0][0x1a4], P2 ;
 Instr 394 @ 0x18a0 (6304) - @P0 IMAD.WIDE R86, R87, 0x2, R96 ;
 Instr 395 @ 0x18b0 (6320) - @!P0 PRMT R52, RZ, 0x7610, R52 ;
 Instr 396 @ 0x18c0 (6336) - @!P4 PRMT R50, RZ, 0x7610, R50 ;
 Instr 397 @ 0x18d0 (6352) - @P4 IMAD.IADD R85, R68, 0x1, R80 ;
 Instr 398 @ 0x18e0 (6368) - ISETP.GT.AND P3, PT, R81.reuse, -0x1, P3 ;
 Instr 399 @ 0x18f0 (6384) - ISETP.GT.AND P2, PT, R81, -0x1, P2 ;
 Instr 400 @ 0x1900 (6400) - @P4 IMAD.WIDE R84, R85, 0x2, R96 ;
 Instr 401 @ 0x1910 (6416) - @P0 LDG.E.U16.SYS R52, [R86.64+UR4] ;
 Instr 402 @ 0x1920 (6432) - IMAD.IADD R82, R74, 0x1, R78.reuse ;
 Instr 403 @ 0x1930 (6448) - @P4 LDG.E.U16.SYS R50, [R84.64+UR4] ;
 Instr 404 @ 0x1940 (6464) - IMAD.IADD R81, R70, 0x1, R78 ;
 Instr 405 @ 0x1950 (6480) - @!P3 PRMT R45, RZ, 0x7610, R45 ;
 Instr 406 @ 0x1960 (6496) - ISETP.GE.U32.AND P1, PT, R82, c[0x0][0x1a0], PT ;
 Instr 407 @ 0x1970 (6512) - IMAD.IADD R82, R73, 0x1, R77 ;
 Instr 408 @ 0x1980 (6528) - ISETP.GE.U32.AND P0, PT, R81, c[0x0][0x1a0], PT ;
 Instr 409 @ 0x1990 (6544) - IMAD.IADD R81, R75, 0x1, R79 ;
 Instr 410 @ 0x19a0 (6560) - ISETP.LT.U32.AND P1, PT, R82, c[0x0][0x19c], !P1 ;
 Instr 411 @ 0x19b0 (6576) - IMAD.IADD R82, R69, 0x1, R77 ;
 Instr 412 @ 0x19c0 (6592) - ISETP.LT.U32.AND P1, PT, R81, c[0x0][0x1a4], P1 ;
 Instr 413 @ 0x19d0 (6608) - @P3 IMAD.IADD R81, R64, 0x1, R80 ;
 Instr 414 @ 0x19e0 (6624) - ISETP.LT.U32.AND P0, PT, R82, c[0x0][0x19c], !P0 ;
 Instr 415 @ 0x19f0 (6640) - IMAD.IADD R82, R71, 0x1, R79 ;
 Instr 416 @ 0x1a00 (6656) - ISETP.GT.AND P1, PT, R77, -0x1, P1 ;
 Instr 417 @ 0x1a10 (6672) - @P3 IMAD.WIDE R84, R81, 0x2, R96 ;
 Instr 418 @ 0x1a20 (6688) - ISETP.LT.U32.AND P0, PT, R82, c[0x0][0x1a4], P0 ;
 Instr 419 @ 0x1a30 (6704) - @P2 IMAD.IADD R81, R60, 0x1, R80 ;
 Instr 420 @ 0x1a40 (6720) - IMAD.IADD R80, R66, 0x1, R78 ;
 Instr 421 @ 0x1a50 (6736) - ISETP.GT.AND P0, PT, R77, -0x1, P0 ;
 Instr 422 @ 0x1a60 (6752) - @P3 LDG.E.U16.SYS R45, [R84.64+UR4] ;
 Instr 423 @ 0x1a70 (6768) - @P2 IMAD.WIDE R86, R81, 0x2, R96 ;
 Instr 424 @ 0x1a80 (6784) - @!P1 PRMT R51, RZ, 0x7610, R51 ;
 Instr 425 @ 0x1a90 (6800) - @P1 IMAD.IADD R81, R72, 0x1, R76 ;
 Instr 426 @ 0x1aa0 (6816) - IMAD.IADD R78, R62, 0x1, R78 ;
 Instr 427 @ 0x1ab0 (6832) - @P1 IMAD.WIDE R84, R81, 0x2, R96 ;
 Instr 428 @ 0x1ac0 (6848) - @P0 IMAD.IADD R81, R68, 0x1, R76 ;
 Instr 429 @ 0x1ad0 (6864) - PRMT R0, R0, 0x5410, R49 ;
 Instr 430 @ 0x1ae0 (6880) - @P0 IMAD.WIDE R82, R81, 0x2, R96 ;
 Instr 431 @ 0x1af0 (6896) - @!P0 PRMT R49, RZ, 0x7610, R49 ;
 Instr 432 @ 0x1b00 (6912) - @P1 LDG.E.U16.SYS R51, [R84.64+UR4] ;
 Instr 433 @ 0x1b10 (6928) - ISETP.LT.OR P1, PT, R88.reuse, 0x13, !P6 ;
 Instr 434 @ 0x1b20 (6944) - ISETP.LT.OR P6, PT, R88, 0x1, !P6 ;
 Instr 435 @ 0x1b30 (6960) - @P0 LDG.E.U16.SYS R49, [R82.64+UR4] ;
 Instr 436 @ 0x1b40 (6976) - ISETP.GE.U32.AND P0, PT, R80, c[0x0][0x1a0], PT ;
 Instr 437 @ 0x1b50 (6992) - IMAD.IADD R80, R65, 0x1, R77 ;
 Instr 438 @ 0x1b60 (7008) - @!P1 IMAD R57, R57, 0x2, R100 ;
 Instr 439 @ 0x1b70 (7024) - ISETP.LT.U32.AND P0, PT, R80, c[0x0][0x19c], !P0 ;
 Instr 440 @ 0x1b80 (7040) - IMAD.IADD R80, R67, 0x1, R79 ;
 Instr 441 @ 0x1b90 (7056) - @!P6 LDG.E.U16.SYS R56, [R98+0x18] ;
 Instr 442 @ 0x1ba0 (7072) - @!P1 IADD3 R57, R57, 0xc, RZ ;
 Instr 443 @ 0x1bb0 (7088) - PRMT R2, R41, 0x5410, R2 ;
 Instr 444 @ 0x1bc0 (7104) - @!P2 PRMT R41, RZ, 0x7610, R41 ;
 Instr 445 @ 0x1bd0 (7120) - @P2 LDG.E.U16.SYS R41, [R86.64+UR4] ;
 Instr 446 @ 0x1be0 (7136) - ISETP.LT.U32.AND P2, PT, R80, c[0x0][0x1a4], P0 ;
 Instr 447 @ 0x1bf0 (7152) - ISETP.GE.U32.AND P0, PT, R78, c[0x0][0x1a0], PT ;
 Instr 448 @ 0x1c00 (7168) - IMAD.IADD R78, R61, 0x1, R77 ;
 Instr 449 @ 0x1c10 (7184) - ISETP.GT.AND P2, PT, R77, -0x1, P2 ;
 Instr 450 @ 0x1c20 (7200) - ISETP.LT.U32.AND P0, PT, R78, c[0x0][0x19c], !P0 ;
 Instr 451 @ 0x1c30 (7216) - IMAD.IADD R78, R63, 0x1, R79 ;
 Instr 452 @ 0x1c40 (7232) - ISETP.LT.U32.AND P0, PT, R78, c[0x0][0x1a4], P0 ;
 Instr 453 @ 0x1c50 (7248) - @P2 IMAD.IADD R79, R64, 0x1, R76 ;
 Instr 454 @ 0x1c60 (7264) - ISETP.GT.AND P0, PT, R77, -0x1, P0 ;
 Instr 455 @ 0x1c70 (7280) - PRMT R3, R44, 0x5410, R3 ;
 Instr 456 @ 0x1c80 (7296) - @P2 IMAD.WIDE R78, R79, 0x2, R96 ;
 Instr 457 @ 0x1c90 (7312) - @!P2 PRMT R44, RZ, 0x7610, R44 ;
 Instr 458 @ 0x1ca0 (7328) - HMMA.1688.F32 R4, R2, R0, R4 ;
 Instr 459 @ 0x1cb0 (7344) - @P2 LDG.E.U16.SYS R44, [R78.64+UR4] ;
 Instr 460 @ 0x1cc0 (7360) - @P0 IMAD.IADD R77, R60, 0x1, R76 ;
 Instr 461 @ 0x1cd0 (7376) - HMMA.1688.F32 R8, R2, R36, R8 ;
 Instr 462 @ 0x1ce0 (7392) - @P0 IMAD.WIDE R76, R77, 0x2, R96 ;
 Instr 463 @ 0x1cf0 (7408) - @!P1 IMAD.WIDE.U32 R78, R57, 0x2, R98 ;
 Instr 464 @ 0x1d00 (7424) - HMMA.1688.F32 R12, R2, R37.reuse, R12 ;
 Instr 465 @ 0x1d10 (7440) - @!P1 LDG.E.U16.SYS R48, [R78] ;
 Instr 466 @ 0x1d20 (7456) - HMMA.1688.F32 R16, R2, R38, R16 ;
 Instr 467 @ 0x1d30 (7472) - PRMT R2, R55, 0x5410, R40.reuse ;
 Instr 468 @ 0x1d40 (7488) - PRMT R55, RZ, 0x7610, R55 ;
 Instr 469 @ 0x1d50 (7504) - @!P0 PRMT R40, RZ, 0x7610, R40 ;
 Instr 470 @ 0x1d60 (7520) - @!P5 LDG.E.U16.SYS R55, [R98+0x10] ;
 Instr 471 @ 0x1d70 (7536) - @P0 LDG.E.U16.SYS R40, [R76.64+UR4] ;
 Instr 472 @ 0x1d80 (7552) - ISETP.NE.AND P0, PT, R92, 0x1, PT ;
 Instr 473 @ 0x1d90 (7568) - PRMT R3, R54, 0x5410, R53 ;
 Instr 474 @ 0x1da0 (7584) - HMMA.1688.F32 R20, R2, R0, R20 ;
 Instr 475 @ 0x1db0 (7600) - HMMA.1688.F32 R24, R2, R36, R24 ;
 Instr 476 @ 0x1dc0 (7616) - PRMT R36, R46, 0x5410, R47 ;
 Instr 477 @ 0x1dd0 (7632) - HMMA.1688.F32 R28, R2, R37, R28 ;
 Instr 478 @ 0x1de0 (7648) - PRMT R37, R42, 0x5410, R43 ;
 Instr 479 @ 0x1df0 (7664) - HMMA.1688.F32 R32, R2, R38, R32 ;
 Instr 480 @ 0x1e00 (7680) - PRMT R2, R52, 0x5410, R51 ;
 Instr 481 @ 0x1e10 (7696) - PRMT R3, R50, 0x5410, R49 ;
 Instr 482 @ 0x1e20 (7712) - PRMT R38, R39, 0x5410, R48 ;
 Instr 483 @ 0x1e30 (7728) - PRMT R0, R55, 0x5410, R56 ;
 Instr 484 @ 0x1e40 (7744) - HMMA.1688.F32 R4, R2, R0, R4 ;
 Instr 485 @ 0x1e50 (7760) - HMMA.1688.F32 R8, R2, R36, R8 ;
 Instr 486 @ 0x1e60 (7776) - HMMA.1688.F32 R12, R2, R37.reuse, R12 ;
 Instr 487 @ 0x1e70 (7792) - HMMA.1688.F32 R16, R2, R38, R16 ;
 Instr 488 @ 0x1e80 (7808) - PRMT R2, R45, 0x5410, R44 ;
 Instr 489 @ 0x1e90 (7824) - PRMT R3, R41, 0x5410, R40 ;
 Instr 490 @ 0x1ea0 (7840) - HMMA.1688.F32 R20, R2, R0, R20 ;
 Instr 491 @ 0x1eb0 (7856) - HMMA.1688.F32 R24, R2, R36, R24 ;
 Instr 492 @ 0x1ec0 (7872) - HMMA.1688.F32 R28, R2, R37, R28 ;
 Instr 493 @ 0x1ed0 (7888) - HMMA.1688.F32 R32, R2, R38, R32 ;
 Instr 494 @ 0x1ee0 (7904) - @!P0 BRA 0x2210 ;
Basic block id 15 - num instructions 7
 Instr 495 @ 0x1ef0 (7920) - ISETP.GE.U32.AND P0, PT, R93, c[0x0][0x3d0], PT ;
 Instr 496 @ 0x1f00 (7936) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 497 @ 0x1f10 (7952) - MOV R57, 0xffffffff ;
 Instr 498 @ 0x1f20 (7968) - IMAD.MOV.U32 R56, RZ, RZ, RZ ;
 Instr 499 @ 0x1f30 (7984) - BMOV.32.CLEAR RZ, B0 ;
 Instr 500 @ 0x1f40 (8000) - BSSY B0, 0x2110 ;
 Instr 501 @ 0x1f50 (8016) - @P0 BRA 0x2100 ;
Basic block id 16 - num instructions 6
 Instr 502 @ 0x1f60 (8032) - IMAD.MOV.U32 R36, RZ, RZ, R93.reuse ;
 Instr 503 @ 0x1f70 (8048) - MOV R0, c[0x0][0x3d4] ;
 Instr 504 @ 0x1f80 (8064) - CS2R R58, SRZ ;
 Instr 505 @ 0x1f90 (8080) - MOV R2, c[0x0][0x3d8] ;
 Instr 506 @ 0x1fa0 (8096) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 507 @ 0x1fb0 (8112) - ISETP.NE.AND P1, PT, R2, 0x1, PT ;
Basic block id 17 - num instructions 20
 Instr 508 @ 0x1fc0 (8128) - MOV R56, RZ ;
 Instr 509 @ 0x1fd0 (8144) - @P0 IMAD.HI.U32 R0, R93, c[0x0][0x3f4], RZ ;
 Instr 510 @ 0x1fe0 (8160) - @P0 SHF.R.U32.HI R36, RZ, c[0x0][0x3f8], R0 ;
 Instr 511 @ 0x1ff0 (8176) - @P0 IADD3 R0, RZ, -c[0x0][0x3d4], RZ ;
 Instr 512 @ 0x2000 (8192) - IMAD R57, R36.reuse, c[0x0][0x280], RZ ;
 Instr 513 @ 0x2010 (8208) - @P0 IMAD R58, R36, R0, R93 ;
 Instr 514 @ 0x2020 (8224) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x1a8] ;
 Instr 515 @ 0x2030 (8240) - @P1 IMAD.HI.U32 R3, R58, c[0x0][0x3fc], RZ ;
 Instr 516 @ 0x2040 (8256) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 517 @ 0x2050 (8272) - @P1 SHF.R.U32.HI R3, RZ, c[0x0][0x400], R3 ;
 Instr 518 @ 0x2060 (8288) - @P1 IADD3 R37, -R3, RZ, RZ ;
 Instr 519 @ 0x2070 (8304) - @P1 IMAD R59, R37, c[0x0][0x3d8], R58 ;
 Instr 520 @ 0x2080 (8320) - @P1 MOV R58, R3 ;
 Instr 521 @ 0x2090 (8336) - @P0 IMAD.HI.U32 R2, R59, c[0x0][0x404], RZ ;
 Instr 522 @ 0x20a0 (8352) - IMAD R58, R58, c[0x0][0x284], RZ ;
 Instr 523 @ 0x20b0 (8368) - @P0 SHF.R.U32.HI R2, RZ, c[0x0][0x408], R2 ;
 Instr 524 @ 0x20c0 (8384) - @P0 IMAD.MOV R0, RZ, RZ, -R2 ;
 Instr 525 @ 0x20d0 (8400) - @P0 IMAD R56, R0, c[0x0][0x1a8], R59 ;
 Instr 526 @ 0x20e0 (8416) - @P0 MOV R59, R2 ;
 Instr 527 @ 0x20f0 (8432) - IMAD R59, R59, c[0x0][0x288], RZ ;
Basic block id 18 - num instructions 17
 Instr 528 @ 0x2100 (8448) - BSYNC B0 ;
 Instr 529 @ 0x2110 (8464) - IADD3 R92, R92, -0x1, RZ ;
 Instr 530 @ 0x2120 (8480) - IMAD R56, R57, c[0x0][0x234], R56 ;
 Instr 531 @ 0x2130 (8496) - IADD3 R98, P0, R98, 0x20, RZ ;
 Instr 532 @ 0x2140 (8512) - ISETP.GT.AND P1, PT, R92, RZ, PT ;
 Instr 533 @ 0x2150 (8528) - IMAD R56, R58, c[0x0][0x238], R56 ;
 Instr 534 @ 0x2160 (8544) - ISETP.GT.AND P3, PT, R94.reuse, 0x10, PT ;
 Instr 535 @ 0x2170 (8560) - IMAD.X R99, RZ, RZ, R99, P0 ;
 Instr 536 @ 0x2180 (8576) - ISETP.GT.AND P4, PT, R94.reuse, 0x14, PT ;
 Instr 537 @ 0x2190 (8592) - IMAD R56, R59, c[0x0][0x23c], R56 ;
 Instr 538 @ 0x21a0 (8608) - ISETP.GT.AND P5, PT, R94.reuse, 0x18, PT ;
 Instr 539 @ 0x21b0 (8624) - ISETP.GT.AND P6, PT, R94.reuse, 0x1c, PT ;
 Instr 540 @ 0x21c0 (8640) - IADD3 R94, R94, -0x10, RZ ;
 Instr 541 @ 0x21d0 (8656) - IADD3 R93, R93, 0x10, RZ ;
 Instr 542 @ 0x21e0 (8672) - STS.128 [R90.X16+0x800], R56 ;
 Instr 543 @ 0x21f0 (8688) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 544 @ 0x2200 (8704) - @P1 BRA 0xcf0 ;
Basic block id 19 - num instructions 33
 Instr 545 @ 0x2210 (8720) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x414] ;
 Instr 546 @ 0x2220 (8736) - S2R R39, SR_TID.X ;
 Instr 547 @ 0x2230 (8752) - IMAD.MOV.U32 R41, RZ, RZ, R95 ;
 Instr 548 @ 0x2240 (8768) - ISETP.NE.AND P3, PT, RZ, c[0x0][0x320], PT ;
 Instr 549 @ 0x2250 (8784) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 550 @ 0x2260 (8800) - MOV R43, RZ ;
 Instr 551 @ 0x2270 (8816) - @P0 IMAD.HI.U32 R0, R95, c[0x0][0x40c], RZ ;
 Instr 552 @ 0x2280 (8832) - @P0 IMAD.HI.U32 R2, R95, c[0x0][0x40c], RZ ;
 Instr 553 @ 0x2290 (8848) - @P0 SHF.R.U32.HI R41, RZ, c[0x0][0x410], R0 ;
 Instr 554 @ 0x22a0 (8864) - SHF.R.S32.HI R36, RZ, 0x1f, R39 ;
 Instr 555 @ 0x22b0 (8880) - @P0 IADD3 R0, -R41, RZ, RZ ;
 Instr 556 @ 0x22c0 (8896) - LEA.HI R36, R36, R39, RZ, 0x2 ;
 Instr 557 @ 0x22d0 (8912) - @P0 SHF.R.U32.HI R2, RZ, c[0x0][0x410], R2 ;
 Instr 558 @ 0x22e0 (8928) - @P0 IMAD R3, R0, c[0x0][0x414], R95 ;
 Instr 559 @ 0x22f0 (8944) - LOP3.LUT R36, R36, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 560 @ 0x2300 (8960) - IMAD.MOV.U32 R0, RZ, RZ, RZ ;
 Instr 561 @ 0x2310 (8976) - LOP3.LUT R38, R39, 0x60, RZ, 0xc0, !PT ;
 Instr 562 @ 0x2320 (8992) - @P0 IMAD.SHL.U32 R0, R3, 0x20, RZ ;
 Instr 563 @ 0x2330 (9008) - IADD3 R3, -R36, R39, RZ ;
 Instr 564 @ 0x2340 (9024) - @P0 IMAD.MOV R36, RZ, RZ, -R2 ;
 Instr 565 @ 0x2350 (9040) - LOP3.LUT R39, R39, 0x1c, RZ, 0xc0, !PT ;
 Instr 566 @ 0x2360 (9056) - SHF.R.U32.HI R38, RZ, 0x1, R38 ;
 Instr 567 @ 0x2370 (9072) - @P0 IMAD R37, R36, c[0x0][0x414], R95 ;
 Instr 568 @ 0x2380 (9088) - MOV R36, RZ ;
 Instr 569 @ 0x2390 (9104) - IMAD R0, R3, 0x4, R0 ;
 Instr 570 @ 0x23a0 (9120) - LEA.HI R38, R39, R38, RZ, 0x1e ;
 Instr 571 @ 0x23b0 (9136) - @P0 MOV R95, R2 ;
 Instr 572 @ 0x23c0 (9152) - IMAD R42, R41, c[0x0][0x1b8], R0 ;
 Instr 573 @ 0x23d0 (9168) - LEA R89, R89, R38, 0x7 ;
 Instr 574 @ 0x23e0 (9184) - @P0 IMAD.SHL.U32 R36, R37, 0x20, RZ ;
 Instr 575 @ 0x23f0 (9200) - IMAD.SHL.U32 R42, R42, 0x2, RZ ;
 Instr 576 @ 0x2400 (9216) - IMAD R36, R3, 0x4, R36 ;
 Instr 577 @ 0x2410 (9232) - @!P3 BRA 0x2520 ;
Basic block id 20 - num instructions 16
 Instr 578 @ 0x2420 (9248) - IADD3 R3, R36.reuse, 0x10, RZ ;
 Instr 579 @ 0x2430 (9264) - IMAD R95, R95, c[0x0][0x1b8], R36 ;
 Instr 580 @ 0x2440 (9280) - MOV R2, 0x2 ;
 Instr 581 @ 0x2450 (9296) - ISETP.GE.AND P1, PT, R36, c[0x0][0x1b8], PT ;
 Instr 582 @ 0x2460 (9312) - ISETP.GE.AND P0, PT, R3, c[0x0][0x1b8], PT ;
 Instr 583 @ 0x2470 (9328) - IMAD.WIDE R38, R95, R2, c[0x0][0x180] ;
 Instr 584 @ 0x2480 (9344) - @!P1 LDG.E.64.SYS R36, [R38] ;
 Instr 585 @ 0x2490 (9360) - @!P0 LDG.E.64.SYS R2, [R38+0x20] ;
 Instr 586 @ 0x24a0 (9376) - @!P1 HADD2.F32 R51, R36.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 587 @ 0x24b0 (9392) - @!P1 HADD2.F32 R50, R36.H1_H1, -RZ.H0_H0 ;
 Instr 588 @ 0x24c0 (9408) - @!P1 HADD2.F32 R49, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 589 @ 0x24d0 (9424) - @!P1 HADD2.F32 R48, R37.H1_H1, -RZ.H0_H0 ;
 Instr 590 @ 0x24e0 (9440) - @!P0 HADD2.F32 R47, R2.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 591 @ 0x24f0 (9456) - @!P0 HADD2.F32 R46, R2.H1_H1, -RZ.H0_H0 ;
 Instr 592 @ 0x2500 (9472) - @!P0 HADD2.F32 R45, R3.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 593 @ 0x2510 (9488) - @!P0 HADD2.F32 R44, R3.H1_H1, -RZ.H0_H0 ;
Basic block id 21 - num instructions 6
 Instr 594 @ 0x2520 (9504) - ISETP.NE.AND P2, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 595 @ 0x2530 (9520) - ULDC.U8 UR4, c[0x0][0x31c] ;
 Instr 596 @ 0x2540 (9536) - IMAD.MOV.U32 R52, RZ, RZ, c[0x0][0x1e0] ;
 Instr 597 @ 0x2550 (9552) - ISETP.NE.AND P1, PT, RZ, UR4, PT ;
 Instr 598 @ 0x2560 (9568) - FSEL R52, R52, 1, !P1 ;
 Instr 599 @ 0x2570 (9584) - @!P2 BRA 0x28c0 ;
Basic block id 22 - num instructions 52
 Instr 600 @ 0x2580 (9600) - MOV R53, c[0x0][0x3c8] ;
 Instr 601 @ 0x2590 (9616) - IMAD.MOV.U32 R63, RZ, RZ, R89 ;
 Instr 602 @ 0x25a0 (9632) - IADD3 R61, R89, 0x8, RZ ;
 Instr 603 @ 0x25b0 (9648) - IMAD.MOV.U32 R60, RZ, RZ, RZ ;
 Instr 604 @ 0x25c0 (9664) - ISETP.NE.AND P5, PT, R53, 0x1, PT ;
 Instr 605 @ 0x25d0 (9680) - ULDC.64 UR4, c[0x0][0x178] ;
 Instr 606 @ 0x25e0 (9696) - MOV R64, R61 ;
 Instr 607 @ 0x25f0 (9712) - MOV R59, R89 ;
 Instr 608 @ 0x2600 (9728) - MOV R62, RZ ;
 Instr 609 @ 0x2610 (9744) - MOV R57, RZ ;
 Instr 610 @ 0x2620 (9760) - MOV R65, RZ ;
 Instr 611 @ 0x2630 (9776) - @P5 IMAD.HI.U32 R54, R64.reuse, c[0x0][0x3dc], RZ ;
 Instr 612 @ 0x2640 (9792) - ISETP.GE.AND P4, PT, R89.reuse, c[0x0][0x3c4], PT ;
 Instr 613 @ 0x2650 (9808) - ISETP.GE.AND P0, PT, R64, c[0x0][0x3c4], PT ;
 Instr 614 @ 0x2660 (9824) - @P5 IMAD.HI.U32 R55, R89.reuse, c[0x0][0x3dc], RZ ;
 Instr 615 @ 0x2670 (9840) - @P5 SHF.R.U32.HI R61, RZ, c[0x0][0x3e0], R54.reuse ;
 Instr 616 @ 0x2680 (9856) - @P5 SHF.R.U32.HI R54, RZ, c[0x0][0x3e0], R54 ;
 Instr 617 @ 0x2690 (9872) - @P5 IMAD.HI.U32 R53, R89, c[0x0][0x3dc], RZ ;
 Instr 618 @ 0x26a0 (9888) - @P5 SHF.R.U32.HI R63, RZ, c[0x0][0x3e0], R55 ;
 Instr 619 @ 0x26b0 (9904) - @P5 IADD3 R55, -R61, RZ, RZ ;
 Instr 620 @ 0x26c0 (9920) - @P5 SHF.R.U32.HI R59, RZ, c[0x0][0x3e0], R53 ;
 Instr 621 @ 0x26d0 (9936) - @P5 IMAD.MOV R53, RZ, RZ, -R54 ;
 Instr 622 @ 0x26e0 (9952) - ISETP.GE.OR P6, PT, R0.reuse, c[0x0][0x1b8], P4 ;
 Instr 623 @ 0x26f0 (9968) - @P5 IMAD.MOV R58, RZ, RZ, -R63 ;
 Instr 624 @ 0x2700 (9984) - @P5 IADD3 R56, -R59, RZ, RZ ;
 Instr 625 @ 0x2710 (10000) - @P5 IMAD R62, R55, c[0x0][0x3c8], R64.reuse ;
 Instr 626 @ 0x2720 (10016) - IADD3 R55, R0, 0x10, RZ ;
 Instr 627 @ 0x2730 (10032) - @P5 IMAD R57, R53, c[0x0][0x3c8], R64 ;
 Instr 628 @ 0x2740 (10048) - @P5 MOV R64, R54 ;
 Instr 629 @ 0x2750 (10064) - @P5 IMAD R65, R58, c[0x0][0x3c8], R89.reuse ;
 Instr 630 @ 0x2760 (10080) - MOV R53, c[0x0][0x250] ;
 Instr 631 @ 0x2770 (10096) - @P5 IMAD R60, R56, c[0x0][0x3c8], R89 ;
 Instr 632 @ 0x2780 (10112) - MOV R54, c[0x0][0x250] ;
 Instr 633 @ 0x2790 (10128) - IMAD R56, R65, c[0x0][0x250], RZ ;
 Instr 634 @ 0x27a0 (10144) - ISETP.GE.OR P5, PT, R0, c[0x0][0x1b8], P0 ;
 Instr 635 @ 0x27b0 (10160) - IMAD R60, R60, R53, 0x10 ;
 Instr 636 @ 0x27c0 (10176) - ISETP.GE.OR P4, PT, R55.reuse, c[0x0][0x1b8], P4 ;
 Instr 637 @ 0x27d0 (10192) - IMAD R62, R62, c[0x0][0x250], RZ ;
 Instr 638 @ 0x27e0 (10208) - ISETP.GE.OR P0, PT, R55, c[0x0][0x1b8], P0 ;
 Instr 639 @ 0x27f0 (10224) - IMAD R57, R57, R54, 0x10 ;
 Instr 640 @ 0x2800 (10240) - IMAD R55, R59, c[0x0][0x244], R60 ;
 Instr 641 @ 0x2810 (10256) - IMAD R53, R63, c[0x0][0x244], R56 ;
 Instr 642 @ 0x2820 (10272) - IMAD R59, R61, c[0x0][0x244], R62 ;
 Instr 643 @ 0x2830 (10288) - IMAD R57, R64, c[0x0][0x244], R57 ;
 Instr 644 @ 0x2840 (10304) - @!P6 IMAD.WIDE R60, R53, 0x2, R42 ;
 Instr 645 @ 0x2850 (10320) - @!P5 IMAD.WIDE R58, R59, 0x2, R42 ;
 Instr 646 @ 0x2860 (10336) - @!P4 IMAD.WIDE R54, R55, 0x2, R42.reuse ;
 Instr 647 @ 0x2870 (10352) - @!P6 LDG.E.64.SYS R40, [R60.64+UR4] ;
 Instr 648 @ 0x2880 (10368) - @!P0 IMAD.WIDE R56, R57, 0x2, R42 ;
 Instr 649 @ 0x2890 (10384) - @!P5 LDG.E.64.SYS R38, [R58.64+UR4] ;
 Instr 650 @ 0x28a0 (10400) - @!P4 LDG.E.64.SYS R36, [R54.64+UR4] ;
 Instr 651 @ 0x28b0 (10416) - @!P0 LDG.E.64.SYS R2, [R56.64+UR4] ;
Basic block id 23 - num instructions 17
 Instr 652 @ 0x28c0 (10432) - FMUL R4, R4, R52.reuse ;
 Instr 653 @ 0x28d0 (10448) - FMUL R5, R5, R52 ;
 Instr 654 @ 0x28e0 (10464) - FMUL R6, R6, R52.reuse ;
 Instr 655 @ 0x28f0 (10480) - FMUL R7, R7, R52.reuse ;
 Instr 656 @ 0x2900 (10496) - FMUL R8, R8, R52.reuse ;
 Instr 657 @ 0x2910 (10512) - FMUL R9, R9, R52.reuse ;
 Instr 658 @ 0x2920 (10528) - FMUL R10, R10, R52.reuse ;
 Instr 659 @ 0x2930 (10544) - FMUL R11, R11, R52 ;
 Instr 660 @ 0x2940 (10560) - FMUL R12, R12, R52.reuse ;
 Instr 661 @ 0x2950 (10576) - FMUL R53, R13, R52.reuse ;
 Instr 662 @ 0x2960 (10592) - FMUL R14, R14, R52.reuse ;
 Instr 663 @ 0x2970 (10608) - FMUL R15, R15, R52.reuse ;
 Instr 664 @ 0x2980 (10624) - FMUL R16, R16, R52.reuse ;
 Instr 665 @ 0x2990 (10640) - FMUL R17, R17, R52 ;
 Instr 666 @ 0x29a0 (10656) - FMUL R18, R18, R52.reuse ;
 Instr 667 @ 0x29b0 (10672) - FMUL R61, R19, R52 ;
 Instr 668 @ 0x29c0 (10688) - @!P3 BRA 0x2ad0 ;
Basic block id 24 - num instructions 16
 Instr 669 @ 0x29d0 (10704) - FADD R4, R51.reuse, R4 ;
 Instr 670 @ 0x29e0 (10720) - FADD R6, R51, R6 ;
 Instr 671 @ 0x29f0 (10736) - FADD R5, R50.reuse, R5 ;
 Instr 672 @ 0x2a00 (10752) - FADD R7, R50, R7 ;
 Instr 673 @ 0x2a10 (10768) - FADD R8, R49, R8 ;
 Instr 674 @ 0x2a20 (10784) - FADD R10, R49, R10 ;
 Instr 675 @ 0x2a30 (10800) - FADD R9, R48.reuse, R9 ;
 Instr 676 @ 0x2a40 (10816) - FADD R11, R48, R11 ;
 Instr 677 @ 0x2a50 (10832) - FADD R12, R47.reuse, R12 ;
 Instr 678 @ 0x2a60 (10848) - FADD R14, R47, R14 ;
 Instr 679 @ 0x2a70 (10864) - FADD R53, R46, R53 ;
 Instr 680 @ 0x2a80 (10880) - FADD R15, R46, R15 ;
 Instr 681 @ 0x2a90 (10896) - FADD R16, R45.reuse, R16 ;
 Instr 682 @ 0x2aa0 (10912) - FADD R18, R45, R18 ;
 Instr 683 @ 0x2ab0 (10928) - FADD R17, R44.reuse, R17 ;
 Instr 684 @ 0x2ac0 (10944) - FADD R61, R44, R61 ;
Basic block id 25 - num instructions 3
 Instr 685 @ 0x2ad0 (10960) - MOV R13, c[0x0][0x1f0] ;
 Instr 686 @ 0x2ae0 (10976) - FSEL R13, R13, 1, !P1 ;
 Instr 687 @ 0x2af0 (10992) - @!P2 BRA 0x2d00 ;
Basic block id 26 - num instructions 32
 Instr 688 @ 0x2b00 (11008) - HADD2.F32 R59, R40.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 689 @ 0x2b10 (11024) - HADD2.F32 R60, R40.H1_H1, -RZ.H0_H0 ;
 Instr 690 @ 0x2b20 (11040) - HADD2.F32 R57, R41.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 691 @ 0x2b30 (11056) - HADD2.F32 R58, R41.H1_H1, -RZ.H0_H0 ;
 Instr 692 @ 0x2b40 (11072) - HADD2.F32 R55, R38.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 693 @ 0x2b50 (11088) - FFMA R4, R59, R13.reuse, R4 ;
 Instr 694 @ 0x2b60 (11104) - HADD2.F32 R56, R38.H1_H1, -RZ.H0_H0 ;
 Instr 695 @ 0x2b70 (11120) - FFMA R5, R60, R13.reuse, R5 ;
 Instr 696 @ 0x2b80 (11136) - HADD2.F32 R19, R39.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 697 @ 0x2b90 (11152) - FFMA R8, R57, R13.reuse, R8 ;
 Instr 698 @ 0x2ba0 (11168) - HADD2.F32 R54, R39.H1_H1, -RZ.H0_H0 ;
 Instr 699 @ 0x2bb0 (11184) - FFMA R9, R58, R13.reuse, R9 ;
 Instr 700 @ 0x2bc0 (11200) - HADD2.F32 R59, R36.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 701 @ 0x2bd0 (11216) - FFMA R6, R55, R13.reuse, R6 ;
 Instr 702 @ 0x2be0 (11232) - HADD2.F32 R60, R36.H1_H1, -RZ.H0_H0 ;
 Instr 703 @ 0x2bf0 (11248) - FFMA R7, R56, R13.reuse, R7 ;
 Instr 704 @ 0x2c00 (11264) - HADD2.F32 R57, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 705 @ 0x2c10 (11280) - FFMA R10, R19, R13.reuse, R10 ;
 Instr 706 @ 0x2c20 (11296) - HADD2.F32 R58, R37.H1_H1, -RZ.H0_H0 ;
 Instr 707 @ 0x2c30 (11312) - FFMA R11, R54, R13.reuse, R11 ;
 Instr 708 @ 0x2c40 (11328) - HADD2.F32 R55, R2.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 709 @ 0x2c50 (11344) - FFMA R12, R59, R13.reuse, R12 ;
 Instr 710 @ 0x2c60 (11360) - HADD2.F32 R56, R2.H1_H1, -RZ.H0_H0 ;
 Instr 711 @ 0x2c70 (11376) - FFMA R53, R60, R13.reuse, R53 ;
 Instr 712 @ 0x2c80 (11392) - HADD2.F32 R19, R3.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 713 @ 0x2c90 (11408) - FFMA R16, R57, R13.reuse, R16 ;
 Instr 714 @ 0x2ca0 (11424) - HADD2.F32 R54, R3.H1_H1, -RZ.H0_H0 ;
 Instr 715 @ 0x2cb0 (11440) - FFMA R17, R58, R13, R17 ;
 Instr 716 @ 0x2cc0 (11456) - FFMA R14, R55, R13.reuse, R14 ;
 Instr 717 @ 0x2cd0 (11472) - FFMA R15, R56, R13.reuse, R15 ;
 Instr 718 @ 0x2ce0 (11488) - FFMA R18, R19, R13.reuse, R18 ;
 Instr 719 @ 0x2cf0 (11504) - FFMA R61, R54, R13, R61 ;
Basic block id 27 - num instructions 121
 Instr 720 @ 0x2d00 (11520) - F2F.F16.F32 R4, R4 ;
 Instr 721 @ 0x2d10 (11536) - IMAD.MOV.U32 R59, RZ, RZ, RZ ;
 Instr 722 @ 0x2d20 (11552) - ISETP.GE.AND P1, PT, R89, c[0x0][0x3c4], PT ;
 Instr 723 @ 0x2d30 (11568) - IMAD.MOV.U32 R55, RZ, RZ, RZ ;
 Instr 724 @ 0x2d40 (11584) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 725 @ 0x2d50 (11600) - IMAD.MOV.U32 R63, RZ, RZ, c[0x0][0x250] ;
 Instr 726 @ 0x2d60 (11616) - ISETP.GE.OR P6, PT, R0, c[0x0][0x1b8], P1 ;
 Instr 727 @ 0x2d70 (11632) - F2F.F16.F32 R5, R5 ;
 Instr 728 @ 0x2d80 (11648) - F2F.F16.F32 R8, R8 ;
 Instr 729 @ 0x2d90 (11664) - F2F.F16.F32 R9, R9 ;
 Instr 730 @ 0x2da0 (11680) - PRMT R4, R4, 0x5410, R5 ;
 Instr 731 @ 0x2db0 (11696) - PRMT R54, R4, 0x5410, R5 ;
 Instr 732 @ 0x2dc0 (11712) - F2F.F16.F32 R10, R10 ;
 Instr 733 @ 0x2dd0 (11728) - F2F.F16.F32 R11, R11 ;
 Instr 734 @ 0x2de0 (11744) - PRMT R5, R8.reuse, 0x5410, R9.reuse ;
 Instr 735 @ 0x2df0 (11760) - PRMT R8, R8, 0x5410, R9 ;
 Instr 736 @ 0x2e00 (11776) - F2F.F16.F32 R19, c[0x0][0x210] ;
 Instr 737 @ 0x2e10 (11792) - F2F.F16.F32 R18, R18 ;
 Instr 738 @ 0x2e20 (11808) - PRMT R9, R10.reuse, 0x5410, R11.reuse ;
 Instr 739 @ 0x2e30 (11824) - PRMT R58, R10, 0x5410, R11 ;
 Instr 740 @ 0x2e40 (11840) - IMAD.MOV.U32 R11, RZ, RZ, c[0x0][0x3c8] ;
 Instr 741 @ 0x2e50 (11856) - F2F.F16.F32 R61, R61 ;
 Instr 742 @ 0x2e60 (11872) - ISETP.NE.AND P0, PT, R11, 0x1, PT ;
 Instr 743 @ 0x2e70 (11888) - HSET2.GTU.AND R58, R58, R19.reuse.H0_H0, PT ;
 Instr 744 @ 0x2e80 (11904) - HSET2.GTU.AND R11, R54, R19.reuse.H0_H0, PT ;
 Instr 745 @ 0x2e90 (11920) - HSET2.GTU.AND R54, R8, R19.H0_H0, PT ;
 Instr 746 @ 0x2ea0 (11936) - F2F.F16.F32 R6, R6 ;
 Instr 747 @ 0x2eb0 (11952) - LOP3.LUT R9, R58, R9, RZ, 0xc0, !PT ;
 Instr 748 @ 0x2ec0 (11968) - IMAD.MOV.U32 R58, RZ, RZ, R89 ;
 Instr 749 @ 0x2ed0 (11984) - F2F.F16.F32 R7, R7 ;
 Instr 750 @ 0x2ee0 (12000) - PRMT R8, R18.reuse, 0x5410, R61.reuse ;
 Instr 751 @ 0x2ef0 (12016) - PRMT R18, R18, 0x5410, R61 ;
 Instr 752 @ 0x2f00 (12032) - LOP3.LUT R61, R11, R4, RZ, 0xc0, !PT ;
 Instr 753 @ 0x2f10 (12048) - @P0 IMAD.HI.U32 R4, R89.reuse, c[0x0][0x3dc], RZ ;
 Instr 754 @ 0x2f20 (12064) - LOP3.LUT R11, R54, R5, RZ, 0xc0, !PT ;
 Instr 755 @ 0x2f30 (12080) - F2F.F16.F32 R14, R14 ;
 Instr 756 @ 0x2f40 (12096) - IADD3 R54, R89, 0x8, RZ ;
 Instr 757 @ 0x2f50 (12112) - HSET2.GTU.AND R5, R18, R19.H0_H0, PT ;
 Instr 758 @ 0x2f60 (12128) - IMAD.MOV.U32 R18, RZ, RZ, R89 ;
 Instr 759 @ 0x2f70 (12144) - @P0 SHF.R.U32.HI R58, RZ, c[0x0][0x3e0], R4 ;
 Instr 760 @ 0x2f80 (12160) - IMAD.MOV.U32 R57, RZ, RZ, R54 ;
 Instr 761 @ 0x2f90 (12176) - F2F.F16.F32 R15, R15 ;
 Instr 762 @ 0x2fa0 (12192) - PRMT R6, R6, 0x5410, R7.reuse ;
 Instr 763 @ 0x2fb0 (12208) - @P0 IMAD.MOV R4, RZ, RZ, -R58 ;
 Instr 764 @ 0x2fc0 (12224) - LOP3.LUT R5, R5, R8, RZ, 0xc0, !PT ;
 Instr 765 @ 0x2fd0 (12240) - @P0 IMAD.HI.U32 R8, R57.reuse, c[0x0][0x3dc], RZ ;
 Instr 766 @ 0x2fe0 (12256) - PRMT R56, R6, 0x5410, R7 ;
 Instr 767 @ 0x2ff0 (12272) - ISETP.GE.AND P4, PT, R57, c[0x0][0x3c4], PT ;
 Instr 768 @ 0x3000 (12288) - F2F.F16.F32 R12, R12 ;
 Instr 769 @ 0x3010 (12304) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x3e0], R8 ;
 Instr 770 @ 0x3020 (12320) - @P0 IMAD R59, R4, c[0x0][0x3c8], R89 ;
 Instr 771 @ 0x3030 (12336) - ISETP.GE.OR P5, PT, R0, c[0x0][0x1b8], P4 ;
 Instr 772 @ 0x3040 (12352) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x250] ;
 Instr 773 @ 0x3050 (12368) - IMAD R59, R59, c[0x0][0x250], RZ ;
 Instr 774 @ 0x3060 (12384) - F2F.F16.F32 R53, R53 ;
 Instr 775 @ 0x3070 (12400) - PRMT R10, R14, 0x5410, R15 ;
 Instr 776 @ 0x3080 (12416) - IMAD R59, R58, c[0x0][0x244], R59 ;
 Instr 777 @ 0x3090 (12432) - PRMT R14, R14, 0x5410, R15 ;
 Instr 778 @ 0x30a0 (12448) - @!P6 IMAD.WIDE R58, R59, 0x2, R42 ;
 Instr 779 @ 0x30b0 (12464) - F2F.F16.F32 R16, R16 ;
 Instr 780 @ 0x30c0 (12480) - HSET2.GTU.AND R15, R14, R19.H0_H0, PT ;
 Instr 781 @ 0x30d0 (12496) - F2F.F16.F32 R17, R17 ;
 Instr 782 @ 0x30e0 (12512) - PRMT R12, R12, 0x5410, R53.reuse ;
 Instr 783 @ 0x30f0 (12528) - LOP3.LUT R15, R15, R10, RZ, 0xc0, !PT ;
 Instr 784 @ 0x3100 (12544) - @P0 IMAD.HI.U32 R10, R57, c[0x0][0x3dc], RZ ;
 Instr 785 @ 0x3110 (12560) - PRMT R60, R12, 0x5410, R53 ;
 Instr 786 @ 0x3120 (12576) - HSET2.GTU.AND R53, R56, R19.H0_H0, PT ;
 Instr 787 @ 0x3130 (12592) - IMAD.MOV.U32 R56, RZ, RZ, RZ ;
 Instr 788 @ 0x3140 (12608) - @P0 SHF.R.U32.HI R54, RZ, c[0x0][0x3e0], R10 ;
 Instr 789 @ 0x3150 (12624) - @P0 IMAD.MOV R14, RZ, RZ, -R54 ;
 Instr 790 @ 0x3160 (12640) - LOP3.LUT R53, R53, R6, RZ, 0xc0, !PT ;
 Instr 791 @ 0x3170 (12656) - @P0 IMAD.HI.U32 R6, R89, c[0x0][0x3dc], RZ ;
 Instr 792 @ 0x3180 (12672) - PRMT R7, R16.reuse, 0x5410, R17.reuse ;
 Instr 793 @ 0x3190 (12688) - PRMT R16, R16, 0x5410, R17 ;
 Instr 794 @ 0x31a0 (12704) - @P0 IMAD R56, R14, c[0x0][0x3c8], R57 ;
 Instr 795 @ 0x31b0 (12720) - HSET2.GTU.AND R17, R60, R19.reuse.H0_H0, PT ;
 Instr 796 @ 0x31c0 (12736) - @P0 SHF.R.U32.HI R18, RZ, c[0x0][0x3e0], R6 ;
 Instr 797 @ 0x31d0 (12752) - @P0 IMAD.MOV R6, RZ, RZ, -R8 ;
 Instr 798 @ 0x31e0 (12768) - HSET2.GTU.AND R16, R16, R19.H0_H0, PT ;
 Instr 799 @ 0x31f0 (12784) - @P0 IMAD.MOV R10, RZ, RZ, -R18 ;
 Instr 800 @ 0x3200 (12800) - LOP3.LUT R17, R17, R12, RZ, 0xc0, !PT ;
 Instr 801 @ 0x3210 (12816) - F2F.F16.F32 R12, c[0x0][0x220] ;
 Instr 802 @ 0x3220 (12832) - @P0 IMAD R55, R10, c[0x0][0x3c8], R89 ;
 Instr 803 @ 0x3230 (12848) - LOP3.LUT R7, R16, R7, RZ, 0xc0, !PT ;
 Instr 804 @ 0x3240 (12864) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 805 @ 0x3250 (12880) - IMAD R65, R55, R4, 0x10 ;
 Instr 806 @ 0x3260 (12896) - @P0 IMAD R16, R6, c[0x0][0x3c8], R57 ;
 Instr 807 @ 0x3270 (12912) - @P0 IMAD.MOV.U32 R57, RZ, RZ, R8 ;
 Instr 808 @ 0x3280 (12928) - IMAD R16, R16, R63, 0x10 ;
 Instr 809 @ 0x3290 (12944) - IMAD R55, R56, c[0x0][0x250], RZ ;
 Instr 810 @ 0x32a0 (12960) - IMAD R57, R57, c[0x0][0x244], R16 ;
 Instr 811 @ 0x32b0 (12976) - HSET2.LEU.AND R4, R11, R12.reuse.H0_H0, PT ;
 Instr 812 @ 0x32c0 (12992) - IADD3 R16, R0, 0x10, RZ ;
 Instr 813 @ 0x32d0 (13008) - IMAD R55, R54, c[0x0][0x244], R55 ;
 Instr 814 @ 0x32e0 (13024) - PRMT R14, R12, 0x5410, R12 ;
 Instr 815 @ 0x32f0 (13040) - HSET2.LEU.AND R10, R61, R12.reuse.H0_H0, PT ;
 Instr 816 @ 0x3300 (13056) - ISETP.GE.OR P1, PT, R16.reuse, c[0x0][0x1b8], P1 ;
 Instr 817 @ 0x3310 (13072) - HSET2.LEU.AND R54, R7, R12.reuse.H0_H0, PT ;
 Instr 818 @ 0x3320 (13088) - ISETP.GE.OR P4, PT, R16, c[0x0][0x1b8], P4 ;
 Instr 819 @ 0x3330 (13104) - HSET2.LEU.AND R8, R53, R12.reuse.H0_H0, PT ;
 Instr 820 @ 0x3340 (13120) - IMAD R63, R18, c[0x0][0x244], R65 ;
 Instr 821 @ 0x3350 (13136) - HSET2.LEU.AND R56, R9, R12.reuse.H0_H0, PT ;
 Instr 822 @ 0x3360 (13152) - LOP3.LUT R11, R11, R14.reuse, R4, 0xe4, !PT ;
 Instr 823 @ 0x3370 (13168) - HSET2.LEU.AND R6, R17, R12.reuse.H0_H0, PT ;
 Instr 824 @ 0x3380 (13184) - LOP3.LUT R10, R61, R14.reuse, R10, 0xe4, !PT ;
 Instr 825 @ 0x3390 (13200) - HSET2.LEU.AND R4, R15, R12.reuse.H0_H0, PT ;
 Instr 826 @ 0x33a0 (13216) - LOP3.LUT R7, R7, R14.reuse, R54, 0xe4, !PT ;
 Instr 827 @ 0x33b0 (13232) - HSET2.LEU.AND R18, R5, R12.H0_H0, PT ;
 Instr 828 @ 0x33c0 (13248) - LOP3.LUT R8, R53, R14.reuse, R8, 0xe4, !PT ;
 Instr 829 @ 0x33d0 (13264) - @!P5 IMAD.WIDE R54, R55, 0x2, R42 ;
 Instr 830 @ 0x33e0 (13280) - LOP3.LUT R9, R9, R14, R56, 0xe4, !PT ;
 Instr 831 @ 0x33f0 (13296) - LOP3.LUT R6, R17, R14.reuse, R6, 0xe4, !PT ;
 Instr 832 @ 0x3400 (13312) - @!P1 IMAD.WIDE R60, R63, 0x2, R42 ;
 Instr 833 @ 0x3410 (13328) - LOP3.LUT R4, R15, R14.reuse, R4, 0xe4, !PT ;
 Instr 834 @ 0x3420 (13344) - @!P6 STG.E.64.SYS [R58.64+UR4], R10 ;
 Instr 835 @ 0x3430 (13360) - LOP3.LUT R5, R5, R14, R18, 0xe4, !PT ;
 Instr 836 @ 0x3440 (13376) - @!P4 IMAD.WIDE R56, R57, 0x2, R42 ;
 Instr 837 @ 0x3450 (13392) - @!P5 STG.E.64.SYS [R54.64+UR4], R8 ;
 Instr 838 @ 0x3460 (13408) - @!P1 STG.E.64.SYS [R60.64+UR4], R6 ;
 Instr 839 @ 0x3470 (13424) - @!P4 STG.E.64.SYS [R56.64+UR4], R4 ;
 Instr 840 @ 0x3480 (13440) - @!P2 BRA 0x37b0 ;
Basic block id 28 - num instructions 50
 Instr 841 @ 0x3490 (13456) - IADD3 R18, R89.reuse, 0x40, RZ ;
 Instr 842 @ 0x34a0 (13472) - CS2R R10, SRZ ;
 Instr 843 @ 0x34b0 (13488) - IADD3 R15, R89, 0x48, RZ ;
 Instr 844 @ 0x34c0 (13504) - ULDC.64 UR4, c[0x0][0x178] ;
 Instr 845 @ 0x34d0 (13520) - MOV R55, R18 ;
 Instr 846 @ 0x34e0 (13536) - MOV R53, R15 ;
 Instr 847 @ 0x34f0 (13552) - MOV R54, RZ ;
 Instr 848 @ 0x3500 (13568) - @P0 IMAD.HI.U32 R5, R55.reuse, c[0x0][0x3dc], RZ ;
 Instr 849 @ 0x3510 (13584) - MOV R17, RZ ;
 Instr 850 @ 0x3520 (13600) - ISETP.GE.AND P4, PT, R55.reuse, c[0x0][0x3c4], PT ;
 Instr 851 @ 0x3530 (13616) - @P0 IMAD.HI.U32 R7, R55, c[0x0][0x3dc], RZ ;
 Instr 852 @ 0x3540 (13632) - @P0 SHF.R.U32.HI R18, RZ, c[0x0][0x3e0], R5 ;
 Instr 853 @ 0x3550 (13648) - ISETP.GE.AND P1, PT, R53.reuse, c[0x0][0x3c4], PT ;
 Instr 854 @ 0x3560 (13664) - @P0 IMAD.HI.U32 R4, R53, c[0x0][0x3dc], RZ ;
 Instr 855 @ 0x3570 (13680) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3e0], R7 ;
 Instr 856 @ 0x3580 (13696) - @P0 IADD3 R9, -R18, RZ, RZ ;
 Instr 857 @ 0x3590 (13712) - @P0 IMAD.HI.U32 R5, R53, c[0x0][0x3dc], RZ ;
 Instr 858 @ 0x35a0 (13728) - @P0 SHF.R.U32.HI R15, RZ, c[0x0][0x3e0], R4 ;
 Instr 859 @ 0x35b0 (13744) - ISETP.GE.OR P6, PT, R0, c[0x0][0x1b8], P4 ;
 Instr 860 @ 0x35c0 (13760) - @P0 IMAD.MOV R6, RZ, RZ, -R7 ;
 Instr 861 @ 0x35d0 (13776) - @P0 SHF.R.U32.HI R5, RZ, c[0x0][0x3e0], R5 ;
 Instr 862 @ 0x35e0 (13792) - @P0 IMAD R54, R9, c[0x0][0x3c8], R55.reuse ;
 Instr 863 @ 0x35f0 (13808) - @P0 IADD3 R8, -R15, RZ, RZ ;
 Instr 864 @ 0x3600 (13824) - @P0 IMAD R11, R6, c[0x0][0x3c8], R55 ;
 Instr 865 @ 0x3610 (13840) - @P0 IADD3 R4, -R5, RZ, RZ ;
 Instr 866 @ 0x3620 (13856) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x250] ;
 Instr 867 @ 0x3630 (13872) - @P0 MOV R55, R7 ;
 Instr 868 @ 0x3640 (13888) - @P0 IMAD R17, R8, c[0x0][0x3c8], R53.reuse ;
 Instr 869 @ 0x3650 (13904) - MOV R7, c[0x0][0x250] ;
 Instr 870 @ 0x3660 (13920) - @P0 IMAD R10, R4, c[0x0][0x3c8], R53 ;
 Instr 871 @ 0x3670 (13936) - ISETP.GE.OR P5, PT, R0, c[0x0][0x1b8], P1 ;
 Instr 872 @ 0x3680 (13952) - IMAD R9, R54, c[0x0][0x250], RZ ;
 Instr 873 @ 0x3690 (13968) - ISETP.GE.OR P4, PT, R16.reuse, c[0x0][0x1b8], P4 ;
 Instr 874 @ 0x36a0 (13984) - IMAD R6, R11, R6, 0x10 ;
 Instr 875 @ 0x36b0 (14000) - ISETP.GE.OR P1, PT, R16, c[0x0][0x1b8], P1 ;
 Instr 876 @ 0x36c0 (14016) - IMAD R4, R17, c[0x0][0x250], RZ ;
 Instr 877 @ 0x36d0 (14032) - @P0 MOV R53, R5 ;
 Instr 878 @ 0x36e0 (14048) - IMAD R10, R10, R7, 0x10 ;
 Instr 879 @ 0x36f0 (14064) - IMAD R9, R18, c[0x0][0x244], R9 ;
 Instr 880 @ 0x3700 (14080) - IMAD R55, R55, c[0x0][0x244], R6 ;
 Instr 881 @ 0x3710 (14096) - IMAD R5, R15, c[0x0][0x244], R4 ;
 Instr 882 @ 0x3720 (14112) - IMAD R53, R53, c[0x0][0x244], R10 ;
 Instr 883 @ 0x3730 (14128) - @!P6 IMAD.WIDE R6, R9, 0x2, R42 ;
 Instr 884 @ 0x3740 (14144) - @!P5 IMAD.WIDE R4, R5, 0x2, R42 ;
 Instr 885 @ 0x3750 (14160) - @!P4 IMAD.WIDE R8, R55, 0x2, R42.reuse ;
 Instr 886 @ 0x3760 (14176) - @!P6 LDG.E.64.SYS R40, [R6.64+UR4] ;
 Instr 887 @ 0x3770 (14192) - @!P1 IMAD.WIDE R10, R53, 0x2, R42 ;
 Instr 888 @ 0x3780 (14208) - @!P5 LDG.E.64.SYS R38, [R4.64+UR4] ;
 Instr 889 @ 0x3790 (14224) - @!P4 LDG.E.64.SYS R36, [R8.64+UR4] ;
 Instr 890 @ 0x37a0 (14240) - @!P1 LDG.E.64.SYS R2, [R10.64+UR4] ;
Basic block id 29 - num instructions 17
 Instr 891 @ 0x37b0 (14256) - FMUL R20, R20, R52.reuse ;
 Instr 892 @ 0x37c0 (14272) - FMUL R21, R21, R52 ;
 Instr 893 @ 0x37d0 (14288) - FMUL R22, R22, R52.reuse ;
 Instr 894 @ 0x37e0 (14304) - FMUL R23, R23, R52.reuse ;
 Instr 895 @ 0x37f0 (14320) - FMUL R24, R24, R52.reuse ;
 Instr 896 @ 0x3800 (14336) - FMUL R25, R25, R52.reuse ;
 Instr 897 @ 0x3810 (14352) - FMUL R26, R26, R52.reuse ;
 Instr 898 @ 0x3820 (14368) - FMUL R27, R27, R52 ;
 Instr 899 @ 0x3830 (14384) - FMUL R28, R28, R52.reuse ;
 Instr 900 @ 0x3840 (14400) - FMUL R29, R29, R52.reuse ;
 Instr 901 @ 0x3850 (14416) - FMUL R30, R30, R52.reuse ;
 Instr 902 @ 0x3860 (14432) - FMUL R31, R31, R52.reuse ;
 Instr 903 @ 0x3870 (14448) - FMUL R32, R32, R52.reuse ;
 Instr 904 @ 0x3880 (14464) - FMUL R33, R33, R52 ;
 Instr 905 @ 0x3890 (14480) - FMUL R34, R34, R52.reuse ;
 Instr 906 @ 0x38a0 (14496) - FMUL R35, R35, R52 ;
 Instr 907 @ 0x38b0 (14512) - @!P3 BRA 0x39c0 ;
Basic block id 30 - num instructions 16
 Instr 908 @ 0x38c0 (14528) - FADD R20, R51.reuse, R20 ;
 Instr 909 @ 0x38d0 (14544) - FADD R22, R51, R22 ;
 Instr 910 @ 0x38e0 (14560) - FADD R21, R50.reuse, R21 ;
 Instr 911 @ 0x38f0 (14576) - FADD R23, R50, R23 ;
 Instr 912 @ 0x3900 (14592) - FADD R24, R49, R24 ;
 Instr 913 @ 0x3910 (14608) - FADD R26, R49, R26 ;
 Instr 914 @ 0x3920 (14624) - FADD R25, R48.reuse, R25 ;
 Instr 915 @ 0x3930 (14640) - FADD R27, R48, R27 ;
 Instr 916 @ 0x3940 (14656) - FADD R28, R47.reuse, R28 ;
 Instr 917 @ 0x3950 (14672) - FADD R30, R47, R30 ;
 Instr 918 @ 0x3960 (14688) - FADD R29, R46, R29 ;
 Instr 919 @ 0x3970 (14704) - FADD R31, R46, R31 ;
 Instr 920 @ 0x3980 (14720) - FADD R32, R45.reuse, R32 ;
 Instr 921 @ 0x3990 (14736) - FADD R34, R45, R34 ;
 Instr 922 @ 0x39a0 (14752) - FADD R33, R44.reuse, R33 ;
 Instr 923 @ 0x39b0 (14768) - FADD R35, R44, R35 ;
Basic block id 31 - num instructions 1
 Instr 924 @ 0x39c0 (14784) - @!P2 BRA 0x3bd0 ;
Basic block id 32 - num instructions 32
 Instr 925 @ 0x39d0 (14800) - HADD2.F32 R4, R40.H0_H0, -RZ.H0_H0 ;
 Instr 926 @ 0x39e0 (14816) - HADD2.F32 R6, R38.H0_H0, -RZ.H0_H0 ;
 Instr 927 @ 0x39f0 (14832) - HADD2.F32 R10, R39.H1_H1, -RZ.H0_H0 ;
 Instr 928 @ 0x3a00 (14848) - HADD2.F32 R5, R41.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 929 @ 0x3a10 (14864) - HADD2.F32 R8, R41.H1_H1, -RZ.H0_H0 ;
 Instr 930 @ 0x3a20 (14880) - FFMA R20, R4, R13.reuse, R20 ;
 Instr 931 @ 0x3a30 (14896) - HADD2.F32 R40, R40.H1_H1, -RZ.H0_H0 ;
 Instr 932 @ 0x3a40 (14912) - FFMA R22, R6, R13.reuse, R22 ;
 Instr 933 @ 0x3a50 (14928) - HADD2.F32 R4, R36.H0_H0, -RZ.H0_H0 ;
 Instr 934 @ 0x3a60 (14944) - FFMA R27, R10, R13.reuse, R27 ;
 Instr 935 @ 0x3a70 (14960) - HADD2.F32 R6, R2.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 936 @ 0x3a80 (14976) - FFMA R24, R5, R13.reuse, R24 ;
 Instr 937 @ 0x3a90 (14992) - HADD2.F32 R10, R2.H1_H1, -RZ.H0_H0 ;
 Instr 938 @ 0x3aa0 (15008) - FFMA R25, R8, R13.reuse, R25 ;
 Instr 939 @ 0x3ab0 (15024) - HADD2.F32 R38, R38.H1_H1, -RZ.H0_H0 ;
 Instr 940 @ 0x3ac0 (15040) - FFMA R21, R40, R13.reuse, R21 ;
 Instr 941 @ 0x3ad0 (15056) - HADD2.F32 R7, R39.H0_H0, -RZ.H0_H0 ;
 Instr 942 @ 0x3ae0 (15072) - FFMA R28, R4, R13.reuse, R28 ;
 Instr 943 @ 0x3af0 (15088) - HADD2.F32 R36, R36.H1_H1, -RZ.H0_H0 ;
 Instr 944 @ 0x3b00 (15104) - FFMA R30, R6, R13.reuse, R30 ;
 Instr 945 @ 0x3b10 (15120) - HADD2.F32 R5, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 946 @ 0x3b20 (15136) - FFMA R31, R10, R13.reuse, R31 ;
 Instr 947 @ 0x3b30 (15152) - HADD2.F32 R8, R37.H1_H1, -RZ.H0_H0 ;
 Instr 948 @ 0x3b40 (15168) - FFMA R23, R38, R13.reuse, R23 ;
 Instr 949 @ 0x3b50 (15184) - HADD2.F32 R2, R3.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 950 @ 0x3b60 (15200) - FFMA R26, R7, R13.reuse, R26 ;
 Instr 951 @ 0x3b70 (15216) - HADD2.F32 R18, R3.H1_H1, -RZ.H0_H0 ;
 Instr 952 @ 0x3b80 (15232) - FFMA R29, R36, R13, R29 ;
 Instr 953 @ 0x3b90 (15248) - FFMA R32, R5, R13.reuse, R32 ;
 Instr 954 @ 0x3ba0 (15264) - FFMA R33, R8, R13.reuse, R33 ;
 Instr 955 @ 0x3bb0 (15280) - FFMA R34, R2, R13.reuse, R34 ;
 Instr 956 @ 0x3bc0 (15296) - FFMA R35, R18, R13, R35 ;
Basic block id 33 - num instructions 116
 Instr 957 @ 0x3bd0 (15312) - F2F.F16.F32 R20, R20 ;
 Instr 958 @ 0x3be0 (15328) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 959 @ 0x3bf0 (15344) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 960 @ 0x3c00 (15360) - F2F.F16.F32 R21, R21 ;
 Instr 961 @ 0x3c10 (15376) - F2F.F16.F32 R22, R22 ;
 Instr 962 @ 0x3c20 (15392) - F2F.F16.F32 R23, R23 ;
 Instr 963 @ 0x3c30 (15408) - PRMT R2, R20, 0x5410, R21 ;
 Instr 964 @ 0x3c40 (15424) - PRMT R20, R20, 0x5410, R21 ;
 Instr 965 @ 0x3c50 (15440) - F2F.F16.F32 R28, R28 ;
 Instr 966 @ 0x3c60 (15456) - HSET2.GTU.AND R11, R20, R19.H0_H0, PT ;
 Instr 967 @ 0x3c70 (15472) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 968 @ 0x3c80 (15488) - F2F.F16.F32 R29, R29 ;
 Instr 969 @ 0x3c90 (15504) - PRMT R4, R22.reuse, 0x5410, R23.reuse ;
 Instr 970 @ 0x3ca0 (15520) - PRMT R22, R22, 0x5410, R23 ;
 Instr 971 @ 0x3cb0 (15536) - LOP3.LUT R11, R11, R2, RZ, 0xc0, !PT ;
 Instr 972 @ 0x3cc0 (15552) - IADD3 R2, R89.reuse, 0x40, RZ ;
 Instr 973 @ 0x3cd0 (15568) - F2F.F16.F32 R30, R30 ;
 Instr 974 @ 0x3ce0 (15584) - HSET2.GTU.AND R13, R22, R19.H0_H0, PT ;
 Instr 975 @ 0x3cf0 (15600) - IADD3 R89, R89, 0x48, RZ ;
 Instr 976 @ 0x3d00 (15616) - F2F.F16.F32 R31, R31 ;
 Instr 977 @ 0x3d10 (15632) - PRMT R6, R28.reuse, 0x5410, R29.reuse ;
 Instr 978 @ 0x3d20 (15648) - PRMT R28, R28, 0x5410, R29 ;
 Instr 979 @ 0x3d30 (15664) - LOP3.LUT R13, R13, R4, RZ, 0xc0, !PT ;
 Instr 980 @ 0x3d40 (15680) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
 Instr 981 @ 0x3d50 (15696) - F2F.F16.F32 R24, R24 ;
 Instr 982 @ 0x3d60 (15712) - HSET2.GTU.AND R15, R28, R19.H0_H0, PT ;
 Instr 983 @ 0x3d70 (15728) - @P0 IMAD.HI.U32 R10, R4.reuse, c[0x0][0x3dc], RZ ;
 Instr 984 @ 0x3d80 (15744) - ISETP.GE.AND P2, PT, R4, c[0x0][0x3c4], PT ;
 Instr 985 @ 0x3d90 (15760) - ISETP.GE.OR P4, PT, R0, c[0x0][0x1b8], P2 ;
 Instr 986 @ 0x3da0 (15776) - F2F.F16.F32 R25, R25 ;
 Instr 987 @ 0x3db0 (15792) - PRMT R8, R30.reuse, 0x5410, R31.reuse ;
 Instr 988 @ 0x3dc0 (15808) - PRMT R30, R30, 0x5410, R31 ;
 Instr 989 @ 0x3dd0 (15824) - LOP3.LUT R15, R15, R6, RZ, 0xc0, !PT ;
 Instr 990 @ 0x3de0 (15840) - IMAD.MOV.U32 R6, RZ, RZ, R89 ;
 Instr 991 @ 0x3df0 (15856) - @P0 SHF.R.U32.HI R2, RZ, c[0x0][0x3e0], R10 ;
 Instr 992 @ 0x3e00 (15872) - F2F.F16.F32 R26, R26 ;
 Instr 993 @ 0x3e10 (15888) - HSET2.GTU.AND R17, R30, R19.H0_H0, PT ;
 Instr 994 @ 0x3e20 (15904) - ISETP.GE.OR P2, PT, R16, c[0x0][0x1b8], P2 ;
 Instr 995 @ 0x3e30 (15920) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 996 @ 0x3e40 (15936) - ISETP.GE.AND P1, PT, R6, c[0x0][0x3c4], PT ;
 Instr 997 @ 0x3e50 (15952) - F2F.F16.F32 R27, R27 ;
 Instr 998 @ 0x3e60 (15968) - LOP3.LUT R17, R17, R8, RZ, 0xc0, !PT ;
 Instr 999 @ 0x3e70 (15984) - @P0 IMAD.HI.U32 R8, R6, c[0x0][0x3dc], RZ ;
 Instr 1000 @ 0x3e80 (16000) - ISETP.GE.OR P3, PT, R0, c[0x0][0x1b8], P1 ;
 Instr 1001 @ 0x3e90 (16016) - PRMT R3, R24, 0x5410, R25.reuse ;
 Instr 1002 @ 0x3ea0 (16032) - @P0 IMAD.HI.U32 R0, R6, c[0x0][0x3dc], RZ ;
 Instr 1003 @ 0x3eb0 (16048) - @P0 SHF.R.U32.HI R89, RZ, c[0x0][0x3e0], R8 ;
 Instr 1004 @ 0x3ec0 (16064) - F2F.F16.F32 R32, R32 ;
 Instr 1005 @ 0x3ed0 (16080) - PRMT R24, R24, 0x5410, R25 ;
 Instr 1006 @ 0x3ee0 (16096) - @P0 IMAD.HI.U32 R8, R4, c[0x0][0x3dc], RZ ;
 Instr 1007 @ 0x3ef0 (16112) - @P0 SHF.R.U32.HI R0, RZ, c[0x0][0x3e0], R0 ;
 Instr 1008 @ 0x3f00 (16128) - ISETP.GE.OR P1, PT, R16, c[0x0][0x1b8], P1 ;
 Instr 1009 @ 0x3f10 (16144) - @P0 IMAD.MOV R25, RZ, RZ, -R2 ;
 Instr 1010 @ 0x3f20 (16160) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x3e0], R8 ;
 Instr 1011 @ 0x3f30 (16176) - F2F.F16.F32 R33, R33 ;
 Instr 1012 @ 0x3f40 (16192) - PRMT R5, R26.reuse, 0x5410, R27.reuse ;
 Instr 1013 @ 0x3f50 (16208) - HSET2.GTU.AND R24, R24, R19.reuse.H0_H0, PT ;
 Instr 1014 @ 0x3f60 (16224) - PRMT R26, R26, 0x5410, R27 ;
 Instr 1015 @ 0x3f70 (16240) - @P0 IMAD.MOV R23, RZ, RZ, -R89 ;
 Instr 1016 @ 0x3f80 (16256) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1017 @ 0x3f90 (16272) - F2F.F16.F32 R34, R34 ;
 Instr 1018 @ 0x3fa0 (16288) - HSET2.GTU.AND R26, R26, R19.H0_H0, PT ;
 Instr 1019 @ 0x3fb0 (16304) - @P0 IMAD.MOV R21, RZ, RZ, -R8 ;
 Instr 1020 @ 0x3fc0 (16320) - LOP3.LUT R3, R24, R3, RZ, 0xc0, !PT ;
 Instr 1021 @ 0x3fd0 (16336) - @P0 IMAD R20, R25, c[0x0][0x3c8], R4 ;
 Instr 1022 @ 0x3fe0 (16352) - @P0 IMAD R18, R23, c[0x0][0x3c8], R6 ;
 Instr 1023 @ 0x3ff0 (16368) - F2F.F16.F32 R35, R35 ;
 Instr 1024 @ 0x4000 (16384) - PRMT R7, R32.reuse, 0x5410, R33.reuse ;
 Instr 1025 @ 0x4010 (16400) - IMAD.MOV.U32 R23, RZ, RZ, c[0x0][0x250] ;
 Instr 1026 @ 0x4020 (16416) - PRMT R32, R32, 0x5410, R33 ;
 Instr 1027 @ 0x4030 (16432) - @P0 IMAD R16, R21, c[0x0][0x3c8], R4 ;
 Instr 1028 @ 0x4040 (16448) - LOP3.LUT R5, R26, R5, RZ, 0xc0, !PT ;
 Instr 1029 @ 0x4050 (16464) - @P0 IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 1030 @ 0x4060 (16480) - IMAD R21, R20, c[0x0][0x250], RZ ;
 Instr 1031 @ 0x4070 (16496) - HSET2.GTU.AND R32, R32, R19.reuse.H0_H0, PT ;
 Instr 1032 @ 0x4080 (16512) - IMAD R23, R16, R23, 0x10 ;
 Instr 1033 @ 0x4090 (16528) - HSET2.LEU.AND R8, R17, R12.reuse.H0_H0, PT ;
 Instr 1034 @ 0x40a0 (16544) - IMAD R25, R2, c[0x0][0x244], R21 ;
 Instr 1035 @ 0x40b0 (16560) - HSET2.LEU.AND R16, R3, R12.reuse.H0_H0, PT ;
 Instr 1036 @ 0x40c0 (16576) - IMAD R29, R4, c[0x0][0x244], R23 ;
 Instr 1037 @ 0x40d0 (16592) - HSET2.LEU.AND R2, R11, R12.reuse.H0_H0, PT ;
 Instr 1038 @ 0x40e0 (16608) - PRMT R9, R34, 0x5410, R35.reuse ;
 Instr 1039 @ 0x40f0 (16624) - IMAD R18, R18, c[0x0][0x250], RZ ;
 Instr 1040 @ 0x4100 (16640) - PRMT R34, R34, 0x5410, R35 ;
 Instr 1041 @ 0x4110 (16656) - HSET2.LEU.AND R4, R13, R12.H0_H0, PT ;
 Instr 1042 @ 0x4120 (16672) - LOP3.LUT R7, R32, R7, RZ, 0xc0, !PT ;
 Instr 1043 @ 0x4130 (16688) - IMAD R21, R89, c[0x0][0x244], R18 ;
 Instr 1044 @ 0x4140 (16704) - LOP3.LUT R3, R3, R14.reuse, R16, 0xe4, !PT ;
 Instr 1045 @ 0x4150 (16720) - @!P4 IMAD.WIDE R22, R25, 0x2, R42 ;
 Instr 1046 @ 0x4160 (16736) - HSET2.GTU.AND R34, R34, R19.H0_H0, PT ;
 Instr 1047 @ 0x4170 (16752) - LOP3.LUT R2, R11, R14, R2, 0xe4, !PT ;
 Instr 1048 @ 0x4180 (16768) - @P0 IMAD.MOV R19, RZ, RZ, -R0 ;
 Instr 1049 @ 0x4190 (16784) - LOP3.LUT R4, R13, R14.reuse, R4, 0xe4, !PT ;
 Instr 1050 @ 0x41a0 (16800) - @!P3 IMAD.WIDE R20, R21, 0x2, R42 ;
 Instr 1051 @ 0x41b0 (16816) - LOP3.LUT R8, R17, R14, R8, 0xe4, !PT ;
 Instr 1052 @ 0x41c0 (16832) - LOP3.LUT R9, R34, R9, RZ, 0xc0, !PT ;
 Instr 1053 @ 0x41d0 (16848) - @P0 IMAD R10, R19, c[0x0][0x3c8], R6 ;
 Instr 1054 @ 0x41e0 (16864) - @!P4 STG.E.64.SYS [R22.64+UR4], R2 ;
 Instr 1055 @ 0x41f0 (16880) - IMAD.MOV.U32 R19, RZ, RZ, c[0x0][0x250] ;
 Instr 1056 @ 0x4200 (16896) - @P0 IMAD.MOV.U32 R6, RZ, RZ, R0 ;
 Instr 1057 @ 0x4210 (16912) - IMAD R19, R10, R19, 0x10 ;
 Instr 1058 @ 0x4220 (16928) - HSET2.LEU.AND R0, R7, R12.reuse.H0_H0, PT ;
 Instr 1059 @ 0x4230 (16944) - HSET2.LEU.AND R10, R5, R12.reuse.H0_H0, PT ;
 Instr 1060 @ 0x4240 (16960) - IMAD R27, R6, c[0x0][0x244], R19 ;
 Instr 1061 @ 0x4250 (16976) - HSET2.LEU.AND R6, R15, R12.reuse.H0_H0, PT ;
 Instr 1062 @ 0x4260 (16992) - @!P2 IMAD.WIDE R18, R29, 0x2, R42 ;
 Instr 1063 @ 0x4270 (17008) - HSET2.LEU.AND R12, R9, R12.H0_H0, PT ;
 Instr 1064 @ 0x4280 (17024) - LOP3.LUT R7, R7, R14.reuse, R0, 0xe4, !PT ;
 Instr 1065 @ 0x4290 (17040) - LOP3.LUT R5, R5, R14, R10, 0xe4, !PT ;
 Instr 1066 @ 0x42a0 (17056) - @!P1 IMAD.WIDE R42, R27, 0x2, R42 ;
 Instr 1067 @ 0x42b0 (17072) - LOP3.LUT R6, R15, R14.reuse, R6, 0xe4, !PT ;
 Instr 1068 @ 0x42c0 (17088) - LOP3.LUT R9, R9, R14, R12, 0xe4, !PT ;
 Instr 1069 @ 0x42d0 (17104) - @!P3 STG.E.64.SYS [R20.64+UR4], R4 ;
 Instr 1070 @ 0x42e0 (17120) - @!P2 STG.E.64.SYS [R18.64+UR4], R6 ;
 Instr 1071 @ 0x42f0 (17136) - @!P1 STG.E.64.SYS [R42.64+UR4], R8 ;
 Instr 1072 @ 0x4300 (17152) - EXIT ;
Basic block id 34 - num instructions 1
 Instr 1073 @ 0x4310 (17168) - BRA 0x4310;
inspecting sm75_xmma_fprop_implicit_gemm_indexed_wo_smem_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna2_alignc8_execute_kernel__5x_cudnn - number basic blocks 35
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 8 @ 0x80 (128) - IMAD.MOV.U32 R6, RZ, RZ, -0x1 ;
Inject count_instr before - Instr 22 @ 0x160 (352) - MOV R0, 0x1 ;
Inject count_instr before - Instr 23 @ 0x170 (368) - ISETP.NE.AND P2, PT, R9, R8, PT ;
Inject count_instr before - Instr 26 @ 0x1a0 (416) - SHF.R.U32.HI R6, RZ, 0x1, R6 ;
Inject count_instr before - Instr 35 @ 0x230 (560) - LOP3.LUT R0, R6, R95, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 40 @ 0x280 (640) - LOP3.LUT R0, R6, R95, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 46 @ 0x2e0 (736) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
Inject count_instr before - Instr 50 @ 0x320 (800) - S2R R90, SR_TID.X ;
Inject count_instr before - Instr 69 @ 0x450 (1104) - ISETP.NE.AND P3, PT, R0.reuse, c[0x0][0x3c8], PT ;
Inject count_instr before - Instr 100 @ 0x640 (1600) - BSYNC B0 ;
Inject count_instr before - Instr 109 @ 0x6d0 (1744) - MOV R0, c[0x0][0x3d4] ;
Inject count_instr before - Instr 135 @ 0x870 (2160) - BSYNC B0 ;
Inject count_instr before - Instr 181 @ 0xb50 (2896) - LDS.U.128 R72, [R38.X16] ;
Inject count_instr before - Instr 207 @ 0xcf0 (3312) - ISETP.LT.OR P0, PT, R88.reuse, 0x3, !P4 ;
Inject count_instr before - Instr 495 @ 0x1ef0 (7920) - ISETP.GE.U32.AND P0, PT, R93, c[0x0][0x3d0], PT ;
Inject count_instr before - Instr 502 @ 0x1f60 (8032) - IMAD.MOV.U32 R36, RZ, RZ, R93.reuse ;
Inject count_instr before - Instr 508 @ 0x1fc0 (8128) - MOV R56, RZ ;
Inject count_instr before - Instr 528 @ 0x2100 (8448) - BSYNC B0 ;
Inject count_instr before - Instr 545 @ 0x2210 (8720) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x414] ;
Inject count_instr before - Instr 578 @ 0x2420 (9248) - IADD3 R3, R36.reuse, 0x10, RZ ;
Inject count_instr before - Instr 594 @ 0x2520 (9504) - ISETP.NE.AND P2, PT, RZ, c[0x0][0x3a0], PT ;
Inject count_instr before - Instr 600 @ 0x2580 (9600) - MOV R53, c[0x0][0x3c8] ;
Inject count_instr before - Instr 652 @ 0x28c0 (10432) - FMUL R4, R4, R52.reuse ;
Inject count_instr before - Instr 669 @ 0x29d0 (10704) - FADD R4, R51.reuse, R4 ;
Inject count_instr before - Instr 685 @ 0x2ad0 (10960) - MOV R13, c[0x0][0x1f0] ;
Inject count_instr before - Instr 688 @ 0x2b00 (11008) - HADD2.F32 R59, R40.reuse.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 720 @ 0x2d00 (11520) - F2F.F16.F32 R4, R4 ;
Inject count_instr before - Instr 841 @ 0x3490 (13456) - IADD3 R18, R89.reuse, 0x40, RZ ;
Inject count_instr before - Instr 891 @ 0x37b0 (14256) - FMUL R20, R20, R52.reuse ;
Inject count_instr before - Instr 908 @ 0x38c0 (14528) - FADD R20, R51.reuse, R20 ;
Inject count_instr before - Instr 924 @ 0x39c0 (14784) - @!P2 BRA 0x3bd0 ;
Inject count_instr before - Instr 925 @ 0x39d0 (14800) - HADD2.F32 R4, R40.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 957 @ 0x3bd0 (15312) - F2F.F16.F32 R20, R20 ;
Inject count_instr before - Instr 1073 @ 0x4310 (17168) - BRA 0x4310;
kernel 105 - sm75_xmma_fprop_implicit_gemm_indexed_wo_smem_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x32x16_stage1_warpsize4x1x1_g1_tensor16x8x8_aligna2_alignc8_execute_kernel__5x_cudnn - #thread-blocks 196,  kernel instructions 2951760, total instructions 6102172
Function void cudnn::engines_precompiled::nhwcToNchwKernel<__half, __half, float, true, false, (cudnnKernelDataType_t)0>(cudnn::engines_precompiled::nhwc2nchw_params_t<float>, __half const*, __half*)
Basic block id 0 - num instructions 13
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R0, SR_TID.X ;
 Instr 2 @ 0x20 (32) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3 @ 0x30 (48) - BSSY B0, 0x1970 ;
 Instr 4 @ 0x40 (64) - S2R R14, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - SHF.R.S32.HI R3, RZ, 0x1f, R0 ;
 Instr 6 @ 0x60 (96) - LEA.HI R3, R3, R0, RZ, 0x5 ;
 Instr 7 @ 0x70 (112) - LOP3.LUT R15, R3, 0xffffffe0, RZ, 0xc0, !PT ;
 Instr 8 @ 0x80 (128) - SHF.R.S32.HI R16, RZ, 0x5, R3 ;
 Instr 9 @ 0x90 (144) - IMAD.IADD R15, R0, 0x1, -R15 ;
 Instr 10 @ 0xa0 (160) - IMAD R2, R14, 0x20, R15 ;
 Instr 11 @ 0xb0 (176) - ISETP.GE.AND P0, PT, R2, c[0x0][0x16c], PT ;
 Instr 12 @ 0xc0 (192) - @P0 BRA 0x1960 ;
Basic block id 1 - num instructions 9
 Instr 13 @ 0xd0 (208) - S2R R5, SR_CTAID.X ;
 Instr 14 @ 0xe0 (224) - S2R R4, SR_CTAID.Z ;
 Instr 15 @ 0xf0 (240) - IMAD.SHL.U32 R5, R5, 0x20, RZ ;
 Instr 16 @ 0x100 (256) - IMAD R17, R5.reuse, c[0x0][0x19c], R2 ;
 Instr 17 @ 0x110 (272) - IADD3 R2, R5, 0x20, RZ ;
 Instr 18 @ 0x120 (288) - IMAD R17, R4, c[0x0][0x170], R17 ;
 Instr 19 @ 0x130 (304) - ISETP.GE.AND P0, PT, R2, c[0x0][0x198], PT ;
 Instr 20 @ 0x140 (320) - SHF.R.S32.HI R36, RZ, 0x1f, R17 ;
 Instr 21 @ 0x150 (336) - @!P0 BRA 0x1820 ;
Basic block id 2 - num instructions 2
 Instr 22 @ 0x160 (352) - ISETP.GT.AND P0, PT, R0, 0x3ff, PT ;
 Instr 23 @ 0x170 (368) - @P0 BRA 0x1960 ;
Basic block id 3 - num instructions 10
 Instr 24 @ 0x180 (384) - IMNMX R3, R16.reuse, 0x18, !PT ;
 Instr 25 @ 0x190 (400) - BMOV.32.CLEAR RZ, B1 ;
 Instr 26 @ 0x1a0 (416) - BSSY B1, 0x380 ;
 Instr 27 @ 0x1b0 (432) - IMAD.MOV.U32 R6, RZ, RZ, R16 ;
 Instr 28 @ 0x1c0 (448) - IADD3 R3, -R16, 0x7, R3 ;
 Instr 29 @ 0x1d0 (464) - LEA.HI R2, R3.reuse, 0x1, RZ, 0x1d ;
 Instr 30 @ 0x1e0 (480) - ISETP.GE.U32.AND P1, PT, R3, 0x18, PT ;
 Instr 31 @ 0x1f0 (496) - LOP3.LUT R2, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 33 @ 0x210 (528) - @!P0 BRA 0x370 ;
Basic block id 4 - num instructions 6
 Instr 34 @ 0x220 (544) - IMAD R3, R16.reuse, 0x21, R15 ;
 Instr 35 @ 0x230 (560) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
 Instr 36 @ 0x240 (576) - IMAD R7, R16.reuse, c[0x0][0x19c], RZ ;
 Instr 37 @ 0x250 (592) - IMAD.IADD R9, R16, 0x1, R5 ;
 Instr 38 @ 0x260 (608) - IMAD.MOV.U32 R6, RZ, RZ, R16 ;
 Instr 39 @ 0x270 (624) - IMAD.SHL.U32 R8, R3, 0x2, RZ ;
Basic block id 5 - num instructions 15
 Instr 40 @ 0x280 (640) - ISETP.GE.AND P0, PT, R9, c[0x0][0x198], PT ;
 Instr 41 @ 0x290 (656) - @!P0 IADD3 R3, P2, R17, R7, RZ ;
 Instr 42 @ 0x2a0 (672) - @!P0 LEA.HI.X.SX32 R10, R7, R36, 0x1, P2 ;
 Instr 43 @ 0x2b0 (688) - @!P0 LEA R2, P2, R3, c[0x0][0x1a8], 0x1 ;
 Instr 44 @ 0x2c0 (704) - @!P0 LEA.HI.X R3, R3, c[0x0][0x1ac], R10, 0x1, P2 ;
 Instr 45 @ 0x2d0 (720) - @!P0 LDG.E.U16.SYS R3, [R2] ;
 Instr 46 @ 0x2e0 (736) - IADD3 R4, R4, -0x1, RZ ;
 Instr 47 @ 0x2f0 (752) - IMAD.MOV.U32 R10, RZ, RZ, 0x8 ;
 Instr 48 @ 0x300 (768) - IADD3 R6, R6, 0x8, RZ ;
 Instr 49 @ 0x310 (784) - IADD3 R9, R9, 0x8, RZ ;
 Instr 50 @ 0x320 (800) - IMAD R7, R10, c[0x0][0x19c], R7 ;
 Instr 51 @ 0x330 (816) - @!P0 STS.U16 [R8], R3 ;
 Instr 52 @ 0x340 (832) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 53 @ 0x350 (848) - IADD3 R8, R8, 0x210, RZ ;
 Instr 54 @ 0x360 (864) - @P0 BRA 0x280 ;
Basic block id 6 - num instructions 2
 Instr 55 @ 0x370 (880) - BSYNC B1 ;
 Instr 56 @ 0x380 (896) - @!P1 BRA 0x1960 ;
Basic block id 7 - num instructions 18
 Instr 57 @ 0x390 (912) - IADD3 R39, R6.reuse, -0x20, RZ ;
 Instr 58 @ 0x3a0 (928) - IMAD R37, R6.reuse, 0x21, R15 ;
 Instr 59 @ 0x3b0 (944) - IADD3 R49, R6.reuse, 0x18, RZ ;
 Instr 60 @ 0x3c0 (960) - BMOV.32.CLEAR RZ, B1 ;
 Instr 61 @ 0x3d0 (976) - IADD3 R47, R6.reuse, 0x10, RZ ;
 Instr 62 @ 0x3e0 (992) - IMAD.MOV R2, RZ, RZ, -R39 ;
 Instr 63 @ 0x3f0 (1008) - IADD3 R43, R6.reuse, 0x8, RZ ;
 Instr 64 @ 0x400 (1024) - BSSY B1, 0x1060 ;
 Instr 65 @ 0x410 (1040) - PLOP3.LUT P1, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 66 @ 0x420 (1056) - IMAD R45, R6, c[0x0][0x19c], RZ ;
 Instr 67 @ 0x430 (1072) - ISETP.GT.AND P0, PT, R2, 0x60, PT ;
 Instr 68 @ 0x440 (1088) - IMAD R49, R49, c[0x0][0x19c], RZ ;
 Instr 69 @ 0x450 (1104) - IADD3 R38, R6, 0x8, R5 ;
 Instr 70 @ 0x460 (1120) - IMAD R47, R47, c[0x0][0x19c], RZ ;
 Instr 71 @ 0x470 (1136) - P2R R44, PR, RZ, 0x2 ;
 Instr 72 @ 0x480 (1152) - IMAD R43, R43, c[0x0][0x19c], RZ ;
 Instr 73 @ 0x490 (1168) - LEA R37, R37, 0x420, 0x1 ;
 Instr 74 @ 0x4a0 (1184) - @!P0 BRA 0x1050 ;
Basic block id 8 - num instructions 2
 Instr 75 @ 0x4b0 (1200) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 76 @ 0x4c0 (1216) - P2R R44, PR, RZ, 0x1 ;
Basic block id 9 - num instructions 184
 Instr 77 @ 0x4d0 (1232) - ISETP.GE.AND P5, PT, R38.reuse, c[0x0][0x198], PT ;
 Instr 78 @ 0x4e0 (1248) - IMAD.MOV.U32 R42, RZ, RZ, 0x20 ;
 Instr 79 @ 0x4f0 (1264) - IADD3 R2, R38.reuse, 0x8, RZ ;
 Instr 80 @ 0x500 (1280) - IADD3 R6, R38, 0x20, RZ ;
 Instr 81 @ 0x510 (1296) - IMAD R21, R42, c[0x0][0x19c], R45 ;
 Instr 82 @ 0x520 (1312) - ISETP.GE.AND P2, PT, R2, c[0x0][0x198], PT ;
 Instr 83 @ 0x530 (1328) - IADD3 R2, R38, 0x10, RZ ;
 Instr 84 @ 0x540 (1344) - ISETP.GE.AND P3, PT, R6, c[0x0][0x198], PT ;
 Instr 85 @ 0x550 (1360) - @!P5 IADD3 R3, P0, R17, R43, RZ ;
 Instr 86 @ 0x560 (1376) - ISETP.GE.AND P4, PT, R2, c[0x0][0x198], PT ;
 Instr 87 @ 0x570 (1392) - @!P5 LEA.HI.X.SX32 R4, R43, R36, 0x1, P0 ;
 Instr 88 @ 0x580 (1408) - IMAD R43, R42, c[0x0][0x19c], R43 ;
 Instr 89 @ 0x590 (1424) - @!P5 LEA R2, P0, R3, c[0x0][0x1a8], 0x1 ;
 Instr 90 @ 0x5a0 (1440) - @!P2 IADD3 R5, P1, R17, R47, RZ ;
 Instr 91 @ 0x5b0 (1456) - @!P5 LEA.HI.X R3, R3, c[0x0][0x1ac], R4, 0x1, P0 ;
 Instr 92 @ 0x5c0 (1472) - @!P2 LEA.HI.X.SX32 R6, R47, R36, 0x1, P1 ;
 Instr 93 @ 0x5d0 (1488) - IMAD R47, R42, c[0x0][0x19c], R47 ;
 Instr 94 @ 0x5e0 (1504) - IADD3 R9, R38, 0x18, RZ ;
 Instr 95 @ 0x5f0 (1520) - P2R R28, PR, RZ, 0x4 ;
 Instr 96 @ 0x600 (1536) - @!P2 LEA R4, P0, R5, c[0x0][0x1a8], 0x1 ;
 Instr 97 @ 0x610 (1552) - @!P4 IADD3 R7, P1, R17, R49, RZ ;
 Instr 98 @ 0x620 (1568) - @!P2 LEA.HI.X R5, R5, c[0x0][0x1ac], R6, 0x1, P0 ;
 Instr 99 @ 0x630 (1584) - @!P4 LEA.HI.X.SX32 R8, R49, R36, 0x1, P1 ;
 Instr 100 @ 0x640 (1600) - IMAD R49, R42, c[0x0][0x19c], R49 ;
 Instr 101 @ 0x650 (1616) - ISETP.GE.AND P2, PT, R9, c[0x0][0x198], PT ;
 Instr 102 @ 0x660 (1632) - IADD3 R13, R38, 0x28, RZ ;
 Instr 103 @ 0x670 (1648) - @!P4 LEA R6, P0, R7, c[0x0][0x1a8], 0x1 ;
 Instr 104 @ 0x680 (1664) - ISETP.GE.AND P1, PT, R13, c[0x0][0x198], PT ;
 Instr 105 @ 0x690 (1680) - @!P4 LEA.HI.X R7, R7, c[0x0][0x1ac], R8, 0x1, P0 ;
 Instr 106 @ 0x6a0 (1696) - P2R R32, PR, RZ, 0x2 ;
 Instr 107 @ 0x6b0 (1712) - P2R R31, PR, RZ, 0x4 ;
 Instr 108 @ 0x6c0 (1728) - P2R R30, PR, RZ, 0x8 ;
 Instr 109 @ 0x6d0 (1744) - @!P3 IADD3 R9, P0, R17, R43, RZ ;
 Instr 110 @ 0x6e0 (1760) - P2R R29, PR, RZ, 0x10 ;
 Instr 111 @ 0x6f0 (1776) - @!P3 LEA.HI.X.SX32 R10, R43, R36, 0x1, P0 ;
 Instr 112 @ 0x700 (1792) - IMAD R43, R42, c[0x0][0x19c], R43 ;
 Instr 113 @ 0x710 (1808) - @!P3 LEA R8, P0, R9, c[0x0][0x1a8], 0x1 ;
 Instr 114 @ 0x720 (1824) - @!P3 LEA.HI.X R9, R9, c[0x0][0x1ac], R10, 0x1, P0 ;
 Instr 115 @ 0x730 (1840) - @!P2 IADD3 R11, P0, R17, R21, RZ ;
 Instr 116 @ 0x740 (1856) - @!P2 LEA.HI.X.SX32 R12, R21, R36, 0x1, P0 ;
 Instr 117 @ 0x750 (1872) - @!P2 LEA R10, P0, R11, c[0x0][0x1a8], 0x1 ;
 Instr 118 @ 0x760 (1888) - @!P2 LEA.HI.X R11, R11, c[0x0][0x1ac], R12, 0x1, P0 ;
 Instr 119 @ 0x770 (1904) - @!P1 IADD3 R13, P0, R17, R47, RZ ;
 Instr 120 @ 0x780 (1920) - @!P1 LEA.HI.X.SX32 R18, R47, R36, 0x1, P0 ;
 Instr 121 @ 0x790 (1936) - IMAD R47, R42, c[0x0][0x19c], R47 ;
 Instr 122 @ 0x7a0 (1952) - @!P1 LEA R12, P0, R13, c[0x0][0x1a8], 0x1 ;
 Instr 123 @ 0x7b0 (1968) - @!P1 LEA.HI.X R13, R13, c[0x0][0x1ac], R18, 0x1, P0 ;
 Instr 124 @ 0x7c0 (1984) - IADD3 R18, R38, 0x30, RZ ;
 Instr 125 @ 0x7d0 (2000) - ISETP.GE.AND P1, PT, R18, c[0x0][0x198], PT ;
 Instr 126 @ 0x7e0 (2016) - P2R R33, PR, RZ, 0x2 ;
 Instr 127 @ 0x7f0 (2032) - @!P1 IADD3 R18, P0, R17, R49, RZ ;
 Instr 128 @ 0x800 (2048) - @!P1 LEA.HI.X.SX32 R19, R49, R36, 0x1, P0 ;
 Instr 129 @ 0x810 (2064) - IMAD R49, R42, c[0x0][0x19c], R49 ;
 Instr 130 @ 0x820 (2080) - @!P1 LEA R26, P0, R18, c[0x0][0x1a8], 0x1 ;
 Instr 131 @ 0x830 (2096) - @!P1 LEA.HI.X R27, R18, c[0x0][0x1ac], R19, 0x1, P0 ;
 Instr 132 @ 0x840 (2112) - IADD3 R18, R38, -0x8, RZ ;
 Instr 133 @ 0x850 (2128) - ISETP.GE.AND P1, PT, R18, c[0x0][0x198], PT ;
 Instr 134 @ 0x860 (2144) - P2R R46, PR, RZ, 0x2 ;
 Instr 135 @ 0x870 (2160) - @!P1 IADD3 R19, P0, R17, R45, RZ ;
 Instr 136 @ 0x880 (2176) - @!P1 LEA.HI.X.SX32 R20, R45, R36, 0x1, P0 ;
 Instr 137 @ 0x890 (2192) - IMAD R45, R42, c[0x0][0x19c], R21 ;
 Instr 138 @ 0x8a0 (2208) - @!P1 LEA R18, P0, R19, c[0x0][0x1a8], 0x1 ;
 Instr 139 @ 0x8b0 (2224) - @!P1 LEA.HI.X R19, R19, c[0x0][0x1ac], R20, 0x1, P0 ;
 Instr 140 @ 0x8c0 (2240) - IADD3 R20, R38, 0x40, RZ ;
 Instr 141 @ 0x8d0 (2256) - ISETP.GE.AND P0, PT, R20, c[0x0][0x198], PT ;
 Instr 142 @ 0x8e0 (2272) - P2R R48, PR, RZ, 0x1 ;
 Instr 143 @ 0x8f0 (2288) - @!P0 IADD3 R20, P1, R17, R43, RZ ;
 Instr 144 @ 0x900 (2304) - @!P0 LEA.HI.X.SX32 R23, R43, R36, 0x1, P1 ;
 Instr 145 @ 0x910 (2320) - IMAD R43, R42, c[0x0][0x19c], R43 ;
 Instr 146 @ 0x920 (2336) - @!P0 LEA R24, P1, R20, c[0x0][0x1a8], 0x1 ;
 Instr 147 @ 0x930 (2352) - @!P0 LEA.HI.X R25, R20, c[0x0][0x1ac], R23, 0x1, P1 ;
 Instr 148 @ 0x940 (2368) - ISETP.NE.AND P0, PT, R33, RZ, PT ;
 Instr 149 @ 0x950 (2384) - IADD3 R20, R38, 0x38, RZ ;
 Instr 150 @ 0x960 (2400) - P2R R50, PR, RZ, 0x1 ;
 Instr 151 @ 0x970 (2416) - ISETP.NE.AND P0, PT, R32, RZ, PT ;
 Instr 152 @ 0x980 (2432) - ISETP.GE.AND P2, PT, R20, c[0x0][0x198], PT ;
 Instr 153 @ 0x990 (2448) - P2R R51, PR, RZ, 0x1 ;
 Instr 154 @ 0x9a0 (2464) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 155 @ 0x9b0 (2480) - P2R R34, PR, RZ, 0x4 ;
 Instr 156 @ 0x9c0 (2496) - P2R R52, PR, RZ, 0x1 ;
 Instr 157 @ 0x9d0 (2512) - ISETP.NE.AND P0, PT, R30, RZ, PT ;
 Instr 158 @ 0x9e0 (2528) - @!P2 IADD3 R20, P1, R17, R45, RZ ;
 Instr 159 @ 0x9f0 (2544) - P2R R53, PR, RZ, 0x1 ;
 Instr 160 @ 0xa00 (2560) - ISETP.NE.AND P0, PT, R29, RZ, PT ;
 Instr 161 @ 0xa10 (2576) - @!P2 LEA.HI.X.SX32 R21, R45, R36, 0x1, P1 ;
 Instr 162 @ 0xa20 (2592) - IMAD R45, R42, c[0x0][0x19c], R45 ;
 Instr 163 @ 0xa30 (2608) - P2R R54, PR, RZ, 0x1 ;
 Instr 164 @ 0xa40 (2624) - ISETP.NE.AND P0, PT, R28, RZ, PT ;
 Instr 165 @ 0xa50 (2640) - @!P2 LEA R22, P1, R20, c[0x0][0x1a8], 0x1 ;
 Instr 166 @ 0xa60 (2656) - P2R R55, PR, RZ, 0x1 ;
 Instr 167 @ 0xa70 (2672) - ISETP.GE.AND P0, PT, R38, c[0x0][0x198], PT ;
 Instr 168 @ 0xa80 (2688) - @!P2 LEA.HI.X R23, R20, c[0x0][0x1ac], R21, 0x1, P1 ;
 Instr 169 @ 0xa90 (2704) - IADD3 R20, R38, 0x48, RZ ;
 Instr 170 @ 0xaa0 (2720) - ISETP.GE.AND P1, PT, R20, c[0x0][0x198], PT ;
 Instr 171 @ 0xab0 (2736) - @!P0 LDG.E.U16.SYS R2, [R2] ;
 Instr 172 @ 0xac0 (2752) - P2R R56, PR, RZ, 0x2 ;
 Instr 173 @ 0xad0 (2768) - @!P1 IADD3 R21, P2, R17, R47, RZ ;
 Instr 174 @ 0xae0 (2784) - @!P1 LEA.HI.X.SX32 R28, R47, R36, 0x1, P2 ;
 Instr 175 @ 0xaf0 (2800) - IMAD R47, R42, c[0x0][0x19c], R47 ;
 Instr 176 @ 0xb00 (2816) - @!P1 LEA R20, P2, R21, c[0x0][0x1a8], 0x1 ;
 Instr 177 @ 0xb10 (2832) - @!P1 LEA.HI.X R21, R21, c[0x0][0x1ac], R28, 0x1, P2 ;
 Instr 178 @ 0xb20 (2848) - IADD3 R28, R38, 0x50, RZ ;
 Instr 179 @ 0xb30 (2864) - ISETP.NE.AND P1, PT, R34, RZ, PT ;
 Instr 180 @ 0xb40 (2880) - ISETP.GE.AND P2, PT, R28, c[0x0][0x198], PT ;
 Instr 181 @ 0xb50 (2896) - P2R R57, PR, RZ, 0x2 ;
 Instr 182 @ 0xb60 (2912) - @!P2 IADD3 R29, P3, R17, R49, RZ ;
 Instr 183 @ 0xb70 (2928) - @!P2 LEA.HI.X.SX32 R30, R49, R36, 0x1, P3 ;
 Instr 184 @ 0xb80 (2944) - IMAD R49, R42, c[0x0][0x19c], R49 ;
 Instr 185 @ 0xb90 (2960) - @!P2 LEA R28, P3, R29, c[0x0][0x1a8], 0x1 ;
 Instr 186 @ 0xba0 (2976) - @!P2 LEA.HI.X R29, R29, c[0x0][0x1ac], R30, 0x1, P3 ;
 Instr 187 @ 0xbb0 (2992) - IADD3 R30, R38, 0x60, RZ ;
 Instr 188 @ 0xbc0 (3008) - ISETP.GE.AND P3, PT, R30, c[0x0][0x198], PT ;
 Instr 189 @ 0xbd0 (3024) - @!P2 LDG.E.U16.SYS R28, [R28] ;
 Instr 190 @ 0xbe0 (3040) - @!P3 IADD3 R31, P4, R17, R43, RZ ;
 Instr 191 @ 0xbf0 (3056) - @!P3 LEA.HI.X.SX32 R32, R43, R36, 0x1, P4 ;
 Instr 192 @ 0xc00 (3072) - @!P3 LEA R30, P4, R31, c[0x0][0x1a8], 0x1 ;
 Instr 193 @ 0xc10 (3088) - @!P3 LEA.HI.X R31, R31, c[0x0][0x1ac], R32, 0x1, P4 ;
 Instr 194 @ 0xc20 (3104) - IADD3 R32, R38, 0x58, RZ ;
 Instr 195 @ 0xc30 (3120) - ISETP.GE.AND P4, PT, R32, c[0x0][0x198], PT ;
 Instr 196 @ 0xc40 (3136) - @!P3 LDG.E.U16.SYS R30, [R30] ;
 Instr 197 @ 0xc50 (3152) - @!P4 IADD3 R33, P5, R17, R45, RZ ;
 Instr 198 @ 0xc60 (3168) - @!P4 LEA.HI.X.SX32 R34, R45, R36, 0x1, P5 ;
 Instr 199 @ 0xc70 (3184) - @!P4 LEA R32, P5, R33, c[0x0][0x1a8], 0x1 ;
 Instr 200 @ 0xc80 (3200) - @!P4 LEA.HI.X R33, R33, c[0x0][0x1ac], R34, 0x1, P5 ;
 Instr 201 @ 0xc90 (3216) - IADD3 R34, R38, 0x68, RZ ;
 Instr 202 @ 0xca0 (3232) - ISETP.GE.AND P5, PT, R34, c[0x0][0x198], PT ;
 Instr 203 @ 0xcb0 (3248) - @!P4 LDG.E.U16.SYS R32, [R32] ;
 Instr 204 @ 0xcc0 (3264) - @!P5 IADD3 R35, P6, R17, R47, RZ ;
 Instr 205 @ 0xcd0 (3280) - @!P5 LEA.HI.X.SX32 R40, R47, R36, 0x1, P6 ;
 Instr 206 @ 0xce0 (3296) - @!P5 LEA R34, P6, R35, c[0x0][0x1a8], 0x1 ;
 Instr 207 @ 0xcf0 (3312) - @!P5 LEA.HI.X R35, R35, c[0x0][0x1ac], R40, 0x1, P6 ;
 Instr 208 @ 0xd00 (3328) - IADD3 R40, R38, 0x70, RZ ;
 Instr 209 @ 0xd10 (3344) - ISETP.GE.AND P6, PT, R40, c[0x0][0x198], PT ;
 Instr 210 @ 0xd20 (3360) - @!P5 LDG.E.U16.SYS R34, [R34] ;
 Instr 211 @ 0xd30 (3376) - @!P6 IADD3 R41, P1, R17, R49, RZ ;
 Instr 212 @ 0xd40 (3392) - @!P6 LEA.HI.X.SX32 R58, R49, R36, 0x1, P1 ;
 Instr 213 @ 0xd50 (3408) - @!P6 LEA R40, P1, R41, c[0x0][0x1a8], 0x1 ;
 Instr 214 @ 0xd60 (3424) - @!P6 LEA.HI.X R41, R41, c[0x0][0x1ac], R58, 0x1, P1 ;
 Instr 215 @ 0xd70 (3440) - ISETP.NE.AND P1, PT, R57, RZ, PT ;
 Instr 216 @ 0xd80 (3456) - @!P6 LDG.E.U16.SYS R40, [R40] ;
 Instr 217 @ 0xd90 (3472) - @!P1 LDG.E.U16.SYS R22, [R22] ;
 Instr 218 @ 0xda0 (3488) - @!P0 STS.U16 [R37+-0x210], R2 ;
 Instr 219 @ 0xdb0 (3504) - ISETP.NE.AND P0, PT, R55, RZ, PT ;
 Instr 220 @ 0xdc0 (3520) - @!P0 LDG.E.U16.SYS R4, [R4] ;
 Instr 221 @ 0xdd0 (3536) - @!P0 STS.U16 [R37], R4 ;
 Instr 222 @ 0xde0 (3552) - ISETP.NE.AND P0, PT, R54, RZ, PT ;
 Instr 223 @ 0xdf0 (3568) - @!P0 LDG.E.U16.SYS R6, [R6] ;
 Instr 224 @ 0xe00 (3584) - @!P0 STS.U16 [R37+0x210], R6 ;
 Instr 225 @ 0xe10 (3600) - ISETP.NE.AND P0, PT, R53, RZ, PT ;
 Instr 226 @ 0xe20 (3616) - @!P0 LDG.E.U16.SYS R8, [R8] ;
 Instr 227 @ 0xe30 (3632) - @!P0 STS.U16 [R37+0x630], R8 ;
 Instr 228 @ 0xe40 (3648) - ISETP.NE.AND P0, PT, R52, RZ, PT ;
 Instr 229 @ 0xe50 (3664) - @!P0 LDG.E.U16.SYS R10, [R10] ;
 Instr 230 @ 0xe60 (3680) - @!P0 STS.U16 [R37+0x420], R10 ;
 Instr 231 @ 0xe70 (3696) - ISETP.NE.AND P0, PT, R51, RZ, PT ;
 Instr 232 @ 0xe80 (3712) - @!P0 LDG.E.U16.SYS R12, [R12] ;
 Instr 233 @ 0xe90 (3728) - @!P0 STS.U16 [R37+0x840], R12 ;
 Instr 234 @ 0xea0 (3744) - ISETP.NE.AND P0, PT, R50, RZ, PT ;
 Instr 235 @ 0xeb0 (3760) - @!P0 LDG.E.U16.SYS R26, [R26] ;
 Instr 236 @ 0xec0 (3776) - @!P0 STS.U16 [R37+0xa50], R26 ;
 Instr 237 @ 0xed0 (3792) - ISETP.NE.AND P0, PT, R48, RZ, PT ;
 Instr 238 @ 0xee0 (3808) - @!P0 LDG.E.U16.SYS R24, [R24] ;
 Instr 239 @ 0xef0 (3824) - @!P1 STS.U16 [R37+0xc60], R22 ;
 Instr 240 @ 0xf00 (3840) - ISETP.NE.AND P1, PT, R56, RZ, PT ;
 Instr 241 @ 0xf10 (3856) - @!P1 LDG.E.U16.SYS R20, [R20] ;
 Instr 242 @ 0xf20 (3872) - @!P0 STS.U16 [R37+0xe70], R24 ;
 Instr 243 @ 0xf30 (3888) - ISETP.NE.AND P0, PT, R46, RZ, PT ;
 Instr 244 @ 0xf40 (3904) - @!P0 LDG.E.U16.SYS R18, [R18] ;
 Instr 245 @ 0xf50 (3920) - IADD3 R39, R39, 0x80, RZ ;
 Instr 246 @ 0xf60 (3936) - IMAD R47, R42, c[0x0][0x19c], R47 ;
 Instr 247 @ 0xf70 (3952) - IADD3 R38, R38, 0x80, RZ ;
 Instr 248 @ 0xf80 (3968) - @!P1 STS.U16 [R37+0x1080], R20 ;
 Instr 249 @ 0xf90 (3984) - IMAD R49, R42.reuse, c[0x0][0x19c], R49 ;
 Instr 250 @ 0xfa0 (4000) - IMAD R45, R42.reuse, c[0x0][0x19c], R45 ;
 Instr 251 @ 0xfb0 (4016) - @!P2 STS.U16 [R37+0x1290], R28 ;
 Instr 252 @ 0xfc0 (4032) - IMAD R43, R42, c[0x0][0x19c], R43 ;
 Instr 253 @ 0xfd0 (4048) - @!P3 STS.U16 [R37+0x16b0], R30 ;
 Instr 254 @ 0xfe0 (4064) - @!P4 STS.U16 [R37+0x14a0], R32 ;
 Instr 255 @ 0xff0 (4080) - @!P5 STS.U16 [R37+0x18c0], R34 ;
 Instr 256 @ 0x1000 (4096) - @!P6 STS.U16 [R37+0x1ad0], R40 ;
 Instr 257 @ 0x1010 (4112) - @!P0 STS.U16 [R37+-0x420], R18 ;
 Instr 258 @ 0x1020 (4128) - ISETP.GE.AND P0, PT, R39, -0x60, PT ;
 Instr 259 @ 0x1030 (4144) - IADD3 R37, R37, 0x2100, RZ ;
 Instr 260 @ 0x1040 (4160) - @!P0 BRA 0x4d0 ;
Basic block id 10 - num instructions 6
 Instr 261 @ 0x1050 (4176) - BSYNC B1 ;
 Instr 262 @ 0x1060 (4192) - IMAD.MOV R2, RZ, RZ, -R39 ;
 Instr 263 @ 0x1070 (4208) - BMOV.32.CLEAR RZ, B1 ;
 Instr 264 @ 0x1080 (4224) - BSSY B1, 0x15e0 ;
 Instr 265 @ 0x1090 (4240) - ISETP.GT.AND P0, PT, R2, 0x20, PT ;
 Instr 266 @ 0x10a0 (4256) - @!P0 BRA 0x15d0 ;
Basic block id 11 - num instructions 82
 Instr 267 @ 0x10b0 (4272) - IADD3 R2, R38.reuse, 0x18, RZ ;
 Instr 268 @ 0x10c0 (4288) - IMAD.MOV.U32 R22, RZ, RZ, 0x20 ;
 Instr 269 @ 0x10d0 (4304) - ISETP.GE.AND P6, PT, R38, c[0x0][0x198], PT ;
 Instr 270 @ 0x10e0 (4320) - ISETP.GE.AND P0, PT, R2, c[0x0][0x198], PT ;
 Instr 271 @ 0x10f0 (4336) - IMAD R23, R22, c[0x0][0x19c], R45 ;
 Instr 272 @ 0x1100 (4352) - IADD3 R2, R38.reuse, -0x8, RZ ;
 Instr 273 @ 0x1110 (4368) - IADD3 R5, R38, 0x8, RZ ;
 Instr 274 @ 0x1120 (4384) - ISETP.GE.AND P1, PT, R2, c[0x0][0x198], PT ;
 Instr 275 @ 0x1130 (4400) - IADD3 R26, R38, 0x20, RZ ;
 Instr 276 @ 0x1140 (4416) - P2R R25, PR, RZ, 0x1 ;
 Instr 277 @ 0x1150 (4432) - @!P0 IADD3 R2, P2, R17, R23, RZ ;
 Instr 278 @ 0x1160 (4448) - IADD3 R19, R26, 0x8, RZ ;
 Instr 279 @ 0x1170 (4464) - @!P0 LEA R8, P4, R2, c[0x0][0x1a8], 0x1 ;
 Instr 280 @ 0x1180 (4480) - @!P0 LEA.HI.X.SX32 R3, R23, R36, 0x1, P2 ;
 Instr 281 @ 0x1190 (4496) - @!P1 IADD3 R4, P3, R17, R45, RZ ;
 Instr 282 @ 0x11a0 (4512) - @!P0 LEA.HI.X R9, R2, c[0x0][0x1ac], R3, 0x1, P4 ;
 Instr 283 @ 0x11b0 (4528) - ISETP.GE.AND P2, PT, R5, c[0x0][0x198], PT ;
 Instr 284 @ 0x11c0 (4544) - @!P6 IADD3 R3, P5, R17, R43, RZ ;
 Instr 285 @ 0x11d0 (4560) - @!P1 LEA R10, P4, R4, c[0x0][0x1a8], 0x1 ;
 Instr 286 @ 0x11e0 (4576) - @!P1 LEA.HI.X.SX32 R45, R45, R36, 0x1, P3 ;
 Instr 287 @ 0x11f0 (4592) - IADD3 R2, R38, 0x10, RZ ;
 Instr 288 @ 0x1200 (4608) - @!P1 LEA.HI.X R11, R4, c[0x0][0x1ac], R45, 0x1, P4 ;
 Instr 289 @ 0x1210 (4624) - ISETP.GE.AND P3, PT, R2, c[0x0][0x198], PT ;
 Instr 290 @ 0x1220 (4640) - @!P6 LEA.HI.X.SX32 R4, R43, R36, 0x1, P5 ;
 Instr 291 @ 0x1230 (4656) - IMAD R43, R22, c[0x0][0x19c], R43 ;
 Instr 292 @ 0x1240 (4672) - @!P6 LEA R12, P4, R3, c[0x0][0x1a8], 0x1 ;
 Instr 293 @ 0x1250 (4688) - @!P2 IADD3 R2, P5, R17, R47, RZ ;
 Instr 294 @ 0x1260 (4704) - @!P1 LDG.E.U16.SYS R10, [R10] ;
 Instr 295 @ 0x1270 (4720) - @!P6 LEA.HI.X R13, R3, c[0x0][0x1ac], R4, 0x1, P4 ;
 Instr 296 @ 0x1280 (4736) - @!P2 LEA.HI.X.SX32 R3, R47, R36, 0x1, P5 ;
 Instr 297 @ 0x1290 (4752) - IMAD R47, R22, c[0x0][0x19c], R47 ;
 Instr 298 @ 0x12a0 (4768) - @!P2 LEA R4, P5, R2, c[0x0][0x1a8], 0x1 ;
 Instr 299 @ 0x12b0 (4784) - @!P2 LEA.HI.X R5, R2, c[0x0][0x1ac], R3, 0x1, P5 ;
 Instr 300 @ 0x12c0 (4800) - ISETP.GE.AND P4, PT, R26, c[0x0][0x198], PT ;
 Instr 301 @ 0x12d0 (4816) - @!P3 IADD3 R2, P5, R17, R49, RZ ;
 Instr 302 @ 0x12e0 (4832) - @!P2 LDG.E.U16.SYS R4, [R4] ;
 Instr 303 @ 0x12f0 (4848) - @!P3 LEA.HI.X.SX32 R3, R49, R36, 0x1, P5 ;
 Instr 304 @ 0x1300 (4864) - IMAD R49, R22, c[0x0][0x19c], R49 ;
 Instr 305 @ 0x1310 (4880) - @!P3 LEA R6, P5, R2, c[0x0][0x1a8], 0x1 ;
 Instr 306 @ 0x1320 (4896) - @!P3 LEA.HI.X R7, R2, c[0x0][0x1ac], R3, 0x1, P5 ;
 Instr 307 @ 0x1330 (4912) - @!P4 IADD3 R3, P5, R17, R43, RZ ;
 Instr 308 @ 0x1340 (4928) - @!P3 LDG.E.U16.SYS R6, [R6] ;
 Instr 309 @ 0x1350 (4944) - @!P4 LEA.HI.X.SX32 R18, R43, R36, 0x1, P5 ;
 Instr 310 @ 0x1360 (4960) - @!P4 LEA R2, P5, R3, c[0x0][0x1a8], 0x1 ;
 Instr 311 @ 0x1370 (4976) - @!P4 LEA.HI.X R3, R3, c[0x0][0x1ac], R18, 0x1, P5 ;
 Instr 312 @ 0x1380 (4992) - ISETP.GE.AND P5, PT, R19, c[0x0][0x198], PT ;
 Instr 313 @ 0x1390 (5008) - @!P4 LDG.E.U16.SYS R2, [R2] ;
 Instr 314 @ 0x13a0 (5024) - @!P5 IADD3 R19, P6, R17, R47, RZ ;
 Instr 315 @ 0x13b0 (5040) - @!P5 LEA.HI.X.SX32 R20, R47, R36, 0x1, P6 ;
 Instr 316 @ 0x13c0 (5056) - @!P5 LEA R18, P6, R19, c[0x0][0x1a8], 0x1 ;
 Instr 317 @ 0x13d0 (5072) - @!P5 LEA.HI.X R19, R19, c[0x0][0x1ac], R20, 0x1, P6 ;
 Instr 318 @ 0x13e0 (5088) - IADD3 R20, R26, 0x10, RZ ;
 Instr 319 @ 0x13f0 (5104) - ISETP.GE.AND P6, PT, R20, c[0x0][0x198], PT ;
 Instr 320 @ 0x1400 (5120) - @!P5 LDG.E.U16.SYS R18, [R18] ;
 Instr 321 @ 0x1410 (5136) - @!P6 IADD3 R21, P0, R17, R49, RZ ;
 Instr 322 @ 0x1420 (5152) - @!P6 LEA.HI.X.SX32 R24, R49, R36, 0x1, P0 ;
 Instr 323 @ 0x1430 (5168) - @!P6 LEA R20, P0, R21, c[0x0][0x1a8], 0x1 ;
 Instr 324 @ 0x1440 (5184) - @!P6 LEA.HI.X R21, R21, c[0x0][0x1ac], R24, 0x1, P0 ;
 Instr 325 @ 0x1450 (5200) - ISETP.NE.AND P0, PT, R25, RZ, PT ;
 Instr 326 @ 0x1460 (5216) - @!P6 LDG.E.U16.SYS R20, [R20] ;
 Instr 327 @ 0x1470 (5232) - @!P0 LDG.E.U16.SYS R8, [R8] ;
 Instr 328 @ 0x1480 (5248) - @!P0 STS.U16 [R37+0x420], R8 ;
 Instr 329 @ 0x1490 (5264) - ISETP.GE.AND P0, PT, R38, c[0x0][0x198], PT ;
 Instr 330 @ 0x14a0 (5280) - @!P0 LDG.E.U16.SYS R12, [R12] ;
 Instr 331 @ 0x14b0 (5296) - IADD3 R25, R37, 0x840, RZ ;
 Instr 332 @ 0x14c0 (5312) - @!P1 STS.U16 [R37+-0x420], R10 ;
 Instr 333 @ 0x14d0 (5328) - @!P2 STS.U16 [R37], R4 ;
 Instr 334 @ 0x14e0 (5344) - @!P3 STS.U16 [R37+0x210], R6 ;
 Instr 335 @ 0x14f0 (5360) - IADD3 R39, R39, 0x20, RZ ;
 Instr 336 @ 0x1500 (5376) - IMAD R43, R22, c[0x0][0x19c], R43 ;
 Instr 337 @ 0x1510 (5392) - IADD3 R38, R26, 0x20, RZ ;
 Instr 338 @ 0x1520 (5408) - IMAD R45, R22.reuse, c[0x0][0x19c], R23 ;
 Instr 339 @ 0x1530 (5424) - IADD3 R39, R39, 0x20, RZ ;
 Instr 340 @ 0x1540 (5440) - IMAD R49, R22, c[0x0][0x19c], R49 ;
 Instr 341 @ 0x1550 (5456) - IMAD R47, R22, c[0x0][0x19c], R47 ;
 Instr 342 @ 0x1560 (5472) - @!P0 STS.U16 [R37+-0x210], R12 ;
 Instr 343 @ 0x1570 (5488) - @!P4 STS.U16 [R25+-0x210], R2 ;
 Instr 344 @ 0x1580 (5504) - @!P5 STS.U16 [R25], R18 ;
 Instr 345 @ 0x1590 (5520) - @!P6 STS.U16 [R25+0x210], R20 ;
 Instr 346 @ 0x15a0 (5536) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 347 @ 0x15b0 (5552) - IADD3 R37, R25, 0x840, RZ ;
 Instr 348 @ 0x15c0 (5568) - P2R R44, PR, RZ, 0x1 ;
Basic block id 12 - num instructions 4
 Instr 349 @ 0x15d0 (5584) - BSYNC B1 ;
 Instr 350 @ 0x15e0 (5600) - ISETP.NE.AND P0, PT, R44, RZ, PT ;
 Instr 351 @ 0x15f0 (5616) - ISETP.LT.OR P0, PT, R39, RZ, P0 ;
 Instr 352 @ 0x1600 (5632) - @!P0 BRA 0x1960 ;
Basic block id 13 - num instructions 26
 Instr 353 @ 0x1610 (5648) - IADD3 R2, R38.reuse, -0x8, RZ ;
 Instr 354 @ 0x1620 (5664) - ISETP.GE.AND P2, PT, R38, c[0x0][0x198], PT ;
 Instr 355 @ 0x1630 (5680) - ISETP.GE.AND P1, PT, R2, c[0x0][0x198], PT ;
 Instr 356 @ 0x1640 (5696) - IADD3 R3, R38, 0x8, RZ ;
 Instr 357 @ 0x1650 (5712) - ISETP.GE.AND P0, PT, R3, c[0x0][0x198], PT ;
 Instr 358 @ 0x1660 (5728) - @!P2 IADD3 R3, P3, R17.reuse, R43, RZ ;
 Instr 359 @ 0x1670 (5744) - @!P1 IADD3 R9, P4, R17, R45, RZ ;
 Instr 360 @ 0x1680 (5760) - @!P2 LEA.HI.X.SX32 R10, R43, R36.reuse, 0x1, P3 ;
 Instr 361 @ 0x1690 (5776) - @!P2 LEA R4, P3, R3, c[0x0][0x1a8], 0x1 ;
 Instr 362 @ 0x16a0 (5792) - @!P1 LEA.HI.X.SX32 R12, R45, R36, 0x1, P4 ;
 Instr 363 @ 0x16b0 (5808) - @!P0 IADD3 R7, P5, R17, R47, RZ ;
 Instr 364 @ 0x16c0 (5824) - @!P1 LEA R2, P4, R9, c[0x0][0x1a8], 0x1 ;
 Instr 365 @ 0x16d0 (5840) - @!P2 LEA.HI.X R5, R3, c[0x0][0x1ac], R10, 0x1, P3 ;
 Instr 366 @ 0x16e0 (5856) - @!P0 LEA.HI.X.SX32 R8, R47, R36, 0x1, P5 ;
 Instr 367 @ 0x16f0 (5872) - @!P1 LEA.HI.X R3, R9, c[0x0][0x1ac], R12, 0x1, P4 ;
 Instr 368 @ 0x1700 (5888) - @!P0 LEA R6, P5, R7.reuse, c[0x0][0x1a8], 0x1 ;
 Instr 369 @ 0x1710 (5904) - @!P2 LDG.E.U16.SYS R4, [R4] ;
 Instr 370 @ 0x1720 (5920) - @!P0 LEA.HI.X R7, R7, c[0x0][0x1ac], R8, 0x1, P5 ;
 Instr 371 @ 0x1730 (5936) - @!P1 LDG.E.U16.SYS R2, [R2] ;
 Instr 372 @ 0x1740 (5952) - @!P0 LDG.E.U16.SYS R6, [R6] ;
 Instr 373 @ 0x1750 (5968) - IADD3 R38, R38, 0x10, RZ ;
 Instr 374 @ 0x1760 (5984) - @!P2 STS.U16 [R37+-0x210], R4 ;
 Instr 375 @ 0x1770 (6000) - @!P1 STS.U16 [R37+-0x420], R2 ;
 Instr 376 @ 0x1780 (6016) - @!P0 STS.U16 [R37], R6 ;
 Instr 377 @ 0x1790 (6032) - ISETP.GE.AND P0, PT, R38, c[0x0][0x198], PT ;
 Instr 378 @ 0x17a0 (6048) - @P0 BRA 0x1960 ;
Basic block id 14 - num instructions 7
 Instr 379 @ 0x17b0 (6064) - IADD3 R17, P0, R17, R49, RZ ;
 Instr 380 @ 0x17c0 (6080) - LEA.HI.X.SX32 R36, R49, R36, 0x1, P0 ;
 Instr 381 @ 0x17d0 (6096) - LEA R2, P0, R17, c[0x0][0x1a8], 0x1 ;
 Instr 382 @ 0x17e0 (6112) - LEA.HI.X R3, R17, c[0x0][0x1ac], R36, 0x1, P0 ;
 Instr 383 @ 0x17f0 (6128) - LDG.E.U16.SYS R2, [R2] ;
 Instr 384 @ 0x1800 (6144) - STS.U16 [R37+0x210], R2 ;
 Instr 385 @ 0x1810 (6160) - BRA 0x1960 ;
Basic block id 15 - num instructions 20
 Instr 386 @ 0x1820 (6176) - IMAD R2, R16, c[0x0][0x19c], RZ ;
 Instr 387 @ 0x1830 (6192) - IMAD.MOV.U32 R9, RZ, RZ, c[0x0][0x19c] ;
 Instr 388 @ 0x1840 (6208) - IADD3 R17, P0, R17, R2, RZ ;
 Instr 389 @ 0x1850 (6224) - IMAD.SHL.U32 R9, R9, 0x8, RZ ;
 Instr 390 @ 0x1860 (6240) - LEA.HI.X.SX32 R36, R2, R36, 0x1, P0 ;
 Instr 391 @ 0x1870 (6256) - LEA R2, P0, R17, c[0x0][0x1a8], 0x1 ;
 Instr 392 @ 0x1880 (6272) - LEA.HI.X R3, R17, c[0x0][0x1ac], R36, 0x1, P0 ;
 Instr 393 @ 0x1890 (6288) - IMAD.WIDE R4, R9, 0x2, R2 ;
 Instr 394 @ 0x18a0 (6304) - LDG.E.U16.SYS R2, [R2] ;
 Instr 395 @ 0x18b0 (6320) - IMAD.WIDE R6, R9.reuse, 0x2, R4 ;
 Instr 396 @ 0x18c0 (6336) - LDG.E.U16.SYS R4, [R4] ;
 Instr 397 @ 0x18d0 (6352) - IMAD.WIDE R8, R9, 0x2, R6 ;
 Instr 398 @ 0x18e0 (6368) - LDG.E.U16.SYS R6, [R6] ;
 Instr 399 @ 0x18f0 (6384) - LDG.E.U16.SYS R8, [R8] ;
 Instr 400 @ 0x1900 (6400) - IMAD R10, R16, 0x21, R15 ;
 Instr 401 @ 0x1910 (6416) - IMAD.SHL.U32 R11, R10, 0x2, RZ ;
 Instr 402 @ 0x1920 (6432) - STS.U16 [R11], R2 ;
 Instr 403 @ 0x1930 (6448) - STS.U16 [R11+0x210], R4 ;
 Instr 404 @ 0x1940 (6464) - STS.U16 [R11+0x420], R6 ;
 Instr 405 @ 0x1950 (6480) - STS.U16 [R11+0x630], R8 ;
Basic block id 16 - num instructions 7
 Instr 406 @ 0x1960 (6496) - BSYNC B0 ;
 Instr 407 @ 0x1970 (6512) - S2R R2, SR_CTAID.X ;
 Instr 408 @ 0x1980 (6528) - BAR.SYNC 0x0 ;
 Instr 409 @ 0x1990 (6544) - IMAD.SHL.U32 R2, R2, 0x20, RZ ;
 Instr 410 @ 0x19a0 (6560) - IMAD.IADD R3, R15, 0x1, R2 ;
 Instr 411 @ 0x19b0 (6576) - ISETP.GE.AND P0, PT, R3, c[0x0][0x198], PT ;
 Instr 412 @ 0x19c0 (6592) - @P0 EXIT ;
Basic block id 17 - num instructions 9
 Instr 413 @ 0x19d0 (6608) - S2R R5, SR_CTAID.Z ;
 Instr 414 @ 0x19e0 (6624) - LEA R3, R14.reuse, 0x20, 0x5 ;
 Instr 415 @ 0x19f0 (6640) - IMAD R4, R14, 0x20, R16 ;
 Instr 416 @ 0x1a00 (6656) - ISETP.GE.AND P0, PT, R3, c[0x0][0x16c], PT ;
 Instr 417 @ 0x1a10 (6672) - IMAD R2, R4, c[0x0][0x17c], R2 ;
 Instr 418 @ 0x1a20 (6688) - IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 419 @ 0x1a30 (6704) - IMAD R2, R5, c[0x0][0x174], R2 ;
 Instr 420 @ 0x1a40 (6720) - IMAD.WIDE R2, R2, R3, c[0x0][0x1b0] ;
 Instr 421 @ 0x1a50 (6736) - @!P0 BRA 0x2080 ;
Basic block id 18 - num instructions 2
 Instr 422 @ 0x1a60 (6752) - ISETP.GT.AND P0, PT, R0, 0x3ff, PT ;
 Instr 423 @ 0x1a70 (6768) - @P0 EXIT ;
Basic block id 19 - num instructions 11
 Instr 424 @ 0x1a80 (6784) - IMNMX R5, R16.reuse, 0x18, !PT ;
 Instr 425 @ 0x1a90 (6800) - BMOV.32.CLEAR RZ, B0 ;
 Instr 426 @ 0x1aa0 (6816) - BSSY B0, 0x1cb0 ;
 Instr 427 @ 0x1ab0 (6832) - SHF.R.S32.HI R12, RZ, 0x1f, R15 ;
 Instr 428 @ 0x1ac0 (6848) - IADD3 R7, -R16, 0x7, R5 ;
 Instr 429 @ 0x1ad0 (6864) - IMAD.MOV.U32 R5, RZ, RZ, c[0x0][0x17c] ;
 Instr 430 @ 0x1ae0 (6880) - LEA.HI R0, R7, 0x1, RZ, 0x1d ;
 Instr 431 @ 0x1af0 (6896) - IMAD.SHL.U32 R5, R5, 0x8, RZ ;
 Instr 432 @ 0x1b00 (6912) - ISETP.GE.U32.AND P1, PT, R7, 0x18, PT ;
 Instr 433 @ 0x1b10 (6928) - LOP3.LUT R6, R0, 0x3, RZ, 0xc0, !PT ;
 Instr 434 @ 0x1b20 (6944) - SHF.R.S32.HI R0, RZ, 0x1f, R5 ;
Basic block id 20 - num instructions 2
 Instr 435 @ 0x1b30 (6960) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 436 @ 0x1b40 (6976) - @!P0 BRA 0x1ca0 ;
Basic block id 21 - num instructions 5
 Instr 437 @ 0x1b50 (6992) - IMAD R7, R15, 0x21, R16 ;
 Instr 438 @ 0x1b60 (7008) - SHF.L.U64.HI R17, R5, 0x1, R0 ;
 Instr 439 @ 0x1b70 (7024) - IMAD.MOV.U32 R8, RZ, RZ, R6 ;
 Instr 440 @ 0x1b80 (7040) - SHF.L.U64.HI R13, R15, 0x1, R12 ;
 Instr 441 @ 0x1b90 (7056) - IMAD.SHL.U32 R9, R7, 0x2, RZ ;
Basic block id 22 - num instructions 16
 Instr 442 @ 0x1ba0 (7072) - ISETP.GE.AND P0, PT, R4, c[0x0][0x16c], PT ;
 Instr 443 @ 0x1bb0 (7088) - IADD3 R8, R8, -0x1, RZ ;
 Instr 444 @ 0x1bc0 (7104) - IADD3 R16, R16, 0x8, RZ ;
 Instr 445 @ 0x1bd0 (7120) - IADD3 R4, R4, 0x8, RZ ;
 Instr 446 @ 0x1be0 (7136) - @!P0 LDS.U.U16 R6, [R9] ;
 Instr 447 @ 0x1bf0 (7152) - IADD3 R9, R9, 0x10, RZ ;
 Instr 448 @ 0x1c00 (7168) - @!P0 HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 449 @ 0x1c10 (7184) - @!P0 FMUL R10, R6, c[0x0][0x1a0] ;
 Instr 450 @ 0x1c20 (7200) - @!P0 LEA R6, P2, R15, R2, 0x1 ;
 Instr 451 @ 0x1c30 (7216) - @!P0 F2F.F16.F32 R11, R10 ;
 Instr 452 @ 0x1c40 (7232) - @!P0 IMAD.X R7, R3, 0x1, R13, P2 ;
 Instr 453 @ 0x1c50 (7248) - ISETP.NE.AND P2, PT, R8, RZ, PT ;
 Instr 454 @ 0x1c60 (7264) - @!P0 STG.E.U16.SYS [R6], R11 ;
 Instr 455 @ 0x1c70 (7280) - LEA R2, P0, R5, R2, 0x1 ;
 Instr 456 @ 0x1c80 (7296) - IMAD.X R3, R3, 0x1, R17, P0 ;
 Instr 457 @ 0x1c90 (7312) - @P2 BRA 0x1ba0 ;
Basic block id 23 - num instructions 2
 Instr 458 @ 0x1ca0 (7328) - BSYNC B0 ;
 Instr 459 @ 0x1cb0 (7344) - @!P1 EXIT ;
Basic block id 24 - num instructions 10
 Instr 460 @ 0x1cc0 (7360) - LEA R18, P0, R15, R2, 0x1 ;
 Instr 461 @ 0x1cd0 (7376) - IMAD R14, R14, 0x20, R16 ;
 Instr 462 @ 0x1ce0 (7392) - SHF.L.U64.HI R20, R5, 0x2, R0 ;
 Instr 463 @ 0x1cf0 (7408) - IMAD R2, R15.reuse, 0x21, R16 ;
 Instr 464 @ 0x1d00 (7424) - LEA.HI.X R19, R15, R3, R12, 0x1, P0 ;
 Instr 465 @ 0x1d10 (7440) - IADD3 R16, R16, -0x20, RZ ;
 Instr 466 @ 0x1d20 (7456) - SHF.L.U64.HI R12, R5.reuse, 0x3, R0.reuse ;
 Instr 467 @ 0x1d30 (7472) - SHF.L.U64.HI R22, R5, 0x1, R0 ;
 Instr 468 @ 0x1d40 (7488) - IADD3 R14, R14, 0x18, RZ ;
 Instr 469 @ 0x1d50 (7504) - LEA R4, R2, 0x20, 0x1 ;
Basic block id 25 - num instructions 14
 Instr 470 @ 0x1d60 (7520) - IADD3 R2, R14.reuse, -0x18, RZ ;
 Instr 471 @ 0x1d70 (7536) - BMOV.32.CLEAR RZ, B0 ;
 Instr 472 @ 0x1d80 (7552) - IADD3 R3, R14, -0x8, RZ ;
 Instr 473 @ 0x1d90 (7568) - BSSY B0, 0x2020 ;
 Instr 474 @ 0x1da0 (7584) - ISETP.GE.AND P0, PT, R2, c[0x0][0x16c], PT ;
 Instr 475 @ 0x1db0 (7600) - IADD3 R2, R14, -0x10, RZ ;
 Instr 476 @ 0x1dc0 (7616) - ISETP.GE.AND P2, PT, R3, c[0x0][0x16c], PT ;
 Instr 477 @ 0x1dd0 (7632) - ISETP.GE.AND P1, PT, R2, c[0x0][0x16c], PT ;
 Instr 478 @ 0x1de0 (7648) - IADD3 R16, R16, 0x20, RZ ;
 Instr 479 @ 0x1df0 (7664) - @!P0 LDS.U.U16 R2, [R4+-0x20] ;
 Instr 480 @ 0x1e00 (7680) - @!P2 LDS.U.U16 R6, [R4] ;
 Instr 481 @ 0x1e10 (7696) - @!P2 LEA R8, P4, R5, R18, 0x2 ;
 Instr 482 @ 0x1e20 (7712) - @!P1 LDS.U.U16 R3, [R4+-0x10] ;
 Instr 483 @ 0x1e30 (7728) - @!P2 IMAD.X R9, R19, 0x1, R20, P4 ;
Basic block id 26 - num instructions 19
 Instr 484 @ 0x1e40 (7744) - @!P0 HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
 Instr 485 @ 0x1e50 (7760) - @!P2 HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 486 @ 0x1e60 (7776) - @!P1 HADD2.F32 R3, R3.H0_H0, -RZ.H0_H0 ;
 Instr 487 @ 0x1e70 (7792) - @!P0 FMUL R2, R2, c[0x0][0x1a0] ;
 Instr 488 @ 0x1e80 (7808) - @!P2 FMUL R10, R6, c[0x0][0x1a0] ;
 Instr 489 @ 0x1e90 (7824) - @!P1 LEA R6, P3, R5, R18, 0x1 ;
 Instr 490 @ 0x1ea0 (7840) - @!P0 F2F.F16.F32 R11, R2 ;
 Instr 491 @ 0x1eb0 (7856) - @!P1 FMUL R3, R3, c[0x0][0x1a0] ;
 Instr 492 @ 0x1ec0 (7872) - @!P1 IMAD.X R7, R19, 0x1, R22, P3 ;
 Instr 493 @ 0x1ed0 (7888) - @!P1 F2F.F16.F32 R13, R3 ;
 Instr 494 @ 0x1ee0 (7904) - @!P0 IMAD.MOV.U32 R2, RZ, RZ, R18 ;
 Instr 495 @ 0x1ef0 (7920) - @!P2 F2F.F16.F32 R15, R10 ;
 Instr 496 @ 0x1f00 (7936) - @!P0 IMAD.MOV.U32 R3, RZ, RZ, R19 ;
 Instr 497 @ 0x1f10 (7952) - @!P0 STG.E.U16.SYS [R2], R11 ;
 Instr 498 @ 0x1f20 (7968) - ISETP.GE.AND P0, PT, R14, c[0x0][0x16c], PT ;
 Instr 499 @ 0x1f30 (7984) - @!P1 STG.E.U16.SYS [R6], R13 ;
 Instr 500 @ 0x1f40 (8000) - ISETP.GE.AND P1, PT, R16, RZ, PT ;
 Instr 501 @ 0x1f50 (8016) - @!P2 STG.E.U16.SYS [R8], R15 ;
 Instr 502 @ 0x1f60 (8032) - @P0 BRA 0x2010 ;
Basic block id 27 - num instructions 10
 Instr 503 @ 0x1f70 (8048) - LDS.U.U16 R2, [R4+0x10] ;
 Instr 504 @ 0x1f80 (8064) - IMAD.MOV.U32 R3, RZ, RZ, R19 ;
 Instr 505 @ 0x1f90 (8080) - IMAD R9, R0, 0x6, RZ ;
 Instr 506 @ 0x1fa0 (8096) - HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
 Instr 507 @ 0x1fb0 (8112) - FMUL R6, R2, c[0x0][0x1a0] ;
 Instr 508 @ 0x1fc0 (8128) - IMAD.MOV.U32 R2, RZ, RZ, R18 ;
 Instr 509 @ 0x1fd0 (8144) - F2F.F16.F32 R7, R6 ;
 Instr 510 @ 0x1fe0 (8160) - IMAD.WIDE.U32 R2, R5, 0x6, R2 ;
 Instr 511 @ 0x1ff0 (8176) - IMAD.IADD R3, R3, 0x1, R9 ;
 Instr 512 @ 0x2000 (8192) - STG.E.U16.SYS [R2], R7 ;
Basic block id 28 - num instructions 6
 Instr 513 @ 0x2010 (8208) - BSYNC B0 ;
 Instr 514 @ 0x2020 (8224) - LEA R18, P0, R5, R18, 0x3 ;
 Instr 515 @ 0x2030 (8240) - IADD3 R14, R14, 0x20, RZ ;
 Instr 516 @ 0x2040 (8256) - IADD3 R4, R4, 0x40, RZ ;
 Instr 517 @ 0x2050 (8272) - IMAD.X R19, R19, 0x1, R12, P0 ;
 Instr 518 @ 0x2060 (8288) - @!P1 BRA 0x1d60 ;
Basic block id 29 - num instructions 1
 Instr 519 @ 0x2070 (8304) - EXIT ;
Basic block id 30 - num instructions 29
 Instr 520 @ 0x2080 (8320) - IMAD R16, R15.reuse, 0x21, R16 ;
 Instr 521 @ 0x2090 (8336) - IMAD.WIDE R2, R15, 0x2, R2 ;
 Instr 522 @ 0x20a0 (8352) - IMAD.SHL.U32 R16, R16, 0x2, RZ ;
 Instr 523 @ 0x20b0 (8368) - LDS.U.U16 R4, [R16+0x10] ;
 Instr 524 @ 0x20c0 (8384) - LDS.U.U16 R0, [R16] ;
 Instr 525 @ 0x20d0 (8400) - LDS.U.U16 R5, [R16+0x20] ;
 Instr 526 @ 0x20e0 (8416) - LDS.U.U16 R6, [R16+0x30] ;
 Instr 527 @ 0x20f0 (8432) - HADD2.F32 R4, R4.H0_H0, -RZ.H0_H0 ;
 Instr 528 @ 0x2100 (8448) - HADD2.F32 R0, R0.H0_H0, -RZ.H0_H0 ;
 Instr 529 @ 0x2110 (8464) - HADD2.F32 R5, R5.H0_H0, -RZ.H0_H0 ;
 Instr 530 @ 0x2120 (8480) - FMUL R10, R4, c[0x0][0x1a0] ;
 Instr 531 @ 0x2130 (8496) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x17c] ;
 Instr 532 @ 0x2140 (8512) - HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 533 @ 0x2150 (8528) - FMUL R0, R0, c[0x0][0x1a0] ;
 Instr 534 @ 0x2160 (8544) - IMAD.SHL.U32 R9, R4, 0x8, RZ ;
 Instr 535 @ 0x2170 (8560) - F2F.F16.F32 R13, R10 ;
 Instr 536 @ 0x2180 (8576) - FMUL R12, R5, c[0x0][0x1a0] ;
 Instr 537 @ 0x2190 (8592) - IMAD.WIDE R4, R9, 0x2, R2 ;
 Instr 538 @ 0x21a0 (8608) - FMUL R14, R6, c[0x0][0x1a0] ;
 Instr 539 @ 0x21b0 (8624) - F2F.F16.F32 R11, R0 ;
 Instr 540 @ 0x21c0 (8640) - IMAD.WIDE R6, R9, 0x2, R4 ;
 Instr 541 @ 0x21d0 (8656) - IMAD.WIDE R8, R9, 0x2, R6 ;
 Instr 542 @ 0x21e0 (8672) - F2F.F16.F32 R15, R12 ;
 Instr 543 @ 0x21f0 (8688) - F2F.F16.F32 R17, R14 ;
 Instr 544 @ 0x2200 (8704) - STG.E.U16.SYS [R2], R11 ;
 Instr 545 @ 0x2210 (8720) - STG.E.U16.SYS [R4], R13 ;
 Instr 546 @ 0x2220 (8736) - STG.E.U16.SYS [R6], R15 ;
 Instr 547 @ 0x2230 (8752) - STG.E.U16.SYS [R8], R17 ;
 Instr 548 @ 0x2240 (8768) - EXIT ;
Basic block id 31 - num instructions 1
 Instr 549 @ 0x2250 (8784) - BRA 0x2250;
inspecting void cudnn::engines_precompiled::nhwcToNchwKernel<__half, __half, float, true, false, (cudnnKernelDataType_t)0>(cudnn::engines_precompiled::nhwc2nchw_params_t<float>, __half const*, __half*) - number basic blocks 32
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 13 @ 0xd0 (208) - S2R R5, SR_CTAID.X ;
Inject count_instr before - Instr 22 @ 0x160 (352) - ISETP.GT.AND P0, PT, R0, 0x3ff, PT ;
Inject count_instr before - Instr 24 @ 0x180 (384) - IMNMX R3, R16.reuse, 0x18, !PT ;
Inject count_instr before - Instr 34 @ 0x220 (544) - IMAD R3, R16.reuse, 0x21, R15 ;
Inject count_instr before - Instr 40 @ 0x280 (640) - ISETP.GE.AND P0, PT, R9, c[0x0][0x198], PT ;
Inject count_instr before - Instr 55 @ 0x370 (880) - BSYNC B1 ;
Inject count_instr before - Instr 57 @ 0x390 (912) - IADD3 R39, R6.reuse, -0x20, RZ ;
Inject count_instr before - Instr 75 @ 0x4b0 (1200) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 77 @ 0x4d0 (1232) - ISETP.GE.AND P5, PT, R38.reuse, c[0x0][0x198], PT ;
Inject count_instr before - Instr 261 @ 0x1050 (4176) - BSYNC B1 ;
Inject count_instr before - Instr 267 @ 0x10b0 (4272) - IADD3 R2, R38.reuse, 0x18, RZ ;
Inject count_instr before - Instr 349 @ 0x15d0 (5584) - BSYNC B1 ;
Inject count_instr before - Instr 353 @ 0x1610 (5648) - IADD3 R2, R38.reuse, -0x8, RZ ;
Inject count_instr before - Instr 379 @ 0x17b0 (6064) - IADD3 R17, P0, R17, R49, RZ ;
Inject count_instr before - Instr 386 @ 0x1820 (6176) - IMAD R2, R16, c[0x0][0x19c], RZ ;
Inject count_instr before - Instr 406 @ 0x1960 (6496) - BSYNC B0 ;
Inject count_instr before - Instr 413 @ 0x19d0 (6608) - S2R R5, SR_CTAID.Z ;
Inject count_instr before - Instr 422 @ 0x1a60 (6752) - ISETP.GT.AND P0, PT, R0, 0x3ff, PT ;
Inject count_instr before - Instr 424 @ 0x1a80 (6784) - IMNMX R5, R16.reuse, 0x18, !PT ;
Inject count_instr before - Instr 435 @ 0x1b30 (6960) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
Inject count_instr before - Instr 437 @ 0x1b50 (6992) - IMAD R7, R15, 0x21, R16 ;
Inject count_instr before - Instr 442 @ 0x1ba0 (7072) - ISETP.GE.AND P0, PT, R4, c[0x0][0x16c], PT ;
Inject count_instr before - Instr 458 @ 0x1ca0 (7328) - BSYNC B0 ;
Inject count_instr before - Instr 460 @ 0x1cc0 (7360) - LEA R18, P0, R15, R2, 0x1 ;
Inject count_instr before - Instr 470 @ 0x1d60 (7520) - IADD3 R2, R14.reuse, -0x18, RZ ;
Inject count_instr before - Instr 484 @ 0x1e40 (7744) - @!P0 HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 503 @ 0x1f70 (8048) - LDS.U.U16 R2, [R4+0x10] ;
Inject count_instr before - Instr 513 @ 0x2010 (8208) - BSYNC B0 ;
Inject count_instr before - Instr 519 @ 0x2070 (8304) - EXIT ;
Inject count_instr before - Instr 520 @ 0x2080 (8320) - IMAD R16, R15.reuse, 0x21, R16 ;
Inject count_instr before - Instr 549 @ 0x2250 (8784) - BRA 0x2250;
kernel 106 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 784,  kernel instructions 697072, total instructions 6799244
Function void at::native::unrolled_elementwise_kernel<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}, std::array<char*, 2ul>, 8, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1> >(int, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}, std::array<char*, 2ul>, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1>)
Basic block id 0 - num instructions 17
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R17, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - IMAD.MOV.U32 R0, RZ, RZ, -0x400 ;
 Instr 3 @ 0x30 (48) - BMOV.32.CLEAR RZ, B7 ;
 Instr 4 @ 0x40 (64) - BSSY B7, 0x7530 ;
 Instr 5 @ 0x50 (80) - S2R R36, SR_TID.X ;
 Instr 6 @ 0x60 (96) - IMAD.MOV.U32 R30, RZ, RZ, RZ ;
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 8 @ 0x80 (128) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 11 @ 0xb0 (176) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 12 @ 0xc0 (192) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 13 @ 0xd0 (208) - IMAD R39, R17, R0, c[0x0][0x160] ;
 Instr 14 @ 0xe0 (224) - ISETP.GE.AND P0, PT, R36, R39, PT ;
 Instr 15 @ 0xf0 (240) - @P0 IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 16 @ 0x100 (256) - @P0 BRA 0x7520 ;
Basic block id 1 - num instructions 11
 Instr 17 @ 0x110 (272) - LDC.U8 R19, c[0x0][0x17c] ;
 Instr 18 @ 0x120 (288) - IMAD R0, R17, 0x400, R36 ;
 Instr 19 @ 0x130 (304) - BMOV.32.CLEAR RZ, B6 ;
 Instr 20 @ 0x140 (320) - BSSY B6, 0xf90 ;
 Instr 21 @ 0x150 (336) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 22 @ 0x160 (352) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 23 @ 0x170 (368) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 24 @ 0x180 (384) - PRMT R23, R19, 0x9910, RZ ;
 Instr 25 @ 0x190 (400) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 26 @ 0x1a0 (416) - P2R R0, PR, RZ, 0x2 ;
 Instr 27 @ 0x1b0 (432) - @P1 BRA 0x520 ;
Basic block id 2 - num instructions 2
 Instr 28 @ 0x1c0 (448) - ISETP.GT.AND P0, PT, R23, 0x4, PT ;
 Instr 29 @ 0x1d0 (464) - @P0 BRA 0x390 ;
Basic block id 3 - num instructions 2
 Instr 30 @ 0x1e0 (480) - ISETP.GT.AND P0, PT, R23, 0x1, PT ;
 Instr 31 @ 0x1f0 (496) - @P0 BRA 0x2a0 ;
Basic block id 4 - num instructions 2
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 33 @ 0x210 (528) - @!P0 BRA 0x270 ;
Basic block id 5 - num instructions 2
 Instr 34 @ 0x220 (544) - ISETP.NE.AND P0, PT, R23, 0x1, PT ;
 Instr 35 @ 0x230 (560) - @P0 BRA 0xdf0 ;
Basic block id 6 - num instructions 3
 Instr 36 @ 0x240 (576) - LDG.E.S8.SYS R2, [R4] ;
 Instr 37 @ 0x250 (592) - I2F.S16 R2, R2 ;
 Instr 38 @ 0x260 (608) - BRA 0xf80 ;
Basic block id 7 - num instructions 3
 Instr 39 @ 0x270 (624) - LDG.E.U8.SYS R2, [R4] ;
 Instr 40 @ 0x280 (640) - I2F.U16 R2, R2 ;
 Instr 41 @ 0x290 (656) - BRA 0xf80 ;
Basic block id 8 - num instructions 2
 Instr 42 @ 0x2a0 (672) - ISETP.NE.AND P0, PT, R23, 0x2, PT ;
 Instr 43 @ 0x2b0 (688) - @!P0 BRA 0x360 ;
Basic block id 9 - num instructions 2
 Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R23, 0x3, PT ;
 Instr 45 @ 0x2d0 (720) - @!P0 BRA 0x330 ;
Basic block id 10 - num instructions 2
 Instr 46 @ 0x2e0 (736) - ISETP.NE.AND P0, PT, R23, 0x4, PT ;
 Instr 47 @ 0x2f0 (752) - @P0 BRA 0xdf0 ;
Basic block id 11 - num instructions 3
 Instr 48 @ 0x300 (768) - LDG.E.64.SYS R2, [R4] ;
 Instr 49 @ 0x310 (784) - I2F.S64 R2, R2 ;
 Instr 50 @ 0x320 (800) - BRA 0xf80 ;
Basic block id 12 - num instructions 3
 Instr 51 @ 0x330 (816) - LDG.E.SYS R2, [R4] ;
 Instr 52 @ 0x340 (832) - I2F R2, R2 ;
 Instr 53 @ 0x350 (848) - BRA 0xf80 ;
Basic block id 13 - num instructions 3
 Instr 54 @ 0x360 (864) - LDG.E.U16.SYS R2, [R4] ;
 Instr 55 @ 0x370 (880) - I2F.S16 R2, R2 ;
 Instr 56 @ 0x380 (896) - BRA 0xf80 ;
Basic block id 14 - num instructions 2
 Instr 57 @ 0x390 (912) - ISETP.GT.AND P0, PT, R23, 0x6, PT ;
 Instr 58 @ 0x3a0 (928) - @P0 BRA 0x440 ;
Basic block id 15 - num instructions 2
 Instr 59 @ 0x3b0 (944) - ISETP.NE.AND P0, PT, R23, 0x5, PT ;
 Instr 60 @ 0x3c0 (960) - @!P0 BRA 0x410 ;
Basic block id 16 - num instructions 2
 Instr 61 @ 0x3d0 (976) - ISETP.NE.AND P0, PT, R23, 0x6, PT ;
 Instr 62 @ 0x3e0 (992) - @P0 BRA 0xdf0 ;
Basic block id 17 - num instructions 2
 Instr 63 @ 0x3f0 (1008) - LDG.E.SYS R2, [R4] ;
 Instr 64 @ 0x400 (1024) - BRA 0xf80 ;
Basic block id 18 - num instructions 3
 Instr 65 @ 0x410 (1040) - LDG.E.U16.SYS R2, [R4] ;
 Instr 66 @ 0x420 (1056) - HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
 Instr 67 @ 0x430 (1072) - BRA 0xf80 ;
Basic block id 19 - num instructions 2
 Instr 68 @ 0x440 (1088) - ISETP.NE.AND P0, PT, R23, 0x7, PT ;
 Instr 69 @ 0x450 (1104) - @!P0 BRA 0x4f0 ;
Basic block id 20 - num instructions 2
 Instr 70 @ 0x460 (1120) - ISETP.NE.AND P0, PT, R23, 0x8, PT ;
 Instr 71 @ 0x470 (1136) - @!P0 BRA 0x4c0 ;
Basic block id 21 - num instructions 2
 Instr 72 @ 0x480 (1152) - ISETP.NE.AND P0, PT, R23, 0x9, PT ;
 Instr 73 @ 0x490 (1168) - @P0 BRA 0xdf0 ;
Basic block id 22 - num instructions 2
 Instr 74 @ 0x4a0 (1184) - LDG.E.SYS R2, [R4] ;
 Instr 75 @ 0x4b0 (1200) - BRA 0xf80 ;
Basic block id 23 - num instructions 2
 Instr 76 @ 0x4c0 (1216) - LDG.E.U16.SYS R2, [R4] ;
 Instr 77 @ 0x4d0 (1232) - HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
Basic block id 24 - num instructions 1
 Instr 78 @ 0x4e0 (1248) - BRA 0xf80 ;
Basic block id 25 - num instructions 3
 Instr 79 @ 0x4f0 (1264) - LDG.E.64.SYS R2, [R4] ;
 Instr 80 @ 0x500 (1280) - F2F.F32.F64 R2, R2 ;
 Instr 81 @ 0x510 (1296) - BRA 0xf80 ;
Basic block id 26 - num instructions 2
 Instr 82 @ 0x520 (1312) - ISETP.GT.AND P0, PT, R23, 0x18, PT ;
 Instr 83 @ 0x530 (1328) - @P0 BRA 0x8c0 ;
Basic block id 27 - num instructions 2
 Instr 84 @ 0x540 (1344) - ISETP.GT.AND P0, PT, R23, 0xe, PT ;
 Instr 85 @ 0x550 (1360) - @P0 BRA 0x610 ;
Basic block id 28 - num instructions 2
 Instr 86 @ 0x560 (1376) - ISETP.NE.AND P0, PT, R23, 0xa, PT ;
 Instr 87 @ 0x570 (1392) - @!P0 BRA 0x5e0 ;
Basic block id 29 - num instructions 2
 Instr 88 @ 0x580 (1408) - ISETP.NE.AND P0, PT, R23, 0xb, PT ;
 Instr 89 @ 0x590 (1424) - @P0 BRA 0xdf0 ;
Basic block id 30 - num instructions 4
 Instr 90 @ 0x5a0 (1440) - LDG.E.U8.SYS R4, [R4] ;
 Instr 91 @ 0x5b0 (1456) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 92 @ 0x5c0 (1472) - SEL R2, RZ, 0x3f800000, !P0 ;
 Instr 93 @ 0x5d0 (1488) - BRA 0xf80 ;
Basic block id 31 - num instructions 3
 Instr 94 @ 0x5e0 (1504) - LDG.E.64.SYS R2, [R4] ;
 Instr 95 @ 0x5f0 (1520) - F2F.F32.F64 R2, R2 ;
 Instr 96 @ 0x600 (1536) - BRA 0xf80 ;
Basic block id 32 - num instructions 2
 Instr 97 @ 0x610 (1552) - ISETP.NE.AND P0, PT, R23, 0xf, PT ;
 Instr 98 @ 0x620 (1568) - @!P0 BRA 0x890 ;
Basic block id 33 - num instructions 2
 Instr 99 @ 0x630 (1584) - ISETP.NE.AND P0, PT, R23, 0x17, PT ;
 Instr 100 @ 0x640 (1600) - @!P0 BRA 0x7b0 ;
Basic block id 34 - num instructions 2
 Instr 101 @ 0x650 (1616) - ISETP.NE.AND P0, PT, R23, 0x18, PT ;
 Instr 102 @ 0x660 (1632) - @P0 BRA 0xdf0 ;
Basic block id 35 - num instructions 20
 Instr 103 @ 0x670 (1648) - LDG.E.U8.SYS R2, [R4] ;
 Instr 104 @ 0x680 (1664) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 105 @ 0x690 (1680) - IMAD.SHL.U32 R2, R2, 0x1000000, RZ ;
 Instr 106 @ 0x6a0 (1696) - LOP3.LUT R0, R2, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 107 @ 0x6b0 (1712) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 108 @ 0x6c0 (1728) - FLO.U32 R3, R0 ;
 Instr 109 @ 0x6d0 (1744) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 110 @ 0x6e0 (1760) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 111 @ 0x6f0 (1776) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 112 @ 0x700 (1792) - IADD3 R3, R3, -0x4, RZ ;
 Instr 113 @ 0x710 (1808) - SEL R3, R3, RZ, P0 ;
 Instr 114 @ 0x720 (1824) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 115 @ 0x730 (1840) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 116 @ 0x740 (1856) - IADD3 R3, R0, -0x1, RZ ;
 Instr 117 @ 0x750 (1872) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 118 @ 0x760 (1888) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 119 @ 0x770 (1904) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 120 @ 0x780 (1920) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 121 @ 0x790 (1936) - LOP3.LUT R2, R3, 0x80000000, R2, 0xf8, !PT ;
 Instr 122 @ 0x7a0 (1952) - BRA 0xf80 ;
Basic block id 36 - num instructions 14
 Instr 123 @ 0x7b0 (1968) - LDG.E.U8.SYS R4, [R4] ;
 Instr 124 @ 0x7c0 (1984) - IMAD.SHL.U32 R0, R4.reuse, 0x2000000, RZ ;
 Instr 125 @ 0x7d0 (2000) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 126 @ 0x7e0 (2016) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 127 @ 0x7f0 (2032) - @P0 IMAD.SHL.U32 R2, R4.reuse, 0x200000, RZ ;
 Instr 128 @ 0x800 (2048) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 129 @ 0x810 (2064) - @P0 LOP3.LUT R2, R2, 0xfe00000, RZ, 0xc0, !PT ;
 Instr 130 @ 0x820 (2080) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 131 @ 0x830 (2096) - @P0 LOP3.LUT R2, R2, 0x70000000, RZ, 0xfc, !PT ;
 Instr 132 @ 0x840 (2112) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 133 @ 0x850 (2128) - @P0 FMUL R2, R2, 1.9259299443872358531e-34 ;
 Instr 134 @ 0x860 (2144) - @!P0 FADD R2, R0, -0.5 ;
 Instr 135 @ 0x870 (2160) - LOP3.LUT R2, R2, 0x80000000, R3, 0xf8, !PT ;
 Instr 136 @ 0x880 (2176) - BRA 0xf80 ;
Basic block id 37 - num instructions 3
 Instr 137 @ 0x890 (2192) - LDG.E.U16.SYS R2, [R4] ;
 Instr 138 @ 0x8a0 (2208) - PRMT R2, RZ, 0x5410, R2 ;
 Instr 139 @ 0x8b0 (2224) - BRA 0xf80 ;
Basic block id 38 - num instructions 2
 Instr 140 @ 0x8c0 (2240) - ISETP.GT.AND P0, PT, R23, 0x1b, PT ;
 Instr 141 @ 0x8d0 (2256) - @P0 BRA 0xd10 ;
Basic block id 39 - num instructions 2
 Instr 142 @ 0x8e0 (2272) - ISETP.NE.AND P0, PT, R23, 0x19, PT ;
 Instr 143 @ 0x8f0 (2288) - @!P0 BRA 0xb40 ;
Basic block id 40 - num instructions 2
 Instr 144 @ 0x900 (2304) - ISETP.NE.AND P0, PT, R23, 0x1a, PT ;
 Instr 145 @ 0x910 (2320) - @!P0 BRA 0x970 ;
Basic block id 41 - num instructions 2
 Instr 146 @ 0x920 (2336) - ISETP.NE.AND P0, PT, R23, 0x1b, PT ;
 Instr 147 @ 0x930 (2352) - @P0 BRA 0xdf0 ;
Basic block id 42 - num instructions 3
 Instr 148 @ 0x940 (2368) - LDG.E.U16.SYS R2, [R4] ;
 Instr 149 @ 0x950 (2384) - I2F.U16 R2, R2 ;
 Instr 150 @ 0x960 (2400) - BRA 0xf80 ;
Basic block id 43 - num instructions 4
 Instr 151 @ 0x970 (2416) - LDG.E.U8.SYS R5, [R4] ;
 Instr 152 @ 0x980 (2432) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 153 @ 0x990 (2448) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
 Instr 154 @ 0x9a0 (2464) - @!P0 BRA 0xf80 ;
Basic block id 44 - num instructions 3
 Instr 155 @ 0x9b0 (2480) - ISETP.NE.AND P0, PT, R5, 0x80, PT ;
 Instr 156 @ 0x9c0 (2496) - @!P0 IMAD.MOV.U32 R2, RZ, RZ, 0x7f800001 ;
 Instr 157 @ 0x9d0 (2512) - @!P0 BRA 0xf80 ;
Basic block id 45 - num instructions 11
 Instr 158 @ 0x9e0 (2528) - LOP3.LUT R0, R5, 0x78, RZ, 0xc0, !PT ;
 Instr 159 @ 0x9f0 (2544) - BMOV.32.CLEAR RZ, B0 ;
 Instr 160 @ 0xa00 (2560) - SHF.R.U32.HI R2, RZ, 0x7, R5 ;
 Instr 161 @ 0xa10 (2576) - BSSY B0, 0xb00 ;
 Instr 162 @ 0xa20 (2592) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 163 @ 0xa30 (2608) - LOP3.LUT R2, R2, 0xffff, RZ, 0xc0, !PT ;
 Instr 164 @ 0xa40 (2624) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 165 @ 0xa50 (2640) - IMAD.U32 R4, R2, -0x80000000, RZ ;
 Instr 166 @ 0xa60 (2656) - LOP3.LUT R2, R5, 0x7, RZ, 0xc0, !PT ;
 Instr 167 @ 0xa70 (2672) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 168 @ 0xa80 (2688) - @P0 BRA 0xaf0 ;
Basic block id 46 - num instructions 6
 Instr 169 @ 0xa90 (2704) - FLO.U32 R3, R2 ;
 Instr 170 @ 0xaa0 (2720) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 171 @ 0xab0 (2736) - IADD3 R5, R3, -0x1c, RZ ;
 Instr 172 @ 0xac0 (2752) - IADD3 R0, R0, 0x1d, -R3 ;
 Instr 173 @ 0xad0 (2768) - SHF.L.U32 R5, R2, R5, RZ ;
 Instr 174 @ 0xae0 (2784) - LOP3.LUT R2, R5, 0x7, RZ, 0xc0, !PT ;
Basic block id 47 - num instructions 5
 Instr 175 @ 0xaf0 (2800) - BSYNC B0 ;
 Instr 176 @ 0xb00 (2816) - IMAD.SHL.U32 R2, R2, 0x100000, RZ ;
 Instr 177 @ 0xb10 (2832) - LEA R3, R0, 0x3b800000, 0x17 ;
 Instr 178 @ 0xb20 (2848) - LOP3.LUT R2, R3, R2, R4, 0xfe, !PT ;
 Instr 179 @ 0xb30 (2864) - BRA 0xf80 ;
Basic block id 48 - num instructions 4
 Instr 180 @ 0xb40 (2880) - LDG.E.U8.SYS R4, [R4] ;
 Instr 181 @ 0xb50 (2896) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 182 @ 0xb60 (2912) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 183 @ 0xb70 (2928) - @!P0 BRA 0xf80 ;
Basic block id 49 - num instructions 3
 Instr 184 @ 0xb80 (2944) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 185 @ 0xb90 (2960) - @!P0 IMAD.MOV.U32 R2, RZ, RZ, 0x7f800001 ;
 Instr 186 @ 0xba0 (2976) - @!P0 BRA 0xf80 ;
Basic block id 50 - num instructions 11
 Instr 187 @ 0xbb0 (2992) - LOP3.LUT R0, R4, 0x7c, RZ, 0xc0, !PT ;
 Instr 188 @ 0xbc0 (3008) - BMOV.32.CLEAR RZ, B0 ;
 Instr 189 @ 0xbd0 (3024) - SHF.R.U32.HI R2, RZ, 0x7, R4 ;
 Instr 190 @ 0xbe0 (3040) - BSSY B0, 0xcd0 ;
 Instr 191 @ 0xbf0 (3056) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 192 @ 0xc00 (3072) - LOP3.LUT R2, R2, 0xffff, RZ, 0xc0, !PT ;
 Instr 193 @ 0xc10 (3088) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 194 @ 0xc20 (3104) - IMAD.U32 R6, R2, -0x80000000, RZ ;
 Instr 195 @ 0xc30 (3120) - LOP3.LUT R2, R4, 0x3, RZ, 0xc0, !PT ;
 Instr 196 @ 0xc40 (3136) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 197 @ 0xc50 (3152) - @P0 BRA 0xcc0 ;
Basic block id 51 - num instructions 6
 Instr 198 @ 0xc60 (3168) - FLO.U32 R3, R2 ;
 Instr 199 @ 0xc70 (3184) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 200 @ 0xc80 (3200) - IADD3 R5, R3, -0x1d, RZ ;
 Instr 201 @ 0xc90 (3216) - IADD3 R0, R0, 0x1e, -R3 ;
 Instr 202 @ 0xca0 (3232) - SHF.L.U32 R5, R2, R5, RZ ;
 Instr 203 @ 0xcb0 (3248) - LOP3.LUT R2, R5, 0x3, RZ, 0xc0, !PT ;
Basic block id 52 - num instructions 5
 Instr 204 @ 0xcc0 (3264) - BSYNC B0 ;
 Instr 205 @ 0xcd0 (3280) - IMAD.SHL.U32 R3, R2, 0x200000, RZ ;
 Instr 206 @ 0xce0 (3296) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 207 @ 0xcf0 (3312) - LOP3.LUT R2, R0, R3, R6, 0xfe, !PT ;
 Instr 208 @ 0xd00 (3328) - BRA 0xf80 ;
Basic block id 53 - num instructions 2
 Instr 209 @ 0xd10 (3344) - ISETP.NE.AND P0, PT, R23, 0x1c, PT ;
 Instr 210 @ 0xd20 (3360) - @!P0 BRA 0xf60 ;
Basic block id 54 - num instructions 2
 Instr 211 @ 0xd30 (3376) - ISETP.NE.AND P0, PT, R23, 0x1d, PT ;
 Instr 212 @ 0xd40 (3392) - @!P0 BRA 0xf30 ;
Basic block id 55 - num instructions 2
 Instr 213 @ 0xd50 (3408) - ISETP.NE.AND P0, PT, R23, 0x2c, PT ;
 Instr 214 @ 0xd60 (3424) - @P0 BRA 0xdf0 ;
Basic block id 56 - num instructions 4
 Instr 215 @ 0xd70 (3440) - LDG.E.U8.SYS R4, [R4] ;
 Instr 216 @ 0xd80 (3456) - IMAD.MOV.U32 R2, RZ, RZ, 0x400000 ;
 Instr 217 @ 0xd90 (3472) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 218 @ 0xda0 (3488) - @!P0 BRA 0xf80 ;
Basic block id 57 - num instructions 4
 Instr 219 @ 0xdb0 (3504) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 220 @ 0xdc0 (3520) - @!P0 IMAD.MOV.U32 R2, RZ, RZ, 0x7f800001 ;
 Instr 221 @ 0xdd0 (3536) - @P0 IMAD.SHL.U32 R2, R4, 0x800000, RZ ;
 Instr 222 @ 0xde0 (3552) - BRA 0xf80 ;
Basic block id 58 - num instructions 18
 Instr 223 @ 0xdf0 (3568) - UMOV UR8, 0xd33a2700 ;
 Instr 224 @ 0xe00 (3584) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 225 @ 0xe10 (3600) - UMOV UR9, 0x7f88 ;
 Instr 226 @ 0xe20 (3616) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 227 @ 0xe30 (3632) - UMOV UR6, 0xd33a2100 ;
 Instr 228 @ 0xe40 (3648) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 229 @ 0xe50 (3664) - UMOV UR7, 0x7f88 ;
 Instr 230 @ 0xe60 (3680) - IMAD.U32 R4, RZ, RZ, UR8 ;
 Instr 231 @ 0xe70 (3696) - UMOV UR4, 0xd33a0b00 ;
 Instr 232 @ 0xe80 (3712) - IMAD.U32 R5, RZ, RZ, UR9 ;
 Instr 233 @ 0xe90 (3728) - UMOV UR5, 0x7f88 ;
 Instr 234 @ 0xea0 (3744) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 235 @ 0xeb0 (3760) - MOV R20, 0xd7fa2410 ;
 Instr 236 @ 0xec0 (3776) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 237 @ 0xed0 (3792) - MOV R21, 0x7f88 ;
 Instr 238 @ 0xee0 (3808) - IMAD.U32 R10, RZ, RZ, UR4 ;
 Instr 239 @ 0xef0 (3824) - IMAD.U32 R11, RZ, RZ, UR5 ;
 Instr 240 @ 0xf00 (3840) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 59 - num instructions 2
 Instr 241 @ 0xf10 (3856) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 242 @ 0xf20 (3872) - BRA 0xf80 ;
Basic block id 60 - num instructions 3
 Instr 243 @ 0xf30 (3888) - LDG.E.64.SYS R2, [R4] ;
 Instr 244 @ 0xf40 (3904) - I2F.U64 R2, R2 ;
 Instr 245 @ 0xf50 (3920) - BRA 0xf80 ;
Basic block id 61 - num instructions 2
 Instr 246 @ 0xf60 (3936) - LDG.E.SYS R2, [R4] ;
 Instr 247 @ 0xf70 (3952) - I2F.U32 R2, R2 ;
Basic block id 62 - num instructions 4
 Instr 248 @ 0xf80 (3968) - BSYNC B6 ;
 Instr 249 @ 0xf90 (3984) - IADD3 R0, R36, 0x80, RZ ;
 Instr 250 @ 0xfa0 (4000) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 251 @ 0xfb0 (4016) - @P0 BRA 0x7520 ;
Basic block id 63 - num instructions 8
 Instr 252 @ 0xfc0 (4032) - IMAD R0, R17, 0x400, R0 ;
 Instr 253 @ 0xfd0 (4048) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 254 @ 0xfe0 (4064) - BMOV.32.CLEAR RZ, B6 ;
 Instr 255 @ 0xff0 (4080) - BSSY B6, 0x1e20 ;
 Instr 256 @ 0x1000 (4096) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 257 @ 0x1010 (4112) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 258 @ 0x1020 (4128) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 259 @ 0x1030 (4144) - @P1 BRA 0x13b0 ;
Basic block id 64 - num instructions 3
 Instr 260 @ 0x1040 (4160) - PRMT R0, R19, 0x9910, RZ ;
 Instr 261 @ 0x1050 (4176) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 262 @ 0x1060 (4192) - @P0 BRA 0x1220 ;
Basic block id 65 - num instructions 2
 Instr 263 @ 0x1070 (4208) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 264 @ 0x1080 (4224) - @P0 BRA 0x1130 ;
Basic block id 66 - num instructions 2
 Instr 265 @ 0x1090 (4240) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 266 @ 0x10a0 (4256) - @!P0 BRA 0x1100 ;
Basic block id 67 - num instructions 2
 Instr 267 @ 0x10b0 (4272) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 268 @ 0x10c0 (4288) - @P0 BRA 0x1c80 ;
Basic block id 68 - num instructions 3
 Instr 269 @ 0x10d0 (4304) - LDG.E.S8.SYS R4, [R4] ;
 Instr 270 @ 0x10e0 (4320) - I2F.S16 R16, R4 ;
 Instr 271 @ 0x10f0 (4336) - BRA 0x1e10 ;
Basic block id 69 - num instructions 3
 Instr 272 @ 0x1100 (4352) - LDG.E.U8.SYS R4, [R4] ;
 Instr 273 @ 0x1110 (4368) - I2F.U16 R16, R4 ;
 Instr 274 @ 0x1120 (4384) - BRA 0x1e10 ;
Basic block id 70 - num instructions 2
 Instr 275 @ 0x1130 (4400) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 276 @ 0x1140 (4416) - @!P0 BRA 0x11f0 ;
Basic block id 71 - num instructions 2
 Instr 277 @ 0x1150 (4432) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 278 @ 0x1160 (4448) - @!P0 BRA 0x11c0 ;
Basic block id 72 - num instructions 2
 Instr 279 @ 0x1170 (4464) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 280 @ 0x1180 (4480) - @P0 BRA 0x1c80 ;
Basic block id 73 - num instructions 3
 Instr 281 @ 0x1190 (4496) - LDG.E.64.SYS R4, [R4] ;
 Instr 282 @ 0x11a0 (4512) - I2F.S64 R16, R4 ;
 Instr 283 @ 0x11b0 (4528) - BRA 0x1e10 ;
Basic block id 74 - num instructions 3
 Instr 284 @ 0x11c0 (4544) - LDG.E.SYS R4, [R4] ;
 Instr 285 @ 0x11d0 (4560) - I2F R16, R4 ;
 Instr 286 @ 0x11e0 (4576) - BRA 0x1e10 ;
Basic block id 75 - num instructions 3
 Instr 287 @ 0x11f0 (4592) - LDG.E.U16.SYS R4, [R4] ;
 Instr 288 @ 0x1200 (4608) - I2F.S16 R16, R4 ;
 Instr 289 @ 0x1210 (4624) - BRA 0x1e10 ;
Basic block id 76 - num instructions 2
 Instr 290 @ 0x1220 (4640) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 291 @ 0x1230 (4656) - @P0 BRA 0x12d0 ;
Basic block id 77 - num instructions 2
 Instr 292 @ 0x1240 (4672) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 293 @ 0x1250 (4688) - @!P0 BRA 0x12a0 ;
Basic block id 78 - num instructions 2
 Instr 294 @ 0x1260 (4704) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 295 @ 0x1270 (4720) - @P0 BRA 0x1c80 ;
Basic block id 79 - num instructions 2
 Instr 296 @ 0x1280 (4736) - LDG.E.SYS R16, [R4] ;
 Instr 297 @ 0x1290 (4752) - BRA 0x1e10 ;
Basic block id 80 - num instructions 3
 Instr 298 @ 0x12a0 (4768) - LDG.E.U16.SYS R4, [R4] ;
 Instr 299 @ 0x12b0 (4784) - HADD2.F32 R16, R4.H0_H0, -RZ.H0_H0 ;
 Instr 300 @ 0x12c0 (4800) - BRA 0x1e10 ;
Basic block id 81 - num instructions 2
 Instr 301 @ 0x12d0 (4816) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 302 @ 0x12e0 (4832) - @!P0 BRA 0x1380 ;
Basic block id 82 - num instructions 2
 Instr 303 @ 0x12f0 (4848) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 304 @ 0x1300 (4864) - @!P0 BRA 0x1350 ;
Basic block id 83 - num instructions 2
 Instr 305 @ 0x1310 (4880) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 306 @ 0x1320 (4896) - @P0 BRA 0x1c80 ;
Basic block id 84 - num instructions 2
 Instr 307 @ 0x1330 (4912) - LDG.E.SYS R16, [R4] ;
 Instr 308 @ 0x1340 (4928) - BRA 0x1e10 ;
Basic block id 85 - num instructions 3
 Instr 309 @ 0x1350 (4944) - LDG.E.U16.SYS R4, [R4] ;
 Instr 310 @ 0x1360 (4960) - HADD2.F32 R16, R4.H0_H0, -RZ.H0_H0 ;
 Instr 311 @ 0x1370 (4976) - BRA 0x1e10 ;
Basic block id 86 - num instructions 3
 Instr 312 @ 0x1380 (4992) - LDG.E.64.SYS R4, [R4] ;
 Instr 313 @ 0x1390 (5008) - F2F.F32.F64 R16, R4 ;
 Instr 314 @ 0x13a0 (5024) - BRA 0x1e10 ;
Basic block id 87 - num instructions 3
 Instr 315 @ 0x13b0 (5040) - PRMT R0, R19, 0x9910, RZ ;
 Instr 316 @ 0x13c0 (5056) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 317 @ 0x13d0 (5072) - @P0 BRA 0x1750 ;
Basic block id 88 - num instructions 2
 Instr 318 @ 0x13e0 (5088) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 319 @ 0x13f0 (5104) - @P0 BRA 0x14b0 ;
Basic block id 89 - num instructions 2
 Instr 320 @ 0x1400 (5120) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 321 @ 0x1410 (5136) - @!P0 BRA 0x1480 ;
Basic block id 90 - num instructions 2
 Instr 322 @ 0x1420 (5152) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 323 @ 0x1430 (5168) - @P0 BRA 0x1c80 ;
Basic block id 91 - num instructions 4
 Instr 324 @ 0x1440 (5184) - LDG.E.U8.SYS R4, [R4] ;
 Instr 325 @ 0x1450 (5200) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 326 @ 0x1460 (5216) - SEL R16, RZ, 0x3f800000, !P0 ;
 Instr 327 @ 0x1470 (5232) - BRA 0x1e10 ;
Basic block id 92 - num instructions 3
 Instr 328 @ 0x1480 (5248) - LDG.E.64.SYS R4, [R4] ;
 Instr 329 @ 0x1490 (5264) - F2F.F32.F64 R16, R4 ;
 Instr 330 @ 0x14a0 (5280) - BRA 0x1e10 ;
Basic block id 93 - num instructions 2
 Instr 331 @ 0x14b0 (5296) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 332 @ 0x14c0 (5312) - @!P0 BRA 0x1720 ;
Basic block id 94 - num instructions 2
 Instr 333 @ 0x14d0 (5328) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 334 @ 0x14e0 (5344) - @!P0 BRA 0x1650 ;
Basic block id 95 - num instructions 2
 Instr 335 @ 0x14f0 (5360) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 336 @ 0x1500 (5376) - @P0 BRA 0x1c80 ;
Basic block id 96 - num instructions 20
 Instr 337 @ 0x1510 (5392) - LDG.E.U8.SYS R16, [R4] ;
 Instr 338 @ 0x1520 (5408) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 339 @ 0x1530 (5424) - IMAD.SHL.U32 R16, R16, 0x1000000, RZ ;
 Instr 340 @ 0x1540 (5440) - LOP3.LUT R0, R16, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 341 @ 0x1550 (5456) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 342 @ 0x1560 (5472) - FLO.U32 R3, R0 ;
 Instr 343 @ 0x1570 (5488) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 344 @ 0x1580 (5504) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 345 @ 0x1590 (5520) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 346 @ 0x15a0 (5536) - IADD3 R3, R3, -0x4, RZ ;
 Instr 347 @ 0x15b0 (5552) - SEL R3, R3, RZ, P0 ;
 Instr 348 @ 0x15c0 (5568) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 349 @ 0x15d0 (5584) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 350 @ 0x15e0 (5600) - IADD3 R3, R0, -0x1, RZ ;
 Instr 351 @ 0x15f0 (5616) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 352 @ 0x1600 (5632) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 353 @ 0x1610 (5648) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 354 @ 0x1620 (5664) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 355 @ 0x1630 (5680) - LOP3.LUT R16, R3, 0x80000000, R16, 0xf8, !PT ;
 Instr 356 @ 0x1640 (5696) - BRA 0x1e10 ;
Basic block id 97 - num instructions 13
 Instr 357 @ 0x1650 (5712) - LDG.E.U8.SYS R4, [R4] ;
 Instr 358 @ 0x1660 (5728) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 359 @ 0x1670 (5744) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 360 @ 0x1680 (5760) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 361 @ 0x1690 (5776) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 362 @ 0x16a0 (5792) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 363 @ 0x16b0 (5808) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 364 @ 0x16c0 (5824) - @P0 FMUL R16, R3, 1.9259299443872358531e-34 ;
 Instr 365 @ 0x16d0 (5840) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 366 @ 0x16e0 (5856) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 367 @ 0x16f0 (5872) - @!P0 FADD R16, R0, -0.5 ;
 Instr 368 @ 0x1700 (5888) - LOP3.LUT R16, R16, 0x80000000, R3, 0xf8, !PT ;
 Instr 369 @ 0x1710 (5904) - BRA 0x1e10 ;
Basic block id 98 - num instructions 3
 Instr 370 @ 0x1720 (5920) - LDG.E.U16.SYS R4, [R4] ;
 Instr 371 @ 0x1730 (5936) - PRMT R16, RZ, 0x5410, R4 ;
 Instr 372 @ 0x1740 (5952) - BRA 0x1e10 ;
Basic block id 99 - num instructions 2
 Instr 373 @ 0x1750 (5968) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 374 @ 0x1760 (5984) - @P0 BRA 0x1ba0 ;
Basic block id 100 - num instructions 2
 Instr 375 @ 0x1770 (6000) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 376 @ 0x1780 (6016) - @!P0 BRA 0x19d0 ;
Basic block id 101 - num instructions 2
 Instr 377 @ 0x1790 (6032) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 378 @ 0x17a0 (6048) - @!P0 BRA 0x1800 ;
Basic block id 102 - num instructions 2
 Instr 379 @ 0x17b0 (6064) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 380 @ 0x17c0 (6080) - @P0 BRA 0x1c80 ;
Basic block id 103 - num instructions 3
 Instr 381 @ 0x17d0 (6096) - LDG.E.U16.SYS R4, [R4] ;
 Instr 382 @ 0x17e0 (6112) - I2F.U16 R16, R4 ;
 Instr 383 @ 0x17f0 (6128) - BRA 0x1e10 ;
Basic block id 104 - num instructions 4
 Instr 384 @ 0x1800 (6144) - LDG.E.U8.SYS R4, [R4] ;
 Instr 385 @ 0x1810 (6160) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 386 @ 0x1820 (6176) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 387 @ 0x1830 (6192) - @!P0 BRA 0x1e10 ;
Basic block id 105 - num instructions 3
 Instr 388 @ 0x1840 (6208) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 389 @ 0x1850 (6224) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, 0x7f800001 ;
 Instr 390 @ 0x1860 (6240) - @!P0 BRA 0x1e10 ;
Basic block id 106 - num instructions 11
 Instr 391 @ 0x1870 (6256) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
 Instr 392 @ 0x1880 (6272) - BMOV.32.CLEAR RZ, B0 ;
 Instr 393 @ 0x1890 (6288) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 394 @ 0x18a0 (6304) - BSSY B0, 0x1990 ;
 Instr 395 @ 0x18b0 (6320) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 396 @ 0x18c0 (6336) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 397 @ 0x18d0 (6352) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 398 @ 0x18e0 (6368) - IMAD.U32 R16, R3, -0x80000000, RZ ;
 Instr 399 @ 0x18f0 (6384) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 400 @ 0x1900 (6400) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 401 @ 0x1910 (6416) - @P0 BRA 0x1980 ;
Basic block id 107 - num instructions 6
 Instr 402 @ 0x1920 (6432) - FLO.U32 R4, R3 ;
 Instr 403 @ 0x1930 (6448) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 404 @ 0x1940 (6464) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 405 @ 0x1950 (6480) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 406 @ 0x1960 (6496) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 407 @ 0x1970 (6512) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 108 - num instructions 5
 Instr 408 @ 0x1980 (6528) - BSYNC B0 ;
 Instr 409 @ 0x1990 (6544) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 410 @ 0x19a0 (6560) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 411 @ 0x19b0 (6576) - LOP3.LUT R16, R5, R3, R16, 0xfe, !PT ;
 Instr 412 @ 0x19c0 (6592) - BRA 0x1e10 ;
Basic block id 109 - num instructions 4
 Instr 413 @ 0x19d0 (6608) - LDG.E.U8.SYS R3, [R4] ;
 Instr 414 @ 0x19e0 (6624) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 415 @ 0x19f0 (6640) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 416 @ 0x1a00 (6656) - @!P0 BRA 0x1e10 ;
Basic block id 110 - num instructions 3
 Instr 417 @ 0x1a10 (6672) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 418 @ 0x1a20 (6688) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, 0x7f800001 ;
 Instr 419 @ 0x1a30 (6704) - @!P0 BRA 0x1e10 ;
Basic block id 111 - num instructions 11
 Instr 420 @ 0x1a40 (6720) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
 Instr 421 @ 0x1a50 (6736) - BMOV.32.CLEAR RZ, B0 ;
 Instr 422 @ 0x1a60 (6752) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 423 @ 0x1a70 (6768) - BSSY B0, 0x1b60 ;
 Instr 424 @ 0x1a80 (6784) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 425 @ 0x1a90 (6800) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 426 @ 0x1aa0 (6816) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 427 @ 0x1ab0 (6832) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 428 @ 0x1ac0 (6848) - IMAD.U32 R16, R4, -0x80000000, RZ ;
 Instr 429 @ 0x1ad0 (6864) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 430 @ 0x1ae0 (6880) - @P0 BRA 0x1b50 ;
Basic block id 112 - num instructions 6
 Instr 431 @ 0x1af0 (6896) - FLO.U32 R4, R3 ;
 Instr 432 @ 0x1b00 (6912) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 433 @ 0x1b10 (6928) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 434 @ 0x1b20 (6944) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 435 @ 0x1b30 (6960) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 436 @ 0x1b40 (6976) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 113 - num instructions 5
 Instr 437 @ 0x1b50 (6992) - BSYNC B0 ;
 Instr 438 @ 0x1b60 (7008) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 439 @ 0x1b70 (7024) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 440 @ 0x1b80 (7040) - LOP3.LUT R16, R0, R3, R16, 0xfe, !PT ;
 Instr 441 @ 0x1b90 (7056) - BRA 0x1e10 ;
Basic block id 114 - num instructions 2
 Instr 442 @ 0x1ba0 (7072) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 443 @ 0x1bb0 (7088) - @!P0 BRA 0x1df0 ;
Basic block id 115 - num instructions 2
 Instr 444 @ 0x1bc0 (7104) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 445 @ 0x1bd0 (7120) - @!P0 BRA 0x1dc0 ;
Basic block id 116 - num instructions 2
 Instr 446 @ 0x1be0 (7136) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 447 @ 0x1bf0 (7152) - @P0 BRA 0x1c80 ;
Basic block id 117 - num instructions 4
 Instr 448 @ 0x1c00 (7168) - LDG.E.U8.SYS R4, [R4] ;
 Instr 449 @ 0x1c10 (7184) - IMAD.MOV.U32 R16, RZ, RZ, 0x400000 ;
 Instr 450 @ 0x1c20 (7200) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 451 @ 0x1c30 (7216) - @!P0 BRA 0x1e10 ;
Basic block id 118 - num instructions 4
 Instr 452 @ 0x1c40 (7232) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 453 @ 0x1c50 (7248) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, 0x7f800001 ;
 Instr 454 @ 0x1c60 (7264) - @P0 IMAD.SHL.U32 R16, R4, 0x800000, RZ ;
 Instr 455 @ 0x1c70 (7280) - BRA 0x1e10 ;
Basic block id 119 - num instructions 18
 Instr 456 @ 0x1c80 (7296) - UMOV UR4, 0xd33a2700 ;
 Instr 457 @ 0x1c90 (7312) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 458 @ 0x1ca0 (7328) - UMOV UR5, 0x7f88 ;
 Instr 459 @ 0x1cb0 (7344) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 460 @ 0x1cc0 (7360) - UMOV UR6, 0xd33a2100 ;
 Instr 461 @ 0x1cd0 (7376) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 462 @ 0x1ce0 (7392) - UMOV UR7, 0x7f88 ;
 Instr 463 @ 0x1cf0 (7408) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 464 @ 0x1d00 (7424) - UMOV UR8, 0xd33a0b00 ;
 Instr 465 @ 0x1d10 (7440) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 466 @ 0x1d20 (7456) - UMOV UR9, 0x7f88 ;
 Instr 467 @ 0x1d30 (7472) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 468 @ 0x1d40 (7488) - MOV R20, 0xd7fa32a0 ;
 Instr 469 @ 0x1d50 (7504) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 470 @ 0x1d60 (7520) - MOV R21, 0x7f88 ;
 Instr 471 @ 0x1d70 (7536) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 472 @ 0x1d80 (7552) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 473 @ 0x1d90 (7568) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 120 - num instructions 2
 Instr 474 @ 0x1da0 (7584) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 475 @ 0x1db0 (7600) - BRA 0x1e10 ;
Basic block id 121 - num instructions 3
 Instr 476 @ 0x1dc0 (7616) - LDG.E.64.SYS R4, [R4] ;
 Instr 477 @ 0x1dd0 (7632) - I2F.U64 R16, R4 ;
 Instr 478 @ 0x1de0 (7648) - BRA 0x1e10 ;
Basic block id 122 - num instructions 2
 Instr 479 @ 0x1df0 (7664) - LDG.E.SYS R4, [R4] ;
 Instr 480 @ 0x1e00 (7680) - I2F.U32 R16, R4 ;
Basic block id 123 - num instructions 4
 Instr 481 @ 0x1e10 (7696) - BSYNC B6 ;
 Instr 482 @ 0x1e20 (7712) - IADD3 R0, R36, 0x100, RZ ;
 Instr 483 @ 0x1e30 (7728) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 484 @ 0x1e40 (7744) - @P0 BRA 0x7520 ;
Basic block id 124 - num instructions 8
 Instr 485 @ 0x1e50 (7760) - IMAD R0, R17, 0x400, R0 ;
 Instr 486 @ 0x1e60 (7776) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 487 @ 0x1e70 (7792) - BMOV.32.CLEAR RZ, B6 ;
 Instr 488 @ 0x1e80 (7808) - BSSY B6, 0x2cb0 ;
 Instr 489 @ 0x1e90 (7824) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 490 @ 0x1ea0 (7840) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 491 @ 0x1eb0 (7856) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 492 @ 0x1ec0 (7872) - @P1 BRA 0x2240 ;
Basic block id 125 - num instructions 3
 Instr 493 @ 0x1ed0 (7888) - PRMT R0, R19, 0x9910, RZ ;
 Instr 494 @ 0x1ee0 (7904) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 495 @ 0x1ef0 (7920) - @P0 BRA 0x20b0 ;
Basic block id 126 - num instructions 2
 Instr 496 @ 0x1f00 (7936) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 497 @ 0x1f10 (7952) - @P0 BRA 0x1fc0 ;
Basic block id 127 - num instructions 2
 Instr 498 @ 0x1f20 (7968) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 499 @ 0x1f30 (7984) - @!P0 BRA 0x1f90 ;
Basic block id 128 - num instructions 2
 Instr 500 @ 0x1f40 (8000) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 501 @ 0x1f50 (8016) - @P0 BRA 0x2b10 ;
Basic block id 129 - num instructions 3
 Instr 502 @ 0x1f60 (8032) - LDG.E.S8.SYS R4, [R4] ;
 Instr 503 @ 0x1f70 (8048) - I2F.S16 R18, R4 ;
 Instr 504 @ 0x1f80 (8064) - BRA 0x2ca0 ;
Basic block id 130 - num instructions 3
 Instr 505 @ 0x1f90 (8080) - LDG.E.U8.SYS R4, [R4] ;
 Instr 506 @ 0x1fa0 (8096) - I2F.U16 R18, R4 ;
 Instr 507 @ 0x1fb0 (8112) - BRA 0x2ca0 ;
Basic block id 131 - num instructions 2
 Instr 508 @ 0x1fc0 (8128) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 509 @ 0x1fd0 (8144) - @!P0 BRA 0x2080 ;
Basic block id 132 - num instructions 2
 Instr 510 @ 0x1fe0 (8160) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 511 @ 0x1ff0 (8176) - @!P0 BRA 0x2050 ;
Basic block id 133 - num instructions 2
 Instr 512 @ 0x2000 (8192) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 513 @ 0x2010 (8208) - @P0 BRA 0x2b10 ;
Basic block id 134 - num instructions 3
 Instr 514 @ 0x2020 (8224) - LDG.E.64.SYS R4, [R4] ;
 Instr 515 @ 0x2030 (8240) - I2F.S64 R18, R4 ;
 Instr 516 @ 0x2040 (8256) - BRA 0x2ca0 ;
Basic block id 135 - num instructions 3
 Instr 517 @ 0x2050 (8272) - LDG.E.SYS R4, [R4] ;
 Instr 518 @ 0x2060 (8288) - I2F R18, R4 ;
 Instr 519 @ 0x2070 (8304) - BRA 0x2ca0 ;
Basic block id 136 - num instructions 3
 Instr 520 @ 0x2080 (8320) - LDG.E.U16.SYS R4, [R4] ;
 Instr 521 @ 0x2090 (8336) - I2F.S16 R18, R4 ;
 Instr 522 @ 0x20a0 (8352) - BRA 0x2ca0 ;
Basic block id 137 - num instructions 2
 Instr 523 @ 0x20b0 (8368) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 524 @ 0x20c0 (8384) - @P0 BRA 0x2160 ;
Basic block id 138 - num instructions 2
 Instr 525 @ 0x20d0 (8400) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 526 @ 0x20e0 (8416) - @!P0 BRA 0x2130 ;
Basic block id 139 - num instructions 2
 Instr 527 @ 0x20f0 (8432) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 528 @ 0x2100 (8448) - @P0 BRA 0x2b10 ;
Basic block id 140 - num instructions 2
 Instr 529 @ 0x2110 (8464) - LDG.E.SYS R18, [R4] ;
 Instr 530 @ 0x2120 (8480) - BRA 0x2ca0 ;
Basic block id 141 - num instructions 3
 Instr 531 @ 0x2130 (8496) - LDG.E.U16.SYS R4, [R4] ;
 Instr 532 @ 0x2140 (8512) - HADD2.F32 R18, R4.H0_H0, -RZ.H0_H0 ;
 Instr 533 @ 0x2150 (8528) - BRA 0x2ca0 ;
Basic block id 142 - num instructions 2
 Instr 534 @ 0x2160 (8544) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 535 @ 0x2170 (8560) - @!P0 BRA 0x2210 ;
Basic block id 143 - num instructions 2
 Instr 536 @ 0x2180 (8576) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 537 @ 0x2190 (8592) - @!P0 BRA 0x21e0 ;
Basic block id 144 - num instructions 2
 Instr 538 @ 0x21a0 (8608) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 539 @ 0x21b0 (8624) - @P0 BRA 0x2b10 ;
Basic block id 145 - num instructions 2
 Instr 540 @ 0x21c0 (8640) - LDG.E.SYS R18, [R4] ;
 Instr 541 @ 0x21d0 (8656) - BRA 0x2ca0 ;
Basic block id 146 - num instructions 3
 Instr 542 @ 0x21e0 (8672) - LDG.E.U16.SYS R4, [R4] ;
 Instr 543 @ 0x21f0 (8688) - HADD2.F32 R18, R4.H0_H0, -RZ.H0_H0 ;
 Instr 544 @ 0x2200 (8704) - BRA 0x2ca0 ;
Basic block id 147 - num instructions 3
 Instr 545 @ 0x2210 (8720) - LDG.E.64.SYS R4, [R4] ;
 Instr 546 @ 0x2220 (8736) - F2F.F32.F64 R18, R4 ;
 Instr 547 @ 0x2230 (8752) - BRA 0x2ca0 ;
Basic block id 148 - num instructions 3
 Instr 548 @ 0x2240 (8768) - PRMT R0, R19, 0x9910, RZ ;
 Instr 549 @ 0x2250 (8784) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 550 @ 0x2260 (8800) - @P0 BRA 0x25e0 ;
Basic block id 149 - num instructions 2
 Instr 551 @ 0x2270 (8816) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 552 @ 0x2280 (8832) - @P0 BRA 0x2340 ;
Basic block id 150 - num instructions 2
 Instr 553 @ 0x2290 (8848) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 554 @ 0x22a0 (8864) - @!P0 BRA 0x2310 ;
Basic block id 151 - num instructions 2
 Instr 555 @ 0x22b0 (8880) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 556 @ 0x22c0 (8896) - @P0 BRA 0x2b10 ;
Basic block id 152 - num instructions 4
 Instr 557 @ 0x22d0 (8912) - LDG.E.U8.SYS R4, [R4] ;
 Instr 558 @ 0x22e0 (8928) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 559 @ 0x22f0 (8944) - SEL R18, RZ, 0x3f800000, !P0 ;
 Instr 560 @ 0x2300 (8960) - BRA 0x2ca0 ;
Basic block id 153 - num instructions 3
 Instr 561 @ 0x2310 (8976) - LDG.E.64.SYS R4, [R4] ;
 Instr 562 @ 0x2320 (8992) - F2F.F32.F64 R18, R4 ;
 Instr 563 @ 0x2330 (9008) - BRA 0x2ca0 ;
Basic block id 154 - num instructions 2
 Instr 564 @ 0x2340 (9024) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 565 @ 0x2350 (9040) - @!P0 BRA 0x25b0 ;
Basic block id 155 - num instructions 2
 Instr 566 @ 0x2360 (9056) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 567 @ 0x2370 (9072) - @!P0 BRA 0x24e0 ;
Basic block id 156 - num instructions 2
 Instr 568 @ 0x2380 (9088) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 569 @ 0x2390 (9104) - @P0 BRA 0x2b10 ;
Basic block id 157 - num instructions 20
 Instr 570 @ 0x23a0 (9120) - LDG.E.U8.SYS R18, [R4] ;
 Instr 571 @ 0x23b0 (9136) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 572 @ 0x23c0 (9152) - IMAD.SHL.U32 R18, R18, 0x1000000, RZ ;
 Instr 573 @ 0x23d0 (9168) - LOP3.LUT R0, R18, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 574 @ 0x23e0 (9184) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 575 @ 0x23f0 (9200) - FLO.U32 R3, R0 ;
 Instr 576 @ 0x2400 (9216) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 577 @ 0x2410 (9232) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 578 @ 0x2420 (9248) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 579 @ 0x2430 (9264) - IADD3 R3, R3, -0x4, RZ ;
 Instr 580 @ 0x2440 (9280) - SEL R3, R3, RZ, P0 ;
 Instr 581 @ 0x2450 (9296) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 582 @ 0x2460 (9312) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 583 @ 0x2470 (9328) - IADD3 R3, R0, -0x1, RZ ;
 Instr 584 @ 0x2480 (9344) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 585 @ 0x2490 (9360) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 586 @ 0x24a0 (9376) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 587 @ 0x24b0 (9392) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 588 @ 0x24c0 (9408) - LOP3.LUT R18, R3, 0x80000000, R18, 0xf8, !PT ;
 Instr 589 @ 0x24d0 (9424) - BRA 0x2ca0 ;
Basic block id 158 - num instructions 13
 Instr 590 @ 0x24e0 (9440) - LDG.E.U8.SYS R4, [R4] ;
 Instr 591 @ 0x24f0 (9456) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 592 @ 0x2500 (9472) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 593 @ 0x2510 (9488) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 594 @ 0x2520 (9504) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 595 @ 0x2530 (9520) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 596 @ 0x2540 (9536) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 597 @ 0x2550 (9552) - @P0 FMUL R18, R3, 1.9259299443872358531e-34 ;
 Instr 598 @ 0x2560 (9568) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 599 @ 0x2570 (9584) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 600 @ 0x2580 (9600) - @!P0 FADD R18, R0, -0.5 ;
 Instr 601 @ 0x2590 (9616) - LOP3.LUT R18, R18, 0x80000000, R3, 0xf8, !PT ;
 Instr 602 @ 0x25a0 (9632) - BRA 0x2ca0 ;
Basic block id 159 - num instructions 3
 Instr 603 @ 0x25b0 (9648) - LDG.E.U16.SYS R4, [R4] ;
 Instr 604 @ 0x25c0 (9664) - PRMT R18, RZ, 0x5410, R4 ;
 Instr 605 @ 0x25d0 (9680) - BRA 0x2ca0 ;
Basic block id 160 - num instructions 2
 Instr 606 @ 0x25e0 (9696) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 607 @ 0x25f0 (9712) - @P0 BRA 0x2a30 ;
Basic block id 161 - num instructions 2
 Instr 608 @ 0x2600 (9728) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 609 @ 0x2610 (9744) - @!P0 BRA 0x2860 ;
Basic block id 162 - num instructions 2
 Instr 610 @ 0x2620 (9760) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 611 @ 0x2630 (9776) - @!P0 BRA 0x2690 ;
Basic block id 163 - num instructions 2
 Instr 612 @ 0x2640 (9792) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 613 @ 0x2650 (9808) - @P0 BRA 0x2b10 ;
Basic block id 164 - num instructions 3
 Instr 614 @ 0x2660 (9824) - LDG.E.U16.SYS R4, [R4] ;
 Instr 615 @ 0x2670 (9840) - I2F.U16 R18, R4 ;
 Instr 616 @ 0x2680 (9856) - BRA 0x2ca0 ;
Basic block id 165 - num instructions 4
 Instr 617 @ 0x2690 (9872) - LDG.E.U8.SYS R4, [R4] ;
 Instr 618 @ 0x26a0 (9888) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 619 @ 0x26b0 (9904) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 620 @ 0x26c0 (9920) - @!P0 BRA 0x2ca0 ;
Basic block id 166 - num instructions 3
 Instr 621 @ 0x26d0 (9936) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 622 @ 0x26e0 (9952) - @!P0 IMAD.MOV.U32 R18, RZ, RZ, 0x7f800001 ;
 Instr 623 @ 0x26f0 (9968) - @!P0 BRA 0x2ca0 ;
Basic block id 167 - num instructions 11
 Instr 624 @ 0x2700 (9984) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
 Instr 625 @ 0x2710 (10000) - BMOV.32.CLEAR RZ, B0 ;
 Instr 626 @ 0x2720 (10016) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 627 @ 0x2730 (10032) - BSSY B0, 0x2820 ;
 Instr 628 @ 0x2740 (10048) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 629 @ 0x2750 (10064) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 630 @ 0x2760 (10080) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 631 @ 0x2770 (10096) - IMAD.U32 R18, R3, -0x80000000, RZ ;
 Instr 632 @ 0x2780 (10112) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 633 @ 0x2790 (10128) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 634 @ 0x27a0 (10144) - @P0 BRA 0x2810 ;
Basic block id 168 - num instructions 6
 Instr 635 @ 0x27b0 (10160) - FLO.U32 R4, R3 ;
 Instr 636 @ 0x27c0 (10176) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 637 @ 0x27d0 (10192) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 638 @ 0x27e0 (10208) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 639 @ 0x27f0 (10224) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 640 @ 0x2800 (10240) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 169 - num instructions 5
 Instr 641 @ 0x2810 (10256) - BSYNC B0 ;
 Instr 642 @ 0x2820 (10272) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 643 @ 0x2830 (10288) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 644 @ 0x2840 (10304) - LOP3.LUT R18, R5, R3, R18, 0xfe, !PT ;
 Instr 645 @ 0x2850 (10320) - BRA 0x2ca0 ;
Basic block id 170 - num instructions 4
 Instr 646 @ 0x2860 (10336) - LDG.E.U8.SYS R3, [R4] ;
 Instr 647 @ 0x2870 (10352) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 648 @ 0x2880 (10368) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 649 @ 0x2890 (10384) - @!P0 BRA 0x2ca0 ;
Basic block id 171 - num instructions 3
 Instr 650 @ 0x28a0 (10400) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 651 @ 0x28b0 (10416) - @!P0 IMAD.MOV.U32 R18, RZ, RZ, 0x7f800001 ;
 Instr 652 @ 0x28c0 (10432) - @!P0 BRA 0x2ca0 ;
Basic block id 172 - num instructions 11
 Instr 653 @ 0x28d0 (10448) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
 Instr 654 @ 0x28e0 (10464) - BMOV.32.CLEAR RZ, B0 ;
 Instr 655 @ 0x28f0 (10480) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 656 @ 0x2900 (10496) - BSSY B0, 0x29f0 ;
 Instr 657 @ 0x2910 (10512) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 658 @ 0x2920 (10528) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 659 @ 0x2930 (10544) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 660 @ 0x2940 (10560) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 661 @ 0x2950 (10576) - IMAD.U32 R18, R4, -0x80000000, RZ ;
 Instr 662 @ 0x2960 (10592) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 663 @ 0x2970 (10608) - @P0 BRA 0x29e0 ;
Basic block id 173 - num instructions 6
 Instr 664 @ 0x2980 (10624) - FLO.U32 R4, R3 ;
 Instr 665 @ 0x2990 (10640) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 666 @ 0x29a0 (10656) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 667 @ 0x29b0 (10672) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 668 @ 0x29c0 (10688) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 669 @ 0x29d0 (10704) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 174 - num instructions 5
 Instr 670 @ 0x29e0 (10720) - BSYNC B0 ;
 Instr 671 @ 0x29f0 (10736) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 672 @ 0x2a00 (10752) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 673 @ 0x2a10 (10768) - LOP3.LUT R18, R0, R3, R18, 0xfe, !PT ;
 Instr 674 @ 0x2a20 (10784) - BRA 0x2ca0 ;
Basic block id 175 - num instructions 2
 Instr 675 @ 0x2a30 (10800) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 676 @ 0x2a40 (10816) - @!P0 BRA 0x2c80 ;
Basic block id 176 - num instructions 2
 Instr 677 @ 0x2a50 (10832) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 678 @ 0x2a60 (10848) - @!P0 BRA 0x2c50 ;
Basic block id 177 - num instructions 2
 Instr 679 @ 0x2a70 (10864) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 680 @ 0x2a80 (10880) - @P0 BRA 0x2b10 ;
Basic block id 178 - num instructions 4
 Instr 681 @ 0x2a90 (10896) - LDG.E.U8.SYS R4, [R4] ;
 Instr 682 @ 0x2aa0 (10912) - IMAD.MOV.U32 R18, RZ, RZ, 0x400000 ;
 Instr 683 @ 0x2ab0 (10928) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 684 @ 0x2ac0 (10944) - @!P0 BRA 0x2ca0 ;
Basic block id 179 - num instructions 4
 Instr 685 @ 0x2ad0 (10960) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 686 @ 0x2ae0 (10976) - @!P0 IMAD.MOV.U32 R18, RZ, RZ, 0x7f800001 ;
 Instr 687 @ 0x2af0 (10992) - @P0 IMAD.SHL.U32 R18, R4, 0x800000, RZ ;
 Instr 688 @ 0x2b00 (11008) - BRA 0x2ca0 ;
Basic block id 180 - num instructions 18
 Instr 689 @ 0x2b10 (11024) - UMOV UR4, 0xd33a2700 ;
 Instr 690 @ 0x2b20 (11040) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 691 @ 0x2b30 (11056) - UMOV UR5, 0x7f88 ;
 Instr 692 @ 0x2b40 (11072) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 693 @ 0x2b50 (11088) - UMOV UR6, 0xd33a2100 ;
 Instr 694 @ 0x2b60 (11104) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 695 @ 0x2b70 (11120) - UMOV UR7, 0x7f88 ;
 Instr 696 @ 0x2b80 (11136) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 697 @ 0x2b90 (11152) - UMOV UR8, 0xd33a0b00 ;
 Instr 698 @ 0x2ba0 (11168) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 699 @ 0x2bb0 (11184) - UMOV UR9, 0x7f88 ;
 Instr 700 @ 0x2bc0 (11200) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 701 @ 0x2bd0 (11216) - MOV R20, 0xd7fa4130 ;
 Instr 702 @ 0x2be0 (11232) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 703 @ 0x2bf0 (11248) - MOV R21, 0x7f88 ;
 Instr 704 @ 0x2c00 (11264) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 705 @ 0x2c10 (11280) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 706 @ 0x2c20 (11296) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 181 - num instructions 2
 Instr 707 @ 0x2c30 (11312) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 708 @ 0x2c40 (11328) - BRA 0x2ca0 ;
Basic block id 182 - num instructions 3
 Instr 709 @ 0x2c50 (11344) - LDG.E.64.SYS R4, [R4] ;
 Instr 710 @ 0x2c60 (11360) - I2F.U64 R18, R4 ;
 Instr 711 @ 0x2c70 (11376) - BRA 0x2ca0 ;
Basic block id 183 - num instructions 2
 Instr 712 @ 0x2c80 (11392) - LDG.E.SYS R4, [R4] ;
 Instr 713 @ 0x2c90 (11408) - I2F.U32 R18, R4 ;
Basic block id 184 - num instructions 4
 Instr 714 @ 0x2ca0 (11424) - BSYNC B6 ;
 Instr 715 @ 0x2cb0 (11440) - IADD3 R0, R36, 0x180, RZ ;
 Instr 716 @ 0x2cc0 (11456) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 717 @ 0x2cd0 (11472) - @P0 BRA 0x7520 ;
Basic block id 185 - num instructions 8
 Instr 718 @ 0x2ce0 (11488) - IMAD R0, R17, 0x400, R0 ;
 Instr 719 @ 0x2cf0 (11504) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 720 @ 0x2d00 (11520) - BMOV.32.CLEAR RZ, B6 ;
 Instr 721 @ 0x2d10 (11536) - BSSY B6, 0x3b40 ;
 Instr 722 @ 0x2d20 (11552) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 723 @ 0x2d30 (11568) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 724 @ 0x2d40 (11584) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 725 @ 0x2d50 (11600) - @P1 BRA 0x30d0 ;
Basic block id 186 - num instructions 3
 Instr 726 @ 0x2d60 (11616) - PRMT R0, R19, 0x9910, RZ ;
 Instr 727 @ 0x2d70 (11632) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 728 @ 0x2d80 (11648) - @P0 BRA 0x2f40 ;
Basic block id 187 - num instructions 2
 Instr 729 @ 0x2d90 (11664) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 730 @ 0x2da0 (11680) - @P0 BRA 0x2e50 ;
Basic block id 188 - num instructions 2
 Instr 731 @ 0x2db0 (11696) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 732 @ 0x2dc0 (11712) - @!P0 BRA 0x2e20 ;
Basic block id 189 - num instructions 2
 Instr 733 @ 0x2dd0 (11728) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 734 @ 0x2de0 (11744) - @P0 BRA 0x39a0 ;
Basic block id 190 - num instructions 3
 Instr 735 @ 0x2df0 (11760) - LDG.E.S8.SYS R4, [R4] ;
 Instr 736 @ 0x2e00 (11776) - I2F.S16 R22, R4 ;
 Instr 737 @ 0x2e10 (11792) - BRA 0x3b30 ;
Basic block id 191 - num instructions 3
 Instr 738 @ 0x2e20 (11808) - LDG.E.U8.SYS R4, [R4] ;
 Instr 739 @ 0x2e30 (11824) - I2F.U16 R22, R4 ;
 Instr 740 @ 0x2e40 (11840) - BRA 0x3b30 ;
Basic block id 192 - num instructions 2
 Instr 741 @ 0x2e50 (11856) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 742 @ 0x2e60 (11872) - @!P0 BRA 0x2f10 ;
Basic block id 193 - num instructions 2
 Instr 743 @ 0x2e70 (11888) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 744 @ 0x2e80 (11904) - @!P0 BRA 0x2ee0 ;
Basic block id 194 - num instructions 2
 Instr 745 @ 0x2e90 (11920) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 746 @ 0x2ea0 (11936) - @P0 BRA 0x39a0 ;
Basic block id 195 - num instructions 3
 Instr 747 @ 0x2eb0 (11952) - LDG.E.64.SYS R4, [R4] ;
 Instr 748 @ 0x2ec0 (11968) - I2F.S64 R22, R4 ;
 Instr 749 @ 0x2ed0 (11984) - BRA 0x3b30 ;
Basic block id 196 - num instructions 3
 Instr 750 @ 0x2ee0 (12000) - LDG.E.SYS R4, [R4] ;
 Instr 751 @ 0x2ef0 (12016) - I2F R22, R4 ;
 Instr 752 @ 0x2f00 (12032) - BRA 0x3b30 ;
Basic block id 197 - num instructions 3
 Instr 753 @ 0x2f10 (12048) - LDG.E.U16.SYS R4, [R4] ;
 Instr 754 @ 0x2f20 (12064) - I2F.S16 R22, R4 ;
 Instr 755 @ 0x2f30 (12080) - BRA 0x3b30 ;
Basic block id 198 - num instructions 2
 Instr 756 @ 0x2f40 (12096) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 757 @ 0x2f50 (12112) - @P0 BRA 0x2ff0 ;
Basic block id 199 - num instructions 2
 Instr 758 @ 0x2f60 (12128) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 759 @ 0x2f70 (12144) - @!P0 BRA 0x2fc0 ;
Basic block id 200 - num instructions 2
 Instr 760 @ 0x2f80 (12160) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 761 @ 0x2f90 (12176) - @P0 BRA 0x39a0 ;
Basic block id 201 - num instructions 2
 Instr 762 @ 0x2fa0 (12192) - LDG.E.SYS R22, [R4] ;
 Instr 763 @ 0x2fb0 (12208) - BRA 0x3b30 ;
Basic block id 202 - num instructions 3
 Instr 764 @ 0x2fc0 (12224) - LDG.E.U16.SYS R4, [R4] ;
 Instr 765 @ 0x2fd0 (12240) - HADD2.F32 R22, R4.H0_H0, -RZ.H0_H0 ;
 Instr 766 @ 0x2fe0 (12256) - BRA 0x3b30 ;
Basic block id 203 - num instructions 2
 Instr 767 @ 0x2ff0 (12272) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 768 @ 0x3000 (12288) - @!P0 BRA 0x30a0 ;
Basic block id 204 - num instructions 2
 Instr 769 @ 0x3010 (12304) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 770 @ 0x3020 (12320) - @!P0 BRA 0x3070 ;
Basic block id 205 - num instructions 2
 Instr 771 @ 0x3030 (12336) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 772 @ 0x3040 (12352) - @P0 BRA 0x39a0 ;
Basic block id 206 - num instructions 2
 Instr 773 @ 0x3050 (12368) - LDG.E.SYS R22, [R4] ;
 Instr 774 @ 0x3060 (12384) - BRA 0x3b30 ;
Basic block id 207 - num instructions 3
 Instr 775 @ 0x3070 (12400) - LDG.E.U16.SYS R4, [R4] ;
 Instr 776 @ 0x3080 (12416) - HADD2.F32 R22, R4.H0_H0, -RZ.H0_H0 ;
 Instr 777 @ 0x3090 (12432) - BRA 0x3b30 ;
Basic block id 208 - num instructions 3
 Instr 778 @ 0x30a0 (12448) - LDG.E.64.SYS R4, [R4] ;
 Instr 779 @ 0x30b0 (12464) - F2F.F32.F64 R22, R4 ;
 Instr 780 @ 0x30c0 (12480) - BRA 0x3b30 ;
Basic block id 209 - num instructions 3
 Instr 781 @ 0x30d0 (12496) - PRMT R0, R19, 0x9910, RZ ;
 Instr 782 @ 0x30e0 (12512) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 783 @ 0x30f0 (12528) - @P0 BRA 0x3470 ;
Basic block id 210 - num instructions 2
 Instr 784 @ 0x3100 (12544) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 785 @ 0x3110 (12560) - @P0 BRA 0x31d0 ;
Basic block id 211 - num instructions 2
 Instr 786 @ 0x3120 (12576) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 787 @ 0x3130 (12592) - @!P0 BRA 0x31a0 ;
Basic block id 212 - num instructions 2
 Instr 788 @ 0x3140 (12608) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 789 @ 0x3150 (12624) - @P0 BRA 0x39a0 ;
Basic block id 213 - num instructions 4
 Instr 790 @ 0x3160 (12640) - LDG.E.U8.SYS R4, [R4] ;
 Instr 791 @ 0x3170 (12656) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 792 @ 0x3180 (12672) - SEL R22, RZ, 0x3f800000, !P0 ;
 Instr 793 @ 0x3190 (12688) - BRA 0x3b30 ;
Basic block id 214 - num instructions 3
 Instr 794 @ 0x31a0 (12704) - LDG.E.64.SYS R4, [R4] ;
 Instr 795 @ 0x31b0 (12720) - F2F.F32.F64 R22, R4 ;
 Instr 796 @ 0x31c0 (12736) - BRA 0x3b30 ;
Basic block id 215 - num instructions 2
 Instr 797 @ 0x31d0 (12752) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 798 @ 0x31e0 (12768) - @!P0 BRA 0x3440 ;
Basic block id 216 - num instructions 2
 Instr 799 @ 0x31f0 (12784) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 800 @ 0x3200 (12800) - @!P0 BRA 0x3370 ;
Basic block id 217 - num instructions 2
 Instr 801 @ 0x3210 (12816) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 802 @ 0x3220 (12832) - @P0 BRA 0x39a0 ;
Basic block id 218 - num instructions 20
 Instr 803 @ 0x3230 (12848) - LDG.E.U8.SYS R22, [R4] ;
 Instr 804 @ 0x3240 (12864) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 805 @ 0x3250 (12880) - IMAD.SHL.U32 R22, R22, 0x1000000, RZ ;
 Instr 806 @ 0x3260 (12896) - LOP3.LUT R0, R22, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 807 @ 0x3270 (12912) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 808 @ 0x3280 (12928) - FLO.U32 R3, R0 ;
 Instr 809 @ 0x3290 (12944) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 810 @ 0x32a0 (12960) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 811 @ 0x32b0 (12976) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 812 @ 0x32c0 (12992) - IADD3 R3, R3, -0x4, RZ ;
 Instr 813 @ 0x32d0 (13008) - SEL R3, R3, RZ, P0 ;
 Instr 814 @ 0x32e0 (13024) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 815 @ 0x32f0 (13040) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 816 @ 0x3300 (13056) - IADD3 R3, R0, -0x1, RZ ;
 Instr 817 @ 0x3310 (13072) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 818 @ 0x3320 (13088) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 819 @ 0x3330 (13104) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 820 @ 0x3340 (13120) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 821 @ 0x3350 (13136) - LOP3.LUT R22, R3, 0x80000000, R22, 0xf8, !PT ;
 Instr 822 @ 0x3360 (13152) - BRA 0x3b30 ;
Basic block id 219 - num instructions 13
 Instr 823 @ 0x3370 (13168) - LDG.E.U8.SYS R4, [R4] ;
 Instr 824 @ 0x3380 (13184) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 825 @ 0x3390 (13200) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 826 @ 0x33a0 (13216) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 827 @ 0x33b0 (13232) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 828 @ 0x33c0 (13248) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 829 @ 0x33d0 (13264) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 830 @ 0x33e0 (13280) - @P0 FMUL R22, R3, 1.9259299443872358531e-34 ;
 Instr 831 @ 0x33f0 (13296) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 832 @ 0x3400 (13312) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 833 @ 0x3410 (13328) - @!P0 FADD R22, R0, -0.5 ;
 Instr 834 @ 0x3420 (13344) - LOP3.LUT R22, R22, 0x80000000, R3, 0xf8, !PT ;
 Instr 835 @ 0x3430 (13360) - BRA 0x3b30 ;
Basic block id 220 - num instructions 3
 Instr 836 @ 0x3440 (13376) - LDG.E.U16.SYS R4, [R4] ;
 Instr 837 @ 0x3450 (13392) - PRMT R22, RZ, 0x5410, R4 ;
 Instr 838 @ 0x3460 (13408) - BRA 0x3b30 ;
Basic block id 221 - num instructions 2
 Instr 839 @ 0x3470 (13424) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 840 @ 0x3480 (13440) - @P0 BRA 0x38c0 ;
Basic block id 222 - num instructions 2
 Instr 841 @ 0x3490 (13456) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 842 @ 0x34a0 (13472) - @!P0 BRA 0x36f0 ;
Basic block id 223 - num instructions 2
 Instr 843 @ 0x34b0 (13488) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 844 @ 0x34c0 (13504) - @!P0 BRA 0x3520 ;
Basic block id 224 - num instructions 2
 Instr 845 @ 0x34d0 (13520) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 846 @ 0x34e0 (13536) - @P0 BRA 0x39a0 ;
Basic block id 225 - num instructions 3
 Instr 847 @ 0x34f0 (13552) - LDG.E.U16.SYS R4, [R4] ;
 Instr 848 @ 0x3500 (13568) - I2F.U16 R22, R4 ;
 Instr 849 @ 0x3510 (13584) - BRA 0x3b30 ;
Basic block id 226 - num instructions 4
 Instr 850 @ 0x3520 (13600) - LDG.E.U8.SYS R4, [R4] ;
 Instr 851 @ 0x3530 (13616) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 852 @ 0x3540 (13632) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 853 @ 0x3550 (13648) - @!P0 BRA 0x3b30 ;
Basic block id 227 - num instructions 3
 Instr 854 @ 0x3560 (13664) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 855 @ 0x3570 (13680) - @!P0 IMAD.MOV.U32 R22, RZ, RZ, 0x7f800001 ;
 Instr 856 @ 0x3580 (13696) - @!P0 BRA 0x3b30 ;
Basic block id 228 - num instructions 11
 Instr 857 @ 0x3590 (13712) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
 Instr 858 @ 0x35a0 (13728) - BMOV.32.CLEAR RZ, B0 ;
 Instr 859 @ 0x35b0 (13744) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 860 @ 0x35c0 (13760) - BSSY B0, 0x36b0 ;
 Instr 861 @ 0x35d0 (13776) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 862 @ 0x35e0 (13792) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 863 @ 0x35f0 (13808) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 864 @ 0x3600 (13824) - IMAD.U32 R22, R3, -0x80000000, RZ ;
 Instr 865 @ 0x3610 (13840) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 866 @ 0x3620 (13856) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 867 @ 0x3630 (13872) - @P0 BRA 0x36a0 ;
Basic block id 229 - num instructions 6
 Instr 868 @ 0x3640 (13888) - FLO.U32 R4, R3 ;
 Instr 869 @ 0x3650 (13904) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 870 @ 0x3660 (13920) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 871 @ 0x3670 (13936) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 872 @ 0x3680 (13952) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 873 @ 0x3690 (13968) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 230 - num instructions 5
 Instr 874 @ 0x36a0 (13984) - BSYNC B0 ;
 Instr 875 @ 0x36b0 (14000) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 876 @ 0x36c0 (14016) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 877 @ 0x36d0 (14032) - LOP3.LUT R22, R5, R3, R22, 0xfe, !PT ;
 Instr 878 @ 0x36e0 (14048) - BRA 0x3b30 ;
Basic block id 231 - num instructions 4
 Instr 879 @ 0x36f0 (14064) - LDG.E.U8.SYS R3, [R4] ;
 Instr 880 @ 0x3700 (14080) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 881 @ 0x3710 (14096) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 882 @ 0x3720 (14112) - @!P0 BRA 0x3b30 ;
Basic block id 232 - num instructions 3
 Instr 883 @ 0x3730 (14128) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 884 @ 0x3740 (14144) - @!P0 IMAD.MOV.U32 R22, RZ, RZ, 0x7f800001 ;
 Instr 885 @ 0x3750 (14160) - @!P0 BRA 0x3b30 ;
Basic block id 233 - num instructions 11
 Instr 886 @ 0x3760 (14176) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
 Instr 887 @ 0x3770 (14192) - BMOV.32.CLEAR RZ, B0 ;
 Instr 888 @ 0x3780 (14208) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 889 @ 0x3790 (14224) - BSSY B0, 0x3880 ;
 Instr 890 @ 0x37a0 (14240) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 891 @ 0x37b0 (14256) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 892 @ 0x37c0 (14272) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 893 @ 0x37d0 (14288) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 894 @ 0x37e0 (14304) - IMAD.U32 R22, R4, -0x80000000, RZ ;
 Instr 895 @ 0x37f0 (14320) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 896 @ 0x3800 (14336) - @P0 BRA 0x3870 ;
Basic block id 234 - num instructions 6
 Instr 897 @ 0x3810 (14352) - FLO.U32 R4, R3 ;
 Instr 898 @ 0x3820 (14368) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 899 @ 0x3830 (14384) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 900 @ 0x3840 (14400) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 901 @ 0x3850 (14416) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 902 @ 0x3860 (14432) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 235 - num instructions 5
 Instr 903 @ 0x3870 (14448) - BSYNC B0 ;
 Instr 904 @ 0x3880 (14464) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 905 @ 0x3890 (14480) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 906 @ 0x38a0 (14496) - LOP3.LUT R22, R0, R3, R22, 0xfe, !PT ;
 Instr 907 @ 0x38b0 (14512) - BRA 0x3b30 ;
Basic block id 236 - num instructions 2
 Instr 908 @ 0x38c0 (14528) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 909 @ 0x38d0 (14544) - @!P0 BRA 0x3b10 ;
Basic block id 237 - num instructions 2
 Instr 910 @ 0x38e0 (14560) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 911 @ 0x38f0 (14576) - @!P0 BRA 0x3ae0 ;
Basic block id 238 - num instructions 2
 Instr 912 @ 0x3900 (14592) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 913 @ 0x3910 (14608) - @P0 BRA 0x39a0 ;
Basic block id 239 - num instructions 4
 Instr 914 @ 0x3920 (14624) - LDG.E.U8.SYS R4, [R4] ;
 Instr 915 @ 0x3930 (14640) - IMAD.MOV.U32 R22, RZ, RZ, 0x400000 ;
 Instr 916 @ 0x3940 (14656) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 917 @ 0x3950 (14672) - @!P0 BRA 0x3b30 ;
Basic block id 240 - num instructions 4
 Instr 918 @ 0x3960 (14688) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 919 @ 0x3970 (14704) - @!P0 IMAD.MOV.U32 R22, RZ, RZ, 0x7f800001 ;
 Instr 920 @ 0x3980 (14720) - @P0 IMAD.SHL.U32 R22, R4, 0x800000, RZ ;
 Instr 921 @ 0x3990 (14736) - BRA 0x3b30 ;
Basic block id 241 - num instructions 18
 Instr 922 @ 0x39a0 (14752) - UMOV UR4, 0xd33a2700 ;
 Instr 923 @ 0x39b0 (14768) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 924 @ 0x39c0 (14784) - UMOV UR5, 0x7f88 ;
 Instr 925 @ 0x39d0 (14800) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 926 @ 0x39e0 (14816) - UMOV UR6, 0xd33a2100 ;
 Instr 927 @ 0x39f0 (14832) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 928 @ 0x3a00 (14848) - UMOV UR7, 0x7f88 ;
 Instr 929 @ 0x3a10 (14864) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 930 @ 0x3a20 (14880) - UMOV UR8, 0xd33a0b00 ;
 Instr 931 @ 0x3a30 (14896) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 932 @ 0x3a40 (14912) - UMOV UR9, 0x7f88 ;
 Instr 933 @ 0x3a50 (14928) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 934 @ 0x3a60 (14944) - MOV R20, 0xd7fa4fc0 ;
 Instr 935 @ 0x3a70 (14960) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 936 @ 0x3a80 (14976) - MOV R21, 0x7f88 ;
 Instr 937 @ 0x3a90 (14992) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 938 @ 0x3aa0 (15008) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 939 @ 0x3ab0 (15024) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 242 - num instructions 2
 Instr 940 @ 0x3ac0 (15040) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 941 @ 0x3ad0 (15056) - BRA 0x3b30 ;
Basic block id 243 - num instructions 3
 Instr 942 @ 0x3ae0 (15072) - LDG.E.64.SYS R4, [R4] ;
 Instr 943 @ 0x3af0 (15088) - I2F.U64 R22, R4 ;
 Instr 944 @ 0x3b00 (15104) - BRA 0x3b30 ;
Basic block id 244 - num instructions 2
 Instr 945 @ 0x3b10 (15120) - LDG.E.SYS R4, [R4] ;
 Instr 946 @ 0x3b20 (15136) - I2F.U32 R22, R4 ;
Basic block id 245 - num instructions 4
 Instr 947 @ 0x3b30 (15152) - BSYNC B6 ;
 Instr 948 @ 0x3b40 (15168) - IADD3 R0, R36, 0x200, RZ ;
 Instr 949 @ 0x3b50 (15184) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 950 @ 0x3b60 (15200) - @P0 BRA 0x7520 ;
Basic block id 246 - num instructions 8
 Instr 951 @ 0x3b70 (15216) - IMAD R0, R17, 0x400, R0 ;
 Instr 952 @ 0x3b80 (15232) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 953 @ 0x3b90 (15248) - BMOV.32.CLEAR RZ, B6 ;
 Instr 954 @ 0x3ba0 (15264) - BSSY B6, 0x49d0 ;
 Instr 955 @ 0x3bb0 (15280) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 956 @ 0x3bc0 (15296) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 957 @ 0x3bd0 (15312) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 958 @ 0x3be0 (15328) - @P1 BRA 0x3f60 ;
Basic block id 247 - num instructions 3
 Instr 959 @ 0x3bf0 (15344) - PRMT R0, R19, 0x9910, RZ ;
 Instr 960 @ 0x3c00 (15360) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 961 @ 0x3c10 (15376) - @P0 BRA 0x3dd0 ;
Basic block id 248 - num instructions 2
 Instr 962 @ 0x3c20 (15392) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 963 @ 0x3c30 (15408) - @P0 BRA 0x3ce0 ;
Basic block id 249 - num instructions 2
 Instr 964 @ 0x3c40 (15424) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 965 @ 0x3c50 (15440) - @!P0 BRA 0x3cb0 ;
Basic block id 250 - num instructions 2
 Instr 966 @ 0x3c60 (15456) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 967 @ 0x3c70 (15472) - @P0 BRA 0x4830 ;
Basic block id 251 - num instructions 3
 Instr 968 @ 0x3c80 (15488) - LDG.E.S8.SYS R4, [R4] ;
 Instr 969 @ 0x3c90 (15504) - I2F.S16 R24, R4 ;
 Instr 970 @ 0x3ca0 (15520) - BRA 0x49c0 ;
Basic block id 252 - num instructions 3
 Instr 971 @ 0x3cb0 (15536) - LDG.E.U8.SYS R4, [R4] ;
 Instr 972 @ 0x3cc0 (15552) - I2F.U16 R24, R4 ;
 Instr 973 @ 0x3cd0 (15568) - BRA 0x49c0 ;
Basic block id 253 - num instructions 2
 Instr 974 @ 0x3ce0 (15584) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 975 @ 0x3cf0 (15600) - @!P0 BRA 0x3da0 ;
Basic block id 254 - num instructions 2
 Instr 976 @ 0x3d00 (15616) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 977 @ 0x3d10 (15632) - @!P0 BRA 0x3d70 ;
Basic block id 255 - num instructions 2
 Instr 978 @ 0x3d20 (15648) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 979 @ 0x3d30 (15664) - @P0 BRA 0x4830 ;
Basic block id 256 - num instructions 3
 Instr 980 @ 0x3d40 (15680) - LDG.E.64.SYS R4, [R4] ;
 Instr 981 @ 0x3d50 (15696) - I2F.S64 R24, R4 ;
 Instr 982 @ 0x3d60 (15712) - BRA 0x49c0 ;
Basic block id 257 - num instructions 3
 Instr 983 @ 0x3d70 (15728) - LDG.E.SYS R4, [R4] ;
 Instr 984 @ 0x3d80 (15744) - I2F R24, R4 ;
 Instr 985 @ 0x3d90 (15760) - BRA 0x49c0 ;
Basic block id 258 - num instructions 3
 Instr 986 @ 0x3da0 (15776) - LDG.E.U16.SYS R4, [R4] ;
 Instr 987 @ 0x3db0 (15792) - I2F.S16 R24, R4 ;
 Instr 988 @ 0x3dc0 (15808) - BRA 0x49c0 ;
Basic block id 259 - num instructions 2
 Instr 989 @ 0x3dd0 (15824) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 990 @ 0x3de0 (15840) - @P0 BRA 0x3e80 ;
Basic block id 260 - num instructions 2
 Instr 991 @ 0x3df0 (15856) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 992 @ 0x3e00 (15872) - @!P0 BRA 0x3e50 ;
Basic block id 261 - num instructions 2
 Instr 993 @ 0x3e10 (15888) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 994 @ 0x3e20 (15904) - @P0 BRA 0x4830 ;
Basic block id 262 - num instructions 2
 Instr 995 @ 0x3e30 (15920) - LDG.E.SYS R24, [R4] ;
 Instr 996 @ 0x3e40 (15936) - BRA 0x49c0 ;
Basic block id 263 - num instructions 3
 Instr 997 @ 0x3e50 (15952) - LDG.E.U16.SYS R4, [R4] ;
 Instr 998 @ 0x3e60 (15968) - HADD2.F32 R24, R4.H0_H0, -RZ.H0_H0 ;
 Instr 999 @ 0x3e70 (15984) - BRA 0x49c0 ;
Basic block id 264 - num instructions 2
 Instr 1000 @ 0x3e80 (16000) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1001 @ 0x3e90 (16016) - @!P0 BRA 0x3f30 ;
Basic block id 265 - num instructions 2
 Instr 1002 @ 0x3ea0 (16032) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1003 @ 0x3eb0 (16048) - @!P0 BRA 0x3f00 ;
Basic block id 266 - num instructions 2
 Instr 1004 @ 0x3ec0 (16064) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1005 @ 0x3ed0 (16080) - @P0 BRA 0x4830 ;
Basic block id 267 - num instructions 2
 Instr 1006 @ 0x3ee0 (16096) - LDG.E.SYS R24, [R4] ;
 Instr 1007 @ 0x3ef0 (16112) - BRA 0x49c0 ;
Basic block id 268 - num instructions 3
 Instr 1008 @ 0x3f00 (16128) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1009 @ 0x3f10 (16144) - HADD2.F32 R24, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1010 @ 0x3f20 (16160) - BRA 0x49c0 ;
Basic block id 269 - num instructions 3
 Instr 1011 @ 0x3f30 (16176) - LDG.E.64.SYS R4, [R4] ;
 Instr 1012 @ 0x3f40 (16192) - F2F.F32.F64 R24, R4 ;
 Instr 1013 @ 0x3f50 (16208) - BRA 0x49c0 ;
Basic block id 270 - num instructions 3
 Instr 1014 @ 0x3f60 (16224) - PRMT R0, R19, 0x9910, RZ ;
 Instr 1015 @ 0x3f70 (16240) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1016 @ 0x3f80 (16256) - @P0 BRA 0x4300 ;
Basic block id 271 - num instructions 2
 Instr 1017 @ 0x3f90 (16272) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1018 @ 0x3fa0 (16288) - @P0 BRA 0x4060 ;
Basic block id 272 - num instructions 2
 Instr 1019 @ 0x3fb0 (16304) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1020 @ 0x3fc0 (16320) - @!P0 BRA 0x4030 ;
Basic block id 273 - num instructions 2
 Instr 1021 @ 0x3fd0 (16336) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1022 @ 0x3fe0 (16352) - @P0 BRA 0x4830 ;
Basic block id 274 - num instructions 4
 Instr 1023 @ 0x3ff0 (16368) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1024 @ 0x4000 (16384) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1025 @ 0x4010 (16400) - SEL R24, RZ, 0x3f800000, !P0 ;
 Instr 1026 @ 0x4020 (16416) - BRA 0x49c0 ;
Basic block id 275 - num instructions 3
 Instr 1027 @ 0x4030 (16432) - LDG.E.64.SYS R4, [R4] ;
 Instr 1028 @ 0x4040 (16448) - F2F.F32.F64 R24, R4 ;
 Instr 1029 @ 0x4050 (16464) - BRA 0x49c0 ;
Basic block id 276 - num instructions 2
 Instr 1030 @ 0x4060 (16480) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1031 @ 0x4070 (16496) - @!P0 BRA 0x42d0 ;
Basic block id 277 - num instructions 2
 Instr 1032 @ 0x4080 (16512) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1033 @ 0x4090 (16528) - @!P0 BRA 0x4200 ;
Basic block id 278 - num instructions 2
 Instr 1034 @ 0x40a0 (16544) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1035 @ 0x40b0 (16560) - @P0 BRA 0x4830 ;
Basic block id 279 - num instructions 20
 Instr 1036 @ 0x40c0 (16576) - LDG.E.U8.SYS R24, [R4] ;
 Instr 1037 @ 0x40d0 (16592) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 1038 @ 0x40e0 (16608) - IMAD.SHL.U32 R24, R24, 0x1000000, RZ ;
 Instr 1039 @ 0x40f0 (16624) - LOP3.LUT R0, R24, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1040 @ 0x4100 (16640) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 1041 @ 0x4110 (16656) - FLO.U32 R3, R0 ;
 Instr 1042 @ 0x4120 (16672) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 1043 @ 0x4130 (16688) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 1044 @ 0x4140 (16704) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 1045 @ 0x4150 (16720) - IADD3 R3, R3, -0x4, RZ ;
 Instr 1046 @ 0x4160 (16736) - SEL R3, R3, RZ, P0 ;
 Instr 1047 @ 0x4170 (16752) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 1048 @ 0x4180 (16768) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 1049 @ 0x4190 (16784) - IADD3 R3, R0, -0x1, RZ ;
 Instr 1050 @ 0x41a0 (16800) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 1051 @ 0x41b0 (16816) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 1052 @ 0x41c0 (16832) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 1053 @ 0x41d0 (16848) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 1054 @ 0x41e0 (16864) - LOP3.LUT R24, R3, 0x80000000, R24, 0xf8, !PT ;
 Instr 1055 @ 0x41f0 (16880) - BRA 0x49c0 ;
Basic block id 280 - num instructions 13
 Instr 1056 @ 0x4200 (16896) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1057 @ 0x4210 (16912) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 1058 @ 0x4220 (16928) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1059 @ 0x4230 (16944) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 1060 @ 0x4240 (16960) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1061 @ 0x4250 (16976) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1062 @ 0x4260 (16992) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1063 @ 0x4270 (17008) - @P0 FMUL R24, R3, 1.9259299443872358531e-34 ;
 Instr 1064 @ 0x4280 (17024) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1065 @ 0x4290 (17040) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 1066 @ 0x42a0 (17056) - @!P0 FADD R24, R0, -0.5 ;
 Instr 1067 @ 0x42b0 (17072) - LOP3.LUT R24, R24, 0x80000000, R3, 0xf8, !PT ;
 Instr 1068 @ 0x42c0 (17088) - BRA 0x49c0 ;
Basic block id 281 - num instructions 3
 Instr 1069 @ 0x42d0 (17104) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1070 @ 0x42e0 (17120) - PRMT R24, RZ, 0x5410, R4 ;
 Instr 1071 @ 0x42f0 (17136) - BRA 0x49c0 ;
Basic block id 282 - num instructions 2
 Instr 1072 @ 0x4300 (17152) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1073 @ 0x4310 (17168) - @P0 BRA 0x4750 ;
Basic block id 283 - num instructions 2
 Instr 1074 @ 0x4320 (17184) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1075 @ 0x4330 (17200) - @!P0 BRA 0x4580 ;
Basic block id 284 - num instructions 2
 Instr 1076 @ 0x4340 (17216) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1077 @ 0x4350 (17232) - @!P0 BRA 0x43b0 ;
Basic block id 285 - num instructions 2
 Instr 1078 @ 0x4360 (17248) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1079 @ 0x4370 (17264) - @P0 BRA 0x4830 ;
Basic block id 286 - num instructions 3
 Instr 1080 @ 0x4380 (17280) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1081 @ 0x4390 (17296) - I2F.U16 R24, R4 ;
 Instr 1082 @ 0x43a0 (17312) - BRA 0x49c0 ;
Basic block id 287 - num instructions 4
 Instr 1083 @ 0x43b0 (17328) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1084 @ 0x43c0 (17344) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1085 @ 0x43d0 (17360) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1086 @ 0x43e0 (17376) - @!P0 BRA 0x49c0 ;
Basic block id 288 - num instructions 3
 Instr 1087 @ 0x43f0 (17392) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1088 @ 0x4400 (17408) - @!P0 IMAD.MOV.U32 R24, RZ, RZ, 0x7f800001 ;
 Instr 1089 @ 0x4410 (17424) - @!P0 BRA 0x49c0 ;
Basic block id 289 - num instructions 11
 Instr 1090 @ 0x4420 (17440) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
 Instr 1091 @ 0x4430 (17456) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1092 @ 0x4440 (17472) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 1093 @ 0x4450 (17488) - BSSY B0, 0x4540 ;
 Instr 1094 @ 0x4460 (17504) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1095 @ 0x4470 (17520) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1096 @ 0x4480 (17536) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1097 @ 0x4490 (17552) - IMAD.U32 R24, R3, -0x80000000, RZ ;
 Instr 1098 @ 0x44a0 (17568) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1099 @ 0x44b0 (17584) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1100 @ 0x44c0 (17600) - @P0 BRA 0x4530 ;
Basic block id 290 - num instructions 6
 Instr 1101 @ 0x44d0 (17616) - FLO.U32 R4, R3 ;
 Instr 1102 @ 0x44e0 (17632) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1103 @ 0x44f0 (17648) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 1104 @ 0x4500 (17664) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 1105 @ 0x4510 (17680) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1106 @ 0x4520 (17696) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 291 - num instructions 5
 Instr 1107 @ 0x4530 (17712) - BSYNC B0 ;
 Instr 1108 @ 0x4540 (17728) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 1109 @ 0x4550 (17744) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 1110 @ 0x4560 (17760) - LOP3.LUT R24, R5, R3, R24, 0xfe, !PT ;
 Instr 1111 @ 0x4570 (17776) - BRA 0x49c0 ;
Basic block id 292 - num instructions 4
 Instr 1112 @ 0x4580 (17792) - LDG.E.U8.SYS R3, [R4] ;
 Instr 1113 @ 0x4590 (17808) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1114 @ 0x45a0 (17824) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 1115 @ 0x45b0 (17840) - @!P0 BRA 0x49c0 ;
Basic block id 293 - num instructions 3
 Instr 1116 @ 0x45c0 (17856) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 1117 @ 0x45d0 (17872) - @!P0 IMAD.MOV.U32 R24, RZ, RZ, 0x7f800001 ;
 Instr 1118 @ 0x45e0 (17888) - @!P0 BRA 0x49c0 ;
Basic block id 294 - num instructions 11
 Instr 1119 @ 0x45f0 (17904) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
 Instr 1120 @ 0x4600 (17920) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1121 @ 0x4610 (17936) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 1122 @ 0x4620 (17952) - BSSY B0, 0x4710 ;
 Instr 1123 @ 0x4630 (17968) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1124 @ 0x4640 (17984) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 1125 @ 0x4650 (18000) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1126 @ 0x4660 (18016) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 1127 @ 0x4670 (18032) - IMAD.U32 R24, R4, -0x80000000, RZ ;
 Instr 1128 @ 0x4680 (18048) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1129 @ 0x4690 (18064) - @P0 BRA 0x4700 ;
Basic block id 295 - num instructions 6
 Instr 1130 @ 0x46a0 (18080) - FLO.U32 R4, R3 ;
 Instr 1131 @ 0x46b0 (18096) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1132 @ 0x46c0 (18112) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 1133 @ 0x46d0 (18128) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 1134 @ 0x46e0 (18144) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1135 @ 0x46f0 (18160) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 296 - num instructions 5
 Instr 1136 @ 0x4700 (18176) - BSYNC B0 ;
 Instr 1137 @ 0x4710 (18192) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 1138 @ 0x4720 (18208) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1139 @ 0x4730 (18224) - LOP3.LUT R24, R0, R3, R24, 0xfe, !PT ;
 Instr 1140 @ 0x4740 (18240) - BRA 0x49c0 ;
Basic block id 297 - num instructions 2
 Instr 1141 @ 0x4750 (18256) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1142 @ 0x4760 (18272) - @!P0 BRA 0x49a0 ;
Basic block id 298 - num instructions 2
 Instr 1143 @ 0x4770 (18288) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1144 @ 0x4780 (18304) - @!P0 BRA 0x4970 ;
Basic block id 299 - num instructions 2
 Instr 1145 @ 0x4790 (18320) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1146 @ 0x47a0 (18336) - @P0 BRA 0x4830 ;
Basic block id 300 - num instructions 4
 Instr 1147 @ 0x47b0 (18352) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1148 @ 0x47c0 (18368) - IMAD.MOV.U32 R24, RZ, RZ, 0x400000 ;
 Instr 1149 @ 0x47d0 (18384) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1150 @ 0x47e0 (18400) - @!P0 BRA 0x49c0 ;
Basic block id 301 - num instructions 4
 Instr 1151 @ 0x47f0 (18416) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1152 @ 0x4800 (18432) - @!P0 IMAD.MOV.U32 R24, RZ, RZ, 0x7f800001 ;
 Instr 1153 @ 0x4810 (18448) - @P0 IMAD.SHL.U32 R24, R4, 0x800000, RZ ;
 Instr 1154 @ 0x4820 (18464) - BRA 0x49c0 ;
Basic block id 302 - num instructions 18
 Instr 1155 @ 0x4830 (18480) - UMOV UR4, 0xd33a2700 ;
 Instr 1156 @ 0x4840 (18496) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1157 @ 0x4850 (18512) - UMOV UR5, 0x7f88 ;
 Instr 1158 @ 0x4860 (18528) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1159 @ 0x4870 (18544) - UMOV UR6, 0xd33a2100 ;
 Instr 1160 @ 0x4880 (18560) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1161 @ 0x4890 (18576) - UMOV UR7, 0x7f88 ;
 Instr 1162 @ 0x48a0 (18592) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1163 @ 0x48b0 (18608) - UMOV UR8, 0xd33a0b00 ;
 Instr 1164 @ 0x48c0 (18624) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1165 @ 0x48d0 (18640) - UMOV UR9, 0x7f88 ;
 Instr 1166 @ 0x48e0 (18656) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1167 @ 0x48f0 (18672) - MOV R20, 0xd7fa5e50 ;
 Instr 1168 @ 0x4900 (18688) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1169 @ 0x4910 (18704) - MOV R21, 0x7f88 ;
 Instr 1170 @ 0x4920 (18720) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1171 @ 0x4930 (18736) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1172 @ 0x4940 (18752) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 303 - num instructions 2
 Instr 1173 @ 0x4950 (18768) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1174 @ 0x4960 (18784) - BRA 0x49c0 ;
Basic block id 304 - num instructions 3
 Instr 1175 @ 0x4970 (18800) - LDG.E.64.SYS R4, [R4] ;
 Instr 1176 @ 0x4980 (18816) - I2F.U64 R24, R4 ;
 Instr 1177 @ 0x4990 (18832) - BRA 0x49c0 ;
Basic block id 305 - num instructions 2
 Instr 1178 @ 0x49a0 (18848) - LDG.E.SYS R4, [R4] ;
 Instr 1179 @ 0x49b0 (18864) - I2F.U32 R24, R4 ;
Basic block id 306 - num instructions 4
 Instr 1180 @ 0x49c0 (18880) - BSYNC B6 ;
 Instr 1181 @ 0x49d0 (18896) - IADD3 R0, R36, 0x280, RZ ;
 Instr 1182 @ 0x49e0 (18912) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 1183 @ 0x49f0 (18928) - @P0 BRA 0x7520 ;
Basic block id 307 - num instructions 8
 Instr 1184 @ 0x4a00 (18944) - IMAD R0, R17, 0x400, R0 ;
 Instr 1185 @ 0x4a10 (18960) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 1186 @ 0x4a20 (18976) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1187 @ 0x4a30 (18992) - BSSY B6, 0x5860 ;
 Instr 1188 @ 0x4a40 (19008) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 1189 @ 0x4a50 (19024) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 1190 @ 0x4a60 (19040) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 1191 @ 0x4a70 (19056) - @P1 BRA 0x4df0 ;
Basic block id 308 - num instructions 3
 Instr 1192 @ 0x4a80 (19072) - PRMT R0, R19, 0x9910, RZ ;
 Instr 1193 @ 0x4a90 (19088) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 1194 @ 0x4aa0 (19104) - @P0 BRA 0x4c60 ;
Basic block id 309 - num instructions 2
 Instr 1195 @ 0x4ab0 (19120) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 1196 @ 0x4ac0 (19136) - @P0 BRA 0x4b70 ;
Basic block id 310 - num instructions 2
 Instr 1197 @ 0x4ad0 (19152) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 1198 @ 0x4ae0 (19168) - @!P0 BRA 0x4b40 ;
Basic block id 311 - num instructions 2
 Instr 1199 @ 0x4af0 (19184) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 1200 @ 0x4b00 (19200) - @P0 BRA 0x56c0 ;
Basic block id 312 - num instructions 3
 Instr 1201 @ 0x4b10 (19216) - LDG.E.S8.SYS R4, [R4] ;
 Instr 1202 @ 0x4b20 (19232) - I2F.S16 R26, R4 ;
 Instr 1203 @ 0x4b30 (19248) - BRA 0x5850 ;
Basic block id 313 - num instructions 3
 Instr 1204 @ 0x4b40 (19264) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1205 @ 0x4b50 (19280) - I2F.U16 R26, R4 ;
 Instr 1206 @ 0x4b60 (19296) - BRA 0x5850 ;
Basic block id 314 - num instructions 2
 Instr 1207 @ 0x4b70 (19312) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1208 @ 0x4b80 (19328) - @!P0 BRA 0x4c30 ;
Basic block id 315 - num instructions 2
 Instr 1209 @ 0x4b90 (19344) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1210 @ 0x4ba0 (19360) - @!P0 BRA 0x4c00 ;
Basic block id 316 - num instructions 2
 Instr 1211 @ 0x4bb0 (19376) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1212 @ 0x4bc0 (19392) - @P0 BRA 0x56c0 ;
Basic block id 317 - num instructions 3
 Instr 1213 @ 0x4bd0 (19408) - LDG.E.64.SYS R4, [R4] ;
 Instr 1214 @ 0x4be0 (19424) - I2F.S64 R26, R4 ;
 Instr 1215 @ 0x4bf0 (19440) - BRA 0x5850 ;
Basic block id 318 - num instructions 3
 Instr 1216 @ 0x4c00 (19456) - LDG.E.SYS R4, [R4] ;
 Instr 1217 @ 0x4c10 (19472) - I2F R26, R4 ;
 Instr 1218 @ 0x4c20 (19488) - BRA 0x5850 ;
Basic block id 319 - num instructions 3
 Instr 1219 @ 0x4c30 (19504) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1220 @ 0x4c40 (19520) - I2F.S16 R26, R4 ;
 Instr 1221 @ 0x4c50 (19536) - BRA 0x5850 ;
Basic block id 320 - num instructions 2
 Instr 1222 @ 0x4c60 (19552) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 1223 @ 0x4c70 (19568) - @P0 BRA 0x4d10 ;
Basic block id 321 - num instructions 2
 Instr 1224 @ 0x4c80 (19584) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1225 @ 0x4c90 (19600) - @!P0 BRA 0x4ce0 ;
Basic block id 322 - num instructions 2
 Instr 1226 @ 0x4ca0 (19616) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1227 @ 0x4cb0 (19632) - @P0 BRA 0x56c0 ;
Basic block id 323 - num instructions 2
 Instr 1228 @ 0x4cc0 (19648) - LDG.E.SYS R26, [R4] ;
 Instr 1229 @ 0x4cd0 (19664) - BRA 0x5850 ;
Basic block id 324 - num instructions 3
 Instr 1230 @ 0x4ce0 (19680) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1231 @ 0x4cf0 (19696) - HADD2.F32 R26, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1232 @ 0x4d00 (19712) - BRA 0x5850 ;
Basic block id 325 - num instructions 2
 Instr 1233 @ 0x4d10 (19728) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1234 @ 0x4d20 (19744) - @!P0 BRA 0x4dc0 ;
Basic block id 326 - num instructions 2
 Instr 1235 @ 0x4d30 (19760) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1236 @ 0x4d40 (19776) - @!P0 BRA 0x4d90 ;
Basic block id 327 - num instructions 2
 Instr 1237 @ 0x4d50 (19792) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1238 @ 0x4d60 (19808) - @P0 BRA 0x56c0 ;
Basic block id 328 - num instructions 2
 Instr 1239 @ 0x4d70 (19824) - LDG.E.SYS R26, [R4] ;
 Instr 1240 @ 0x4d80 (19840) - BRA 0x5850 ;
Basic block id 329 - num instructions 3
 Instr 1241 @ 0x4d90 (19856) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1242 @ 0x4da0 (19872) - HADD2.F32 R26, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1243 @ 0x4db0 (19888) - BRA 0x5850 ;
Basic block id 330 - num instructions 3
 Instr 1244 @ 0x4dc0 (19904) - LDG.E.64.SYS R4, [R4] ;
 Instr 1245 @ 0x4dd0 (19920) - F2F.F32.F64 R26, R4 ;
 Instr 1246 @ 0x4de0 (19936) - BRA 0x5850 ;
Basic block id 331 - num instructions 3
 Instr 1247 @ 0x4df0 (19952) - PRMT R0, R19, 0x9910, RZ ;
 Instr 1248 @ 0x4e00 (19968) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1249 @ 0x4e10 (19984) - @P0 BRA 0x5190 ;
Basic block id 332 - num instructions 2
 Instr 1250 @ 0x4e20 (20000) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1251 @ 0x4e30 (20016) - @P0 BRA 0x4ef0 ;
Basic block id 333 - num instructions 2
 Instr 1252 @ 0x4e40 (20032) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1253 @ 0x4e50 (20048) - @!P0 BRA 0x4ec0 ;
Basic block id 334 - num instructions 2
 Instr 1254 @ 0x4e60 (20064) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1255 @ 0x4e70 (20080) - @P0 BRA 0x56c0 ;
Basic block id 335 - num instructions 4
 Instr 1256 @ 0x4e80 (20096) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1257 @ 0x4e90 (20112) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1258 @ 0x4ea0 (20128) - SEL R26, RZ, 0x3f800000, !P0 ;
 Instr 1259 @ 0x4eb0 (20144) - BRA 0x5850 ;
Basic block id 336 - num instructions 3
 Instr 1260 @ 0x4ec0 (20160) - LDG.E.64.SYS R4, [R4] ;
 Instr 1261 @ 0x4ed0 (20176) - F2F.F32.F64 R26, R4 ;
 Instr 1262 @ 0x4ee0 (20192) - BRA 0x5850 ;
Basic block id 337 - num instructions 2
 Instr 1263 @ 0x4ef0 (20208) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1264 @ 0x4f00 (20224) - @!P0 BRA 0x5160 ;
Basic block id 338 - num instructions 2
 Instr 1265 @ 0x4f10 (20240) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1266 @ 0x4f20 (20256) - @!P0 BRA 0x5090 ;
Basic block id 339 - num instructions 2
 Instr 1267 @ 0x4f30 (20272) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1268 @ 0x4f40 (20288) - @P0 BRA 0x56c0 ;
Basic block id 340 - num instructions 20
 Instr 1269 @ 0x4f50 (20304) - LDG.E.U8.SYS R26, [R4] ;
 Instr 1270 @ 0x4f60 (20320) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 1271 @ 0x4f70 (20336) - IMAD.SHL.U32 R26, R26, 0x1000000, RZ ;
 Instr 1272 @ 0x4f80 (20352) - LOP3.LUT R0, R26, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1273 @ 0x4f90 (20368) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 1274 @ 0x4fa0 (20384) - FLO.U32 R3, R0 ;
 Instr 1275 @ 0x4fb0 (20400) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 1276 @ 0x4fc0 (20416) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 1277 @ 0x4fd0 (20432) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 1278 @ 0x4fe0 (20448) - IADD3 R3, R3, -0x4, RZ ;
 Instr 1279 @ 0x4ff0 (20464) - SEL R3, R3, RZ, P0 ;
 Instr 1280 @ 0x5000 (20480) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 1281 @ 0x5010 (20496) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 1282 @ 0x5020 (20512) - IADD3 R3, R0, -0x1, RZ ;
 Instr 1283 @ 0x5030 (20528) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 1284 @ 0x5040 (20544) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 1285 @ 0x5050 (20560) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 1286 @ 0x5060 (20576) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 1287 @ 0x5070 (20592) - LOP3.LUT R26, R3, 0x80000000, R26, 0xf8, !PT ;
 Instr 1288 @ 0x5080 (20608) - BRA 0x5850 ;
Basic block id 341 - num instructions 13
 Instr 1289 @ 0x5090 (20624) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1290 @ 0x50a0 (20640) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 1291 @ 0x50b0 (20656) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1292 @ 0x50c0 (20672) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 1293 @ 0x50d0 (20688) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1294 @ 0x50e0 (20704) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1295 @ 0x50f0 (20720) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1296 @ 0x5100 (20736) - @P0 FMUL R26, R3, 1.9259299443872358531e-34 ;
 Instr 1297 @ 0x5110 (20752) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1298 @ 0x5120 (20768) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 1299 @ 0x5130 (20784) - @!P0 FADD R26, R0, -0.5 ;
 Instr 1300 @ 0x5140 (20800) - LOP3.LUT R26, R26, 0x80000000, R3, 0xf8, !PT ;
 Instr 1301 @ 0x5150 (20816) - BRA 0x5850 ;
Basic block id 342 - num instructions 3
 Instr 1302 @ 0x5160 (20832) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1303 @ 0x5170 (20848) - PRMT R26, RZ, 0x5410, R4 ;
 Instr 1304 @ 0x5180 (20864) - BRA 0x5850 ;
Basic block id 343 - num instructions 2
 Instr 1305 @ 0x5190 (20880) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1306 @ 0x51a0 (20896) - @P0 BRA 0x55e0 ;
Basic block id 344 - num instructions 2
 Instr 1307 @ 0x51b0 (20912) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1308 @ 0x51c0 (20928) - @!P0 BRA 0x5410 ;
Basic block id 345 - num instructions 2
 Instr 1309 @ 0x51d0 (20944) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1310 @ 0x51e0 (20960) - @!P0 BRA 0x5240 ;
Basic block id 346 - num instructions 2
 Instr 1311 @ 0x51f0 (20976) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1312 @ 0x5200 (20992) - @P0 BRA 0x56c0 ;
Basic block id 347 - num instructions 3
 Instr 1313 @ 0x5210 (21008) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1314 @ 0x5220 (21024) - I2F.U16 R26, R4 ;
 Instr 1315 @ 0x5230 (21040) - BRA 0x5850 ;
Basic block id 348 - num instructions 4
 Instr 1316 @ 0x5240 (21056) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1317 @ 0x5250 (21072) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1318 @ 0x5260 (21088) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1319 @ 0x5270 (21104) - @!P0 BRA 0x5850 ;
Basic block id 349 - num instructions 3
 Instr 1320 @ 0x5280 (21120) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1321 @ 0x5290 (21136) - @!P0 IMAD.MOV.U32 R26, RZ, RZ, 0x7f800001 ;
 Instr 1322 @ 0x52a0 (21152) - @!P0 BRA 0x5850 ;
Basic block id 350 - num instructions 11
 Instr 1323 @ 0x52b0 (21168) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
 Instr 1324 @ 0x52c0 (21184) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1325 @ 0x52d0 (21200) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 1326 @ 0x52e0 (21216) - BSSY B0, 0x53d0 ;
 Instr 1327 @ 0x52f0 (21232) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1328 @ 0x5300 (21248) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1329 @ 0x5310 (21264) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1330 @ 0x5320 (21280) - IMAD.U32 R26, R3, -0x80000000, RZ ;
 Instr 1331 @ 0x5330 (21296) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1332 @ 0x5340 (21312) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1333 @ 0x5350 (21328) - @P0 BRA 0x53c0 ;
Basic block id 351 - num instructions 6
 Instr 1334 @ 0x5360 (21344) - FLO.U32 R4, R3 ;
 Instr 1335 @ 0x5370 (21360) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1336 @ 0x5380 (21376) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 1337 @ 0x5390 (21392) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 1338 @ 0x53a0 (21408) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1339 @ 0x53b0 (21424) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 352 - num instructions 5
 Instr 1340 @ 0x53c0 (21440) - BSYNC B0 ;
 Instr 1341 @ 0x53d0 (21456) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 1342 @ 0x53e0 (21472) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 1343 @ 0x53f0 (21488) - LOP3.LUT R26, R5, R3, R26, 0xfe, !PT ;
 Instr 1344 @ 0x5400 (21504) - BRA 0x5850 ;
Basic block id 353 - num instructions 4
 Instr 1345 @ 0x5410 (21520) - LDG.E.U8.SYS R3, [R4] ;
 Instr 1346 @ 0x5420 (21536) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1347 @ 0x5430 (21552) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 1348 @ 0x5440 (21568) - @!P0 BRA 0x5850 ;
Basic block id 354 - num instructions 3
 Instr 1349 @ 0x5450 (21584) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 1350 @ 0x5460 (21600) - @!P0 IMAD.MOV.U32 R26, RZ, RZ, 0x7f800001 ;
 Instr 1351 @ 0x5470 (21616) - @!P0 BRA 0x5850 ;
Basic block id 355 - num instructions 11
 Instr 1352 @ 0x5480 (21632) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
 Instr 1353 @ 0x5490 (21648) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1354 @ 0x54a0 (21664) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 1355 @ 0x54b0 (21680) - BSSY B0, 0x55a0 ;
 Instr 1356 @ 0x54c0 (21696) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1357 @ 0x54d0 (21712) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 1358 @ 0x54e0 (21728) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1359 @ 0x54f0 (21744) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 1360 @ 0x5500 (21760) - IMAD.U32 R26, R4, -0x80000000, RZ ;
 Instr 1361 @ 0x5510 (21776) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1362 @ 0x5520 (21792) - @P0 BRA 0x5590 ;
Basic block id 356 - num instructions 6
 Instr 1363 @ 0x5530 (21808) - FLO.U32 R4, R3 ;
 Instr 1364 @ 0x5540 (21824) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1365 @ 0x5550 (21840) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 1366 @ 0x5560 (21856) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 1367 @ 0x5570 (21872) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1368 @ 0x5580 (21888) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 357 - num instructions 5
 Instr 1369 @ 0x5590 (21904) - BSYNC B0 ;
 Instr 1370 @ 0x55a0 (21920) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 1371 @ 0x55b0 (21936) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1372 @ 0x55c0 (21952) - LOP3.LUT R26, R0, R3, R26, 0xfe, !PT ;
 Instr 1373 @ 0x55d0 (21968) - BRA 0x5850 ;
Basic block id 358 - num instructions 2
 Instr 1374 @ 0x55e0 (21984) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1375 @ 0x55f0 (22000) - @!P0 BRA 0x5830 ;
Basic block id 359 - num instructions 2
 Instr 1376 @ 0x5600 (22016) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1377 @ 0x5610 (22032) - @!P0 BRA 0x5800 ;
Basic block id 360 - num instructions 2
 Instr 1378 @ 0x5620 (22048) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1379 @ 0x5630 (22064) - @P0 BRA 0x56c0 ;
Basic block id 361 - num instructions 4
 Instr 1380 @ 0x5640 (22080) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1381 @ 0x5650 (22096) - IMAD.MOV.U32 R26, RZ, RZ, 0x400000 ;
 Instr 1382 @ 0x5660 (22112) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1383 @ 0x5670 (22128) - @!P0 BRA 0x5850 ;
Basic block id 362 - num instructions 4
 Instr 1384 @ 0x5680 (22144) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1385 @ 0x5690 (22160) - @!P0 IMAD.MOV.U32 R26, RZ, RZ, 0x7f800001 ;
 Instr 1386 @ 0x56a0 (22176) - @P0 IMAD.SHL.U32 R26, R4, 0x800000, RZ ;
 Instr 1387 @ 0x56b0 (22192) - BRA 0x5850 ;
Basic block id 363 - num instructions 18
 Instr 1388 @ 0x56c0 (22208) - UMOV UR4, 0xd33a2700 ;
 Instr 1389 @ 0x56d0 (22224) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1390 @ 0x56e0 (22240) - UMOV UR5, 0x7f88 ;
 Instr 1391 @ 0x56f0 (22256) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1392 @ 0x5700 (22272) - UMOV UR6, 0xd33a2100 ;
 Instr 1393 @ 0x5710 (22288) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1394 @ 0x5720 (22304) - UMOV UR7, 0x7f88 ;
 Instr 1395 @ 0x5730 (22320) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1396 @ 0x5740 (22336) - UMOV UR8, 0xd33a0b00 ;
 Instr 1397 @ 0x5750 (22352) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1398 @ 0x5760 (22368) - UMOV UR9, 0x7f88 ;
 Instr 1399 @ 0x5770 (22384) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1400 @ 0x5780 (22400) - MOV R20, 0xd7fa6ce0 ;
 Instr 1401 @ 0x5790 (22416) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1402 @ 0x57a0 (22432) - MOV R21, 0x7f88 ;
 Instr 1403 @ 0x57b0 (22448) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1404 @ 0x57c0 (22464) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1405 @ 0x57d0 (22480) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 364 - num instructions 2
 Instr 1406 @ 0x57e0 (22496) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1407 @ 0x57f0 (22512) - BRA 0x5850 ;
Basic block id 365 - num instructions 3
 Instr 1408 @ 0x5800 (22528) - LDG.E.64.SYS R4, [R4] ;
 Instr 1409 @ 0x5810 (22544) - I2F.U64 R26, R4 ;
 Instr 1410 @ 0x5820 (22560) - BRA 0x5850 ;
Basic block id 366 - num instructions 2
 Instr 1411 @ 0x5830 (22576) - LDG.E.SYS R4, [R4] ;
 Instr 1412 @ 0x5840 (22592) - I2F.U32 R26, R4 ;
Basic block id 367 - num instructions 4
 Instr 1413 @ 0x5850 (22608) - BSYNC B6 ;
 Instr 1414 @ 0x5860 (22624) - IADD3 R0, R36, 0x300, RZ ;
 Instr 1415 @ 0x5870 (22640) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 1416 @ 0x5880 (22656) - @P0 BRA 0x7520 ;
Basic block id 368 - num instructions 8
 Instr 1417 @ 0x5890 (22672) - IMAD R0, R17, 0x400, R0 ;
 Instr 1418 @ 0x58a0 (22688) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 1419 @ 0x58b0 (22704) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1420 @ 0x58c0 (22720) - BSSY B6, 0x66f0 ;
 Instr 1421 @ 0x58d0 (22736) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 1422 @ 0x58e0 (22752) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 1423 @ 0x58f0 (22768) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 1424 @ 0x5900 (22784) - @P1 BRA 0x5c80 ;
Basic block id 369 - num instructions 3
 Instr 1425 @ 0x5910 (22800) - PRMT R0, R19, 0x9910, RZ ;
 Instr 1426 @ 0x5920 (22816) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 1427 @ 0x5930 (22832) - @P0 BRA 0x5af0 ;
Basic block id 370 - num instructions 2
 Instr 1428 @ 0x5940 (22848) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 1429 @ 0x5950 (22864) - @P0 BRA 0x5a00 ;
Basic block id 371 - num instructions 2
 Instr 1430 @ 0x5960 (22880) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 1431 @ 0x5970 (22896) - @!P0 BRA 0x59d0 ;
Basic block id 372 - num instructions 2
 Instr 1432 @ 0x5980 (22912) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 1433 @ 0x5990 (22928) - @P0 BRA 0x6550 ;
Basic block id 373 - num instructions 3
 Instr 1434 @ 0x59a0 (22944) - LDG.E.S8.SYS R4, [R4] ;
 Instr 1435 @ 0x59b0 (22960) - I2F.S16 R28, R4 ;
 Instr 1436 @ 0x59c0 (22976) - BRA 0x66e0 ;
Basic block id 374 - num instructions 3
 Instr 1437 @ 0x59d0 (22992) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1438 @ 0x59e0 (23008) - I2F.U16 R28, R4 ;
 Instr 1439 @ 0x59f0 (23024) - BRA 0x66e0 ;
Basic block id 375 - num instructions 2
 Instr 1440 @ 0x5a00 (23040) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1441 @ 0x5a10 (23056) - @!P0 BRA 0x5ac0 ;
Basic block id 376 - num instructions 2
 Instr 1442 @ 0x5a20 (23072) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1443 @ 0x5a30 (23088) - @!P0 BRA 0x5a90 ;
Basic block id 377 - num instructions 2
 Instr 1444 @ 0x5a40 (23104) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1445 @ 0x5a50 (23120) - @P0 BRA 0x6550 ;
Basic block id 378 - num instructions 3
 Instr 1446 @ 0x5a60 (23136) - LDG.E.64.SYS R4, [R4] ;
 Instr 1447 @ 0x5a70 (23152) - I2F.S64 R28, R4 ;
 Instr 1448 @ 0x5a80 (23168) - BRA 0x66e0 ;
Basic block id 379 - num instructions 3
 Instr 1449 @ 0x5a90 (23184) - LDG.E.SYS R4, [R4] ;
 Instr 1450 @ 0x5aa0 (23200) - I2F R28, R4 ;
 Instr 1451 @ 0x5ab0 (23216) - BRA 0x66e0 ;
Basic block id 380 - num instructions 3
 Instr 1452 @ 0x5ac0 (23232) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1453 @ 0x5ad0 (23248) - I2F.S16 R28, R4 ;
 Instr 1454 @ 0x5ae0 (23264) - BRA 0x66e0 ;
Basic block id 381 - num instructions 2
 Instr 1455 @ 0x5af0 (23280) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 1456 @ 0x5b00 (23296) - @P0 BRA 0x5ba0 ;
Basic block id 382 - num instructions 2
 Instr 1457 @ 0x5b10 (23312) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1458 @ 0x5b20 (23328) - @!P0 BRA 0x5b70 ;
Basic block id 383 - num instructions 2
 Instr 1459 @ 0x5b30 (23344) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1460 @ 0x5b40 (23360) - @P0 BRA 0x6550 ;
Basic block id 384 - num instructions 2
 Instr 1461 @ 0x5b50 (23376) - LDG.E.SYS R28, [R4] ;
 Instr 1462 @ 0x5b60 (23392) - BRA 0x66e0 ;
Basic block id 385 - num instructions 3
 Instr 1463 @ 0x5b70 (23408) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1464 @ 0x5b80 (23424) - HADD2.F32 R28, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1465 @ 0x5b90 (23440) - BRA 0x66e0 ;
Basic block id 386 - num instructions 2
 Instr 1466 @ 0x5ba0 (23456) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1467 @ 0x5bb0 (23472) - @!P0 BRA 0x5c50 ;
Basic block id 387 - num instructions 2
 Instr 1468 @ 0x5bc0 (23488) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1469 @ 0x5bd0 (23504) - @!P0 BRA 0x5c20 ;
Basic block id 388 - num instructions 2
 Instr 1470 @ 0x5be0 (23520) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1471 @ 0x5bf0 (23536) - @P0 BRA 0x6550 ;
Basic block id 389 - num instructions 2
 Instr 1472 @ 0x5c00 (23552) - LDG.E.SYS R28, [R4] ;
 Instr 1473 @ 0x5c10 (23568) - BRA 0x66e0 ;
Basic block id 390 - num instructions 3
 Instr 1474 @ 0x5c20 (23584) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1475 @ 0x5c30 (23600) - HADD2.F32 R28, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1476 @ 0x5c40 (23616) - BRA 0x66e0 ;
Basic block id 391 - num instructions 3
 Instr 1477 @ 0x5c50 (23632) - LDG.E.64.SYS R4, [R4] ;
 Instr 1478 @ 0x5c60 (23648) - F2F.F32.F64 R28, R4 ;
 Instr 1479 @ 0x5c70 (23664) - BRA 0x66e0 ;
Basic block id 392 - num instructions 3
 Instr 1480 @ 0x5c80 (23680) - PRMT R0, R19, 0x9910, RZ ;
 Instr 1481 @ 0x5c90 (23696) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1482 @ 0x5ca0 (23712) - @P0 BRA 0x6020 ;
Basic block id 393 - num instructions 2
 Instr 1483 @ 0x5cb0 (23728) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1484 @ 0x5cc0 (23744) - @P0 BRA 0x5d80 ;
Basic block id 394 - num instructions 2
 Instr 1485 @ 0x5cd0 (23760) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1486 @ 0x5ce0 (23776) - @!P0 BRA 0x5d50 ;
Basic block id 395 - num instructions 2
 Instr 1487 @ 0x5cf0 (23792) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1488 @ 0x5d00 (23808) - @P0 BRA 0x6550 ;
Basic block id 396 - num instructions 4
 Instr 1489 @ 0x5d10 (23824) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1490 @ 0x5d20 (23840) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1491 @ 0x5d30 (23856) - SEL R28, RZ, 0x3f800000, !P0 ;
 Instr 1492 @ 0x5d40 (23872) - BRA 0x66e0 ;
Basic block id 397 - num instructions 3
 Instr 1493 @ 0x5d50 (23888) - LDG.E.64.SYS R4, [R4] ;
 Instr 1494 @ 0x5d60 (23904) - F2F.F32.F64 R28, R4 ;
 Instr 1495 @ 0x5d70 (23920) - BRA 0x66e0 ;
Basic block id 398 - num instructions 2
 Instr 1496 @ 0x5d80 (23936) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1497 @ 0x5d90 (23952) - @!P0 BRA 0x5ff0 ;
Basic block id 399 - num instructions 2
 Instr 1498 @ 0x5da0 (23968) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1499 @ 0x5db0 (23984) - @!P0 BRA 0x5f20 ;
Basic block id 400 - num instructions 2
 Instr 1500 @ 0x5dc0 (24000) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1501 @ 0x5dd0 (24016) - @P0 BRA 0x6550 ;
Basic block id 401 - num instructions 20
 Instr 1502 @ 0x5de0 (24032) - LDG.E.U8.SYS R28, [R4] ;
 Instr 1503 @ 0x5df0 (24048) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 1504 @ 0x5e00 (24064) - IMAD.SHL.U32 R28, R28, 0x1000000, RZ ;
 Instr 1505 @ 0x5e10 (24080) - LOP3.LUT R0, R28, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1506 @ 0x5e20 (24096) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 1507 @ 0x5e30 (24112) - FLO.U32 R3, R0 ;
 Instr 1508 @ 0x5e40 (24128) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 1509 @ 0x5e50 (24144) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 1510 @ 0x5e60 (24160) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 1511 @ 0x5e70 (24176) - IADD3 R3, R3, -0x4, RZ ;
 Instr 1512 @ 0x5e80 (24192) - SEL R3, R3, RZ, P0 ;
 Instr 1513 @ 0x5e90 (24208) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 1514 @ 0x5ea0 (24224) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 1515 @ 0x5eb0 (24240) - IADD3 R3, R0, -0x1, RZ ;
 Instr 1516 @ 0x5ec0 (24256) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 1517 @ 0x5ed0 (24272) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 1518 @ 0x5ee0 (24288) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 1519 @ 0x5ef0 (24304) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 1520 @ 0x5f00 (24320) - LOP3.LUT R28, R3, 0x80000000, R28, 0xf8, !PT ;
 Instr 1521 @ 0x5f10 (24336) - BRA 0x66e0 ;
Basic block id 402 - num instructions 13
 Instr 1522 @ 0x5f20 (24352) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1523 @ 0x5f30 (24368) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 1524 @ 0x5f40 (24384) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1525 @ 0x5f50 (24400) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 1526 @ 0x5f60 (24416) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1527 @ 0x5f70 (24432) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1528 @ 0x5f80 (24448) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1529 @ 0x5f90 (24464) - @P0 FMUL R28, R3, 1.9259299443872358531e-34 ;
 Instr 1530 @ 0x5fa0 (24480) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1531 @ 0x5fb0 (24496) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 1532 @ 0x5fc0 (24512) - @!P0 FADD R28, R0, -0.5 ;
 Instr 1533 @ 0x5fd0 (24528) - LOP3.LUT R28, R28, 0x80000000, R3, 0xf8, !PT ;
 Instr 1534 @ 0x5fe0 (24544) - BRA 0x66e0 ;
Basic block id 403 - num instructions 3
 Instr 1535 @ 0x5ff0 (24560) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1536 @ 0x6000 (24576) - PRMT R28, RZ, 0x5410, R4 ;
 Instr 1537 @ 0x6010 (24592) - BRA 0x66e0 ;
Basic block id 404 - num instructions 2
 Instr 1538 @ 0x6020 (24608) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1539 @ 0x6030 (24624) - @P0 BRA 0x6470 ;
Basic block id 405 - num instructions 2
 Instr 1540 @ 0x6040 (24640) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1541 @ 0x6050 (24656) - @!P0 BRA 0x62a0 ;
Basic block id 406 - num instructions 2
 Instr 1542 @ 0x6060 (24672) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1543 @ 0x6070 (24688) - @!P0 BRA 0x60d0 ;
Basic block id 407 - num instructions 2
 Instr 1544 @ 0x6080 (24704) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1545 @ 0x6090 (24720) - @P0 BRA 0x6550 ;
Basic block id 408 - num instructions 3
 Instr 1546 @ 0x60a0 (24736) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1547 @ 0x60b0 (24752) - I2F.U16 R28, R4 ;
 Instr 1548 @ 0x60c0 (24768) - BRA 0x66e0 ;
Basic block id 409 - num instructions 4
 Instr 1549 @ 0x60d0 (24784) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1550 @ 0x60e0 (24800) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1551 @ 0x60f0 (24816) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1552 @ 0x6100 (24832) - @!P0 BRA 0x66e0 ;
Basic block id 410 - num instructions 3
 Instr 1553 @ 0x6110 (24848) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1554 @ 0x6120 (24864) - @!P0 IMAD.MOV.U32 R28, RZ, RZ, 0x7f800001 ;
 Instr 1555 @ 0x6130 (24880) - @!P0 BRA 0x66e0 ;
Basic block id 411 - num instructions 11
 Instr 1556 @ 0x6140 (24896) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
 Instr 1557 @ 0x6150 (24912) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1558 @ 0x6160 (24928) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 1559 @ 0x6170 (24944) - BSSY B0, 0x6260 ;
 Instr 1560 @ 0x6180 (24960) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1561 @ 0x6190 (24976) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1562 @ 0x61a0 (24992) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1563 @ 0x61b0 (25008) - IMAD.U32 R28, R3, -0x80000000, RZ ;
 Instr 1564 @ 0x61c0 (25024) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1565 @ 0x61d0 (25040) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1566 @ 0x61e0 (25056) - @P0 BRA 0x6250 ;
Basic block id 412 - num instructions 6
 Instr 1567 @ 0x61f0 (25072) - FLO.U32 R4, R3 ;
 Instr 1568 @ 0x6200 (25088) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1569 @ 0x6210 (25104) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 1570 @ 0x6220 (25120) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 1571 @ 0x6230 (25136) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1572 @ 0x6240 (25152) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 413 - num instructions 5
 Instr 1573 @ 0x6250 (25168) - BSYNC B0 ;
 Instr 1574 @ 0x6260 (25184) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 1575 @ 0x6270 (25200) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 1576 @ 0x6280 (25216) - LOP3.LUT R28, R5, R3, R28, 0xfe, !PT ;
 Instr 1577 @ 0x6290 (25232) - BRA 0x66e0 ;
Basic block id 414 - num instructions 4
 Instr 1578 @ 0x62a0 (25248) - LDG.E.U8.SYS R3, [R4] ;
 Instr 1579 @ 0x62b0 (25264) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1580 @ 0x62c0 (25280) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 1581 @ 0x62d0 (25296) - @!P0 BRA 0x66e0 ;
Basic block id 415 - num instructions 3
 Instr 1582 @ 0x62e0 (25312) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 1583 @ 0x62f0 (25328) - @!P0 IMAD.MOV.U32 R28, RZ, RZ, 0x7f800001 ;
 Instr 1584 @ 0x6300 (25344) - @!P0 BRA 0x66e0 ;
Basic block id 416 - num instructions 11
 Instr 1585 @ 0x6310 (25360) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
 Instr 1586 @ 0x6320 (25376) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1587 @ 0x6330 (25392) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 1588 @ 0x6340 (25408) - BSSY B0, 0x6430 ;
 Instr 1589 @ 0x6350 (25424) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1590 @ 0x6360 (25440) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 1591 @ 0x6370 (25456) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1592 @ 0x6380 (25472) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 1593 @ 0x6390 (25488) - IMAD.U32 R28, R4, -0x80000000, RZ ;
 Instr 1594 @ 0x63a0 (25504) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1595 @ 0x63b0 (25520) - @P0 BRA 0x6420 ;
Basic block id 417 - num instructions 6
 Instr 1596 @ 0x63c0 (25536) - FLO.U32 R4, R3 ;
 Instr 1597 @ 0x63d0 (25552) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1598 @ 0x63e0 (25568) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 1599 @ 0x63f0 (25584) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 1600 @ 0x6400 (25600) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1601 @ 0x6410 (25616) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 418 - num instructions 5
 Instr 1602 @ 0x6420 (25632) - BSYNC B0 ;
 Instr 1603 @ 0x6430 (25648) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 1604 @ 0x6440 (25664) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1605 @ 0x6450 (25680) - LOP3.LUT R28, R0, R3, R28, 0xfe, !PT ;
 Instr 1606 @ 0x6460 (25696) - BRA 0x66e0 ;
Basic block id 419 - num instructions 2
 Instr 1607 @ 0x6470 (25712) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1608 @ 0x6480 (25728) - @!P0 BRA 0x66c0 ;
Basic block id 420 - num instructions 2
 Instr 1609 @ 0x6490 (25744) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1610 @ 0x64a0 (25760) - @!P0 BRA 0x6690 ;
Basic block id 421 - num instructions 2
 Instr 1611 @ 0x64b0 (25776) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1612 @ 0x64c0 (25792) - @P0 BRA 0x6550 ;
Basic block id 422 - num instructions 4
 Instr 1613 @ 0x64d0 (25808) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1614 @ 0x64e0 (25824) - IMAD.MOV.U32 R28, RZ, RZ, 0x400000 ;
 Instr 1615 @ 0x64f0 (25840) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1616 @ 0x6500 (25856) - @!P0 BRA 0x66e0 ;
Basic block id 423 - num instructions 4
 Instr 1617 @ 0x6510 (25872) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1618 @ 0x6520 (25888) - @!P0 IMAD.MOV.U32 R28, RZ, RZ, 0x7f800001 ;
 Instr 1619 @ 0x6530 (25904) - @P0 IMAD.SHL.U32 R28, R4, 0x800000, RZ ;
 Instr 1620 @ 0x6540 (25920) - BRA 0x66e0 ;
Basic block id 424 - num instructions 18
 Instr 1621 @ 0x6550 (25936) - UMOV UR4, 0xd33a2700 ;
 Instr 1622 @ 0x6560 (25952) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1623 @ 0x6570 (25968) - UMOV UR5, 0x7f88 ;
 Instr 1624 @ 0x6580 (25984) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1625 @ 0x6590 (26000) - UMOV UR6, 0xd33a2100 ;
 Instr 1626 @ 0x65a0 (26016) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1627 @ 0x65b0 (26032) - UMOV UR7, 0x7f88 ;
 Instr 1628 @ 0x65c0 (26048) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1629 @ 0x65d0 (26064) - UMOV UR8, 0xd33a0b00 ;
 Instr 1630 @ 0x65e0 (26080) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1631 @ 0x65f0 (26096) - UMOV UR9, 0x7f88 ;
 Instr 1632 @ 0x6600 (26112) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1633 @ 0x6610 (26128) - MOV R20, 0xd7fa7b70 ;
 Instr 1634 @ 0x6620 (26144) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1635 @ 0x6630 (26160) - MOV R21, 0x7f88 ;
 Instr 1636 @ 0x6640 (26176) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1637 @ 0x6650 (26192) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1638 @ 0x6660 (26208) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 425 - num instructions 2
 Instr 1639 @ 0x6670 (26224) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1640 @ 0x6680 (26240) - BRA 0x66e0 ;
Basic block id 426 - num instructions 3
 Instr 1641 @ 0x6690 (26256) - LDG.E.64.SYS R4, [R4] ;
 Instr 1642 @ 0x66a0 (26272) - I2F.U64 R28, R4 ;
 Instr 1643 @ 0x66b0 (26288) - BRA 0x66e0 ;
Basic block id 427 - num instructions 2
 Instr 1644 @ 0x66c0 (26304) - LDG.E.SYS R4, [R4] ;
 Instr 1645 @ 0x66d0 (26320) - I2F.U32 R28, R4 ;
Basic block id 428 - num instructions 4
 Instr 1646 @ 0x66e0 (26336) - BSYNC B6 ;
 Instr 1647 @ 0x66f0 (26352) - IADD3 R0, R36, 0x380, RZ ;
 Instr 1648 @ 0x6700 (26368) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 1649 @ 0x6710 (26384) - @P0 BRA 0x7520 ;
Basic block id 429 - num instructions 6
 Instr 1650 @ 0x6720 (26400) - IMAD R0, R17, 0x400, R0 ;
 Instr 1651 @ 0x6730 (26416) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 1652 @ 0x6740 (26432) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 1653 @ 0x6750 (26448) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 1654 @ 0x6760 (26464) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 1655 @ 0x6770 (26480) - @P1 BRA 0x6af0 ;
Basic block id 430 - num instructions 3
 Instr 1656 @ 0x6780 (26496) - PRMT R0, R19, 0x9910, RZ ;
 Instr 1657 @ 0x6790 (26512) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 1658 @ 0x67a0 (26528) - @P0 BRA 0x6960 ;
Basic block id 431 - num instructions 2
 Instr 1659 @ 0x67b0 (26544) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 1660 @ 0x67c0 (26560) - @P0 BRA 0x6870 ;
Basic block id 432 - num instructions 2
 Instr 1661 @ 0x67d0 (26576) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 1662 @ 0x67e0 (26592) - @!P0 BRA 0x6840 ;
Basic block id 433 - num instructions 2
 Instr 1663 @ 0x67f0 (26608) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 1664 @ 0x6800 (26624) - @P0 BRA 0x73a0 ;
Basic block id 434 - num instructions 3
 Instr 1665 @ 0x6810 (26640) - LDG.E.S8.SYS R4, [R4] ;
 Instr 1666 @ 0x6820 (26656) - I2F.S16 R30, R4 ;
 Instr 1667 @ 0x6830 (26672) - BRA 0x7520 ;
Basic block id 435 - num instructions 3
 Instr 1668 @ 0x6840 (26688) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1669 @ 0x6850 (26704) - I2F.U16 R30, R4 ;
 Instr 1670 @ 0x6860 (26720) - BRA 0x7520 ;
Basic block id 436 - num instructions 2
 Instr 1671 @ 0x6870 (26736) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1672 @ 0x6880 (26752) - @!P0 BRA 0x6930 ;
Basic block id 437 - num instructions 2
 Instr 1673 @ 0x6890 (26768) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1674 @ 0x68a0 (26784) - @!P0 BRA 0x6900 ;
Basic block id 438 - num instructions 2
 Instr 1675 @ 0x68b0 (26800) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1676 @ 0x68c0 (26816) - @P0 BRA 0x73a0 ;
Basic block id 439 - num instructions 3
 Instr 1677 @ 0x68d0 (26832) - LDG.E.64.SYS R4, [R4] ;
 Instr 1678 @ 0x68e0 (26848) - I2F.S64 R30, R4 ;
 Instr 1679 @ 0x68f0 (26864) - BRA 0x7520 ;
Basic block id 440 - num instructions 3
 Instr 1680 @ 0x6900 (26880) - LDG.E.SYS R4, [R4] ;
 Instr 1681 @ 0x6910 (26896) - I2F R30, R4 ;
 Instr 1682 @ 0x6920 (26912) - BRA 0x7520 ;
Basic block id 441 - num instructions 3
 Instr 1683 @ 0x6930 (26928) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1684 @ 0x6940 (26944) - I2F.S16 R30, R4 ;
 Instr 1685 @ 0x6950 (26960) - BRA 0x7520 ;
Basic block id 442 - num instructions 2
 Instr 1686 @ 0x6960 (26976) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 1687 @ 0x6970 (26992) - @P0 BRA 0x6a10 ;
Basic block id 443 - num instructions 2
 Instr 1688 @ 0x6980 (27008) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1689 @ 0x6990 (27024) - @!P0 BRA 0x69e0 ;
Basic block id 444 - num instructions 2
 Instr 1690 @ 0x69a0 (27040) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1691 @ 0x69b0 (27056) - @P0 BRA 0x73a0 ;
Basic block id 445 - num instructions 2
 Instr 1692 @ 0x69c0 (27072) - LDG.E.SYS R30, [R4] ;
 Instr 1693 @ 0x69d0 (27088) - BRA 0x7520 ;
Basic block id 446 - num instructions 3
 Instr 1694 @ 0x69e0 (27104) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1695 @ 0x69f0 (27120) - HADD2.F32 R30, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1696 @ 0x6a00 (27136) - BRA 0x7520 ;
Basic block id 447 - num instructions 2
 Instr 1697 @ 0x6a10 (27152) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1698 @ 0x6a20 (27168) - @!P0 BRA 0x6ac0 ;
Basic block id 448 - num instructions 2
 Instr 1699 @ 0x6a30 (27184) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1700 @ 0x6a40 (27200) - @!P0 BRA 0x6a90 ;
Basic block id 449 - num instructions 2
 Instr 1701 @ 0x6a50 (27216) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1702 @ 0x6a60 (27232) - @P0 BRA 0x73a0 ;
Basic block id 450 - num instructions 2
 Instr 1703 @ 0x6a70 (27248) - LDG.E.SYS R30, [R4] ;
 Instr 1704 @ 0x6a80 (27264) - BRA 0x7520 ;
Basic block id 451 - num instructions 3
 Instr 1705 @ 0x6a90 (27280) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1706 @ 0x6aa0 (27296) - HADD2.F32 R30, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1707 @ 0x6ab0 (27312) - BRA 0x7520 ;
Basic block id 452 - num instructions 3
 Instr 1708 @ 0x6ac0 (27328) - LDG.E.64.SYS R4, [R4] ;
 Instr 1709 @ 0x6ad0 (27344) - F2F.F32.F64 R30, R4 ;
 Instr 1710 @ 0x6ae0 (27360) - BRA 0x7520 ;
Basic block id 453 - num instructions 3
 Instr 1711 @ 0x6af0 (27376) - PRMT R0, R19, 0x9910, RZ ;
 Instr 1712 @ 0x6b00 (27392) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1713 @ 0x6b10 (27408) - @P0 BRA 0x6e90 ;
Basic block id 454 - num instructions 2
 Instr 1714 @ 0x6b20 (27424) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1715 @ 0x6b30 (27440) - @P0 BRA 0x6bf0 ;
Basic block id 455 - num instructions 2
 Instr 1716 @ 0x6b40 (27456) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1717 @ 0x6b50 (27472) - @!P0 BRA 0x6bc0 ;
Basic block id 456 - num instructions 2
 Instr 1718 @ 0x6b60 (27488) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1719 @ 0x6b70 (27504) - @P0 BRA 0x73a0 ;
Basic block id 457 - num instructions 4
 Instr 1720 @ 0x6b80 (27520) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1721 @ 0x6b90 (27536) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1722 @ 0x6ba0 (27552) - SEL R30, RZ, 0x3f800000, !P0 ;
 Instr 1723 @ 0x6bb0 (27568) - BRA 0x7520 ;
Basic block id 458 - num instructions 3
 Instr 1724 @ 0x6bc0 (27584) - LDG.E.64.SYS R4, [R4] ;
 Instr 1725 @ 0x6bd0 (27600) - F2F.F32.F64 R30, R4 ;
 Instr 1726 @ 0x6be0 (27616) - BRA 0x7520 ;
Basic block id 459 - num instructions 2
 Instr 1727 @ 0x6bf0 (27632) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1728 @ 0x6c00 (27648) - @!P0 BRA 0x6e60 ;
Basic block id 460 - num instructions 2
 Instr 1729 @ 0x6c10 (27664) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1730 @ 0x6c20 (27680) - @!P0 BRA 0x6d90 ;
Basic block id 461 - num instructions 2
 Instr 1731 @ 0x6c30 (27696) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1732 @ 0x6c40 (27712) - @P0 BRA 0x73a0 ;
Basic block id 462 - num instructions 20
 Instr 1733 @ 0x6c50 (27728) - LDG.E.U8.SYS R30, [R4] ;
 Instr 1734 @ 0x6c60 (27744) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 1735 @ 0x6c70 (27760) - IMAD.SHL.U32 R30, R30, 0x1000000, RZ ;
 Instr 1736 @ 0x6c80 (27776) - LOP3.LUT R0, R30, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1737 @ 0x6c90 (27792) - IADD3 R6, R0, 0x1000000, RZ ;
 Instr 1738 @ 0x6ca0 (27808) - FLO.U32 R3, R0 ;
 Instr 1739 @ 0x6cb0 (27824) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 1740 @ 0x6cc0 (27840) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 1741 @ 0x6cd0 (27856) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 1742 @ 0x6ce0 (27872) - IADD3 R3, R3, -0x4, RZ ;
 Instr 1743 @ 0x6cf0 (27888) - SEL R3, R3, RZ, P0 ;
 Instr 1744 @ 0x6d00 (27904) - SHF.L.U32 R4, R0.reuse, R3, RZ ;
 Instr 1745 @ 0x6d10 (27920) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 1746 @ 0x6d20 (27936) - IADD3 R3, R0, -0x1, RZ ;
 Instr 1747 @ 0x6d30 (27952) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 1748 @ 0x6d40 (27968) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 1749 @ 0x6d50 (27984) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 1750 @ 0x6d60 (28000) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 1751 @ 0x6d70 (28016) - LOP3.LUT R30, R3, 0x80000000, R30, 0xf8, !PT ;
 Instr 1752 @ 0x6d80 (28032) - BRA 0x7520 ;
Basic block id 463 - num instructions 13
 Instr 1753 @ 0x6d90 (28048) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1754 @ 0x6da0 (28064) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 1755 @ 0x6db0 (28080) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1756 @ 0x6dc0 (28096) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 1757 @ 0x6dd0 (28112) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1758 @ 0x6de0 (28128) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1759 @ 0x6df0 (28144) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1760 @ 0x6e00 (28160) - @P0 FMUL R30, R3, 1.9259299443872358531e-34 ;
 Instr 1761 @ 0x6e10 (28176) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1762 @ 0x6e20 (28192) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 1763 @ 0x6e30 (28208) - @!P0 FADD R30, R0, -0.5 ;
 Instr 1764 @ 0x6e40 (28224) - LOP3.LUT R30, R30, 0x80000000, R3, 0xf8, !PT ;
 Instr 1765 @ 0x6e50 (28240) - BRA 0x7520 ;
Basic block id 464 - num instructions 3
 Instr 1766 @ 0x6e60 (28256) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1767 @ 0x6e70 (28272) - PRMT R30, RZ, 0x5410, R4 ;
 Instr 1768 @ 0x6e80 (28288) - BRA 0x7520 ;
Basic block id 465 - num instructions 2
 Instr 1769 @ 0x6e90 (28304) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1770 @ 0x6ea0 (28320) - @P0 BRA 0x72c0 ;
Basic block id 466 - num instructions 2
 Instr 1771 @ 0x6eb0 (28336) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1772 @ 0x6ec0 (28352) - @!P0 BRA 0x7100 ;
Basic block id 467 - num instructions 2
 Instr 1773 @ 0x6ed0 (28368) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1774 @ 0x6ee0 (28384) - @!P0 BRA 0x6f40 ;
Basic block id 468 - num instructions 2
 Instr 1775 @ 0x6ef0 (28400) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1776 @ 0x6f00 (28416) - @P0 BRA 0x73a0 ;
Basic block id 469 - num instructions 3
 Instr 1777 @ 0x6f10 (28432) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1778 @ 0x6f20 (28448) - I2F.U16 R30, R4 ;
 Instr 1779 @ 0x6f30 (28464) - BRA 0x7520 ;
Basic block id 470 - num instructions 3
 Instr 1780 @ 0x6f40 (28480) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1781 @ 0x6f50 (28496) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1782 @ 0x6f60 (28512) - @!P0 BRA 0x7520 ;
Basic block id 471 - num instructions 3
 Instr 1783 @ 0x6f70 (28528) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1784 @ 0x6f80 (28544) - @!P0 IMAD.MOV.U32 R30, RZ, RZ, 0x7f800001 ;
 Instr 1785 @ 0x6f90 (28560) - @!P0 BRA 0x7520 ;
Basic block id 472 - num instructions 11
 Instr 1786 @ 0x6fa0 (28576) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
 Instr 1787 @ 0x6fb0 (28592) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1788 @ 0x6fc0 (28608) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 1789 @ 0x6fd0 (28624) - BSSY B0, 0x70c0 ;
 Instr 1790 @ 0x6fe0 (28640) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1791 @ 0x6ff0 (28656) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1792 @ 0x7000 (28672) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1793 @ 0x7010 (28688) - IMAD.U32 R30, R3, -0x80000000, RZ ;
 Instr 1794 @ 0x7020 (28704) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1795 @ 0x7030 (28720) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1796 @ 0x7040 (28736) - @P0 BRA 0x70b0 ;
Basic block id 473 - num instructions 6
 Instr 1797 @ 0x7050 (28752) - FLO.U32 R4, R3 ;
 Instr 1798 @ 0x7060 (28768) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1799 @ 0x7070 (28784) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 1800 @ 0x7080 (28800) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 1801 @ 0x7090 (28816) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1802 @ 0x70a0 (28832) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 474 - num instructions 5
 Instr 1803 @ 0x70b0 (28848) - BSYNC B0 ;
 Instr 1804 @ 0x70c0 (28864) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 1805 @ 0x70d0 (28880) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 1806 @ 0x70e0 (28896) - LOP3.LUT R30, R5, R3, R30, 0xfe, !PT ;
 Instr 1807 @ 0x70f0 (28912) - BRA 0x7520 ;
Basic block id 475 - num instructions 3
 Instr 1808 @ 0x7100 (28928) - LDG.E.U8.SYS R3, [R4] ;
 Instr 1809 @ 0x7110 (28944) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 1810 @ 0x7120 (28960) - @!P0 BRA 0x7520 ;
Basic block id 476 - num instructions 3
 Instr 1811 @ 0x7130 (28976) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 1812 @ 0x7140 (28992) - @!P0 IMAD.MOV.U32 R30, RZ, RZ, 0x7f800001 ;
 Instr 1813 @ 0x7150 (29008) - @!P0 BRA 0x7520 ;
Basic block id 477 - num instructions 11
 Instr 1814 @ 0x7160 (29024) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
 Instr 1815 @ 0x7170 (29040) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1816 @ 0x7180 (29056) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 1817 @ 0x7190 (29072) - BSSY B0, 0x7280 ;
 Instr 1818 @ 0x71a0 (29088) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1819 @ 0x71b0 (29104) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 1820 @ 0x71c0 (29120) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1821 @ 0x71d0 (29136) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 1822 @ 0x71e0 (29152) - IMAD.U32 R30, R4, -0x80000000, RZ ;
 Instr 1823 @ 0x71f0 (29168) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1824 @ 0x7200 (29184) - @P0 BRA 0x7270 ;
Basic block id 478 - num instructions 6
 Instr 1825 @ 0x7210 (29200) - FLO.U32 R4, R3 ;
 Instr 1826 @ 0x7220 (29216) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1827 @ 0x7230 (29232) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 1828 @ 0x7240 (29248) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 1829 @ 0x7250 (29264) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1830 @ 0x7260 (29280) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 479 - num instructions 5
 Instr 1831 @ 0x7270 (29296) - BSYNC B0 ;
 Instr 1832 @ 0x7280 (29312) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 1833 @ 0x7290 (29328) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1834 @ 0x72a0 (29344) - LOP3.LUT R30, R0, R3, R30, 0xfe, !PT ;
 Instr 1835 @ 0x72b0 (29360) - BRA 0x7520 ;
Basic block id 480 - num instructions 2
 Instr 1836 @ 0x72c0 (29376) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1837 @ 0x72d0 (29392) - @!P0 BRA 0x7500 ;
Basic block id 481 - num instructions 2
 Instr 1838 @ 0x72e0 (29408) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1839 @ 0x72f0 (29424) - @!P0 BRA 0x74d0 ;
Basic block id 482 - num instructions 2
 Instr 1840 @ 0x7300 (29440) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1841 @ 0x7310 (29456) - @P0 BRA 0x73a0 ;
Basic block id 483 - num instructions 4
 Instr 1842 @ 0x7320 (29472) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1843 @ 0x7330 (29488) - IMAD.MOV.U32 R30, RZ, RZ, 0x400000 ;
 Instr 1844 @ 0x7340 (29504) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1845 @ 0x7350 (29520) - @!P0 BRA 0x7520 ;
Basic block id 484 - num instructions 4
 Instr 1846 @ 0x7360 (29536) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1847 @ 0x7370 (29552) - @!P0 IMAD.MOV.U32 R30, RZ, RZ, 0x7f800001 ;
 Instr 1848 @ 0x7380 (29568) - @P0 IMAD.SHL.U32 R30, R4, 0x800000, RZ ;
 Instr 1849 @ 0x7390 (29584) - BRA 0x7520 ;
Basic block id 485 - num instructions 18
 Instr 1850 @ 0x73a0 (29600) - UMOV UR4, 0xd33a2700 ;
 Instr 1851 @ 0x73b0 (29616) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1852 @ 0x73c0 (29632) - UMOV UR5, 0x7f88 ;
 Instr 1853 @ 0x73d0 (29648) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1854 @ 0x73e0 (29664) - UMOV UR6, 0xd33a2100 ;
 Instr 1855 @ 0x73f0 (29680) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1856 @ 0x7400 (29696) - UMOV UR7, 0x7f88 ;
 Instr 1857 @ 0x7410 (29712) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1858 @ 0x7420 (29728) - UMOV UR8, 0xd33a0b00 ;
 Instr 1859 @ 0x7430 (29744) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1860 @ 0x7440 (29760) - UMOV UR9, 0x7f88 ;
 Instr 1861 @ 0x7450 (29776) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1862 @ 0x7460 (29792) - MOV R20, 0xd7fa89c0 ;
 Instr 1863 @ 0x7470 (29808) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1864 @ 0x7480 (29824) - MOV R21, 0x7f88 ;
 Instr 1865 @ 0x7490 (29840) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1866 @ 0x74a0 (29856) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1867 @ 0x74b0 (29872) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 486 - num instructions 1
 Instr 1868 @ 0x74c0 (29888) - BRA 0x7520 ;
Basic block id 487 - num instructions 3
 Instr 1869 @ 0x74d0 (29904) - LDG.E.64.SYS R4, [R4] ;
 Instr 1870 @ 0x74e0 (29920) - I2F.U64 R30, R4 ;
 Instr 1871 @ 0x74f0 (29936) - BRA 0x7520 ;
Basic block id 488 - num instructions 2
 Instr 1872 @ 0x7500 (29952) - LDG.E.SYS R4, [R4] ;
 Instr 1873 @ 0x7510 (29968) - I2F.U32 R30, R4 ;
Basic block id 489 - num instructions 3
 Instr 1874 @ 0x7520 (29984) - BSYNC B7 ;
 Instr 1875 @ 0x7530 (30000) - ISETP.GE.AND P0, PT, R36, R39, PT ;
 Instr 1876 @ 0x7540 (30016) - @P0 EXIT ;
Basic block id 490 - num instructions 10
 Instr 1877 @ 0x7550 (30032) - LDC.U8 R31, c[0x0][0x184] ;
 Instr 1878 @ 0x7560 (30048) - IMAD R0, R17, 0x400, R36 ;
 Instr 1879 @ 0x7570 (30064) - IADD3 R38, R36, 0x80, RZ ;
 Instr 1880 @ 0x7580 (30080) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 1881 @ 0x7590 (30096) - IADD3 R8, P0, R0, c[0x0][0x168], RZ ;
 Instr 1882 @ 0x75a0 (30112) - IMAD.X R9, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 1883 @ 0x75b0 (30128) - PRMT R37, R31, 0x9910, RZ ;
 Instr 1884 @ 0x75c0 (30144) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 1885 @ 0x75d0 (30160) - P2R R0, PR, RZ, 0x2 ;
 Instr 1886 @ 0x75e0 (30176) - @P1 BRA 0x7980 ;
Basic block id 491 - num instructions 2
 Instr 1887 @ 0x75f0 (30192) - ISETP.GT.AND P0, PT, R37, 0x4, PT ;
 Instr 1888 @ 0x7600 (30208) - @P0 BRA 0x77d0 ;
Basic block id 492 - num instructions 2
 Instr 1889 @ 0x7610 (30224) - ISETP.GT.AND P0, PT, R37, 0x1, PT ;
 Instr 1890 @ 0x7620 (30240) - @P0 BRA 0x76e0 ;
Basic block id 493 - num instructions 2
 Instr 1891 @ 0x7630 (30256) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 1892 @ 0x7640 (30272) - @!P0 BRA 0x76a0 ;
Basic block id 494 - num instructions 2
 Instr 1893 @ 0x7650 (30288) - ISETP.NE.AND P0, PT, R37, 0x1, PT ;
 Instr 1894 @ 0x7660 (30304) - @P0 BRA 0x8310 ;
Basic block id 495 - num instructions 3
 Instr 1895 @ 0x7670 (30320) - F2I.TRUNC.NTZ R3, R2 ;
 Instr 1896 @ 0x7680 (30336) - STG.E.U8.SYS [R8], R3 ;
 Instr 1897 @ 0x7690 (30352) - BRA 0x8490 ;
Basic block id 496 - num instructions 4
 Instr 1898 @ 0x76a0 (30368) - F2I.S64.TRUNC R2, R2 ;
 Instr 1899 @ 0x76b0 (30384) - IMAD.MOV.U32 R5, RZ, RZ, R2 ;
 Instr 1900 @ 0x76c0 (30400) - STG.E.U8.SYS [R8], R5 ;
 Instr 1901 @ 0x76d0 (30416) - BRA 0x8490 ;
Basic block id 497 - num instructions 2
 Instr 1902 @ 0x76e0 (30432) - ISETP.NE.AND P0, PT, R37, 0x2, PT ;
 Instr 1903 @ 0x76f0 (30448) - @!P0 BRA 0x77a0 ;
Basic block id 498 - num instructions 2
 Instr 1904 @ 0x7700 (30464) - ISETP.NE.AND P0, PT, R37, 0x3, PT ;
 Instr 1905 @ 0x7710 (30480) - @!P0 BRA 0x7770 ;
Basic block id 499 - num instructions 2
 Instr 1906 @ 0x7720 (30496) - ISETP.NE.AND P0, PT, R37, 0x4, PT ;
 Instr 1907 @ 0x7730 (30512) - @P0 BRA 0x8310 ;
Basic block id 500 - num instructions 3
 Instr 1908 @ 0x7740 (30528) - F2I.S64.TRUNC R2, R2 ;
 Instr 1909 @ 0x7750 (30544) - STG.E.64.SYS [R8], R2 ;
 Instr 1910 @ 0x7760 (30560) - BRA 0x8490 ;
Basic block id 501 - num instructions 3
 Instr 1911 @ 0x7770 (30576) - F2I.TRUNC.NTZ R3, R2 ;
 Instr 1912 @ 0x7780 (30592) - STG.E.SYS [R8], R3 ;
 Instr 1913 @ 0x7790 (30608) - BRA 0x8490 ;
Basic block id 502 - num instructions 3
 Instr 1914 @ 0x77a0 (30624) - F2I.TRUNC.NTZ R3, R2 ;
 Instr 1915 @ 0x77b0 (30640) - STG.E.U16.SYS [R8], R3 ;
 Instr 1916 @ 0x77c0 (30656) - BRA 0x8490 ;
Basic block id 503 - num instructions 2
 Instr 1917 @ 0x77d0 (30672) - ISETP.GT.AND P0, PT, R37, 0x6, PT ;
 Instr 1918 @ 0x77e0 (30688) - @P0 BRA 0x7880 ;
Basic block id 504 - num instructions 2
 Instr 1919 @ 0x77f0 (30704) - ISETP.NE.AND P0, PT, R37, 0x5, PT ;
 Instr 1920 @ 0x7800 (30720) - @!P0 BRA 0x7850 ;
Basic block id 505 - num instructions 2
 Instr 1921 @ 0x7810 (30736) - ISETP.NE.AND P0, PT, R37, 0x6, PT ;
 Instr 1922 @ 0x7820 (30752) - @P0 BRA 0x8310 ;
Basic block id 506 - num instructions 2
 Instr 1923 @ 0x7830 (30768) - STG.E.SYS [R8], R2 ;
 Instr 1924 @ 0x7840 (30784) - BRA 0x8490 ;
Basic block id 507 - num instructions 3
 Instr 1925 @ 0x7850 (30800) - F2F.F16.F32 R3, R2 ;
 Instr 1926 @ 0x7860 (30816) - STG.E.U16.SYS [R8], R3 ;
 Instr 1927 @ 0x7870 (30832) - BRA 0x8490 ;
Basic block id 508 - num instructions 2
 Instr 1928 @ 0x7880 (30848) - ISETP.NE.AND P0, PT, R37, 0x7, PT ;
 Instr 1929 @ 0x7890 (30864) - @!P0 BRA 0x7950 ;
Basic block id 509 - num instructions 2
 Instr 1930 @ 0x78a0 (30880) - ISETP.NE.AND P0, PT, R37, 0x8, PT ;
 Instr 1931 @ 0x78b0 (30896) - @!P0 BRA 0x7910 ;
Basic block id 510 - num instructions 2
 Instr 1932 @ 0x78c0 (30912) - ISETP.NE.AND P0, PT, R37, 0x9, PT ;
 Instr 1933 @ 0x78d0 (30928) - @P0 BRA 0x8310 ;
Basic block id 511 - num instructions 3
 Instr 1934 @ 0x78e0 (30944) - IMAD.MOV.U32 R3, RZ, RZ, RZ ;
 Instr 1935 @ 0x78f0 (30960) - STG.E.64.SYS [R8], R2 ;
 Instr 1936 @ 0x7900 (30976) - BRA 0x8490 ;
Basic block id 512 - num instructions 4
 Instr 1937 @ 0x7910 (30992) - F2F.F16.F32 R3, R2 ;
 Instr 1938 @ 0x7920 (31008) - PRMT R3, R3, 0x5410, RZ ;
 Instr 1939 @ 0x7930 (31024) - STG.E.SYS [R8], R3 ;
 Instr 1940 @ 0x7940 (31040) - BRA 0x8490 ;
Basic block id 513 - num instructions 3
 Instr 1941 @ 0x7950 (31056) - F2F.F64.F32 R2, R2 ;
 Instr 1942 @ 0x7960 (31072) - STG.E.64.SYS [R8], R2 ;
 Instr 1943 @ 0x7970 (31088) - BRA 0x8490 ;
Basic block id 514 - num instructions 2
 Instr 1944 @ 0x7980 (31104) - ISETP.GT.AND P0, PT, R37, 0x18, PT ;
 Instr 1945 @ 0x7990 (31120) - @P0 BRA 0x7df0 ;
Basic block id 515 - num instructions 2
 Instr 1946 @ 0x79a0 (31136) - ISETP.GT.AND P0, PT, R37, 0xe, PT ;
 Instr 1947 @ 0x79b0 (31152) - @P0 BRA 0x7a80 ;
Basic block id 516 - num instructions 2
 Instr 1948 @ 0x79c0 (31168) - ISETP.NE.AND P0, PT, R37, 0xa, PT ;
 Instr 1949 @ 0x79d0 (31184) - @!P0 BRA 0x7a40 ;
Basic block id 517 - num instructions 2
 Instr 1950 @ 0x79e0 (31200) - ISETP.NE.AND P0, PT, R37, 0xb, PT ;
 Instr 1951 @ 0x79f0 (31216) - @P0 BRA 0x8310 ;
Basic block id 518 - num instructions 4
 Instr 1952 @ 0x7a00 (31232) - FSETP.NEU.AND P0, PT, R2, RZ, PT ;
 Instr 1953 @ 0x7a10 (31248) - SEL R3, RZ, 0x1, !P0 ;
 Instr 1954 @ 0x7a20 (31264) - STG.E.U8.SYS [R8], R3 ;
 Instr 1955 @ 0x7a30 (31280) - BRA 0x8490 ;
Basic block id 519 - num instructions 4
 Instr 1956 @ 0x7a40 (31296) - F2F.F64.F32 R4, R2 ;
 Instr 1957 @ 0x7a50 (31312) - CS2R R6, SRZ ;
 Instr 1958 @ 0x7a60 (31328) - STG.E.128.SYS [R8], R4 ;
 Instr 1959 @ 0x7a70 (31344) - BRA 0x8490 ;
Basic block id 520 - num instructions 2
 Instr 1960 @ 0x7a80 (31360) - ISETP.NE.AND P0, PT, R37, 0xf, PT ;
 Instr 1961 @ 0x7a90 (31376) - @!P0 BRA 0x7d70 ;
Basic block id 521 - num instructions 2
 Instr 1962 @ 0x7aa0 (31392) - ISETP.NE.AND P0, PT, R37, 0x17, PT ;
 Instr 1963 @ 0x7ab0 (31408) - @!P0 BRA 0x7c10 ;
Basic block id 522 - num instructions 2
 Instr 1964 @ 0x7ac0 (31424) - ISETP.NE.AND P0, PT, R37, 0x18, PT ;
 Instr 1965 @ 0x7ad0 (31440) - @P0 BRA 0x8310 ;
Basic block id 523 - num instructions 7
 Instr 1966 @ 0x7ae0 (31456) - LOP3.LUT R4, R2.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 1967 @ 0x7af0 (31472) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1968 @ 0x7b00 (31488) - LOP3.LUT R0, R2, 0x80000000, RZ, 0xc0, !PT ;
 Instr 1969 @ 0x7b10 (31504) - BSSY B0, 0x7be0 ;
 Instr 1970 @ 0x7b20 (31520) - ISETP.GT.U32.AND P0, PT, R4, 0x43efffff, PT ;
 Instr 1971 @ 0x7b30 (31536) - SHF.R.U32.HI R5, RZ, 0x18, R0 ;
 Instr 1972 @ 0x7b40 (31552) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 524 - num instructions 1
 Instr 1973 @ 0x7b50 (31568) - @P0 BRA 0x7bd0 ;
Basic block id 525 - num instructions 7
 Instr 1974 @ 0x7b60 (31584) - ISETP.GE.U32.AND P0, PT, R4, 0x3c800000, PT ;
 Instr 1975 @ 0x7b70 (31600) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R2 ;
 Instr 1976 @ 0x7b80 (31616) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 1977 @ 0x7b90 (31632) - @P0 IADD3 R3, R2, 0x407ffff, R3 ;
 Instr 1978 @ 0x7ba0 (31648) - @!P0 FADD R2, R4, 16384 ;
 Instr 1979 @ 0x7bb0 (31664) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R3 ;
 Instr 1980 @ 0x7bc0 (31680) - @!P0 IADD3 R0, R2, -0x46800000, RZ ;
Basic block id 526 - num instructions 4
 Instr 1981 @ 0x7bd0 (31696) - BSYNC B0 ;
 Instr 1982 @ 0x7be0 (31712) - LOP3.LUT R5, R0, R5, RZ, 0xfc, !PT ;
 Instr 1983 @ 0x7bf0 (31728) - STG.E.U8.SYS [R8], R5 ;
 Instr 1984 @ 0x7c00 (31744) - BRA 0x8490 ;
Basic block id 527 - num instructions 5
 Instr 1985 @ 0x7c10 (31760) - LOP3.LUT R4, R2, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 1986 @ 0x7c20 (31776) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1987 @ 0x7c30 (31792) - BSSY B0, 0x7d20 ;
 Instr 1988 @ 0x7c40 (31808) - ISETP.GT.U32.AND P0, PT, R4, 0x477fffff, PT ;
 Instr 1989 @ 0x7c50 (31824) - @P0 BRA 0x7ce0 ;
Basic block id 528 - num instructions 8
 Instr 1990 @ 0x7c60 (31840) - ISETP.GE.U32.AND P0, PT, R4, 0x38800000, PT ;
 Instr 1991 @ 0x7c70 (31856) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R2 ;
 Instr 1992 @ 0x7c80 (31872) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 1993 @ 0x7c90 (31888) - @P0 IADD3 R0, R2, 0x80fffff, R3 ;
 Instr 1994 @ 0x7ca0 (31904) - @!P0 FADD R3, R4, 128 ;
 Instr 1995 @ 0x7cb0 (31920) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 1996 @ 0x7cc0 (31936) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 1997 @ 0x7cd0 (31952) - BRA 0x7d10 ;
Basic block id 529 - num instructions 3
 Instr 1998 @ 0x7ce0 (31968) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 1999 @ 0x7cf0 (31984) - ISETP.GT.U32.AND P0, PT, R4, 0x7f800000, PT ;
 Instr 2000 @ 0x7d00 (32000) - SEL R0, R0, 0x7c, P0 ;
Basic block id 530 - num instructions 6
 Instr 2001 @ 0x7d10 (32016) - BSYNC B0 ;
 Instr 2002 @ 0x7d20 (32032) - LOP3.LUT R2, R2, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2003 @ 0x7d30 (32048) - SHF.R.U32.HI R3, RZ, 0x18, R2 ;
 Instr 2004 @ 0x7d40 (32064) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2005 @ 0x7d50 (32080) - STG.E.U8.SYS [R8], R3 ;
 Instr 2006 @ 0x7d60 (32096) - BRA 0x8490 ;
Basic block id 531 - num instructions 8
 Instr 2007 @ 0x7d70 (32112) - FSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 2008 @ 0x7d80 (32128) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2009 @ 0x7d90 (32144) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R2 ;
 Instr 2010 @ 0x7da0 (32160) - @!P0 LOP3.LUT R5, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2011 @ 0x7db0 (32176) - @!P0 IADD3 R5, R2, 0x7fff, R5 ;
 Instr 2012 @ 0x7dc0 (32192) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R5 ;
 Instr 2013 @ 0x7dd0 (32208) - STG.E.U16.SYS [R8], R3 ;
 Instr 2014 @ 0x7de0 (32224) - BRA 0x8490 ;
Basic block id 532 - num instructions 2
 Instr 2015 @ 0x7df0 (32240) - ISETP.GT.AND P0, PT, R37, 0x1b, PT ;
 Instr 2016 @ 0x7e00 (32256) - @P0 BRA 0x81c0 ;
Basic block id 533 - num instructions 2
 Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P0, PT, R37, 0x19, PT ;
 Instr 2018 @ 0x7e20 (32288) - @!P0 BRA 0x8030 ;
Basic block id 534 - num instructions 2
 Instr 2019 @ 0x7e30 (32304) - ISETP.NE.AND P0, PT, R37, 0x1a, PT ;
 Instr 2020 @ 0x7e40 (32320) - @!P0 BRA 0x7ea0 ;
Basic block id 535 - num instructions 2
 Instr 2021 @ 0x7e50 (32336) - ISETP.NE.AND P0, PT, R37, 0x1b, PT ;
 Instr 2022 @ 0x7e60 (32352) - @P0 BRA 0x8310 ;
Basic block id 536 - num instructions 3
 Instr 2023 @ 0x7e70 (32368) - F2I.U32.TRUNC.NTZ R3, R2 ;
 Instr 2024 @ 0x7e80 (32384) - STG.E.U16.SYS [R8], R3 ;
 Instr 2025 @ 0x7e90 (32400) - BRA 0x8490 ;
Basic block id 537 - num instructions 6
 Instr 2026 @ 0x7ea0 (32416) - LOP3.LUT R4, R2, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2027 @ 0x7eb0 (32432) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2028 @ 0x7ec0 (32448) - BSSY B0, 0x8010 ;
 Instr 2029 @ 0x7ed0 (32464) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2030 @ 0x7ee0 (32480) - ISETP.GT.U32.AND P0, PT, R4, 0x437fffff, PT ;
 Instr 2031 @ 0x7ef0 (32496) - @P0 BRA 0x8000 ;
Basic block id 538 - num instructions 2
 Instr 2032 @ 0x7f00 (32512) - ISETP.GE.U32.AND P0, PT, R4, 0x3c000000, PT ;
 Instr 2033 @ 0x7f10 (32528) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R2 ;
Basic block id 539 - num instructions 5
 Instr 2034 @ 0x7f20 (32544) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2035 @ 0x7f30 (32560) - @P0 IADD3 R0, R2, 0x487ffff, R3 ;
 Instr 2036 @ 0x7f40 (32576) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2037 @ 0x7f50 (32592) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2038 @ 0x7f60 (32608) - @P0 BRA 0x7fc0 ;
Basic block id 540 - num instructions 5
 Instr 2039 @ 0x7f70 (32624) - FADD R0, R4, 8192 ;
 Instr 2040 @ 0x7f80 (32640) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2041 @ 0x7f90 (32656) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2042 @ 0x7fa0 (32672) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2043 @ 0x7fb0 (32688) - @!P0 BRA 0x8000 ;
Basic block id 541 - num instructions 4
 Instr 2044 @ 0x7fc0 (32704) - LOP3.LUT R2, R2, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2045 @ 0x7fd0 (32720) - SHF.R.U32.HI R2, RZ, 0x18, R2 ;
 Instr 2046 @ 0x7fe0 (32736) - LOP3.LUT R3, R3, R2, RZ, 0xfc, !PT ;
 Instr 2047 @ 0x7ff0 (32752) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 542 - num instructions 3
 Instr 2048 @ 0x8000 (32768) - BSYNC B0 ;
 Instr 2049 @ 0x8010 (32784) - STG.E.U8.SYS [R8], R0 ;
 Instr 2050 @ 0x8020 (32800) - BRA 0x8490 ;
Basic block id 543 - num instructions 6
 Instr 2051 @ 0x8030 (32816) - LOP3.LUT R4, R2, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2052 @ 0x8040 (32832) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2053 @ 0x8050 (32848) - BSSY B0, 0x81a0 ;
 Instr 2054 @ 0x8060 (32864) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2055 @ 0x8070 (32880) - ISETP.GT.U32.AND P0, PT, R4, 0x477fffff, PT ;
 Instr 2056 @ 0x8080 (32896) - @P0 BRA 0x8190 ;
Basic block id 544 - num instructions 2
 Instr 2057 @ 0x8090 (32912) - ISETP.GE.U32.AND P0, PT, R4, 0x38000000, PT ;
 Instr 2058 @ 0x80a0 (32928) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R2 ;
Basic block id 545 - num instructions 5
 Instr 2059 @ 0x80b0 (32944) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2060 @ 0x80c0 (32960) - @P0 IADD3 R0, R2, 0x88fffff, R3 ;
 Instr 2061 @ 0x80d0 (32976) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2062 @ 0x80e0 (32992) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2063 @ 0x80f0 (33008) - @P0 BRA 0x8150 ;
Basic block id 546 - num instructions 5
 Instr 2064 @ 0x8100 (33024) - FADD R0, R4, 64 ;
 Instr 2065 @ 0x8110 (33040) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2066 @ 0x8120 (33056) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2067 @ 0x8130 (33072) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2068 @ 0x8140 (33088) - @!P0 BRA 0x8190 ;
Basic block id 547 - num instructions 4
 Instr 2069 @ 0x8150 (33104) - LOP3.LUT R2, R2, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2070 @ 0x8160 (33120) - SHF.R.U32.HI R2, RZ, 0x18, R2 ;
 Instr 2071 @ 0x8170 (33136) - LOP3.LUT R3, R3, R2, RZ, 0xfc, !PT ;
 Instr 2072 @ 0x8180 (33152) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 548 - num instructions 3
 Instr 2073 @ 0x8190 (33168) - BSYNC B0 ;
 Instr 2074 @ 0x81a0 (33184) - STG.E.U8.SYS [R8], R0 ;
 Instr 2075 @ 0x81b0 (33200) - BRA 0x8490 ;
Basic block id 549 - num instructions 2
 Instr 2076 @ 0x81c0 (33216) - ISETP.NE.AND P0, PT, R37, 0x1c, PT ;
 Instr 2077 @ 0x81d0 (33232) - @!P0 BRA 0x8470 ;
Basic block id 550 - num instructions 2
 Instr 2078 @ 0x81e0 (33248) - ISETP.NE.AND P0, PT, R37, 0x1d, PT ;
 Instr 2079 @ 0x81f0 (33264) - @!P0 BRA 0x8440 ;
Basic block id 551 - num instructions 2
 Instr 2080 @ 0x8200 (33280) - ISETP.NE.AND P0, PT, R37, 0x2c, PT ;
 Instr 2081 @ 0x8210 (33296) - @P0 BRA 0x8310 ;
Basic block id 552 - num instructions 15
 Instr 2082 @ 0x8220 (33312) - SHF.R.U32.HI R4, RZ, 0x17, R2 ;
 Instr 2083 @ 0x8230 (33328) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2084 @ 0x8240 (33344) - LOP3.LUT R3, R4, 0xff, RZ, 0xc0, !PT ;
 Instr 2085 @ 0x8250 (33360) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2086 @ 0x8260 (33376) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R2.reuse ;
 Instr 2087 @ 0x8270 (33392) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R2, 0xf8, !PT ;
 Instr 2088 @ 0x8280 (33408) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2089 @ 0x8290 (33424) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2090 @ 0x82a0 (33440) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2091 @ 0x82b0 (33456) - @P2 IADD3 R0, R4, 0x1, RZ ;
 Instr 2092 @ 0x82c0 (33472) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2093 @ 0x82d0 (33488) - @!P0 IMAD.MOV R0, RZ, RZ, R4 ;
 Instr 2094 @ 0x82e0 (33504) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2095 @ 0x82f0 (33520) - STG.E.U8.SYS [R8], R3 ;
 Instr 2096 @ 0x8300 (33536) - BRA 0x8490 ;
Basic block id 553 - num instructions 18
 Instr 2097 @ 0x8310 (33552) - UMOV UR6, 0xd33a2700 ;
 Instr 2098 @ 0x8320 (33568) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2099 @ 0x8330 (33584) - UMOV UR7, 0x7f88 ;
 Instr 2100 @ 0x8340 (33600) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2101 @ 0x8350 (33616) - UMOV UR8, 0xd33a2100 ;
 Instr 2102 @ 0x8360 (33632) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2103 @ 0x8370 (33648) - UMOV UR9, 0x7f88 ;
 Instr 2104 @ 0x8380 (33664) - IMAD.U32 R4, RZ, RZ, UR6 ;
 Instr 2105 @ 0x8390 (33680) - UMOV UR4, 0xd33a0c00 ;
 Instr 2106 @ 0x83a0 (33696) - IMAD.U32 R5, RZ, RZ, UR7 ;
 Instr 2107 @ 0x83b0 (33712) - UMOV UR5, 0x7f88 ;
 Instr 2108 @ 0x83c0 (33728) - IMAD.U32 R6, RZ, RZ, UR8 ;
 Instr 2109 @ 0x83d0 (33744) - MOV R20, 0xd7fa9930 ;
 Instr 2110 @ 0x83e0 (33760) - IMAD.U32 R7, RZ, RZ, UR9 ;
 Instr 2111 @ 0x83f0 (33776) - MOV R21, 0x7f88 ;
 Instr 2112 @ 0x8400 (33792) - IMAD.U32 R10, RZ, RZ, UR4 ;
 Instr 2113 @ 0x8410 (33808) - IMAD.U32 R11, RZ, RZ, UR5 ;
 Instr 2114 @ 0x8420 (33824) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 554 - num instructions 1
 Instr 2115 @ 0x8430 (33840) - BRA 0x8490 ;
Basic block id 555 - num instructions 3
 Instr 2116 @ 0x8440 (33856) - F2I.U64.TRUNC R2, R2 ;
 Instr 2117 @ 0x8450 (33872) - STG.E.64.SYS [R8], R2 ;
 Instr 2118 @ 0x8460 (33888) - BRA 0x8490 ;
Basic block id 556 - num instructions 2
 Instr 2119 @ 0x8470 (33904) - F2I.U32.TRUNC.NTZ R3, R2 ;
 Instr 2120 @ 0x8480 (33920) - STG.E.SYS [R8], R3 ;
Basic block id 557 - num instructions 2
 Instr 2121 @ 0x8490 (33936) - ISETP.GE.AND P0, PT, R38, R39, PT ;
 Instr 2122 @ 0x84a0 (33952) - @P0 EXIT ;
Basic block id 558 - num instructions 6
 Instr 2123 @ 0x84b0 (33968) - IMAD R2, R17, 0x400, R38 ;
 Instr 2124 @ 0x84c0 (33984) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 2125 @ 0x84d0 (34000) - IMAD R4, R2, c[0x0][0x188], RZ ;
 Instr 2126 @ 0x84e0 (34016) - IADD3 R4, P0, R4, c[0x0][0x168], RZ ;
 Instr 2127 @ 0x84f0 (34032) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2128 @ 0x8500 (34048) - @P1 BRA 0x88b0 ;
Basic block id 559 - num instructions 3
 Instr 2129 @ 0x8510 (34064) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2130 @ 0x8520 (34080) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2131 @ 0x8530 (34096) - @P0 BRA 0x8700 ;
Basic block id 560 - num instructions 2
 Instr 2132 @ 0x8540 (34112) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2133 @ 0x8550 (34128) - @P0 BRA 0x8610 ;
Basic block id 561 - num instructions 2
 Instr 2134 @ 0x8560 (34144) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 2135 @ 0x8570 (34160) - @!P0 BRA 0x85d0 ;
Basic block id 562 - num instructions 2
 Instr 2136 @ 0x8580 (34176) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2137 @ 0x8590 (34192) - @P0 BRA 0x9250 ;
Basic block id 563 - num instructions 3
 Instr 2138 @ 0x85a0 (34208) - F2I.TRUNC.NTZ R3, R16 ;
 Instr 2139 @ 0x85b0 (34224) - STG.E.U8.SYS [R4], R3 ;
 Instr 2140 @ 0x85c0 (34240) - BRA 0x93d0 ;
Basic block id 564 - num instructions 4
 Instr 2141 @ 0x85d0 (34256) - F2I.S64.TRUNC R16, R16 ;
 Instr 2142 @ 0x85e0 (34272) - IMAD.MOV.U32 R3, RZ, RZ, R16 ;
 Instr 2143 @ 0x85f0 (34288) - STG.E.U8.SYS [R4], R3 ;
 Instr 2144 @ 0x8600 (34304) - BRA 0x93d0 ;
Basic block id 565 - num instructions 2
 Instr 2145 @ 0x8610 (34320) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 2146 @ 0x8620 (34336) - @!P0 BRA 0x86d0 ;
Basic block id 566 - num instructions 2
 Instr 2147 @ 0x8630 (34352) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 2148 @ 0x8640 (34368) - @!P0 BRA 0x86a0 ;
Basic block id 567 - num instructions 2
 Instr 2149 @ 0x8650 (34384) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 2150 @ 0x8660 (34400) - @P0 BRA 0x9250 ;
Basic block id 568 - num instructions 3
 Instr 2151 @ 0x8670 (34416) - F2I.S64.TRUNC R16, R16 ;
 Instr 2152 @ 0x8680 (34432) - STG.E.64.SYS [R4], R16 ;
 Instr 2153 @ 0x8690 (34448) - BRA 0x93d0 ;
Basic block id 569 - num instructions 3
 Instr 2154 @ 0x86a0 (34464) - F2I.TRUNC.NTZ R3, R16 ;
 Instr 2155 @ 0x86b0 (34480) - STG.E.SYS [R4], R3 ;
 Instr 2156 @ 0x86c0 (34496) - BRA 0x93d0 ;
Basic block id 570 - num instructions 3
 Instr 2157 @ 0x86d0 (34512) - F2I.TRUNC.NTZ R3, R16 ;
 Instr 2158 @ 0x86e0 (34528) - STG.E.U16.SYS [R4], R3 ;
 Instr 2159 @ 0x86f0 (34544) - BRA 0x93d0 ;
Basic block id 571 - num instructions 2
 Instr 2160 @ 0x8700 (34560) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 2161 @ 0x8710 (34576) - @P0 BRA 0x87b0 ;
Basic block id 572 - num instructions 2
 Instr 2162 @ 0x8720 (34592) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 2163 @ 0x8730 (34608) - @!P0 BRA 0x8780 ;
Basic block id 573 - num instructions 2
 Instr 2164 @ 0x8740 (34624) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 2165 @ 0x8750 (34640) - @P0 BRA 0x9250 ;
Basic block id 574 - num instructions 2
 Instr 2166 @ 0x8760 (34656) - STG.E.SYS [R4], R16 ;
 Instr 2167 @ 0x8770 (34672) - BRA 0x93d0 ;
Basic block id 575 - num instructions 3
 Instr 2168 @ 0x8780 (34688) - F2F.F16.F32 R3, R16 ;
 Instr 2169 @ 0x8790 (34704) - STG.E.U16.SYS [R4], R3 ;
 Instr 2170 @ 0x87a0 (34720) - BRA 0x93d0 ;
Basic block id 576 - num instructions 2
 Instr 2171 @ 0x87b0 (34736) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 2172 @ 0x87c0 (34752) - @!P0 BRA 0x8880 ;
Basic block id 577 - num instructions 2
 Instr 2173 @ 0x87d0 (34768) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 2174 @ 0x87e0 (34784) - @!P0 BRA 0x8840 ;
Basic block id 578 - num instructions 2
 Instr 2175 @ 0x87f0 (34800) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 2176 @ 0x8800 (34816) - @P0 BRA 0x9250 ;
Basic block id 579 - num instructions 3
 Instr 2177 @ 0x8810 (34832) - IMAD.MOV.U32 R17, RZ, RZ, RZ ;
 Instr 2178 @ 0x8820 (34848) - STG.E.64.SYS [R4], R16 ;
 Instr 2179 @ 0x8830 (34864) - BRA 0x93d0 ;
Basic block id 580 - num instructions 4
 Instr 2180 @ 0x8840 (34880) - F2F.F16.F32 R3, R16 ;
 Instr 2181 @ 0x8850 (34896) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2182 @ 0x8860 (34912) - STG.E.SYS [R4], R3 ;
 Instr 2183 @ 0x8870 (34928) - BRA 0x93d0 ;
Basic block id 581 - num instructions 3
 Instr 2184 @ 0x8880 (34944) - F2F.F64.F32 R16, R16 ;
 Instr 2185 @ 0x8890 (34960) - STG.E.64.SYS [R4], R16 ;
 Instr 2186 @ 0x88a0 (34976) - BRA 0x93d0 ;
Basic block id 582 - num instructions 3
 Instr 2187 @ 0x88b0 (34992) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2188 @ 0x88c0 (35008) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 2189 @ 0x88d0 (35024) - @P0 BRA 0x8d30 ;
Basic block id 583 - num instructions 2
 Instr 2190 @ 0x88e0 (35040) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 2191 @ 0x88f0 (35056) - @P0 BRA 0x89c0 ;
Basic block id 584 - num instructions 2
 Instr 2192 @ 0x8900 (35072) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 2193 @ 0x8910 (35088) - @!P0 BRA 0x8980 ;
Basic block id 585 - num instructions 2
 Instr 2194 @ 0x8920 (35104) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 2195 @ 0x8930 (35120) - @P0 BRA 0x9250 ;
Basic block id 586 - num instructions 4
 Instr 2196 @ 0x8940 (35136) - FSETP.NEU.AND P0, PT, R16, RZ, PT ;
 Instr 2197 @ 0x8950 (35152) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2198 @ 0x8960 (35168) - STG.E.U8.SYS [R4], R3 ;
 Instr 2199 @ 0x8970 (35184) - BRA 0x93d0 ;
Basic block id 587 - num instructions 4
 Instr 2200 @ 0x8980 (35200) - F2F.F64.F32 R8, R16 ;
 Instr 2201 @ 0x8990 (35216) - CS2R R10, SRZ ;
 Instr 2202 @ 0x89a0 (35232) - STG.E.128.SYS [R4], R8 ;
 Instr 2203 @ 0x89b0 (35248) - BRA 0x93d0 ;
Basic block id 588 - num instructions 2
 Instr 2204 @ 0x89c0 (35264) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2205 @ 0x89d0 (35280) - @!P0 BRA 0x8cb0 ;
Basic block id 589 - num instructions 2
 Instr 2206 @ 0x89e0 (35296) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2207 @ 0x89f0 (35312) - @!P0 BRA 0x8b50 ;
Basic block id 590 - num instructions 2
 Instr 2208 @ 0x8a00 (35328) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2209 @ 0x8a10 (35344) - @P0 BRA 0x9250 ;
Basic block id 591 - num instructions 7
 Instr 2210 @ 0x8a20 (35360) - LOP3.LUT R6, R16.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2211 @ 0x8a30 (35376) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2212 @ 0x8a40 (35392) - LOP3.LUT R0, R16, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2213 @ 0x8a50 (35408) - BSSY B0, 0x8b20 ;
 Instr 2214 @ 0x8a60 (35424) - ISETP.GT.U32.AND P0, PT, R6, 0x43efffff, PT ;
 Instr 2215 @ 0x8a70 (35440) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2216 @ 0x8a80 (35456) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 592 - num instructions 1
 Instr 2217 @ 0x8a90 (35472) - @P0 BRA 0x8b10 ;
Basic block id 593 - num instructions 7
 Instr 2218 @ 0x8aa0 (35488) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
 Instr 2219 @ 0x8ab0 (35504) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R16 ;
 Instr 2220 @ 0x8ac0 (35520) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2221 @ 0x8ad0 (35536) - @P0 IADD3 R0, R16, 0x407ffff, R3 ;
 Instr 2222 @ 0x8ae0 (35552) - @!P0 FADD R3, R6, 16384 ;
 Instr 2223 @ 0x8af0 (35568) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2224 @ 0x8b00 (35584) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 594 - num instructions 4
 Instr 2225 @ 0x8b10 (35600) - BSYNC B0 ;
 Instr 2226 @ 0x8b20 (35616) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2227 @ 0x8b30 (35632) - STG.E.U8.SYS [R4], R7 ;
 Instr 2228 @ 0x8b40 (35648) - BRA 0x93d0 ;
Basic block id 595 - num instructions 5
 Instr 2229 @ 0x8b50 (35664) - LOP3.LUT R6, R16, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2230 @ 0x8b60 (35680) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2231 @ 0x8b70 (35696) - BSSY B0, 0x8c60 ;
 Instr 2232 @ 0x8b80 (35712) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 2233 @ 0x8b90 (35728) - @P0 BRA 0x8c20 ;
Basic block id 596 - num instructions 8
 Instr 2234 @ 0x8ba0 (35744) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
 Instr 2235 @ 0x8bb0 (35760) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R16 ;
 Instr 2236 @ 0x8bc0 (35776) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2237 @ 0x8bd0 (35792) - @P0 IADD3 R0, R16, 0x80fffff, R3 ;
 Instr 2238 @ 0x8be0 (35808) - @!P0 FADD R3, R6, 128 ;
 Instr 2239 @ 0x8bf0 (35824) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2240 @ 0x8c00 (35840) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2241 @ 0x8c10 (35856) - BRA 0x8c50 ;
Basic block id 597 - num instructions 3
 Instr 2242 @ 0x8c20 (35872) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2243 @ 0x8c30 (35888) - ISETP.GT.U32.AND P0, PT, R6, 0x7f800000, PT ;
 Instr 2244 @ 0x8c40 (35904) - SEL R0, R0, 0x7c, P0 ;
Basic block id 598 - num instructions 6
 Instr 2245 @ 0x8c50 (35920) - BSYNC B0 ;
 Instr 2246 @ 0x8c60 (35936) - LOP3.LUT R16, R16, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2247 @ 0x8c70 (35952) - SHF.R.U32.HI R3, RZ, 0x18, R16 ;
 Instr 2248 @ 0x8c80 (35968) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2249 @ 0x8c90 (35984) - STG.E.U8.SYS [R4], R3 ;
 Instr 2250 @ 0x8ca0 (36000) - BRA 0x93d0 ;
Basic block id 599 - num instructions 8
 Instr 2251 @ 0x8cb0 (36016) - FSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2252 @ 0x8cc0 (36032) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2253 @ 0x8cd0 (36048) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R16 ;
 Instr 2254 @ 0x8ce0 (36064) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2255 @ 0x8cf0 (36080) - @!P0 IADD3 R7, R16, 0x7fff, R7 ;
 Instr 2256 @ 0x8d00 (36096) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2257 @ 0x8d10 (36112) - STG.E.U16.SYS [R4], R3 ;
 Instr 2258 @ 0x8d20 (36128) - BRA 0x93d0 ;
Basic block id 600 - num instructions 2
 Instr 2259 @ 0x8d30 (36144) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 2260 @ 0x8d40 (36160) - @P0 BRA 0x9100 ;
Basic block id 601 - num instructions 2
 Instr 2261 @ 0x8d50 (36176) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 2262 @ 0x8d60 (36192) - @!P0 BRA 0x8f70 ;
Basic block id 602 - num instructions 2
 Instr 2263 @ 0x8d70 (36208) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 2264 @ 0x8d80 (36224) - @!P0 BRA 0x8de0 ;
Basic block id 603 - num instructions 2
 Instr 2265 @ 0x8d90 (36240) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 2266 @ 0x8da0 (36256) - @P0 BRA 0x9250 ;
Basic block id 604 - num instructions 3
 Instr 2267 @ 0x8db0 (36272) - F2I.U32.TRUNC.NTZ R3, R16 ;
 Instr 2268 @ 0x8dc0 (36288) - STG.E.U16.SYS [R4], R3 ;
 Instr 2269 @ 0x8dd0 (36304) - BRA 0x93d0 ;
Basic block id 605 - num instructions 6
 Instr 2270 @ 0x8de0 (36320) - LOP3.LUT R6, R16, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2271 @ 0x8df0 (36336) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2272 @ 0x8e00 (36352) - BSSY B0, 0x8f50 ;
 Instr 2273 @ 0x8e10 (36368) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2274 @ 0x8e20 (36384) - ISETP.GT.U32.AND P0, PT, R6, 0x437fffff, PT ;
 Instr 2275 @ 0x8e30 (36400) - @P0 BRA 0x8f40 ;
Basic block id 606 - num instructions 2
 Instr 2276 @ 0x8e40 (36416) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
 Instr 2277 @ 0x8e50 (36432) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R16 ;
Basic block id 607 - num instructions 5
 Instr 2278 @ 0x8e60 (36448) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2279 @ 0x8e70 (36464) - @P0 IADD3 R0, R16, 0x487ffff, R3 ;
 Instr 2280 @ 0x8e80 (36480) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2281 @ 0x8e90 (36496) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2282 @ 0x8ea0 (36512) - @P0 BRA 0x8f00 ;
Basic block id 608 - num instructions 5
 Instr 2283 @ 0x8eb0 (36528) - FADD R0, R6, 8192 ;
 Instr 2284 @ 0x8ec0 (36544) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2285 @ 0x8ed0 (36560) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2286 @ 0x8ee0 (36576) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2287 @ 0x8ef0 (36592) - @!P0 BRA 0x8f40 ;
Basic block id 609 - num instructions 4
 Instr 2288 @ 0x8f00 (36608) - LOP3.LUT R16, R16, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2289 @ 0x8f10 (36624) - SHF.R.U32.HI R16, RZ, 0x18, R16 ;
 Instr 2290 @ 0x8f20 (36640) - LOP3.LUT R3, R3, R16, RZ, 0xfc, !PT ;
 Instr 2291 @ 0x8f30 (36656) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 610 - num instructions 3
 Instr 2292 @ 0x8f40 (36672) - BSYNC B0 ;
 Instr 2293 @ 0x8f50 (36688) - STG.E.U8.SYS [R4], R0 ;
 Instr 2294 @ 0x8f60 (36704) - BRA 0x93d0 ;
Basic block id 611 - num instructions 6
 Instr 2295 @ 0x8f70 (36720) - LOP3.LUT R6, R16, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2296 @ 0x8f80 (36736) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2297 @ 0x8f90 (36752) - BSSY B0, 0x90e0 ;
 Instr 2298 @ 0x8fa0 (36768) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2299 @ 0x8fb0 (36784) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 2300 @ 0x8fc0 (36800) - @P0 BRA 0x90d0 ;
Basic block id 612 - num instructions 2
 Instr 2301 @ 0x8fd0 (36816) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
 Instr 2302 @ 0x8fe0 (36832) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R16 ;
Basic block id 613 - num instructions 5
 Instr 2303 @ 0x8ff0 (36848) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2304 @ 0x9000 (36864) - @P0 IADD3 R0, R16, 0x88fffff, R3 ;
 Instr 2305 @ 0x9010 (36880) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2306 @ 0x9020 (36896) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2307 @ 0x9030 (36912) - @P0 BRA 0x9090 ;
Basic block id 614 - num instructions 5
 Instr 2308 @ 0x9040 (36928) - FADD R0, R6, 64 ;
 Instr 2309 @ 0x9050 (36944) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2310 @ 0x9060 (36960) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2311 @ 0x9070 (36976) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2312 @ 0x9080 (36992) - @!P0 BRA 0x90d0 ;
Basic block id 615 - num instructions 4
 Instr 2313 @ 0x9090 (37008) - LOP3.LUT R16, R16, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2314 @ 0x90a0 (37024) - SHF.R.U32.HI R16, RZ, 0x18, R16 ;
 Instr 2315 @ 0x90b0 (37040) - LOP3.LUT R3, R3, R16, RZ, 0xfc, !PT ;
 Instr 2316 @ 0x90c0 (37056) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 616 - num instructions 3
 Instr 2317 @ 0x90d0 (37072) - BSYNC B0 ;
 Instr 2318 @ 0x90e0 (37088) - STG.E.U8.SYS [R4], R0 ;
 Instr 2319 @ 0x90f0 (37104) - BRA 0x93d0 ;
Basic block id 617 - num instructions 2
 Instr 2320 @ 0x9100 (37120) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 2321 @ 0x9110 (37136) - @!P0 BRA 0x93b0 ;
Basic block id 618 - num instructions 2
 Instr 2322 @ 0x9120 (37152) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 2323 @ 0x9130 (37168) - @!P0 BRA 0x9380 ;
Basic block id 619 - num instructions 2
 Instr 2324 @ 0x9140 (37184) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 2325 @ 0x9150 (37200) - @P0 BRA 0x9250 ;
Basic block id 620 - num instructions 15
 Instr 2326 @ 0x9160 (37216) - SHF.R.U32.HI R6, RZ, 0x17, R16 ;
 Instr 2327 @ 0x9170 (37232) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2328 @ 0x9180 (37248) - LOP3.LUT R3, R6, 0xff, RZ, 0xc0, !PT ;
 Instr 2329 @ 0x9190 (37264) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2330 @ 0x91a0 (37280) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R16.reuse ;
 Instr 2331 @ 0x91b0 (37296) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R16, 0xf8, !PT ;
 Instr 2332 @ 0x91c0 (37312) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2333 @ 0x91d0 (37328) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2334 @ 0x91e0 (37344) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2335 @ 0x91f0 (37360) - @P2 IADD3 R0, R6, 0x1, RZ ;
 Instr 2336 @ 0x9200 (37376) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2337 @ 0x9210 (37392) - @!P0 IMAD.MOV R0, RZ, RZ, R6 ;
 Instr 2338 @ 0x9220 (37408) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2339 @ 0x9230 (37424) - STG.E.U8.SYS [R4], R3 ;
 Instr 2340 @ 0x9240 (37440) - BRA 0x93d0 ;
Basic block id 621 - num instructions 18
 Instr 2341 @ 0x9250 (37456) - UMOV UR4, 0xd33a2700 ;
 Instr 2342 @ 0x9260 (37472) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2343 @ 0x9270 (37488) - UMOV UR5, 0x7f88 ;
 Instr 2344 @ 0x9280 (37504) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2345 @ 0x9290 (37520) - UMOV UR6, 0xd33a2100 ;
 Instr 2346 @ 0x92a0 (37536) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2347 @ 0x92b0 (37552) - UMOV UR7, 0x7f88 ;
 Instr 2348 @ 0x92c0 (37568) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2349 @ 0x92d0 (37584) - UMOV UR8, 0xd33a0c00 ;
 Instr 2350 @ 0x92e0 (37600) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2351 @ 0x92f0 (37616) - UMOV UR9, 0x7f88 ;
 Instr 2352 @ 0x9300 (37632) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2353 @ 0x9310 (37648) - MOV R20, 0xd7faa870 ;
 Instr 2354 @ 0x9320 (37664) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2355 @ 0x9330 (37680) - MOV R21, 0x7f88 ;
 Instr 2356 @ 0x9340 (37696) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2357 @ 0x9350 (37712) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2358 @ 0x9360 (37728) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 622 - num instructions 1
 Instr 2359 @ 0x9370 (37744) - BRA 0x93d0 ;
Basic block id 623 - num instructions 3
 Instr 2360 @ 0x9380 (37760) - F2I.U64.TRUNC R16, R16 ;
 Instr 2361 @ 0x9390 (37776) - STG.E.64.SYS [R4], R16 ;
 Instr 2362 @ 0x93a0 (37792) - BRA 0x93d0 ;
Basic block id 624 - num instructions 2
 Instr 2363 @ 0x93b0 (37808) - F2I.U32.TRUNC.NTZ R3, R16 ;
 Instr 2364 @ 0x93c0 (37824) - STG.E.SYS [R4], R3 ;
Basic block id 625 - num instructions 3
 Instr 2365 @ 0x93d0 (37840) - IADD3 R0, R36, 0x100, RZ ;
 Instr 2366 @ 0x93e0 (37856) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 2367 @ 0x93f0 (37872) - @P0 EXIT ;
Basic block id 626 - num instructions 6
 Instr 2368 @ 0x9400 (37888) - IADD3 R0, R2, 0x80, RZ ;
 Instr 2369 @ 0x9410 (37904) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 2370 @ 0x9420 (37920) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 2371 @ 0x9430 (37936) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 2372 @ 0x9440 (37952) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2373 @ 0x9450 (37968) - @P1 BRA 0x9800 ;
Basic block id 627 - num instructions 3
 Instr 2374 @ 0x9460 (37984) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2375 @ 0x9470 (38000) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2376 @ 0x9480 (38016) - @P0 BRA 0x9650 ;
Basic block id 628 - num instructions 2
 Instr 2377 @ 0x9490 (38032) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2378 @ 0x94a0 (38048) - @P0 BRA 0x9560 ;
Basic block id 629 - num instructions 2
 Instr 2379 @ 0x94b0 (38064) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 2380 @ 0x94c0 (38080) - @!P0 BRA 0x9520 ;
Basic block id 630 - num instructions 2
 Instr 2381 @ 0x94d0 (38096) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2382 @ 0x94e0 (38112) - @P0 BRA 0xa1a0 ;
Basic block id 631 - num instructions 3
 Instr 2383 @ 0x94f0 (38128) - F2I.TRUNC.NTZ R3, R18 ;
 Instr 2384 @ 0x9500 (38144) - STG.E.U8.SYS [R4], R3 ;
 Instr 2385 @ 0x9510 (38160) - BRA 0xa320 ;
Basic block id 632 - num instructions 4
 Instr 2386 @ 0x9520 (38176) - F2I.S64.TRUNC R18, R18 ;
 Instr 2387 @ 0x9530 (38192) - IMAD.MOV.U32 R3, RZ, RZ, R18 ;
 Instr 2388 @ 0x9540 (38208) - STG.E.U8.SYS [R4], R3 ;
 Instr 2389 @ 0x9550 (38224) - BRA 0xa320 ;
Basic block id 633 - num instructions 2
 Instr 2390 @ 0x9560 (38240) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 2391 @ 0x9570 (38256) - @!P0 BRA 0x9620 ;
Basic block id 634 - num instructions 2
 Instr 2392 @ 0x9580 (38272) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 2393 @ 0x9590 (38288) - @!P0 BRA 0x95f0 ;
Basic block id 635 - num instructions 2
 Instr 2394 @ 0x95a0 (38304) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 2395 @ 0x95b0 (38320) - @P0 BRA 0xa1a0 ;
Basic block id 636 - num instructions 3
 Instr 2396 @ 0x95c0 (38336) - F2I.S64.TRUNC R18, R18 ;
 Instr 2397 @ 0x95d0 (38352) - STG.E.64.SYS [R4], R18 ;
 Instr 2398 @ 0x95e0 (38368) - BRA 0xa320 ;
Basic block id 637 - num instructions 3
 Instr 2399 @ 0x95f0 (38384) - F2I.TRUNC.NTZ R3, R18 ;
 Instr 2400 @ 0x9600 (38400) - STG.E.SYS [R4], R3 ;
 Instr 2401 @ 0x9610 (38416) - BRA 0xa320 ;
Basic block id 638 - num instructions 3
 Instr 2402 @ 0x9620 (38432) - F2I.TRUNC.NTZ R3, R18 ;
 Instr 2403 @ 0x9630 (38448) - STG.E.U16.SYS [R4], R3 ;
 Instr 2404 @ 0x9640 (38464) - BRA 0xa320 ;
Basic block id 639 - num instructions 2
 Instr 2405 @ 0x9650 (38480) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 2406 @ 0x9660 (38496) - @P0 BRA 0x9700 ;
Basic block id 640 - num instructions 2
 Instr 2407 @ 0x9670 (38512) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 2408 @ 0x9680 (38528) - @!P0 BRA 0x96d0 ;
Basic block id 641 - num instructions 2
 Instr 2409 @ 0x9690 (38544) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 2410 @ 0x96a0 (38560) - @P0 BRA 0xa1a0 ;
Basic block id 642 - num instructions 2
 Instr 2411 @ 0x96b0 (38576) - STG.E.SYS [R4], R18 ;
 Instr 2412 @ 0x96c0 (38592) - BRA 0xa320 ;
Basic block id 643 - num instructions 3
 Instr 2413 @ 0x96d0 (38608) - F2F.F16.F32 R3, R18 ;
 Instr 2414 @ 0x96e0 (38624) - STG.E.U16.SYS [R4], R3 ;
 Instr 2415 @ 0x96f0 (38640) - BRA 0xa320 ;
Basic block id 644 - num instructions 2
 Instr 2416 @ 0x9700 (38656) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 2417 @ 0x9710 (38672) - @!P0 BRA 0x97d0 ;
Basic block id 645 - num instructions 2
 Instr 2418 @ 0x9720 (38688) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 2419 @ 0x9730 (38704) - @!P0 BRA 0x9790 ;
Basic block id 646 - num instructions 2
 Instr 2420 @ 0x9740 (38720) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 2421 @ 0x9750 (38736) - @P0 BRA 0xa1a0 ;
Basic block id 647 - num instructions 3
 Instr 2422 @ 0x9760 (38752) - IMAD.MOV.U32 R19, RZ, RZ, RZ ;
 Instr 2423 @ 0x9770 (38768) - STG.E.64.SYS [R4], R18 ;
 Instr 2424 @ 0x9780 (38784) - BRA 0xa320 ;
Basic block id 648 - num instructions 4
 Instr 2425 @ 0x9790 (38800) - F2F.F16.F32 R3, R18 ;
 Instr 2426 @ 0x97a0 (38816) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2427 @ 0x97b0 (38832) - STG.E.SYS [R4], R3 ;
 Instr 2428 @ 0x97c0 (38848) - BRA 0xa320 ;
Basic block id 649 - num instructions 3
 Instr 2429 @ 0x97d0 (38864) - F2F.F64.F32 R18, R18 ;
 Instr 2430 @ 0x97e0 (38880) - STG.E.64.SYS [R4], R18 ;
 Instr 2431 @ 0x97f0 (38896) - BRA 0xa320 ;
Basic block id 650 - num instructions 3
 Instr 2432 @ 0x9800 (38912) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2433 @ 0x9810 (38928) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 2434 @ 0x9820 (38944) - @P0 BRA 0x9c80 ;
Basic block id 651 - num instructions 2
 Instr 2435 @ 0x9830 (38960) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 2436 @ 0x9840 (38976) - @P0 BRA 0x9910 ;
Basic block id 652 - num instructions 2
 Instr 2437 @ 0x9850 (38992) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 2438 @ 0x9860 (39008) - @!P0 BRA 0x98d0 ;
Basic block id 653 - num instructions 2
 Instr 2439 @ 0x9870 (39024) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 2440 @ 0x9880 (39040) - @P0 BRA 0xa1a0 ;
Basic block id 654 - num instructions 4
 Instr 2441 @ 0x9890 (39056) - FSETP.NEU.AND P0, PT, R18, RZ, PT ;
 Instr 2442 @ 0x98a0 (39072) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2443 @ 0x98b0 (39088) - STG.E.U8.SYS [R4], R3 ;
 Instr 2444 @ 0x98c0 (39104) - BRA 0xa320 ;
Basic block id 655 - num instructions 4
 Instr 2445 @ 0x98d0 (39120) - F2F.F64.F32 R8, R18 ;
 Instr 2446 @ 0x98e0 (39136) - CS2R R10, SRZ ;
 Instr 2447 @ 0x98f0 (39152) - STG.E.128.SYS [R4], R8 ;
 Instr 2448 @ 0x9900 (39168) - BRA 0xa320 ;
Basic block id 656 - num instructions 2
 Instr 2449 @ 0x9910 (39184) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2450 @ 0x9920 (39200) - @!P0 BRA 0x9c00 ;
Basic block id 657 - num instructions 2
 Instr 2451 @ 0x9930 (39216) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2452 @ 0x9940 (39232) - @!P0 BRA 0x9aa0 ;
Basic block id 658 - num instructions 2
 Instr 2453 @ 0x9950 (39248) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2454 @ 0x9960 (39264) - @P0 BRA 0xa1a0 ;
Basic block id 659 - num instructions 7
 Instr 2455 @ 0x9970 (39280) - LOP3.LUT R6, R18.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2456 @ 0x9980 (39296) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2457 @ 0x9990 (39312) - LOP3.LUT R0, R18, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2458 @ 0x99a0 (39328) - BSSY B0, 0x9a70 ;
 Instr 2459 @ 0x99b0 (39344) - ISETP.GT.U32.AND P0, PT, R6, 0x43efffff, PT ;
 Instr 2460 @ 0x99c0 (39360) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2461 @ 0x99d0 (39376) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 660 - num instructions 1
 Instr 2462 @ 0x99e0 (39392) - @P0 BRA 0x9a60 ;
Basic block id 661 - num instructions 7
 Instr 2463 @ 0x99f0 (39408) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
 Instr 2464 @ 0x9a00 (39424) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R18 ;
 Instr 2465 @ 0x9a10 (39440) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2466 @ 0x9a20 (39456) - @P0 IADD3 R0, R18, 0x407ffff, R3 ;
 Instr 2467 @ 0x9a30 (39472) - @!P0 FADD R3, R6, 16384 ;
 Instr 2468 @ 0x9a40 (39488) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2469 @ 0x9a50 (39504) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 662 - num instructions 4
 Instr 2470 @ 0x9a60 (39520) - BSYNC B0 ;
 Instr 2471 @ 0x9a70 (39536) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2472 @ 0x9a80 (39552) - STG.E.U8.SYS [R4], R7 ;
 Instr 2473 @ 0x9a90 (39568) - BRA 0xa320 ;
Basic block id 663 - num instructions 5
 Instr 2474 @ 0x9aa0 (39584) - LOP3.LUT R6, R18, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2475 @ 0x9ab0 (39600) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2476 @ 0x9ac0 (39616) - BSSY B0, 0x9bb0 ;
 Instr 2477 @ 0x9ad0 (39632) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 2478 @ 0x9ae0 (39648) - @P0 BRA 0x9b70 ;
Basic block id 664 - num instructions 8
 Instr 2479 @ 0x9af0 (39664) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
 Instr 2480 @ 0x9b00 (39680) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R18 ;
 Instr 2481 @ 0x9b10 (39696) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2482 @ 0x9b20 (39712) - @P0 IADD3 R0, R18, 0x80fffff, R3 ;
 Instr 2483 @ 0x9b30 (39728) - @!P0 FADD R3, R6, 128 ;
 Instr 2484 @ 0x9b40 (39744) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2485 @ 0x9b50 (39760) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2486 @ 0x9b60 (39776) - BRA 0x9ba0 ;
Basic block id 665 - num instructions 3
 Instr 2487 @ 0x9b70 (39792) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2488 @ 0x9b80 (39808) - ISETP.GT.U32.AND P0, PT, R6, 0x7f800000, PT ;
 Instr 2489 @ 0x9b90 (39824) - SEL R0, R0, 0x7c, P0 ;
Basic block id 666 - num instructions 6
 Instr 2490 @ 0x9ba0 (39840) - BSYNC B0 ;
 Instr 2491 @ 0x9bb0 (39856) - LOP3.LUT R18, R18, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2492 @ 0x9bc0 (39872) - SHF.R.U32.HI R3, RZ, 0x18, R18 ;
 Instr 2493 @ 0x9bd0 (39888) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2494 @ 0x9be0 (39904) - STG.E.U8.SYS [R4], R3 ;
 Instr 2495 @ 0x9bf0 (39920) - BRA 0xa320 ;
Basic block id 667 - num instructions 8
 Instr 2496 @ 0x9c00 (39936) - FSETP.GTU.AND P0, PT, |R18|, +INF , PT ;
 Instr 2497 @ 0x9c10 (39952) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2498 @ 0x9c20 (39968) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R18 ;
 Instr 2499 @ 0x9c30 (39984) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2500 @ 0x9c40 (40000) - @!P0 IADD3 R7, R18, 0x7fff, R7 ;
 Instr 2501 @ 0x9c50 (40016) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2502 @ 0x9c60 (40032) - STG.E.U16.SYS [R4], R3 ;
 Instr 2503 @ 0x9c70 (40048) - BRA 0xa320 ;
Basic block id 668 - num instructions 2
 Instr 2504 @ 0x9c80 (40064) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 2505 @ 0x9c90 (40080) - @P0 BRA 0xa050 ;
Basic block id 669 - num instructions 2
 Instr 2506 @ 0x9ca0 (40096) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 2507 @ 0x9cb0 (40112) - @!P0 BRA 0x9ec0 ;
Basic block id 670 - num instructions 2
 Instr 2508 @ 0x9cc0 (40128) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 2509 @ 0x9cd0 (40144) - @!P0 BRA 0x9d30 ;
Basic block id 671 - num instructions 2
 Instr 2510 @ 0x9ce0 (40160) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 2511 @ 0x9cf0 (40176) - @P0 BRA 0xa1a0 ;
Basic block id 672 - num instructions 3
 Instr 2512 @ 0x9d00 (40192) - F2I.U32.TRUNC.NTZ R3, R18 ;
 Instr 2513 @ 0x9d10 (40208) - STG.E.U16.SYS [R4], R3 ;
 Instr 2514 @ 0x9d20 (40224) - BRA 0xa320 ;
Basic block id 673 - num instructions 6
 Instr 2515 @ 0x9d30 (40240) - LOP3.LUT R6, R18, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2516 @ 0x9d40 (40256) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2517 @ 0x9d50 (40272) - BSSY B0, 0x9ea0 ;
 Instr 2518 @ 0x9d60 (40288) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2519 @ 0x9d70 (40304) - ISETP.GT.U32.AND P0, PT, R6, 0x437fffff, PT ;
 Instr 2520 @ 0x9d80 (40320) - @P0 BRA 0x9e90 ;
Basic block id 674 - num instructions 2
 Instr 2521 @ 0x9d90 (40336) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
 Instr 2522 @ 0x9da0 (40352) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R18 ;
Basic block id 675 - num instructions 5
 Instr 2523 @ 0x9db0 (40368) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2524 @ 0x9dc0 (40384) - @P0 IADD3 R0, R18, 0x487ffff, R3 ;
 Instr 2525 @ 0x9dd0 (40400) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2526 @ 0x9de0 (40416) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2527 @ 0x9df0 (40432) - @P0 BRA 0x9e50 ;
Basic block id 676 - num instructions 5
 Instr 2528 @ 0x9e00 (40448) - FADD R0, R6, 8192 ;
 Instr 2529 @ 0x9e10 (40464) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2530 @ 0x9e20 (40480) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2531 @ 0x9e30 (40496) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2532 @ 0x9e40 (40512) - @!P0 BRA 0x9e90 ;
Basic block id 677 - num instructions 4
 Instr 2533 @ 0x9e50 (40528) - LOP3.LUT R18, R18, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2534 @ 0x9e60 (40544) - SHF.R.U32.HI R18, RZ, 0x18, R18 ;
 Instr 2535 @ 0x9e70 (40560) - LOP3.LUT R3, R3, R18, RZ, 0xfc, !PT ;
 Instr 2536 @ 0x9e80 (40576) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 678 - num instructions 3
 Instr 2537 @ 0x9e90 (40592) - BSYNC B0 ;
 Instr 2538 @ 0x9ea0 (40608) - STG.E.U8.SYS [R4], R0 ;
 Instr 2539 @ 0x9eb0 (40624) - BRA 0xa320 ;
Basic block id 679 - num instructions 6
 Instr 2540 @ 0x9ec0 (40640) - LOP3.LUT R6, R18, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2541 @ 0x9ed0 (40656) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2542 @ 0x9ee0 (40672) - BSSY B0, 0xa030 ;
 Instr 2543 @ 0x9ef0 (40688) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2544 @ 0x9f00 (40704) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 2545 @ 0x9f10 (40720) - @P0 BRA 0xa020 ;
Basic block id 680 - num instructions 2
 Instr 2546 @ 0x9f20 (40736) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
 Instr 2547 @ 0x9f30 (40752) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R18 ;
Basic block id 681 - num instructions 5
 Instr 2548 @ 0x9f40 (40768) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2549 @ 0x9f50 (40784) - @P0 IADD3 R0, R18, 0x88fffff, R3 ;
 Instr 2550 @ 0x9f60 (40800) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2551 @ 0x9f70 (40816) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2552 @ 0x9f80 (40832) - @P0 BRA 0x9fe0 ;
Basic block id 682 - num instructions 5
 Instr 2553 @ 0x9f90 (40848) - FADD R0, R6, 64 ;
 Instr 2554 @ 0x9fa0 (40864) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2555 @ 0x9fb0 (40880) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2556 @ 0x9fc0 (40896) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2557 @ 0x9fd0 (40912) - @!P0 BRA 0xa020 ;
Basic block id 683 - num instructions 4
 Instr 2558 @ 0x9fe0 (40928) - LOP3.LUT R18, R18, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2559 @ 0x9ff0 (40944) - SHF.R.U32.HI R18, RZ, 0x18, R18 ;
 Instr 2560 @ 0xa000 (40960) - LOP3.LUT R3, R3, R18, RZ, 0xfc, !PT ;
 Instr 2561 @ 0xa010 (40976) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 684 - num instructions 3
 Instr 2562 @ 0xa020 (40992) - BSYNC B0 ;
 Instr 2563 @ 0xa030 (41008) - STG.E.U8.SYS [R4], R0 ;
 Instr 2564 @ 0xa040 (41024) - BRA 0xa320 ;
Basic block id 685 - num instructions 2
 Instr 2565 @ 0xa050 (41040) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 2566 @ 0xa060 (41056) - @!P0 BRA 0xa300 ;
Basic block id 686 - num instructions 2
 Instr 2567 @ 0xa070 (41072) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 2568 @ 0xa080 (41088) - @!P0 BRA 0xa2d0 ;
Basic block id 687 - num instructions 2
 Instr 2569 @ 0xa090 (41104) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 2570 @ 0xa0a0 (41120) - @P0 BRA 0xa1a0 ;
Basic block id 688 - num instructions 15
 Instr 2571 @ 0xa0b0 (41136) - SHF.R.U32.HI R6, RZ, 0x17, R18 ;
 Instr 2572 @ 0xa0c0 (41152) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2573 @ 0xa0d0 (41168) - LOP3.LUT R3, R6, 0xff, RZ, 0xc0, !PT ;
 Instr 2574 @ 0xa0e0 (41184) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2575 @ 0xa0f0 (41200) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R18.reuse ;
 Instr 2576 @ 0xa100 (41216) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R18, 0xf8, !PT ;
 Instr 2577 @ 0xa110 (41232) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2578 @ 0xa120 (41248) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2579 @ 0xa130 (41264) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2580 @ 0xa140 (41280) - @P2 IADD3 R0, R6, 0x1, RZ ;
 Instr 2581 @ 0xa150 (41296) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2582 @ 0xa160 (41312) - @!P0 IMAD.MOV R0, RZ, RZ, R6 ;
 Instr 2583 @ 0xa170 (41328) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2584 @ 0xa180 (41344) - STG.E.U8.SYS [R4], R3 ;
 Instr 2585 @ 0xa190 (41360) - BRA 0xa320 ;
Basic block id 689 - num instructions 18
 Instr 2586 @ 0xa1a0 (41376) - UMOV UR4, 0xd33a2700 ;
 Instr 2587 @ 0xa1b0 (41392) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2588 @ 0xa1c0 (41408) - UMOV UR5, 0x7f88 ;
 Instr 2589 @ 0xa1d0 (41424) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2590 @ 0xa1e0 (41440) - UMOV UR6, 0xd33a2100 ;
 Instr 2591 @ 0xa1f0 (41456) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2592 @ 0xa200 (41472) - UMOV UR7, 0x7f88 ;
 Instr 2593 @ 0xa210 (41488) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2594 @ 0xa220 (41504) - UMOV UR8, 0xd33a0c00 ;
 Instr 2595 @ 0xa230 (41520) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2596 @ 0xa240 (41536) - UMOV UR9, 0x7f88 ;
 Instr 2597 @ 0xa250 (41552) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2598 @ 0xa260 (41568) - MOV R20, 0xd7fab7c0 ;
 Instr 2599 @ 0xa270 (41584) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2600 @ 0xa280 (41600) - MOV R21, 0x7f88 ;
 Instr 2601 @ 0xa290 (41616) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2602 @ 0xa2a0 (41632) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2603 @ 0xa2b0 (41648) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 690 - num instructions 1
 Instr 2604 @ 0xa2c0 (41664) - BRA 0xa320 ;
Basic block id 691 - num instructions 3
 Instr 2605 @ 0xa2d0 (41680) - F2I.U64.TRUNC R18, R18 ;
 Instr 2606 @ 0xa2e0 (41696) - STG.E.64.SYS [R4], R18 ;
 Instr 2607 @ 0xa2f0 (41712) - BRA 0xa320 ;
Basic block id 692 - num instructions 2
 Instr 2608 @ 0xa300 (41728) - F2I.U32.TRUNC.NTZ R3, R18 ;
 Instr 2609 @ 0xa310 (41744) - STG.E.SYS [R4], R3 ;
Basic block id 693 - num instructions 3
 Instr 2610 @ 0xa320 (41760) - IADD3 R0, R36, 0x180, RZ ;
 Instr 2611 @ 0xa330 (41776) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 2612 @ 0xa340 (41792) - @P0 EXIT ;
Basic block id 694 - num instructions 6
 Instr 2613 @ 0xa350 (41808) - IADD3 R0, R2, 0x100, RZ ;
 Instr 2614 @ 0xa360 (41824) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 2615 @ 0xa370 (41840) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 2616 @ 0xa380 (41856) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 2617 @ 0xa390 (41872) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2618 @ 0xa3a0 (41888) - @P1 BRA 0xa750 ;
Basic block id 695 - num instructions 3
 Instr 2619 @ 0xa3b0 (41904) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2620 @ 0xa3c0 (41920) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2621 @ 0xa3d0 (41936) - @P0 BRA 0xa5a0 ;
Basic block id 696 - num instructions 2
 Instr 2622 @ 0xa3e0 (41952) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2623 @ 0xa3f0 (41968) - @P0 BRA 0xa4b0 ;
Basic block id 697 - num instructions 2
 Instr 2624 @ 0xa400 (41984) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 2625 @ 0xa410 (42000) - @!P0 BRA 0xa470 ;
Basic block id 698 - num instructions 2
 Instr 2626 @ 0xa420 (42016) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2627 @ 0xa430 (42032) - @P0 BRA 0xb0f0 ;
Basic block id 699 - num instructions 3
 Instr 2628 @ 0xa440 (42048) - F2I.TRUNC.NTZ R3, R22 ;
 Instr 2629 @ 0xa450 (42064) - STG.E.U8.SYS [R4], R3 ;
 Instr 2630 @ 0xa460 (42080) - BRA 0xb270 ;
Basic block id 700 - num instructions 4
 Instr 2631 @ 0xa470 (42096) - F2I.S64.TRUNC R22, R22 ;
 Instr 2632 @ 0xa480 (42112) - IMAD.MOV.U32 R3, RZ, RZ, R22 ;
 Instr 2633 @ 0xa490 (42128) - STG.E.U8.SYS [R4], R3 ;
 Instr 2634 @ 0xa4a0 (42144) - BRA 0xb270 ;
Basic block id 701 - num instructions 2
 Instr 2635 @ 0xa4b0 (42160) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 2636 @ 0xa4c0 (42176) - @!P0 BRA 0xa570 ;
Basic block id 702 - num instructions 2
 Instr 2637 @ 0xa4d0 (42192) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 2638 @ 0xa4e0 (42208) - @!P0 BRA 0xa540 ;
Basic block id 703 - num instructions 2
 Instr 2639 @ 0xa4f0 (42224) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 2640 @ 0xa500 (42240) - @P0 BRA 0xb0f0 ;
Basic block id 704 - num instructions 3
 Instr 2641 @ 0xa510 (42256) - F2I.S64.TRUNC R22, R22 ;
 Instr 2642 @ 0xa520 (42272) - STG.E.64.SYS [R4], R22 ;
 Instr 2643 @ 0xa530 (42288) - BRA 0xb270 ;
Basic block id 705 - num instructions 3
 Instr 2644 @ 0xa540 (42304) - F2I.TRUNC.NTZ R3, R22 ;
 Instr 2645 @ 0xa550 (42320) - STG.E.SYS [R4], R3 ;
 Instr 2646 @ 0xa560 (42336) - BRA 0xb270 ;
Basic block id 706 - num instructions 3
 Instr 2647 @ 0xa570 (42352) - F2I.TRUNC.NTZ R3, R22 ;
 Instr 2648 @ 0xa580 (42368) - STG.E.U16.SYS [R4], R3 ;
 Instr 2649 @ 0xa590 (42384) - BRA 0xb270 ;
Basic block id 707 - num instructions 2
 Instr 2650 @ 0xa5a0 (42400) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 2651 @ 0xa5b0 (42416) - @P0 BRA 0xa650 ;
Basic block id 708 - num instructions 2
 Instr 2652 @ 0xa5c0 (42432) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 2653 @ 0xa5d0 (42448) - @!P0 BRA 0xa620 ;
Basic block id 709 - num instructions 2
 Instr 2654 @ 0xa5e0 (42464) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 2655 @ 0xa5f0 (42480) - @P0 BRA 0xb0f0 ;
Basic block id 710 - num instructions 2
 Instr 2656 @ 0xa600 (42496) - STG.E.SYS [R4], R22 ;
 Instr 2657 @ 0xa610 (42512) - BRA 0xb270 ;
Basic block id 711 - num instructions 3
 Instr 2658 @ 0xa620 (42528) - F2F.F16.F32 R3, R22 ;
 Instr 2659 @ 0xa630 (42544) - STG.E.U16.SYS [R4], R3 ;
 Instr 2660 @ 0xa640 (42560) - BRA 0xb270 ;
Basic block id 712 - num instructions 2
 Instr 2661 @ 0xa650 (42576) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 2662 @ 0xa660 (42592) - @!P0 BRA 0xa720 ;
Basic block id 713 - num instructions 2
 Instr 2663 @ 0xa670 (42608) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 2664 @ 0xa680 (42624) - @!P0 BRA 0xa6e0 ;
Basic block id 714 - num instructions 2
 Instr 2665 @ 0xa690 (42640) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 2666 @ 0xa6a0 (42656) - @P0 BRA 0xb0f0 ;
Basic block id 715 - num instructions 3
 Instr 2667 @ 0xa6b0 (42672) - IMAD.MOV.U32 R23, RZ, RZ, RZ ;
 Instr 2668 @ 0xa6c0 (42688) - STG.E.64.SYS [R4], R22 ;
 Instr 2669 @ 0xa6d0 (42704) - BRA 0xb270 ;
Basic block id 716 - num instructions 4
 Instr 2670 @ 0xa6e0 (42720) - F2F.F16.F32 R3, R22 ;
 Instr 2671 @ 0xa6f0 (42736) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2672 @ 0xa700 (42752) - STG.E.SYS [R4], R3 ;
 Instr 2673 @ 0xa710 (42768) - BRA 0xb270 ;
Basic block id 717 - num instructions 3
 Instr 2674 @ 0xa720 (42784) - F2F.F64.F32 R22, R22 ;
 Instr 2675 @ 0xa730 (42800) - STG.E.64.SYS [R4], R22 ;
 Instr 2676 @ 0xa740 (42816) - BRA 0xb270 ;
Basic block id 718 - num instructions 3
 Instr 2677 @ 0xa750 (42832) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2678 @ 0xa760 (42848) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 2679 @ 0xa770 (42864) - @P0 BRA 0xabd0 ;
Basic block id 719 - num instructions 2
 Instr 2680 @ 0xa780 (42880) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 2681 @ 0xa790 (42896) - @P0 BRA 0xa860 ;
Basic block id 720 - num instructions 2
 Instr 2682 @ 0xa7a0 (42912) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 2683 @ 0xa7b0 (42928) - @!P0 BRA 0xa820 ;
Basic block id 721 - num instructions 2
 Instr 2684 @ 0xa7c0 (42944) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 2685 @ 0xa7d0 (42960) - @P0 BRA 0xb0f0 ;
Basic block id 722 - num instructions 4
 Instr 2686 @ 0xa7e0 (42976) - FSETP.NEU.AND P0, PT, R22, RZ, PT ;
 Instr 2687 @ 0xa7f0 (42992) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2688 @ 0xa800 (43008) - STG.E.U8.SYS [R4], R3 ;
 Instr 2689 @ 0xa810 (43024) - BRA 0xb270 ;
Basic block id 723 - num instructions 4
 Instr 2690 @ 0xa820 (43040) - F2F.F64.F32 R8, R22 ;
 Instr 2691 @ 0xa830 (43056) - CS2R R10, SRZ ;
 Instr 2692 @ 0xa840 (43072) - STG.E.128.SYS [R4], R8 ;
 Instr 2693 @ 0xa850 (43088) - BRA 0xb270 ;
Basic block id 724 - num instructions 2
 Instr 2694 @ 0xa860 (43104) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2695 @ 0xa870 (43120) - @!P0 BRA 0xab50 ;
Basic block id 725 - num instructions 2
 Instr 2696 @ 0xa880 (43136) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2697 @ 0xa890 (43152) - @!P0 BRA 0xa9f0 ;
Basic block id 726 - num instructions 2
 Instr 2698 @ 0xa8a0 (43168) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2699 @ 0xa8b0 (43184) - @P0 BRA 0xb0f0 ;
Basic block id 727 - num instructions 7
 Instr 2700 @ 0xa8c0 (43200) - LOP3.LUT R6, R22.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2701 @ 0xa8d0 (43216) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2702 @ 0xa8e0 (43232) - LOP3.LUT R0, R22, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2703 @ 0xa8f0 (43248) - BSSY B0, 0xa9c0 ;
 Instr 2704 @ 0xa900 (43264) - ISETP.GT.U32.AND P0, PT, R6, 0x43efffff, PT ;
 Instr 2705 @ 0xa910 (43280) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2706 @ 0xa920 (43296) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 728 - num instructions 1
 Instr 2707 @ 0xa930 (43312) - @P0 BRA 0xa9b0 ;
Basic block id 729 - num instructions 7
 Instr 2708 @ 0xa940 (43328) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
 Instr 2709 @ 0xa950 (43344) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R22 ;
 Instr 2710 @ 0xa960 (43360) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2711 @ 0xa970 (43376) - @P0 IADD3 R0, R22, 0x407ffff, R3 ;
 Instr 2712 @ 0xa980 (43392) - @!P0 FADD R3, R6, 16384 ;
 Instr 2713 @ 0xa990 (43408) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2714 @ 0xa9a0 (43424) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 730 - num instructions 4
 Instr 2715 @ 0xa9b0 (43440) - BSYNC B0 ;
 Instr 2716 @ 0xa9c0 (43456) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2717 @ 0xa9d0 (43472) - STG.E.U8.SYS [R4], R7 ;
 Instr 2718 @ 0xa9e0 (43488) - BRA 0xb270 ;
Basic block id 731 - num instructions 5
 Instr 2719 @ 0xa9f0 (43504) - LOP3.LUT R6, R22, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2720 @ 0xaa00 (43520) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2721 @ 0xaa10 (43536) - BSSY B0, 0xab00 ;
 Instr 2722 @ 0xaa20 (43552) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 2723 @ 0xaa30 (43568) - @P0 BRA 0xaac0 ;
Basic block id 732 - num instructions 8
 Instr 2724 @ 0xaa40 (43584) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
 Instr 2725 @ 0xaa50 (43600) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R22 ;
 Instr 2726 @ 0xaa60 (43616) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2727 @ 0xaa70 (43632) - @P0 IADD3 R0, R22, 0x80fffff, R3 ;
 Instr 2728 @ 0xaa80 (43648) - @!P0 FADD R3, R6, 128 ;
 Instr 2729 @ 0xaa90 (43664) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2730 @ 0xaaa0 (43680) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2731 @ 0xaab0 (43696) - BRA 0xaaf0 ;
Basic block id 733 - num instructions 3
 Instr 2732 @ 0xaac0 (43712) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2733 @ 0xaad0 (43728) - ISETP.GT.U32.AND P0, PT, R6, 0x7f800000, PT ;
 Instr 2734 @ 0xaae0 (43744) - SEL R0, R0, 0x7c, P0 ;
Basic block id 734 - num instructions 6
 Instr 2735 @ 0xaaf0 (43760) - BSYNC B0 ;
 Instr 2736 @ 0xab00 (43776) - LOP3.LUT R22, R22, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2737 @ 0xab10 (43792) - SHF.R.U32.HI R3, RZ, 0x18, R22 ;
 Instr 2738 @ 0xab20 (43808) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2739 @ 0xab30 (43824) - STG.E.U8.SYS [R4], R3 ;
 Instr 2740 @ 0xab40 (43840) - BRA 0xb270 ;
Basic block id 735 - num instructions 8
 Instr 2741 @ 0xab50 (43856) - FSETP.GTU.AND P0, PT, |R22|, +INF , PT ;
 Instr 2742 @ 0xab60 (43872) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2743 @ 0xab70 (43888) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R22 ;
 Instr 2744 @ 0xab80 (43904) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2745 @ 0xab90 (43920) - @!P0 IADD3 R7, R22, 0x7fff, R7 ;
 Instr 2746 @ 0xaba0 (43936) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2747 @ 0xabb0 (43952) - STG.E.U16.SYS [R4], R3 ;
 Instr 2748 @ 0xabc0 (43968) - BRA 0xb270 ;
Basic block id 736 - num instructions 2
 Instr 2749 @ 0xabd0 (43984) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 2750 @ 0xabe0 (44000) - @P0 BRA 0xafa0 ;
Basic block id 737 - num instructions 2
 Instr 2751 @ 0xabf0 (44016) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 2752 @ 0xac00 (44032) - @!P0 BRA 0xae10 ;
Basic block id 738 - num instructions 2
 Instr 2753 @ 0xac10 (44048) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 2754 @ 0xac20 (44064) - @!P0 BRA 0xac80 ;
Basic block id 739 - num instructions 2
 Instr 2755 @ 0xac30 (44080) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 2756 @ 0xac40 (44096) - @P0 BRA 0xb0f0 ;
Basic block id 740 - num instructions 3
 Instr 2757 @ 0xac50 (44112) - F2I.U32.TRUNC.NTZ R3, R22 ;
 Instr 2758 @ 0xac60 (44128) - STG.E.U16.SYS [R4], R3 ;
 Instr 2759 @ 0xac70 (44144) - BRA 0xb270 ;
Basic block id 741 - num instructions 6
 Instr 2760 @ 0xac80 (44160) - LOP3.LUT R6, R22, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2761 @ 0xac90 (44176) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2762 @ 0xaca0 (44192) - BSSY B0, 0xadf0 ;
 Instr 2763 @ 0xacb0 (44208) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2764 @ 0xacc0 (44224) - ISETP.GT.U32.AND P0, PT, R6, 0x437fffff, PT ;
 Instr 2765 @ 0xacd0 (44240) - @P0 BRA 0xade0 ;
Basic block id 742 - num instructions 2
 Instr 2766 @ 0xace0 (44256) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
 Instr 2767 @ 0xacf0 (44272) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R22 ;
Basic block id 743 - num instructions 5
 Instr 2768 @ 0xad00 (44288) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2769 @ 0xad10 (44304) - @P0 IADD3 R0, R22, 0x487ffff, R3 ;
 Instr 2770 @ 0xad20 (44320) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2771 @ 0xad30 (44336) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2772 @ 0xad40 (44352) - @P0 BRA 0xada0 ;
Basic block id 744 - num instructions 5
 Instr 2773 @ 0xad50 (44368) - FADD R0, R6, 8192 ;
 Instr 2774 @ 0xad60 (44384) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2775 @ 0xad70 (44400) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2776 @ 0xad80 (44416) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2777 @ 0xad90 (44432) - @!P0 BRA 0xade0 ;
Basic block id 745 - num instructions 4
 Instr 2778 @ 0xada0 (44448) - LOP3.LUT R22, R22, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2779 @ 0xadb0 (44464) - SHF.R.U32.HI R22, RZ, 0x18, R22 ;
 Instr 2780 @ 0xadc0 (44480) - LOP3.LUT R3, R3, R22, RZ, 0xfc, !PT ;
 Instr 2781 @ 0xadd0 (44496) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 746 - num instructions 3
 Instr 2782 @ 0xade0 (44512) - BSYNC B0 ;
 Instr 2783 @ 0xadf0 (44528) - STG.E.U8.SYS [R4], R0 ;
 Instr 2784 @ 0xae00 (44544) - BRA 0xb270 ;
Basic block id 747 - num instructions 6
 Instr 2785 @ 0xae10 (44560) - LOP3.LUT R6, R22, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2786 @ 0xae20 (44576) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2787 @ 0xae30 (44592) - BSSY B0, 0xaf80 ;
 Instr 2788 @ 0xae40 (44608) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2789 @ 0xae50 (44624) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 2790 @ 0xae60 (44640) - @P0 BRA 0xaf70 ;
Basic block id 748 - num instructions 2
 Instr 2791 @ 0xae70 (44656) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
 Instr 2792 @ 0xae80 (44672) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R22 ;
Basic block id 749 - num instructions 5
 Instr 2793 @ 0xae90 (44688) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2794 @ 0xaea0 (44704) - @P0 IADD3 R0, R22, 0x88fffff, R3 ;
 Instr 2795 @ 0xaeb0 (44720) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2796 @ 0xaec0 (44736) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2797 @ 0xaed0 (44752) - @P0 BRA 0xaf30 ;
Basic block id 750 - num instructions 5
 Instr 2798 @ 0xaee0 (44768) - FADD R0, R6, 64 ;
 Instr 2799 @ 0xaef0 (44784) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2800 @ 0xaf00 (44800) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2801 @ 0xaf10 (44816) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2802 @ 0xaf20 (44832) - @!P0 BRA 0xaf70 ;
Basic block id 751 - num instructions 4
 Instr 2803 @ 0xaf30 (44848) - LOP3.LUT R22, R22, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2804 @ 0xaf40 (44864) - SHF.R.U32.HI R22, RZ, 0x18, R22 ;
 Instr 2805 @ 0xaf50 (44880) - LOP3.LUT R3, R3, R22, RZ, 0xfc, !PT ;
 Instr 2806 @ 0xaf60 (44896) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 752 - num instructions 3
 Instr 2807 @ 0xaf70 (44912) - BSYNC B0 ;
 Instr 2808 @ 0xaf80 (44928) - STG.E.U8.SYS [R4], R0 ;
 Instr 2809 @ 0xaf90 (44944) - BRA 0xb270 ;
Basic block id 753 - num instructions 2
 Instr 2810 @ 0xafa0 (44960) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 2811 @ 0xafb0 (44976) - @!P0 BRA 0xb250 ;
Basic block id 754 - num instructions 2
 Instr 2812 @ 0xafc0 (44992) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 2813 @ 0xafd0 (45008) - @!P0 BRA 0xb220 ;
Basic block id 755 - num instructions 2
 Instr 2814 @ 0xafe0 (45024) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 2815 @ 0xaff0 (45040) - @P0 BRA 0xb0f0 ;
Basic block id 756 - num instructions 15
 Instr 2816 @ 0xb000 (45056) - SHF.R.U32.HI R6, RZ, 0x17, R22 ;
 Instr 2817 @ 0xb010 (45072) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2818 @ 0xb020 (45088) - LOP3.LUT R3, R6, 0xff, RZ, 0xc0, !PT ;
 Instr 2819 @ 0xb030 (45104) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2820 @ 0xb040 (45120) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R22.reuse ;
 Instr 2821 @ 0xb050 (45136) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R22, 0xf8, !PT ;
 Instr 2822 @ 0xb060 (45152) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2823 @ 0xb070 (45168) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2824 @ 0xb080 (45184) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2825 @ 0xb090 (45200) - @P2 IADD3 R0, R6, 0x1, RZ ;
 Instr 2826 @ 0xb0a0 (45216) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2827 @ 0xb0b0 (45232) - @!P0 IMAD.MOV R0, RZ, RZ, R6 ;
 Instr 2828 @ 0xb0c0 (45248) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2829 @ 0xb0d0 (45264) - STG.E.U8.SYS [R4], R3 ;
 Instr 2830 @ 0xb0e0 (45280) - BRA 0xb270 ;
Basic block id 757 - num instructions 18
 Instr 2831 @ 0xb0f0 (45296) - UMOV UR4, 0xd33a2700 ;
 Instr 2832 @ 0xb100 (45312) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2833 @ 0xb110 (45328) - UMOV UR5, 0x7f88 ;
 Instr 2834 @ 0xb120 (45344) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2835 @ 0xb130 (45360) - UMOV UR6, 0xd33a2100 ;
 Instr 2836 @ 0xb140 (45376) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2837 @ 0xb150 (45392) - UMOV UR7, 0x7f88 ;
 Instr 2838 @ 0xb160 (45408) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2839 @ 0xb170 (45424) - UMOV UR8, 0xd33a0c00 ;
 Instr 2840 @ 0xb180 (45440) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2841 @ 0xb190 (45456) - UMOV UR9, 0x7f88 ;
 Instr 2842 @ 0xb1a0 (45472) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2843 @ 0xb1b0 (45488) - MOV R20, 0xd7fac710 ;
 Instr 2844 @ 0xb1c0 (45504) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2845 @ 0xb1d0 (45520) - MOV R21, 0x7f88 ;
 Instr 2846 @ 0xb1e0 (45536) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2847 @ 0xb1f0 (45552) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2848 @ 0xb200 (45568) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 758 - num instructions 1
 Instr 2849 @ 0xb210 (45584) - BRA 0xb270 ;
Basic block id 759 - num instructions 3
 Instr 2850 @ 0xb220 (45600) - F2I.U64.TRUNC R22, R22 ;
 Instr 2851 @ 0xb230 (45616) - STG.E.64.SYS [R4], R22 ;
 Instr 2852 @ 0xb240 (45632) - BRA 0xb270 ;
Basic block id 760 - num instructions 2
 Instr 2853 @ 0xb250 (45648) - F2I.U32.TRUNC.NTZ R3, R22 ;
 Instr 2854 @ 0xb260 (45664) - STG.E.SYS [R4], R3 ;
Basic block id 761 - num instructions 3
 Instr 2855 @ 0xb270 (45680) - IADD3 R0, R36, 0x200, RZ ;
 Instr 2856 @ 0xb280 (45696) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 2857 @ 0xb290 (45712) - @P0 EXIT ;
Basic block id 762 - num instructions 6
 Instr 2858 @ 0xb2a0 (45728) - IADD3 R0, R2, 0x180, RZ ;
 Instr 2859 @ 0xb2b0 (45744) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 2860 @ 0xb2c0 (45760) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 2861 @ 0xb2d0 (45776) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 2862 @ 0xb2e0 (45792) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2863 @ 0xb2f0 (45808) - @P1 BRA 0xb6a0 ;
Basic block id 763 - num instructions 3
 Instr 2864 @ 0xb300 (45824) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2865 @ 0xb310 (45840) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2866 @ 0xb320 (45856) - @P0 BRA 0xb4f0 ;
Basic block id 764 - num instructions 2
 Instr 2867 @ 0xb330 (45872) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2868 @ 0xb340 (45888) - @P0 BRA 0xb400 ;
Basic block id 765 - num instructions 2
 Instr 2869 @ 0xb350 (45904) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 2870 @ 0xb360 (45920) - @!P0 BRA 0xb3c0 ;
Basic block id 766 - num instructions 2
 Instr 2871 @ 0xb370 (45936) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2872 @ 0xb380 (45952) - @P0 BRA 0xc040 ;
Basic block id 767 - num instructions 3
 Instr 2873 @ 0xb390 (45968) - F2I.TRUNC.NTZ R3, R24 ;
 Instr 2874 @ 0xb3a0 (45984) - STG.E.U8.SYS [R4], R3 ;
 Instr 2875 @ 0xb3b0 (46000) - BRA 0xc1c0 ;
Basic block id 768 - num instructions 4
 Instr 2876 @ 0xb3c0 (46016) - F2I.S64.TRUNC R24, R24 ;
 Instr 2877 @ 0xb3d0 (46032) - IMAD.MOV.U32 R3, RZ, RZ, R24 ;
 Instr 2878 @ 0xb3e0 (46048) - STG.E.U8.SYS [R4], R3 ;
 Instr 2879 @ 0xb3f0 (46064) - BRA 0xc1c0 ;
Basic block id 769 - num instructions 2
 Instr 2880 @ 0xb400 (46080) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 2881 @ 0xb410 (46096) - @!P0 BRA 0xb4c0 ;
Basic block id 770 - num instructions 2
 Instr 2882 @ 0xb420 (46112) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 2883 @ 0xb430 (46128) - @!P0 BRA 0xb490 ;
Basic block id 771 - num instructions 2
 Instr 2884 @ 0xb440 (46144) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 2885 @ 0xb450 (46160) - @P0 BRA 0xc040 ;
Basic block id 772 - num instructions 3
 Instr 2886 @ 0xb460 (46176) - F2I.S64.TRUNC R24, R24 ;
 Instr 2887 @ 0xb470 (46192) - STG.E.64.SYS [R4], R24 ;
 Instr 2888 @ 0xb480 (46208) - BRA 0xc1c0 ;
Basic block id 773 - num instructions 3
 Instr 2889 @ 0xb490 (46224) - F2I.TRUNC.NTZ R3, R24 ;
 Instr 2890 @ 0xb4a0 (46240) - STG.E.SYS [R4], R3 ;
 Instr 2891 @ 0xb4b0 (46256) - BRA 0xc1c0 ;
Basic block id 774 - num instructions 3
 Instr 2892 @ 0xb4c0 (46272) - F2I.TRUNC.NTZ R3, R24 ;
 Instr 2893 @ 0xb4d0 (46288) - STG.E.U16.SYS [R4], R3 ;
 Instr 2894 @ 0xb4e0 (46304) - BRA 0xc1c0 ;
Basic block id 775 - num instructions 2
 Instr 2895 @ 0xb4f0 (46320) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 2896 @ 0xb500 (46336) - @P0 BRA 0xb5a0 ;
Basic block id 776 - num instructions 2
 Instr 2897 @ 0xb510 (46352) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 2898 @ 0xb520 (46368) - @!P0 BRA 0xb570 ;
Basic block id 777 - num instructions 2
 Instr 2899 @ 0xb530 (46384) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 2900 @ 0xb540 (46400) - @P0 BRA 0xc040 ;
Basic block id 778 - num instructions 2
 Instr 2901 @ 0xb550 (46416) - STG.E.SYS [R4], R24 ;
 Instr 2902 @ 0xb560 (46432) - BRA 0xc1c0 ;
Basic block id 779 - num instructions 3
 Instr 2903 @ 0xb570 (46448) - F2F.F16.F32 R3, R24 ;
 Instr 2904 @ 0xb580 (46464) - STG.E.U16.SYS [R4], R3 ;
 Instr 2905 @ 0xb590 (46480) - BRA 0xc1c0 ;
Basic block id 780 - num instructions 2
 Instr 2906 @ 0xb5a0 (46496) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 2907 @ 0xb5b0 (46512) - @!P0 BRA 0xb670 ;
Basic block id 781 - num instructions 2
 Instr 2908 @ 0xb5c0 (46528) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 2909 @ 0xb5d0 (46544) - @!P0 BRA 0xb630 ;
Basic block id 782 - num instructions 2
 Instr 2910 @ 0xb5e0 (46560) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 2911 @ 0xb5f0 (46576) - @P0 BRA 0xc040 ;
Basic block id 783 - num instructions 3
 Instr 2912 @ 0xb600 (46592) - IMAD.MOV.U32 R25, RZ, RZ, RZ ;
 Instr 2913 @ 0xb610 (46608) - STG.E.64.SYS [R4], R24 ;
 Instr 2914 @ 0xb620 (46624) - BRA 0xc1c0 ;
Basic block id 784 - num instructions 4
 Instr 2915 @ 0xb630 (46640) - F2F.F16.F32 R3, R24 ;
 Instr 2916 @ 0xb640 (46656) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2917 @ 0xb650 (46672) - STG.E.SYS [R4], R3 ;
 Instr 2918 @ 0xb660 (46688) - BRA 0xc1c0 ;
Basic block id 785 - num instructions 3
 Instr 2919 @ 0xb670 (46704) - F2F.F64.F32 R24, R24 ;
 Instr 2920 @ 0xb680 (46720) - STG.E.64.SYS [R4], R24 ;
 Instr 2921 @ 0xb690 (46736) - BRA 0xc1c0 ;
Basic block id 786 - num instructions 3
 Instr 2922 @ 0xb6a0 (46752) - PRMT R0, R31, 0x9910, RZ ;
 Instr 2923 @ 0xb6b0 (46768) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 2924 @ 0xb6c0 (46784) - @P0 BRA 0xbb20 ;
Basic block id 787 - num instructions 2
 Instr 2925 @ 0xb6d0 (46800) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 2926 @ 0xb6e0 (46816) - @P0 BRA 0xb7b0 ;
Basic block id 788 - num instructions 2
 Instr 2927 @ 0xb6f0 (46832) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 2928 @ 0xb700 (46848) - @!P0 BRA 0xb770 ;
Basic block id 789 - num instructions 2
 Instr 2929 @ 0xb710 (46864) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 2930 @ 0xb720 (46880) - @P0 BRA 0xc040 ;
Basic block id 790 - num instructions 4
 Instr 2931 @ 0xb730 (46896) - FSETP.NEU.AND P0, PT, R24, RZ, PT ;
 Instr 2932 @ 0xb740 (46912) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2933 @ 0xb750 (46928) - STG.E.U8.SYS [R4], R3 ;
 Instr 2934 @ 0xb760 (46944) - BRA 0xc1c0 ;
Basic block id 791 - num instructions 4
 Instr 2935 @ 0xb770 (46960) - F2F.F64.F32 R8, R24 ;
 Instr 2936 @ 0xb780 (46976) - CS2R R10, SRZ ;
 Instr 2937 @ 0xb790 (46992) - STG.E.128.SYS [R4], R8 ;
 Instr 2938 @ 0xb7a0 (47008) - BRA 0xc1c0 ;
Basic block id 792 - num instructions 2
 Instr 2939 @ 0xb7b0 (47024) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2940 @ 0xb7c0 (47040) - @!P0 BRA 0xbaa0 ;
Basic block id 793 - num instructions 2
 Instr 2941 @ 0xb7d0 (47056) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2942 @ 0xb7e0 (47072) - @!P0 BRA 0xb940 ;
Basic block id 794 - num instructions 2
 Instr 2943 @ 0xb7f0 (47088) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2944 @ 0xb800 (47104) - @P0 BRA 0xc040 ;
Basic block id 795 - num instructions 7
 Instr 2945 @ 0xb810 (47120) - LOP3.LUT R6, R24.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2946 @ 0xb820 (47136) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2947 @ 0xb830 (47152) - LOP3.LUT R0, R24, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2948 @ 0xb840 (47168) - BSSY B0, 0xb910 ;
 Instr 2949 @ 0xb850 (47184) - ISETP.GT.U32.AND P0, PT, R6, 0x43efffff, PT ;
 Instr 2950 @ 0xb860 (47200) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2951 @ 0xb870 (47216) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 796 - num instructions 1
 Instr 2952 @ 0xb880 (47232) - @P0 BRA 0xb900 ;
Basic block id 797 - num instructions 7
 Instr 2953 @ 0xb890 (47248) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
 Instr 2954 @ 0xb8a0 (47264) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R24 ;
 Instr 2955 @ 0xb8b0 (47280) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2956 @ 0xb8c0 (47296) - @P0 IADD3 R0, R24, 0x407ffff, R3 ;
 Instr 2957 @ 0xb8d0 (47312) - @!P0 FADD R3, R6, 16384 ;
 Instr 2958 @ 0xb8e0 (47328) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2959 @ 0xb8f0 (47344) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 798 - num instructions 4
 Instr 2960 @ 0xb900 (47360) - BSYNC B0 ;
 Instr 2961 @ 0xb910 (47376) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2962 @ 0xb920 (47392) - STG.E.U8.SYS [R4], R7 ;
 Instr 2963 @ 0xb930 (47408) - BRA 0xc1c0 ;
Basic block id 799 - num instructions 5
 Instr 2964 @ 0xb940 (47424) - LOP3.LUT R6, R24, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2965 @ 0xb950 (47440) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2966 @ 0xb960 (47456) - BSSY B0, 0xba50 ;
 Instr 2967 @ 0xb970 (47472) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 2968 @ 0xb980 (47488) - @P0 BRA 0xba10 ;
Basic block id 800 - num instructions 8
 Instr 2969 @ 0xb990 (47504) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
 Instr 2970 @ 0xb9a0 (47520) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R24 ;
 Instr 2971 @ 0xb9b0 (47536) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2972 @ 0xb9c0 (47552) - @P0 IADD3 R0, R24, 0x80fffff, R3 ;
 Instr 2973 @ 0xb9d0 (47568) - @!P0 FADD R3, R6, 128 ;
 Instr 2974 @ 0xb9e0 (47584) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2975 @ 0xb9f0 (47600) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2976 @ 0xba00 (47616) - BRA 0xba40 ;
Basic block id 801 - num instructions 3
 Instr 2977 @ 0xba10 (47632) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2978 @ 0xba20 (47648) - ISETP.GT.U32.AND P0, PT, R6, 0x7f800000, PT ;
 Instr 2979 @ 0xba30 (47664) - SEL R0, R0, 0x7c, P0 ;
Basic block id 802 - num instructions 6
 Instr 2980 @ 0xba40 (47680) - BSYNC B0 ;
 Instr 2981 @ 0xba50 (47696) - LOP3.LUT R24, R24, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2982 @ 0xba60 (47712) - SHF.R.U32.HI R3, RZ, 0x18, R24 ;
 Instr 2983 @ 0xba70 (47728) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2984 @ 0xba80 (47744) - STG.E.U8.SYS [R4], R3 ;
 Instr 2985 @ 0xba90 (47760) - BRA 0xc1c0 ;
Basic block id 803 - num instructions 8
 Instr 2986 @ 0xbaa0 (47776) - FSETP.GTU.AND P0, PT, |R24|, +INF , PT ;
 Instr 2987 @ 0xbab0 (47792) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2988 @ 0xbac0 (47808) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R24 ;
 Instr 2989 @ 0xbad0 (47824) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2990 @ 0xbae0 (47840) - @!P0 IADD3 R7, R24, 0x7fff, R7 ;
 Instr 2991 @ 0xbaf0 (47856) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2992 @ 0xbb00 (47872) - STG.E.U16.SYS [R4], R3 ;
 Instr 2993 @ 0xbb10 (47888) - BRA 0xc1c0 ;
Basic block id 804 - num instructions 2
 Instr 2994 @ 0xbb20 (47904) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 2995 @ 0xbb30 (47920) - @P0 BRA 0xbef0 ;
Basic block id 805 - num instructions 2
 Instr 2996 @ 0xbb40 (47936) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 2997 @ 0xbb50 (47952) - @!P0 BRA 0xbd60 ;
Basic block id 806 - num instructions 2
 Instr 2998 @ 0xbb60 (47968) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 2999 @ 0xbb70 (47984) - @!P0 BRA 0xbbd0 ;
Basic block id 807 - num instructions 2
 Instr 3000 @ 0xbb80 (48000) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3001 @ 0xbb90 (48016) - @P0 BRA 0xc040 ;
Basic block id 808 - num instructions 3
 Instr 3002 @ 0xbba0 (48032) - F2I.U32.TRUNC.NTZ R3, R24 ;
 Instr 3003 @ 0xbbb0 (48048) - STG.E.U16.SYS [R4], R3 ;
 Instr 3004 @ 0xbbc0 (48064) - BRA 0xc1c0 ;
Basic block id 809 - num instructions 6
 Instr 3005 @ 0xbbd0 (48080) - LOP3.LUT R6, R24, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3006 @ 0xbbe0 (48096) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3007 @ 0xbbf0 (48112) - BSSY B0, 0xbd40 ;
 Instr 3008 @ 0xbc00 (48128) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3009 @ 0xbc10 (48144) - ISETP.GT.U32.AND P0, PT, R6, 0x437fffff, PT ;
 Instr 3010 @ 0xbc20 (48160) - @P0 BRA 0xbd30 ;
Basic block id 810 - num instructions 2
 Instr 3011 @ 0xbc30 (48176) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
 Instr 3012 @ 0xbc40 (48192) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R24 ;
Basic block id 811 - num instructions 5
 Instr 3013 @ 0xbc50 (48208) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3014 @ 0xbc60 (48224) - @P0 IADD3 R0, R24, 0x487ffff, R3 ;
 Instr 3015 @ 0xbc70 (48240) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3016 @ 0xbc80 (48256) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3017 @ 0xbc90 (48272) - @P0 BRA 0xbcf0 ;
Basic block id 812 - num instructions 5
 Instr 3018 @ 0xbca0 (48288) - FADD R0, R6, 8192 ;
 Instr 3019 @ 0xbcb0 (48304) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3020 @ 0xbcc0 (48320) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3021 @ 0xbcd0 (48336) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3022 @ 0xbce0 (48352) - @!P0 BRA 0xbd30 ;
Basic block id 813 - num instructions 4
 Instr 3023 @ 0xbcf0 (48368) - LOP3.LUT R24, R24, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3024 @ 0xbd00 (48384) - SHF.R.U32.HI R24, RZ, 0x18, R24 ;
 Instr 3025 @ 0xbd10 (48400) - LOP3.LUT R3, R3, R24, RZ, 0xfc, !PT ;
 Instr 3026 @ 0xbd20 (48416) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 814 - num instructions 3
 Instr 3027 @ 0xbd30 (48432) - BSYNC B0 ;
 Instr 3028 @ 0xbd40 (48448) - STG.E.U8.SYS [R4], R0 ;
 Instr 3029 @ 0xbd50 (48464) - BRA 0xc1c0 ;
Basic block id 815 - num instructions 6
 Instr 3030 @ 0xbd60 (48480) - LOP3.LUT R6, R24, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3031 @ 0xbd70 (48496) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3032 @ 0xbd80 (48512) - BSSY B0, 0xbed0 ;
 Instr 3033 @ 0xbd90 (48528) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3034 @ 0xbda0 (48544) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 3035 @ 0xbdb0 (48560) - @P0 BRA 0xbec0 ;
Basic block id 816 - num instructions 2
 Instr 3036 @ 0xbdc0 (48576) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
 Instr 3037 @ 0xbdd0 (48592) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R24 ;
Basic block id 817 - num instructions 5
 Instr 3038 @ 0xbde0 (48608) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3039 @ 0xbdf0 (48624) - @P0 IADD3 R0, R24, 0x88fffff, R3 ;
 Instr 3040 @ 0xbe00 (48640) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3041 @ 0xbe10 (48656) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3042 @ 0xbe20 (48672) - @P0 BRA 0xbe80 ;
Basic block id 818 - num instructions 5
 Instr 3043 @ 0xbe30 (48688) - FADD R0, R6, 64 ;
 Instr 3044 @ 0xbe40 (48704) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3045 @ 0xbe50 (48720) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3046 @ 0xbe60 (48736) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3047 @ 0xbe70 (48752) - @!P0 BRA 0xbec0 ;
Basic block id 819 - num instructions 4
 Instr 3048 @ 0xbe80 (48768) - LOP3.LUT R24, R24, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3049 @ 0xbe90 (48784) - SHF.R.U32.HI R24, RZ, 0x18, R24 ;
 Instr 3050 @ 0xbea0 (48800) - LOP3.LUT R3, R3, R24, RZ, 0xfc, !PT ;
 Instr 3051 @ 0xbeb0 (48816) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 820 - num instructions 3
 Instr 3052 @ 0xbec0 (48832) - BSYNC B0 ;
 Instr 3053 @ 0xbed0 (48848) - STG.E.U8.SYS [R4], R0 ;
 Instr 3054 @ 0xbee0 (48864) - BRA 0xc1c0 ;
Basic block id 821 - num instructions 2
 Instr 3055 @ 0xbef0 (48880) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3056 @ 0xbf00 (48896) - @!P0 BRA 0xc1a0 ;
Basic block id 822 - num instructions 2
 Instr 3057 @ 0xbf10 (48912) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3058 @ 0xbf20 (48928) - @!P0 BRA 0xc170 ;
Basic block id 823 - num instructions 2
 Instr 3059 @ 0xbf30 (48944) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3060 @ 0xbf40 (48960) - @P0 BRA 0xc040 ;
Basic block id 824 - num instructions 15
 Instr 3061 @ 0xbf50 (48976) - SHF.R.U32.HI R6, RZ, 0x17, R24 ;
 Instr 3062 @ 0xbf60 (48992) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3063 @ 0xbf70 (49008) - LOP3.LUT R3, R6, 0xff, RZ, 0xc0, !PT ;
 Instr 3064 @ 0xbf80 (49024) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 3065 @ 0xbf90 (49040) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R24.reuse ;
 Instr 3066 @ 0xbfa0 (49056) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R24, 0xf8, !PT ;
 Instr 3067 @ 0xbfb0 (49072) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 3068 @ 0xbfc0 (49088) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3069 @ 0xbfd0 (49104) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3070 @ 0xbfe0 (49120) - @P2 IADD3 R0, R6, 0x1, RZ ;
 Instr 3071 @ 0xbff0 (49136) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3072 @ 0xc000 (49152) - @!P0 IMAD.MOV R0, RZ, RZ, R6 ;
 Instr 3073 @ 0xc010 (49168) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 3074 @ 0xc020 (49184) - STG.E.U8.SYS [R4], R3 ;
 Instr 3075 @ 0xc030 (49200) - BRA 0xc1c0 ;
Basic block id 825 - num instructions 18
 Instr 3076 @ 0xc040 (49216) - UMOV UR4, 0xd33a2700 ;
 Instr 3077 @ 0xc050 (49232) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3078 @ 0xc060 (49248) - UMOV UR5, 0x7f88 ;
 Instr 3079 @ 0xc070 (49264) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3080 @ 0xc080 (49280) - UMOV UR6, 0xd33a2100 ;
 Instr 3081 @ 0xc090 (49296) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3082 @ 0xc0a0 (49312) - UMOV UR7, 0x7f88 ;
 Instr 3083 @ 0xc0b0 (49328) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3084 @ 0xc0c0 (49344) - UMOV UR8, 0xd33a0c00 ;
 Instr 3085 @ 0xc0d0 (49360) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3086 @ 0xc0e0 (49376) - UMOV UR9, 0x7f88 ;
 Instr 3087 @ 0xc0f0 (49392) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3088 @ 0xc100 (49408) - MOV R20, 0xd7fad660 ;
 Instr 3089 @ 0xc110 (49424) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3090 @ 0xc120 (49440) - MOV R21, 0x7f88 ;
 Instr 3091 @ 0xc130 (49456) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3092 @ 0xc140 (49472) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3093 @ 0xc150 (49488) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 826 - num instructions 1
 Instr 3094 @ 0xc160 (49504) - BRA 0xc1c0 ;
Basic block id 827 - num instructions 3
 Instr 3095 @ 0xc170 (49520) - F2I.U64.TRUNC R24, R24 ;
 Instr 3096 @ 0xc180 (49536) - STG.E.64.SYS [R4], R24 ;
 Instr 3097 @ 0xc190 (49552) - BRA 0xc1c0 ;
Basic block id 828 - num instructions 2
 Instr 3098 @ 0xc1a0 (49568) - F2I.U32.TRUNC.NTZ R3, R24 ;
 Instr 3099 @ 0xc1b0 (49584) - STG.E.SYS [R4], R3 ;
Basic block id 829 - num instructions 3
 Instr 3100 @ 0xc1c0 (49600) - IADD3 R0, R36, 0x280, RZ ;
 Instr 3101 @ 0xc1d0 (49616) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 3102 @ 0xc1e0 (49632) - @P0 EXIT ;
Basic block id 830 - num instructions 6
 Instr 3103 @ 0xc1f0 (49648) - IADD3 R0, R2, 0x200, RZ ;
 Instr 3104 @ 0xc200 (49664) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 3105 @ 0xc210 (49680) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 3106 @ 0xc220 (49696) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 3107 @ 0xc230 (49712) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 3108 @ 0xc240 (49728) - @P1 BRA 0xc5f0 ;
Basic block id 831 - num instructions 3
 Instr 3109 @ 0xc250 (49744) - PRMT R0, R31, 0x9910, RZ ;
 Instr 3110 @ 0xc260 (49760) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 3111 @ 0xc270 (49776) - @P0 BRA 0xc440 ;
Basic block id 832 - num instructions 2
 Instr 3112 @ 0xc280 (49792) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 3113 @ 0xc290 (49808) - @P0 BRA 0xc350 ;
Basic block id 833 - num instructions 2
 Instr 3114 @ 0xc2a0 (49824) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 3115 @ 0xc2b0 (49840) - @!P0 BRA 0xc310 ;
Basic block id 834 - num instructions 2
 Instr 3116 @ 0xc2c0 (49856) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 3117 @ 0xc2d0 (49872) - @P0 BRA 0xcf90 ;
Basic block id 835 - num instructions 3
 Instr 3118 @ 0xc2e0 (49888) - F2I.TRUNC.NTZ R3, R26 ;
 Instr 3119 @ 0xc2f0 (49904) - STG.E.U8.SYS [R4], R3 ;
 Instr 3120 @ 0xc300 (49920) - BRA 0xd110 ;
Basic block id 836 - num instructions 4
 Instr 3121 @ 0xc310 (49936) - F2I.S64.TRUNC R26, R26 ;
 Instr 3122 @ 0xc320 (49952) - IMAD.MOV.U32 R3, RZ, RZ, R26 ;
 Instr 3123 @ 0xc330 (49968) - STG.E.U8.SYS [R4], R3 ;
 Instr 3124 @ 0xc340 (49984) - BRA 0xd110 ;
Basic block id 837 - num instructions 2
 Instr 3125 @ 0xc350 (50000) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 3126 @ 0xc360 (50016) - @!P0 BRA 0xc410 ;
Basic block id 838 - num instructions 2
 Instr 3127 @ 0xc370 (50032) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 3128 @ 0xc380 (50048) - @!P0 BRA 0xc3e0 ;
Basic block id 839 - num instructions 2
 Instr 3129 @ 0xc390 (50064) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 3130 @ 0xc3a0 (50080) - @P0 BRA 0xcf90 ;
Basic block id 840 - num instructions 3
 Instr 3131 @ 0xc3b0 (50096) - F2I.S64.TRUNC R26, R26 ;
 Instr 3132 @ 0xc3c0 (50112) - STG.E.64.SYS [R4], R26 ;
 Instr 3133 @ 0xc3d0 (50128) - BRA 0xd110 ;
Basic block id 841 - num instructions 3
 Instr 3134 @ 0xc3e0 (50144) - F2I.TRUNC.NTZ R3, R26 ;
 Instr 3135 @ 0xc3f0 (50160) - STG.E.SYS [R4], R3 ;
 Instr 3136 @ 0xc400 (50176) - BRA 0xd110 ;
Basic block id 842 - num instructions 3
 Instr 3137 @ 0xc410 (50192) - F2I.TRUNC.NTZ R3, R26 ;
 Instr 3138 @ 0xc420 (50208) - STG.E.U16.SYS [R4], R3 ;
 Instr 3139 @ 0xc430 (50224) - BRA 0xd110 ;
Basic block id 843 - num instructions 2
 Instr 3140 @ 0xc440 (50240) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 3141 @ 0xc450 (50256) - @P0 BRA 0xc4f0 ;
Basic block id 844 - num instructions 2
 Instr 3142 @ 0xc460 (50272) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 3143 @ 0xc470 (50288) - @!P0 BRA 0xc4c0 ;
Basic block id 845 - num instructions 2
 Instr 3144 @ 0xc480 (50304) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 3145 @ 0xc490 (50320) - @P0 BRA 0xcf90 ;
Basic block id 846 - num instructions 2
 Instr 3146 @ 0xc4a0 (50336) - STG.E.SYS [R4], R26 ;
 Instr 3147 @ 0xc4b0 (50352) - BRA 0xd110 ;
Basic block id 847 - num instructions 3
 Instr 3148 @ 0xc4c0 (50368) - F2F.F16.F32 R3, R26 ;
 Instr 3149 @ 0xc4d0 (50384) - STG.E.U16.SYS [R4], R3 ;
 Instr 3150 @ 0xc4e0 (50400) - BRA 0xd110 ;
Basic block id 848 - num instructions 2
 Instr 3151 @ 0xc4f0 (50416) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 3152 @ 0xc500 (50432) - @!P0 BRA 0xc5c0 ;
Basic block id 849 - num instructions 2
 Instr 3153 @ 0xc510 (50448) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 3154 @ 0xc520 (50464) - @!P0 BRA 0xc580 ;
Basic block id 850 - num instructions 2
 Instr 3155 @ 0xc530 (50480) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 3156 @ 0xc540 (50496) - @P0 BRA 0xcf90 ;
Basic block id 851 - num instructions 3
 Instr 3157 @ 0xc550 (50512) - IMAD.MOV.U32 R27, RZ, RZ, RZ ;
 Instr 3158 @ 0xc560 (50528) - STG.E.64.SYS [R4], R26 ;
 Instr 3159 @ 0xc570 (50544) - BRA 0xd110 ;
Basic block id 852 - num instructions 4
 Instr 3160 @ 0xc580 (50560) - F2F.F16.F32 R3, R26 ;
 Instr 3161 @ 0xc590 (50576) - PRMT R3, R3, 0x5410, RZ ;
 Instr 3162 @ 0xc5a0 (50592) - STG.E.SYS [R4], R3 ;
 Instr 3163 @ 0xc5b0 (50608) - BRA 0xd110 ;
Basic block id 853 - num instructions 3
 Instr 3164 @ 0xc5c0 (50624) - F2F.F64.F32 R26, R26 ;
 Instr 3165 @ 0xc5d0 (50640) - STG.E.64.SYS [R4], R26 ;
 Instr 3166 @ 0xc5e0 (50656) - BRA 0xd110 ;
Basic block id 854 - num instructions 3
 Instr 3167 @ 0xc5f0 (50672) - PRMT R0, R31, 0x9910, RZ ;
 Instr 3168 @ 0xc600 (50688) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 3169 @ 0xc610 (50704) - @P0 BRA 0xca70 ;
Basic block id 855 - num instructions 2
 Instr 3170 @ 0xc620 (50720) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 3171 @ 0xc630 (50736) - @P0 BRA 0xc700 ;
Basic block id 856 - num instructions 2
 Instr 3172 @ 0xc640 (50752) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 3173 @ 0xc650 (50768) - @!P0 BRA 0xc6c0 ;
Basic block id 857 - num instructions 2
 Instr 3174 @ 0xc660 (50784) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 3175 @ 0xc670 (50800) - @P0 BRA 0xcf90 ;
Basic block id 858 - num instructions 4
 Instr 3176 @ 0xc680 (50816) - FSETP.NEU.AND P0, PT, R26, RZ, PT ;
 Instr 3177 @ 0xc690 (50832) - SEL R3, RZ, 0x1, !P0 ;
 Instr 3178 @ 0xc6a0 (50848) - STG.E.U8.SYS [R4], R3 ;
 Instr 3179 @ 0xc6b0 (50864) - BRA 0xd110 ;
Basic block id 859 - num instructions 4
 Instr 3180 @ 0xc6c0 (50880) - F2F.F64.F32 R8, R26 ;
 Instr 3181 @ 0xc6d0 (50896) - CS2R R10, SRZ ;
 Instr 3182 @ 0xc6e0 (50912) - STG.E.128.SYS [R4], R8 ;
 Instr 3183 @ 0xc6f0 (50928) - BRA 0xd110 ;
Basic block id 860 - num instructions 2
 Instr 3184 @ 0xc700 (50944) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 3185 @ 0xc710 (50960) - @!P0 BRA 0xc9f0 ;
Basic block id 861 - num instructions 2
 Instr 3186 @ 0xc720 (50976) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 3187 @ 0xc730 (50992) - @!P0 BRA 0xc890 ;
Basic block id 862 - num instructions 2
 Instr 3188 @ 0xc740 (51008) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 3189 @ 0xc750 (51024) - @P0 BRA 0xcf90 ;
Basic block id 863 - num instructions 7
 Instr 3190 @ 0xc760 (51040) - LOP3.LUT R6, R26.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3191 @ 0xc770 (51056) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3192 @ 0xc780 (51072) - LOP3.LUT R0, R26, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3193 @ 0xc790 (51088) - BSSY B0, 0xc860 ;
 Instr 3194 @ 0xc7a0 (51104) - ISETP.GT.U32.AND P0, PT, R6, 0x43efffff, PT ;
 Instr 3195 @ 0xc7b0 (51120) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 3196 @ 0xc7c0 (51136) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 864 - num instructions 1
 Instr 3197 @ 0xc7d0 (51152) - @P0 BRA 0xc850 ;
Basic block id 865 - num instructions 7
 Instr 3198 @ 0xc7e0 (51168) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
 Instr 3199 @ 0xc7f0 (51184) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R26 ;
 Instr 3200 @ 0xc800 (51200) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3201 @ 0xc810 (51216) - @P0 IADD3 R0, R26, 0x407ffff, R3 ;
 Instr 3202 @ 0xc820 (51232) - @!P0 FADD R3, R6, 16384 ;
 Instr 3203 @ 0xc830 (51248) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3204 @ 0xc840 (51264) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 866 - num instructions 4
 Instr 3205 @ 0xc850 (51280) - BSYNC B0 ;
 Instr 3206 @ 0xc860 (51296) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 3207 @ 0xc870 (51312) - STG.E.U8.SYS [R4], R7 ;
 Instr 3208 @ 0xc880 (51328) - BRA 0xd110 ;
Basic block id 867 - num instructions 5
 Instr 3209 @ 0xc890 (51344) - LOP3.LUT R6, R26, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3210 @ 0xc8a0 (51360) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3211 @ 0xc8b0 (51376) - BSSY B0, 0xc9a0 ;
 Instr 3212 @ 0xc8c0 (51392) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 3213 @ 0xc8d0 (51408) - @P0 BRA 0xc960 ;
Basic block id 868 - num instructions 8
 Instr 3214 @ 0xc8e0 (51424) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
 Instr 3215 @ 0xc8f0 (51440) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R26 ;
 Instr 3216 @ 0xc900 (51456) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3217 @ 0xc910 (51472) - @P0 IADD3 R0, R26, 0x80fffff, R3 ;
 Instr 3218 @ 0xc920 (51488) - @!P0 FADD R3, R6, 128 ;
 Instr 3219 @ 0xc930 (51504) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3220 @ 0xc940 (51520) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 3221 @ 0xc950 (51536) - BRA 0xc990 ;
Basic block id 869 - num instructions 3
 Instr 3222 @ 0xc960 (51552) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 3223 @ 0xc970 (51568) - ISETP.GT.U32.AND P0, PT, R6, 0x7f800000, PT ;
 Instr 3224 @ 0xc980 (51584) - SEL R0, R0, 0x7c, P0 ;
Basic block id 870 - num instructions 6
 Instr 3225 @ 0xc990 (51600) - BSYNC B0 ;
 Instr 3226 @ 0xc9a0 (51616) - LOP3.LUT R26, R26, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3227 @ 0xc9b0 (51632) - SHF.R.U32.HI R3, RZ, 0x18, R26 ;
 Instr 3228 @ 0xc9c0 (51648) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 3229 @ 0xc9d0 (51664) - STG.E.U8.SYS [R4], R3 ;
 Instr 3230 @ 0xc9e0 (51680) - BRA 0xd110 ;
Basic block id 871 - num instructions 8
 Instr 3231 @ 0xc9f0 (51696) - FSETP.GTU.AND P0, PT, |R26|, +INF , PT ;
 Instr 3232 @ 0xca00 (51712) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 3233 @ 0xca10 (51728) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R26 ;
 Instr 3234 @ 0xca20 (51744) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3235 @ 0xca30 (51760) - @!P0 IADD3 R7, R26, 0x7fff, R7 ;
 Instr 3236 @ 0xca40 (51776) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 3237 @ 0xca50 (51792) - STG.E.U16.SYS [R4], R3 ;
 Instr 3238 @ 0xca60 (51808) - BRA 0xd110 ;
Basic block id 872 - num instructions 2
 Instr 3239 @ 0xca70 (51824) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 3240 @ 0xca80 (51840) - @P0 BRA 0xce40 ;
Basic block id 873 - num instructions 2
 Instr 3241 @ 0xca90 (51856) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 3242 @ 0xcaa0 (51872) - @!P0 BRA 0xccb0 ;
Basic block id 874 - num instructions 2
 Instr 3243 @ 0xcab0 (51888) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 3244 @ 0xcac0 (51904) - @!P0 BRA 0xcb20 ;
Basic block id 875 - num instructions 2
 Instr 3245 @ 0xcad0 (51920) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3246 @ 0xcae0 (51936) - @P0 BRA 0xcf90 ;
Basic block id 876 - num instructions 3
 Instr 3247 @ 0xcaf0 (51952) - F2I.U32.TRUNC.NTZ R3, R26 ;
 Instr 3248 @ 0xcb00 (51968) - STG.E.U16.SYS [R4], R3 ;
 Instr 3249 @ 0xcb10 (51984) - BRA 0xd110 ;
Basic block id 877 - num instructions 6
 Instr 3250 @ 0xcb20 (52000) - LOP3.LUT R6, R26, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3251 @ 0xcb30 (52016) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3252 @ 0xcb40 (52032) - BSSY B0, 0xcc90 ;
 Instr 3253 @ 0xcb50 (52048) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3254 @ 0xcb60 (52064) - ISETP.GT.U32.AND P0, PT, R6, 0x437fffff, PT ;
 Instr 3255 @ 0xcb70 (52080) - @P0 BRA 0xcc80 ;
Basic block id 878 - num instructions 2
 Instr 3256 @ 0xcb80 (52096) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
 Instr 3257 @ 0xcb90 (52112) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R26 ;
Basic block id 879 - num instructions 5
 Instr 3258 @ 0xcba0 (52128) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3259 @ 0xcbb0 (52144) - @P0 IADD3 R0, R26, 0x487ffff, R3 ;
 Instr 3260 @ 0xcbc0 (52160) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3261 @ 0xcbd0 (52176) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3262 @ 0xcbe0 (52192) - @P0 BRA 0xcc40 ;
Basic block id 880 - num instructions 5
 Instr 3263 @ 0xcbf0 (52208) - FADD R0, R6, 8192 ;
 Instr 3264 @ 0xcc00 (52224) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3265 @ 0xcc10 (52240) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3266 @ 0xcc20 (52256) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3267 @ 0xcc30 (52272) - @!P0 BRA 0xcc80 ;
Basic block id 881 - num instructions 4
 Instr 3268 @ 0xcc40 (52288) - LOP3.LUT R26, R26, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3269 @ 0xcc50 (52304) - SHF.R.U32.HI R26, RZ, 0x18, R26 ;
 Instr 3270 @ 0xcc60 (52320) - LOP3.LUT R3, R3, R26, RZ, 0xfc, !PT ;
 Instr 3271 @ 0xcc70 (52336) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 882 - num instructions 3
 Instr 3272 @ 0xcc80 (52352) - BSYNC B0 ;
 Instr 3273 @ 0xcc90 (52368) - STG.E.U8.SYS [R4], R0 ;
 Instr 3274 @ 0xcca0 (52384) - BRA 0xd110 ;
Basic block id 883 - num instructions 6
 Instr 3275 @ 0xccb0 (52400) - LOP3.LUT R6, R26, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3276 @ 0xccc0 (52416) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3277 @ 0xccd0 (52432) - BSSY B0, 0xce20 ;
 Instr 3278 @ 0xcce0 (52448) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3279 @ 0xccf0 (52464) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 3280 @ 0xcd00 (52480) - @P0 BRA 0xce10 ;
Basic block id 884 - num instructions 2
 Instr 3281 @ 0xcd10 (52496) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
 Instr 3282 @ 0xcd20 (52512) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R26 ;
Basic block id 885 - num instructions 5
 Instr 3283 @ 0xcd30 (52528) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3284 @ 0xcd40 (52544) - @P0 IADD3 R0, R26, 0x88fffff, R3 ;
 Instr 3285 @ 0xcd50 (52560) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3286 @ 0xcd60 (52576) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3287 @ 0xcd70 (52592) - @P0 BRA 0xcdd0 ;
Basic block id 886 - num instructions 5
 Instr 3288 @ 0xcd80 (52608) - FADD R0, R6, 64 ;
 Instr 3289 @ 0xcd90 (52624) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3290 @ 0xcda0 (52640) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3291 @ 0xcdb0 (52656) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3292 @ 0xcdc0 (52672) - @!P0 BRA 0xce10 ;
Basic block id 887 - num instructions 4
 Instr 3293 @ 0xcdd0 (52688) - LOP3.LUT R26, R26, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3294 @ 0xcde0 (52704) - SHF.R.U32.HI R26, RZ, 0x18, R26 ;
 Instr 3295 @ 0xcdf0 (52720) - LOP3.LUT R3, R3, R26, RZ, 0xfc, !PT ;
 Instr 3296 @ 0xce00 (52736) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 888 - num instructions 3
 Instr 3297 @ 0xce10 (52752) - BSYNC B0 ;
 Instr 3298 @ 0xce20 (52768) - STG.E.U8.SYS [R4], R0 ;
 Instr 3299 @ 0xce30 (52784) - BRA 0xd110 ;
Basic block id 889 - num instructions 2
 Instr 3300 @ 0xce40 (52800) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3301 @ 0xce50 (52816) - @!P0 BRA 0xd0f0 ;
Basic block id 890 - num instructions 2
 Instr 3302 @ 0xce60 (52832) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3303 @ 0xce70 (52848) - @!P0 BRA 0xd0c0 ;
Basic block id 891 - num instructions 2
 Instr 3304 @ 0xce80 (52864) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3305 @ 0xce90 (52880) - @P0 BRA 0xcf90 ;
Basic block id 892 - num instructions 15
 Instr 3306 @ 0xcea0 (52896) - SHF.R.U32.HI R6, RZ, 0x17, R26 ;
 Instr 3307 @ 0xceb0 (52912) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3308 @ 0xcec0 (52928) - LOP3.LUT R3, R6, 0xff, RZ, 0xc0, !PT ;
 Instr 3309 @ 0xced0 (52944) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 3310 @ 0xcee0 (52960) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R26.reuse ;
 Instr 3311 @ 0xcef0 (52976) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R26, 0xf8, !PT ;
 Instr 3312 @ 0xcf00 (52992) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 3313 @ 0xcf10 (53008) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3314 @ 0xcf20 (53024) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3315 @ 0xcf30 (53040) - @P2 IADD3 R0, R6, 0x1, RZ ;
 Instr 3316 @ 0xcf40 (53056) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3317 @ 0xcf50 (53072) - @!P0 IMAD.MOV R0, RZ, RZ, R6 ;
 Instr 3318 @ 0xcf60 (53088) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 3319 @ 0xcf70 (53104) - STG.E.U8.SYS [R4], R3 ;
 Instr 3320 @ 0xcf80 (53120) - BRA 0xd110 ;
Basic block id 893 - num instructions 18
 Instr 3321 @ 0xcf90 (53136) - UMOV UR4, 0xd33a2700 ;
 Instr 3322 @ 0xcfa0 (53152) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3323 @ 0xcfb0 (53168) - UMOV UR5, 0x7f88 ;
 Instr 3324 @ 0xcfc0 (53184) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3325 @ 0xcfd0 (53200) - UMOV UR6, 0xd33a2100 ;
 Instr 3326 @ 0xcfe0 (53216) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3327 @ 0xcff0 (53232) - UMOV UR7, 0x7f88 ;
 Instr 3328 @ 0xd000 (53248) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3329 @ 0xd010 (53264) - UMOV UR8, 0xd33a0c00 ;
 Instr 3330 @ 0xd020 (53280) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3331 @ 0xd030 (53296) - UMOV UR9, 0x7f88 ;
 Instr 3332 @ 0xd040 (53312) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3333 @ 0xd050 (53328) - MOV R20, 0xd7fae5b0 ;
 Instr 3334 @ 0xd060 (53344) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3335 @ 0xd070 (53360) - MOV R21, 0x7f88 ;
 Instr 3336 @ 0xd080 (53376) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3337 @ 0xd090 (53392) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3338 @ 0xd0a0 (53408) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 894 - num instructions 1
 Instr 3339 @ 0xd0b0 (53424) - BRA 0xd110 ;
Basic block id 895 - num instructions 3
 Instr 3340 @ 0xd0c0 (53440) - F2I.U64.TRUNC R26, R26 ;
 Instr 3341 @ 0xd0d0 (53456) - STG.E.64.SYS [R4], R26 ;
 Instr 3342 @ 0xd0e0 (53472) - BRA 0xd110 ;
Basic block id 896 - num instructions 2
 Instr 3343 @ 0xd0f0 (53488) - F2I.U32.TRUNC.NTZ R3, R26 ;
 Instr 3344 @ 0xd100 (53504) - STG.E.SYS [R4], R3 ;
Basic block id 897 - num instructions 3
 Instr 3345 @ 0xd110 (53520) - IADD3 R0, R36, 0x300, RZ ;
 Instr 3346 @ 0xd120 (53536) - ISETP.GE.AND P0, PT, R0, R39, PT ;
 Instr 3347 @ 0xd130 (53552) - @P0 EXIT ;
Basic block id 898 - num instructions 6
 Instr 3348 @ 0xd140 (53568) - IADD3 R0, R2, 0x280, RZ ;
 Instr 3349 @ 0xd150 (53584) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 3350 @ 0xd160 (53600) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 3351 @ 0xd170 (53616) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 3352 @ 0xd180 (53632) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 3353 @ 0xd190 (53648) - @P1 BRA 0xd540 ;
Basic block id 899 - num instructions 3
 Instr 3354 @ 0xd1a0 (53664) - PRMT R0, R31, 0x9910, RZ ;
 Instr 3355 @ 0xd1b0 (53680) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 3356 @ 0xd1c0 (53696) - @P0 BRA 0xd390 ;
Basic block id 900 - num instructions 2
 Instr 3357 @ 0xd1d0 (53712) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 3358 @ 0xd1e0 (53728) - @P0 BRA 0xd2a0 ;
Basic block id 901 - num instructions 2
 Instr 3359 @ 0xd1f0 (53744) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 3360 @ 0xd200 (53760) - @!P0 BRA 0xd260 ;
Basic block id 902 - num instructions 2
 Instr 3361 @ 0xd210 (53776) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 3362 @ 0xd220 (53792) - @P0 BRA 0xdee0 ;
Basic block id 903 - num instructions 3
 Instr 3363 @ 0xd230 (53808) - F2I.TRUNC.NTZ R3, R28 ;
 Instr 3364 @ 0xd240 (53824) - STG.E.U8.SYS [R4], R3 ;
 Instr 3365 @ 0xd250 (53840) - BRA 0xe060 ;
Basic block id 904 - num instructions 4
 Instr 3366 @ 0xd260 (53856) - F2I.S64.TRUNC R28, R28 ;
 Instr 3367 @ 0xd270 (53872) - IMAD.MOV.U32 R3, RZ, RZ, R28 ;
 Instr 3368 @ 0xd280 (53888) - STG.E.U8.SYS [R4], R3 ;
 Instr 3369 @ 0xd290 (53904) - BRA 0xe060 ;
Basic block id 905 - num instructions 2
 Instr 3370 @ 0xd2a0 (53920) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 3371 @ 0xd2b0 (53936) - @!P0 BRA 0xd360 ;
Basic block id 906 - num instructions 2
 Instr 3372 @ 0xd2c0 (53952) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 3373 @ 0xd2d0 (53968) - @!P0 BRA 0xd330 ;
Basic block id 907 - num instructions 2
 Instr 3374 @ 0xd2e0 (53984) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 3375 @ 0xd2f0 (54000) - @P0 BRA 0xdee0 ;
Basic block id 908 - num instructions 3
 Instr 3376 @ 0xd300 (54016) - F2I.S64.TRUNC R28, R28 ;
 Instr 3377 @ 0xd310 (54032) - STG.E.64.SYS [R4], R28 ;
 Instr 3378 @ 0xd320 (54048) - BRA 0xe060 ;
Basic block id 909 - num instructions 3
 Instr 3379 @ 0xd330 (54064) - F2I.TRUNC.NTZ R3, R28 ;
 Instr 3380 @ 0xd340 (54080) - STG.E.SYS [R4], R3 ;
 Instr 3381 @ 0xd350 (54096) - BRA 0xe060 ;
Basic block id 910 - num instructions 3
 Instr 3382 @ 0xd360 (54112) - F2I.TRUNC.NTZ R3, R28 ;
 Instr 3383 @ 0xd370 (54128) - STG.E.U16.SYS [R4], R3 ;
 Instr 3384 @ 0xd380 (54144) - BRA 0xe060 ;
Basic block id 911 - num instructions 2
 Instr 3385 @ 0xd390 (54160) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 3386 @ 0xd3a0 (54176) - @P0 BRA 0xd440 ;
Basic block id 912 - num instructions 2
 Instr 3387 @ 0xd3b0 (54192) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 3388 @ 0xd3c0 (54208) - @!P0 BRA 0xd410 ;
Basic block id 913 - num instructions 2
 Instr 3389 @ 0xd3d0 (54224) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 3390 @ 0xd3e0 (54240) - @P0 BRA 0xdee0 ;
Basic block id 914 - num instructions 2
 Instr 3391 @ 0xd3f0 (54256) - STG.E.SYS [R4], R28 ;
 Instr 3392 @ 0xd400 (54272) - BRA 0xe060 ;
Basic block id 915 - num instructions 3
 Instr 3393 @ 0xd410 (54288) - F2F.F16.F32 R3, R28 ;
 Instr 3394 @ 0xd420 (54304) - STG.E.U16.SYS [R4], R3 ;
 Instr 3395 @ 0xd430 (54320) - BRA 0xe060 ;
Basic block id 916 - num instructions 2
 Instr 3396 @ 0xd440 (54336) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 3397 @ 0xd450 (54352) - @!P0 BRA 0xd510 ;
Basic block id 917 - num instructions 2
 Instr 3398 @ 0xd460 (54368) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 3399 @ 0xd470 (54384) - @!P0 BRA 0xd4d0 ;
Basic block id 918 - num instructions 2
 Instr 3400 @ 0xd480 (54400) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 3401 @ 0xd490 (54416) - @P0 BRA 0xdee0 ;
Basic block id 919 - num instructions 3
 Instr 3402 @ 0xd4a0 (54432) - IMAD.MOV.U32 R29, RZ, RZ, RZ ;
 Instr 3403 @ 0xd4b0 (54448) - STG.E.64.SYS [R4], R28 ;
 Instr 3404 @ 0xd4c0 (54464) - BRA 0xe060 ;
Basic block id 920 - num instructions 4
 Instr 3405 @ 0xd4d0 (54480) - F2F.F16.F32 R3, R28 ;
 Instr 3406 @ 0xd4e0 (54496) - PRMT R3, R3, 0x5410, RZ ;
 Instr 3407 @ 0xd4f0 (54512) - STG.E.SYS [R4], R3 ;
 Instr 3408 @ 0xd500 (54528) - BRA 0xe060 ;
Basic block id 921 - num instructions 3
 Instr 3409 @ 0xd510 (54544) - F2F.F64.F32 R28, R28 ;
 Instr 3410 @ 0xd520 (54560) - STG.E.64.SYS [R4], R28 ;
 Instr 3411 @ 0xd530 (54576) - BRA 0xe060 ;
Basic block id 922 - num instructions 3
 Instr 3412 @ 0xd540 (54592) - PRMT R0, R31, 0x9910, RZ ;
 Instr 3413 @ 0xd550 (54608) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 3414 @ 0xd560 (54624) - @P0 BRA 0xd9c0 ;
Basic block id 923 - num instructions 2
 Instr 3415 @ 0xd570 (54640) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 3416 @ 0xd580 (54656) - @P0 BRA 0xd650 ;
Basic block id 924 - num instructions 2
 Instr 3417 @ 0xd590 (54672) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 3418 @ 0xd5a0 (54688) - @!P0 BRA 0xd610 ;
Basic block id 925 - num instructions 2
 Instr 3419 @ 0xd5b0 (54704) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 3420 @ 0xd5c0 (54720) - @P0 BRA 0xdee0 ;
Basic block id 926 - num instructions 4
 Instr 3421 @ 0xd5d0 (54736) - FSETP.NEU.AND P0, PT, R28, RZ, PT ;
 Instr 3422 @ 0xd5e0 (54752) - SEL R3, RZ, 0x1, !P0 ;
 Instr 3423 @ 0xd5f0 (54768) - STG.E.U8.SYS [R4], R3 ;
 Instr 3424 @ 0xd600 (54784) - BRA 0xe060 ;
Basic block id 927 - num instructions 4
 Instr 3425 @ 0xd610 (54800) - F2F.F64.F32 R8, R28 ;
 Instr 3426 @ 0xd620 (54816) - CS2R R10, SRZ ;
 Instr 3427 @ 0xd630 (54832) - STG.E.128.SYS [R4], R8 ;
 Instr 3428 @ 0xd640 (54848) - BRA 0xe060 ;
Basic block id 928 - num instructions 2
 Instr 3429 @ 0xd650 (54864) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 3430 @ 0xd660 (54880) - @!P0 BRA 0xd940 ;
Basic block id 929 - num instructions 2
 Instr 3431 @ 0xd670 (54896) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 3432 @ 0xd680 (54912) - @!P0 BRA 0xd7e0 ;
Basic block id 930 - num instructions 2
 Instr 3433 @ 0xd690 (54928) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 3434 @ 0xd6a0 (54944) - @P0 BRA 0xdee0 ;
Basic block id 931 - num instructions 7
 Instr 3435 @ 0xd6b0 (54960) - LOP3.LUT R6, R28.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3436 @ 0xd6c0 (54976) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3437 @ 0xd6d0 (54992) - LOP3.LUT R0, R28, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3438 @ 0xd6e0 (55008) - BSSY B0, 0xd7b0 ;
 Instr 3439 @ 0xd6f0 (55024) - ISETP.GT.U32.AND P0, PT, R6, 0x43efffff, PT ;
 Instr 3440 @ 0xd700 (55040) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 3441 @ 0xd710 (55056) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 932 - num instructions 1
 Instr 3442 @ 0xd720 (55072) - @P0 BRA 0xd7a0 ;
Basic block id 933 - num instructions 7
 Instr 3443 @ 0xd730 (55088) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
 Instr 3444 @ 0xd740 (55104) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R28 ;
 Instr 3445 @ 0xd750 (55120) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3446 @ 0xd760 (55136) - @P0 IADD3 R0, R28, 0x407ffff, R3 ;
 Instr 3447 @ 0xd770 (55152) - @!P0 FADD R3, R6, 16384 ;
 Instr 3448 @ 0xd780 (55168) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3449 @ 0xd790 (55184) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 934 - num instructions 4
 Instr 3450 @ 0xd7a0 (55200) - BSYNC B0 ;
 Instr 3451 @ 0xd7b0 (55216) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 3452 @ 0xd7c0 (55232) - STG.E.U8.SYS [R4], R7 ;
 Instr 3453 @ 0xd7d0 (55248) - BRA 0xe060 ;
Basic block id 935 - num instructions 5
 Instr 3454 @ 0xd7e0 (55264) - LOP3.LUT R6, R28, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3455 @ 0xd7f0 (55280) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3456 @ 0xd800 (55296) - BSSY B0, 0xd8f0 ;
 Instr 3457 @ 0xd810 (55312) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 3458 @ 0xd820 (55328) - @P0 BRA 0xd8b0 ;
Basic block id 936 - num instructions 8
 Instr 3459 @ 0xd830 (55344) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
 Instr 3460 @ 0xd840 (55360) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R28 ;
 Instr 3461 @ 0xd850 (55376) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3462 @ 0xd860 (55392) - @P0 IADD3 R0, R28, 0x80fffff, R3 ;
 Instr 3463 @ 0xd870 (55408) - @!P0 FADD R3, R6, 128 ;
 Instr 3464 @ 0xd880 (55424) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3465 @ 0xd890 (55440) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 3466 @ 0xd8a0 (55456) - BRA 0xd8e0 ;
Basic block id 937 - num instructions 3
 Instr 3467 @ 0xd8b0 (55472) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 3468 @ 0xd8c0 (55488) - ISETP.GT.U32.AND P0, PT, R6, 0x7f800000, PT ;
 Instr 3469 @ 0xd8d0 (55504) - SEL R0, R0, 0x7c, P0 ;
Basic block id 938 - num instructions 6
 Instr 3470 @ 0xd8e0 (55520) - BSYNC B0 ;
 Instr 3471 @ 0xd8f0 (55536) - LOP3.LUT R28, R28, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3472 @ 0xd900 (55552) - SHF.R.U32.HI R3, RZ, 0x18, R28 ;
 Instr 3473 @ 0xd910 (55568) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 3474 @ 0xd920 (55584) - STG.E.U8.SYS [R4], R3 ;
 Instr 3475 @ 0xd930 (55600) - BRA 0xe060 ;
Basic block id 939 - num instructions 8
 Instr 3476 @ 0xd940 (55616) - FSETP.GTU.AND P0, PT, |R28|, +INF , PT ;
 Instr 3477 @ 0xd950 (55632) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 3478 @ 0xd960 (55648) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R28 ;
 Instr 3479 @ 0xd970 (55664) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3480 @ 0xd980 (55680) - @!P0 IADD3 R7, R28, 0x7fff, R7 ;
 Instr 3481 @ 0xd990 (55696) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 3482 @ 0xd9a0 (55712) - STG.E.U16.SYS [R4], R3 ;
 Instr 3483 @ 0xd9b0 (55728) - BRA 0xe060 ;
Basic block id 940 - num instructions 2
 Instr 3484 @ 0xd9c0 (55744) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 3485 @ 0xd9d0 (55760) - @P0 BRA 0xdd90 ;
Basic block id 941 - num instructions 2
 Instr 3486 @ 0xd9e0 (55776) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 3487 @ 0xd9f0 (55792) - @!P0 BRA 0xdc00 ;
Basic block id 942 - num instructions 2
 Instr 3488 @ 0xda00 (55808) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 3489 @ 0xda10 (55824) - @!P0 BRA 0xda70 ;
Basic block id 943 - num instructions 2
 Instr 3490 @ 0xda20 (55840) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3491 @ 0xda30 (55856) - @P0 BRA 0xdee0 ;
Basic block id 944 - num instructions 3
 Instr 3492 @ 0xda40 (55872) - F2I.U32.TRUNC.NTZ R3, R28 ;
 Instr 3493 @ 0xda50 (55888) - STG.E.U16.SYS [R4], R3 ;
 Instr 3494 @ 0xda60 (55904) - BRA 0xe060 ;
Basic block id 945 - num instructions 6
 Instr 3495 @ 0xda70 (55920) - LOP3.LUT R6, R28, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3496 @ 0xda80 (55936) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3497 @ 0xda90 (55952) - BSSY B0, 0xdbe0 ;
 Instr 3498 @ 0xdaa0 (55968) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3499 @ 0xdab0 (55984) - ISETP.GT.U32.AND P0, PT, R6, 0x437fffff, PT ;
 Instr 3500 @ 0xdac0 (56000) - @P0 BRA 0xdbd0 ;
Basic block id 946 - num instructions 2
 Instr 3501 @ 0xdad0 (56016) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
 Instr 3502 @ 0xdae0 (56032) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R28 ;
Basic block id 947 - num instructions 5
 Instr 3503 @ 0xdaf0 (56048) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3504 @ 0xdb00 (56064) - @P0 IADD3 R0, R28, 0x487ffff, R3 ;
 Instr 3505 @ 0xdb10 (56080) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3506 @ 0xdb20 (56096) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3507 @ 0xdb30 (56112) - @P0 BRA 0xdb90 ;
Basic block id 948 - num instructions 5
 Instr 3508 @ 0xdb40 (56128) - FADD R0, R6, 8192 ;
 Instr 3509 @ 0xdb50 (56144) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3510 @ 0xdb60 (56160) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3511 @ 0xdb70 (56176) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3512 @ 0xdb80 (56192) - @!P0 BRA 0xdbd0 ;
Basic block id 949 - num instructions 4
 Instr 3513 @ 0xdb90 (56208) - LOP3.LUT R28, R28, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3514 @ 0xdba0 (56224) - SHF.R.U32.HI R28, RZ, 0x18, R28 ;
 Instr 3515 @ 0xdbb0 (56240) - LOP3.LUT R3, R3, R28, RZ, 0xfc, !PT ;
 Instr 3516 @ 0xdbc0 (56256) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 950 - num instructions 3
 Instr 3517 @ 0xdbd0 (56272) - BSYNC B0 ;
 Instr 3518 @ 0xdbe0 (56288) - STG.E.U8.SYS [R4], R0 ;
 Instr 3519 @ 0xdbf0 (56304) - BRA 0xe060 ;
Basic block id 951 - num instructions 6
 Instr 3520 @ 0xdc00 (56320) - LOP3.LUT R6, R28, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3521 @ 0xdc10 (56336) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3522 @ 0xdc20 (56352) - BSSY B0, 0xdd70 ;
 Instr 3523 @ 0xdc30 (56368) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3524 @ 0xdc40 (56384) - ISETP.GT.U32.AND P0, PT, R6, 0x477fffff, PT ;
 Instr 3525 @ 0xdc50 (56400) - @P0 BRA 0xdd60 ;
Basic block id 952 - num instructions 2
 Instr 3526 @ 0xdc60 (56416) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
 Instr 3527 @ 0xdc70 (56432) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R28 ;
Basic block id 953 - num instructions 5
 Instr 3528 @ 0xdc80 (56448) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3529 @ 0xdc90 (56464) - @P0 IADD3 R0, R28, 0x88fffff, R3 ;
 Instr 3530 @ 0xdca0 (56480) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3531 @ 0xdcb0 (56496) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3532 @ 0xdcc0 (56512) - @P0 BRA 0xdd20 ;
Basic block id 954 - num instructions 5
 Instr 3533 @ 0xdcd0 (56528) - FADD R0, R6, 64 ;
 Instr 3534 @ 0xdce0 (56544) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3535 @ 0xdcf0 (56560) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3536 @ 0xdd00 (56576) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3537 @ 0xdd10 (56592) - @!P0 BRA 0xdd60 ;
Basic block id 955 - num instructions 4
 Instr 3538 @ 0xdd20 (56608) - LOP3.LUT R28, R28, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3539 @ 0xdd30 (56624) - SHF.R.U32.HI R28, RZ, 0x18, R28 ;
 Instr 3540 @ 0xdd40 (56640) - LOP3.LUT R3, R3, R28, RZ, 0xfc, !PT ;
 Instr 3541 @ 0xdd50 (56656) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 956 - num instructions 3
 Instr 3542 @ 0xdd60 (56672) - BSYNC B0 ;
 Instr 3543 @ 0xdd70 (56688) - STG.E.U8.SYS [R4], R0 ;
 Instr 3544 @ 0xdd80 (56704) - BRA 0xe060 ;
Basic block id 957 - num instructions 2
 Instr 3545 @ 0xdd90 (56720) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3546 @ 0xdda0 (56736) - @!P0 BRA 0xe040 ;
Basic block id 958 - num instructions 2
 Instr 3547 @ 0xddb0 (56752) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3548 @ 0xddc0 (56768) - @!P0 BRA 0xe010 ;
Basic block id 959 - num instructions 2
 Instr 3549 @ 0xddd0 (56784) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3550 @ 0xdde0 (56800) - @P0 BRA 0xdee0 ;
Basic block id 960 - num instructions 15
 Instr 3551 @ 0xddf0 (56816) - SHF.R.U32.HI R6, RZ, 0x17, R28 ;
 Instr 3552 @ 0xde00 (56832) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3553 @ 0xde10 (56848) - LOP3.LUT R3, R6, 0xff, RZ, 0xc0, !PT ;
 Instr 3554 @ 0xde20 (56864) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 3555 @ 0xde30 (56880) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R28.reuse ;
 Instr 3556 @ 0xde40 (56896) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R28, 0xf8, !PT ;
 Instr 3557 @ 0xde50 (56912) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 3558 @ 0xde60 (56928) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3559 @ 0xde70 (56944) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3560 @ 0xde80 (56960) - @P2 IADD3 R0, R6, 0x1, RZ ;
 Instr 3561 @ 0xde90 (56976) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3562 @ 0xdea0 (56992) - @!P0 IMAD.MOV R0, RZ, RZ, R6 ;
 Instr 3563 @ 0xdeb0 (57008) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 3564 @ 0xdec0 (57024) - STG.E.U8.SYS [R4], R3 ;
 Instr 3565 @ 0xded0 (57040) - BRA 0xe060 ;
Basic block id 961 - num instructions 18
 Instr 3566 @ 0xdee0 (57056) - UMOV UR4, 0xd33a2700 ;
 Instr 3567 @ 0xdef0 (57072) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3568 @ 0xdf00 (57088) - UMOV UR5, 0x7f88 ;
 Instr 3569 @ 0xdf10 (57104) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3570 @ 0xdf20 (57120) - UMOV UR6, 0xd33a2100 ;
 Instr 3571 @ 0xdf30 (57136) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3572 @ 0xdf40 (57152) - UMOV UR7, 0x7f88 ;
 Instr 3573 @ 0xdf50 (57168) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3574 @ 0xdf60 (57184) - UMOV UR8, 0xd33a0c00 ;
 Instr 3575 @ 0xdf70 (57200) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3576 @ 0xdf80 (57216) - UMOV UR9, 0x7f88 ;
 Instr 3577 @ 0xdf90 (57232) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3578 @ 0xdfa0 (57248) - MOV R20, 0xd7faf500 ;
 Instr 3579 @ 0xdfb0 (57264) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3580 @ 0xdfc0 (57280) - MOV R21, 0x7f88 ;
 Instr 3581 @ 0xdfd0 (57296) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3582 @ 0xdfe0 (57312) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3583 @ 0xdff0 (57328) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 962 - num instructions 1
 Instr 3584 @ 0xe000 (57344) - BRA 0xe060 ;
Basic block id 963 - num instructions 3
 Instr 3585 @ 0xe010 (57360) - F2I.U64.TRUNC R28, R28 ;
 Instr 3586 @ 0xe020 (57376) - STG.E.64.SYS [R4], R28 ;
 Instr 3587 @ 0xe030 (57392) - BRA 0xe060 ;
Basic block id 964 - num instructions 2
 Instr 3588 @ 0xe040 (57408) - F2I.U32.TRUNC.NTZ R3, R28 ;
 Instr 3589 @ 0xe050 (57424) - STG.E.SYS [R4], R3 ;
Basic block id 965 - num instructions 3
 Instr 3590 @ 0xe060 (57440) - IADD3 R36, R36, 0x380, RZ ;
 Instr 3591 @ 0xe070 (57456) - ISETP.GE.AND P0, PT, R36, R39, PT ;
 Instr 3592 @ 0xe080 (57472) - @P0 EXIT ;
Basic block id 966 - num instructions 6
 Instr 3593 @ 0xe090 (57488) - IADD3 R2, R2, 0x300, RZ ;
 Instr 3594 @ 0xe0a0 (57504) - ISETP.GT.AND P1, PT, R37, 0x9, PT ;
 Instr 3595 @ 0xe0b0 (57520) - IMAD R2, R2, c[0x0][0x188], RZ ;
 Instr 3596 @ 0xe0c0 (57536) - IADD3 R2, P0, R2, c[0x0][0x168], RZ ;
 Instr 3597 @ 0xe0d0 (57552) - IMAD.X R3, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 3598 @ 0xe0e0 (57568) - @P1 BRA 0xe490 ;
Basic block id 967 - num instructions 3
 Instr 3599 @ 0xe0f0 (57584) - PRMT R0, R31, 0x9910, RZ ;
 Instr 3600 @ 0xe100 (57600) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 3601 @ 0xe110 (57616) - @P0 BRA 0xe2e0 ;
Basic block id 968 - num instructions 2
 Instr 3602 @ 0xe120 (57632) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 3603 @ 0xe130 (57648) - @P0 BRA 0xe1f0 ;
Basic block id 969 - num instructions 2
 Instr 3604 @ 0xe140 (57664) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 3605 @ 0xe150 (57680) - @!P0 BRA 0xe1b0 ;
Basic block id 970 - num instructions 2
 Instr 3606 @ 0xe160 (57696) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 3607 @ 0xe170 (57712) - @P0 BRA 0xee30 ;
Basic block id 971 - num instructions 3
 Instr 3608 @ 0xe180 (57728) - F2I.TRUNC.NTZ R5, R30 ;
 Instr 3609 @ 0xe190 (57744) - STG.E.U8.SYS [R2], R5 ;
 Instr 3610 @ 0xe1a0 (57760) - EXIT ;
Basic block id 972 - num instructions 4
 Instr 3611 @ 0xe1b0 (57776) - F2I.S64.TRUNC R30, R30 ;
 Instr 3612 @ 0xe1c0 (57792) - IMAD.MOV.U32 R5, RZ, RZ, R30 ;
 Instr 3613 @ 0xe1d0 (57808) - STG.E.U8.SYS [R2], R5 ;
 Instr 3614 @ 0xe1e0 (57824) - EXIT ;
Basic block id 973 - num instructions 2
 Instr 3615 @ 0xe1f0 (57840) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 3616 @ 0xe200 (57856) - @!P0 BRA 0xe2b0 ;
Basic block id 974 - num instructions 2
 Instr 3617 @ 0xe210 (57872) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 3618 @ 0xe220 (57888) - @!P0 BRA 0xe280 ;
Basic block id 975 - num instructions 2
 Instr 3619 @ 0xe230 (57904) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 3620 @ 0xe240 (57920) - @P0 BRA 0xee30 ;
Basic block id 976 - num instructions 3
 Instr 3621 @ 0xe250 (57936) - F2I.S64.TRUNC R30, R30 ;
 Instr 3622 @ 0xe260 (57952) - STG.E.64.SYS [R2], R30 ;
 Instr 3623 @ 0xe270 (57968) - EXIT ;
Basic block id 977 - num instructions 3
 Instr 3624 @ 0xe280 (57984) - F2I.TRUNC.NTZ R5, R30 ;
 Instr 3625 @ 0xe290 (58000) - STG.E.SYS [R2], R5 ;
 Instr 3626 @ 0xe2a0 (58016) - EXIT ;
Basic block id 978 - num instructions 3
 Instr 3627 @ 0xe2b0 (58032) - F2I.TRUNC.NTZ R5, R30 ;
 Instr 3628 @ 0xe2c0 (58048) - STG.E.U16.SYS [R2], R5 ;
 Instr 3629 @ 0xe2d0 (58064) - EXIT ;
Basic block id 979 - num instructions 2
 Instr 3630 @ 0xe2e0 (58080) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 3631 @ 0xe2f0 (58096) - @P0 BRA 0xe390 ;
Basic block id 980 - num instructions 2
 Instr 3632 @ 0xe300 (58112) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 3633 @ 0xe310 (58128) - @!P0 BRA 0xe360 ;
Basic block id 981 - num instructions 2
 Instr 3634 @ 0xe320 (58144) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 3635 @ 0xe330 (58160) - @P0 BRA 0xee30 ;
Basic block id 982 - num instructions 2
 Instr 3636 @ 0xe340 (58176) - STG.E.SYS [R2], R30 ;
 Instr 3637 @ 0xe350 (58192) - EXIT ;
Basic block id 983 - num instructions 3
 Instr 3638 @ 0xe360 (58208) - F2F.F16.F32 R5, R30 ;
 Instr 3639 @ 0xe370 (58224) - STG.E.U16.SYS [R2], R5 ;
 Instr 3640 @ 0xe380 (58240) - EXIT ;
Basic block id 984 - num instructions 2
 Instr 3641 @ 0xe390 (58256) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 3642 @ 0xe3a0 (58272) - @!P0 BRA 0xe460 ;
Basic block id 985 - num instructions 2
 Instr 3643 @ 0xe3b0 (58288) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 3644 @ 0xe3c0 (58304) - @!P0 BRA 0xe420 ;
Basic block id 986 - num instructions 2
 Instr 3645 @ 0xe3d0 (58320) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 3646 @ 0xe3e0 (58336) - @P0 BRA 0xee30 ;
Basic block id 987 - num instructions 3
 Instr 3647 @ 0xe3f0 (58352) - IMAD.MOV.U32 R31, RZ, RZ, RZ ;
 Instr 3648 @ 0xe400 (58368) - STG.E.64.SYS [R2], R30 ;
 Instr 3649 @ 0xe410 (58384) - EXIT ;
Basic block id 988 - num instructions 4
 Instr 3650 @ 0xe420 (58400) - F2F.F16.F32 R5, R30 ;
 Instr 3651 @ 0xe430 (58416) - PRMT R5, R5, 0x5410, RZ ;
 Instr 3652 @ 0xe440 (58432) - STG.E.SYS [R2], R5 ;
 Instr 3653 @ 0xe450 (58448) - EXIT ;
Basic block id 989 - num instructions 3
 Instr 3654 @ 0xe460 (58464) - F2F.F64.F32 R30, R30 ;
 Instr 3655 @ 0xe470 (58480) - STG.E.64.SYS [R2], R30 ;
 Instr 3656 @ 0xe480 (58496) - EXIT ;
Basic block id 990 - num instructions 3
 Instr 3657 @ 0xe490 (58512) - PRMT R0, R31, 0x9910, RZ ;
 Instr 3658 @ 0xe4a0 (58528) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 3659 @ 0xe4b0 (58544) - @P0 BRA 0xe910 ;
Basic block id 991 - num instructions 2
 Instr 3660 @ 0xe4c0 (58560) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 3661 @ 0xe4d0 (58576) - @P0 BRA 0xe5a0 ;
Basic block id 992 - num instructions 2
 Instr 3662 @ 0xe4e0 (58592) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 3663 @ 0xe4f0 (58608) - @!P0 BRA 0xe560 ;
Basic block id 993 - num instructions 2
 Instr 3664 @ 0xe500 (58624) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 3665 @ 0xe510 (58640) - @P0 BRA 0xee30 ;
Basic block id 994 - num instructions 4
 Instr 3666 @ 0xe520 (58656) - FSETP.NEU.AND P0, PT, R30, RZ, PT ;
 Instr 3667 @ 0xe530 (58672) - SEL R5, RZ, 0x1, !P0 ;
 Instr 3668 @ 0xe540 (58688) - STG.E.U8.SYS [R2], R5 ;
 Instr 3669 @ 0xe550 (58704) - EXIT ;
Basic block id 995 - num instructions 4
 Instr 3670 @ 0xe560 (58720) - F2F.F64.F32 R4, R30 ;
 Instr 3671 @ 0xe570 (58736) - CS2R R6, SRZ ;
 Instr 3672 @ 0xe580 (58752) - STG.E.128.SYS [R2], R4 ;
 Instr 3673 @ 0xe590 (58768) - EXIT ;
Basic block id 996 - num instructions 2
 Instr 3674 @ 0xe5a0 (58784) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 3675 @ 0xe5b0 (58800) - @!P0 BRA 0xe890 ;
Basic block id 997 - num instructions 2
 Instr 3676 @ 0xe5c0 (58816) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 3677 @ 0xe5d0 (58832) - @!P0 BRA 0xe730 ;
Basic block id 998 - num instructions 2
 Instr 3678 @ 0xe5e0 (58848) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 3679 @ 0xe5f0 (58864) - @P0 BRA 0xee30 ;
Basic block id 999 - num instructions 7
 Instr 3680 @ 0xe600 (58880) - LOP3.LUT R4, R30.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3681 @ 0xe610 (58896) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3682 @ 0xe620 (58912) - LOP3.LUT R0, R30, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3683 @ 0xe630 (58928) - BSSY B0, 0xe700 ;
 Instr 3684 @ 0xe640 (58944) - ISETP.GT.U32.AND P0, PT, R4, 0x43efffff, PT ;
 Instr 3685 @ 0xe650 (58960) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 3686 @ 0xe660 (58976) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 1000 - num instructions 1
 Instr 3687 @ 0xe670 (58992) - @P0 BRA 0xe6f0 ;
Basic block id 1001 - num instructions 7
 Instr 3688 @ 0xe680 (59008) - ISETP.GE.U32.AND P0, PT, R4, 0x3c800000, PT ;
 Instr 3689 @ 0xe690 (59024) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R30 ;
 Instr 3690 @ 0xe6a0 (59040) - @!P0 FADD R4, R4, 16384 ;
 Instr 3691 @ 0xe6b0 (59056) - @P0 LOP3.LUT R5, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3692 @ 0xe6c0 (59072) - @P0 IADD3 R5, R30, 0x407ffff, R5 ;
 Instr 3693 @ 0xe6d0 (59088) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R5 ;
 Instr 3694 @ 0xe6e0 (59104) - @!P0 IADD3 R0, R4, -0x46800000, RZ ;
Basic block id 1002 - num instructions 4
 Instr 3695 @ 0xe6f0 (59120) - BSYNC B0 ;
 Instr 3696 @ 0xe700 (59136) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 3697 @ 0xe710 (59152) - STG.E.U8.SYS [R2], R7 ;
 Instr 3698 @ 0xe720 (59168) - EXIT ;
Basic block id 1003 - num instructions 5
 Instr 3699 @ 0xe730 (59184) - LOP3.LUT R4, R30, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3700 @ 0xe740 (59200) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3701 @ 0xe750 (59216) - BSSY B0, 0xe840 ;
 Instr 3702 @ 0xe760 (59232) - ISETP.GT.U32.AND P0, PT, R4, 0x477fffff, PT ;
 Instr 3703 @ 0xe770 (59248) - @P0 BRA 0xe800 ;
Basic block id 1004 - num instructions 8
 Instr 3704 @ 0xe780 (59264) - ISETP.GE.U32.AND P0, PT, R4, 0x38800000, PT ;
 Instr 3705 @ 0xe790 (59280) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R30 ;
 Instr 3706 @ 0xe7a0 (59296) - @!P0 FADD R4, R4, 128 ;
 Instr 3707 @ 0xe7b0 (59312) - @P0 LOP3.LUT R5, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3708 @ 0xe7c0 (59328) - @P0 IADD3 R5, R30, 0x80fffff, R5 ;
 Instr 3709 @ 0xe7d0 (59344) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R5 ;
 Instr 3710 @ 0xe7e0 (59360) - @!P0 IADD3 R0, R4, -0x43000000, RZ ;
 Instr 3711 @ 0xe7f0 (59376) - BRA 0xe830 ;
Basic block id 1005 - num instructions 3
 Instr 3712 @ 0xe800 (59392) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 3713 @ 0xe810 (59408) - ISETP.GT.U32.AND P0, PT, R4, 0x7f800000, PT ;
 Instr 3714 @ 0xe820 (59424) - SEL R0, R0, 0x7c, P0 ;
Basic block id 1006 - num instructions 6
 Instr 3715 @ 0xe830 (59440) - BSYNC B0 ;
 Instr 3716 @ 0xe840 (59456) - LOP3.LUT R30, R30, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3717 @ 0xe850 (59472) - SHF.R.U32.HI R5, RZ, 0x18, R30 ;
 Instr 3718 @ 0xe860 (59488) - LOP3.LUT R5, R0, R5, RZ, 0xfc, !PT ;
 Instr 3719 @ 0xe870 (59504) - STG.E.U8.SYS [R2], R5 ;
 Instr 3720 @ 0xe880 (59520) - EXIT ;
Basic block id 1007 - num instructions 8
 Instr 3721 @ 0xe890 (59536) - FSETP.GTU.AND P0, PT, |R30|, +INF , PT ;
 Instr 3722 @ 0xe8a0 (59552) - IMAD.MOV.U32 R5, RZ, RZ, 0x7fc0 ;
 Instr 3723 @ 0xe8b0 (59568) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R30 ;
 Instr 3724 @ 0xe8c0 (59584) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3725 @ 0xe8d0 (59600) - @!P0 IADD3 R7, R30, 0x7fff, R7 ;
 Instr 3726 @ 0xe8e0 (59616) - @!P0 SHF.R.U32.HI R5, RZ, 0x10, R7 ;
 Instr 3727 @ 0xe8f0 (59632) - STG.E.U16.SYS [R2], R5 ;
 Instr 3728 @ 0xe900 (59648) - EXIT ;
Basic block id 1008 - num instructions 2
 Instr 3729 @ 0xe910 (59664) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 3730 @ 0xe920 (59680) - @P0 BRA 0xece0 ;
Basic block id 1009 - num instructions 2
 Instr 3731 @ 0xe930 (59696) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 3732 @ 0xe940 (59712) - @!P0 BRA 0xeb50 ;
Basic block id 1010 - num instructions 2
 Instr 3733 @ 0xe950 (59728) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 3734 @ 0xe960 (59744) - @!P0 BRA 0xe9c0 ;
Basic block id 1011 - num instructions 2
 Instr 3735 @ 0xe970 (59760) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3736 @ 0xe980 (59776) - @P0 BRA 0xee30 ;
Basic block id 1012 - num instructions 3
 Instr 3737 @ 0xe990 (59792) - F2I.U32.TRUNC.NTZ R5, R30 ;
 Instr 3738 @ 0xe9a0 (59808) - STG.E.U16.SYS [R2], R5 ;
 Instr 3739 @ 0xe9b0 (59824) - EXIT ;
Basic block id 1013 - num instructions 6
 Instr 3740 @ 0xe9c0 (59840) - LOP3.LUT R5, R30, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3741 @ 0xe9d0 (59856) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3742 @ 0xe9e0 (59872) - BSSY B0, 0xeb30 ;
 Instr 3743 @ 0xe9f0 (59888) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3744 @ 0xea00 (59904) - ISETP.GT.U32.AND P0, PT, R5, 0x437fffff, PT ;
 Instr 3745 @ 0xea10 (59920) - @P0 BRA 0xeb20 ;
Basic block id 1014 - num instructions 2
 Instr 3746 @ 0xea20 (59936) - ISETP.GE.U32.AND P0, PT, R5, 0x3c000000, PT ;
 Instr 3747 @ 0xea30 (59952) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R30 ;
Basic block id 1015 - num instructions 5
 Instr 3748 @ 0xea40 (59968) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3749 @ 0xea50 (59984) - @P0 IADD3 R0, R30, 0x487ffff, R7 ;
 Instr 3750 @ 0xea60 (60000) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3751 @ 0xea70 (60016) - @P0 LOP3.LUT R4, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3752 @ 0xea80 (60032) - @P0 BRA 0xeae0 ;
Basic block id 1016 - num instructions 5
 Instr 3753 @ 0xea90 (60048) - FADD R0, R5, 8192 ;
 Instr 3754 @ 0xeaa0 (60064) - LOP3.LUT R4, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3755 @ 0xeab0 (60080) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3756 @ 0xeac0 (60096) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 3757 @ 0xead0 (60112) - @!P0 BRA 0xeb20 ;
Basic block id 1017 - num instructions 4
 Instr 3758 @ 0xeae0 (60128) - LOP3.LUT R30, R30, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3759 @ 0xeaf0 (60144) - SHF.R.U32.HI R5, RZ, 0x18, R30 ;
 Instr 3760 @ 0xeb00 (60160) - LOP3.LUT R4, R4, R5, RZ, 0xfc, !PT ;
 Instr 3761 @ 0xeb10 (60176) - PRMT R0, R4, 0x7610, R0 ;
Basic block id 1018 - num instructions 3
 Instr 3762 @ 0xeb20 (60192) - BSYNC B0 ;
 Instr 3763 @ 0xeb30 (60208) - STG.E.U8.SYS [R2], R0 ;
 Instr 3764 @ 0xeb40 (60224) - EXIT ;
Basic block id 1019 - num instructions 6
 Instr 3765 @ 0xeb50 (60240) - LOP3.LUT R5, R30, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3766 @ 0xeb60 (60256) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3767 @ 0xeb70 (60272) - BSSY B0, 0xecc0 ;
 Instr 3768 @ 0xeb80 (60288) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3769 @ 0xeb90 (60304) - ISETP.GT.U32.AND P0, PT, R5, 0x477fffff, PT ;
 Instr 3770 @ 0xeba0 (60320) - @P0 BRA 0xecb0 ;
Basic block id 1020 - num instructions 2
 Instr 3771 @ 0xebb0 (60336) - ISETP.GE.U32.AND P0, PT, R5, 0x38000000, PT ;
 Instr 3772 @ 0xebc0 (60352) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R30 ;
Basic block id 1021 - num instructions 5
 Instr 3773 @ 0xebd0 (60368) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3774 @ 0xebe0 (60384) - @P0 IADD3 R0, R30, 0x88fffff, R7 ;
 Instr 3775 @ 0xebf0 (60400) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3776 @ 0xec00 (60416) - @P0 LOP3.LUT R4, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3777 @ 0xec10 (60432) - @P0 BRA 0xec70 ;
Basic block id 1022 - num instructions 5
 Instr 3778 @ 0xec20 (60448) - FADD R0, R5, 64 ;
 Instr 3779 @ 0xec30 (60464) - LOP3.LUT R4, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3780 @ 0xec40 (60480) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3781 @ 0xec50 (60496) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 3782 @ 0xec60 (60512) - @!P0 BRA 0xecb0 ;
Basic block id 1023 - num instructions 4
 Instr 3783 @ 0xec70 (60528) - LOP3.LUT R30, R30, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3784 @ 0xec80 (60544) - SHF.R.U32.HI R5, RZ, 0x18, R30 ;
 Instr 3785 @ 0xec90 (60560) - LOP3.LUT R4, R4, R5, RZ, 0xfc, !PT ;
 Instr 3786 @ 0xeca0 (60576) - PRMT R0, R4, 0x7610, R0 ;
Basic block id 1024 - num instructions 3
 Instr 3787 @ 0xecb0 (60592) - BSYNC B0 ;
 Instr 3788 @ 0xecc0 (60608) - STG.E.U8.SYS [R2], R0 ;
 Instr 3789 @ 0xecd0 (60624) - EXIT ;
Basic block id 1025 - num instructions 2
 Instr 3790 @ 0xece0 (60640) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3791 @ 0xecf0 (60656) - @!P0 BRA 0xef90 ;
Basic block id 1026 - num instructions 2
 Instr 3792 @ 0xed00 (60672) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3793 @ 0xed10 (60688) - @!P0 BRA 0xef60 ;
Basic block id 1027 - num instructions 2
 Instr 3794 @ 0xed20 (60704) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3795 @ 0xed30 (60720) - @P0 BRA 0xee30 ;
Basic block id 1028 - num instructions 15
 Instr 3796 @ 0xed40 (60736) - SHF.R.U32.HI R4, RZ, 0x17, R30 ;
 Instr 3797 @ 0xed50 (60752) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3798 @ 0xed60 (60768) - LOP3.LUT R5, R4, 0xff, RZ, 0xc0, !PT ;
 Instr 3799 @ 0xed70 (60784) - ISETP.NE.AND P2, PT, R5, 0xff, PT ;
 Instr 3800 @ 0xed80 (60800) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R30.reuse ;
 Instr 3801 @ 0xed90 (60816) - @P2 LOP3.LUT P1, RZ, R5, 0x3fffff, R30, 0xf8, !PT ;
 Instr 3802 @ 0xeda0 (60832) - IMAD.MOV.U32 R5, RZ, RZ, 0xff ;
 Instr 3803 @ 0xedb0 (60848) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3804 @ 0xedc0 (60864) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3805 @ 0xedd0 (60880) - @P2 IADD3 R0, R4, 0x1, RZ ;
 Instr 3806 @ 0xede0 (60896) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3807 @ 0xedf0 (60912) - @!P0 IMAD.MOV R0, RZ, RZ, R4 ;
 Instr 3808 @ 0xee00 (60928) - @P2 IMAD.MOV.U32 R5, RZ, RZ, R0 ;
 Instr 3809 @ 0xee10 (60944) - STG.E.U8.SYS [R2], R5 ;
 Instr 3810 @ 0xee20 (60960) - EXIT ;
Basic block id 1029 - num instructions 18
 Instr 3811 @ 0xee30 (60976) - UMOV UR4, 0xd33a2700 ;
 Instr 3812 @ 0xee40 (60992) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3813 @ 0xee50 (61008) - UMOV UR5, 0x7f88 ;
 Instr 3814 @ 0xee60 (61024) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3815 @ 0xee70 (61040) - UMOV UR6, 0xd33a2100 ;
 Instr 3816 @ 0xee80 (61056) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3817 @ 0xee90 (61072) - UMOV UR7, 0x7f88 ;
 Instr 3818 @ 0xeea0 (61088) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3819 @ 0xeeb0 (61104) - UMOV UR8, 0xd33a0c00 ;
 Instr 3820 @ 0xeec0 (61120) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3821 @ 0xeed0 (61136) - UMOV UR9, 0x7f88 ;
 Instr 3822 @ 0xeee0 (61152) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3823 @ 0xeef0 (61168) - MOV R20, 0xd7fb0450 ;
 Instr 3824 @ 0xef00 (61184) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3825 @ 0xef10 (61200) - MOV R21, 0x7f88 ;
 Instr 3826 @ 0xef20 (61216) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3827 @ 0xef30 (61232) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3828 @ 0xef40 (61248) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 1030 - num instructions 1
 Instr 3829 @ 0xef50 (61264) - EXIT ;
Basic block id 1031 - num instructions 3
 Instr 3830 @ 0xef60 (61280) - F2I.U64.TRUNC R30, R30 ;
 Instr 3831 @ 0xef70 (61296) - STG.E.64.SYS [R2], R30 ;
 Instr 3832 @ 0xef80 (61312) - EXIT ;
Basic block id 1032 - num instructions 3
 Instr 3833 @ 0xef90 (61328) - F2I.U32.TRUNC.NTZ R5, R30 ;
 Instr 3834 @ 0xefa0 (61344) - STG.E.SYS [R2], R5 ;
 Instr 3835 @ 0xefb0 (61360) - EXIT ;
Basic block id 1033 - num instructions 1
 Instr 3836 @ 0xefc0 (61376) - BRA 0xefc0;
inspecting void at::native::unrolled_elementwise_kernel<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}, std::array<char*, 2ul>, 8, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1> >(int, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}, std::array<char*, 2ul>, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1>) - number basic blocks 1034
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 17 @ 0x110 (272) - LDC.U8 R19, c[0x0][0x17c] ;
Inject count_instr before - Instr 28 @ 0x1c0 (448) - ISETP.GT.AND P0, PT, R23, 0x4, PT ;
Inject count_instr before - Instr 30 @ 0x1e0 (480) - ISETP.GT.AND P0, PT, R23, 0x1, PT ;
Inject count_instr before - Instr 32 @ 0x200 (512) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 34 @ 0x220 (544) - ISETP.NE.AND P0, PT, R23, 0x1, PT ;
Inject count_instr before - Instr 36 @ 0x240 (576) - LDG.E.S8.SYS R2, [R4] ;
Inject count_instr before - Instr 39 @ 0x270 (624) - LDG.E.U8.SYS R2, [R4] ;
Inject count_instr before - Instr 42 @ 0x2a0 (672) - ISETP.NE.AND P0, PT, R23, 0x2, PT ;
Inject count_instr before - Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R23, 0x3, PT ;
Inject count_instr before - Instr 46 @ 0x2e0 (736) - ISETP.NE.AND P0, PT, R23, 0x4, PT ;
Inject count_instr before - Instr 48 @ 0x300 (768) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 51 @ 0x330 (816) - LDG.E.SYS R2, [R4] ;
Inject count_instr before - Instr 54 @ 0x360 (864) - LDG.E.U16.SYS R2, [R4] ;
Inject count_instr before - Instr 57 @ 0x390 (912) - ISETP.GT.AND P0, PT, R23, 0x6, PT ;
Inject count_instr before - Instr 59 @ 0x3b0 (944) - ISETP.NE.AND P0, PT, R23, 0x5, PT ;
Inject count_instr before - Instr 61 @ 0x3d0 (976) - ISETP.NE.AND P0, PT, R23, 0x6, PT ;
Inject count_instr before - Instr 63 @ 0x3f0 (1008) - LDG.E.SYS R2, [R4] ;
Inject count_instr before - Instr 65 @ 0x410 (1040) - LDG.E.U16.SYS R2, [R4] ;
Inject count_instr before - Instr 68 @ 0x440 (1088) - ISETP.NE.AND P0, PT, R23, 0x7, PT ;
Inject count_instr before - Instr 70 @ 0x460 (1120) - ISETP.NE.AND P0, PT, R23, 0x8, PT ;
Inject count_instr before - Instr 72 @ 0x480 (1152) - ISETP.NE.AND P0, PT, R23, 0x9, PT ;
Inject count_instr before - Instr 74 @ 0x4a0 (1184) - LDG.E.SYS R2, [R4] ;
Inject count_instr before - Instr 76 @ 0x4c0 (1216) - LDG.E.U16.SYS R2, [R4] ;
Inject count_instr before - Instr 78 @ 0x4e0 (1248) - BRA 0xf80 ;
Inject count_instr before - Instr 79 @ 0x4f0 (1264) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 82 @ 0x520 (1312) - ISETP.GT.AND P0, PT, R23, 0x18, PT ;
Inject count_instr before - Instr 84 @ 0x540 (1344) - ISETP.GT.AND P0, PT, R23, 0xe, PT ;
Inject count_instr before - Instr 86 @ 0x560 (1376) - ISETP.NE.AND P0, PT, R23, 0xa, PT ;
Inject count_instr before - Instr 88 @ 0x580 (1408) - ISETP.NE.AND P0, PT, R23, 0xb, PT ;
Inject count_instr before - Instr 90 @ 0x5a0 (1440) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 94 @ 0x5e0 (1504) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 97 @ 0x610 (1552) - ISETP.NE.AND P0, PT, R23, 0xf, PT ;
Inject count_instr before - Instr 99 @ 0x630 (1584) - ISETP.NE.AND P0, PT, R23, 0x17, PT ;
Inject count_instr before - Instr 101 @ 0x650 (1616) - ISETP.NE.AND P0, PT, R23, 0x18, PT ;
Inject count_instr before - Instr 103 @ 0x670 (1648) - LDG.E.U8.SYS R2, [R4] ;
Inject count_instr before - Instr 123 @ 0x7b0 (1968) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 137 @ 0x890 (2192) - LDG.E.U16.SYS R2, [R4] ;
Inject count_instr before - Instr 140 @ 0x8c0 (2240) - ISETP.GT.AND P0, PT, R23, 0x1b, PT ;
Inject count_instr before - Instr 142 @ 0x8e0 (2272) - ISETP.NE.AND P0, PT, R23, 0x19, PT ;
Inject count_instr before - Instr 144 @ 0x900 (2304) - ISETP.NE.AND P0, PT, R23, 0x1a, PT ;
Inject count_instr before - Instr 146 @ 0x920 (2336) - ISETP.NE.AND P0, PT, R23, 0x1b, PT ;
Inject count_instr before - Instr 148 @ 0x940 (2368) - LDG.E.U16.SYS R2, [R4] ;
Inject count_instr before - Instr 151 @ 0x970 (2416) - LDG.E.U8.SYS R5, [R4] ;
Inject count_instr before - Instr 155 @ 0x9b0 (2480) - ISETP.NE.AND P0, PT, R5, 0x80, PT ;
Inject count_instr before - Instr 158 @ 0x9e0 (2528) - LOP3.LUT R0, R5, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 169 @ 0xa90 (2704) - FLO.U32 R3, R2 ;
Inject count_instr before - Instr 175 @ 0xaf0 (2800) - BSYNC B0 ;
Inject count_instr before - Instr 180 @ 0xb40 (2880) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 184 @ 0xb80 (2944) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - LOP3.LUT R0, R4, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 198 @ 0xc60 (3168) - FLO.U32 R3, R2 ;
Inject count_instr before - Instr 204 @ 0xcc0 (3264) - BSYNC B0 ;
Inject count_instr before - Instr 209 @ 0xd10 (3344) - ISETP.NE.AND P0, PT, R23, 0x1c, PT ;
Inject count_instr before - Instr 211 @ 0xd30 (3376) - ISETP.NE.AND P0, PT, R23, 0x1d, PT ;
Inject count_instr before - Instr 213 @ 0xd50 (3408) - ISETP.NE.AND P0, PT, R23, 0x2c, PT ;
Inject count_instr before - Instr 215 @ 0xd70 (3440) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 219 @ 0xdb0 (3504) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 223 @ 0xdf0 (3568) - UMOV UR8, 0xd33a2700 ;
Inject count_instr before - Instr 241 @ 0xf10 (3856) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 243 @ 0xf30 (3888) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 246 @ 0xf60 (3936) - LDG.E.SYS R2, [R4] ;
Inject count_instr before - Instr 248 @ 0xf80 (3968) - BSYNC B6 ;
Inject count_instr before - Instr 252 @ 0xfc0 (4032) - IMAD R0, R17, 0x400, R0 ;
Inject count_instr before - Instr 260 @ 0x1040 (4160) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 263 @ 0x1070 (4208) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 265 @ 0x1090 (4240) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 267 @ 0x10b0 (4272) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 269 @ 0x10d0 (4304) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 272 @ 0x1100 (4352) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 275 @ 0x1130 (4400) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 277 @ 0x1150 (4432) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 279 @ 0x1170 (4464) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 281 @ 0x1190 (4496) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 284 @ 0x11c0 (4544) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 287 @ 0x11f0 (4592) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 290 @ 0x1220 (4640) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 292 @ 0x1240 (4672) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 294 @ 0x1260 (4704) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 296 @ 0x1280 (4736) - LDG.E.SYS R16, [R4] ;
Inject count_instr before - Instr 298 @ 0x12a0 (4768) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 301 @ 0x12d0 (4816) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 303 @ 0x12f0 (4848) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 305 @ 0x1310 (4880) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 307 @ 0x1330 (4912) - LDG.E.SYS R16, [R4] ;
Inject count_instr before - Instr 309 @ 0x1350 (4944) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 312 @ 0x1380 (4992) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 315 @ 0x13b0 (5040) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 318 @ 0x13e0 (5088) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 320 @ 0x1400 (5120) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 322 @ 0x1420 (5152) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 324 @ 0x1440 (5184) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 328 @ 0x1480 (5248) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 331 @ 0x14b0 (5296) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 333 @ 0x14d0 (5328) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 335 @ 0x14f0 (5360) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 337 @ 0x1510 (5392) - LDG.E.U8.SYS R16, [R4] ;
Inject count_instr before - Instr 357 @ 0x1650 (5712) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 370 @ 0x1720 (5920) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 373 @ 0x1750 (5968) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 375 @ 0x1770 (6000) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 377 @ 0x1790 (6032) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 379 @ 0x17b0 (6064) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 381 @ 0x17d0 (6096) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 384 @ 0x1800 (6144) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 388 @ 0x1840 (6208) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 391 @ 0x1870 (6256) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 402 @ 0x1920 (6432) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 408 @ 0x1980 (6528) - BSYNC B0 ;
Inject count_instr before - Instr 413 @ 0x19d0 (6608) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 417 @ 0x1a10 (6672) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 420 @ 0x1a40 (6720) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 431 @ 0x1af0 (6896) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 437 @ 0x1b50 (6992) - BSYNC B0 ;
Inject count_instr before - Instr 442 @ 0x1ba0 (7072) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 444 @ 0x1bc0 (7104) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 446 @ 0x1be0 (7136) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 448 @ 0x1c00 (7168) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 452 @ 0x1c40 (7232) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 456 @ 0x1c80 (7296) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 474 @ 0x1da0 (7584) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 476 @ 0x1dc0 (7616) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 479 @ 0x1df0 (7664) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 481 @ 0x1e10 (7696) - BSYNC B6 ;
Inject count_instr before - Instr 485 @ 0x1e50 (7760) - IMAD R0, R17, 0x400, R0 ;
Inject count_instr before - Instr 493 @ 0x1ed0 (7888) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 496 @ 0x1f00 (7936) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 498 @ 0x1f20 (7968) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 500 @ 0x1f40 (8000) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 502 @ 0x1f60 (8032) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 505 @ 0x1f90 (8080) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 508 @ 0x1fc0 (8128) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 510 @ 0x1fe0 (8160) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 512 @ 0x2000 (8192) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 514 @ 0x2020 (8224) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 517 @ 0x2050 (8272) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 520 @ 0x2080 (8320) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 523 @ 0x20b0 (8368) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 525 @ 0x20d0 (8400) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 527 @ 0x20f0 (8432) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 529 @ 0x2110 (8464) - LDG.E.SYS R18, [R4] ;
Inject count_instr before - Instr 531 @ 0x2130 (8496) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 534 @ 0x2160 (8544) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 536 @ 0x2180 (8576) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 538 @ 0x21a0 (8608) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 540 @ 0x21c0 (8640) - LDG.E.SYS R18, [R4] ;
Inject count_instr before - Instr 542 @ 0x21e0 (8672) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 545 @ 0x2210 (8720) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 548 @ 0x2240 (8768) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 551 @ 0x2270 (8816) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 553 @ 0x2290 (8848) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 555 @ 0x22b0 (8880) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 557 @ 0x22d0 (8912) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 561 @ 0x2310 (8976) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 564 @ 0x2340 (9024) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 566 @ 0x2360 (9056) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 568 @ 0x2380 (9088) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 570 @ 0x23a0 (9120) - LDG.E.U8.SYS R18, [R4] ;
Inject count_instr before - Instr 590 @ 0x24e0 (9440) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 603 @ 0x25b0 (9648) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 606 @ 0x25e0 (9696) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 608 @ 0x2600 (9728) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 610 @ 0x2620 (9760) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 612 @ 0x2640 (9792) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 614 @ 0x2660 (9824) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 617 @ 0x2690 (9872) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 621 @ 0x26d0 (9936) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 624 @ 0x2700 (9984) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 635 @ 0x27b0 (10160) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 641 @ 0x2810 (10256) - BSYNC B0 ;
Inject count_instr before - Instr 646 @ 0x2860 (10336) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 650 @ 0x28a0 (10400) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 653 @ 0x28d0 (10448) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 664 @ 0x2980 (10624) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 670 @ 0x29e0 (10720) - BSYNC B0 ;
Inject count_instr before - Instr 675 @ 0x2a30 (10800) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 677 @ 0x2a50 (10832) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 679 @ 0x2a70 (10864) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 681 @ 0x2a90 (10896) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 685 @ 0x2ad0 (10960) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 689 @ 0x2b10 (11024) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 707 @ 0x2c30 (11312) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 709 @ 0x2c50 (11344) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 712 @ 0x2c80 (11392) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 714 @ 0x2ca0 (11424) - BSYNC B6 ;
Inject count_instr before - Instr 718 @ 0x2ce0 (11488) - IMAD R0, R17, 0x400, R0 ;
Inject count_instr before - Instr 726 @ 0x2d60 (11616) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 729 @ 0x2d90 (11664) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 731 @ 0x2db0 (11696) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 733 @ 0x2dd0 (11728) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 735 @ 0x2df0 (11760) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 738 @ 0x2e20 (11808) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 741 @ 0x2e50 (11856) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 743 @ 0x2e70 (11888) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 745 @ 0x2e90 (11920) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 747 @ 0x2eb0 (11952) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 750 @ 0x2ee0 (12000) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 753 @ 0x2f10 (12048) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 756 @ 0x2f40 (12096) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 758 @ 0x2f60 (12128) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 760 @ 0x2f80 (12160) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 762 @ 0x2fa0 (12192) - LDG.E.SYS R22, [R4] ;
Inject count_instr before - Instr 764 @ 0x2fc0 (12224) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 767 @ 0x2ff0 (12272) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 769 @ 0x3010 (12304) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 771 @ 0x3030 (12336) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 773 @ 0x3050 (12368) - LDG.E.SYS R22, [R4] ;
Inject count_instr before - Instr 775 @ 0x3070 (12400) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 778 @ 0x30a0 (12448) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 781 @ 0x30d0 (12496) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 784 @ 0x3100 (12544) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 786 @ 0x3120 (12576) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 788 @ 0x3140 (12608) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 790 @ 0x3160 (12640) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 794 @ 0x31a0 (12704) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 797 @ 0x31d0 (12752) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 799 @ 0x31f0 (12784) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 801 @ 0x3210 (12816) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 803 @ 0x3230 (12848) - LDG.E.U8.SYS R22, [R4] ;
Inject count_instr before - Instr 823 @ 0x3370 (13168) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 836 @ 0x3440 (13376) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 839 @ 0x3470 (13424) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 841 @ 0x3490 (13456) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 843 @ 0x34b0 (13488) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 845 @ 0x34d0 (13520) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 847 @ 0x34f0 (13552) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 850 @ 0x3520 (13600) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 854 @ 0x3560 (13664) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 857 @ 0x3590 (13712) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 868 @ 0x3640 (13888) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 874 @ 0x36a0 (13984) - BSYNC B0 ;
Inject count_instr before - Instr 879 @ 0x36f0 (14064) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 883 @ 0x3730 (14128) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 886 @ 0x3760 (14176) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 897 @ 0x3810 (14352) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 903 @ 0x3870 (14448) - BSYNC B0 ;
Inject count_instr before - Instr 908 @ 0x38c0 (14528) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 910 @ 0x38e0 (14560) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 912 @ 0x3900 (14592) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 914 @ 0x3920 (14624) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 918 @ 0x3960 (14688) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 922 @ 0x39a0 (14752) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 940 @ 0x3ac0 (15040) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 942 @ 0x3ae0 (15072) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 945 @ 0x3b10 (15120) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 947 @ 0x3b30 (15152) - BSYNC B6 ;
Inject count_instr before - Instr 951 @ 0x3b70 (15216) - IMAD R0, R17, 0x400, R0 ;
Inject count_instr before - Instr 959 @ 0x3bf0 (15344) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 962 @ 0x3c20 (15392) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 964 @ 0x3c40 (15424) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 966 @ 0x3c60 (15456) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 968 @ 0x3c80 (15488) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 971 @ 0x3cb0 (15536) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 974 @ 0x3ce0 (15584) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 976 @ 0x3d00 (15616) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 978 @ 0x3d20 (15648) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 980 @ 0x3d40 (15680) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 983 @ 0x3d70 (15728) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 986 @ 0x3da0 (15776) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 989 @ 0x3dd0 (15824) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 991 @ 0x3df0 (15856) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 993 @ 0x3e10 (15888) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 995 @ 0x3e30 (15920) - LDG.E.SYS R24, [R4] ;
Inject count_instr before - Instr 997 @ 0x3e50 (15952) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1000 @ 0x3e80 (16000) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1002 @ 0x3ea0 (16032) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1004 @ 0x3ec0 (16064) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1006 @ 0x3ee0 (16096) - LDG.E.SYS R24, [R4] ;
Inject count_instr before - Instr 1008 @ 0x3f00 (16128) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1011 @ 0x3f30 (16176) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1014 @ 0x3f60 (16224) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 1017 @ 0x3f90 (16272) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1019 @ 0x3fb0 (16304) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1021 @ 0x3fd0 (16336) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1023 @ 0x3ff0 (16368) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1027 @ 0x4030 (16432) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1030 @ 0x4060 (16480) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1032 @ 0x4080 (16512) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1034 @ 0x40a0 (16544) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1036 @ 0x40c0 (16576) - LDG.E.U8.SYS R24, [R4] ;
Inject count_instr before - Instr 1056 @ 0x4200 (16896) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1069 @ 0x42d0 (17104) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1072 @ 0x4300 (17152) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1074 @ 0x4320 (17184) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1076 @ 0x4340 (17216) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1078 @ 0x4360 (17248) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1080 @ 0x4380 (17280) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1083 @ 0x43b0 (17328) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1087 @ 0x43f0 (17392) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1090 @ 0x4420 (17440) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1101 @ 0x44d0 (17616) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1107 @ 0x4530 (17712) - BSYNC B0 ;
Inject count_instr before - Instr 1112 @ 0x4580 (17792) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 1116 @ 0x45c0 (17856) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 1119 @ 0x45f0 (17904) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1130 @ 0x46a0 (18080) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1136 @ 0x4700 (18176) - BSYNC B0 ;
Inject count_instr before - Instr 1141 @ 0x4750 (18256) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1143 @ 0x4770 (18288) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1145 @ 0x4790 (18320) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1147 @ 0x47b0 (18352) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1151 @ 0x47f0 (18416) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1155 @ 0x4830 (18480) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1173 @ 0x4950 (18768) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
Inject count_instr before - Instr 1175 @ 0x4970 (18800) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1178 @ 0x49a0 (18848) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1180 @ 0x49c0 (18880) - BSYNC B6 ;
Inject count_instr before - Instr 1184 @ 0x4a00 (18944) - IMAD R0, R17, 0x400, R0 ;
Inject count_instr before - Instr 1192 @ 0x4a80 (19072) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 1195 @ 0x4ab0 (19120) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1197 @ 0x4ad0 (19152) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 1199 @ 0x4af0 (19184) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1201 @ 0x4b10 (19216) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 1204 @ 0x4b40 (19264) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1207 @ 0x4b70 (19312) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 1209 @ 0x4b90 (19344) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 1211 @ 0x4bb0 (19376) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 1213 @ 0x4bd0 (19408) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1216 @ 0x4c00 (19456) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1219 @ 0x4c30 (19504) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1222 @ 0x4c60 (19552) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1224 @ 0x4c80 (19584) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 1226 @ 0x4ca0 (19616) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1228 @ 0x4cc0 (19648) - LDG.E.SYS R26, [R4] ;
Inject count_instr before - Instr 1230 @ 0x4ce0 (19680) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1233 @ 0x4d10 (19728) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1235 @ 0x4d30 (19760) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1237 @ 0x4d50 (19792) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1239 @ 0x4d70 (19824) - LDG.E.SYS R26, [R4] ;
Inject count_instr before - Instr 1241 @ 0x4d90 (19856) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1244 @ 0x4dc0 (19904) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1247 @ 0x4df0 (19952) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 1250 @ 0x4e20 (20000) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1252 @ 0x4e40 (20032) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1254 @ 0x4e60 (20064) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1256 @ 0x4e80 (20096) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1260 @ 0x4ec0 (20160) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1263 @ 0x4ef0 (20208) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1265 @ 0x4f10 (20240) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1267 @ 0x4f30 (20272) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1269 @ 0x4f50 (20304) - LDG.E.U8.SYS R26, [R4] ;
Inject count_instr before - Instr 1289 @ 0x5090 (20624) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1302 @ 0x5160 (20832) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1305 @ 0x5190 (20880) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1307 @ 0x51b0 (20912) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1309 @ 0x51d0 (20944) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1311 @ 0x51f0 (20976) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1313 @ 0x5210 (21008) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1316 @ 0x5240 (21056) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1320 @ 0x5280 (21120) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1323 @ 0x52b0 (21168) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1334 @ 0x5360 (21344) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1340 @ 0x53c0 (21440) - BSYNC B0 ;
Inject count_instr before - Instr 1345 @ 0x5410 (21520) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 1349 @ 0x5450 (21584) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 1352 @ 0x5480 (21632) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1363 @ 0x5530 (21808) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1369 @ 0x5590 (21904) - BSYNC B0 ;
Inject count_instr before - Instr 1374 @ 0x55e0 (21984) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1376 @ 0x5600 (22016) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1378 @ 0x5620 (22048) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1380 @ 0x5640 (22080) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1384 @ 0x5680 (22144) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1388 @ 0x56c0 (22208) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1406 @ 0x57e0 (22496) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1408 @ 0x5800 (22528) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1411 @ 0x5830 (22576) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1413 @ 0x5850 (22608) - BSYNC B6 ;
Inject count_instr before - Instr 1417 @ 0x5890 (22672) - IMAD R0, R17, 0x400, R0 ;
Inject count_instr before - Instr 1425 @ 0x5910 (22800) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 1428 @ 0x5940 (22848) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1430 @ 0x5960 (22880) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 1432 @ 0x5980 (22912) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1434 @ 0x59a0 (22944) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 1437 @ 0x59d0 (22992) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1440 @ 0x5a00 (23040) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 1442 @ 0x5a20 (23072) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 1444 @ 0x5a40 (23104) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 1446 @ 0x5a60 (23136) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1449 @ 0x5a90 (23184) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1452 @ 0x5ac0 (23232) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1455 @ 0x5af0 (23280) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1457 @ 0x5b10 (23312) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 1459 @ 0x5b30 (23344) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1461 @ 0x5b50 (23376) - LDG.E.SYS R28, [R4] ;
Inject count_instr before - Instr 1463 @ 0x5b70 (23408) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1466 @ 0x5ba0 (23456) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1468 @ 0x5bc0 (23488) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1470 @ 0x5be0 (23520) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1472 @ 0x5c00 (23552) - LDG.E.SYS R28, [R4] ;
Inject count_instr before - Instr 1474 @ 0x5c20 (23584) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1477 @ 0x5c50 (23632) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1480 @ 0x5c80 (23680) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 1483 @ 0x5cb0 (23728) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1485 @ 0x5cd0 (23760) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1487 @ 0x5cf0 (23792) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1489 @ 0x5d10 (23824) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1493 @ 0x5d50 (23888) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1496 @ 0x5d80 (23936) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1498 @ 0x5da0 (23968) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1500 @ 0x5dc0 (24000) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1502 @ 0x5de0 (24032) - LDG.E.U8.SYS R28, [R4] ;
Inject count_instr before - Instr 1522 @ 0x5f20 (24352) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1535 @ 0x5ff0 (24560) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1538 @ 0x6020 (24608) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1540 @ 0x6040 (24640) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1542 @ 0x6060 (24672) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1544 @ 0x6080 (24704) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1546 @ 0x60a0 (24736) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1549 @ 0x60d0 (24784) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1553 @ 0x6110 (24848) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1556 @ 0x6140 (24896) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1567 @ 0x61f0 (25072) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1573 @ 0x6250 (25168) - BSYNC B0 ;
Inject count_instr before - Instr 1578 @ 0x62a0 (25248) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 1582 @ 0x62e0 (25312) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 1585 @ 0x6310 (25360) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1596 @ 0x63c0 (25536) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1602 @ 0x6420 (25632) - BSYNC B0 ;
Inject count_instr before - Instr 1607 @ 0x6470 (25712) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1609 @ 0x6490 (25744) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1611 @ 0x64b0 (25776) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1613 @ 0x64d0 (25808) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1617 @ 0x6510 (25872) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1621 @ 0x6550 (25936) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1639 @ 0x6670 (26224) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1641 @ 0x6690 (26256) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1644 @ 0x66c0 (26304) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1646 @ 0x66e0 (26336) - BSYNC B6 ;
Inject count_instr before - Instr 1650 @ 0x6720 (26400) - IMAD R0, R17, 0x400, R0 ;
Inject count_instr before - Instr 1656 @ 0x6780 (26496) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 1659 @ 0x67b0 (26544) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1661 @ 0x67d0 (26576) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
Inject count_instr before - Instr 1663 @ 0x67f0 (26608) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1665 @ 0x6810 (26640) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 1668 @ 0x6840 (26688) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1671 @ 0x6870 (26736) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 1673 @ 0x6890 (26768) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 1675 @ 0x68b0 (26800) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 1677 @ 0x68d0 (26832) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1680 @ 0x6900 (26880) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1683 @ 0x6930 (26928) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1686 @ 0x6960 (26976) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1688 @ 0x6980 (27008) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 1690 @ 0x69a0 (27040) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1692 @ 0x69c0 (27072) - LDG.E.SYS R30, [R4] ;
Inject count_instr before - Instr 1694 @ 0x69e0 (27104) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1697 @ 0x6a10 (27152) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1699 @ 0x6a30 (27184) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1701 @ 0x6a50 (27216) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1703 @ 0x6a70 (27248) - LDG.E.SYS R30, [R4] ;
Inject count_instr before - Instr 1705 @ 0x6a90 (27280) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1708 @ 0x6ac0 (27328) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1711 @ 0x6af0 (27376) - PRMT R0, R19, 0x9910, RZ ;
Inject count_instr before - Instr 1714 @ 0x6b20 (27424) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1716 @ 0x6b40 (27456) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1718 @ 0x6b60 (27488) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1720 @ 0x6b80 (27520) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1724 @ 0x6bc0 (27584) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1727 @ 0x6bf0 (27632) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1729 @ 0x6c10 (27664) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1731 @ 0x6c30 (27696) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1733 @ 0x6c50 (27728) - LDG.E.U8.SYS R30, [R4] ;
Inject count_instr before - Instr 1753 @ 0x6d90 (28048) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1766 @ 0x6e60 (28256) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1769 @ 0x6e90 (28304) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1771 @ 0x6eb0 (28336) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1773 @ 0x6ed0 (28368) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1775 @ 0x6ef0 (28400) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1777 @ 0x6f10 (28432) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1780 @ 0x6f40 (28480) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1783 @ 0x6f70 (28528) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1786 @ 0x6fa0 (28576) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1797 @ 0x7050 (28752) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1803 @ 0x70b0 (28848) - BSYNC B0 ;
Inject count_instr before - Instr 1808 @ 0x7100 (28928) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 1811 @ 0x7130 (28976) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 1814 @ 0x7160 (29024) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1825 @ 0x7210 (29200) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1831 @ 0x7270 (29296) - BSYNC B0 ;
Inject count_instr before - Instr 1836 @ 0x72c0 (29376) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1838 @ 0x72e0 (29408) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1840 @ 0x7300 (29440) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1842 @ 0x7320 (29472) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1846 @ 0x7360 (29536) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1850 @ 0x73a0 (29600) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1868 @ 0x74c0 (29888) - BRA 0x7520 ;
Inject count_instr before - Instr 1869 @ 0x74d0 (29904) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1872 @ 0x7500 (29952) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1874 @ 0x7520 (29984) - BSYNC B7 ;
Inject count_instr before - Instr 1877 @ 0x7550 (30032) - LDC.U8 R31, c[0x0][0x184] ;
Inject count_instr before - Instr 1887 @ 0x75f0 (30192) - ISETP.GT.AND P0, PT, R37, 0x4, PT ;
Inject count_instr before - Instr 1889 @ 0x7610 (30224) - ISETP.GT.AND P0, PT, R37, 0x1, PT ;
Inject count_instr before - Instr 1891 @ 0x7630 (30256) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 1893 @ 0x7650 (30288) - ISETP.NE.AND P0, PT, R37, 0x1, PT ;
Inject count_instr before - Instr 1895 @ 0x7670 (30320) - F2I.TRUNC.NTZ R3, R2 ;
Inject count_instr before - Instr 1898 @ 0x76a0 (30368) - F2I.S64.TRUNC R2, R2 ;
Inject count_instr before - Instr 1902 @ 0x76e0 (30432) - ISETP.NE.AND P0, PT, R37, 0x2, PT ;
Inject count_instr before - Instr 1904 @ 0x7700 (30464) - ISETP.NE.AND P0, PT, R37, 0x3, PT ;
Inject count_instr before - Instr 1906 @ 0x7720 (30496) - ISETP.NE.AND P0, PT, R37, 0x4, PT ;
Inject count_instr before - Instr 1908 @ 0x7740 (30528) - F2I.S64.TRUNC R2, R2 ;
Inject count_instr before - Instr 1911 @ 0x7770 (30576) - F2I.TRUNC.NTZ R3, R2 ;
Inject count_instr before - Instr 1914 @ 0x77a0 (30624) - F2I.TRUNC.NTZ R3, R2 ;
Inject count_instr before - Instr 1917 @ 0x77d0 (30672) - ISETP.GT.AND P0, PT, R37, 0x6, PT ;
Inject count_instr before - Instr 1919 @ 0x77f0 (30704) - ISETP.NE.AND P0, PT, R37, 0x5, PT ;
Inject count_instr before - Instr 1921 @ 0x7810 (30736) - ISETP.NE.AND P0, PT, R37, 0x6, PT ;
Inject count_instr before - Instr 1923 @ 0x7830 (30768) - STG.E.SYS [R8], R2 ;
Inject count_instr before - Instr 1925 @ 0x7850 (30800) - F2F.F16.F32 R3, R2 ;
Inject count_instr before - Instr 1928 @ 0x7880 (30848) - ISETP.NE.AND P0, PT, R37, 0x7, PT ;
Inject count_instr before - Instr 1930 @ 0x78a0 (30880) - ISETP.NE.AND P0, PT, R37, 0x8, PT ;
Inject count_instr before - Instr 1932 @ 0x78c0 (30912) - ISETP.NE.AND P0, PT, R37, 0x9, PT ;
Inject count_instr before - Instr 1934 @ 0x78e0 (30944) - IMAD.MOV.U32 R3, RZ, RZ, RZ ;
Inject count_instr before - Instr 1937 @ 0x7910 (30992) - F2F.F16.F32 R3, R2 ;
Inject count_instr before - Instr 1941 @ 0x7950 (31056) - F2F.F64.F32 R2, R2 ;
Inject count_instr before - Instr 1944 @ 0x7980 (31104) - ISETP.GT.AND P0, PT, R37, 0x18, PT ;
Inject count_instr before - Instr 1946 @ 0x79a0 (31136) - ISETP.GT.AND P0, PT, R37, 0xe, PT ;
Inject count_instr before - Instr 1948 @ 0x79c0 (31168) - ISETP.NE.AND P0, PT, R37, 0xa, PT ;
Inject count_instr before - Instr 1950 @ 0x79e0 (31200) - ISETP.NE.AND P0, PT, R37, 0xb, PT ;
Inject count_instr before - Instr 1952 @ 0x7a00 (31232) - FSETP.NEU.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 1956 @ 0x7a40 (31296) - F2F.F64.F32 R4, R2 ;
Inject count_instr before - Instr 1960 @ 0x7a80 (31360) - ISETP.NE.AND P0, PT, R37, 0xf, PT ;
Inject count_instr before - Instr 1962 @ 0x7aa0 (31392) - ISETP.NE.AND P0, PT, R37, 0x17, PT ;
Inject count_instr before - Instr 1964 @ 0x7ac0 (31424) - ISETP.NE.AND P0, PT, R37, 0x18, PT ;
Inject count_instr before - Instr 1966 @ 0x7ae0 (31456) - LOP3.LUT R4, R2.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1973 @ 0x7b50 (31568) - @P0 BRA 0x7bd0 ;
Inject count_instr before - Instr 1974 @ 0x7b60 (31584) - ISETP.GE.U32.AND P0, PT, R4, 0x3c800000, PT ;
Inject count_instr before - Instr 1981 @ 0x7bd0 (31696) - BSYNC B0 ;
Inject count_instr before - Instr 1985 @ 0x7c10 (31760) - LOP3.LUT R4, R2, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1990 @ 0x7c60 (31840) - ISETP.GE.U32.AND P0, PT, R4, 0x38800000, PT ;
Inject count_instr before - Instr 1998 @ 0x7ce0 (31968) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2001 @ 0x7d10 (32016) - BSYNC B0 ;
Inject count_instr before - Instr 2007 @ 0x7d70 (32112) - FSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
Inject count_instr before - Instr 2015 @ 0x7df0 (32240) - ISETP.GT.AND P0, PT, R37, 0x1b, PT ;
Inject count_instr before - Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P0, PT, R37, 0x19, PT ;
Inject count_instr before - Instr 2019 @ 0x7e30 (32304) - ISETP.NE.AND P0, PT, R37, 0x1a, PT ;
Inject count_instr before - Instr 2021 @ 0x7e50 (32336) - ISETP.NE.AND P0, PT, R37, 0x1b, PT ;
Inject count_instr before - Instr 2023 @ 0x7e70 (32368) - F2I.U32.TRUNC.NTZ R3, R2 ;
Inject count_instr before - Instr 2026 @ 0x7ea0 (32416) - LOP3.LUT R4, R2, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2032 @ 0x7f00 (32512) - ISETP.GE.U32.AND P0, PT, R4, 0x3c000000, PT ;
Inject count_instr before - Instr 2034 @ 0x7f20 (32544) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2039 @ 0x7f70 (32624) - FADD R0, R4, 8192 ;
Inject count_instr before - Instr 2044 @ 0x7fc0 (32704) - LOP3.LUT R2, R2, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2048 @ 0x8000 (32768) - BSYNC B0 ;
Inject count_instr before - Instr 2051 @ 0x8030 (32816) - LOP3.LUT R4, R2, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2057 @ 0x8090 (32912) - ISETP.GE.U32.AND P0, PT, R4, 0x38000000, PT ;
Inject count_instr before - Instr 2059 @ 0x80b0 (32944) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2064 @ 0x8100 (33024) - FADD R0, R4, 64 ;
Inject count_instr before - Instr 2069 @ 0x8150 (33104) - LOP3.LUT R2, R2, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2073 @ 0x8190 (33168) - BSYNC B0 ;
Inject count_instr before - Instr 2076 @ 0x81c0 (33216) - ISETP.NE.AND P0, PT, R37, 0x1c, PT ;
Inject count_instr before - Instr 2078 @ 0x81e0 (33248) - ISETP.NE.AND P0, PT, R37, 0x1d, PT ;
Inject count_instr before - Instr 2080 @ 0x8200 (33280) - ISETP.NE.AND P0, PT, R37, 0x2c, PT ;
Inject count_instr before - Instr 2082 @ 0x8220 (33312) - SHF.R.U32.HI R4, RZ, 0x17, R2 ;
Inject count_instr before - Instr 2097 @ 0x8310 (33552) - UMOV UR6, 0xd33a2700 ;
Inject count_instr before - Instr 2115 @ 0x8430 (33840) - BRA 0x8490 ;
Inject count_instr before - Instr 2116 @ 0x8440 (33856) - F2I.U64.TRUNC R2, R2 ;
Inject count_instr before - Instr 2119 @ 0x8470 (33904) - F2I.U32.TRUNC.NTZ R3, R2 ;
Inject count_instr before - Instr 2121 @ 0x8490 (33936) - ISETP.GE.AND P0, PT, R38, R39, PT ;
Inject count_instr before - Instr 2123 @ 0x84b0 (33968) - IMAD R2, R17, 0x400, R38 ;
Inject count_instr before - Instr 2129 @ 0x8510 (34064) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2132 @ 0x8540 (34112) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2134 @ 0x8560 (34144) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 2136 @ 0x8580 (34176) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2138 @ 0x85a0 (34208) - F2I.TRUNC.NTZ R3, R16 ;
Inject count_instr before - Instr 2141 @ 0x85d0 (34256) - F2I.S64.TRUNC R16, R16 ;
Inject count_instr before - Instr 2145 @ 0x8610 (34320) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 2147 @ 0x8630 (34352) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 2149 @ 0x8650 (34384) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 2151 @ 0x8670 (34416) - F2I.S64.TRUNC R16, R16 ;
Inject count_instr before - Instr 2154 @ 0x86a0 (34464) - F2I.TRUNC.NTZ R3, R16 ;
Inject count_instr before - Instr 2157 @ 0x86d0 (34512) - F2I.TRUNC.NTZ R3, R16 ;
Inject count_instr before - Instr 2160 @ 0x8700 (34560) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2162 @ 0x8720 (34592) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 2164 @ 0x8740 (34624) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2166 @ 0x8760 (34656) - STG.E.SYS [R4], R16 ;
Inject count_instr before - Instr 2168 @ 0x8780 (34688) - F2F.F16.F32 R3, R16 ;
Inject count_instr before - Instr 2171 @ 0x87b0 (34736) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 2173 @ 0x87d0 (34768) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 2175 @ 0x87f0 (34800) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 2177 @ 0x8810 (34832) - IMAD.MOV.U32 R17, RZ, RZ, RZ ;
Inject count_instr before - Instr 2180 @ 0x8840 (34880) - F2F.F16.F32 R3, R16 ;
Inject count_instr before - Instr 2184 @ 0x8880 (34944) - F2F.F64.F32 R16, R16 ;
Inject count_instr before - Instr 2187 @ 0x88b0 (34992) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2190 @ 0x88e0 (35040) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 2192 @ 0x8900 (35072) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 2194 @ 0x8920 (35104) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 2196 @ 0x8940 (35136) - FSETP.NEU.AND P0, PT, R16, RZ, PT ;
Inject count_instr before - Instr 2200 @ 0x8980 (35200) - F2F.F64.F32 R8, R16 ;
Inject count_instr before - Instr 2204 @ 0x89c0 (35264) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 2206 @ 0x89e0 (35296) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 2208 @ 0x8a00 (35328) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 2210 @ 0x8a20 (35360) - LOP3.LUT R6, R16.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2217 @ 0x8a90 (35472) - @P0 BRA 0x8b10 ;
Inject count_instr before - Instr 2218 @ 0x8aa0 (35488) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
Inject count_instr before - Instr 2225 @ 0x8b10 (35600) - BSYNC B0 ;
Inject count_instr before - Instr 2229 @ 0x8b50 (35664) - LOP3.LUT R6, R16, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2234 @ 0x8ba0 (35744) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
Inject count_instr before - Instr 2242 @ 0x8c20 (35872) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2245 @ 0x8c50 (35920) - BSYNC B0 ;
Inject count_instr before - Instr 2251 @ 0x8cb0 (36016) - FSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
Inject count_instr before - Instr 2259 @ 0x8d30 (36144) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2261 @ 0x8d50 (36176) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 2263 @ 0x8d70 (36208) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 2265 @ 0x8d90 (36240) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2267 @ 0x8db0 (36272) - F2I.U32.TRUNC.NTZ R3, R16 ;
Inject count_instr before - Instr 2270 @ 0x8de0 (36320) - LOP3.LUT R6, R16, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2276 @ 0x8e40 (36416) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
Inject count_instr before - Instr 2278 @ 0x8e60 (36448) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2283 @ 0x8eb0 (36528) - FADD R0, R6, 8192 ;
Inject count_instr before - Instr 2288 @ 0x8f00 (36608) - LOP3.LUT R16, R16, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2292 @ 0x8f40 (36672) - BSYNC B0 ;
Inject count_instr before - Instr 2295 @ 0x8f70 (36720) - LOP3.LUT R6, R16, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2301 @ 0x8fd0 (36816) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
Inject count_instr before - Instr 2303 @ 0x8ff0 (36848) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2308 @ 0x9040 (36928) - FADD R0, R6, 64 ;
Inject count_instr before - Instr 2313 @ 0x9090 (37008) - LOP3.LUT R16, R16, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2317 @ 0x90d0 (37072) - BSYNC B0 ;
Inject count_instr before - Instr 2320 @ 0x9100 (37120) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 2322 @ 0x9120 (37152) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 2324 @ 0x9140 (37184) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 2326 @ 0x9160 (37216) - SHF.R.U32.HI R6, RZ, 0x17, R16 ;
Inject count_instr before - Instr 2341 @ 0x9250 (37456) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 2359 @ 0x9370 (37744) - BRA 0x93d0 ;
Inject count_instr before - Instr 2360 @ 0x9380 (37760) - F2I.U64.TRUNC R16, R16 ;
Inject count_instr before - Instr 2363 @ 0x93b0 (37808) - F2I.U32.TRUNC.NTZ R3, R16 ;
Inject count_instr before - Instr 2365 @ 0x93d0 (37840) - IADD3 R0, R36, 0x100, RZ ;
Inject count_instr before - Instr 2368 @ 0x9400 (37888) - IADD3 R0, R2, 0x80, RZ ;
Inject count_instr before - Instr 2374 @ 0x9460 (37984) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2377 @ 0x9490 (38032) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2379 @ 0x94b0 (38064) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 2381 @ 0x94d0 (38096) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2383 @ 0x94f0 (38128) - F2I.TRUNC.NTZ R3, R18 ;
Inject count_instr before - Instr 2386 @ 0x9520 (38176) - F2I.S64.TRUNC R18, R18 ;
Inject count_instr before - Instr 2390 @ 0x9560 (38240) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 2392 @ 0x9580 (38272) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 2394 @ 0x95a0 (38304) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 2396 @ 0x95c0 (38336) - F2I.S64.TRUNC R18, R18 ;
Inject count_instr before - Instr 2399 @ 0x95f0 (38384) - F2I.TRUNC.NTZ R3, R18 ;
Inject count_instr before - Instr 2402 @ 0x9620 (38432) - F2I.TRUNC.NTZ R3, R18 ;
Inject count_instr before - Instr 2405 @ 0x9650 (38480) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2407 @ 0x9670 (38512) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 2409 @ 0x9690 (38544) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2411 @ 0x96b0 (38576) - STG.E.SYS [R4], R18 ;
Inject count_instr before - Instr 2413 @ 0x96d0 (38608) - F2F.F16.F32 R3, R18 ;
Inject count_instr before - Instr 2416 @ 0x9700 (38656) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 2418 @ 0x9720 (38688) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 2420 @ 0x9740 (38720) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 2422 @ 0x9760 (38752) - IMAD.MOV.U32 R19, RZ, RZ, RZ ;
Inject count_instr before - Instr 2425 @ 0x9790 (38800) - F2F.F16.F32 R3, R18 ;
Inject count_instr before - Instr 2429 @ 0x97d0 (38864) - F2F.F64.F32 R18, R18 ;
Inject count_instr before - Instr 2432 @ 0x9800 (38912) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2435 @ 0x9830 (38960) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 2437 @ 0x9850 (38992) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 2439 @ 0x9870 (39024) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 2441 @ 0x9890 (39056) - FSETP.NEU.AND P0, PT, R18, RZ, PT ;
Inject count_instr before - Instr 2445 @ 0x98d0 (39120) - F2F.F64.F32 R8, R18 ;
Inject count_instr before - Instr 2449 @ 0x9910 (39184) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 2451 @ 0x9930 (39216) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 2453 @ 0x9950 (39248) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 2455 @ 0x9970 (39280) - LOP3.LUT R6, R18.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2462 @ 0x99e0 (39392) - @P0 BRA 0x9a60 ;
Inject count_instr before - Instr 2463 @ 0x99f0 (39408) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
Inject count_instr before - Instr 2470 @ 0x9a60 (39520) - BSYNC B0 ;
Inject count_instr before - Instr 2474 @ 0x9aa0 (39584) - LOP3.LUT R6, R18, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2479 @ 0x9af0 (39664) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
Inject count_instr before - Instr 2487 @ 0x9b70 (39792) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2490 @ 0x9ba0 (39840) - BSYNC B0 ;
Inject count_instr before - Instr 2496 @ 0x9c00 (39936) - FSETP.GTU.AND P0, PT, |R18|, +INF , PT ;
Inject count_instr before - Instr 2504 @ 0x9c80 (40064) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2506 @ 0x9ca0 (40096) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 2508 @ 0x9cc0 (40128) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 2510 @ 0x9ce0 (40160) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2512 @ 0x9d00 (40192) - F2I.U32.TRUNC.NTZ R3, R18 ;
Inject count_instr before - Instr 2515 @ 0x9d30 (40240) - LOP3.LUT R6, R18, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2521 @ 0x9d90 (40336) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
Inject count_instr before - Instr 2523 @ 0x9db0 (40368) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2528 @ 0x9e00 (40448) - FADD R0, R6, 8192 ;
Inject count_instr before - Instr 2533 @ 0x9e50 (40528) - LOP3.LUT R18, R18, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2537 @ 0x9e90 (40592) - BSYNC B0 ;
Inject count_instr before - Instr 2540 @ 0x9ec0 (40640) - LOP3.LUT R6, R18, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2546 @ 0x9f20 (40736) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
Inject count_instr before - Instr 2548 @ 0x9f40 (40768) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2553 @ 0x9f90 (40848) - FADD R0, R6, 64 ;
Inject count_instr before - Instr 2558 @ 0x9fe0 (40928) - LOP3.LUT R18, R18, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2562 @ 0xa020 (40992) - BSYNC B0 ;
Inject count_instr before - Instr 2565 @ 0xa050 (41040) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 2567 @ 0xa070 (41072) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 2569 @ 0xa090 (41104) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 2571 @ 0xa0b0 (41136) - SHF.R.U32.HI R6, RZ, 0x17, R18 ;
Inject count_instr before - Instr 2586 @ 0xa1a0 (41376) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 2604 @ 0xa2c0 (41664) - BRA 0xa320 ;
Inject count_instr before - Instr 2605 @ 0xa2d0 (41680) - F2I.U64.TRUNC R18, R18 ;
Inject count_instr before - Instr 2608 @ 0xa300 (41728) - F2I.U32.TRUNC.NTZ R3, R18 ;
Inject count_instr before - Instr 2610 @ 0xa320 (41760) - IADD3 R0, R36, 0x180, RZ ;
Inject count_instr before - Instr 2613 @ 0xa350 (41808) - IADD3 R0, R2, 0x100, RZ ;
Inject count_instr before - Instr 2619 @ 0xa3b0 (41904) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2622 @ 0xa3e0 (41952) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2624 @ 0xa400 (41984) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 2626 @ 0xa420 (42016) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2628 @ 0xa440 (42048) - F2I.TRUNC.NTZ R3, R22 ;
Inject count_instr before - Instr 2631 @ 0xa470 (42096) - F2I.S64.TRUNC R22, R22 ;
Inject count_instr before - Instr 2635 @ 0xa4b0 (42160) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 2637 @ 0xa4d0 (42192) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 2639 @ 0xa4f0 (42224) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 2641 @ 0xa510 (42256) - F2I.S64.TRUNC R22, R22 ;
Inject count_instr before - Instr 2644 @ 0xa540 (42304) - F2I.TRUNC.NTZ R3, R22 ;
Inject count_instr before - Instr 2647 @ 0xa570 (42352) - F2I.TRUNC.NTZ R3, R22 ;
Inject count_instr before - Instr 2650 @ 0xa5a0 (42400) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2652 @ 0xa5c0 (42432) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 2654 @ 0xa5e0 (42464) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2656 @ 0xa600 (42496) - STG.E.SYS [R4], R22 ;
Inject count_instr before - Instr 2658 @ 0xa620 (42528) - F2F.F16.F32 R3, R22 ;
Inject count_instr before - Instr 2661 @ 0xa650 (42576) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 2663 @ 0xa670 (42608) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 2665 @ 0xa690 (42640) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 2667 @ 0xa6b0 (42672) - IMAD.MOV.U32 R23, RZ, RZ, RZ ;
Inject count_instr before - Instr 2670 @ 0xa6e0 (42720) - F2F.F16.F32 R3, R22 ;
Inject count_instr before - Instr 2674 @ 0xa720 (42784) - F2F.F64.F32 R22, R22 ;
Inject count_instr before - Instr 2677 @ 0xa750 (42832) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2680 @ 0xa780 (42880) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 2682 @ 0xa7a0 (42912) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 2684 @ 0xa7c0 (42944) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 2686 @ 0xa7e0 (42976) - FSETP.NEU.AND P0, PT, R22, RZ, PT ;
Inject count_instr before - Instr 2690 @ 0xa820 (43040) - F2F.F64.F32 R8, R22 ;
Inject count_instr before - Instr 2694 @ 0xa860 (43104) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 2696 @ 0xa880 (43136) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 2698 @ 0xa8a0 (43168) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 2700 @ 0xa8c0 (43200) - LOP3.LUT R6, R22.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2707 @ 0xa930 (43312) - @P0 BRA 0xa9b0 ;
Inject count_instr before - Instr 2708 @ 0xa940 (43328) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
Inject count_instr before - Instr 2715 @ 0xa9b0 (43440) - BSYNC B0 ;
Inject count_instr before - Instr 2719 @ 0xa9f0 (43504) - LOP3.LUT R6, R22, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2724 @ 0xaa40 (43584) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
Inject count_instr before - Instr 2732 @ 0xaac0 (43712) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2735 @ 0xaaf0 (43760) - BSYNC B0 ;
Inject count_instr before - Instr 2741 @ 0xab50 (43856) - FSETP.GTU.AND P0, PT, |R22|, +INF , PT ;
Inject count_instr before - Instr 2749 @ 0xabd0 (43984) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2751 @ 0xabf0 (44016) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 2753 @ 0xac10 (44048) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 2755 @ 0xac30 (44080) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2757 @ 0xac50 (44112) - F2I.U32.TRUNC.NTZ R3, R22 ;
Inject count_instr before - Instr 2760 @ 0xac80 (44160) - LOP3.LUT R6, R22, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2766 @ 0xace0 (44256) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
Inject count_instr before - Instr 2768 @ 0xad00 (44288) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2773 @ 0xad50 (44368) - FADD R0, R6, 8192 ;
Inject count_instr before - Instr 2778 @ 0xada0 (44448) - LOP3.LUT R22, R22, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2782 @ 0xade0 (44512) - BSYNC B0 ;
Inject count_instr before - Instr 2785 @ 0xae10 (44560) - LOP3.LUT R6, R22, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2791 @ 0xae70 (44656) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
Inject count_instr before - Instr 2793 @ 0xae90 (44688) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2798 @ 0xaee0 (44768) - FADD R0, R6, 64 ;
Inject count_instr before - Instr 2803 @ 0xaf30 (44848) - LOP3.LUT R22, R22, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2807 @ 0xaf70 (44912) - BSYNC B0 ;
Inject count_instr before - Instr 2810 @ 0xafa0 (44960) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 2812 @ 0xafc0 (44992) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 2814 @ 0xafe0 (45024) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 2816 @ 0xb000 (45056) - SHF.R.U32.HI R6, RZ, 0x17, R22 ;
Inject count_instr before - Instr 2831 @ 0xb0f0 (45296) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 2849 @ 0xb210 (45584) - BRA 0xb270 ;
Inject count_instr before - Instr 2850 @ 0xb220 (45600) - F2I.U64.TRUNC R22, R22 ;
Inject count_instr before - Instr 2853 @ 0xb250 (45648) - F2I.U32.TRUNC.NTZ R3, R22 ;
Inject count_instr before - Instr 2855 @ 0xb270 (45680) - IADD3 R0, R36, 0x200, RZ ;
Inject count_instr before - Instr 2858 @ 0xb2a0 (45728) - IADD3 R0, R2, 0x180, RZ ;
Inject count_instr before - Instr 2864 @ 0xb300 (45824) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2867 @ 0xb330 (45872) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2869 @ 0xb350 (45904) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 2871 @ 0xb370 (45936) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2873 @ 0xb390 (45968) - F2I.TRUNC.NTZ R3, R24 ;
Inject count_instr before - Instr 2876 @ 0xb3c0 (46016) - F2I.S64.TRUNC R24, R24 ;
Inject count_instr before - Instr 2880 @ 0xb400 (46080) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 2882 @ 0xb420 (46112) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 2884 @ 0xb440 (46144) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 2886 @ 0xb460 (46176) - F2I.S64.TRUNC R24, R24 ;
Inject count_instr before - Instr 2889 @ 0xb490 (46224) - F2I.TRUNC.NTZ R3, R24 ;
Inject count_instr before - Instr 2892 @ 0xb4c0 (46272) - F2I.TRUNC.NTZ R3, R24 ;
Inject count_instr before - Instr 2895 @ 0xb4f0 (46320) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2897 @ 0xb510 (46352) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 2899 @ 0xb530 (46384) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2901 @ 0xb550 (46416) - STG.E.SYS [R4], R24 ;
Inject count_instr before - Instr 2903 @ 0xb570 (46448) - F2F.F16.F32 R3, R24 ;
Inject count_instr before - Instr 2906 @ 0xb5a0 (46496) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 2908 @ 0xb5c0 (46528) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 2910 @ 0xb5e0 (46560) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 2912 @ 0xb600 (46592) - IMAD.MOV.U32 R25, RZ, RZ, RZ ;
Inject count_instr before - Instr 2915 @ 0xb630 (46640) - F2F.F16.F32 R3, R24 ;
Inject count_instr before - Instr 2919 @ 0xb670 (46704) - F2F.F64.F32 R24, R24 ;
Inject count_instr before - Instr 2922 @ 0xb6a0 (46752) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 2925 @ 0xb6d0 (46800) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 2927 @ 0xb6f0 (46832) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 2929 @ 0xb710 (46864) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 2931 @ 0xb730 (46896) - FSETP.NEU.AND P0, PT, R24, RZ, PT ;
Inject count_instr before - Instr 2935 @ 0xb770 (46960) - F2F.F64.F32 R8, R24 ;
Inject count_instr before - Instr 2939 @ 0xb7b0 (47024) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 2941 @ 0xb7d0 (47056) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 2943 @ 0xb7f0 (47088) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 2945 @ 0xb810 (47120) - LOP3.LUT R6, R24.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2952 @ 0xb880 (47232) - @P0 BRA 0xb900 ;
Inject count_instr before - Instr 2953 @ 0xb890 (47248) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
Inject count_instr before - Instr 2960 @ 0xb900 (47360) - BSYNC B0 ;
Inject count_instr before - Instr 2964 @ 0xb940 (47424) - LOP3.LUT R6, R24, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2969 @ 0xb990 (47504) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
Inject count_instr before - Instr 2977 @ 0xba10 (47632) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2980 @ 0xba40 (47680) - BSYNC B0 ;
Inject count_instr before - Instr 2986 @ 0xbaa0 (47776) - FSETP.GTU.AND P0, PT, |R24|, +INF , PT ;
Inject count_instr before - Instr 2994 @ 0xbb20 (47904) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2996 @ 0xbb40 (47936) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 2998 @ 0xbb60 (47968) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3000 @ 0xbb80 (48000) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3002 @ 0xbba0 (48032) - F2I.U32.TRUNC.NTZ R3, R24 ;
Inject count_instr before - Instr 3005 @ 0xbbd0 (48080) - LOP3.LUT R6, R24, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3011 @ 0xbc30 (48176) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
Inject count_instr before - Instr 3013 @ 0xbc50 (48208) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3018 @ 0xbca0 (48288) - FADD R0, R6, 8192 ;
Inject count_instr before - Instr 3023 @ 0xbcf0 (48368) - LOP3.LUT R24, R24, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3027 @ 0xbd30 (48432) - BSYNC B0 ;
Inject count_instr before - Instr 3030 @ 0xbd60 (48480) - LOP3.LUT R6, R24, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3036 @ 0xbdc0 (48576) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
Inject count_instr before - Instr 3038 @ 0xbde0 (48608) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3043 @ 0xbe30 (48688) - FADD R0, R6, 64 ;
Inject count_instr before - Instr 3048 @ 0xbe80 (48768) - LOP3.LUT R24, R24, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3052 @ 0xbec0 (48832) - BSYNC B0 ;
Inject count_instr before - Instr 3055 @ 0xbef0 (48880) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3057 @ 0xbf10 (48912) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3059 @ 0xbf30 (48944) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3061 @ 0xbf50 (48976) - SHF.R.U32.HI R6, RZ, 0x17, R24 ;
Inject count_instr before - Instr 3076 @ 0xc040 (49216) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3094 @ 0xc160 (49504) - BRA 0xc1c0 ;
Inject count_instr before - Instr 3095 @ 0xc170 (49520) - F2I.U64.TRUNC R24, R24 ;
Inject count_instr before - Instr 3098 @ 0xc1a0 (49568) - F2I.U32.TRUNC.NTZ R3, R24 ;
Inject count_instr before - Instr 3100 @ 0xc1c0 (49600) - IADD3 R0, R36, 0x280, RZ ;
Inject count_instr before - Instr 3103 @ 0xc1f0 (49648) - IADD3 R0, R2, 0x200, RZ ;
Inject count_instr before - Instr 3109 @ 0xc250 (49744) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 3112 @ 0xc280 (49792) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3114 @ 0xc2a0 (49824) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 3116 @ 0xc2c0 (49856) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3118 @ 0xc2e0 (49888) - F2I.TRUNC.NTZ R3, R26 ;
Inject count_instr before - Instr 3121 @ 0xc310 (49936) - F2I.S64.TRUNC R26, R26 ;
Inject count_instr before - Instr 3125 @ 0xc350 (50000) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 3127 @ 0xc370 (50032) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 3129 @ 0xc390 (50064) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 3131 @ 0xc3b0 (50096) - F2I.S64.TRUNC R26, R26 ;
Inject count_instr before - Instr 3134 @ 0xc3e0 (50144) - F2I.TRUNC.NTZ R3, R26 ;
Inject count_instr before - Instr 3137 @ 0xc410 (50192) - F2I.TRUNC.NTZ R3, R26 ;
Inject count_instr before - Instr 3140 @ 0xc440 (50240) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3142 @ 0xc460 (50272) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 3144 @ 0xc480 (50304) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3146 @ 0xc4a0 (50336) - STG.E.SYS [R4], R26 ;
Inject count_instr before - Instr 3148 @ 0xc4c0 (50368) - F2F.F16.F32 R3, R26 ;
Inject count_instr before - Instr 3151 @ 0xc4f0 (50416) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 3153 @ 0xc510 (50448) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 3155 @ 0xc530 (50480) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 3157 @ 0xc550 (50512) - IMAD.MOV.U32 R27, RZ, RZ, RZ ;
Inject count_instr before - Instr 3160 @ 0xc580 (50560) - F2F.F16.F32 R3, R26 ;
Inject count_instr before - Instr 3164 @ 0xc5c0 (50624) - F2F.F64.F32 R26, R26 ;
Inject count_instr before - Instr 3167 @ 0xc5f0 (50672) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 3170 @ 0xc620 (50720) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 3172 @ 0xc640 (50752) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 3174 @ 0xc660 (50784) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 3176 @ 0xc680 (50816) - FSETP.NEU.AND P0, PT, R26, RZ, PT ;
Inject count_instr before - Instr 3180 @ 0xc6c0 (50880) - F2F.F64.F32 R8, R26 ;
Inject count_instr before - Instr 3184 @ 0xc700 (50944) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 3186 @ 0xc720 (50976) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 3188 @ 0xc740 (51008) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 3190 @ 0xc760 (51040) - LOP3.LUT R6, R26.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3197 @ 0xc7d0 (51152) - @P0 BRA 0xc850 ;
Inject count_instr before - Instr 3198 @ 0xc7e0 (51168) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
Inject count_instr before - Instr 3205 @ 0xc850 (51280) - BSYNC B0 ;
Inject count_instr before - Instr 3209 @ 0xc890 (51344) - LOP3.LUT R6, R26, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3214 @ 0xc8e0 (51424) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
Inject count_instr before - Instr 3222 @ 0xc960 (51552) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 3225 @ 0xc990 (51600) - BSYNC B0 ;
Inject count_instr before - Instr 3231 @ 0xc9f0 (51696) - FSETP.GTU.AND P0, PT, |R26|, +INF , PT ;
Inject count_instr before - Instr 3239 @ 0xca70 (51824) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3241 @ 0xca90 (51856) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 3243 @ 0xcab0 (51888) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3245 @ 0xcad0 (51920) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3247 @ 0xcaf0 (51952) - F2I.U32.TRUNC.NTZ R3, R26 ;
Inject count_instr before - Instr 3250 @ 0xcb20 (52000) - LOP3.LUT R6, R26, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3256 @ 0xcb80 (52096) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
Inject count_instr before - Instr 3258 @ 0xcba0 (52128) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3263 @ 0xcbf0 (52208) - FADD R0, R6, 8192 ;
Inject count_instr before - Instr 3268 @ 0xcc40 (52288) - LOP3.LUT R26, R26, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3272 @ 0xcc80 (52352) - BSYNC B0 ;
Inject count_instr before - Instr 3275 @ 0xccb0 (52400) - LOP3.LUT R6, R26, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3281 @ 0xcd10 (52496) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
Inject count_instr before - Instr 3283 @ 0xcd30 (52528) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3288 @ 0xcd80 (52608) - FADD R0, R6, 64 ;
Inject count_instr before - Instr 3293 @ 0xcdd0 (52688) - LOP3.LUT R26, R26, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3297 @ 0xce10 (52752) - BSYNC B0 ;
Inject count_instr before - Instr 3300 @ 0xce40 (52800) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3302 @ 0xce60 (52832) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3304 @ 0xce80 (52864) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3306 @ 0xcea0 (52896) - SHF.R.U32.HI R6, RZ, 0x17, R26 ;
Inject count_instr before - Instr 3321 @ 0xcf90 (53136) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3339 @ 0xd0b0 (53424) - BRA 0xd110 ;
Inject count_instr before - Instr 3340 @ 0xd0c0 (53440) - F2I.U64.TRUNC R26, R26 ;
Inject count_instr before - Instr 3343 @ 0xd0f0 (53488) - F2I.U32.TRUNC.NTZ R3, R26 ;
Inject count_instr before - Instr 3345 @ 0xd110 (53520) - IADD3 R0, R36, 0x300, RZ ;
Inject count_instr before - Instr 3348 @ 0xd140 (53568) - IADD3 R0, R2, 0x280, RZ ;
Inject count_instr before - Instr 3354 @ 0xd1a0 (53664) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 3357 @ 0xd1d0 (53712) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3359 @ 0xd1f0 (53744) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 3361 @ 0xd210 (53776) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3363 @ 0xd230 (53808) - F2I.TRUNC.NTZ R3, R28 ;
Inject count_instr before - Instr 3366 @ 0xd260 (53856) - F2I.S64.TRUNC R28, R28 ;
Inject count_instr before - Instr 3370 @ 0xd2a0 (53920) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 3372 @ 0xd2c0 (53952) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 3374 @ 0xd2e0 (53984) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 3376 @ 0xd300 (54016) - F2I.S64.TRUNC R28, R28 ;
Inject count_instr before - Instr 3379 @ 0xd330 (54064) - F2I.TRUNC.NTZ R3, R28 ;
Inject count_instr before - Instr 3382 @ 0xd360 (54112) - F2I.TRUNC.NTZ R3, R28 ;
Inject count_instr before - Instr 3385 @ 0xd390 (54160) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3387 @ 0xd3b0 (54192) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 3389 @ 0xd3d0 (54224) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3391 @ 0xd3f0 (54256) - STG.E.SYS [R4], R28 ;
Inject count_instr before - Instr 3393 @ 0xd410 (54288) - F2F.F16.F32 R3, R28 ;
Inject count_instr before - Instr 3396 @ 0xd440 (54336) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 3398 @ 0xd460 (54368) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 3400 @ 0xd480 (54400) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 3402 @ 0xd4a0 (54432) - IMAD.MOV.U32 R29, RZ, RZ, RZ ;
Inject count_instr before - Instr 3405 @ 0xd4d0 (54480) - F2F.F16.F32 R3, R28 ;
Inject count_instr before - Instr 3409 @ 0xd510 (54544) - F2F.F64.F32 R28, R28 ;
Inject count_instr before - Instr 3412 @ 0xd540 (54592) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 3415 @ 0xd570 (54640) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 3417 @ 0xd590 (54672) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 3419 @ 0xd5b0 (54704) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 3421 @ 0xd5d0 (54736) - FSETP.NEU.AND P0, PT, R28, RZ, PT ;
Inject count_instr before - Instr 3425 @ 0xd610 (54800) - F2F.F64.F32 R8, R28 ;
Inject count_instr before - Instr 3429 @ 0xd650 (54864) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 3431 @ 0xd670 (54896) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 3433 @ 0xd690 (54928) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 3435 @ 0xd6b0 (54960) - LOP3.LUT R6, R28.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3442 @ 0xd720 (55072) - @P0 BRA 0xd7a0 ;
Inject count_instr before - Instr 3443 @ 0xd730 (55088) - ISETP.GE.U32.AND P0, PT, R6, 0x3c800000, PT ;
Inject count_instr before - Instr 3450 @ 0xd7a0 (55200) - BSYNC B0 ;
Inject count_instr before - Instr 3454 @ 0xd7e0 (55264) - LOP3.LUT R6, R28, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3459 @ 0xd830 (55344) - ISETP.GE.U32.AND P0, PT, R6, 0x38800000, PT ;
Inject count_instr before - Instr 3467 @ 0xd8b0 (55472) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 3470 @ 0xd8e0 (55520) - BSYNC B0 ;
Inject count_instr before - Instr 3476 @ 0xd940 (55616) - FSETP.GTU.AND P0, PT, |R28|, +INF , PT ;
Inject count_instr before - Instr 3484 @ 0xd9c0 (55744) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3486 @ 0xd9e0 (55776) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 3488 @ 0xda00 (55808) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3490 @ 0xda20 (55840) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3492 @ 0xda40 (55872) - F2I.U32.TRUNC.NTZ R3, R28 ;
Inject count_instr before - Instr 3495 @ 0xda70 (55920) - LOP3.LUT R6, R28, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3501 @ 0xdad0 (56016) - ISETP.GE.U32.AND P0, PT, R6, 0x3c000000, PT ;
Inject count_instr before - Instr 3503 @ 0xdaf0 (56048) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3508 @ 0xdb40 (56128) - FADD R0, R6, 8192 ;
Inject count_instr before - Instr 3513 @ 0xdb90 (56208) - LOP3.LUT R28, R28, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3517 @ 0xdbd0 (56272) - BSYNC B0 ;
Inject count_instr before - Instr 3520 @ 0xdc00 (56320) - LOP3.LUT R6, R28, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3526 @ 0xdc60 (56416) - ISETP.GE.U32.AND P0, PT, R6, 0x38000000, PT ;
Inject count_instr before - Instr 3528 @ 0xdc80 (56448) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3533 @ 0xdcd0 (56528) - FADD R0, R6, 64 ;
Inject count_instr before - Instr 3538 @ 0xdd20 (56608) - LOP3.LUT R28, R28, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3542 @ 0xdd60 (56672) - BSYNC B0 ;
Inject count_instr before - Instr 3545 @ 0xdd90 (56720) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3547 @ 0xddb0 (56752) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3549 @ 0xddd0 (56784) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3551 @ 0xddf0 (56816) - SHF.R.U32.HI R6, RZ, 0x17, R28 ;
Inject count_instr before - Instr 3566 @ 0xdee0 (57056) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3584 @ 0xe000 (57344) - BRA 0xe060 ;
Inject count_instr before - Instr 3585 @ 0xe010 (57360) - F2I.U64.TRUNC R28, R28 ;
Inject count_instr before - Instr 3588 @ 0xe040 (57408) - F2I.U32.TRUNC.NTZ R3, R28 ;
Inject count_instr before - Instr 3590 @ 0xe060 (57440) - IADD3 R36, R36, 0x380, RZ ;
Inject count_instr before - Instr 3593 @ 0xe090 (57488) - IADD3 R2, R2, 0x300, RZ ;
Inject count_instr before - Instr 3599 @ 0xe0f0 (57584) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 3602 @ 0xe120 (57632) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3604 @ 0xe140 (57664) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
Inject count_instr before - Instr 3606 @ 0xe160 (57696) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3608 @ 0xe180 (57728) - F2I.TRUNC.NTZ R5, R30 ;
Inject count_instr before - Instr 3611 @ 0xe1b0 (57776) - F2I.S64.TRUNC R30, R30 ;
Inject count_instr before - Instr 3615 @ 0xe1f0 (57840) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 3617 @ 0xe210 (57872) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 3619 @ 0xe230 (57904) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 3621 @ 0xe250 (57936) - F2I.S64.TRUNC R30, R30 ;
Inject count_instr before - Instr 3624 @ 0xe280 (57984) - F2I.TRUNC.NTZ R5, R30 ;
Inject count_instr before - Instr 3627 @ 0xe2b0 (58032) - F2I.TRUNC.NTZ R5, R30 ;
Inject count_instr before - Instr 3630 @ 0xe2e0 (58080) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3632 @ 0xe300 (58112) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 3634 @ 0xe320 (58144) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3636 @ 0xe340 (58176) - STG.E.SYS [R2], R30 ;
Inject count_instr before - Instr 3638 @ 0xe360 (58208) - F2F.F16.F32 R5, R30 ;
Inject count_instr before - Instr 3641 @ 0xe390 (58256) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 3643 @ 0xe3b0 (58288) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 3645 @ 0xe3d0 (58320) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 3647 @ 0xe3f0 (58352) - IMAD.MOV.U32 R31, RZ, RZ, RZ ;
Inject count_instr before - Instr 3650 @ 0xe420 (58400) - F2F.F16.F32 R5, R30 ;
Inject count_instr before - Instr 3654 @ 0xe460 (58464) - F2F.F64.F32 R30, R30 ;
Inject count_instr before - Instr 3657 @ 0xe490 (58512) - PRMT R0, R31, 0x9910, RZ ;
Inject count_instr before - Instr 3660 @ 0xe4c0 (58560) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 3662 @ 0xe4e0 (58592) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 3664 @ 0xe500 (58624) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 3666 @ 0xe520 (58656) - FSETP.NEU.AND P0, PT, R30, RZ, PT ;
Inject count_instr before - Instr 3670 @ 0xe560 (58720) - F2F.F64.F32 R4, R30 ;
Inject count_instr before - Instr 3674 @ 0xe5a0 (58784) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 3676 @ 0xe5c0 (58816) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 3678 @ 0xe5e0 (58848) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 3680 @ 0xe600 (58880) - LOP3.LUT R4, R30.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3687 @ 0xe670 (58992) - @P0 BRA 0xe6f0 ;
Inject count_instr before - Instr 3688 @ 0xe680 (59008) - ISETP.GE.U32.AND P0, PT, R4, 0x3c800000, PT ;
Inject count_instr before - Instr 3695 @ 0xe6f0 (59120) - BSYNC B0 ;
Inject count_instr before - Instr 3699 @ 0xe730 (59184) - LOP3.LUT R4, R30, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3704 @ 0xe780 (59264) - ISETP.GE.U32.AND P0, PT, R4, 0x38800000, PT ;
Inject count_instr before - Instr 3712 @ 0xe800 (59392) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 3715 @ 0xe830 (59440) - BSYNC B0 ;
Inject count_instr before - Instr 3721 @ 0xe890 (59536) - FSETP.GTU.AND P0, PT, |R30|, +INF , PT ;
Inject count_instr before - Instr 3729 @ 0xe910 (59664) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3731 @ 0xe930 (59696) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 3733 @ 0xe950 (59728) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3735 @ 0xe970 (59760) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3737 @ 0xe990 (59792) - F2I.U32.TRUNC.NTZ R5, R30 ;
Inject count_instr before - Instr 3740 @ 0xe9c0 (59840) - LOP3.LUT R5, R30, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3746 @ 0xea20 (59936) - ISETP.GE.U32.AND P0, PT, R5, 0x3c000000, PT ;
Inject count_instr before - Instr 3748 @ 0xea40 (59968) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3753 @ 0xea90 (60048) - FADD R0, R5, 8192 ;
Inject count_instr before - Instr 3758 @ 0xeae0 (60128) - LOP3.LUT R30, R30, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3762 @ 0xeb20 (60192) - BSYNC B0 ;
Inject count_instr before - Instr 3765 @ 0xeb50 (60240) - LOP3.LUT R5, R30, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3771 @ 0xebb0 (60336) - ISETP.GE.U32.AND P0, PT, R5, 0x38000000, PT ;
Inject count_instr before - Instr 3773 @ 0xebd0 (60368) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3778 @ 0xec20 (60448) - FADD R0, R5, 64 ;
Inject count_instr before - Instr 3783 @ 0xec70 (60528) - LOP3.LUT R30, R30, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3787 @ 0xecb0 (60592) - BSYNC B0 ;
Inject count_instr before - Instr 3790 @ 0xece0 (60640) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3792 @ 0xed00 (60672) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3794 @ 0xed20 (60704) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3796 @ 0xed40 (60736) - SHF.R.U32.HI R4, RZ, 0x17, R30 ;
Inject count_instr before - Instr 3811 @ 0xee30 (60976) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3829 @ 0xef50 (61264) - EXIT ;
Inject count_instr before - Instr 3830 @ 0xef60 (61280) - F2I.U64.TRUNC R30, R30 ;
Inject count_instr before - Instr 3833 @ 0xef90 (61328) - F2I.U32.TRUNC.NTZ R5, R30 ;
Inject count_instr before - Instr 3836 @ 0xefc0 (61376) - BRA 0xefc0;
kernel 107 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 172, total instructions 6799416
Function void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::batch_norm_calc_invstd(at::Tensor const&, at::Tensor const&, double)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul> >(int, at::native::(anonymous namespace)::batch_norm_calc_invstd(at::Tensor const&, at::Tensor const&, double)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R7, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R7, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x420 ;
Basic block id 1 - num instructions 59
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R4, RZ, RZ, 0x2 ;
 Instr 8 @ 0x80 (128) - IMAD.WIDE R4, R3, R4, c[0x0][0x180] ;
 Instr 9 @ 0x90 (144) - IMAD.WIDE.U32 R4, R0, 0x8, R4 ;
 Instr 10 @ 0xa0 (160) - LDG.E.64.SYS R8, [R4] ;
 Instr 11 @ 0xb0 (176) - LDG.E.64.SYS R10, [R4+0x400] ;
 Instr 12 @ 0xc0 (192) - HADD2.F32 R6, R9.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 13 @ 0xd0 (208) - HADD2.F32 R2, R9.H0_H0, -RZ.H0_H0 ;
 Instr 14 @ 0xe0 (224) - HADD2.F32 R4, R11.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 15 @ 0xf0 (240) - HADD2.F32 R5, R11.H0_H0, -RZ.H0_H0 ;
 Instr 16 @ 0x100 (256) - FADD R7, R6, c[0x0][0x168] ;
 Instr 17 @ 0x110 (272) - FADD R9, R2, c[0x0][0x168] ;
 Instr 18 @ 0x120 (288) - HADD2.F32 R6, R8.H1_H1, -RZ.H0_H0 ;
 Instr 19 @ 0x130 (304) - FADD R13, R4, c[0x0][0x168] ;
 Instr 20 @ 0x140 (320) - FSETP.GEU.AND P6, PT, |R7|, 1.175494350822287508e-38, PT ;
 Instr 21 @ 0x150 (336) - HADD2.F32 R4, R10.H1_H1, -RZ.H0_H0 ;
 Instr 22 @ 0x160 (352) - FADD R12, R5, c[0x0][0x168] ;
 Instr 23 @ 0x170 (368) - HADD2.F32 R2, R8.H0_H0, -RZ.H0_H0 ;
 Instr 24 @ 0x180 (384) - FSETP.GEU.AND P5, PT, |R9|, 1.175494350822287508e-38, PT ;
 Instr 25 @ 0x190 (400) - HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 26 @ 0x1a0 (416) - FADD R8, R6, c[0x0][0x168] ;
 Instr 27 @ 0x1b0 (432) - FSETP.GEU.AND P2, PT, |R13|, 1.175494350822287508e-38, PT ;
 Instr 28 @ 0x1c0 (448) - FADD R11, R4, c[0x0][0x168] ;
 Instr 29 @ 0x1d0 (464) - FSETP.GEU.AND P1, PT, |R12|, 1.175494350822287508e-38, PT ;
 Instr 30 @ 0x1e0 (480) - FADD R2, R2, c[0x0][0x168] ;
 Instr 31 @ 0x1f0 (496) - FSETP.GEU.AND P4, PT, |R8|, 1.175494350822287508e-38, PT ;
 Instr 32 @ 0x200 (512) - @!P6 FMUL R7, R7, 16777216 ;
 Instr 33 @ 0x210 (528) - FSETP.GEU.AND P0, PT, |R11|, 1.175494350822287508e-38, PT ;
 Instr 34 @ 0x220 (544) - FADD R10, R10, c[0x0][0x168] ;
 Instr 35 @ 0x230 (560) - FSETP.GEU.AND P3, PT, |R2|, 1.175494350822287508e-38, PT ;
 Instr 36 @ 0x240 (576) - @!P5 FMUL R9, R9, 16777216 ;
 Instr 37 @ 0x250 (592) - MUFU.RSQ R7, R7 ;
 Instr 38 @ 0x260 (608) - @!P2 FMUL R13, R13, 16777216 ;
 Instr 39 @ 0x270 (624) - @!P1 FMUL R12, R12, 16777216 ;
 Instr 40 @ 0x280 (640) - @!P4 FMUL R8, R8, 16777216 ;
 Instr 41 @ 0x290 (656) - @!P0 FMUL R11, R11, 16777216 ;
 Instr 42 @ 0x2a0 (672) - MUFU.RSQ R6, R9 ;
 Instr 43 @ 0x2b0 (688) - @!P3 FMUL R2, R2, 16777216 ;
 Instr 44 @ 0x2c0 (704) - @!P6 FMUL R7, R7, 4096 ;
 Instr 45 @ 0x2d0 (720) - FSETP.GEU.AND P6, PT, |R10|, 1.175494350822287508e-38, PT ;
 Instr 46 @ 0x2e0 (736) - MUFU.RSQ R5, R8 ;
 Instr 47 @ 0x2f0 (752) - @!P5 FMUL R6, R6, 4096 ;
 Instr 48 @ 0x300 (768) - MUFU.RSQ R4, R2 ;
 Instr 49 @ 0x310 (784) - @!P6 FMUL R10, R10, 16777216 ;
 Instr 50 @ 0x320 (800) - MUFU.RSQ R19, R13 ;
 Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R2, RZ, RZ, 0x4 ;
 Instr 52 @ 0x340 (832) - @!P4 FMUL R5, R5, 4096 ;
 Instr 53 @ 0x350 (848) - IMAD.WIDE.U32 R2, R3, R2, c[0x0][0x178] ;
 Instr 54 @ 0x360 (864) - MUFU.RSQ R18, R12 ;
 Instr 55 @ 0x370 (880) - @!P3 FMUL R4, R4, 4096 ;
 Instr 56 @ 0x380 (896) - IMAD.WIDE R2, R0, 0x10, R2 ;
 Instr 57 @ 0x390 (912) - MUFU.RSQ R17, R11 ;
 Instr 58 @ 0x3a0 (928) - @!P2 FMUL R19, R19, 4096 ;
 Instr 59 @ 0x3b0 (944) - STG.E.128.SYS [R2], R4 ;
 Instr 60 @ 0x3c0 (960) - MUFU.RSQ R16, R10 ;
 Instr 61 @ 0x3d0 (976) - @!P1 FMUL R18, R18, 4096 ;
 Instr 62 @ 0x3e0 (992) - @!P0 FMUL R17, R17, 4096 ;
 Instr 63 @ 0x3f0 (1008) - @!P6 FMUL R16, R16, 4096 ;
 Instr 64 @ 0x400 (1024) - STG.E.128.SYS [R2+0x800], R16 ;
 Instr 65 @ 0x410 (1040) - EXIT ;
Basic block id 2 - num instructions 12
 Instr 66 @ 0x420 (1056) - ISETP.GE.AND P6, PT, R0, R7, PT ;
 Instr 67 @ 0x430 (1072) - BMOV.32.CLEAR RZ, B0 ;
 Instr 68 @ 0x440 (1088) - BSSY B0, 0x6e0 ;
 Instr 69 @ 0x450 (1104) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 70 @ 0x460 (1120) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 71 @ 0x470 (1136) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 72 @ 0x480 (1152) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 73 @ 0x490 (1168) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 74 @ 0x4a0 (1184) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 75 @ 0x4b0 (1200) - PRMT R12, RZ, 0x7610, R12 ;
 Instr 76 @ 0x4c0 (1216) - PRMT R13, RZ, 0x7610, R13 ;
 Instr 77 @ 0x4d0 (1232) - @P6 BRA 0x6d0 ;
Basic block id 3 - num instructions 7
 Instr 78 @ 0x4e0 (1248) - IMAD.IADD R4, R3, 0x1, R0 ;
 Instr 79 @ 0x4f0 (1264) - IMAD.MOV.U32 R5, RZ, RZ, 0x2 ;
 Instr 80 @ 0x500 (1280) - IMAD.WIDE.U32 R4, R4, R5, c[0x0][0x180] ;
 Instr 81 @ 0x510 (1296) - LDG.E.U16.SYS R13, [R4] ;
 Instr 82 @ 0x520 (1312) - IADD3 R14, R0, 0x80, RZ ;
 Instr 83 @ 0x530 (1328) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 84 @ 0x540 (1344) - @P0 BRA 0x6d0 ;
Basic block id 4 - num instructions 4
 Instr 85 @ 0x550 (1360) - LDG.E.U16.SYS R12, [R4+0x100] ;
 Instr 86 @ 0x560 (1376) - IADD3 R14, R0, 0x100, RZ ;
 Instr 87 @ 0x570 (1392) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 88 @ 0x580 (1408) - @P0 BRA 0x6d0 ;
Basic block id 5 - num instructions 4
 Instr 89 @ 0x590 (1424) - LDG.E.U16.SYS R11, [R4+0x200] ;
 Instr 90 @ 0x5a0 (1440) - IADD3 R14, R0, 0x180, RZ ;
 Instr 91 @ 0x5b0 (1456) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 92 @ 0x5c0 (1472) - @P0 BRA 0x6d0 ;
Basic block id 6 - num instructions 4
 Instr 93 @ 0x5d0 (1488) - LDG.E.U16.SYS R10, [R4+0x300] ;
 Instr 94 @ 0x5e0 (1504) - IADD3 R14, R0, 0x200, RZ ;
 Instr 95 @ 0x5f0 (1520) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 96 @ 0x600 (1536) - @P0 BRA 0x6d0 ;
Basic block id 7 - num instructions 4
 Instr 97 @ 0x610 (1552) - LDG.E.U16.SYS R9, [R4+0x400] ;
 Instr 98 @ 0x620 (1568) - IADD3 R14, R0, 0x280, RZ ;
 Instr 99 @ 0x630 (1584) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 100 @ 0x640 (1600) - @P0 BRA 0x6d0 ;
Basic block id 8 - num instructions 4
 Instr 101 @ 0x650 (1616) - LDG.E.U16.SYS R8, [R4+0x500] ;
 Instr 102 @ 0x660 (1632) - IADD3 R14, R0, 0x300, RZ ;
 Instr 103 @ 0x670 (1648) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 104 @ 0x680 (1664) - @P0 BRA 0x6d0 ;
Basic block id 9 - num instructions 4
 Instr 105 @ 0x690 (1680) - IADD3 R6, R0, 0x380, RZ ;
 Instr 106 @ 0x6a0 (1696) - ISETP.GE.AND P0, PT, R6, R7, PT ;
 Instr 107 @ 0x6b0 (1712) - LDG.E.U16.SYS R6, [R4+0x600] ;
 Instr 108 @ 0x6c0 (1728) - @!P0 LDG.E.U16.SYS R2, [R4+0x700] ;
Basic block id 10 - num instructions 121
 Instr 109 @ 0x6d0 (1744) - BSYNC B0 ;
 Instr 110 @ 0x6e0 (1760) - IADD3 R4, R0.reuse, 0x80, RZ ;
 Instr 111 @ 0x6f0 (1776) - @!P6 HADD2.F32 R13, R13.H0_H0, -RZ.H0_H0 ;
 Instr 112 @ 0x700 (1792) - IADD3 R14, R0, 0x100, RZ ;
 Instr 113 @ 0x710 (1808) - ISETP.GE.AND P5, PT, R4, R7.reuse, PT ;
 Instr 114 @ 0x720 (1824) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 115 @ 0x730 (1840) - PLOP3.LUT P3, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 116 @ 0x740 (1856) - @!P6 FADD R13, R13, c[0x0][0x168] ;
 Instr 117 @ 0x750 (1872) - PLOP3.LUT P4, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 118 @ 0x760 (1888) - IADD3 R4, R0, 0x180, RZ ;
 Instr 119 @ 0x770 (1904) - @!P6 FSETP.GEU.AND P2, PT, |R13|, 1.175494350822287508e-38, PT ;
 Instr 120 @ 0x780 (1920) - @!P5 HADD2.F32 R12, R12.H0_H0, -RZ.H0_H0 ;
 Instr 121 @ 0x790 (1936) - P2R R20, PR, RZ, 0x1 ;
 Instr 122 @ 0x7a0 (1952) - @!P0 HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 123 @ 0x7b0 (1968) - @!P6 PLOP3.LUT P3, PT, P2, PT, PT, 0x80, 0x0 ;
 Instr 124 @ 0x7c0 (1984) - P2R R26, PR, RZ, 0x20 ;
 Instr 125 @ 0x7d0 (2000) - P2R R17, PR, RZ, 0x40 ;
 Instr 126 @ 0x7e0 (2016) - @!P5 FADD R12, R12, c[0x0][0x168] ;
 Instr 127 @ 0x7f0 (2032) - PLOP3.LUT P6, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 128 @ 0x800 (2048) - @!P0 FADD R11, R11, c[0x0][0x168] ;
 Instr 129 @ 0x810 (2064) - @!P5 FSETP.GEU.AND P1, PT, |R12|, 1.175494350822287508e-38, PT ;
 Instr 130 @ 0x820 (2080) - P2R R14, PR, RZ, 0x8 ;
 Instr 131 @ 0x830 (2096) - @!P5 PLOP3.LUT P4, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 132 @ 0x840 (2112) - PLOP3.LUT P3, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 133 @ 0x850 (2128) - PLOP3.LUT P5, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 134 @ 0x860 (2144) - @!P0 FSETP.GEU.AND P1, PT, |R11|, 1.175494350822287508e-38, PT ;
 Instr 135 @ 0x870 (2160) - @!P0 PLOP3.LUT P3, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 136 @ 0x880 (2176) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 137 @ 0x890 (2192) - P2R R15, PR, RZ, 0x10 ;
 Instr 138 @ 0x8a0 (2208) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 139 @ 0x8b0 (2224) - IADD3 R4, R0, 0x200, RZ ;
 Instr 140 @ 0x8c0 (2240) - P2R R19, PR, RZ, 0x8 ;
 Instr 141 @ 0x8d0 (2256) - PLOP3.LUT P3, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 142 @ 0x8e0 (2272) - P2R R21, PR, RZ, 0x2 ;
 Instr 143 @ 0x8f0 (2288) - @!P1 HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 144 @ 0x900 (2304) - @!P1 FADD R10, R10, c[0x0][0x168] ;
 Instr 145 @ 0x910 (2320) - @!P1 FSETP.GEU.AND P2, PT, |R10|, 1.175494350822287508e-38, PT ;
 Instr 146 @ 0x920 (2336) - @!P1 PLOP3.LUT P3, PT, P2, PT, PT, 0x80, 0x0 ;
 Instr 147 @ 0x930 (2352) - ISETP.NE.AND P1, PT, R19, RZ, PT ;
 Instr 148 @ 0x940 (2368) - P2R R19, PR, RZ, 0x2 ;
 Instr 149 @ 0x950 (2384) - ISETP.GE.AND P2, PT, R4, R7, PT ;
 Instr 150 @ 0x960 (2400) - IADD3 R4, R0, 0x280, RZ ;
 Instr 151 @ 0x970 (2416) - P2R R23, PR, RZ, 0x8 ;
 Instr 152 @ 0x980 (2432) - ISETP.NE.AND P1, PT, R26, RZ, PT ;
 Instr 153 @ 0x990 (2448) - P2R R22, PR, RZ, 0x4 ;
 Instr 154 @ 0x9a0 (2464) - @!P2 HADD2.F32 R9, R9.H0_H0, -RZ.H0_H0 ;
 Instr 155 @ 0x9b0 (2480) - @!P2 FADD R9, R9, c[0x0][0x168] ;
 Instr 156 @ 0x9c0 (2496) - @!P2 FSETP.GEU.AND P3, PT, |R9|, 1.175494350822287508e-38, PT ;
 Instr 157 @ 0x9d0 (2512) - @!P2 PLOP3.LUT P0, PT, P3, PT, PT, 0x80, 0x0 ;
 Instr 158 @ 0x9e0 (2528) - ISETP.NE.AND P2, PT, R23, RZ, PT ;
 Instr 159 @ 0x9f0 (2544) - ISETP.GE.AND P3, PT, R4, R7, PT ;
 Instr 160 @ 0xa00 (2560) - IADD3 R4, R0, 0x300, RZ ;
 Instr 161 @ 0xa10 (2576) - P2R R24, PR, RZ, 0x1 ;
 Instr 162 @ 0xa20 (2592) - ISETP.NE.AND P0, PT, R15, RZ, PT ;
 Instr 163 @ 0xa30 (2608) - @!P2 FMUL R10, R10, 16777216 ;
 Instr 164 @ 0xa40 (2624) - P2R R23, PR, RZ, 0x8 ;
 Instr 165 @ 0xa50 (2640) - P2R R18, PR, RZ, 0x1 ;
 Instr 166 @ 0xa60 (2656) - @!P3 HADD2.F32 R8, R8.H0_H0, -RZ.H0_H0 ;
 Instr 167 @ 0xa70 (2672) - ISETP.NE.AND P0, PT, R14, RZ, PT ;
 Instr 168 @ 0xa80 (2688) - P2R R16, PR, RZ, 0x1 ;
 Instr 169 @ 0xa90 (2704) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 170 @ 0xaa0 (2720) - @!P3 FADD R14, R8, c[0x0][0x168] ;
 Instr 171 @ 0xab0 (2736) - @!P3 FSETP.GEU.AND P4, PT, |R14|, 1.175494350822287508e-38, PT ;
 Instr 172 @ 0xac0 (2752) - @!P3 PLOP3.LUT P5, PT, P4, PT, PT, 0x80, 0x0 ;
 Instr 173 @ 0xad0 (2768) - ISETP.NE.AND P3, PT, R24, RZ, PT ;
 Instr 174 @ 0xae0 (2784) - ISETP.GE.AND P4, PT, R4, R7, PT ;
 Instr 175 @ 0xaf0 (2800) - IADD3 R4, R0, 0x380, RZ ;
 Instr 176 @ 0xb00 (2816) - P2R R8, PR, RZ, 0x20 ;
 Instr 177 @ 0xb10 (2832) - P2R R24, PR, RZ, 0x10 ;
 Instr 178 @ 0xb20 (2848) - @!P3 FMUL R9, R9, 16777216 ;
 Instr 179 @ 0xb30 (2864) - @!P4 HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 180 @ 0xb40 (2880) - @!P4 FADD R15, R6, c[0x0][0x168] ;
 Instr 181 @ 0xb50 (2896) - @!P4 FSETP.GEU.AND P5, PT, |R15|, 1.175494350822287508e-38, PT ;
 Instr 182 @ 0xb60 (2912) - @!P4 PLOP3.LUT P0, PT, P5, PT, PT, 0x80, 0x0 ;
 Instr 183 @ 0xb70 (2928) - ISETP.NE.AND P4, PT, R8, RZ, PT ;
 Instr 184 @ 0xb80 (2944) - ISETP.GE.AND P5, PT, R4, R7, PT ;
 Instr 185 @ 0xb90 (2960) - P2R R6, PR, RZ, 0x1 ;
 Instr 186 @ 0xba0 (2976) - @!P4 FMUL R14, R14, 16777216 ;
 Instr 187 @ 0xbb0 (2992) - @!P5 HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
 Instr 188 @ 0xbc0 (3008) - @!P5 FADD R7, R2, c[0x0][0x168] ;
 Instr 189 @ 0xbd0 (3024) - @!P5 FSETP.GEU.AND P0, PT, |R7|, 1.175494350822287508e-38, PT ;
 Instr 190 @ 0xbe0 (3040) - @!P5 PLOP3.LUT P6, PT, P0, PT, PT, 0x80, 0x0 ;
 Instr 191 @ 0xbf0 (3056) - ISETP.NE.AND P0, PT, R16, RZ, PT ;
 Instr 192 @ 0xc00 (3072) - P2R R4, PR, RZ, 0x40 ;
 Instr 193 @ 0xc10 (3088) - ISETP.NE.AND P6, PT, R17, RZ, PT ;
 Instr 194 @ 0xc20 (3104) - P2R R17, PR, RZ, 0x20 ;
 Instr 195 @ 0xc30 (3120) - P2R R25, PR, RZ, 0x40 ;
 Instr 196 @ 0xc40 (3136) - @!P0 FMUL R13, R13, 16777216 ;
 Instr 197 @ 0xc50 (3152) - ISETP.NE.AND P5, PT, R6, RZ, PT ;
 Instr 198 @ 0xc60 (3168) - @!P6 MUFU.RSQ R2, R13 ;
 Instr 199 @ 0xc70 (3184) - ISETP.NE.AND P6, PT, R4, RZ, PT ;
 Instr 200 @ 0xc80 (3200) - @!P5 FMUL R15, R15, 16777216 ;
 Instr 201 @ 0xc90 (3216) - @!P6 FMUL R7, R7, 16777216 ;
 Instr 202 @ 0xca0 (3232) - @!P0 FMUL R2, R2, 4096 ;
 Instr 203 @ 0xcb0 (3248) - ISETP.NE.AND P0, PT, R18, RZ, PT ;
 Instr 204 @ 0xcc0 (3264) - @!P0 FMUL R12, R12, 16777216 ;
 Instr 205 @ 0xcd0 (3280) - @!P1 MUFU.RSQ R4, R12 ;
 Instr 206 @ 0xce0 (3296) - ISETP.NE.AND P1, PT, R19, RZ, PT ;
 Instr 207 @ 0xcf0 (3312) - @!P1 FMUL R11, R11, 16777216 ;
 Instr 208 @ 0xd00 (3328) - @!P0 FMUL R4, R4, 4096 ;
 Instr 209 @ 0xd10 (3344) - ISETP.NE.AND P0, PT, R20, RZ, PT ;
 Instr 210 @ 0xd20 (3360) - @!P0 MUFU.RSQ R6, R11 ;
 Instr 211 @ 0xd30 (3376) - @!P1 FMUL R6, R6, 4096 ;
 Instr 212 @ 0xd40 (3392) - ISETP.NE.AND P1, PT, R21, RZ, PT ;
 Instr 213 @ 0xd50 (3408) - @!P1 MUFU.RSQ R8, R10 ;
 Instr 214 @ 0xd60 (3424) - @!P2 FMUL R8, R8, 4096 ;
 Instr 215 @ 0xd70 (3440) - ISETP.NE.AND P2, PT, R22, RZ, PT ;
 Instr 216 @ 0xd80 (3456) - @!P2 MUFU.RSQ R13, R9 ;
 Instr 217 @ 0xd90 (3472) - @!P3 FMUL R13, R13, 4096 ;
 Instr 218 @ 0xda0 (3488) - ISETP.NE.AND P3, PT, R23, RZ, PT ;
 Instr 219 @ 0xdb0 (3504) - @!P3 MUFU.RSQ R12, R14 ;
 Instr 220 @ 0xdc0 (3520) - @!P4 FMUL R12, R12, 4096 ;
 Instr 221 @ 0xdd0 (3536) - ISETP.NE.AND P4, PT, R24, RZ, PT ;
 Instr 222 @ 0xde0 (3552) - @!P4 MUFU.RSQ R16, R15 ;
 Instr 223 @ 0xdf0 (3568) - @!P5 FMUL R16, R16, 4096 ;
 Instr 224 @ 0xe00 (3584) - ISETP.NE.AND P5, PT, R17, RZ, PT ;
 Instr 225 @ 0xe10 (3600) - @!P5 MUFU.RSQ R10, R7 ;
 Instr 226 @ 0xe20 (3616) - @!P6 FMUL R10, R10, 4096 ;
 Instr 227 @ 0xe30 (3632) - ISETP.NE.AND P6, PT, R25, RZ, PT ;
 Instr 228 @ 0xe40 (3648) - @!P6 IMAD.MOV.U32 R5, RZ, RZ, R2 ;
 Instr 229 @ 0xe50 (3664) - @P6 EXIT ;
Basic block id 11 - num instructions 12
 Instr 230 @ 0xe60 (3680) - IMAD.IADD R3, R3, 0x1, R0 ;
 Instr 231 @ 0xe70 (3696) - ISETP.NE.AND P6, PT, R26, RZ, PT ;
 Instr 232 @ 0xe80 (3712) - IMAD.MOV.U32 R2, RZ, RZ, 0x4 ;
 Instr 233 @ 0xe90 (3728) - @!P0 IMAD.MOV.U32 R9, RZ, RZ, R6 ;
 Instr 234 @ 0xea0 (3744) - IMAD.WIDE.U32 R2, R3, R2, c[0x0][0x178] ;
 Instr 235 @ 0xeb0 (3760) - @!P1 IMAD.MOV.U32 R11, RZ, RZ, R8 ;
 Instr 236 @ 0xec0 (3776) - @!P3 IMAD.MOV.U32 R15, RZ, RZ, R12 ;
 Instr 237 @ 0xed0 (3792) - STG.E.SYS [R2], R5 ;
 Instr 238 @ 0xee0 (3808) - @!P6 IMAD.MOV.U32 R7, RZ, RZ, R4 ;
 Instr 239 @ 0xef0 (3824) - @!P4 IMAD.MOV.U32 R17, RZ, RZ, R16 ;
 Instr 240 @ 0xf00 (3840) - @!P5 IMAD.MOV.U32 R19, RZ, RZ, R10 ;
 Instr 241 @ 0xf10 (3856) - @P6 EXIT ;
Basic block id 12 - num instructions 2
 Instr 242 @ 0xf20 (3872) - STG.E.SYS [R2+0x200], R7 ;
 Instr 243 @ 0xf30 (3888) - @P0 EXIT ;
Basic block id 13 - num instructions 2
 Instr 244 @ 0xf40 (3904) - STG.E.SYS [R2+0x400], R9 ;
 Instr 245 @ 0xf50 (3920) - @P1 EXIT ;
Basic block id 14 - num instructions 2
 Instr 246 @ 0xf60 (3936) - STG.E.SYS [R2+0x600], R11 ;
 Instr 247 @ 0xf70 (3952) - @P2 EXIT ;
Basic block id 15 - num instructions 2
 Instr 248 @ 0xf80 (3968) - STG.E.SYS [R2+0x800], R13 ;
 Instr 249 @ 0xf90 (3984) - @P3 EXIT ;
Basic block id 16 - num instructions 2
 Instr 250 @ 0xfa0 (4000) - STG.E.SYS [R2+0xa00], R15 ;
 Instr 251 @ 0xfb0 (4016) - @P4 EXIT ;
Basic block id 17 - num instructions 2
 Instr 252 @ 0xfc0 (4032) - STG.E.SYS [R2+0xc00], R17 ;
 Instr 253 @ 0xfd0 (4048) - @P5 EXIT ;
Basic block id 18 - num instructions 2
 Instr 254 @ 0xfe0 (4064) - STG.E.SYS [R2+0xe00], R19 ;
 Instr 255 @ 0xff0 (4080) - EXIT ;
Basic block id 19 - num instructions 1
 Instr 256 @ 0x1000 (4096) - BRA 0x1000;
inspecting void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::batch_norm_calc_invstd(at::Tensor const&, at::Tensor const&, double)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul> >(int, at::native::(anonymous namespace)::batch_norm_calc_invstd(at::Tensor const&, at::Tensor const&, double)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul>) - number basic blocks 20
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R4, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 66 @ 0x420 (1056) - ISETP.GE.AND P6, PT, R0, R7, PT ;
Inject count_instr before - Instr 78 @ 0x4e0 (1248) - IMAD.IADD R4, R3, 0x1, R0 ;
Inject count_instr before - Instr 85 @ 0x550 (1360) - LDG.E.U16.SYS R12, [R4+0x100] ;
Inject count_instr before - Instr 89 @ 0x590 (1424) - LDG.E.U16.SYS R11, [R4+0x200] ;
Inject count_instr before - Instr 93 @ 0x5d0 (1488) - LDG.E.U16.SYS R10, [R4+0x300] ;
Inject count_instr before - Instr 97 @ 0x610 (1552) - LDG.E.U16.SYS R9, [R4+0x400] ;
Inject count_instr before - Instr 101 @ 0x650 (1616) - LDG.E.U16.SYS R8, [R4+0x500] ;
Inject count_instr before - Instr 105 @ 0x690 (1680) - IADD3 R6, R0, 0x380, RZ ;
Inject count_instr before - Instr 109 @ 0x6d0 (1744) - BSYNC B0 ;
Inject count_instr before - Instr 230 @ 0xe60 (3680) - IMAD.IADD R3, R3, 0x1, R0 ;
Inject count_instr before - Instr 242 @ 0xf20 (3872) - STG.E.SYS [R2+0x200], R7 ;
Inject count_instr before - Instr 244 @ 0xf40 (3904) - STG.E.SYS [R2+0x400], R9 ;
Inject count_instr before - Instr 246 @ 0xf60 (3936) - STG.E.SYS [R2+0x600], R11 ;
Inject count_instr before - Instr 248 @ 0xf80 (3968) - STG.E.SYS [R2+0x800], R13 ;
Inject count_instr before - Instr 250 @ 0xfa0 (4000) - STG.E.SYS [R2+0xa00], R15 ;
Inject count_instr before - Instr 252 @ 0xfc0 (4032) - STG.E.SYS [R2+0xc00], R17 ;
Inject count_instr before - Instr 254 @ 0xfe0 (4064) - STG.E.SYS [R2+0xe00], R19 ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - BRA 0x1000;
kernel 108 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 598, total instructions 6800014
Function void at::native::batch_norm_transform_input_kernel<c10::Half, c10::Half, float, true, int>(at::GenericPackedTensorAccessor<c10::Half const, 3ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<c10::Half, 3ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<std::conditional<true, float, c10::Half>::type, 1ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<std::conditional<true, float, c10::Half>::type, 1ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<c10::Half const, 1ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<c10::Half const, 1ul, at::RestrictPtrTraits, int>, float)
Basic block id 0 - num instructions 4
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R12, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - ISETP.GE.AND P0, PT, R12, c[0x0][0x16c], PT ;
 Instr 3 @ 0x30 (48) - @P0 EXIT ;
Basic block id 1 - num instructions 16
 Instr 4 @ 0x40 (64) - S2R R10, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x1c8] ;
 Instr 6 @ 0x60 (96) - S2R R3, SR_TID.Y ;
 Instr 7 @ 0x70 (112) - ISETP.GE.AND P0, PT, R0, 0x1, PT ;
 Instr 8 @ 0x80 (128) - MOV R0, c[0x0][0x1d8] ;
 Instr 9 @ 0x90 (144) - ISETP.GE.AND P1, PT, R0, 0x1, PT ;
 Instr 10 @ 0xa0 (160) - @P0 IMAD R2, R12, c[0x0][0x1cc], RZ ;
 Instr 11 @ 0xb0 (176) - @P1 MOV R5, 0x2 ;
 Instr 12 @ 0xc0 (192) - @P1 IMAD R4, R12, c[0x0][0x1dc], RZ ;
 Instr 13 @ 0xd0 (208) - IMAD R10, R10, c[0x0][0x4], R3 ;
 Instr 14 @ 0xe0 (224) - @P0 IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 15 @ 0xf0 (240) - @P1 IMAD.WIDE R4, R4, R5, c[0x0][0x1d0] ;
 Instr 16 @ 0x100 (256) - ISETP.GE.AND P2, PT, R10, c[0x0][0x168], PT ;
 Instr 17 @ 0x110 (272) - @P0 IMAD.WIDE R2, R2, R3, c[0x0][0x1c0] ;
 Instr 18 @ 0x120 (288) - @P0 LDG.E.U16.SYS R8, [R2] ;
 Instr 19 @ 0x130 (304) - @P2 EXIT ;
Basic block id 2 - num instructions 15
 Instr 20 @ 0x140 (320) - IMAD.MOV.U32 R7, RZ, RZ, 0x4 ;
 Instr 21 @ 0x150 (336) - @P1 LDG.E.U16.SYS R4, [R4] ;
 Instr 22 @ 0x160 (352) - IMAD R2, R12.reuse, c[0x0][0x1ac], RZ ;
 Instr 23 @ 0x170 (368) - IMAD R6, R12, c[0x0][0x1bc], RZ ;
 Instr 24 @ 0x180 (384) - IMAD.WIDE R2, R2, R7, c[0x0][0x1a0] ;
 Instr 25 @ 0x190 (400) - IMAD.WIDE R6, R6, R7, c[0x0][0x1b0] ;
 Instr 26 @ 0x1a0 (416) - LDG.E.SYS R11, [R2] ;
 Instr 27 @ 0x1b0 (432) - LDG.E.SYS R6, [R6] ;
 Instr 28 @ 0x1c0 (448) - S2R R14, SR_TID.X ;
 Instr 29 @ 0x1d0 (464) - MOV R0, 0x3f800000 ;
 Instr 30 @ 0x1e0 (480) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 31 @ 0x1f0 (496) - @P0 HADD2.F32 R0, R8.H0_H0, -RZ.H0_H0 ;
 Instr 32 @ 0x200 (512) - IMAD R8, R12.reuse, c[0x0][0x198], RZ ;
 Instr 33 @ 0x210 (528) - IMAD R12, R12, c[0x0][0x178], RZ ;
 Instr 34 @ 0x220 (544) - @P1 HADD2.F32 R9, R4.H0_H0, -RZ.H0_H0 ;
Basic block id 3 - num instructions 5
 Instr 35 @ 0x230 (560) - ISETP.GE.AND P0, PT, R14, c[0x0][0x170], PT ;
 Instr 36 @ 0x240 (576) - BMOV.32.CLEAR RZ, B0 ;
 Instr 37 @ 0x250 (592) - BSSY B0, 0x460 ;
 Instr 38 @ 0x260 (608) - MOV R15, c[0x0][0x4] ;
 Instr 39 @ 0x270 (624) - @P0 BRA 0x450 ;
Basic block id 4 - num instructions 6
 Instr 40 @ 0x280 (640) - IMAD R3, R10.reuse, c[0x0][0x174], RZ ;
 Instr 41 @ 0x290 (656) - IMAD R5, R10, c[0x0][0x194], RZ ;
 Instr 42 @ 0x2a0 (672) - IMAD.MOV.U32 R7, RZ, RZ, R14 ;
 Instr 43 @ 0x2b0 (688) - SHF.R.S32.HI R13, RZ, 0x1f, R3 ;
 Instr 44 @ 0x2c0 (704) - IADD3 R17, P0, R12, R3, RZ ;
 Instr 45 @ 0x2d0 (720) - SHF.R.S32.HI R3, RZ, 0x1f, R5 ;
Basic block id 5 - num instructions 3
 Instr 46 @ 0x2e0 (736) - IADD3 R21, P1, R8, R5, RZ ;
 Instr 47 @ 0x2f0 (752) - LEA.HI.X.SX32 R19, R12, R13, 0x1, P0 ;
 Instr 48 @ 0x300 (768) - LEA.HI.X.SX32 R23, R8, R3, 0x1, P1 ;
Basic block id 6 - num instructions 20
 Instr 49 @ 0x310 (784) - IMAD R2, R7, c[0x0][0x17c], RZ ;
 Instr 50 @ 0x320 (800) - IADD3 R3, P0, R2, R17, RZ ;
 Instr 51 @ 0x330 (816) - LEA.HI.X.SX32 R4, R2, R19, 0x1, P0 ;
 Instr 52 @ 0x340 (832) - LEA R2, P0, R3, c[0x0][0x160], 0x1 ;
 Instr 53 @ 0x350 (848) - LEA.HI.X R3, R3, c[0x0][0x164], R4, 0x1, P0 ;
 Instr 54 @ 0x360 (864) - LDG.E.U16.SYS R2, [R2] ;
 Instr 55 @ 0x370 (880) - HADD2.F32 R4, R2.H0_H0, -RZ.H0_H0 ;
 Instr 56 @ 0x380 (896) - FADD R5, -R11, R4 ;
 Instr 57 @ 0x390 (912) - IMAD R4, R7.reuse, c[0x0][0x19c], RZ ;
 Instr 58 @ 0x3a0 (928) - IADD3 R7, R7, c[0x0][0x0], RZ ;
 Instr 59 @ 0x3b0 (944) - FMUL R5, R5, R0 ;
 Instr 60 @ 0x3c0 (960) - FFMA R13, R6, R5, R9 ;
 Instr 61 @ 0x3d0 (976) - IADD3 R5, P0, R4, R21, RZ ;
 Instr 62 @ 0x3e0 (992) - LEA.HI.X.SX32 R16, R4, R23, 0x1, P0 ;
 Instr 63 @ 0x3f0 (1008) - F2F.F16.F32 R13, R13 ;
 Instr 64 @ 0x400 (1024) - LEA R4, P0, R5, c[0x0][0x180], 0x1 ;
 Instr 65 @ 0x410 (1040) - LEA.HI.X R5, R5, c[0x0][0x184], R16, 0x1, P0 ;
 Instr 66 @ 0x420 (1056) - ISETP.GE.AND P0, PT, R7, c[0x0][0x170], PT ;
 Instr 67 @ 0x430 (1072) - STG.E.U16.SYS [R4], R13 ;
 Instr 68 @ 0x440 (1088) - @!P0 BRA 0x310 ;
Basic block id 7 - num instructions 4
 Instr 69 @ 0x450 (1104) - BSYNC B0 ;
 Instr 70 @ 0x460 (1120) - IMAD R10, R15, c[0x0][0x10], R10 ;
 Instr 71 @ 0x470 (1136) - ISETP.GE.AND P0, PT, R10, c[0x0][0x168], PT ;
 Instr 72 @ 0x480 (1152) - @!P0 BRA 0x230 ;
Basic block id 8 - num instructions 1
 Instr 73 @ 0x490 (1168) - EXIT ;
Basic block id 9 - num instructions 1
 Instr 74 @ 0x4a0 (1184) - BRA 0x4a0;
inspecting void at::native::batch_norm_transform_input_kernel<c10::Half, c10::Half, float, true, int>(at::GenericPackedTensorAccessor<c10::Half const, 3ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<c10::Half, 3ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<std::conditional<true, float, c10::Half>::type, 1ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<std::conditional<true, float, c10::Half>::type, 1ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<c10::Half const, 1ul, at::RestrictPtrTraits, int>, at::GenericPackedTensorAccessor<c10::Half const, 1ul, at::RestrictPtrTraits, int>, float) - number basic blocks 10
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 4 @ 0x40 (64) - S2R R10, SR_CTAID.Y ;
Inject count_instr before - Instr 20 @ 0x140 (320) - IMAD.MOV.U32 R7, RZ, RZ, 0x4 ;
Inject count_instr before - Instr 35 @ 0x230 (560) - ISETP.GE.AND P0, PT, R14, c[0x0][0x170], PT ;
Inject count_instr before - Instr 40 @ 0x280 (640) - IMAD R3, R10.reuse, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 46 @ 0x2e0 (736) - IADD3 R21, P1, R8, R5, RZ ;
Inject count_instr before - Instr 49 @ 0x310 (784) - IMAD R2, R7, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 69 @ 0x450 (1104) - BSYNC B0 ;
Inject count_instr before - Instr 73 @ 0x490 (1168) - EXIT ;
Inject count_instr before - Instr 74 @ 0x4a0 (1184) - BRA 0x4a0;
kernel 109 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 64,  kernel instructions 557056, total instructions 7357070
Function void at::native::vectorized_elementwise_kernel<8, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul> >(int, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R11, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R11, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x9b0 ;
Basic block id 1 - num instructions 8
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R2, RZ, RZ, 0x2 ;
 Instr 8 @ 0x80 (128) - IMAD.WIDE R4, R3, R2, c[0x0][0x188] ;
 Instr 9 @ 0x90 (144) - IMAD.WIDE.U32 R8, R0, 0x10, R4 ;
 Instr 10 @ 0xa0 (160) - LDG.E.128.SYS R4, [R8] ;
 Instr 11 @ 0xb0 (176) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
 Instr 12 @ 0xc0 (192) - BMOV.32.CLEAR RZ, B0 ;
 Instr 13 @ 0xd0 (208) - BSSY B0, 0x970 ;
 Instr 14 @ 0xe0 (224) - @!P0 BRA 0x6e0 ;
Basic block id 2 - num instructions 3
 Instr 15 @ 0xf0 (240) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x168] ;
 Instr 16 @ 0x100 (256) - ISETP.NE.AND P0, PT, R8, 0x1, PT ;
 Instr 17 @ 0x110 (272) - @P0 BRA 0x3c0 ;
Basic block id 3 - num instructions 38
 Instr 18 @ 0x120 (288) - HADD2.F32 R8, R4.H0_H0, -RZ.H0_H0 ;
 Instr 19 @ 0x130 (304) - HADD2.F32 R10, R5.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 20 @ 0x140 (320) - HADD2.F32 R12, R6.H0_H0, -RZ.H0_H0 ;
 Instr 21 @ 0x150 (336) - HADD2.F32 R9, R4.H1_H1, -RZ.H0_H0 ;
 Instr 22 @ 0x160 (352) - FSETP.GTU.AND P4, PT, |R8|, +INF , PT ;
 Instr 23 @ 0x170 (368) - HADD2.F32 R11, R5.H1_H1, -RZ.H0_H0 ;
 Instr 24 @ 0x180 (384) - FSETP.GTU.AND P6, PT, |R10|, +INF , PT ;
 Instr 25 @ 0x190 (400) - HADD2.F32 R13, R6.H1_H1, -RZ.H0_H0 ;
 Instr 26 @ 0x1a0 (416) - FSETP.GTU.AND P2, PT, |R12|, +INF , PT ;
 Instr 27 @ 0x1b0 (432) - HADD2.F32 R14, R7.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 28 @ 0x1c0 (448) - FSETP.GTU.AND P5, PT, |R9|, +INF , PT ;
 Instr 29 @ 0x1d0 (464) - HADD2.F32 R15, R7.H1_H1, -RZ.H0_H0 ;
 Instr 30 @ 0x1e0 (480) - FSETP.GTU.AND P3, PT, |R11|, +INF , PT ;
 Instr 31 @ 0x1f0 (496) - FSETP.GTU.AND P1, PT, |R13|, +INF , PT ;
 Instr 32 @ 0x200 (512) - @!P4 FMNMX R8, R8, c[0x0][0x16c], PT ;
 Instr 33 @ 0x210 (528) - FSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 34 @ 0x220 (544) - @!P6 FMNMX R10, R10, c[0x0][0x16c], PT ;
 Instr 35 @ 0x230 (560) - @!P4 F2F.F16.F32 R8, R8 ;
 Instr 36 @ 0x240 (576) - @!P2 FMNMX R12, R12, c[0x0][0x16c], PT ;
 Instr 37 @ 0x250 (592) - @!P5 FMNMX R9, R9, c[0x0][0x16c], PT ;
 Instr 38 @ 0x260 (608) - @!P3 FMNMX R11, R11, c[0x0][0x16c], PT ;
 Instr 39 @ 0x270 (624) - @!P1 FMNMX R13, R13, c[0x0][0x16c], PT ;
 Instr 40 @ 0x280 (640) - @!P6 F2F.F16.F32 R10, R10 ;
 Instr 41 @ 0x290 (656) - @!P0 FMNMX R14, R14, c[0x0][0x16c], PT ;
 Instr 42 @ 0x2a0 (672) - @!P2 F2F.F16.F32 R12, R12 ;
 Instr 43 @ 0x2b0 (688) - @!P4 PRMT R4, R8, 0x7610, R4 ;
 Instr 44 @ 0x2c0 (704) - FSETP.GTU.AND P4, PT, |R15|, +INF , PT ;
 Instr 45 @ 0x2d0 (720) - @!P5 F2F.F16.F32 R9, R9 ;
 Instr 46 @ 0x2e0 (736) - @!P6 PRMT R5, R10, 0x7610, R5 ;
 Instr 47 @ 0x2f0 (752) - @!P3 F2F.F16.F32 R11, R11 ;
 Instr 48 @ 0x300 (768) - @!P2 PRMT R6, R12, 0x7610, R6 ;
 Instr 49 @ 0x310 (784) - @!P1 F2F.F16.F32 R13, R13 ;
 Instr 50 @ 0x320 (800) - @!P5 PRMT R4, R4, 0x5410, R9 ;
 Instr 51 @ 0x330 (816) - @!P0 F2F.F16.F32 R14, R14 ;
 Instr 52 @ 0x340 (832) - @!P3 PRMT R5, R5, 0x5410, R11 ;
 Instr 53 @ 0x350 (848) - @!P1 PRMT R6, R6, 0x5410, R13 ;
 Instr 54 @ 0x360 (864) - @!P0 PRMT R7, R14, 0x7610, R7 ;
 Instr 55 @ 0x370 (880) - @P4 BRA 0x960 ;
Basic block id 4 - num instructions 4
 Instr 56 @ 0x380 (896) - FMNMX R15, R15, c[0x0][0x16c], PT ;
 Instr 57 @ 0x390 (912) - F2F.F16.F32 R15, R15 ;
 Instr 58 @ 0x3a0 (928) - PRMT R7, R7, 0x5410, R15 ;
 Instr 59 @ 0x3b0 (944) - BRA 0x960 ;
Basic block id 5 - num instructions 45
 Instr 60 @ 0x3c0 (960) - HADD2.F32 R8, R4.H0_H0, -RZ.H0_H0 ;
 Instr 61 @ 0x3d0 (976) - HADD2.F32 R10, R5.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 62 @ 0x3e0 (992) - HADD2.F32 R12, R6.H0_H0, -RZ.H0_H0 ;
 Instr 63 @ 0x3f0 (1008) - HADD2.F32 R9, R4.H1_H1, -RZ.H0_H0 ;
 Instr 64 @ 0x400 (1024) - FSETP.GTU.AND P4, PT, |R8|, +INF , PT ;
 Instr 65 @ 0x410 (1040) - HADD2.F32 R11, R5.H1_H1, -RZ.H0_H0 ;
 Instr 66 @ 0x420 (1056) - FSETP.GTU.AND P6, PT, |R10|, +INF , PT ;
 Instr 67 @ 0x430 (1072) - HADD2.F32 R13, R6.H1_H1, -RZ.H0_H0 ;
 Instr 68 @ 0x440 (1088) - FSETP.GTU.AND P2, PT, |R12|, +INF , PT ;
 Instr 69 @ 0x450 (1104) - HADD2.F32 R14, R7.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 70 @ 0x460 (1120) - FSETP.GTU.AND P5, PT, |R9|, +INF , PT ;
 Instr 71 @ 0x470 (1136) - HADD2.F32 R15, R7.H1_H1, -RZ.H0_H0 ;
 Instr 72 @ 0x480 (1152) - FSETP.GTU.AND P3, PT, |R11|, +INF , PT ;
 Instr 73 @ 0x490 (1168) - FSETP.GTU.AND P1, PT, |R13|, +INF , PT ;
 Instr 74 @ 0x4a0 (1184) - @!P4 FMNMX R8, R8, c[0x0][0x16c], !PT ;
 Instr 75 @ 0x4b0 (1200) - FSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 76 @ 0x4c0 (1216) - @!P4 FMNMX R8, R8, c[0x0][0x170], PT ;
 Instr 77 @ 0x4d0 (1232) - @!P6 FMNMX R10, R10, c[0x0][0x16c], !PT ;
 Instr 78 @ 0x4e0 (1248) - @!P2 FMNMX R12, R12, c[0x0][0x16c], !PT ;
 Instr 79 @ 0x4f0 (1264) - @!P4 F2F.F16.F32 R8, R8 ;
 Instr 80 @ 0x500 (1280) - @!P5 FMNMX R9, R9, c[0x0][0x16c], !PT ;
 Instr 81 @ 0x510 (1296) - @!P6 FMNMX R10, R10, c[0x0][0x170], PT ;
 Instr 82 @ 0x520 (1312) - @!P3 FMNMX R11, R11, c[0x0][0x16c], !PT ;
 Instr 83 @ 0x530 (1328) - @!P2 FMNMX R12, R12, c[0x0][0x170], PT ;
 Instr 84 @ 0x540 (1344) - @!P1 FMNMX R13, R13, c[0x0][0x16c], !PT ;
 Instr 85 @ 0x550 (1360) - @!P6 F2F.F16.F32 R10, R10 ;
 Instr 86 @ 0x560 (1376) - @!P0 FMNMX R14, R14, c[0x0][0x16c], !PT ;
 Instr 87 @ 0x570 (1392) - @!P5 FMNMX R9, R9, c[0x0][0x170], PT ;
 Instr 88 @ 0x580 (1408) - @!P3 FMNMX R11, R11, c[0x0][0x170], PT ;
 Instr 89 @ 0x590 (1424) - @!P1 FMNMX R13, R13, c[0x0][0x170], PT ;
 Instr 90 @ 0x5a0 (1440) - @!P2 F2F.F16.F32 R12, R12 ;
 Instr 91 @ 0x5b0 (1456) - @!P0 FMNMX R14, R14, c[0x0][0x170], PT ;
 Instr 92 @ 0x5c0 (1472) - @!P4 PRMT R4, R8, 0x7610, R4 ;
 Instr 93 @ 0x5d0 (1488) - FSETP.GTU.AND P4, PT, |R15|, +INF , PT ;
 Instr 94 @ 0x5e0 (1504) - @!P5 F2F.F16.F32 R9, R9 ;
 Instr 95 @ 0x5f0 (1520) - @!P6 PRMT R5, R10, 0x7610, R5 ;
 Instr 96 @ 0x600 (1536) - @!P3 F2F.F16.F32 R11, R11 ;
 Instr 97 @ 0x610 (1552) - @!P2 PRMT R6, R12, 0x7610, R6 ;
 Instr 98 @ 0x620 (1568) - @!P1 F2F.F16.F32 R13, R13 ;
 Instr 99 @ 0x630 (1584) - @!P5 PRMT R4, R4, 0x5410, R9 ;
 Instr 100 @ 0x640 (1600) - @!P0 F2F.F16.F32 R14, R14 ;
 Instr 101 @ 0x650 (1616) - @!P3 PRMT R5, R5, 0x5410, R11 ;
 Instr 102 @ 0x660 (1632) - @!P1 PRMT R6, R6, 0x5410, R13 ;
 Instr 103 @ 0x670 (1648) - @!P0 PRMT R7, R14, 0x7610, R7 ;
 Instr 104 @ 0x680 (1664) - @P4 BRA 0x960 ;
Basic block id 6 - num instructions 5
 Instr 105 @ 0x690 (1680) - FMNMX R8, R15, c[0x0][0x16c], !PT ;
 Instr 106 @ 0x6a0 (1696) - FMNMX R8, R8, c[0x0][0x170], PT ;
 Instr 107 @ 0x6b0 (1712) - F2F.F16.F32 R8, R8 ;
 Instr 108 @ 0x6c0 (1728) - PRMT R7, R7, 0x5410, R8 ;
 Instr 109 @ 0x6d0 (1744) - BRA 0x960 ;
Basic block id 7 - num instructions 40
 Instr 110 @ 0x6e0 (1760) - HADD2.F32 R8, R4.H0_H0, -RZ.H0_H0 ;
 Instr 111 @ 0x6f0 (1776) - HADD2.F32 R13, R6.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 112 @ 0x700 (1792) - HADD2.F32 R10, R5.H0_H0, -RZ.H0_H0 ;
 Instr 113 @ 0x710 (1808) - HADD2.F32 R12, R6.H0_H0, -RZ.H0_H0 ;
 Instr 114 @ 0x720 (1824) - FSETP.GTU.AND P6, PT, |R8|, +INF , PT ;
 Instr 115 @ 0x730 (1840) - HADD2.F32 R14, R7.H0_H0, -RZ.H0_H0 ;
 Instr 116 @ 0x740 (1856) - FSETP.GTU.AND P1, PT, |R13|, +INF , PT ;
 Instr 117 @ 0x750 (1872) - HADD2.F32 R9, R4.H1_H1, -RZ.H0_H0 ;
 Instr 118 @ 0x760 (1888) - FSETP.GTU.AND P4, PT, |R10|, +INF , PT ;
 Instr 119 @ 0x770 (1904) - HADD2.F32 R11, R5.H1_H1, -RZ.H0_H0 ;
 Instr 120 @ 0x780 (1920) - FSETP.GTU.AND P2, PT, |R12|, +INF , PT ;
 Instr 121 @ 0x790 (1936) - HADD2.F32 R16, R7.H1_H1, -RZ.H0_H0 ;
 Instr 122 @ 0x7a0 (1952) - FSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 123 @ 0x7b0 (1968) - FSETP.GTU.AND P5, PT, |R9|, +INF , PT ;
 Instr 124 @ 0x7c0 (1984) - @!P6 FMNMX R8, R8, c[0x0][0x16c], !PT ;
 Instr 125 @ 0x7d0 (2000) - FSETP.GTU.AND P3, PT, |R11|, +INF , PT ;
 Instr 126 @ 0x7e0 (2016) - @!P1 FMNMX R15, R13, c[0x0][0x16c], !PT ;
 Instr 127 @ 0x7f0 (2032) - @!P6 F2F.F16.F32 R8, R8 ;
 Instr 128 @ 0x800 (2048) - @!P4 FMNMX R10, R10, c[0x0][0x16c], !PT ;
 Instr 129 @ 0x810 (2064) - @!P2 FMNMX R12, R12, c[0x0][0x16c], !PT ;
 Instr 130 @ 0x820 (2080) - @!P0 FMNMX R13, R14, c[0x0][0x16c], !PT ;
 Instr 131 @ 0x830 (2096) - @!P5 FMNMX R9, R9, c[0x0][0x16c], !PT ;
 Instr 132 @ 0x840 (2112) - @!P4 F2F.F16.F32 R10, R10 ;
 Instr 133 @ 0x850 (2128) - @!P3 FMNMX R11, R11, c[0x0][0x16c], !PT ;
 Instr 134 @ 0x860 (2144) - @!P6 PRMT R4, R8, 0x7610, R4 ;
 Instr 135 @ 0x870 (2160) - @!P2 F2F.F16.F32 R12, R12 ;
 Instr 136 @ 0x880 (2176) - FSETP.GTU.AND P6, PT, |R16|, +INF , PT ;
 Instr 137 @ 0x890 (2192) - @!P4 PRMT R5, R10, 0x7610, R5 ;
 Instr 138 @ 0x8a0 (2208) - @!P0 F2F.F16.F32 R13, R13 ;
 Instr 139 @ 0x8b0 (2224) - @!P6 FMNMX R14, R16, c[0x0][0x16c], !PT ;
 Instr 140 @ 0x8c0 (2240) - @!P5 F2F.F16.F32 R9, R9 ;
 Instr 141 @ 0x8d0 (2256) - @!P2 PRMT R6, R12, 0x7610, R6 ;
 Instr 142 @ 0x8e0 (2272) - @!P3 F2F.F16.F32 R11, R11 ;
 Instr 143 @ 0x8f0 (2288) - @!P0 PRMT R7, R13, 0x7610, R7 ;
 Instr 144 @ 0x900 (2304) - @!P1 F2F.F16.F32 R8, R15 ;
 Instr 145 @ 0x910 (2320) - @!P5 PRMT R4, R4, 0x5410, R9 ;
 Instr 146 @ 0x920 (2336) - @!P6 F2F.F16.F32 R14, R14 ;
 Instr 147 @ 0x930 (2352) - @!P3 PRMT R5, R5, 0x5410, R11 ;
 Instr 148 @ 0x940 (2368) - @!P1 PRMT R6, R6, 0x5410, R8 ;
 Instr 149 @ 0x950 (2384) - @!P6 PRMT R7, R7, 0x5410, R14 ;
Basic block id 8 - num instructions 5
 Instr 150 @ 0x960 (2400) - BSYNC B0 ;
 Instr 151 @ 0x970 (2416) - IMAD.WIDE.U32 R2, R3, R2, c[0x0][0x180] ;
 Instr 152 @ 0x980 (2432) - IMAD.WIDE R2, R0, 0x10, R2 ;
 Instr 153 @ 0x990 (2448) - STG.E.128.SYS [R2], R4 ;
 Instr 154 @ 0x9a0 (2464) - EXIT ;
Basic block id 9 - num instructions 13
 Instr 155 @ 0x9b0 (2480) - ISETP.GE.AND P1, PT, R0, R11, PT ;
 Instr 156 @ 0x9c0 (2496) - BMOV.32.CLEAR RZ, B0 ;
 Instr 157 @ 0x9d0 (2512) - BSSY B0, 0xc80 ;
 Instr 158 @ 0x9e0 (2528) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 159 @ 0x9f0 (2544) - P2R R4, PR, RZ, 0x2 ;
 Instr 160 @ 0xa00 (2560) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 161 @ 0xa10 (2576) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 162 @ 0xa20 (2592) - PRMT R4, RZ, 0x7610, R4 ;
 Instr 163 @ 0xa30 (2608) - PRMT R5, RZ, 0x7610, R5 ;
 Instr 164 @ 0xa40 (2624) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 165 @ 0xa50 (2640) - PRMT R7, RZ, 0x7610, R7 ;
 Instr 166 @ 0xa60 (2656) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 167 @ 0xa70 (2672) - @P1 BRA 0xc70 ;
Basic block id 10 - num instructions 7
 Instr 168 @ 0xa80 (2688) - IMAD.IADD R12, R3, 0x1, R0 ;
 Instr 169 @ 0xa90 (2704) - IMAD.MOV.U32 R13, RZ, RZ, 0x2 ;
 Instr 170 @ 0xaa0 (2720) - IMAD.WIDE.U32 R12, R12, R13, c[0x0][0x188] ;
 Instr 171 @ 0xab0 (2736) - LDG.E.U16.SYS R9, [R12] ;
 Instr 172 @ 0xac0 (2752) - IADD3 R14, R0, 0x80, RZ ;
 Instr 173 @ 0xad0 (2768) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 174 @ 0xae0 (2784) - @P0 BRA 0xc70 ;
Basic block id 11 - num instructions 4
 Instr 175 @ 0xaf0 (2800) - LDG.E.U16.SYS R7, [R12+0x100] ;
 Instr 176 @ 0xb00 (2816) - IADD3 R14, R0, 0x100, RZ ;
 Instr 177 @ 0xb10 (2832) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 178 @ 0xb20 (2848) - @P0 BRA 0xc70 ;
Basic block id 12 - num instructions 4
 Instr 179 @ 0xb30 (2864) - LDG.E.U16.SYS R6, [R12+0x200] ;
 Instr 180 @ 0xb40 (2880) - IADD3 R14, R0, 0x180, RZ ;
 Instr 181 @ 0xb50 (2896) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 182 @ 0xb60 (2912) - @P0 BRA 0xc70 ;
Basic block id 13 - num instructions 4
 Instr 183 @ 0xb70 (2928) - LDG.E.U16.SYS R5, [R12+0x300] ;
 Instr 184 @ 0xb80 (2944) - IADD3 R14, R0, 0x200, RZ ;
 Instr 185 @ 0xb90 (2960) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 186 @ 0xba0 (2976) - @P0 BRA 0xc70 ;
Basic block id 14 - num instructions 4
 Instr 187 @ 0xbb0 (2992) - LDG.E.U16.SYS R4, [R12+0x400] ;
 Instr 188 @ 0xbc0 (3008) - IADD3 R14, R0, 0x280, RZ ;
 Instr 189 @ 0xbd0 (3024) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 190 @ 0xbe0 (3040) - @P0 BRA 0xc70 ;
Basic block id 15 - num instructions 4
 Instr 191 @ 0xbf0 (3056) - LDG.E.U16.SYS R2, [R12+0x500] ;
 Instr 192 @ 0xc00 (3072) - IADD3 R14, R0, 0x300, RZ ;
 Instr 193 @ 0xc10 (3088) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 194 @ 0xc20 (3104) - @P0 BRA 0xc70 ;
Basic block id 16 - num instructions 4
 Instr 195 @ 0xc30 (3120) - IADD3 R8, R0, 0x380, RZ ;
 Instr 196 @ 0xc40 (3136) - ISETP.GE.AND P0, PT, R8, R11, PT ;
 Instr 197 @ 0xc50 (3152) - LDG.E.U16.SYS R8, [R12+0x600] ;
 Instr 198 @ 0xc60 (3168) - @!P0 LDG.E.U16.SYS R10, [R12+0x700] ;
Basic block id 17 - num instructions 5
 Instr 199 @ 0xc70 (3184) - BSYNC B0 ;
 Instr 200 @ 0xc80 (3200) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
 Instr 201 @ 0xc90 (3216) - BMOV.32.CLEAR RZ, B0 ;
 Instr 202 @ 0xca0 (3232) - BSSY B0, 0x1830 ;
 Instr 203 @ 0xcb0 (3248) - @!P0 BRA 0x14a0 ;
Basic block id 18 - num instructions 3
 Instr 204 @ 0xcc0 (3264) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 205 @ 0xcd0 (3280) - ISETP.NE.AND P0, PT, R12, 0x1, PT ;
 Instr 206 @ 0xce0 (3296) - @P0 BRA 0x1080 ;
Basic block id 19 - num instructions 42
 Instr 207 @ 0xcf0 (3312) - IADD3 R14, R0.reuse, 0x80, RZ ;
 Instr 208 @ 0xd00 (3328) - HADD2.F32 R13, R7.H0_H0, -RZ.H0_H0 ;
 Instr 209 @ 0xd10 (3344) - IADD3 R16, R0, 0x100, RZ ;
 Instr 210 @ 0xd20 (3360) - HADD2.F32 R12, R9.H0_H0, -RZ.H0_H0 ;
 Instr 211 @ 0xd30 (3376) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 212 @ 0xd40 (3392) - HADD2.F32 R15, R5.H0_H0, -RZ.H0_H0 ;
 Instr 213 @ 0xd50 (3408) - IADD3 R18, R0, 0x200, RZ ;
 Instr 214 @ 0xd60 (3424) - HADD2.F32 R14, R6.H0_H0, -RZ.H0_H0 ;
 Instr 215 @ 0xd70 (3440) - P2R R17, PR, RZ, 0x1 ;
 Instr 216 @ 0xd80 (3456) - FSETP.GTU.OR P2, PT, |R13|, +INF , P0 ;
 Instr 217 @ 0xd90 (3472) - FSETP.GTU.OR P3, PT, |R12|, +INF , P1 ;
 Instr 218 @ 0xda0 (3488) - ISETP.GE.AND P0, PT, R16, R11.reuse, PT ;
 Instr 219 @ 0xdb0 (3504) - IADD3 R16, R0, 0x180, RZ ;
 Instr 220 @ 0xdc0 (3520) - FSETP.GTU.OR P4, PT, |R14|, +INF , P0 ;
 Instr 221 @ 0xdd0 (3536) - ISETP.GE.AND P1, PT, R16, R11, PT ;
 Instr 222 @ 0xde0 (3552) - @!P2 FMNMX R13, R13, c[0x0][0x16c], PT ;
 Instr 223 @ 0xdf0 (3568) - HADD2.F32 R16, R4.H0_H0, -RZ.H0_H0 ;
 Instr 224 @ 0xe00 (3584) - @!P3 FMNMX R12, R12, c[0x0][0x16c], PT ;
 Instr 225 @ 0xe10 (3600) - @!P2 F2F.F16.F32 R13, R13 ;
 Instr 226 @ 0xe20 (3616) - @!P4 FMNMX R14, R14, c[0x0][0x16c], PT ;
 Instr 227 @ 0xe30 (3632) - @!P3 F2F.F16.F32 R12, R12 ;
 Instr 228 @ 0xe40 (3648) - @!P4 F2F.F16.F32 R14, R14 ;
 Instr 229 @ 0xe50 (3664) - @!P2 PRMT R7, R13, 0x7610, R7 ;
 Instr 230 @ 0xe60 (3680) - ISETP.GE.AND P2, PT, R18, R11, PT ;
 Instr 231 @ 0xe70 (3696) - HADD2.F32 R13, R8.H0_H0, -RZ.H0_H0 ;
 Instr 232 @ 0xe80 (3712) - @!P3 PRMT R9, R12, 0x7610, R9 ;
 Instr 233 @ 0xe90 (3728) - FSETP.GTU.OR P3, PT, |R15|, +INF , P1 ;
 Instr 234 @ 0xea0 (3744) - HADD2.F32 R12, R2.H0_H0, -RZ.H0_H0 ;
 Instr 235 @ 0xeb0 (3760) - @!P4 PRMT R6, R14, 0x7610, R6 ;
 Instr 236 @ 0xec0 (3776) - FSETP.GTU.OR P4, PT, |R16|, +INF , P2 ;
 Instr 237 @ 0xed0 (3792) - IADD3 R14, R0, 0x280, RZ ;
 Instr 238 @ 0xee0 (3808) - @!P3 FMNMX R15, R15, c[0x0][0x16c], PT ;
 Instr 239 @ 0xef0 (3824) - @!P3 F2F.F16.F32 R15, R15 ;
 Instr 240 @ 0xf00 (3840) - @!P4 FMNMX R16, R16, c[0x0][0x16c], PT ;
 Instr 241 @ 0xf10 (3856) - @!P4 F2F.F16.F32 R16, R16 ;
 Instr 242 @ 0xf20 (3872) - @!P3 PRMT R5, R15, 0x7610, R5 ;
 Instr 243 @ 0xf30 (3888) - ISETP.GE.AND P3, PT, R14, R11, PT ;
 Instr 244 @ 0xf40 (3904) - IADD3 R14, R0, 0x300, RZ ;
 Instr 245 @ 0xf50 (3920) - @!P4 PRMT R4, R16, 0x7610, R4 ;
 Instr 246 @ 0xf60 (3936) - FSETP.GTU.OR P4, PT, |R12|, +INF , P3 ;
 Instr 247 @ 0xf70 (3952) - IADD3 R16, R0, 0x380, RZ ;
 Instr 248 @ 0xf80 (3968) - @!P4 FMNMX R12, R12, c[0x0][0x16c], PT ;
Basic block id 20 - num instructions 11
 Instr 249 @ 0xf90 (3984) - @!P4 F2F.F16.F32 R12, R12 ;
 Instr 250 @ 0xfa0 (4000) - @!P4 PRMT R2, R12, 0x7610, R2 ;
 Instr 251 @ 0xfb0 (4016) - ISETP.GE.AND P4, PT, R14, R11, PT ;
 Instr 252 @ 0xfc0 (4032) - HADD2.F32 R14, R10.H0_H0, -RZ.H0_H0 ;
 Instr 253 @ 0xfd0 (4048) - FSETP.GTU.OR P5, PT, |R13|, +INF , P4 ;
 Instr 254 @ 0xfe0 (4064) - @!P5 FMNMX R13, R13, c[0x0][0x16c], PT ;
 Instr 255 @ 0xff0 (4080) - @!P5 F2F.F16.F32 R13, R13 ;
 Instr 256 @ 0x1000 (4096) - @!P5 PRMT R8, R13, 0x7610, R8 ;
 Instr 257 @ 0x1010 (4112) - ISETP.GE.AND P5, PT, R16, R11, PT ;
 Instr 258 @ 0x1020 (4128) - FSETP.GTU.OR P6, PT, |R14|, +INF , P5 ;
 Instr 259 @ 0x1030 (4144) - @P6 BRA 0x1820 ;
Basic block id 21 - num instructions 4
 Instr 260 @ 0x1040 (4160) - FMNMX R14, R14, c[0x0][0x16c], PT ;
 Instr 261 @ 0x1050 (4176) - F2F.F16.F32 R14, R14 ;
 Instr 262 @ 0x1060 (4192) - PRMT R10, R14, 0x7610, R10 ;
 Instr 263 @ 0x1070 (4208) - BRA 0x1820 ;
Basic block id 22 - num instructions 61
 Instr 264 @ 0x1080 (4224) - IADD3 R14, R0.reuse, 0x80, RZ ;
 Instr 265 @ 0x1090 (4240) - HADD2.F32 R13, R7.H0_H0, -RZ.H0_H0 ;
 Instr 266 @ 0x10a0 (4256) - ISETP.GE.AND P6, PT, R0, R11.reuse, PT ;
 Instr 267 @ 0x10b0 (4272) - HADD2.F32 R12, R9.H0_H0, -RZ.H0_H0 ;
 Instr 268 @ 0x10c0 (4288) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 269 @ 0x10d0 (4304) - HADD2.F32 R15, R6.H0_H0, -RZ.H0_H0 ;
 Instr 270 @ 0x10e0 (4320) - IADD3 R14, R0, 0x100, RZ ;
 Instr 271 @ 0x10f0 (4336) - HADD2.F32 R18, R4.H0_H0, -RZ.H0_H0 ;
 Instr 272 @ 0x1100 (4352) - P2R R17, PR, RZ, 0x1 ;
 Instr 273 @ 0x1110 (4368) - FSETP.GTU.OR P2, PT, |R13|, +INF , P0 ;
 Instr 274 @ 0x1120 (4384) - FSETP.GTU.OR P3, PT, |R12|, +INF , P6 ;
 Instr 275 @ 0x1130 (4400) - ISETP.GE.AND P0, PT, R14, R11.reuse, PT ;
 Instr 276 @ 0x1140 (4416) - IADD3 R16, R0, 0x180, RZ ;
 Instr 277 @ 0x1150 (4432) - FSETP.GTU.OR P4, PT, |R15|, +INF , P0 ;
 Instr 278 @ 0x1160 (4448) - ISETP.GE.AND P1, PT, R16, R11, PT ;
 Instr 279 @ 0x1170 (4464) - @!P2 FMNMX R13, R13, c[0x0][0x16c], !PT ;
 Instr 280 @ 0x1180 (4480) - @!P3 FMNMX R12, R12, c[0x0][0x16c], !PT ;
 Instr 281 @ 0x1190 (4496) - @!P2 FMNMX R13, R13, c[0x0][0x170], PT ;
 Instr 282 @ 0x11a0 (4512) - @!P3 FMNMX R12, R12, c[0x0][0x170], PT ;
 Instr 283 @ 0x11b0 (4528) - @!P4 FMNMX R14, R15, c[0x0][0x16c], !PT ;
 Instr 284 @ 0x11c0 (4544) - @!P2 F2F.F16.F32 R13, R13 ;
 Instr 285 @ 0x11d0 (4560) - HADD2.F32 R15, R5.H0_H0, -RZ.H0_H0 ;
 Instr 286 @ 0x11e0 (4576) - @!P4 FMNMX R14, R14, c[0x0][0x170], PT ;
 Instr 287 @ 0x11f0 (4592) - IADD3 R16, R0, 0x200, RZ ;
 Instr 288 @ 0x1200 (4608) - @!P3 F2F.F16.F32 R12, R12 ;
 Instr 289 @ 0x1210 (4624) - @!P4 F2F.F16.F32 R14, R14 ;
 Instr 290 @ 0x1220 (4640) - @!P2 PRMT R7, R13, 0x7610, R7 ;
 Instr 291 @ 0x1230 (4656) - ISETP.GE.AND P2, PT, R16, R11, PT ;
 Instr 292 @ 0x1240 (4672) - IADD3 R16, R0, 0x380, RZ ;
 Instr 293 @ 0x1250 (4688) - @!P3 PRMT R9, R12, 0x7610, R9 ;
 Instr 294 @ 0x1260 (4704) - FSETP.GTU.OR P3, PT, |R15|, +INF , P1 ;
 Instr 295 @ 0x1270 (4720) - @!P4 PRMT R6, R14, 0x7610, R6 ;
 Instr 296 @ 0x1280 (4736) - FSETP.GTU.OR P4, PT, |R18|, +INF , P2 ;
 Instr 297 @ 0x1290 (4752) - IADD3 R14, R0, 0x280, RZ ;
 Instr 298 @ 0x12a0 (4768) - @!P3 FMNMX R12, R15, c[0x0][0x16c], !PT ;
 Instr 299 @ 0x12b0 (4784) - HADD2.F32 R15, R2.H0_H0, -RZ.H0_H0 ;
 Instr 300 @ 0x12c0 (4800) - @!P3 FMNMX R12, R12, c[0x0][0x170], PT ;
 Instr 301 @ 0x12d0 (4816) - @!P4 FMNMX R13, R18, c[0x0][0x16c], !PT ;
 Instr 302 @ 0x12e0 (4832) - @!P3 F2F.F16.F32 R12, R12 ;
 Instr 303 @ 0x12f0 (4848) - @!P4 FMNMX R13, R13, c[0x0][0x170], PT ;
 Instr 304 @ 0x1300 (4864) - @!P4 F2F.F16.F32 R13, R13 ;
 Instr 305 @ 0x1310 (4880) - @!P3 PRMT R5, R12, 0x7610, R5 ;
 Instr 306 @ 0x1320 (4896) - ISETP.GE.AND P3, PT, R14, R11, PT ;
 Instr 307 @ 0x1330 (4912) - IADD3 R12, R0, 0x300, RZ ;
 Instr 308 @ 0x1340 (4928) - @!P4 PRMT R4, R13, 0x7610, R4 ;
 Instr 309 @ 0x1350 (4944) - FSETP.GTU.OR P4, PT, |R15|, +INF , P3 ;
 Instr 310 @ 0x1360 (4960) - HADD2.F32 R13, R8.H0_H0, -RZ.H0_H0 ;
 Instr 311 @ 0x1370 (4976) - @!P4 FMNMX R14, R15, c[0x0][0x16c], !PT ;
 Instr 312 @ 0x1380 (4992) - @!P4 FMNMX R14, R14, c[0x0][0x170], PT ;
 Instr 313 @ 0x1390 (5008) - @!P4 F2F.F16.F32 R14, R14 ;
 Instr 314 @ 0x13a0 (5024) - @!P4 PRMT R2, R14, 0x7610, R2 ;
 Instr 315 @ 0x13b0 (5040) - ISETP.GE.AND P4, PT, R12, R11, PT ;
 Instr 316 @ 0x13c0 (5056) - FSETP.GTU.OR P5, PT, |R13|, +INF , P4 ;
 Instr 317 @ 0x13d0 (5072) - @!P5 FMNMX R12, R13, c[0x0][0x16c], !PT ;
 Instr 318 @ 0x13e0 (5088) - HADD2.F32 R13, R10.H0_H0, -RZ.H0_H0 ;
 Instr 319 @ 0x13f0 (5104) - @!P5 FMNMX R12, R12, c[0x0][0x170], PT ;
 Instr 320 @ 0x1400 (5120) - @!P5 F2F.F16.F32 R12, R12 ;
 Instr 321 @ 0x1410 (5136) - @!P5 PRMT R8, R12, 0x7610, R8 ;
 Instr 322 @ 0x1420 (5152) - ISETP.GE.AND P5, PT, R16, R11, PT ;
 Instr 323 @ 0x1430 (5168) - FSETP.GTU.OR P6, PT, |R13|, +INF , P5 ;
 Instr 324 @ 0x1440 (5184) - @P6 BRA 0x1820 ;
Basic block id 23 - num instructions 5
 Instr 325 @ 0x1450 (5200) - FMNMX R10, R13, c[0x0][0x16c], !PT ;
 Instr 326 @ 0x1460 (5216) - FMNMX R12, R10, c[0x0][0x170], PT ;
 Instr 327 @ 0x1470 (5232) - F2F.F16.F32 R12, R12 ;
 Instr 328 @ 0x1480 (5248) - PRMT R10, R12, 0x7610, R10 ;
 Instr 329 @ 0x1490 (5264) - BRA 0x1820 ;
Basic block id 24 - num instructions 56
 Instr 330 @ 0x14a0 (5280) - IADD3 R14, R0.reuse, 0x80, RZ ;
 Instr 331 @ 0x14b0 (5296) - HADD2.F32 R13, R7.H0_H0, -RZ.H0_H0 ;
 Instr 332 @ 0x14c0 (5312) - ISETP.GE.AND P6, PT, R0, R11.reuse, PT ;
 Instr 333 @ 0x14d0 (5328) - HADD2.F32 R12, R9.H0_H0, -RZ.H0_H0 ;
 Instr 334 @ 0x14e0 (5344) - ISETP.GE.AND P0, PT, R14, R11, PT ;
 Instr 335 @ 0x14f0 (5360) - HADD2.F32 R15, R6.H0_H0, -RZ.H0_H0 ;
 Instr 336 @ 0x1500 (5376) - IADD3 R14, R0, 0x100, RZ ;
 Instr 337 @ 0x1510 (5392) - HADD2.F32 R18, R4.H0_H0, -RZ.H0_H0 ;
 Instr 338 @ 0x1520 (5408) - P2R R17, PR, RZ, 0x1 ;
 Instr 339 @ 0x1530 (5424) - FSETP.GTU.OR P2, PT, |R13|, +INF , P0 ;
 Instr 340 @ 0x1540 (5440) - FSETP.GTU.OR P3, PT, |R12|, +INF , P6 ;
 Instr 341 @ 0x1550 (5456) - ISETP.GE.AND P0, PT, R14, R11.reuse, PT ;
 Instr 342 @ 0x1560 (5472) - IADD3 R16, R0, 0x180, RZ ;
 Instr 343 @ 0x1570 (5488) - FSETP.GTU.OR P4, PT, |R15|, +INF , P0 ;
 Instr 344 @ 0x1580 (5504) - ISETP.GE.AND P1, PT, R16, R11, PT ;
 Instr 345 @ 0x1590 (5520) - @!P2 FMNMX R13, R13, c[0x0][0x16c], !PT ;
 Instr 346 @ 0x15a0 (5536) - @!P3 FMNMX R12, R12, c[0x0][0x16c], !PT ;
 Instr 347 @ 0x15b0 (5552) - IADD3 R16, R0, 0x200, RZ ;
 Instr 348 @ 0x15c0 (5568) - @!P2 F2F.F16.F32 R13, R13 ;
 Instr 349 @ 0x15d0 (5584) - @!P4 FMNMX R14, R15, c[0x0][0x16c], !PT ;
 Instr 350 @ 0x15e0 (5600) - HADD2.F32 R15, R5.H0_H0, -RZ.H0_H0 ;
 Instr 351 @ 0x15f0 (5616) - @!P3 F2F.F16.F32 R12, R12 ;
 Instr 352 @ 0x1600 (5632) - @!P4 F2F.F16.F32 R14, R14 ;
 Instr 353 @ 0x1610 (5648) - @!P2 PRMT R7, R13, 0x7610, R7 ;
 Instr 354 @ 0x1620 (5664) - ISETP.GE.AND P2, PT, R16, R11, PT ;
 Instr 355 @ 0x1630 (5680) - HADD2.F32 R16, R2.H0_H0, -RZ.H0_H0 ;
 Instr 356 @ 0x1640 (5696) - @!P3 PRMT R9, R12, 0x7610, R9 ;
 Instr 357 @ 0x1650 (5712) - FSETP.GTU.OR P3, PT, |R15|, +INF , P1 ;
 Instr 358 @ 0x1660 (5728) - @!P4 PRMT R6, R14, 0x7610, R6 ;
 Instr 359 @ 0x1670 (5744) - FSETP.GTU.OR P4, PT, |R18|, +INF , P2 ;
 Instr 360 @ 0x1680 (5760) - IADD3 R14, R0, 0x280, RZ ;
 Instr 361 @ 0x1690 (5776) - @!P3 FMNMX R15, R15, c[0x0][0x16c], !PT ;
 Instr 362 @ 0x16a0 (5792) - @!P3 F2F.F16.F32 R12, R15 ;
 Instr 363 @ 0x16b0 (5808) - @!P4 FMNMX R13, R18, c[0x0][0x16c], !PT ;
 Instr 364 @ 0x16c0 (5824) - @!P4 F2F.F16.F32 R13, R13 ;
 Instr 365 @ 0x16d0 (5840) - HADD2.F32 R15, R8.H0_H0, -RZ.H0_H0 ;
 Instr 366 @ 0x16e0 (5856) - @!P3 PRMT R5, R12, 0x7610, R5 ;
 Instr 367 @ 0x16f0 (5872) - ISETP.GE.AND P3, PT, R14, R11, PT ;
 Instr 368 @ 0x1700 (5888) - IADD3 R14, R0, 0x300, RZ ;
 Instr 369 @ 0x1710 (5904) - @!P4 PRMT R4, R13, 0x7610, R4 ;
 Instr 370 @ 0x1720 (5920) - FSETP.GTU.OR P4, PT, |R16|, +INF , P3 ;
 Instr 371 @ 0x1730 (5936) - HADD2.F32 R13, R10.H0_H0, -RZ.H0_H0 ;
 Instr 372 @ 0x1740 (5952) - @!P4 FMNMX R16, R16, c[0x0][0x16c], !PT ;
 Instr 373 @ 0x1750 (5968) - @!P4 F2F.F16.F32 R12, R16 ;
 Instr 374 @ 0x1760 (5984) - @!P4 PRMT R2, R12, 0x7610, R2 ;
 Instr 375 @ 0x1770 (6000) - ISETP.GE.AND P4, PT, R14, R11, PT ;
 Instr 376 @ 0x1780 (6016) - FSETP.GTU.OR P5, PT, |R15|, +INF , P4 ;
 Instr 377 @ 0x1790 (6032) - @!P5 FMNMX R15, R15, c[0x0][0x16c], !PT ;
 Instr 378 @ 0x17a0 (6048) - @!P5 F2F.F16.F32 R12, R15 ;
 Instr 379 @ 0x17b0 (6064) - @!P5 PRMT R8, R12, 0x7610, R8 ;
 Instr 380 @ 0x17c0 (6080) - IADD3 R12, R0, 0x380, RZ ;
 Instr 381 @ 0x17d0 (6096) - ISETP.GE.AND P5, PT, R12, R11, PT ;
 Instr 382 @ 0x17e0 (6112) - FSETP.GTU.OR P6, PT, |R13|, +INF , P5 ;
 Instr 383 @ 0x17f0 (6128) - @!P6 FMNMX R12, R13, c[0x0][0x16c], !PT ;
 Instr 384 @ 0x1800 (6144) - @!P6 F2F.F16.F32 R12, R12 ;
 Instr 385 @ 0x1810 (6160) - @!P6 PRMT R10, R12, 0x7610, R10 ;
Basic block id 25 - num instructions 3
 Instr 386 @ 0x1820 (6176) - BSYNC B0 ;
 Instr 387 @ 0x1830 (6192) - ISETP.GE.AND P6, PT, R0, R11, PT ;
 Instr 388 @ 0x1840 (6208) - @P6 EXIT ;
Basic block id 26 - num instructions 6
 Instr 389 @ 0x1850 (6224) - IMAD.IADD R12, R3, 0x1, R0 ;
 Instr 390 @ 0x1860 (6240) - ISETP.NE.AND P6, PT, R17, RZ, PT ;
 Instr 391 @ 0x1870 (6256) - IMAD.MOV.U32 R13, RZ, RZ, 0x2 ;
 Instr 392 @ 0x1880 (6272) - IMAD.WIDE.U32 R12, R12, R13, c[0x0][0x180] ;
 Instr 393 @ 0x1890 (6288) - STG.E.U16.SYS [R12], R9 ;
 Instr 394 @ 0x18a0 (6304) - @P6 EXIT ;
Basic block id 27 - num instructions 2
 Instr 395 @ 0x18b0 (6320) - STG.E.U16.SYS [R12+0x100], R7 ;
 Instr 396 @ 0x18c0 (6336) - @P0 EXIT ;
Basic block id 28 - num instructions 2
 Instr 397 @ 0x18d0 (6352) - STG.E.U16.SYS [R12+0x200], R6 ;
 Instr 398 @ 0x18e0 (6368) - @P1 EXIT ;
Basic block id 29 - num instructions 2
 Instr 399 @ 0x18f0 (6384) - STG.E.U16.SYS [R12+0x300], R5 ;
 Instr 400 @ 0x1900 (6400) - @P2 EXIT ;
Basic block id 30 - num instructions 2
 Instr 401 @ 0x1910 (6416) - STG.E.U16.SYS [R12+0x400], R4 ;
 Instr 402 @ 0x1920 (6432) - @P3 EXIT ;
Basic block id 31 - num instructions 2
 Instr 403 @ 0x1930 (6448) - STG.E.U16.SYS [R12+0x500], R2 ;
 Instr 404 @ 0x1940 (6464) - @P4 EXIT ;
Basic block id 32 - num instructions 2
 Instr 405 @ 0x1950 (6480) - STG.E.U16.SYS [R12+0x600], R8 ;
 Instr 406 @ 0x1960 (6496) - @P5 EXIT ;
Basic block id 33 - num instructions 2
 Instr 407 @ 0x1970 (6512) - STG.E.U16.SYS [R12+0x700], R10 ;
 Instr 408 @ 0x1980 (6528) - EXIT ;
Basic block id 34 - num instructions 1
 Instr 409 @ 0x1990 (6544) - BRA 0x1990;
inspecting void at::native::vectorized_elementwise_kernel<8, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul> >(int, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#8}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul>) - number basic blocks 35
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R2, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 15 @ 0xf0 (240) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x168] ;
Inject count_instr before - Instr 18 @ 0x120 (288) - HADD2.F32 R8, R4.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 56 @ 0x380 (896) - FMNMX R15, R15, c[0x0][0x16c], PT ;
Inject count_instr before - Instr 60 @ 0x3c0 (960) - HADD2.F32 R8, R4.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 105 @ 0x690 (1680) - FMNMX R8, R15, c[0x0][0x16c], !PT ;
Inject count_instr before - Instr 110 @ 0x6e0 (1760) - HADD2.F32 R8, R4.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 150 @ 0x960 (2400) - BSYNC B0 ;
Inject count_instr before - Instr 155 @ 0x9b0 (2480) - ISETP.GE.AND P1, PT, R0, R11, PT ;
Inject count_instr before - Instr 168 @ 0xa80 (2688) - IMAD.IADD R12, R3, 0x1, R0 ;
Inject count_instr before - Instr 175 @ 0xaf0 (2800) - LDG.E.U16.SYS R7, [R12+0x100] ;
Inject count_instr before - Instr 179 @ 0xb30 (2864) - LDG.E.U16.SYS R6, [R12+0x200] ;
Inject count_instr before - Instr 183 @ 0xb70 (2928) - LDG.E.U16.SYS R5, [R12+0x300] ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - LDG.E.U16.SYS R4, [R12+0x400] ;
Inject count_instr before - Instr 191 @ 0xbf0 (3056) - LDG.E.U16.SYS R2, [R12+0x500] ;
Inject count_instr before - Instr 195 @ 0xc30 (3120) - IADD3 R8, R0, 0x380, RZ ;
Inject count_instr before - Instr 199 @ 0xc70 (3184) - BSYNC B0 ;
Inject count_instr before - Instr 204 @ 0xcc0 (3264) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
Inject count_instr before - Instr 207 @ 0xcf0 (3312) - IADD3 R14, R0.reuse, 0x80, RZ ;
Inject count_instr before - Instr 249 @ 0xf90 (3984) - @!P4 F2F.F16.F32 R12, R12 ;
Inject count_instr before - Instr 260 @ 0x1040 (4160) - FMNMX R14, R14, c[0x0][0x16c], PT ;
Inject count_instr before - Instr 264 @ 0x1080 (4224) - IADD3 R14, R0.reuse, 0x80, RZ ;
Inject count_instr before - Instr 325 @ 0x1450 (5200) - FMNMX R10, R13, c[0x0][0x16c], !PT ;
Inject count_instr before - Instr 330 @ 0x14a0 (5280) - IADD3 R14, R0.reuse, 0x80, RZ ;
Inject count_instr before - Instr 386 @ 0x1820 (6176) - BSYNC B0 ;
Inject count_instr before - Instr 389 @ 0x1850 (6224) - IMAD.IADD R12, R3, 0x1, R0 ;
Inject count_instr before - Instr 395 @ 0x18b0 (6320) - STG.E.U16.SYS [R12+0x100], R7 ;
Inject count_instr before - Instr 397 @ 0x18d0 (6352) - STG.E.U16.SYS [R12+0x200], R6 ;
Inject count_instr before - Instr 399 @ 0x18f0 (6384) - STG.E.U16.SYS [R12+0x300], R5 ;
Inject count_instr before - Instr 401 @ 0x1910 (6416) - STG.E.U16.SYS [R12+0x400], R4 ;
Inject count_instr before - Instr 403 @ 0x1930 (6448) - STG.E.U16.SYS [R12+0x500], R2 ;
Inject count_instr before - Instr 405 @ 0x1950 (6480) - STG.E.U16.SYS [R12+0x600], R8 ;
Inject count_instr before - Instr 407 @ 0x1970 (6512) - STG.E.U16.SYS [R12+0x700], R10 ;
Inject count_instr before - Instr 409 @ 0x1990 (6544) - BRA 0x1990;
kernel 110 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 784,  kernel instructions 188160, total instructions 7545230
Function void at::native::(anonymous namespace)::max_pool_forward_nchw<c10::Half>(int, c10::Half const*, long, long, long, int, int, int, int, int, int, int, int, int, int, c10::Half*, long*)
Basic block id 0 - num instructions 10
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R2, SR_TID.X ;
 Instr 2 @ 0x20 (32) - IMAD.MOV.U32 R3, RZ, RZ, RZ ;
 Instr 3 @ 0x30 (48) - ULDC UR8, c[0x0][0x160] ;
 Instr 4 @ 0x40 (64) - S2R R5, SR_CTAID.X ;
 Instr 5 @ 0x50 (80) - USHF.R.S32.HI UR8, URZ, 0x1f, UR8 ;
 Instr 6 @ 0x60 (96) - IMAD.WIDE.U32 R2, R5, c[0x0][0x0], R2 ;
 Instr 7 @ 0x70 (112) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x160], PT ;
 Instr 8 @ 0x80 (128) - ISETP.GE.AND.EX P0, PT, R3, UR8, PT, P0 ;
 Instr 9 @ 0x90 (144) - @P0 EXIT ;
Basic block id 1 - num instructions 12
 Instr 10 @ 0xa0 (160) - IMAD.MOV R4, RZ, RZ, -c[0x0][0x1a8] ;
 Instr 11 @ 0xb0 (176) - UMOV UR5, 0x1 ;
 Instr 12 @ 0xc0 (192) - IMAD.MOV.U32 R0, RZ, RZ, R2 ;
 Instr 13 @ 0xd0 (208) - ULDC.64 UR10, c[0x0][0x190] ;
 Instr 14 @ 0xe0 (224) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x0] ;
 Instr 15 @ 0xf0 (240) - UIADD3 UR4, -UR5, UR10, URZ ;
 Instr 16 @ 0x100 (256) - IADD3 R2, R4, -c[0x0][0x1a0], RZ ;
 Instr 17 @ 0x110 (272) - UIADD3 UR5, -UR5, UR11, URZ ;
 Instr 18 @ 0x120 (288) - UMOV UR7, 0x1 ;
 Instr 19 @ 0x130 (304) - ULDC.64 UR10, c[0x0][0x1a8] ;
 Instr 20 @ 0x140 (320) - UIMAD UR6, UR4, UR10, UR7 ;
 Instr 21 @ 0x150 (336) - UIMAD UR7, UR5, UR11, UR7 ;
Basic block id 2 - num instructions 23
 Instr 22 @ 0x160 (352) - IABS R10, c[0x0][0x18c] ;
 Instr 23 @ 0x170 (368) - BMOV.32.CLEAR RZ, B0 ;
 Instr 24 @ 0x180 (384) - IABS R9, c[0x0][0x188] ;
 Instr 25 @ 0x190 (400) - BSSY B0, 0x660 ;
 Instr 26 @ 0x1a0 (416) - I2F.RP R6, R10 ;
 Instr 27 @ 0x1b0 (432) - I2F.RP R8, R9 ;
 Instr 28 @ 0x1c0 (448) - MUFU.RCP R6, R6 ;
 Instr 29 @ 0x1d0 (464) - MUFU.RCP R8, R8 ;
 Instr 30 @ 0x1e0 (480) - IADD3 R4, R6, 0xffffffe, RZ ;
 Instr 31 @ 0x1f0 (496) - IABS R6, R0 ;
 Instr 32 @ 0x200 (512) - F2I.FTZ.U32.TRUNC.NTZ R5, R4 ;
 Instr 33 @ 0x210 (528) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 34 @ 0x220 (544) - IMAD.MOV R7, RZ, RZ, -R5 ;
 Instr 35 @ 0x230 (560) - IMAD R7, R7, R10, RZ ;
 Instr 36 @ 0x240 (576) - IMAD.HI.U32 R5, R5, R7, R4 ;
 Instr 37 @ 0x250 (592) - IMAD.HI.U32 R4, R5, R6, RZ ;
 Instr 38 @ 0x260 (608) - IMAD.MOV R5, RZ, RZ, -R4 ;
 Instr 39 @ 0x270 (624) - IMAD R5, R10, R5, R6 ;
 Instr 40 @ 0x280 (640) - IADD3 R6, R8, 0xffffffe, RZ ;
 Instr 41 @ 0x290 (656) - ISETP.GT.U32.AND P1, PT, R10, R5, PT ;
 Instr 42 @ 0x2a0 (672) - F2I.FTZ.U32.TRUNC.NTZ R7, R6 ;
 Instr 43 @ 0x2b0 (688) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 44 @ 0x2c0 (704) - @!P1 IADD3 R5, R5, -R10.reuse, RZ ;
Basic block id 3 - num instructions 30
 Instr 45 @ 0x2d0 (720) - @!P1 IADD3 R4, R4, 0x1, RZ ;
 Instr 46 @ 0x2e0 (736) - ISETP.GE.U32.AND P0, PT, R5, R10, PT ;
 Instr 47 @ 0x2f0 (752) - LOP3.LUT R5, R0, c[0x0][0x18c], RZ, 0x3c, !PT ;
 Instr 48 @ 0x300 (768) - IMAD.MOV R8, RZ, RZ, -R7 ;
 Instr 49 @ 0x310 (784) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x18c], PT ;
 Instr 50 @ 0x320 (800) - ISETP.GE.AND P2, PT, R5, RZ, PT ;
 Instr 51 @ 0x330 (816) - IMAD R5, R8, R9, RZ ;
 Instr 52 @ 0x340 (832) - IMAD.HI.U32 R6, R7, R5, R6 ;
 Instr 53 @ 0x350 (848) - @P0 IADD3 R4, R4, 0x1, RZ ;
 Instr 54 @ 0x360 (864) - @!P2 IMAD.MOV R4, RZ, RZ, -R4 ;
 Instr 55 @ 0x370 (880) - @!P1 LOP3.LUT R4, RZ, c[0x0][0x18c], RZ, 0x33, !PT ;
 Instr 56 @ 0x380 (896) - IABS R8, R4 ;
 Instr 57 @ 0x390 (912) - IMAD.MOV.U32 R7, RZ, RZ, R8 ;
 Instr 58 @ 0x3a0 (928) - IMAD.HI.U32 R5, R6, R7, RZ ;
 Instr 59 @ 0x3b0 (944) - IMAD.MOV R6, RZ, RZ, -R5 ;
 Instr 60 @ 0x3c0 (960) - IMAD R6, R9, R6, R7 ;
 Instr 61 @ 0x3d0 (976) - ISETP.GT.U32.AND P1, PT, R9, R6, PT ;
 Instr 62 @ 0x3e0 (992) - @!P1 IMAD.IADD R6, R6, 0x1, -R9 ;
 Instr 63 @ 0x3f0 (1008) - @!P1 IADD3 R5, R5, 0x1, RZ ;
 Instr 64 @ 0x400 (1024) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x188], PT ;
 Instr 65 @ 0x410 (1040) - ISETP.GE.U32.AND P0, PT, R6, R9, PT ;
 Instr 66 @ 0x420 (1056) - LOP3.LUT R6, R4, c[0x0][0x188], RZ, 0x3c, !PT ;
 Instr 67 @ 0x430 (1072) - ISETP.GE.AND P2, PT, R6, RZ, PT ;
 Instr 68 @ 0x440 (1088) - @P0 IADD3 R5, R5, 0x1, RZ ;
 Instr 69 @ 0x450 (1104) - @!P2 IMAD.MOV R5, RZ, RZ, -R5 ;
 Instr 70 @ 0x460 (1120) - @!P1 LOP3.LUT R5, RZ, c[0x0][0x188], RZ, 0x33, !PT ;
 Instr 71 @ 0x470 (1136) - SHF.R.S32.HI R7, RZ, 0x1f, R5 ;
 Instr 72 @ 0x480 (1152) - LOP3.LUT R6, R7, c[0x0][0x174], RZ, 0xfc, !PT ;
 Instr 73 @ 0x490 (1168) - ISETP.NE.U32.AND P0, PT, R6, RZ, PT ;
 Instr 74 @ 0x4a0 (1184) - @!P0 BRA 0x510 ;
Basic block id 4 - num instructions 2
 Instr 75 @ 0x4b0 (1200) - MOV R6, 0x4d0 ;
 Instr 76 @ 0x4c0 (1216) - CALL.REL.NOINC 0xee0 ;
Basic block id 5 - num instructions 4
 Instr 77 @ 0x4d0 (1232) - IADD3 R10, -R8, RZ, RZ ;
 Instr 78 @ 0x4e0 (1248) - IMAD.MOV.U32 R6, RZ, RZ, R8 ;
 Instr 79 @ 0x4f0 (1264) - IMAD R8, R10, c[0x0][0x170], R5 ;
 Instr 80 @ 0x500 (1280) - BRA 0x650 ;
Basic block id 6 - num instructions 20
 Instr 81 @ 0x510 (1296) - I2F.U32.RP R8, c[0x0][0x170] ;
 Instr 82 @ 0x520 (1312) - ISETP.NE.U32.AND P2, PT, RZ, c[0x0][0x170], PT ;
 Instr 83 @ 0x530 (1328) - MUFU.RCP R8, R8 ;
 Instr 84 @ 0x540 (1344) - IADD3 R6, R8, 0xffffffe, RZ ;
 Instr 85 @ 0x550 (1360) - F2I.FTZ.U32.TRUNC.NTZ R7, R6 ;
 Instr 86 @ 0x560 (1376) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 87 @ 0x570 (1392) - IMAD.MOV R9, RZ, RZ, -R7 ;
 Instr 88 @ 0x580 (1408) - IMAD R9, R9, c[0x0][0x170], RZ ;
 Instr 89 @ 0x590 (1424) - IMAD.HI.U32 R10, R7, R9, R6 ;
 Instr 90 @ 0x5a0 (1440) - IMAD.HI.U32 R6, R10, R5, RZ ;
 Instr 91 @ 0x5b0 (1456) - IMAD.MOV R10, RZ, RZ, -R6 ;
 Instr 92 @ 0x5c0 (1472) - IMAD R7, R10, c[0x0][0x170], R5 ;
 Instr 93 @ 0x5d0 (1488) - ISETP.GE.U32.AND P0, PT, R7, c[0x0][0x170], PT ;
 Instr 94 @ 0x5e0 (1504) - @P0 IADD3 R7, R7, -c[0x0][0x170], RZ ;
 Instr 95 @ 0x5f0 (1520) - @P0 IADD3 R6, R6, 0x1, RZ ;
 Instr 96 @ 0x600 (1536) - ISETP.GE.U32.AND P1, PT, R7, c[0x0][0x170], PT ;
 Instr 97 @ 0x610 (1552) - @P1 IADD3 R6, R6, 0x1, RZ ;
 Instr 98 @ 0x620 (1568) - @!P2 LOP3.LUT R6, RZ, c[0x0][0x170], RZ, 0x33, !PT ;
 Instr 99 @ 0x630 (1584) - IMAD.MOV R8, RZ, RZ, -R6 ;
 Instr 100 @ 0x640 (1600) - IMAD R8, R8, c[0x0][0x170], R5 ;
Basic block id 7 - num instructions 59
 Instr 101 @ 0x650 (1616) - BSYNC B0 ;
 Instr 102 @ 0x660 (1632) - IABS R5, c[0x0][0x188] ;
 Instr 103 @ 0x670 (1648) - BMOV.32.CLEAR RZ, B0 ;
 Instr 104 @ 0x680 (1664) - IABS R15, c[0x0][0x18c] ;
 Instr 105 @ 0x690 (1680) - BSSY B0, 0xa70 ;
 Instr 106 @ 0x6a0 (1696) - IABS R17, R4 ;
 Instr 107 @ 0x6b0 (1712) - I2F.RP R7, R5 ;
 Instr 108 @ 0x6c0 (1728) - I2F.RP R16, R15 ;
 Instr 109 @ 0x6d0 (1744) - MUFU.RCP R7, R7 ;
 Instr 110 @ 0x6e0 (1760) - MUFU.RCP R16, R16 ;
 Instr 111 @ 0x6f0 (1776) - IADD3 R10, R7, 0xffffffe, RZ ;
 Instr 112 @ 0x700 (1792) - F2I.FTZ.U32.TRUNC.NTZ R11, R10 ;
 Instr 113 @ 0x710 (1808) - IADD3 R12, R16, 0xffffffe, RZ ;
 Instr 114 @ 0x720 (1824) - F2I.FTZ.U32.TRUNC.NTZ R13, R12 ;
 Instr 115 @ 0x730 (1840) - MOV R10, RZ ;
 Instr 116 @ 0x740 (1856) - IMAD.MOV R18, RZ, RZ, -R11 ;
 Instr 117 @ 0x750 (1872) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 118 @ 0x760 (1888) - IMAD R9, R18, R5, RZ ;
 Instr 119 @ 0x770 (1904) - IMAD.MOV R20, RZ, RZ, -R13 ;
 Instr 120 @ 0x780 (1920) - IMAD.HI.U32 R9, R11, R9, R10 ;
 Instr 121 @ 0x790 (1936) - IABS R11, R0 ;
 Instr 122 @ 0x7a0 (1952) - IMAD R7, R20, R15, RZ ;
 Instr 123 @ 0x7b0 (1968) - IMAD.MOV.U32 R10, RZ, RZ, R17 ;
 Instr 124 @ 0x7c0 (1984) - IMAD.HI.U32 R7, R13, R7, R12 ;
 Instr 125 @ 0x7d0 (2000) - IMAD.MOV.U32 R12, RZ, RZ, R11 ;
 Instr 126 @ 0x7e0 (2016) - IMAD.HI.U32 R9, R9, R10, RZ ;
 Instr 127 @ 0x7f0 (2032) - IMAD.HI.U32 R7, R7, R12, RZ ;
 Instr 128 @ 0x800 (2048) - IMAD.MOV R9, RZ, RZ, -R9 ;
 Instr 129 @ 0x810 (2064) - IMAD.MOV R7, RZ, RZ, -R7 ;
 Instr 130 @ 0x820 (2080) - IMAD R9, R5, R9, R10 ;
 Instr 131 @ 0x830 (2096) - IMAD R12, R15, R7, R12 ;
 Instr 132 @ 0x840 (2112) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x19c] ;
 Instr 133 @ 0x850 (2128) - ISETP.GT.U32.AND P0, PT, R5, R9, PT ;
 Instr 134 @ 0x860 (2144) - ISETP.GT.U32.AND P1, PT, R15, R12, PT ;
 Instr 135 @ 0x870 (2160) - @!P0 IMAD.IADD R9, R9, 0x1, -R5 ;
 Instr 136 @ 0x880 (2176) - ISETP.GE.AND P0, PT, R0, RZ, PT ;
 Instr 137 @ 0x890 (2192) - @!P1 IMAD.IADD R12, R12, 0x1, -R15 ;
 Instr 138 @ 0x8a0 (2208) - ISETP.GE.AND P1, PT, R4, RZ, PT ;
 Instr 139 @ 0x8b0 (2224) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x198] ;
 Instr 140 @ 0x8c0 (2240) - ISETP.GT.U32.AND P2, PT, R5, R9, PT ;
 Instr 141 @ 0x8d0 (2256) - ISETP.GT.U32.AND P3, PT, R15, R12, PT ;
 Instr 142 @ 0x8e0 (2272) - @!P2 IADD3 R9, R9, -R5, RZ ;
 Instr 143 @ 0x8f0 (2288) - @!P3 IMAD.IADD R12, R12, 0x1, -R15 ;
 Instr 144 @ 0x900 (2304) - ISETP.NE.AND P2, PT, RZ, c[0x0][0x188], PT ;
 Instr 145 @ 0x910 (2320) - ISETP.NE.AND P3, PT, RZ, c[0x0][0x18c], PT ;
 Instr 146 @ 0x920 (2336) - IMAD.MOV.U32 R5, RZ, RZ, R12 ;
 Instr 147 @ 0x930 (2352) - MOV R12, c[0x0][0x180] ;
 Instr 148 @ 0x940 (2368) - @!P1 IMAD.MOV R9, RZ, RZ, -R9 ;
 Instr 149 @ 0x950 (2384) - @!P0 IMAD.MOV R5, RZ, RZ, -R5 ;
 Instr 150 @ 0x960 (2400) - @!P2 LOP3.LUT R9, RZ, c[0x0][0x188], RZ, 0x33, !PT ;
 Instr 151 @ 0x970 (2416) - @!P3 LOP3.LUT R5, RZ, c[0x0][0x18c], RZ, 0x33, !PT ;
 Instr 152 @ 0x980 (2432) - IMAD R4, R9, R4, -c[0x0][0x1a0] ;
 Instr 153 @ 0x990 (2448) - IMAD R10, R5, R10, -c[0x0][0x1a4] ;
 Instr 154 @ 0x9a0 (2464) - IMAD R9, R9, c[0x0][0x198], R2 ;
 Instr 155 @ 0x9b0 (2480) - IADD3 R5, R4, UR6, RZ ;
 Instr 156 @ 0x9c0 (2496) - IADD3 R7, R10, UR7, RZ ;
 Instr 157 @ 0x9d0 (2512) - IMAD R11, R9, c[0x0][0x180], RZ ;
 Instr 158 @ 0x9e0 (2528) - IMNMX R18, R5, c[0x0][0x178], PT ;
 Instr 159 @ 0x9f0 (2544) - IMNMX R19, R7, c[0x0][0x180], PT ;
Basic block id 8 - num instructions 6
 Instr 160 @ 0xa00 (2560) - ISETP.GE.AND P0, PT, R4.reuse, RZ, PT ;
 Instr 161 @ 0xa10 (2576) - IMAD.MOV.U32 R13, RZ, RZ, R4 ;
 Instr 162 @ 0xa20 (2592) - IADD3 R5, R4, c[0x0][0x1a8], RZ ;
 Instr 163 @ 0xa30 (2608) - IMAD R11, R12, c[0x0][0x1a8], R11 ;
 Instr 164 @ 0xa40 (2624) - IMAD.MOV.U32 R4, RZ, RZ, R5 ;
 Instr 165 @ 0xa50 (2640) - @!P0 BRA 0xa00 ;
Basic block id 9 - num instructions 3
 Instr 166 @ 0xa60 (2656) - BSYNC B0 ;
 Instr 167 @ 0xa70 (2672) - BMOV.32.CLEAR RZ, B0 ;
 Instr 168 @ 0xa80 (2688) - BSSY B0, 0xaf0 ;
Basic block id 10 - num instructions 5
 Instr 169 @ 0xa90 (2704) - ISETP.GE.AND P0, PT, R10.reuse, RZ, PT ;
 Instr 170 @ 0xaa0 (2720) - IMAD.MOV.U32 R20, RZ, RZ, R10 ;
 Instr 171 @ 0xab0 (2736) - IADD3 R4, R10, c[0x0][0x1ac], RZ ;
 Instr 172 @ 0xac0 (2752) - IMAD.MOV.U32 R10, RZ, RZ, R4 ;
 Instr 173 @ 0xad0 (2768) - @!P0 BRA 0xa90 ;
Basic block id 11 - num instructions 12
 Instr 174 @ 0xae0 (2784) - BSYNC B0 ;
 Instr 175 @ 0xaf0 (2800) - ISETP.GE.AND P0, PT, R13, R18, PT ;
 Instr 176 @ 0xb00 (2816) - BMOV.32.CLEAR RZ, B0 ;
 Instr 177 @ 0xb10 (2832) - SHF.R.S32.HI R4, RZ, 0x1f, R6 ;
 Instr 178 @ 0xb20 (2848) - BSSY B0, 0xdd0 ;
 Instr 179 @ 0xb30 (2864) - SHF.R.S32.HI R9, RZ, 0x1f, R8.reuse ;
 Instr 180 @ 0xb40 (2880) - IMAD.MOV.U32 R12, RZ, RZ, 0xfc00 ;
 Instr 181 @ 0xb50 (2896) - IMAD R7, R4, c[0x0][0x170], RZ ;
 Instr 182 @ 0xb60 (2912) - IMAD.WIDE.U32 R4, R6, c[0x0][0x170], R8 ;
 Instr 183 @ 0xb70 (2928) - IMAD R7, R6, c[0x0][0x174], R7 ;
 Instr 184 @ 0xb80 (2944) - IMAD.IADD R15, R11, 0x1, R20 ;
 Instr 185 @ 0xb90 (2960) - @P0 BRA 0xdc0 ;
Basic block id 12 - num instructions 1
 Instr 186 @ 0xba0 (2976) - IADD3 R21, R5, R7, RZ ;
Basic block id 13 - num instructions 4
 Instr 187 @ 0xbb0 (2992) - ISETP.GE.AND P0, PT, R20, R19, PT ;
 Instr 188 @ 0xbc0 (3008) - BMOV.32.CLEAR RZ, B1 ;
 Instr 189 @ 0xbd0 (3024) - BSSY B1, 0xd90 ;
 Instr 190 @ 0xbe0 (3040) - @P0 BRA 0xd80 ;
Basic block id 14 - num instructions 9
 Instr 191 @ 0xbf0 (3056) - SHF.R.S32.HI R7, RZ, 0x1f, R13 ;
 Instr 192 @ 0xc00 (3072) - IMAD R9, R21, c[0x0][0x178], RZ ;
 Instr 193 @ 0xc10 (3088) - IMAD.MOV.U32 R6, RZ, RZ, R13 ;
 Instr 194 @ 0xc20 (3104) - IMAD R9, R4.reuse, c[0x0][0x17c], R9 ;
 Instr 195 @ 0xc30 (3120) - IMAD.WIDE.U32 R10, R4, c[0x0][0x178], R6 ;
 Instr 196 @ 0xc40 (3136) - IMAD.IADD R7, R11, 0x1, R9 ;
 Instr 197 @ 0xc50 (3152) - IMAD.MOV.U32 R16, RZ, RZ, R20 ;
 Instr 198 @ 0xc60 (3168) - IMAD R7, R7, c[0x0][0x180], RZ ;
 Instr 199 @ 0xc70 (3184) - IMAD R17, R10, c[0x0][0x184], R7 ;
Basic block id 15 - num instructions 16
 Instr 200 @ 0xc80 (3200) - SHF.R.S32.HI R7, RZ, 0x1f, R16.reuse ;
 Instr 201 @ 0xc90 (3216) - IMAD.MOV.U32 R6, RZ, RZ, R16 ;
 Instr 202 @ 0xca0 (3232) - IMAD.WIDE.U32 R6, R10, c[0x0][0x180], R6 ;
 Instr 203 @ 0xcb0 (3248) - IMAD.IADD R7, R7, 0x1, R17 ;
 Instr 204 @ 0xcc0 (3264) - LEA R8, P0, R6, c[0x0][0x168], 0x1 ;
 Instr 205 @ 0xcd0 (3280) - LEA.HI.X R9, R6, c[0x0][0x16c], R7, 0x1, P0 ;
 Instr 206 @ 0xce0 (3296) - LDG.E.U16.SYS R8, [R8] ;
 Instr 207 @ 0xcf0 (3312) - HADD2.F32 R7, R12.H0_H0, -RZ.H0_H0 ;
 Instr 208 @ 0xd00 (3328) - HADD2.F32 R6, R8.H0_H0, -RZ.H0_H0 ;
 Instr 209 @ 0xd10 (3344) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 210 @ 0xd20 (3360) - FSETP.LEU.AND P0, PT, R6, R7, !P0 ;
 Instr 211 @ 0xd30 (3376) - @!P0 IMAD R15, R13, c[0x0][0x180], R16 ;
 Instr 212 @ 0xd40 (3392) - IADD3 R16, R16, c[0x0][0x1ac], RZ ;
 Instr 213 @ 0xd50 (3408) - @!P0 PRMT R12, R8, 0x7610, R12 ;
 Instr 214 @ 0xd60 (3424) - ISETP.GE.AND P1, PT, R16, R19, PT ;
 Instr 215 @ 0xd70 (3440) - @!P1 BRA 0xc80 ;
Basic block id 16 - num instructions 4
 Instr 216 @ 0xd80 (3456) - BSYNC B1 ;
 Instr 217 @ 0xd90 (3472) - IADD3 R13, R13, c[0x0][0x1a8], RZ ;
 Instr 218 @ 0xda0 (3488) - ISETP.GE.AND P0, PT, R13, R18, PT ;
 Instr 219 @ 0xdb0 (3504) - @!P0 BRA 0xbb0 ;
Basic block id 17 - num instructions 17
 Instr 220 @ 0xdc0 (3520) - BSYNC B0 ;
 Instr 221 @ 0xdd0 (3536) - SHF.R.S64 R6, RZ, 0x1d, R0.reuse ;
 Instr 222 @ 0xde0 (3552) - IMAD R11, R14, c[0x0][0xc], RZ ;
 Instr 223 @ 0xdf0 (3568) - SHF.R.S64 R8, RZ, 0x1f, R0.reuse ;
 Instr 224 @ 0xe00 (3584) - IMAD.MOV.U32 R4, RZ, RZ, R15.reuse ;
 Instr 225 @ 0xe10 (3600) - IADD3 R6, P0, R6, c[0x0][0x1b8], RZ ;
 Instr 226 @ 0xe20 (3616) - ULDC.64 UR4, c[0x0][0x1b0] ;
 Instr 227 @ 0xe30 (3632) - SHF.R.S32.HI R9, RZ, 0x1f, R0 ;
 Instr 228 @ 0xe40 (3648) - SHF.R.S32.HI R5, RZ, 0x1f, R15 ;
 Instr 229 @ 0xe50 (3664) - LEA.HI.X.SX32 R7, R0, c[0x0][0x1bc], 0x3, P0 ;
 Instr 230 @ 0xe60 (3680) - IADD3 R0, P0, R11, R0, RZ ;
 Instr 231 @ 0xe70 (3696) - STG.E.U16.SYS [R8.64+UR4], R12 ;
 Instr 232 @ 0xe80 (3712) - IADD3.X R3, RZ, R3, RZ, P0, !PT ;
 Instr 233 @ 0xe90 (3728) - STG.E.64.SYS [R6], R4 ;
 Instr 234 @ 0xea0 (3744) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x160], PT ;
 Instr 235 @ 0xeb0 (3760) - ISETP.GE.AND.EX P0, PT, R3, UR8, PT, P0 ;
 Instr 236 @ 0xec0 (3776) - @!P0 BRA 0x160 ;
Basic block id 18 - num instructions 1
 Instr 237 @ 0xed0 (3792) - EXIT ;
Basic block id 19 - num instructions 77
 Instr 238 @ 0xee0 (3808) - ULDC.64 UR10, c[0x0][0x170] ;
 Instr 239 @ 0xef0 (3824) - ISETP.GE.AND P3, PT, R7, RZ, PT ;
 Instr 240 @ 0xf00 (3840) - UIADD3 UR4, UP1, URZ, -UR10, URZ ;
 Instr 241 @ 0xf10 (3856) - UISETP.LE.AND UP0, UPT, URZ, UR11, UPT ;
 Instr 242 @ 0xf20 (3872) - UIADD3.X UR5, URZ, ~UR11, URZ, UP1, !UPT ;
 Instr 243 @ 0xf30 (3888) - USEL UR4, UR4, UR10, !UP0 ;
 Instr 244 @ 0xf40 (3904) - USEL UR5, UR5, UR11, !UP0 ;
 Instr 245 @ 0xf50 (3920) - I2F.U64.RP R12, UR4 ;
 Instr 246 @ 0xf60 (3936) - MUFU.RCP R12, R12 ;
 Instr 247 @ 0xf70 (3952) - IADD3 R8, R12, 0x1ffffffe, RZ ;
 Instr 248 @ 0xf80 (3968) - IADD3 R12, P4, RZ, -R5, RZ ;
 Instr 249 @ 0xf90 (3984) - F2I.U64.TRUNC R8, R8 ;
 Instr 250 @ 0xfa0 (4000) - SEL R12, R12, R5, !P3 ;
 Instr 251 @ 0xfb0 (4016) - IMAD.X R16, RZ, RZ, ~R7, P4 ;
 Instr 252 @ 0xfc0 (4032) - SEL R16, R16, R7, !P3 ;
 Instr 253 @ 0xfd0 (4048) - LOP3.LUT R7, R7, c[0x0][0x174], RZ, 0x3c, !PT ;
 Instr 254 @ 0xfe0 (4064) - IMAD.WIDE.U32 R10, R8, UR4, RZ ;
 Instr 255 @ 0xff0 (4080) - IMAD R11, R8, UR5, R11 ;
 Instr 256 @ 0x1000 (4096) - IADD3 R13, P0, RZ, -R10, RZ ;
 Instr 257 @ 0x1010 (4112) - IMAD R11, R9, UR4, R11 ;
 Instr 258 @ 0x1020 (4128) - IMAD.HI.U32 R10, R8, R13, RZ ;
 Instr 259 @ 0x1030 (4144) - IMAD.X R15, RZ, RZ, ~R11, P0 ;
 Instr 260 @ 0x1040 (4160) - IMAD.MOV.U32 R11, RZ, RZ, R8 ;
 Instr 261 @ 0x1050 (4176) - IMAD R17, R9, R15.reuse, RZ ;
 Instr 262 @ 0x1060 (4192) - IMAD.WIDE.U32 R10, P0, R8, R15, R10 ;
 Instr 263 @ 0x1070 (4208) - IMAD.HI.U32 R15, R9, R15, RZ ;
 Instr 264 @ 0x1080 (4224) - IMAD.HI.U32 R10, P1, R9, R13, R10 ;
 Instr 265 @ 0x1090 (4240) - IADD3 R11, P2, R17, R10, RZ ;
 Instr 266 @ 0x10a0 (4256) - IMAD.X R10, R15, 0x1, R9, P0 ;
 Instr 267 @ 0x10b0 (4272) - IMAD.WIDE.U32 R8, R11, UR4, RZ ;
 Instr 268 @ 0x10c0 (4288) - IADD3.X R13, RZ, RZ, R10, P2, P1 ;
 Instr 269 @ 0x10d0 (4304) - IMAD R10, R11, UR5, R9 ;
 Instr 270 @ 0x10e0 (4320) - IADD3 R9, P0, RZ, -R8, RZ ;
 Instr 271 @ 0x10f0 (4336) - IMAD R8, R13, UR4, R10 ;
 Instr 272 @ 0x1100 (4352) - IMAD.HI.U32 R10, R11, R9, RZ ;
 Instr 273 @ 0x1110 (4368) - IMAD.X R8, RZ, RZ, ~R8, P0 ;
 Instr 274 @ 0x1120 (4384) - IMAD.WIDE.U32 R10, P0, R11, R8, R10 ;
 Instr 275 @ 0x1130 (4400) - IMAD.HI.U32 R11, P1, R13, R9, R10 ;
 Instr 276 @ 0x1140 (4416) - MOV R9, RZ ;
 Instr 277 @ 0x1150 (4432) - IMAD R10, R13.reuse, R8.reuse, RZ ;
 Instr 278 @ 0x1160 (4448) - IMAD.HI.U32 R8, R13, R8, RZ ;
 Instr 279 @ 0x1170 (4464) - IADD3 R11, P2, R10, R11, RZ ;
 Instr 280 @ 0x1180 (4480) - IMAD.X R13, R8, 0x1, R13, P0 ;
 Instr 281 @ 0x1190 (4496) - IMAD.HI.U32 R8, R11, R12, RZ ;
 Instr 282 @ 0x11a0 (4512) - IADD3.X R13, RZ, RZ, R13, P2, P1 ;
 Instr 283 @ 0x11b0 (4528) - IMAD.WIDE.U32 R8, R11, R16, R8 ;
 Instr 284 @ 0x11c0 (4544) - IMAD R11, R13.reuse, R16, RZ ;
 Instr 285 @ 0x11d0 (4560) - IMAD.HI.U32 R8, P0, R13, R12, R8 ;
 Instr 286 @ 0x11e0 (4576) - IMAD.HI.U32 R10, R13, R16, RZ ;
 Instr 287 @ 0x11f0 (4592) - IADD3 R11, P1, R11, R8, RZ ;
 Instr 288 @ 0x1200 (4608) - IMAD.X R10, RZ, RZ, R10, P0 ;
 Instr 289 @ 0x1210 (4624) - IMAD.WIDE.U32 R8, R11, UR4, RZ ;
 Instr 290 @ 0x1220 (4640) - IMAD.X R10, RZ, RZ, R10, P1 ;
 Instr 291 @ 0x1230 (4656) - IADD3 R12, P1, -R8, R12, RZ ;
 Instr 292 @ 0x1240 (4672) - IMAD R9, R11.reuse, UR5, R9 ;
 Instr 293 @ 0x1250 (4688) - IADD3 R8, R11, 0x1, RZ ;
 Instr 294 @ 0x1260 (4704) - ISETP.GE.U32.AND P0, PT, R12, UR4, PT ;
 Instr 295 @ 0x1270 (4720) - IMAD R9, R10, UR4, R9 ;
 Instr 296 @ 0x1280 (4736) - IMAD.X R13, R16, 0x1, ~R9, P1 ;
 Instr 297 @ 0x1290 (4752) - IADD3 R9, P1, R12, -UR4, RZ ;
 Instr 298 @ 0x12a0 (4768) - ISETP.GE.U32.AND.EX P0, PT, R13.reuse, UR5, PT, P0 ;
 Instr 299 @ 0x12b0 (4784) - IADD3.X R10, R13, ~UR5, RZ, P1, !PT ;
 Instr 300 @ 0x12c0 (4800) - SEL R9, R9, R12, P0 ;
 Instr 301 @ 0x12d0 (4816) - SEL R10, R10, R13, P0 ;
 Instr 302 @ 0x12e0 (4832) - SEL R11, R8, R11, P0 ;
 Instr 303 @ 0x12f0 (4848) - ISETP.GE.U32.AND P0, PT, R9, UR4, PT ;
 Instr 304 @ 0x1300 (4864) - IADD3 R8, R11, 0x1, RZ ;
 Instr 305 @ 0x1310 (4880) - ISETP.GE.U32.AND.EX P0, PT, R10, UR5, PT, P0 ;
 Instr 306 @ 0x1320 (4896) - ISETP.GE.AND P1, PT, R7, RZ, PT ;
 Instr 307 @ 0x1330 (4912) - SEL R8, R8, R11, P0 ;
 Instr 308 @ 0x1340 (4928) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x170], PT ;
 Instr 309 @ 0x1350 (4944) - IMAD.MOV R7, RZ, RZ, -R8 ;
 Instr 310 @ 0x1360 (4960) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x174], PT, P0 ;
 Instr 311 @ 0x1370 (4976) - SEL R8, R7, R8, !P1 ;
 Instr 312 @ 0x1380 (4992) - IMAD.MOV.U32 R7, RZ, RZ, 0x0 ;
 Instr 313 @ 0x1390 (5008) - SEL R8, R8, 0xffffffff, P0 ;
 Instr 314 @ 0x13a0 (5024) - RET.REL.NODEC R6 0x0 ;
Basic block id 20 - num instructions 1
 Instr 315 @ 0x13b0 (5040) - BRA 0x13b0;
inspecting void at::native::(anonymous namespace)::max_pool_forward_nchw<c10::Half>(int, c10::Half const*, long, long, long, int, int, int, int, int, int, int, int, int, int, c10::Half*, long*) - number basic blocks 21
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 10 @ 0xa0 (160) - IMAD.MOV R4, RZ, RZ, -c[0x0][0x1a8] ;
Inject count_instr before - Instr 22 @ 0x160 (352) - IABS R10, c[0x0][0x18c] ;
Inject count_instr before - Instr 45 @ 0x2d0 (720) - @!P1 IADD3 R4, R4, 0x1, RZ ;
Inject count_instr before - Instr 75 @ 0x4b0 (1200) - MOV R6, 0x4d0 ;
Inject count_instr before - Instr 77 @ 0x4d0 (1232) - IADD3 R10, -R8, RZ, RZ ;
Inject count_instr before - Instr 81 @ 0x510 (1296) - I2F.U32.RP R8, c[0x0][0x170] ;
Inject count_instr before - Instr 101 @ 0x650 (1616) - BSYNC B0 ;
Inject count_instr before - Instr 160 @ 0xa00 (2560) - ISETP.GE.AND P0, PT, R4.reuse, RZ, PT ;
Inject count_instr before - Instr 166 @ 0xa60 (2656) - BSYNC B0 ;
Inject count_instr before - Instr 169 @ 0xa90 (2704) - ISETP.GE.AND P0, PT, R10.reuse, RZ, PT ;
Inject count_instr before - Instr 174 @ 0xae0 (2784) - BSYNC B0 ;
Inject count_instr before - Instr 186 @ 0xba0 (2976) - IADD3 R21, R5, R7, RZ ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - ISETP.GE.AND P0, PT, R20, R19, PT ;
Inject count_instr before - Instr 191 @ 0xbf0 (3056) - SHF.R.S32.HI R7, RZ, 0x1f, R13 ;
Inject count_instr before - Instr 200 @ 0xc80 (3200) - SHF.R.S32.HI R7, RZ, 0x1f, R16.reuse ;
Inject count_instr before - Instr 216 @ 0xd80 (3456) - BSYNC B1 ;
Inject count_instr before - Instr 220 @ 0xdc0 (3520) - BSYNC B0 ;
Inject count_instr before - Instr 237 @ 0xed0 (3792) - EXIT ;
Inject count_instr before - Instr 238 @ 0xee0 (3808) - ULDC.64 UR10, c[0x0][0x170] ;
Inject count_instr before - Instr 315 @ 0x13b0 (5040) - BRA 0x13b0;
kernel 111 - _ZN2at6native52_GLOBAL__N__e57809e0_19_DilatedMaxPool2d_cu_6258b57421max_pool_forward_nchwIN3c104HalfEEEviPKT_llliiiiiiiiiiPS5_Pl - #thread-blocks 784,  kernel instructions 2572736, total instructions 10117966
kernel 112 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 162960, total instructions 10280926
kernel 113 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 128,  kernel instructions 154112, total instructions 10435038
Function sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn
Basic block id 0 - num instructions 9
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2UR UR5, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x310], PT ;
 Instr 3 @ 0x30 (48) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x318], PT ;
 Instr 4 @ 0x40 (64) - S2UR UR4, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - S2UR UR6, SR_CTAID.Z ;
 Instr 6 @ 0x60 (96) - IMAD.U32 R3, RZ, RZ, UR5 ;
 Instr 7 @ 0x70 (112) - IMAD.U32 R2, RZ, RZ, UR4 ;
 Instr 8 @ 0x80 (128) - @!P0 BRA 0x330 ;
Basic block id 1 - num instructions 14
 Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R7, RZ, RZ, -0x1 ;
 Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x344] ;
 Instr 11 @ 0xb0 (176) - IMAD.MOV.U32 R9, RZ, RZ, 0x1 ;
 Instr 12 @ 0xc0 (192) - SHF.L.U32 R7, R7, c[0x0][0x468], RZ ;
 Instr 13 @ 0xd0 (208) - SEL R8, R4, c[0x0][0x340], !P1 ;
 Instr 14 @ 0xe0 (224) - LOP3.LUT R5, R2, R7, RZ, 0xf3, !PT ;
 Instr 15 @ 0xf0 (240) - SHF.L.U32 R9, R9, c[0x0][0x468], RZ ;
 Instr 16 @ 0x100 (256) - ISETP.GE.U32.AND P0, PT, R5, R8, PT ;
 Instr 17 @ 0x110 (272) - LOP3.LUT P2, RZ, R9, R2, RZ, 0xc0, !PT ;
 Instr 18 @ 0x120 (288) - IMAD.MOV.U32 R9, RZ, RZ, c[0x0][0x468] ;
 Instr 19 @ 0x130 (304) - SEL R4, R4, c[0x0][0x340], P1 ;
 Instr 20 @ 0x140 (320) - LOP3.LUT R7, RZ, R7, RZ, 0x33, !PT ;
 Instr 21 @ 0x150 (336) - SEL R6, RZ, 0x1, !P2 ;
 Instr 22 @ 0x160 (352) - @!P0 BRA 0x240 ;
Basic block id 2 - num instructions 1
 Instr 23 @ 0x170 (368) - MOV R0, 0x1 ;
Basic block id 3 - num instructions 3
 Instr 24 @ 0x180 (384) - ISETP.NE.AND P2, PT, R5, R8, PT ;
 Instr 25 @ 0x190 (400) - ISETP.EQ.AND P0, PT, R9, 0x2, PT ;
 Instr 26 @ 0x1a0 (416) - @!P2 BRA P0, 0x290 ;
Basic block id 4 - num instructions 9
 Instr 27 @ 0x1b0 (432) - IADD3 R9, R9, -0x1, RZ ;
 Instr 28 @ 0x1c0 (448) - SHF.R.U32.HI R7, RZ, 0x1, R7 ;
 Instr 29 @ 0x1d0 (464) - SHF.L.U32 R5, R0, R9, RZ ;
 Instr 30 @ 0x1e0 (480) - ISETP.NE.AND P2, PT, R6, RZ, PT ;
 Instr 31 @ 0x1f0 (496) - LOP3.LUT P3, RZ, R5, R2.reuse, RZ, 0xc0, !PT ;
 Instr 32 @ 0x200 (512) - LOP3.LUT R5, R7, R2, RZ, 0xfc, !PT ;
 Instr 33 @ 0x210 (528) - ISETP.GE.U32.AND P0, PT, R5, R8, PT ;
 Instr 34 @ 0x220 (544) - @P3 SEL R6, RZ, 0x1, P2 ;
 Instr 35 @ 0x230 (560) - @P0 BRA 0x180 ;
Basic block id 5 - num instructions 5
 Instr 36 @ 0x240 (576) - LOP3.LUT R0, R7, R2, RZ, 0xc0, !PT ;
 Instr 37 @ 0x250 (592) - IMAD R0, R0, R4, R3 ;
 Instr 38 @ 0x260 (608) - LOP3.LUT R2, R2, R7, R0.reuse, 0xb8, !PT ;
 Instr 39 @ 0x270 (624) - SHF.R.U32.HI R9, RZ, R9, R0 ;
 Instr 40 @ 0x280 (640) - BRA 0x2f0 ;
Basic block id 6 - num instructions 6
 Instr 41 @ 0x290 (656) - LOP3.LUT R0, R7, R2, RZ, 0xc0, !PT ;
 Instr 42 @ 0x2a0 (672) - LOP3.LUT R7, R2, R7, RZ, 0x30, !PT ;
 Instr 43 @ 0x2b0 (688) - IMAD R0, R0, R4, R3 ;
 Instr 44 @ 0x2c0 (704) - IMAD.WIDE.U32 R8, R0.reuse, 0x55555556, RZ ;
 Instr 45 @ 0x2d0 (720) - IADD3 R2, R0, R7, RZ ;
 Instr 46 @ 0x2e0 (736) - IMAD R2, R9, -0x3, R2 ;
Basic block id 7 - num instructions 4
 Instr 47 @ 0x2f0 (752) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 48 @ 0x300 (768) - IMAD.MOV.U32 R3, RZ, RZ, R9 ;
 Instr 49 @ 0x310 (784) - LOP3.LUT R5, RZ, R3, RZ, 0x33, !PT ;
 Instr 50 @ 0x320 (800) - @P0 IMAD.IADD R3, R5, 0x1, R4 ;
Basic block id 8 - num instructions 169
 Instr 51 @ 0x330 (816) - S2R R92, SR_TID.X ;
 Instr 52 @ 0x340 (832) - UMOV UR8, 0x1 ;
 Instr 53 @ 0x350 (848) - SEL R89, R3, R2, !P1 ;
 Instr 54 @ 0x360 (864) - ULDC.64 UR4, c[0x0][0x3c8] ;
 Instr 55 @ 0x370 (880) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 56 @ 0x380 (896) - UISETP.NE.AND UP0, UPT, UR8, UR4, UPT ;
 Instr 57 @ 0x390 (912) - CS2R R22, SRZ ;
 Instr 58 @ 0x3a0 (928) - MOV R21, c[0x0][0x274] ;
 Instr 59 @ 0x3b0 (944) - ULDC UR4, c[0x0][0x1b4] ;
 Instr 60 @ 0x3c0 (960) - SEL R88, R2, R3, !P1 ;
 Instr 61 @ 0x3d0 (976) - ULDC UR9, c[0x0][0x1bc] ;
 Instr 62 @ 0x3e0 (992) - PLOP3.LUT P6, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 63 @ 0x3f0 (1008) - UISETP.NE.AND UP0, UPT, UR8, UR5, UPT ;
 Instr 64 @ 0x400 (1024) - MOV R93, c[0x0][0x1c8] ;
 Instr 65 @ 0x410 (1040) - ULDC UR7, c[0x0][0x1c0] ;
 Instr 66 @ 0x420 (1056) - IMAD.SHL.U32 R88, R88, 0x40, RZ ;
 Instr 67 @ 0x430 (1072) - ULDC UR12, c[0x0][0x450] ;
 Instr 68 @ 0x440 (1088) - ISETP.GT.AND P1, PT, R93.reuse, 0x1, PT ;
 Instr 69 @ 0x450 (1104) - UIADD3 UR12, UR12, -0x1, URZ ;
 Instr 70 @ 0x460 (1120) - PLOP3.LUT P5, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 71 @ 0x470 (1136) - UISETP.NE.AND UP0, UPT, UR8, UR4, UPT ;
 Instr 72 @ 0x480 (1152) - SEL R104, R88, RZ, P1 ;
 Instr 73 @ 0x490 (1168) - IMAD R91, R93, c[0x0][0x1a8], RZ ;
 Instr 74 @ 0x4a0 (1184) - ULDC.U8 UR4, c[0x0][0x28c] ;
 Instr 75 @ 0x4b0 (1200) - IMAD R20, R89, 0x40, R92 ;
 Instr 76 @ 0x4c0 (1216) - ISETP.GT.AND P0, PT, R92, 0x3f, PT ;
 Instr 77 @ 0x4d0 (1232) - IMAD R93, R93, c[0x0][0x1b8], RZ ;
 Instr 78 @ 0x4e0 (1248) - PLOP3.LUT P4, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 79 @ 0x4f0 (1264) - @P6 IMAD.HI.U32 R4, R20, c[0x0][0x3dc], RZ ;
 Instr 80 @ 0x500 (1280) - UISETP.NE.AND UP0, UPT, UR4, URZ, UPT ;
 Instr 81 @ 0x510 (1296) - CS2R R26, SRZ ;
 Instr 82 @ 0x520 (1312) - CS2R R28, SRZ ;
 Instr 83 @ 0x530 (1328) - ULDC.64 UR4, c[0x0][0x3b0] ;
 Instr 84 @ 0x540 (1344) - @P6 SHF.R.U32.HI R4, RZ, c[0x0][0x3e0], R4 ;
 Instr 85 @ 0x550 (1360) - IMAD.MOV.U32 R94, RZ, RZ, c[0x0][0x3d0] ;
 Instr 86 @ 0x560 (1376) - CS2R R30, SRZ ;
 Instr 87 @ 0x570 (1392) - IMAD.MOV.U32 R97, RZ, RZ, c[0x0][0x454] ;
 Instr 88 @ 0x580 (1408) - CS2R R32, SRZ ;
 Instr 89 @ 0x590 (1424) - @P6 IMAD.MOV R5, RZ, RZ, -R4 ;
 Instr 90 @ 0x5a0 (1440) - CS2R R34, SRZ ;
 Instr 91 @ 0x5b0 (1456) - @!UP0 ULOP3.LUT UR11, URZ, UR6, URZ, 0x33, !UPT ;
 Instr 92 @ 0x5c0 (1472) - IMAD.SHL.U32 R94, R94, 0x10, RZ ;
 Instr 93 @ 0x5d0 (1488) - @UP0 ULDC UR10, c[0x0][0x3b4] ;
 Instr 94 @ 0x5e0 (1504) - @P6 IMAD R6, R5, c[0x0][0x3c8], R20 ;
 Instr 95 @ 0x5f0 (1520) - @!UP0 UIADD3 UR9, UR11, UR9, URZ ;
 Instr 96 @ 0x600 (1536) - @P6 IMAD.MOV.U32 R20, RZ, RZ, R4 ;
 Instr 97 @ 0x610 (1552) - @UP0 UIADD3 UR10, UR10, UR4, URZ ;
 Instr 98 @ 0x620 (1568) - @P5 IMAD.HI.U32 R7, R6, c[0x0][0x3e4], RZ ;
 Instr 99 @ 0x630 (1584) - @!UP0 UIADD3 UR7, UR11, UR7, URZ ;
 Instr 100 @ 0x640 (1600) - @!UP0 UIMAD UR9, UR9, UR4, URZ ;
 Instr 101 @ 0x650 (1616) - @P5 SHF.R.U32.HI R7, RZ, c[0x0][0x3e8], R7 ;
 Instr 102 @ 0x660 (1632) - ULDC UR4, c[0x0][0x3ac] ;
 Instr 103 @ 0x670 (1648) - @UP0 UIMAD UR10, UR10, UR6, URZ ;
 Instr 104 @ 0x680 (1664) - @P5 IMAD.MOV R5, RZ, RZ, -R7.reuse ;
 Instr 105 @ 0x690 (1680) - UIMAD UR4, UR6, UR4, URZ ;
 Instr 106 @ 0x6a0 (1696) - @!UP0 UIMAD UR10, UR7, UR5, UR9 ;
 Instr 107 @ 0x6b0 (1712) - @P5 IMAD R22, R5, c[0x0][0x3cc], R6 ;
 Instr 108 @ 0x6c0 (1728) - USEL UR6, UR12, URZ, !UP0 ;
 Instr 109 @ 0x6d0 (1744) - @P5 IMAD.MOV.U32 R6, RZ, RZ, R7 ;
 Instr 110 @ 0x6e0 (1760) - SHF.R.S32.HI R7, RZ, 0x1f, R92 ;
 Instr 111 @ 0x6f0 (1776) - @P4 IMAD.HI.U32 R0, R22, c[0x0][0x3ec], RZ ;
 Instr 112 @ 0x700 (1792) - ULDC.U8 UR5, c[0x0][0x258] ;
 Instr 113 @ 0x710 (1808) - UIADD3 UR6, UR6, UR10, URZ ;
 Instr 114 @ 0x720 (1824) - IMAD R21, R6, R21, -c[0x0][0x25c] ;
 Instr 115 @ 0x730 (1840) - @P4 SHF.R.U32.HI R0, RZ, c[0x0][0x3f0], R0 ;
 Instr 116 @ 0x740 (1856) - UMOV UR9, URZ ;
 Instr 117 @ 0x750 (1872) - @P4 IMAD.MOV R5, RZ, RZ, -R0 ;
 Instr 118 @ 0x760 (1888) - @P4 IMAD R23, R5, c[0x0][0x1b4], R22 ;
 Instr 119 @ 0x770 (1904) - @P4 IMAD.MOV.U32 R22, RZ, RZ, R0 ;
 Instr 120 @ 0x780 (1920) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x27c] ;
 Instr 121 @ 0x790 (1936) - IMAD.MOV.U32 R5, RZ, RZ, c[0x0][0x278] ;
 Instr 122 @ 0x7a0 (1952) - IMAD R23, R23, R0, -c[0x0][0x26c] ;
 Instr 123 @ 0x7b0 (1968) - LEA.HI R0, R7, R92, RZ, 0x3 ;
 Instr 124 @ 0x7c0 (1984) - IMAD R22, R22, R5, -c[0x0][0x264] ;
 Instr 125 @ 0x7d0 (2000) - SHF.R.S32.HI R99, RZ, 0x3, R0.reuse ;
 Instr 126 @ 0x7e0 (2016) - LOP3.LUT R3, R0, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 127 @ 0x7f0 (2032) - SHF.R.S32.HI R24, RZ, 0x1f, R0 ;
 Instr 128 @ 0x800 (2048) - @!P0 STS.128 [R92.X16+0x4000], R20 ;
 Instr 129 @ 0x810 (2064) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 130 @ 0x820 (2080) - IMAD.IADD R90, R92, 0x1, -R3 ;
 Instr 131 @ 0x830 (2096) - ISETP.NE.AND P0, PT, RZ, UR5, PT ;
 Instr 132 @ 0x840 (2112) - IMAD.IADD R2, R99, 0x1, R88 ;
 Instr 133 @ 0x850 (2128) - LEA R3, R90, UR4, 0x3 ;
 Instr 134 @ 0x860 (2144) - IADD3 R104, R3, R104, RZ ;
 Instr 135 @ 0x870 (2160) - IMAD.U32 R21, RZ, RZ, UR6 ;
 Instr 136 @ 0x880 (2176) - ULDC.64 UR6, c[0x0][0x160] ;
 Instr 137 @ 0x890 (2192) - IMAD.MOV.U32 R20, RZ, RZ, c[0x0][0x3d4] ;
 Instr 138 @ 0x8a0 (2208) - ISETP.GE.AND P3, PT, R104, R91, PT ;
 Instr 139 @ 0x8b0 (2224) - IMAD R53, R2.reuse, c[0x0][0x3d0], R21.reuse ;
 Instr 140 @ 0x8c0 (2240) - IMAD R22, R2, c[0x0][0x3d4], R21 ;
 Instr 141 @ 0x8d0 (2256) - SEL R20, R20, 0x1, P0 ;
 Instr 142 @ 0x8e0 (2272) - LEA.HI R21, R24, R99, RZ, 0x3 ;
 Instr 143 @ 0x8f0 (2288) - @!P0 IMAD R53, R22, c[0x0][0x1a8], RZ ;
 Instr 144 @ 0x900 (2304) - CS2R R24, SRZ ;
 Instr 145 @ 0x910 (2320) - LDS.U.128 R16, [R99.X16+0x4000] ;
 Instr 146 @ 0x920 (2336) - LOP3.LUT R22, R21, 0xffffff8, RZ, 0xc0, !PT ;
 Instr 147 @ 0x930 (2352) - IMAD R53, R3, R20, R53 ;
 Instr 148 @ 0x940 (2368) - IMAD.IADD R21, R99, 0x1, -R22 ;
 Instr 149 @ 0x950 (2384) - LDS.U.128 R12, [R99.X16+0x4100] ;
 Instr 150 @ 0x960 (2400) - CS2R R22, SRZ ;
 Instr 151 @ 0x970 (2416) - IMAD.IADD R55, R94, 0x1, R53 ;
 Instr 152 @ 0x980 (2432) - LOP3.LUT R90, R21, R90, RZ, 0x3c, !PT ;
 Instr 153 @ 0x990 (2448) - CS2R R20, SRZ ;
 Instr 154 @ 0x9a0 (2464) - LDS.U.128 R8, [R99.X16+0x4200] ;
 Instr 155 @ 0x9b0 (2480) - IMAD R90, R99, 0x8, R90 ;
 Instr 156 @ 0x9c0 (2496) - LDS.U.128 R4, [R99.X16+0x4300] ;
 Instr 157 @ 0x9d0 (2512) - ISETP.LT.AND P0, PT, R16.reuse, c[0x0][0x198], !P3 ;
 Instr 158 @ 0x9e0 (2528) - IMAD R16, R16, c[0x0][0x230], RZ ;
 Instr 159 @ 0x9f0 (2544) - ISETP.LT.AND P1, PT, R12.reuse, c[0x0][0x198], !P3 ;
 Instr 160 @ 0xa00 (2560) - IMAD R12, R12, c[0x0][0x230], RZ ;
 Instr 161 @ 0xa10 (2576) - ISETP.LT.AND P2, PT, R8.reuse, c[0x0][0x198], !P3 ;
 Instr 162 @ 0xa20 (2592) - IMAD R8, R8, c[0x0][0x230], RZ ;
 Instr 163 @ 0xa30 (2608) - ISETP.LT.AND P3, PT, R4.reuse, c[0x0][0x198], !P3 ;
 Instr 164 @ 0xa40 (2624) - IMAD R4, R4, c[0x0][0x230], RZ ;
 Instr 165 @ 0xa50 (2640) - P2R R95, PR, RZ, 0xf ;
 Instr 166 @ 0xa60 (2656) - ISETP.GE.U32.AND P0, PT, R18, c[0x0][0x1a0], PT ;
 Instr 167 @ 0xa70 (2672) - ISETP.GE.U32.AND P1, PT, R14, c[0x0][0x1a0], PT ;
 Instr 168 @ 0xa80 (2688) - ISETP.GE.U32.AND P2, PT, R10, c[0x0][0x1a0], PT ;
 Instr 169 @ 0xa90 (2704) - ISETP.GE.U32.AND P3, PT, R6, c[0x0][0x1a0], PT ;
 Instr 170 @ 0xaa0 (2720) - ISETP.LT.U32.AND P0, PT, R17.reuse, c[0x0][0x19c], !P0 ;
 Instr 171 @ 0xab0 (2736) - IMAD R17, R17, c[0x0][0x234], R16 ;
 Instr 172 @ 0xac0 (2752) - ISETP.LT.U32.AND P1, PT, R13.reuse, c[0x0][0x19c], !P1 ;
 Instr 173 @ 0xad0 (2768) - IMAD R13, R13, c[0x0][0x234], R12 ;
 Instr 174 @ 0xae0 (2784) - ISETP.LT.U32.AND P2, PT, R9.reuse, c[0x0][0x19c], !P2 ;
 Instr 175 @ 0xaf0 (2800) - IMAD R9, R9, c[0x0][0x234], R8 ;
 Instr 176 @ 0xb00 (2816) - ISETP.LT.U32.AND P3, PT, R5.reuse, c[0x0][0x19c], !P3 ;
 Instr 177 @ 0xb10 (2832) - IMAD R5, R5, c[0x0][0x234], R4 ;
 Instr 178 @ 0xb20 (2848) - ISETP.LT.U32.AND P0, PT, R19, c[0x0][0x1a4], P0 ;
 Instr 179 @ 0xb30 (2864) - IMAD R18, R18, c[0x0][0x238], R17 ;
 Instr 180 @ 0xb40 (2880) - ISETP.LT.U32.AND P1, PT, R15, c[0x0][0x1a4], P1 ;
 Instr 181 @ 0xb50 (2896) - IMAD R8, R6, c[0x0][0x238], R5 ;
 Instr 182 @ 0xb60 (2912) - ISETP.LT.U32.AND P2, PT, R11, c[0x0][0x1a4], P2 ;
 Instr 183 @ 0xb70 (2928) - IMAD R14, R14, c[0x0][0x238], R13 ;
 Instr 184 @ 0xb80 (2944) - ISETP.LT.U32.AND P3, PT, R7.reuse, c[0x0][0x1a4], P3 ;
 Instr 185 @ 0xb90 (2960) - IMAD R7, R7, c[0x0][0x23c], R8 ;
 Instr 186 @ 0xba0 (2976) - IADD3 R6, R2, 0x10, RZ ;
 Instr 187 @ 0xbb0 (2992) - IMAD R10, R10, c[0x0][0x238], R9 ;
 Instr 188 @ 0xbc0 (3008) - P2R R56, PR, RZ, 0xf ;
 Instr 189 @ 0xbd0 (3024) - IMAD R19, R19, c[0x0][0x23c], R18 ;
 Instr 190 @ 0xbe0 (3040) - ISETP.GE.AND P3, PT, R3, c[0x0][0x1a8], PT ;
 Instr 191 @ 0xbf0 (3056) - IMAD R15, R15, c[0x0][0x23c], R14 ;
 Instr 192 @ 0xc00 (3072) - IADD3 R4, R2.reuse, 0x20, RZ ;
 Instr 193 @ 0xc10 (3088) - IMAD R11, R11, c[0x0][0x23c], R10 ;
 Instr 194 @ 0xc20 (3104) - IADD3 R8, R2, 0x30, RZ ;
 Instr 195 @ 0xc30 (3120) - IMAD R110, R104, c[0x0][0x240], R19 ;
 Instr 196 @ 0xc40 (3136) - ISETP.LT.AND P1, PT, R6, R93.reuse, !P3 ;
 Instr 197 @ 0xc50 (3152) - IMAD R108, R104, c[0x0][0x240], R15 ;
 Instr 198 @ 0xc60 (3168) - ISETP.LT.AND P2, PT, R4, R93.reuse, !P3 ;
 Instr 199 @ 0xc70 (3184) - IMAD R106, R104, c[0x0][0x240], R11 ;
 Instr 200 @ 0xc80 (3200) - ISETP.LT.AND P0, PT, R2, R93.reuse, !P3 ;
 Instr 201 @ 0xc90 (3216) - IMAD R104, R104, c[0x0][0x240], R7 ;
 Instr 202 @ 0xca0 (3232) - ISETP.LT.AND P3, PT, R8, R93, !P3 ;
 Instr 203 @ 0xcb0 (3248) - CS2R R4, SRZ ;
 Instr 204 @ 0xcc0 (3264) - LOP3.LUT R3, R0, 0x1ffffff8, RZ, 0xc0, !PT ;
 Instr 205 @ 0xcd0 (3280) - CS2R R6, SRZ ;
 Instr 206 @ 0xce0 (3296) - P2R R98, PR, RZ, 0xf ;
 Instr 207 @ 0xcf0 (3312) - CS2R R8, SRZ ;
 Instr 208 @ 0xd00 (3328) - ISETP.LE.AND P3, PT, RZ, c[0x0][0x454], PT ;
 Instr 209 @ 0xd10 (3344) - CS2R R10, SRZ ;
 Instr 210 @ 0xd20 (3360) - IADD3 R96, -R3, R92, RZ ;
 Instr 211 @ 0xd30 (3376) - CS2R R12, SRZ ;
 Instr 212 @ 0xd40 (3392) - CS2R R14, SRZ ;
 Instr 213 @ 0xd50 (3408) - CS2R R16, SRZ ;
 Instr 214 @ 0xd60 (3424) - LEA R96, R96, UR4, 0x3 ;
 Instr 215 @ 0xd70 (3440) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 216 @ 0xd80 (3456) - CS2R R18, SRZ ;
 Instr 217 @ 0xd90 (3472) - LOP3.LUT R56, R95, R56, RZ, 0xc0, !PT ;
 Instr 218 @ 0xda0 (3488) - IADD3 R96, R96, c[0x0][0x45c], RZ ;
 Instr 219 @ 0xdb0 (3504) - @!P3 BRA 0x1580 ;
Basic block id 9 - num instructions 124
 Instr 220 @ 0xdc0 (3520) - IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 221 @ 0xdd0 (3536) - R2P PR, R56, 0xf ;
 Instr 222 @ 0xde0 (3552) - CS2R R64, SRZ ;
 Instr 223 @ 0xdf0 (3568) - CS2R R66, SRZ ;
 Instr 224 @ 0xe00 (3584) - IMAD.WIDE R36, R110, R3.reuse, c[0x0][0x160] ;
 Instr 225 @ 0xe10 (3600) - CS2R R68, SRZ ;
 Instr 226 @ 0xe20 (3616) - CS2R R70, SRZ ;
 Instr 227 @ 0xe30 (3632) - CS2R R56, SRZ ;
 Instr 228 @ 0xe40 (3648) - CS2R R58, SRZ ;
 Instr 229 @ 0xe50 (3664) - CS2R R60, SRZ ;
 Instr 230 @ 0xe60 (3680) - CS2R R62, SRZ ;
 Instr 231 @ 0xe70 (3696) - IMAD.WIDE R40, R108, R3.reuse, c[0x0][0x160] ;
 Instr 232 @ 0xe80 (3712) - CS2R R44, SRZ ;
 Instr 233 @ 0xe90 (3728) - @P0 LDG.E.128.SYS R64, [R36] ;
 Instr 234 @ 0xea0 (3744) - CS2R R46, SRZ ;
 Instr 235 @ 0xeb0 (3760) - IMAD.WIDE R38, R106, R3.reuse, c[0x0][0x160] ;
 Instr 236 @ 0xec0 (3776) - CS2R R48, SRZ ;
 Instr 237 @ 0xed0 (3792) - CS2R R50, SRZ ;
 Instr 238 @ 0xee0 (3808) - ULDC UR6, c[0x0][0x450] ;
 Instr 239 @ 0xef0 (3824) - @P1 LDG.E.128.SYS R68, [R40] ;
 Instr 240 @ 0xf00 (3840) - ULDC UR11, c[0x0][0x3d8] ;
 Instr 241 @ 0xf10 (3856) - IMAD.WIDE R36, R104, R3, c[0x0][0x160] ;
 Instr 242 @ 0xf20 (3872) - @P2 LDG.E.128.SYS R56, [R38] ;
 Instr 243 @ 0xf30 (3888) - ULDC UR14, c[0x0][0x3f4] ;
 Instr 244 @ 0xf40 (3904) - ULDC.64 UR4, c[0x0][0x3f8] ;
 Instr 245 @ 0xf50 (3920) - @P3 LDG.E.128.SYS R60, [R36] ;
 Instr 246 @ 0xf60 (3936) - R2P PR, R98, 0xf ;
 Instr 247 @ 0xf70 (3952) - IMAD.WIDE R42, R53, R3, c[0x0][0x168] ;
 Instr 248 @ 0xf80 (3968) - CS2R R38, SRZ ;
 Instr 249 @ 0xf90 (3984) - CS2R R40, SRZ ;
 Instr 250 @ 0xfa0 (4000) - @P2 IMAD.IADD R72, R94.reuse, 0x1, R55 ;
 Instr 251 @ 0xfb0 (4016) - @P3 IADD3 R0, R94, R55, R94 ;
 Instr 252 @ 0xfc0 (4032) - @P0 LDG.E.128.SYS R44, [R42] ;
 Instr 253 @ 0xfd0 (4048) - @P1 IMAD.WIDE R74, R55, R3, c[0x0][0x168] ;
 Instr 254 @ 0xfe0 (4064) - CS2R R36, SRZ ;
 Instr 255 @ 0xff0 (4080) - @P2 IMAD.WIDE R72, R72, R3, c[0x0][0x168] ;
 Instr 256 @ 0x1000 (4096) - CS2R R42, SRZ ;
 Instr 257 @ 0x1010 (4112) - @P3 IMAD.WIDE R2, R0, R3, c[0x0][0x168] ;
 Instr 258 @ 0x1020 (4128) - @P1 LDG.E.128.SYS R48, [R74] ;
 Instr 259 @ 0x1030 (4144) - @P2 LDG.E.128.SYS R36, [R72] ;
 Instr 260 @ 0x1040 (4160) - @P3 LDG.E.128.SYS R40, [R2] ;
 Instr 261 @ 0x1050 (4176) - UISETP.NE.AND UP0, UPT, UR8, UR6, UPT ;
 Instr 262 @ 0x1060 (4192) - UISETP.NE.AND UP1, UPT, UR8, UR11, UPT ;
 Instr 263 @ 0x1070 (4208) - USEL UR9, URZ, 0x1, !UP0 ;
 Instr 264 @ 0x1080 (4224) - UIMAD.WIDE.U32 UR14, UR9, UR14, URZ ;
 Instr 265 @ 0x1090 (4240) - UMOV UR7, UR9 ;
 Instr 266 @ 0x10a0 (4256) - @UP1 USHF.R.U32.HI UR7, URZ, UR4, UR15 ;
 Instr 267 @ 0x10b0 (4272) - ULDC UR4, c[0x0][0x1c4] ;
 Instr 268 @ 0x10c0 (4288) - @UP1 UIADD3 UR13, -UR7, URZ, URZ ;
 Instr 269 @ 0x10d0 (4304) - UISETP.NE.AND UP0, UPT, UR8, UR4, UPT ;
 Instr 270 @ 0x10e0 (4320) - UMOV UR10, URZ ;
 Instr 271 @ 0x10f0 (4336) - @UP1 UIMAD UR10, UR13, UR11, UR9 ;
 Instr 272 @ 0x1100 (4352) - UIMAD.WIDE.U32 UR14, UR10, UR5, URZ ;
 Instr 273 @ 0x1110 (4368) - ULDC UR5, c[0x0][0x400] ;
 Instr 274 @ 0x1120 (4384) - UMOV UR11, UR10 ;
 Instr 275 @ 0x1130 (4400) - @UP0 USHF.R.U32.HI UR11, URZ, UR5, UR15 ;
 Instr 276 @ 0x1140 (4416) - MOV R3, UR11 ;
 Instr 277 @ 0x1150 (4432) - @UP0 UIADD3 UR11, -UR11, URZ, URZ ;
 Instr 278 @ 0x1160 (4448) - UMOV UR5, URZ ;
 Instr 279 @ 0x1170 (4464) - @UP0 UIMAD UR5, UR11, UR4, UR10 ;
 Instr 280 @ 0x1180 (4480) - IMAD.U32 R0, RZ, RZ, UR7 ;
 Instr 281 @ 0x1190 (4496) - UISETP.NE.AND UP1, UPT, UR5, URZ, UPT ;
 Instr 282 @ 0x11a0 (4512) - MOV R2, UR5 ;
 Instr 283 @ 0x11b0 (4528) - UISETP.NE.AND UP0, UPT, UR10, URZ, UPT ;
 Instr 284 @ 0x11c0 (4544) - USEL UR10, URZ, 0x1, UP1 ;
 Instr 285 @ 0x11d0 (4560) - UISETP.NE.AND UP1, UPT, UR8, UR6, UPT ;
 Instr 286 @ 0x11e0 (4576) - USEL UR10, UR10, 0x2, UP0 ;
 Instr 287 @ 0x11f0 (4592) - USEL UR5, URZ, 0x1, UP1 ;
 Instr 288 @ 0x1200 (4608) - USEL UR10, UR10, 0x3, UP1 ;
 Instr 289 @ 0x1210 (4624) - UMOV UR4, 0x8 ;
 Instr 290 @ 0x1220 (4640) - ULDC UR14, c[0x2][0x0] ;
 Instr 291 @ 0x1230 (4656) - UIMAD UR14, UR5, UR4, UR14 ;
 Instr 292 @ 0x1240 (4672) - USHF.L.U32 UR10, UR10, 0x3, URZ ;
 Instr 293 @ 0x1250 (4688) - ULDC.64 UR6, c[0x0][0x160] ;
 Instr 294 @ 0x1260 (4704) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 295 @ 0x1270 (4720) - ULDC.64 UR14, c[0x0][UR14+0x160] ;
 Instr 296 @ 0x1280 (4736) - ULDC.64 UR10, c[0x0][UR10+0x420] ;
 Instr 297 @ 0x1290 (4752) - UIADD3 UR4, UP0, UR14, UR4, URZ ;
 Instr 298 @ 0x12a0 (4768) - UIADD3 UR6, UP1, UR10, UR6, URZ ;
 Instr 299 @ 0x12b0 (4784) - UIADD3.X UR5, UR15, UR5, URZ, UP0, !UPT ;
 Instr 300 @ 0x12c0 (4800) - UIADD3.X UR7, UR11, UR7, URZ, UP1, !UPT ;
 Instr 301 @ 0x12d0 (4816) - STS.128 [R90.X16], R64 ;
 Instr 302 @ 0x12e0 (4832) - STS.128 [R90.X16+0x800], R68 ;
 Instr 303 @ 0x12f0 (4848) - STS.128 [R90.X16+0x1000], R56 ;
 Instr 304 @ 0x1300 (4864) - STS.128 [R90.X16+0x1800], R60 ;
 Instr 305 @ 0x1310 (4880) - STS.128 [R90.X16+0x2000], R44 ;
 Instr 306 @ 0x1320 (4896) - STS.128 [R90.X16+0x2800], R48 ;
 Instr 307 @ 0x1330 (4912) - STS.128 [R90.X16+0x3000], R36 ;
 Instr 308 @ 0x1340 (4928) - STS.128 [R90.X16+0x3800], R40 ;
 Instr 309 @ 0x1350 (4944) - LDS.U.128 R56, [R99.X16+0x4100] ;
 Instr 310 @ 0x1360 (4960) - LDS.U.128 R44, [R99.X16+0x4200] ;
 Instr 311 @ 0x1370 (4976) - LDS.U.128 R48, [R99.X16+0x4000] ;
 Instr 312 @ 0x1380 (4992) - LDS.U.128 R36, [R99.X16+0x4300] ;
 Instr 313 @ 0x1390 (5008) - IMAD R58, R3, c[0x0][0x284], R58 ;
 Instr 314 @ 0x13a0 (5024) - IMAD R57, R0, c[0x0][0x280], R57 ;
 Instr 315 @ 0x13b0 (5040) - IMAD R46, R3.reuse, c[0x0][0x284], R46 ;
 Instr 316 @ 0x13c0 (5056) - ISETP.GE.U32.AND P1, PT, R58, c[0x0][0x1a0], PT ;
 Instr 317 @ 0x13d0 (5072) - IMAD R45, R0, c[0x0][0x280], R45 ;
 Instr 318 @ 0x13e0 (5088) - IMAD R50, R3.reuse, c[0x0][0x284], R50 ;
 Instr 319 @ 0x13f0 (5104) - ISETP.GE.U32.AND P2, PT, R46, c[0x0][0x1a0], PT ;
 Instr 320 @ 0x1400 (5120) - IMAD R49, R0, c[0x0][0x280], R49 ;
 Instr 321 @ 0x1410 (5136) - IMAD R38, R3, c[0x0][0x284], R38 ;
 Instr 322 @ 0x1420 (5152) - ISETP.GE.U32.AND P0, PT, R50, c[0x0][0x1a0], PT ;
 Instr 323 @ 0x1430 (5168) - IMAD R37, R0, c[0x0][0x280], R37 ;
 Instr 324 @ 0x1440 (5184) - ISETP.GE.U32.AND P3, PT, R38, c[0x0][0x1a0], PT ;
 Instr 325 @ 0x1450 (5200) - IMAD R59, R2.reuse, c[0x0][0x288], R59 ;
 Instr 326 @ 0x1460 (5216) - ISETP.LT.U32.AND P1, PT, R57, c[0x0][0x19c], !P1 ;
 Instr 327 @ 0x1470 (5232) - IMAD R47, R2.reuse, c[0x0][0x288], R47 ;
 Instr 328 @ 0x1480 (5248) - ISETP.LT.U32.AND P2, PT, R45, c[0x0][0x19c], !P2 ;
 Instr 329 @ 0x1490 (5264) - IMAD R51, R2.reuse, c[0x0][0x288], R51 ;
 Instr 330 @ 0x14a0 (5280) - ISETP.LT.U32.AND P0, PT, R49, c[0x0][0x19c], !P0 ;
 Instr 331 @ 0x14b0 (5296) - IMAD R39, R2, c[0x0][0x288], R39 ;
 Instr 332 @ 0x14c0 (5312) - ISETP.LT.U32.AND P3, PT, R37, c[0x0][0x19c], !P3 ;
 Instr 333 @ 0x14d0 (5328) - ISETP.LT.U32.AND P1, PT, R59, c[0x0][0x1a4], P1 ;
 Instr 334 @ 0x14e0 (5344) - ISETP.LT.U32.AND P2, PT, R47, c[0x0][0x1a4], P2 ;
 Instr 335 @ 0x14f0 (5360) - ISETP.LT.U32.AND P0, PT, R51, c[0x0][0x1a4], P0 ;
 Instr 336 @ 0x1500 (5376) - ISETP.LT.U32.AND P3, PT, R39, c[0x0][0x1a4], P3 ;
 Instr 337 @ 0x1510 (5392) - MOV R0, c[0x0][0x454] ;
 Instr 338 @ 0x1520 (5408) - P2R R56, PR, RZ, 0xf ;
 Instr 339 @ 0x1530 (5424) - ISETP.GE.AND P1, PT, R0, c[0x0][0x458], PT ;
 Instr 340 @ 0x1540 (5440) - LOP3.LUT R56, R95, R56, RZ, 0xc0, !PT ;
 Instr 341 @ 0x1550 (5456) - @!P1 ISETP.GE.AND P0, PT, R96, R91, PT ;
 Instr 342 @ 0x1560 (5472) - @!P1 SEL R98, R98, RZ, !P0 ;
 Instr 343 @ 0x1570 (5488) - @!P1 SEL R56, R56, RZ, !P0 ;
Basic block id 10 - num instructions 16
 Instr 344 @ 0x1580 (5504) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 345 @ 0x1590 (5520) - IMAD.SHL.U32 R0, R92.reuse, 0x10, RZ ;
 Instr 346 @ 0x15a0 (5536) - LOP3.LUT R3, R92.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 347 @ 0x15b0 (5552) - LOP3.LUT R2, R92.reuse, 0xf, RZ, 0xc0, !PT ;
 Instr 348 @ 0x15c0 (5568) - LOP3.LUT R51, R92, 0x40, RZ, 0xc0, !PT ;
 Instr 349 @ 0x15d0 (5584) - LEA.HI R3, R3, R2, RZ, 0x1f ;
 Instr 350 @ 0x15e0 (5600) - LOP3.LUT R0, R0, 0x70, RZ, 0xc0, !PT ;
 Instr 351 @ 0x15f0 (5616) - LEA.HI R51, R51, R2, RZ, 0x1e ;
 Instr 352 @ 0x1600 (5632) - ISETP.LE.AND P0, PT, RZ, c[0x0][0x454], PT ;
 Instr 353 @ 0x1610 (5648) - IMAD R52, R3, 0x80, R0.reuse ;
 Instr 354 @ 0x1620 (5664) - IMAD R51, R51, 0x80, R0 ;
 Instr 355 @ 0x1630 (5680) - LDSM.16.M88.2 R2, [R52] ;
 Instr 356 @ 0x1640 (5696) - LDSM.16.M88.2 R40, [R52+0x1000] ;
 Instr 357 @ 0x1650 (5712) - LDSM.16.M88.2 R36, [R51+0x2000] ;
 Instr 358 @ 0x1660 (5728) - LDSM.16.M88.2 R38, [R51+0x3000] ;
 Instr 359 @ 0x1670 (5744) - @!P0 BRA 0x25d0 ;
Basic block id 11 - num instructions 7
 Instr 360 @ 0x1680 (5760) - IMAD.WIDE R110, R110, 0x2, RZ ;
 Instr 361 @ 0x1690 (5776) - LOP3.LUT R50, R52, 0x10, RZ, 0x3c, !PT ;
 Instr 362 @ 0x16a0 (5792) - LOP3.LUT R0, R51, 0x10, RZ, 0x3c, !PT ;
 Instr 363 @ 0x16b0 (5808) - IMAD.WIDE R108, R108, 0x2, RZ ;
 Instr 364 @ 0x16c0 (5824) - IMAD.WIDE R106, R106, 0x2, RZ ;
 Instr 365 @ 0x16d0 (5840) - IMAD.WIDE R104, R104, 0x2, RZ ;
 Instr 366 @ 0x16e0 (5856) - IMAD.WIDE R102, R53, 0x2, RZ ;
Basic block id 12 - num instructions 238
 Instr 367 @ 0x16f0 (5872) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 368 @ 0x1700 (5888) - LDSM.16.M88.2 R42, [R50] ;
 Instr 369 @ 0x1710 (5904) - ULDC.64 UR10, c[0x0][0x3f8] ;
 Instr 370 @ 0x1720 (5920) - CS2R R80, SRZ ;
 Instr 371 @ 0x1730 (5936) - CS2R R82, SRZ ;
 Instr 372 @ 0x1740 (5952) - LDSM.16.M88.2 R44, [R0+0x2000] ;
 Instr 373 @ 0x1750 (5968) - CS2R R84, SRZ ;
 Instr 374 @ 0x1760 (5984) - UMOV UR8, 0x1 ;
 Instr 375 @ 0x1770 (6000) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 376 @ 0x1780 (6016) - LDSM.16.M88.2 R46, [R0+0x3000] ;
 Instr 377 @ 0x1790 (6032) - CS2R R86, SRZ ;
 Instr 378 @ 0x17a0 (6048) - CS2R R72, SRZ ;
 Instr 379 @ 0x17b0 (6064) - CS2R R74, SRZ ;
 Instr 380 @ 0x17c0 (6080) - LDSM.16.M88.2 R48, [R50+0x1000] ;
 Instr 381 @ 0x17d0 (6096) - CS2R R76, SRZ ;
 Instr 382 @ 0x17e0 (6112) - ULDC UR13, c[0x0][0x3d8] ;
 Instr 383 @ 0x17f0 (6128) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 384 @ 0x1800 (6144) - CS2R R78, SRZ ;
 Instr 385 @ 0x1810 (6160) - CS2R R64, SRZ ;
 Instr 386 @ 0x1820 (6176) - LOP3.LUT R53, R52, 0x20, RZ, 0x3c, !PT ;
 Instr 387 @ 0x1830 (6192) - CS2R R66, SRZ ;
 Instr 388 @ 0x1840 (6208) - LOP3.LUT R54, R51, 0x20, RZ, 0x3c, !PT ;
 Instr 389 @ 0x1850 (6224) - CS2R R68, SRZ ;
 Instr 390 @ 0x1860 (6240) - UISETP.NE.AND UP2, UPT, UR12, UR9, UPT ;
 Instr 391 @ 0x1870 (6256) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 392 @ 0x1880 (6272) - CS2R R70, SRZ ;
 Instr 393 @ 0x1890 (6288) - CS2R R58, SRZ ;
 Instr 394 @ 0x18a0 (6304) - CS2R R60, SRZ ;
 Instr 395 @ 0x18b0 (6320) - P2R R57, PR, RZ, 0x10 ;
 Instr 396 @ 0x18c0 (6336) - IMAD.U32 R114, RZ, RZ, UR4 ;
 Instr 397 @ 0x18d0 (6352) - LDSM.16.M88.2 R2, [R53] ;
 Instr 398 @ 0x18e0 (6368) - ISETP.GT.AND P4, PT, R97, RZ, PT ;
 Instr 399 @ 0x18f0 (6384) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 400 @ 0x1900 (6400) - IMAD.U32 R115, RZ, RZ, UR5 ;
 Instr 401 @ 0x1910 (6416) - UIADD3 UR9, UR9, 0x1, URZ ;
 Instr 402 @ 0x1920 (6432) - P2R R100, PR, RZ, 0x10 ;
 Instr 403 @ 0x1930 (6448) - UISETP.NE.AND UP1, UPT, UR8, UR13, UPT ;
 Instr 404 @ 0x1940 (6464) - SEL R56, R56, RZ, P4 ;
 Instr 405 @ 0x1950 (6480) - USEL UR9, UR9, URZ, UP2 ;
 Instr 406 @ 0x1960 (6496) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 407 @ 0x1970 (6512) - ULDC UR16, c[0x0][0x3f4] ;
 Instr 408 @ 0x1980 (6528) - R2P PR, R56, 0xf ;
 Instr 409 @ 0x1990 (6544) - UIMAD.WIDE.U32 UR16, UR9, UR16, URZ ;
 Instr 410 @ 0x19a0 (6560) - SEL R98, R98, RZ, P4 ;
 Instr 411 @ 0x19b0 (6576) - UMOV UR14, UR9 ;
 Instr 412 @ 0x19c0 (6592) - LDSM.16.M88.2 R36, [R54+0x2000] ;
 Instr 413 @ 0x19d0 (6608) - ISETP.NE.AND P4, PT, R57, RZ, PT ;
 Instr 414 @ 0x19e0 (6624) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 415 @ 0x19f0 (6640) - CS2R R56, SRZ ;
 Instr 416 @ 0x1a00 (6656) - @UP1 USHF.R.U32.HI UR14, URZ, UR10, UR17 ;
 Instr 417 @ 0x1a10 (6672) - UMOV UR15, URZ ;
 Instr 418 @ 0x1a20 (6688) - @P0 LDG.E.128.SYS R80, [R110.64+UR6] ;
 Instr 419 @ 0x1a30 (6704) - @UP1 UIADD3 UR16, -UR14, URZ, URZ ;
 Instr 420 @ 0x1a40 (6720) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 421 @ 0x1a50 (6736) - ULDC UR10, c[0x0][0x1c4] ;
 Instr 422 @ 0x1a60 (6752) - @P1 LDG.E.128.SYS R84, [R108.64+UR6] ;
 Instr 423 @ 0x1a70 (6768) - UMOV UR17, URZ ;
 Instr 424 @ 0x1a80 (6784) - UISETP.NE.AND UP0, UPT, UR8, UR10, UPT ;
 Instr 425 @ 0x1a90 (6800) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 426 @ 0x1aa0 (6816) - LDSM.16.M88.2 R38, [R54+0x3000] ;
 Instr 427 @ 0x1ab0 (6832) - @UP1 UIMAD UR17, UR16, UR13, UR9 ;
 Instr 428 @ 0x1ac0 (6848) - @P2 LDG.E.128.SYS R72, [R106.64+UR6] ;
 Instr 429 @ 0x1ad0 (6864) - UIMAD.WIDE.U32 UR18, UR17, UR11, URZ ;
 Instr 430 @ 0x1ae0 (6880) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 431 @ 0x1af0 (6896) - UMOV UR16, UR17 ;
 Instr 432 @ 0x1b00 (6912) - LDSM.16.M88.2 R40, [R53+0x1000] ;
 Instr 433 @ 0x1b10 (6928) - LOP3.LUT R54, R51, 0x30, RZ, 0x3c, !PT ;
 Instr 434 @ 0x1b20 (6944) - ULDC UR11, c[0x0][0x400] ;
 Instr 435 @ 0x1b30 (6960) - @P3 LDG.E.128.SYS R76, [R104.64+UR6] ;
 Instr 436 @ 0x1b40 (6976) - R2P PR, R98, 0xf ;
 Instr 437 @ 0x1b50 (6992) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 438 @ 0x1b60 (7008) - @UP0 UMOV UR13, UR19 ;
 Instr 439 @ 0x1b70 (7024) - LOP3.LUT R53, R52, 0x30, RZ, 0x3c, !PT ;
 Instr 440 @ 0x1b80 (7040) - @UP0 USHF.R.U32.HI UR16, URZ, UR11, UR13 ;
 Instr 441 @ 0x1b90 (7056) - UISETP.NE.AND UP1, UPT, UR17, URZ, UPT ;
 Instr 442 @ 0x1ba0 (7072) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 443 @ 0x1bb0 (7088) - @UP0 UIADD3 UR11, -UR16, URZ, URZ ;
 Instr 444 @ 0x1bc0 (7104) - @P0 LDG.E.128.SYS R64, [R102.64+UR4] ;
 Instr 445 @ 0x1bd0 (7120) - @P3 IADD3 R62, R94.reuse, R55, R94 ;
 Instr 446 @ 0x1be0 (7136) - @P2 IMAD.IADD R63, R94, 0x1, R55 ;
 Instr 447 @ 0x1bf0 (7152) - @UP0 UIMAD UR15, UR11, UR10, UR17 ;
 Instr 448 @ 0x1c00 (7168) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 449 @ 0x1c10 (7184) - LDSM.16.M88.2 R42, [R53] ;
 Instr 450 @ 0x1c20 (7200) - UISETP.NE.AND UP0, UPT, UR15, URZ, UPT ;
 Instr 451 @ 0x1c30 (7216) - @P2 IMAD.WIDE R112, R63, 0x2, R114.reuse ;
 Instr 452 @ 0x1c40 (7232) - USEL UR11, URZ, 0x1, UP2 ;
 Instr 453 @ 0x1c50 (7248) - UMOV UR10, 0x8 ;
 Instr 454 @ 0x1c60 (7264) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 455 @ 0x1c70 (7280) - ULDC UR13, c[0x2][0x0] ;
 Instr 456 @ 0x1c80 (7296) - @P3 IMAD.WIDE R116, R62, 0x2, R114.reuse ;
 Instr 457 @ 0x1c90 (7312) - UIMAD UR13, UR11, UR10, UR13 ;
 Instr 458 @ 0x1ca0 (7328) - CS2R R62, SRZ ;
 Instr 459 @ 0x1cb0 (7344) - @P2 LDG.E.128.SYS R56, [R112] ;
 Instr 460 @ 0x1cc0 (7360) - @P1 IMAD.WIDE R114, R55, 0x2, R114 ;
 Instr 461 @ 0x1cd0 (7376) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 462 @ 0x1ce0 (7392) - LDSM.16.M88.2 R44, [R54+0x2000] ;
 Instr 463 @ 0x1cf0 (7408) - @P1 LDG.E.128.SYS R68, [R114] ;
 Instr 464 @ 0x1d00 (7424) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 465 @ 0x1d10 (7440) - @P3 LDG.E.128.SYS R60, [R116] ;
 Instr 466 @ 0x1d20 (7456) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 467 @ 0x1d30 (7472) - LDSM.16.M88.2 R46, [R54+0x3000] ;
 Instr 468 @ 0x1d40 (7488) - LDSM.16.M88.2 R48, [R53+0x1000] ;
 Instr 469 @ 0x1d50 (7504) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 470 @ 0x1d60 (7520) - LOP3.LUT R54, R51.reuse, 0x40, RZ, 0x3c, !PT ;
 Instr 471 @ 0x1d70 (7536) - LOP3.LUT R53, R52.reuse, 0x40, RZ, 0x3c, !PT ;
 Instr 472 @ 0x1d80 (7552) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 473 @ 0x1d90 (7568) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 474 @ 0x1da0 (7584) - LDSM.16.M88.2 R2, [R53] ;
 Instr 475 @ 0x1db0 (7600) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 476 @ 0x1dc0 (7616) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 477 @ 0x1dd0 (7632) - LDSM.16.M88.2 R36, [R54+0x2000] ;
 Instr 478 @ 0x1de0 (7648) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 479 @ 0x1df0 (7664) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 480 @ 0x1e00 (7680) - LDSM.16.M88.2 R38, [R54+0x3000] ;
 Instr 481 @ 0x1e10 (7696) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 482 @ 0x1e20 (7712) - LDSM.16.M88.2 R40, [R53+0x1000] ;
 Instr 483 @ 0x1e30 (7728) - LOP3.LUT R54, R51, 0x50, RZ, 0x3c, !PT ;
 Instr 484 @ 0x1e40 (7744) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 485 @ 0x1e50 (7760) - LOP3.LUT R53, R52, 0x50, RZ, 0x3c, !PT ;
 Instr 486 @ 0x1e60 (7776) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 487 @ 0x1e70 (7792) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 488 @ 0x1e80 (7808) - LDSM.16.M88.2 R42, [R53] ;
 Instr 489 @ 0x1e90 (7824) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 490 @ 0x1ea0 (7840) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 491 @ 0x1eb0 (7856) - LDSM.16.M88.2 R44, [R54+0x2000] ;
 Instr 492 @ 0x1ec0 (7872) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 493 @ 0x1ed0 (7888) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 494 @ 0x1ee0 (7904) - LDSM.16.M88.2 R46, [R54+0x3000] ;
 Instr 495 @ 0x1ef0 (7920) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 496 @ 0x1f00 (7936) - LDSM.16.M88.2 R48, [R53+0x1000] ;
 Instr 497 @ 0x1f10 (7952) - LOP3.LUT R54, R51.reuse, 0x60, RZ, 0x3c, !PT ;
 Instr 498 @ 0x1f20 (7968) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 499 @ 0x1f30 (7984) - LOP3.LUT R53, R52.reuse, 0x60, RZ, 0x3c, !PT ;
 Instr 500 @ 0x1f40 (8000) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 501 @ 0x1f50 (8016) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 502 @ 0x1f60 (8032) - LDSM.16.M88.2 R2, [R53] ;
 Instr 503 @ 0x1f70 (8048) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 504 @ 0x1f80 (8064) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 505 @ 0x1f90 (8080) - LDSM.16.M88.2 R36, [R54+0x2000] ;
 Instr 506 @ 0x1fa0 (8096) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 507 @ 0x1fb0 (8112) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 508 @ 0x1fc0 (8128) - LDSM.16.M88.2 R38, [R54+0x3000] ;
 Instr 509 @ 0x1fd0 (8144) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 510 @ 0x1fe0 (8160) - LDSM.16.M88.2 R40, [R53+0x1000] ;
 Instr 511 @ 0x1ff0 (8176) - LOP3.LUT R54, R51, 0x70, RZ, 0x3c, !PT ;
 Instr 512 @ 0x2000 (8192) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 513 @ 0x2010 (8208) - LOP3.LUT R53, R52, 0x70, RZ, 0x3c, !PT ;
 Instr 514 @ 0x2020 (8224) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 515 @ 0x2030 (8240) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 516 @ 0x2040 (8256) - LDSM.16.M88.2 R42, [R53] ;
 Instr 517 @ 0x2050 (8272) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 518 @ 0x2060 (8288) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 519 @ 0x2070 (8304) - LDSM.16.M88.2 R44, [R54+0x2000] ;
 Instr 520 @ 0x2080 (8320) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 521 @ 0x2090 (8336) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 522 @ 0x20a0 (8352) - LDSM.16.M88.2 R46, [R54+0x3000] ;
 Instr 523 @ 0x20b0 (8368) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 524 @ 0x20c0 (8384) - LDSM.16.M88.2 R48, [R53+0x1000] ;
 Instr 525 @ 0x20d0 (8400) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 526 @ 0x20e0 (8416) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 527 @ 0x20f0 (8432) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 528 @ 0x2100 (8448) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 529 @ 0x2110 (8464) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 530 @ 0x2120 (8480) - STS.128 [R90.X16], R80 ;
 Instr 531 @ 0x2130 (8496) - STS.128 [R90.X16+0x800], R84 ;
 Instr 532 @ 0x2140 (8512) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 533 @ 0x2150 (8528) - STS.128 [R90.X16+0x1000], R72 ;
 Instr 534 @ 0x2160 (8544) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 535 @ 0x2170 (8560) - STS.128 [R90.X16+0x1800], R76 ;
 Instr 536 @ 0x2180 (8576) - STS.128 [R90.X16+0x2000], R64 ;
 Instr 537 @ 0x2190 (8592) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 538 @ 0x21a0 (8608) - IMAD.U32 R73, RZ, RZ, UR16 ;
 Instr 539 @ 0x21b0 (8624) - STS.128 [R90.X16+0x2800], R68 ;
 Instr 540 @ 0x21c0 (8640) - IMAD.U32 R72, RZ, RZ, UR14 ;
 Instr 541 @ 0x21d0 (8656) - USEL UR14, URZ, 0x1, UP0 ;
 Instr 542 @ 0x21e0 (8672) - UISETP.NE.AND UP0, UPT, UR9, URZ, UPT ;
 Instr 543 @ 0x21f0 (8688) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 544 @ 0x2200 (8704) - STS.128 [R90.X16+0x3000], R56 ;
 Instr 545 @ 0x2210 (8720) - USEL UR14, UR14, 0x2, UP1 ;
 Instr 546 @ 0x2220 (8736) - STS.128 [R90.X16+0x3800], R60 ;
 Instr 547 @ 0x2230 (8752) - USEL UR10, UR14, 0x3, UP0 ;
 Instr 548 @ 0x2240 (8768) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 549 @ 0x2250 (8784) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 550 @ 0x2260 (8800) - USHF.L.U32 UR10, UR10, 0x3, URZ ;
 Instr 551 @ 0x2270 (8816) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 552 @ 0x2280 (8832) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 553 @ 0x2290 (8848) - LDS.U.128 R64, [R99.X16+0x4100] ;
 Instr 554 @ 0x22a0 (8864) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 555 @ 0x22b0 (8880) - ULDC.64 UR10, c[0x0][UR10+0x420] ;
 Instr 556 @ 0x22c0 (8896) - UIADD3 UR6, UP1, UR10, UR6, URZ ;
 Instr 557 @ 0x22d0 (8912) - LDS.U.128 R60, [R99.X16+0x4200] ;
 Instr 558 @ 0x22e0 (8928) - UIADD3.X UR7, UR11, UR7, URZ, UP1, !UPT ;
 Instr 559 @ 0x22f0 (8944) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 560 @ 0x2300 (8960) - LDS.U.128 R68, [R99.X16+0x4000] ;
 Instr 561 @ 0x2310 (8976) - LDS.U.128 R56, [R99.X16+0x4300] ;
 Instr 562 @ 0x2320 (8992) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 563 @ 0x2330 (9008) - LDSM.16.M88.2 R2, [R52] ;
 Instr 564 @ 0x2340 (9024) - LDSM.16.M88.2 R40, [R52+0x1000] ;
 Instr 565 @ 0x2350 (9040) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 566 @ 0x2360 (9056) - LDSM.16.M88.2 R36, [R51+0x2000] ;
 Instr 567 @ 0x2370 (9072) - LDSM.16.M88.2 R38, [R51+0x3000] ;
 Instr 568 @ 0x2380 (9088) - IMAD R66, R73.reuse, c[0x0][0x284], R66 ;
 Instr 569 @ 0x2390 (9104) - IMAD R65, R72, c[0x0][0x280], R65 ;
 Instr 570 @ 0x23a0 (9120) - ISETP.GE.U32.AND P1, PT, R66, c[0x0][0x1a0], PT ;
 Instr 571 @ 0x23b0 (9136) - IMAD R62, R73, c[0x0][0x284], R62 ;
 Instr 572 @ 0x23c0 (9152) - IMAD.U32 R60, RZ, RZ, UR15 ;
 Instr 573 @ 0x23d0 (9168) - ISETP.LT.U32.AND P1, PT, R65, c[0x0][0x19c], !P1 ;
 Instr 574 @ 0x23e0 (9184) - IMAD R70, R73.reuse, c[0x0][0x284], R70 ;
 Instr 575 @ 0x23f0 (9200) - ISETP.GE.U32.AND P2, PT, R62, c[0x0][0x1a0], PT ;
 Instr 576 @ 0x2400 (9216) - IMAD R61, R72.reuse, c[0x0][0x280], R61 ;
 Instr 577 @ 0x2410 (9232) - ULDC.64 UR14, c[0x0][UR13+0x160] ;
 Instr 578 @ 0x2420 (9248) - IMAD R69, R72, c[0x0][0x280], R69 ;
 Instr 579 @ 0x2430 (9264) - ISETP.GE.U32.AND P0, PT, R70, c[0x0][0x1a0], PT ;
 Instr 580 @ 0x2440 (9280) - IMAD R58, R73, c[0x0][0x284], R58 ;
 Instr 581 @ 0x2450 (9296) - ISETP.LT.U32.AND P2, PT, R61, c[0x0][0x19c], !P2 ;
 Instr 582 @ 0x2460 (9312) - IMAD R57, R72, c[0x0][0x280], R57 ;
 Instr 583 @ 0x2470 (9328) - ISETP.LT.U32.AND P0, PT, R69, c[0x0][0x19c], !P0 ;
 Instr 584 @ 0x2480 (9344) - IMAD R67, R60, c[0x0][0x288], R67 ;
 Instr 585 @ 0x2490 (9360) - ISETP.GE.U32.AND P3, PT, R58, c[0x0][0x1a0], PT ;
 Instr 586 @ 0x24a0 (9376) - IMAD R63, R60.reuse, c[0x0][0x288], R63 ;
 Instr 587 @ 0x24b0 (9392) - UIADD3 UR4, UP0, UR14, UR4, URZ ;
 Instr 588 @ 0x24c0 (9408) - IMAD R71, R60.reuse, c[0x0][0x288], R71 ;
 Instr 589 @ 0x24d0 (9424) - ISETP.LT.U32.AND P3, PT, R57, c[0x0][0x19c], !P3 ;
 Instr 590 @ 0x24e0 (9440) - IMAD R59, R60, c[0x0][0x288], R59 ;
 Instr 591 @ 0x24f0 (9456) - ISETP.LT.U32.AND P1, PT, R67, c[0x0][0x1a4], P1 ;
 Instr 592 @ 0x2500 (9472) - UIADD3.X UR5, UR15, UR5, URZ, UP0, !UPT ;
 Instr 593 @ 0x2510 (9488) - ISETP.LT.U32.AND P2, PT, R63, c[0x0][0x1a4], P2 ;
 Instr 594 @ 0x2520 (9504) - ISETP.LT.U32.AND P0, PT, R71, c[0x0][0x1a4], P0 ;
 Instr 595 @ 0x2530 (9520) - ISETP.LT.U32.AND P3, PT, R59, c[0x0][0x1a4], P3 ;
 Instr 596 @ 0x2540 (9536) - P2R R56, PR, RZ, 0xf ;
 Instr 597 @ 0x2550 (9552) - ISETP.NE.AND P3, PT, R100, RZ, PT ;
 Instr 598 @ 0x2560 (9568) - ISETP.GT.AND P0, PT, R97, c[0x0][0x458], PT ;
 Instr 599 @ 0x2570 (9584) - LOP3.LUT R56, R95, R56, RZ, 0xc0, !PT ;
 Instr 600 @ 0x2580 (9600) - ISETP.LT.OR P0, PT, R96, R91, P0 ;
 Instr 601 @ 0x2590 (9616) - IADD3 R97, R97, -0x1, RZ ;
 Instr 602 @ 0x25a0 (9632) - SEL R98, R98, RZ, P0 ;
 Instr 603 @ 0x25b0 (9648) - SEL R56, R56, RZ, P0 ;
 Instr 604 @ 0x25c0 (9664) - @P3 BRA 0x16f0 ;
Basic block id 13 - num instructions 37
 Instr 605 @ 0x25d0 (9680) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
 Instr 606 @ 0x25e0 (9696) - @P1 IMAD.MOV.U32 R44, RZ, RZ, c[0x0][0x188] ;
 Instr 607 @ 0x25f0 (9712) - @P1 IMAD.MOV.U32 R45, RZ, RZ, c[0x0][0x18c] ;
 Instr 608 @ 0x2600 (9728) - @P1 IMAD.MOV.U32 R42, RZ, RZ, c[0x0][0x190] ;
 Instr 609 @ 0x2610 (9744) - @P1 IMAD.MOV.U32 R43, RZ, RZ, c[0x0][0x194] ;
 Instr 610 @ 0x2620 (9760) - @P1 LDG.E.SYS R0, [R44] ;
 Instr 611 @ 0x2630 (9776) - @P1 LDG.E.SYS R61, [R42] ;
 Instr 612 @ 0x2640 (9792) - ULDC.U8 UR4, c[0x0][0x32c] ;
 Instr 613 @ 0x2650 (9808) - SHF.L.U32 R3, R92, 0x3, RZ ;
 Instr 614 @ 0x2660 (9824) - BMOV.32.CLEAR RZ, B0 ;
 Instr 615 @ 0x2670 (9840) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 616 @ 0x2680 (9856) - BSSY B0, 0x28f0 ;
 Instr 617 @ 0x2690 (9872) - SHF.R.S32.HI R37, RZ, 0x1f, R92 ;
 Instr 618 @ 0x26a0 (9888) - LOP3.LUT R39, R92.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 619 @ 0x26b0 (9904) - LOP3.LUT R36, R92.reuse, 0x1e, RZ, 0xc0, !PT ;
 Instr 620 @ 0x26c0 (9920) - LOP3.LUT R2, R92, 0x40, RZ, 0xc0, !PT ;
 Instr 621 @ 0x26d0 (9936) - LOP3.LUT R3, R3, 0x8, RZ, 0xc0, !PT ;
 Instr 622 @ 0x26e0 (9952) - @P0 S2R R40, SR_CTAID.Z ;
 Instr 623 @ 0x26f0 (9968) - LEA.HI R39, R36, R39, RZ, 0x1f ;
 Instr 624 @ 0x2700 (9984) - IMAD.MOV.U32 R36, RZ, RZ, c[0x0][0x180] ;
 Instr 625 @ 0x2710 (10000) - LEA.HI R38, R37, R92, RZ, 0x3 ;
 Instr 626 @ 0x2720 (10016) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x184] ;
 Instr 627 @ 0x2730 (10032) - LEA.HI R2, R2, R3, RZ, 0x1f ;
 Instr 628 @ 0x2740 (10048) - @P0 IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 629 @ 0x2750 (10064) - LOP3.LUT R57, R38, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 630 @ 0x2760 (10080) - SHF.R.S32.HI R38, RZ, 0x3, R38 ;
 Instr 631 @ 0x2770 (10096) - IMAD R2, R39, 0x90, R2 ;
 Instr 632 @ 0x2780 (10112) - IADD3 R57, -R57, R92, RZ ;
 Instr 633 @ 0x2790 (10128) - IMAD R56, R57, 0x8, R88 ;
 Instr 634 @ 0x27a0 (10144) - IMAD R57, R38, 0x12, R57 ;
 Instr 635 @ 0x27b0 (10160) - @P0 IMAD R40, R40, c[0x0][0x33c], RZ ;
 Instr 636 @ 0x27c0 (10176) - @P0 IMAD.WIDE R36, R40, R3, c[0x0][0x180] ;
 Instr 637 @ 0x27d0 (10192) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x320], PT ;
 Instr 638 @ 0x27e0 (10208) - IMAD R3, R89, 0x40, R38 ;
 Instr 639 @ 0x27f0 (10224) - @!P1 MOV R0, c[0x0][0x1e0] ;
 Instr 640 @ 0x2800 (10240) - @!P1 IMAD.MOV.U32 R61, RZ, RZ, c[0x0][0x1f0] ;
 Instr 641 @ 0x2810 (10256) - @!P0 BRA 0x28c0 ;
Basic block id 14 - num instructions 4
 Instr 642 @ 0x2820 (10272) - ISETP.GE.AND P0, PT, R56, c[0x0][0x320], PT ;
 Instr 643 @ 0x2830 (10288) - CS2R R52, SRZ ;
 Instr 644 @ 0x2840 (10304) - CS2R R54, SRZ ;
 Instr 645 @ 0x2850 (10320) - @P0 BRA 0x28e0 ;
Basic block id 15 - num instructions 6
 Instr 646 @ 0x2860 (10336) - SHF.R.S32.HI R39, RZ, 0x1f, R56 ;
 Instr 647 @ 0x2870 (10352) - LEA.HI R39, R39, R56, RZ, 0x3 ;
 Instr 648 @ 0x2880 (10368) - SHF.R.S32.HI R39, RZ, 0x3, R39 ;
 Instr 649 @ 0x2890 (10384) - IMAD.WIDE R36, R39, 0x10, R36 ;
 Instr 650 @ 0x28a0 (10400) - LDG.E.128.SYS R52, [R36] ;
 Instr 651 @ 0x28b0 (10416) - BRA 0x28e0 ;
Basic block id 16 - num instructions 2
 Instr 652 @ 0x28c0 (10432) - CS2R R52, SRZ ;
 Instr 653 @ 0x28d0 (10448) - CS2R R54, SRZ ;
Basic block id 17 - num instructions 5
 Instr 654 @ 0x28e0 (10464) - BSYNC B0 ;
 Instr 655 @ 0x28f0 (10480) - ISETP.NE.AND P2, PT, RZ, UR4, PT ;
 Instr 656 @ 0x2900 (10496) - ISETP.LT.AND P1, PT, RZ, c[0x0][0x338], P2 ;
 Instr 657 @ 0x2910 (10512) - @!P1 ISETP.NE.AND P0, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 658 @ 0x2920 (10528) - @!P1 BRA 0x29f0 ;
Basic block id 18 - num instructions 12
 Instr 659 @ 0x2930 (10544) - S2R R37, SR_CTAID.Z ;
 Instr 660 @ 0x2940 (10560) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 661 @ 0x2950 (10576) - IMAD.MOV.U32 R38, RZ, RZ, 0x4 ;
 Instr 662 @ 0x2960 (10592) - IMAD.MOV.U32 R61, RZ, RZ, RZ ;
 Instr 663 @ 0x2970 (10608) - IMAD R37, R37, c[0x0][0x338], RZ ;
 Instr 664 @ 0x2980 (10624) - IMAD.WIDE R38, R37.reuse, R38, c[0x0][0x188] ;
 Instr 665 @ 0x2990 (10640) - SHF.R.S32.HI R0, RZ, 0x1f, R37 ;
 Instr 666 @ 0x29a0 (10656) - @P1 LEA R36, P0, R37, c[0x0][0x190], 0x2 ;
 Instr 667 @ 0x29b0 (10672) - @P1 LEA.HI.X R37, R37, c[0x0][0x194], R0, 0x2, P0 ;
 Instr 668 @ 0x29c0 (10688) - LDG.E.SYS R0, [R38] ;
 Instr 669 @ 0x29d0 (10704) - @P1 LDG.E.SYS R61, [R36] ;
 Instr 670 @ 0x29e0 (10720) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x3a0], P1 ;
Basic block id 19 - num instructions 13
 Instr 671 @ 0x29f0 (10736) - S2R R36, SR_CTAID.Z ;
 Instr 672 @ 0x2a00 (10752) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 673 @ 0x2a10 (10768) - FSETP.NEU.OR P0, PT, R61, RZ, P0 ;
 Instr 674 @ 0x2a20 (10784) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x290] ;
 Instr 675 @ 0x2a30 (10800) - IMAD.MOV.U32 R60, RZ, RZ, c[0x0][0x34c] ;
 Instr 676 @ 0x2a40 (10816) - S2R R38, SR_CTAID.Y ;
 Instr 677 @ 0x2a50 (10832) - IADD3 R39, R37, -0x1, RZ ;
 Instr 678 @ 0x2a60 (10848) - IMAD R60, R60, c[0x0][0x350], RZ ;
 Instr 679 @ 0x2a70 (10864) - S2R R59, SR_CTAID.X ;
 Instr 680 @ 0x2a80 (10880) - ISETP.EQ.OR P2, PT, R36, R39, P2 ;
 Instr 681 @ 0x2a90 (10896) - P2R R58, PR, RZ, 0x4 ;
 Instr 682 @ 0x2aa0 (10912) - IMAD R59, R38, c[0x0][0x34c], R59 ;
 Instr 683 @ 0x2ab0 (10928) - @P0 BRA 0x53a0 ;
Basic block id 20 - num instructions 7
 Instr 684 @ 0x2ac0 (10944) - ISETP.NE.AND P0, PT, R37, 0x1, PT ;
 Instr 685 @ 0x2ad0 (10960) - UMOV UR9, 0x1 ;
 Instr 686 @ 0x2ae0 (10976) - IMAD.MOV.U32 R61, RZ, RZ, RZ ;
 Instr 687 @ 0x2af0 (10992) - MOV R62, RZ ;
 Instr 688 @ 0x2b00 (11008) - CS2R R68, SRZ ;
 Instr 689 @ 0x2b10 (11024) - CS2R R66, SRZ ;
 Instr 690 @ 0x2b20 (11040) - @!P0 BRA 0x30f0 ;
Basic block id 21 - num instructions 5
 Instr 691 @ 0x2b30 (11056) - IMAD.MOV.U32 R38, RZ, RZ, c[0x0][0x298] ;
 Instr 692 @ 0x2b40 (11072) - ISETP.NE.AND P1, PT, R37, c[0x0][0x294], PT ;
 Instr 693 @ 0x2b50 (11088) - IMAD.MOV.U32 R62, RZ, RZ, R36 ;
 Instr 694 @ 0x2b60 (11104) - ISETP.EQ.AND P0, PT, R38, 0x2, PT ;
 Instr 695 @ 0x2b70 (11120) - @!P1 BRA P0, 0x30f0 ;
Basic block id 22 - num instructions 4
 Instr 696 @ 0x2b80 (11136) - ISETP.EQ.AND P0, PT, R38, 0x1, PT ;
 Instr 697 @ 0x2b90 (11152) - MOV R40, 0x4 ;
 Instr 698 @ 0x2ba0 (11168) - IMAD.WIDE R66, R59, R40, c[0x0][0x2c0] ;
 Instr 699 @ 0x2bb0 (11184) - @P2 BRA P0, 0x2f30 ;
Basic block id 23 - num instructions 35
 Instr 700 @ 0x2bc0 (11200) - IABS R39, c[0x0][0x294] ;
 Instr 701 @ 0x2bd0 (11216) - BMOV.32.CLEAR RZ, B0 ;
 Instr 702 @ 0x2be0 (11232) - BSSY B0, 0x2ea0 ;
 Instr 703 @ 0x2bf0 (11248) - I2F.RP R44, R39 ;
 Instr 704 @ 0x2c00 (11264) - MUFU.RCP R42, R44 ;
 Instr 705 @ 0x2c10 (11280) - IADD3 R42, R42, 0xffffffe, RZ ;
 Instr 706 @ 0x2c20 (11296) - F2I.FTZ.U32.TRUNC.NTZ R43, R42 ;
 Instr 707 @ 0x2c30 (11312) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 708 @ 0x2c40 (11328) - IMAD.MOV R37, RZ, RZ, -R43.reuse ;
 Instr 709 @ 0x2c50 (11344) - IMAD R38, R37, R39, RZ ;
 Instr 710 @ 0x2c60 (11360) - IABS R37, R36 ;
 Instr 711 @ 0x2c70 (11376) - IMAD.HI.U32 R38, R43, R38, R42 ;
 Instr 712 @ 0x2c80 (11392) - IMAD.HI.U32 R41, R38, R37, RZ ;
 Instr 713 @ 0x2c90 (11408) - IMAD.MOV R38, RZ, RZ, -R41 ;
 Instr 714 @ 0x2ca0 (11424) - IMAD R38, R39.reuse, R38, R37 ;
 Instr 715 @ 0x2cb0 (11440) - LOP3.LUT R37, R36, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 716 @ 0x2cc0 (11456) - ISETP.GT.U32.AND P1, PT, R39, R38, PT ;
 Instr 717 @ 0x2cd0 (11472) - ISETP.GE.AND P0, PT, R37, RZ, PT ;
 Instr 718 @ 0x2ce0 (11488) - @!P1 IMAD.IADD R38, R38, 0x1, -R39 ;
 Instr 719 @ 0x2cf0 (11504) - @!P1 IADD3 R41, R41, 0x1, RZ ;
 Instr 720 @ 0x2d00 (11520) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x294], PT ;
 Instr 721 @ 0x2d10 (11536) - ISETP.GE.U32.AND P2, PT, R38, R39, PT ;
 Instr 722 @ 0x2d20 (11552) - @P2 IADD3 R41, R41, 0x1, RZ ;
 Instr 723 @ 0x2d30 (11568) - IMAD.MOV.U32 R37, RZ, RZ, R41 ;
 Instr 724 @ 0x2d40 (11584) - @!P0 IMAD.MOV R37, RZ, RZ, -R37 ;
 Instr 725 @ 0x2d50 (11600) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
 Instr 726 @ 0x2d60 (11616) - @!P1 LOP3.LUT R37, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 727 @ 0x2d70 (11632) - ISETP.EQ.OR P0, PT, R37.reuse, RZ, P0 ;
 Instr 728 @ 0x2d80 (11648) - IMAD.MOV R39, RZ, RZ, -R37 ;
 Instr 729 @ 0x2d90 (11664) - ISETP.NE.AND P1, PT, R37, RZ, PT ;
 Instr 730 @ 0x2da0 (11680) - IMAD R62, R39, c[0x0][0x294], R36 ;
 Instr 731 @ 0x2db0 (11696) - SEL R61, RZ, 0x1, !P1 ;
 Instr 732 @ 0x2dc0 (11712) - IMAD R69, R60, R62, R59 ;
 Instr 733 @ 0x2dd0 (11728) - IMAD.WIDE R68, R69, R40, c[0x0][0x2b8] ;
 Instr 734 @ 0x2de0 (11744) - @P0 BRA 0x2e90 ;
Basic block id 24 - num instructions 4
 Instr 735 @ 0x2df0 (11760) - LDG.E.STRONG.GPU R36, [R68] ;
 Instr 736 @ 0x2e00 (11776) - ISETP.NE.AND P0, PT, R36, R37, PT ;
 Instr 737 @ 0x2e10 (11792) - CCTL.IVALL ;
 Instr 738 @ 0x2e20 (11808) - @!P0 BRA 0x2e90 ;
Basic block id 25 - num instructions 5
 Instr 739 @ 0x2e30 (11824) - VOTE.ANY R36, PT, PT ;
 Instr 740 @ 0x2e40 (11840) - YIELD ;
 Instr 741 @ 0x2e50 (11856) - VOTEU.ANY UR4, UPT, PT ;
 Instr 742 @ 0x2e60 (11872) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 743 @ 0x2e70 (11888) - @!P0 BRA.U 0x2df0 ;
Basic block id 26 - num instructions 1
 Instr 744 @ 0x2e80 (11904) - BRA 0x2e30 ;
Basic block id 27 - num instructions 2
 Instr 745 @ 0x2e90 (11920) - BSYNC B0 ;
 Instr 746 @ 0x2ea0 (11936) - BRA.CONV 0x2ee0 ;
Basic block id 28 - num instructions 3
 Instr 747 @ 0x2eb0 (11952) - MOV R37, 0xffffffff ;
 Instr 748 @ 0x2ec0 (11968) - MOV R36, 0x2ee0 ;
 Instr 749 @ 0x2ed0 (11984) - CALL.REL.NOINC 0x81c0 ;
Basic block id 29 - num instructions 5
 Instr 750 @ 0x2ee0 (12000) - NOP ;
 Instr 751 @ 0x2ef0 (12016) - WARPSYNC 0xffffffff ;
 Instr 752 @ 0x2f00 (12032) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 753 @ 0x2f10 (12048) - UMOV UR9, URZ ;
 Instr 754 @ 0x2f20 (12064) - BRA 0x30f0 ;
Basic block id 30 - num instructions 8
 Instr 755 @ 0x2f30 (12080) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
 Instr 756 @ 0x2f40 (12096) - IMAD.MOV.U32 R61, RZ, RZ, c[0x0][0x294] ;
 Instr 757 @ 0x2f50 (12112) - BMOV.32.CLEAR RZ, B0 ;
 Instr 758 @ 0x2f60 (12128) - BSSY B0, 0x3060 ;
 Instr 759 @ 0x2f70 (12144) - ISETP.EQ.OR P0, PT, R39, RZ, P0 ;
 Instr 760 @ 0x2f80 (12160) - IADD3 R61, R61, -0x1, RZ ;
 Instr 761 @ 0x2f90 (12176) - @P1 IMAD.MOV R61, RZ, RZ, c[0x0][0x294] ;
 Instr 762 @ 0x2fa0 (12192) - @P0 BRA 0x3050 ;
Basic block id 31 - num instructions 4
 Instr 763 @ 0x2fb0 (12208) - LDG.E.STRONG.GPU R36, [R66] ;
 Instr 764 @ 0x2fc0 (12224) - ISETP.NE.AND P0, PT, R36, R39, PT ;
 Instr 765 @ 0x2fd0 (12240) - CCTL.IVALL ;
 Instr 766 @ 0x2fe0 (12256) - @!P0 BRA 0x3050 ;
Basic block id 32 - num instructions 5
 Instr 767 @ 0x2ff0 (12272) - VOTE.ANY R36, PT, PT ;
 Instr 768 @ 0x3000 (12288) - YIELD ;
 Instr 769 @ 0x3010 (12304) - VOTEU.ANY UR4, UPT, PT ;
 Instr 770 @ 0x3020 (12320) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 771 @ 0x3030 (12336) - @!P0 BRA.U 0x2fb0 ;
Basic block id 33 - num instructions 1
 Instr 772 @ 0x3040 (12352) - BRA 0x2ff0 ;
Basic block id 34 - num instructions 2
 Instr 773 @ 0x3050 (12368) - BSYNC B0 ;
 Instr 774 @ 0x3060 (12384) - BRA.CONV 0x30a0 ;
Basic block id 35 - num instructions 3
 Instr 775 @ 0x3070 (12400) - MOV R37, 0xffffffff ;
 Instr 776 @ 0x3080 (12416) - MOV R36, 0x30a0 ;
 Instr 777 @ 0x3090 (12432) - CALL.REL.NOINC 0x81c0 ;
Basic block id 36 - num instructions 5
 Instr 778 @ 0x30a0 (12448) - NOP ;
 Instr 779 @ 0x30b0 (12464) - WARPSYNC 0xffffffff ;
 Instr 780 @ 0x30c0 (12480) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 781 @ 0x30d0 (12496) - MOV R62, RZ ;
 Instr 782 @ 0x30e0 (12512) - UMOV UR9, URZ ;
Basic block id 37 - num instructions 12
 Instr 783 @ 0x30f0 (12528) - MOV R36, c[0x0][0x290] ;
 Instr 784 @ 0x3100 (12544) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x298] ;
 Instr 785 @ 0x3110 (12560) - SHF.R.S32.HI R65, RZ, 0x1f, R62 ;
 Instr 786 @ 0x3120 (12576) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 787 @ 0x3130 (12592) - ISETP.GE.AND P3, PT, R36, 0x2, PT ;
 Instr 788 @ 0x3140 (12608) - ISETP.NE.AND P0, PT, R58, RZ, PT ;
 Instr 789 @ 0x3150 (12624) - IMAD R65, R65, c[0x0][0x2a0], RZ ;
 Instr 790 @ 0x3160 (12640) - ISETP.EQ.AND P0, PT, R37, 0x1, P0 ;
 Instr 791 @ 0x3170 (12656) - IMAD R65, R62.reuse, c[0x0][0x2a4], R65 ;
 Instr 792 @ 0x3180 (12672) - IMAD.WIDE.U32 R62, R62, c[0x0][0x2a0], RZ ;
 Instr 793 @ 0x3190 (12688) - IMAD.IADD R65, R63, 0x1, R65 ;
 Instr 794 @ 0x31a0 (12704) - @!P3 BRA 0x3640 ;
Basic block id 38 - num instructions 5
 Instr 795 @ 0x31b0 (12720) - ISETP.GE.AND P1, PT, R61, 0x1, PT ;
 Instr 796 @ 0x31c0 (12736) - IMAD.SHL.U32 R81, R60, 0x80, RZ ;
 Instr 797 @ 0x31d0 (12752) - IMAD R78, R59, 0x80, R92 ;
 Instr 798 @ 0x31e0 (12768) - SHF.R.S32.HI R79, RZ, 0x1f, R81 ;
 Instr 799 @ 0x31f0 (12784) - @!P1 BRA 0x3520 ;
Basic block id 39 - num instructions 19
 Instr 800 @ 0x3200 (12800) - LEA R70, P1, R81.reuse, R62, 0x4 ;
 Instr 801 @ 0x3210 (12816) - IMAD.SHL.U32 R37, R78, 0x10, RZ ;
 Instr 802 @ 0x3220 (12832) - UMOV UR4, URZ ;
 Instr 803 @ 0x3230 (12848) - IMAD.MOV.U32 R64, RZ, RZ, R62 ;
 Instr 804 @ 0x3240 (12864) - LEA.HI.X R36, R81.reuse, R65, R79, 0x4, P1 ;
 Instr 805 @ 0x3250 (12880) - SHF.R.S32.HI R77, RZ, 0x1f, R37 ;
 Instr 806 @ 0x3260 (12896) - IMAD.WIDE.U32 R74, R81, 0x30, R64 ;
 Instr 807 @ 0x3270 (12912) - IADD3 R70, P2, P1, R70, c[0x0][0x2a8], R37 ;
 Instr 808 @ 0x3280 (12928) - IADD3.X R71, R36, c[0x0][0x2ac], R77, P2, P1 ;
 Instr 809 @ 0x3290 (12944) - LEA R72, P1, R81.reuse, R62, 0x5 ;
 Instr 810 @ 0x32a0 (12960) - LEA.HI.X R36, R81, R65, R79, 0x5, P1 ;
 Instr 811 @ 0x32b0 (12976) - IADD3 R72, P2, P1, R72, c[0x0][0x2a8], R37 ;
 Instr 812 @ 0x32c0 (12992) - IADD3.X R73, R36, c[0x0][0x2ac], R77, P2, P1 ;
 Instr 813 @ 0x32d0 (13008) - IMAD R36, R79, 0x30, RZ ;
 Instr 814 @ 0x32e0 (13024) - IADD3 R74, P2, P1, R74, c[0x0][0x2a8], R37 ;
 Instr 815 @ 0x32f0 (13040) - IMAD.IADD R36, R75, 0x1, R36 ;
 Instr 816 @ 0x3300 (13056) - IADD3.X R75, R36, c[0x0][0x2ac], R77, P2, P1 ;
 Instr 817 @ 0x3310 (13072) - IADD3 R76, P2, P1, R62, c[0x0][0x2a8], R37 ;
 Instr 818 @ 0x3320 (13088) - IADD3.X R77, R65, c[0x0][0x2ac], R77, P2, P1 ;
Basic block id 40 - num instructions 31
 Instr 819 @ 0x3330 (13104) - LDG.E.128.STRONG.GPU R48, [R76] ;
 Instr 820 @ 0x3340 (13120) - LDG.E.128.STRONG.GPU R44, [R70] ;
 Instr 821 @ 0x3350 (13136) - LDG.E.128.STRONG.GPU R40, [R72] ;
 Instr 822 @ 0x3360 (13152) - LDG.E.128.STRONG.GPU R36, [R74] ;
 Instr 823 @ 0x3370 (13168) - IADD3 R76, P1, R76, c[0x0][0x2a0], RZ ;
 Instr 824 @ 0x3380 (13184) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 825 @ 0x3390 (13200) - IADD3.X R77, R77, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 826 @ 0x33a0 (13216) - IADD3 R70, P1, R70, c[0x0][0x2a0], RZ ;
 Instr 827 @ 0x33b0 (13232) - IADD3.X R71, R71, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 828 @ 0x33c0 (13248) - IADD3 R72, P1, R72, c[0x0][0x2a0], RZ ;
 Instr 829 @ 0x33d0 (13264) - IADD3.X R73, R73, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 830 @ 0x33e0 (13280) - IADD3 R74, P1, R74, c[0x0][0x2a0], RZ ;
 Instr 831 @ 0x33f0 (13296) - IADD3.X R75, R75, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 832 @ 0x3400 (13312) - ISETP.LE.AND P1, PT, R61, UR4, PT ;
 Instr 833 @ 0x3410 (13328) - FADD R4, R48, R4 ;
 Instr 834 @ 0x3420 (13344) - FADD R5, R49, R5 ;
 Instr 835 @ 0x3430 (13360) - FADD R6, R50, R6 ;
 Instr 836 @ 0x3440 (13376) - FADD R7, R51, R7 ;
 Instr 837 @ 0x3450 (13392) - FADD R8, R44, R8 ;
 Instr 838 @ 0x3460 (13408) - FADD R9, R45, R9 ;
 Instr 839 @ 0x3470 (13424) - FADD R10, R46, R10 ;
 Instr 840 @ 0x3480 (13440) - FADD R11, R47, R11 ;
 Instr 841 @ 0x3490 (13456) - FADD R12, R40, R12 ;
 Instr 842 @ 0x34a0 (13472) - FADD R13, R41, R13 ;
 Instr 843 @ 0x34b0 (13488) - FADD R14, R42, R14 ;
 Instr 844 @ 0x34c0 (13504) - FADD R15, R43, R15 ;
 Instr 845 @ 0x34d0 (13520) - FADD R16, R36, R16 ;
 Instr 846 @ 0x34e0 (13536) - FADD R17, R37, R17 ;
 Instr 847 @ 0x34f0 (13552) - FADD R18, R38, R18 ;
 Instr 848 @ 0x3500 (13568) - FADD R19, R39, R19 ;
 Instr 849 @ 0x3510 (13584) - @!P1 BRA 0x3330 ;
Basic block id 41 - num instructions 1
 Instr 850 @ 0x3520 (13600) - @P0 BRA 0x3640 ;
Basic block id 42 - num instructions 17
 Instr 851 @ 0x3530 (13616) - IMAD.MOV.U32 R36, RZ, RZ, R62 ;
 Instr 852 @ 0x3540 (13632) - SHF.L.U64.HI R79, R81, 0x4, R79 ;
 Instr 853 @ 0x3550 (13648) - IMAD.MOV.U32 R37, RZ, RZ, R65 ;
 Instr 854 @ 0x3560 (13664) - IMAD.WIDE R36, R78, 0x10, R36 ;
 Instr 855 @ 0x3570 (13680) - IADD3 R38, P1, R36, c[0x0][0x2a8], RZ ;
 Instr 856 @ 0x3580 (13696) - IMAD.SHL.U32 R36, R81, 0x10, RZ ;
 Instr 857 @ 0x3590 (13712) - IADD3.X R39, R37, c[0x0][0x2ac], RZ, P1, !PT ;
 Instr 858 @ 0x35a0 (13728) - IADD3 R42, P1, R36, R38, RZ ;
 Instr 859 @ 0x35b0 (13744) - IADD3.X R43, R79, R39, RZ, P1, !PT ;
 Instr 860 @ 0x35c0 (13760) - IADD3 R40, P1, R42, R36.reuse, RZ ;
 Instr 861 @ 0x35d0 (13776) - STG.E.128.SYS [R38], R4 ;
 Instr 862 @ 0x35e0 (13792) - IMAD.X R41, R43, 0x1, R79, P1 ;
 Instr 863 @ 0x35f0 (13808) - IADD3 R36, P1, R40, R36, RZ ;
 Instr 864 @ 0x3600 (13824) - STG.E.128.SYS [R42], R8 ;
 Instr 865 @ 0x3610 (13840) - IADD3.X R37, R41, R79, RZ, P1, !PT ;
 Instr 866 @ 0x3620 (13856) - STG.E.128.SYS [R40], R12 ;
 Instr 867 @ 0x3630 (13872) - STG.E.128.SYS [R36], R16 ;
Basic block id 43 - num instructions 1
 Instr 868 @ 0x3640 (13888) - @!P0 BRA 0x41d0 ;
Basic block id 44 - num instructions 184
 Instr 869 @ 0x3650 (13904) - STS.64 [R2], R4 ;
 Instr 870 @ 0x3660 (13920) - HADD2.F32 R45, R52.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 871 @ 0x3670 (13936) - ISETP.GE.AND P2, PT, R56, R93, PT ;
 Instr 872 @ 0x3680 (13952) - STS.64 [R2+0x10], R8 ;
 Instr 873 @ 0x3690 (13968) - STS.64 [R2+0x900], R6 ;
 Instr 874 @ 0x36a0 (13984) - HADD2.F32 R5, R52.H1_H1, -RZ.H0_H0 ;
 Instr 875 @ 0x36b0 (14000) - STS.64 [R2+0x910], R10 ;
 Instr 876 @ 0x36c0 (14016) - HADD2.F32 R4, R53.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 877 @ 0x36d0 (14032) - STS.64 [R2+0x40], R12 ;
 Instr 878 @ 0x36e0 (14048) - HADD2.F32 R7, R53.H0_H0, -RZ.H0_H0 ;
 Instr 879 @ 0x36f0 (14064) - STS.64 [R2+0x50], R16 ;
 Instr 880 @ 0x3700 (14080) - STS.64 [R2+0x940], R14 ;
 Instr 881 @ 0x3710 (14096) - STS.64 [R2+0x950], R18 ;
 Instr 882 @ 0x3720 (14112) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 883 @ 0x3730 (14128) - LDS.U.128 R40, [R57.X16] ;
 Instr 884 @ 0x3740 (14144) - LDS.U.128 R36, [R57.X16+0x1200] ;
 Instr 885 @ 0x3750 (14160) - LDS.U.128 R8, [R57.X16+0x90] ;
 Instr 886 @ 0x3760 (14176) - FFMA R40, R40, R0, R45 ;
 Instr 887 @ 0x3770 (14192) - FFMA R41, R41, R0.reuse, R5 ;
 Instr 888 @ 0x3780 (14208) - FFMA R42, R42, R0.reuse, R7 ;
 Instr 889 @ 0x3790 (14224) - FSETP.GEU.AND P1, PT, R40, c[0x0][0x210], PT ;
 Instr 890 @ 0x37a0 (14240) - FFMA R43, R43, R0.reuse, R4 ;
 Instr 891 @ 0x37b0 (14256) - FFMA R36, R36, R0.reuse, R45 ;
 Instr 892 @ 0x37c0 (14272) - FSEL R12, R40, c[0x0][0x210], P1 ;
 Instr 893 @ 0x37d0 (14288) - FFMA R37, R37, R0.reuse, R5 ;
 Instr 894 @ 0x37e0 (14304) - FSETP.GEU.AND P1, PT, R41, c[0x0][0x210], PT ;
 Instr 895 @ 0x37f0 (14320) - FFMA R38, R38, R0, R7 ;
 Instr 896 @ 0x3800 (14336) - FFMA R39, R39, R0, R4 ;
 Instr 897 @ 0x3810 (14352) - FSEL R13, R41, c[0x0][0x210], P1 ;
 Instr 898 @ 0x3820 (14368) - LDS.U.128 R4, [R57.X16+0x1290] ;
 Instr 899 @ 0x3830 (14384) - FSETP.GT.AND P1, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 900 @ 0x3840 (14400) - HADD2.F32 R41, R54.H0_H0, -RZ.H0_H0 ;
 Instr 901 @ 0x3850 (14416) - FSEL R12, R12, c[0x0][0x220], !P1 ;
 Instr 902 @ 0x3860 (14432) - FSETP.GT.AND P1, PT, R13.reuse, c[0x0][0x220], PT ;
 Instr 903 @ 0x3870 (14448) - FSEL R13, R13, c[0x0][0x220], !P1 ;
 Instr 904 @ 0x3880 (14464) - F2F.F16.F32 R12, R12 ;
 Instr 905 @ 0x3890 (14480) - FSETP.GEU.AND P1, PT, R42, c[0x0][0x210], PT ;
 Instr 906 @ 0x38a0 (14496) - FSEL R14, R42, c[0x0][0x210], P1 ;
 Instr 907 @ 0x38b0 (14512) - FSETP.GEU.AND P1, PT, R43.reuse, c[0x0][0x210], PT ;
 Instr 908 @ 0x38c0 (14528) - F2F.F16.F32 R13, R13 ;
 Instr 909 @ 0x38d0 (14544) - FSEL R15, R43, c[0x0][0x210], P1 ;
 Instr 910 @ 0x38e0 (14560) - FSETP.GT.AND P1, PT, R14.reuse, c[0x0][0x220], PT ;
 Instr 911 @ 0x38f0 (14576) - FSEL R14, R14, c[0x0][0x220], !P1 ;
 Instr 912 @ 0x3900 (14592) - FSETP.GT.AND P1, PT, R15.reuse, c[0x0][0x220], PT ;
 Instr 913 @ 0x3910 (14608) - FSEL R15, R15, c[0x0][0x220], !P1 ;
 Instr 914 @ 0x3920 (14624) - F2F.F16.F32 R14, R14 ;
 Instr 915 @ 0x3930 (14640) - FSETP.GEU.AND P1, PT, R36.reuse, c[0x0][0x210], PT ;
 Instr 916 @ 0x3940 (14656) - FSEL R16, R36, c[0x0][0x210], P1 ;
 Instr 917 @ 0x3950 (14672) - FSETP.GEU.AND P1, PT, R37.reuse, c[0x0][0x210], PT ;
 Instr 918 @ 0x3960 (14688) - HADD2.F32 R36, R54.H1_H1, -RZ.H0_H0 ;
 Instr 919 @ 0x3970 (14704) - F2F.F16.F32 R15, R15 ;
 Instr 920 @ 0x3980 (14720) - FSEL R17, R37, c[0x0][0x210], P1 ;
 Instr 921 @ 0x3990 (14736) - FSETP.GT.AND P1, PT, R16.reuse, c[0x0][0x220], PT ;
 Instr 922 @ 0x39a0 (14752) - HADD2.F32 R37, R55.H0_H0, -RZ.H0_H0 ;
 Instr 923 @ 0x39b0 (14768) - FSEL R16, R16, c[0x0][0x220], !P1 ;
 Instr 924 @ 0x39c0 (14784) - FSETP.GT.AND P1, PT, R17.reuse, c[0x0][0x220], PT ;
 Instr 925 @ 0x39d0 (14800) - FFMA R40, R10, R0.reuse, R37 ;
 Instr 926 @ 0x39e0 (14816) - FSEL R17, R17, c[0x0][0x220], !P1 ;
 Instr 927 @ 0x39f0 (14832) - F2F.F16.F32 R16, R16 ;
 Instr 928 @ 0x3a00 (14848) - FSETP.GEU.AND P1, PT, R38.reuse, c[0x0][0x210], PT ;
 Instr 929 @ 0x3a10 (14864) - FSEL R19, R38, c[0x0][0x210], P1 ;
 Instr 930 @ 0x3a20 (14880) - FFMA R38, R8, R0, R41 ;
 Instr 931 @ 0x3a30 (14896) - FSETP.GEU.AND P1, PT, R39.reuse, c[0x0][0x210], PT ;
 Instr 932 @ 0x3a40 (14912) - F2F.F16.F32 R17, R17 ;
 Instr 933 @ 0x3a50 (14928) - FSEL R18, R39, c[0x0][0x210], P1 ;
 Instr 934 @ 0x3a60 (14944) - IMAD.MOV.U32 R39, RZ, RZ, R3 ;
 Instr 935 @ 0x3a70 (14960) - FSETP.GT.AND P1, PT, R19, c[0x0][0x220], PT ;
 Instr 936 @ 0x3a80 (14976) - FSEL R8, R19, c[0x0][0x220], !P1 ;
 Instr 937 @ 0x3a90 (14992) - FFMA R19, R9, R0.reuse, R36.reuse ;
 Instr 938 @ 0x3aa0 (15008) - FSETP.GT.AND P1, PT, R18.reuse, c[0x0][0x220], PT ;
 Instr 939 @ 0x3ab0 (15024) - FFMA R36, R5, R0, R36 ;
 Instr 940 @ 0x3ac0 (15040) - FSEL R9, R18, c[0x0][0x220], !P1 ;
 Instr 941 @ 0x3ad0 (15056) - F2F.F16.F32 R8, R8 ;
 Instr 942 @ 0x3ae0 (15072) - FSETP.GEU.AND P1, PT, R38.reuse, c[0x0][0x210], PT ;
 Instr 943 @ 0x3af0 (15088) - HADD2.F32 R18, R55.H1_H1, -RZ.H0_H0 ;
 Instr 944 @ 0x3b00 (15104) - FSEL R38, R38, c[0x0][0x210], P1 ;
 Instr 945 @ 0x3b10 (15120) - FSETP.GEU.AND P1, PT, R19.reuse, c[0x0][0x210], PT ;
 Instr 946 @ 0x3b20 (15136) - F2F.F16.F32 R9, R9 ;
 Instr 947 @ 0x3b30 (15152) - FSEL R19, R19, c[0x0][0x210], P1 ;
 Instr 948 @ 0x3b40 (15168) - FSETP.GT.AND P1, PT, R38.reuse, c[0x0][0x220], PT ;
 Instr 949 @ 0x3b50 (15184) - FSEL R10, R38, c[0x0][0x220], !P1 ;
 Instr 950 @ 0x3b60 (15200) - FFMA R38, R11, R0, R18 ;
 Instr 951 @ 0x3b70 (15216) - FSETP.GT.AND P1, PT, R19, c[0x0][0x220], PT ;
 Instr 952 @ 0x3b80 (15232) - @P6 IMAD.HI.U32 R11, R3, c[0x0][0x3dc], RZ ;
 Instr 953 @ 0x3b90 (15248) - FSEL R19, R19, c[0x0][0x220], !P1 ;
 Instr 954 @ 0x3ba0 (15264) - FFMA R18, R7, R0.reuse, R18 ;
 Instr 955 @ 0x3bb0 (15280) - FSETP.GEU.AND P1, PT, R40.reuse, c[0x0][0x210], PT ;
 Instr 956 @ 0x3bc0 (15296) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 957 @ 0x3bd0 (15312) - @P6 SHF.R.U32.HI R39, RZ, c[0x0][0x3e0], R11 ;
 Instr 958 @ 0x3be0 (15328) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 959 @ 0x3bf0 (15344) - FSEL R40, R40, c[0x0][0x210], P1 ;
 Instr 960 @ 0x3c00 (15360) - F2F.F16.F32 R10, R10 ;
 Instr 961 @ 0x3c10 (15376) - FSETP.GEU.AND P1, PT, R38.reuse, c[0x0][0x210], PT ;
 Instr 962 @ 0x3c20 (15392) - @P6 IMAD.MOV R42, RZ, RZ, -R39 ;
 Instr 963 @ 0x3c30 (15408) - FSEL R38, R38, c[0x0][0x210], P1 ;
 Instr 964 @ 0x3c40 (15424) - @P6 IMAD R11, R42, c[0x0][0x3c8], R3 ;
 Instr 965 @ 0x3c50 (15440) - FSETP.GT.AND P1, PT, R40, c[0x0][0x220], PT ;
 Instr 966 @ 0x3c60 (15456) - FFMA R42, R4, R0, R41 ;
 Instr 967 @ 0x3c70 (15472) - F2F.F16.F32 R19, R19 ;
 Instr 968 @ 0x3c80 (15488) - @P5 IMAD.HI.U32 R41, R11, c[0x0][0x3e4], RZ ;
 Instr 969 @ 0x3c90 (15504) - FSEL R4, R40, c[0x0][0x220], !P1 ;
 Instr 970 @ 0x3ca0 (15520) - FSETP.GT.AND P1, PT, R38.reuse, c[0x0][0x220], PT ;
 Instr 971 @ 0x3cb0 (15536) - @P5 SHF.R.U32.HI R41, RZ, c[0x0][0x3e8], R41 ;
 Instr 972 @ 0x3cc0 (15552) - FSEL R5, R38, c[0x0][0x220], !P1 ;
 Instr 973 @ 0x3cd0 (15568) - IMAD.MOV.U32 R38, RZ, RZ, RZ ;
 Instr 974 @ 0x3ce0 (15584) - FSETP.GEU.AND P1, PT, R42.reuse, c[0x0][0x210], PT ;
 Instr 975 @ 0x3cf0 (15600) - @P5 IMAD.MOV R40, RZ, RZ, -R41 ;
 Instr 976 @ 0x3d00 (15616) - FSEL R42, R42, c[0x0][0x210], P1 ;
 Instr 977 @ 0x3d10 (15632) - @P5 IMAD R38, R40, c[0x0][0x3cc], R11 ;
 Instr 978 @ 0x3d20 (15648) - FSETP.GEU.AND P1, PT, R36, c[0x0][0x210], PT ;
 Instr 979 @ 0x3d30 (15664) - FFMA R40, R6, R0, R37 ;
 Instr 980 @ 0x3d40 (15680) - @P5 IMAD.MOV.U32 R11, RZ, RZ, R41 ;
 Instr 981 @ 0x3d50 (15696) - FSEL R36, R36, c[0x0][0x210], P1 ;
 Instr 982 @ 0x3d60 (15712) - @P4 IMAD.HI.U32 R41, R38, c[0x0][0x3ec], RZ ;
 Instr 983 @ 0x3d70 (15728) - FSETP.GT.AND P1, PT, R42.reuse, c[0x0][0x220], PT ;
 Instr 984 @ 0x3d80 (15744) - FSEL R6, R42, c[0x0][0x220], !P1 ;
 Instr 985 @ 0x3d90 (15760) - FSETP.GT.AND P1, PT, R36, c[0x0][0x220], PT ;
 Instr 986 @ 0x3da0 (15776) - @P4 SHF.R.U32.HI R41, RZ, c[0x0][0x3f0], R41 ;
 Instr 987 @ 0x3db0 (15792) - FSEL R37, R36, c[0x0][0x220], !P1 ;
 Instr 988 @ 0x3dc0 (15808) - IMAD R36, R56, c[0x0][0x254], RZ ;
 Instr 989 @ 0x3dd0 (15824) - FSETP.GEU.AND P1, PT, R40.reuse, c[0x0][0x210], PT ;
 Instr 990 @ 0x3de0 (15840) - IMAD R44, R39, c[0x0][0x244], R36 ;
 Instr 991 @ 0x3df0 (15856) - FSEL R40, R40, c[0x0][0x210], P1 ;
 Instr 992 @ 0x3e00 (15872) - @P4 IMAD.MOV R39, RZ, RZ, -R41.reuse ;
 Instr 993 @ 0x3e10 (15888) - FSETP.GEU.AND P1, PT, R18.reuse, c[0x0][0x210], PT ;
 Instr 994 @ 0x3e20 (15904) - IMAD R11, R11, c[0x0][0x248], R44 ;
 Instr 995 @ 0x3e30 (15920) - F2F.F16.F32 R37, R37 ;
 Instr 996 @ 0x3e40 (15936) - @P4 IMAD R7, R39, c[0x0][0x1b4], R38 ;
 Instr 997 @ 0x3e50 (15952) - IADD3 R39, R3, 0x10, RZ ;
 Instr 998 @ 0x3e60 (15968) - @P4 IMAD.MOV.U32 R38, RZ, RZ, R41 ;
 Instr 999 @ 0x3e70 (15984) - FSEL R42, R18, c[0x0][0x210], P1 ;
 Instr 1000 @ 0x3e80 (16000) - FSETP.GT.AND P1, PT, R40, c[0x0][0x220], PT ;
 Instr 1001 @ 0x3e90 (16016) - IMAD R38, R38, c[0x0][0x24c], R11 ;
 Instr 1002 @ 0x3ea0 (16032) - FSEL R18, R40, c[0x0][0x220], !P1 ;
 Instr 1003 @ 0x3eb0 (16048) - IMAD R7, R7, c[0x0][0x250], R38 ;
 Instr 1004 @ 0x3ec0 (16064) - FSETP.GT.AND P1, PT, R42.reuse, c[0x0][0x220], PT ;
 Instr 1005 @ 0x3ed0 (16080) - @P6 IMAD.HI.U32 R38, R39, c[0x0][0x3dc], RZ ;
 Instr 1006 @ 0x3ee0 (16096) - FSEL R11, R42, c[0x0][0x220], !P1 ;
 Instr 1007 @ 0x3ef0 (16112) - IMAD.MOV.U32 R40, RZ, RZ, RZ ;
 Instr 1008 @ 0x3f00 (16128) - @P6 SHF.R.U32.HI R38, RZ, c[0x0][0x3e0], R38 ;
 Instr 1009 @ 0x3f10 (16144) - F2F.F16.F32 R18, R18 ;
 Instr 1010 @ 0x3f20 (16160) - ISETP.LT.AND P1, PT, R3, c[0x0][0x3c4], !P2 ;
 Instr 1011 @ 0x3f30 (16176) - ISETP.LT.AND P2, PT, R39, c[0x0][0x3c4], !P2 ;
 Instr 1012 @ 0x3f40 (16192) - @P6 IMAD.MOV R42, RZ, RZ, -R38.reuse ;
 Instr 1013 @ 0x3f50 (16208) - SEL R7, R7, 0xffffffff, P1 ;
 Instr 1014 @ 0x3f60 (16224) - @P6 IMAD R40, R42, c[0x0][0x3c8], R39 ;
 Instr 1015 @ 0x3f70 (16240) - ISETP.GE.AND P1, PT, R7, RZ, PT ;
 Instr 1016 @ 0x3f80 (16256) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 1017 @ 0x3f90 (16272) - F2F.F16.F32 R11, R11 ;
 Instr 1018 @ 0x3fa0 (16288) - @P5 IMAD.HI.U32 R41, R40, c[0x0][0x3e4], RZ ;
 Instr 1019 @ 0x3fb0 (16304) - @P6 IMAD.MOV.U32 R39, RZ, RZ, R38 ;
 Instr 1020 @ 0x3fc0 (16320) - @P5 SHF.R.U32.HI R41, RZ, c[0x0][0x3e8], R41 ;
 Instr 1021 @ 0x3fd0 (16336) - IMAD.MOV.U32 R38, RZ, RZ, RZ ;
 Instr 1022 @ 0x3fe0 (16352) - IMAD R39, R39, c[0x0][0x244], R36 ;
 Instr 1023 @ 0x3ff0 (16368) - @P5 IMAD.MOV R43, RZ, RZ, -R41.reuse ;
 Instr 1024 @ 0x4000 (16384) - @P5 IMAD R42, R43, c[0x0][0x3cc], R40 ;
 Instr 1025 @ 0x4010 (16400) - @P5 IMAD.MOV.U32 R40, RZ, RZ, R41 ;
 Instr 1026 @ 0x4020 (16416) - @P4 IMAD.HI.U32 R43, R42, c[0x0][0x3ec], RZ ;
 Instr 1027 @ 0x4030 (16432) - IMAD R39, R40, c[0x0][0x248], R39 ;
 Instr 1028 @ 0x4040 (16448) - @P4 SHF.R.U32.HI R43, RZ, c[0x0][0x3f0], R43 ;
 Instr 1029 @ 0x4050 (16464) - F2F.F16.F32 R40, R5 ;
 Instr 1030 @ 0x4060 (16480) - @P4 IMAD.MOV R45, RZ, RZ, -R43 ;
 Instr 1031 @ 0x4070 (16496) - @P4 IMAD R38, R45, c[0x0][0x1b4], R42 ;
 Instr 1032 @ 0x4080 (16512) - PRMT R5, R14, 0x5410, R15 ;
 Instr 1033 @ 0x4090 (16528) - @P4 IMAD.MOV.U32 R42, RZ, RZ, R43 ;
 Instr 1034 @ 0x40a0 (16544) - IMAD R39, R42, c[0x0][0x24c], R39 ;
 Instr 1035 @ 0x40b0 (16560) - @P1 IMAD.MOV.U32 R42, RZ, RZ, 0x2 ;
 Instr 1036 @ 0x40c0 (16576) - IMAD R36, R38, c[0x0][0x250], R39 ;
 Instr 1037 @ 0x40d0 (16592) - F2F.F16.F32 R39, R4 ;
 Instr 1038 @ 0x40e0 (16608) - @P1 IMAD.WIDE R42, R7, R42, c[0x0][0x170] ;
 Instr 1039 @ 0x40f0 (16624) - SEL R36, R36, 0xffffffff, P2 ;
 Instr 1040 @ 0x4100 (16640) - F2F.F16.F32 R38, R6 ;
 Instr 1041 @ 0x4110 (16656) - PRMT R4, R12, 0x5410, R13 ;
 Instr 1042 @ 0x4120 (16672) - PRMT R6, R10, 0x5410, R19 ;
 Instr 1043 @ 0x4130 (16688) - PRMT R7, R39, 0x5410, R40 ;
 Instr 1044 @ 0x4140 (16704) - @P1 STG.E.128.SYS [R42], R4 ;
 Instr 1045 @ 0x4150 (16720) - ISETP.GE.AND P1, PT, R36, RZ, PT ;
 Instr 1046 @ 0x4160 (16736) - @P1 IMAD.MOV.U32 R13, RZ, RZ, 0x2 ;
 Instr 1047 @ 0x4170 (16752) - @P1 IMAD.WIDE R12, R36, R13, c[0x0][0x170] ;
 Instr 1048 @ 0x4180 (16768) - PRMT R4, R16, 0x5410, R17 ;
 Instr 1049 @ 0x4190 (16784) - PRMT R5, R8, 0x5410, R9 ;
 Instr 1050 @ 0x41a0 (16800) - PRMT R6, R38, 0x5410, R37 ;
 Instr 1051 @ 0x41b0 (16816) - PRMT R7, R18, 0x5410, R11 ;
 Instr 1052 @ 0x41c0 (16832) - @P1 STG.E.128.SYS [R12], R4 ;
Basic block id 45 - num instructions 2
 Instr 1053 @ 0x41d0 (16848) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1054 @ 0x41e0 (16864) - @!P3 BRA 0x4660 ;
Basic block id 46 - num instructions 5
 Instr 1055 @ 0x41f0 (16880) - ISETP.GE.AND P1, PT, R61, 0x1, PT ;
 Instr 1056 @ 0x4200 (16896) - IMAD.SHL.U32 R37, R60, 0x80, RZ ;
 Instr 1057 @ 0x4210 (16912) - IMAD R59, R59, 0x80, R92 ;
 Instr 1058 @ 0x4220 (16928) - SHF.R.S32.HI R36, RZ, 0x1f, R37 ;
 Instr 1059 @ 0x4230 (16944) - @!P1 BRA 0x4540 ;
Basic block id 47 - num instructions 22
 Instr 1060 @ 0x4240 (16960) - IMAD.MOV.U32 R8, RZ, RZ, R62 ;
 Instr 1061 @ 0x4250 (16976) - UMOV UR8, URZ ;
 Instr 1062 @ 0x4260 (16992) - IMAD.MOV.U32 R9, RZ, RZ, R65 ;
 Instr 1063 @ 0x4270 (17008) - ULDC.64 UR6, c[0x0][0x2a8] ;
 Instr 1064 @ 0x4280 (17024) - IMAD.SHL.U32 R42, R59, 0x10, RZ ;
 Instr 1065 @ 0x4290 (17040) - IMAD.WIDE.U32 R12, R37.reuse, 0x60, R8 ;
 Instr 1066 @ 0x42a0 (17056) - SHF.R.S32.HI R4, RZ, 0x1f, R42 ;
 Instr 1067 @ 0x42b0 (17072) - IMAD R7, R36, 0x60, RZ ;
 Instr 1068 @ 0x42c0 (17088) - IADD3 R40, P2, R42, R12, RZ ;
 Instr 1069 @ 0x42d0 (17104) - IMAD.WIDE.U32 R10, R37, 0x70, R8 ;
 Instr 1070 @ 0x42e0 (17120) - IADD3.X R41, R4, R13, R7, P2, !PT ;
 Instr 1071 @ 0x42f0 (17136) - IMAD R5, R36, 0x70, RZ ;
 Instr 1072 @ 0x4300 (17152) - IADD3 R38, P1, R42, R10, RZ ;
 Instr 1073 @ 0x4310 (17168) - IMAD.WIDE.U32 R8, R37.reuse, 0x50, R8 ;
 Instr 1074 @ 0x4320 (17184) - LEA R45, P2, R37.reuse, R62, 0x6 ;
 Instr 1075 @ 0x4330 (17200) - IADD3.X R39, R4, R11, R5, P1, !PT ;
 Instr 1076 @ 0x4340 (17216) - IMAD R5, R36, 0x50, RZ ;
 Instr 1077 @ 0x4350 (17232) - IADD3 R44, P1, R42, R45, RZ ;
 Instr 1078 @ 0x4360 (17248) - LEA.HI.X R7, R37, R65, R36, 0x6, P2 ;
 Instr 1079 @ 0x4370 (17264) - IADD3 R42, P2, R42, R8, RZ ;
 Instr 1080 @ 0x4380 (17280) - IMAD.X R45, R4.reuse, 0x1, R7, P1 ;
 Instr 1081 @ 0x4390 (17296) - IADD3.X R43, R4, R9, R5, P2, !PT ;
Basic block id 48 - num instructions 26
 Instr 1082 @ 0x43a0 (17312) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
 Instr 1083 @ 0x43b0 (17328) - LDG.E.128.STRONG.GPU R12, [R42.64+UR6] ;
 Instr 1084 @ 0x43c0 (17344) - LDG.E.128.STRONG.GPU R8, [R40.64+UR6] ;
 Instr 1085 @ 0x43d0 (17360) - LDG.E.128.STRONG.GPU R4, [R38.64+UR6] ;
 Instr 1086 @ 0x43e0 (17376) - UIADD3 UR8, UR8, 0x1, URZ ;
 Instr 1087 @ 0x43f0 (17392) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 1088 @ 0x4400 (17408) - UIADD3 UR6, UP0, UR6, UR4, URZ ;
 Instr 1089 @ 0x4410 (17424) - ISETP.LE.AND P1, PT, R61, UR8, PT ;
 Instr 1090 @ 0x4420 (17440) - UIADD3.X UR7, UR7, UR5, URZ, UP0, !UPT ;
 Instr 1091 @ 0x4430 (17456) - FADD R20, R16, R20 ;
 Instr 1092 @ 0x4440 (17472) - FADD R21, R17, R21 ;
 Instr 1093 @ 0x4450 (17488) - FADD R22, R18, R22 ;
 Instr 1094 @ 0x4460 (17504) - FADD R23, R19, R23 ;
 Instr 1095 @ 0x4470 (17520) - FADD R24, R12, R24 ;
 Instr 1096 @ 0x4480 (17536) - FADD R25, R13, R25 ;
 Instr 1097 @ 0x4490 (17552) - FADD R26, R14, R26 ;
 Instr 1098 @ 0x44a0 (17568) - FADD R27, R15, R27 ;
 Instr 1099 @ 0x44b0 (17584) - FADD R28, R8, R28 ;
 Instr 1100 @ 0x44c0 (17600) - FADD R29, R9, R29 ;
 Instr 1101 @ 0x44d0 (17616) - FADD R30, R10, R30 ;
 Instr 1102 @ 0x44e0 (17632) - FADD R31, R11, R31 ;
 Instr 1103 @ 0x44f0 (17648) - FADD R32, R4, R32 ;
 Instr 1104 @ 0x4500 (17664) - FADD R33, R5, R33 ;
 Instr 1105 @ 0x4510 (17680) - FADD R34, R6, R34 ;
 Instr 1106 @ 0x4520 (17696) - FADD R35, R7, R35 ;
 Instr 1107 @ 0x4530 (17712) - @!P1 BRA 0x43a0 ;
Basic block id 49 - num instructions 1
 Instr 1108 @ 0x4540 (17728) - @P0 BRA 0x4660 ;
Basic block id 50 - num instructions 17
 Instr 1109 @ 0x4550 (17744) - LEA R6, P1, R37.reuse, R62, 0x6 ;
 Instr 1110 @ 0x4560 (17760) - IMAD.SHL.U32 R4, R37.reuse, 0x10, RZ ;
 Instr 1111 @ 0x4570 (17776) - SHF.L.U64.HI R5, R37.reuse, 0x4, R36.reuse ;
 Instr 1112 @ 0x4580 (17792) - LEA.HI.X R7, R37, R65, R36, 0x6, P1 ;
 Instr 1113 @ 0x4590 (17808) - IMAD.WIDE R6, R59, 0x10, R6 ;
 Instr 1114 @ 0x45a0 (17824) - IADD3 R10, P1, R6, c[0x0][0x2a8], RZ ;
 Instr 1115 @ 0x45b0 (17840) - IADD3.X R11, R7, c[0x0][0x2ac], RZ, P1, !PT ;
 Instr 1116 @ 0x45c0 (17856) - LEA R6, P1, R37.reuse, R10, 0x5 ;
 Instr 1117 @ 0x45d0 (17872) - IADD3 R8, P2, R10, R4, RZ ;
 Instr 1118 @ 0x45e0 (17888) - LEA.HI.X R7, R37, R11, R36, 0x5, P1 ;
 Instr 1119 @ 0x45f0 (17904) - IADD3 R4, P1, R6, R4, RZ ;
 Instr 1120 @ 0x4600 (17920) - IMAD.X R9, R11, 0x1, R5.reuse, P2 ;
 Instr 1121 @ 0x4610 (17936) - STG.E.128.SYS [R10], R20 ;
 Instr 1122 @ 0x4620 (17952) - IMAD.X R5, R7, 0x1, R5, P1 ;
 Instr 1123 @ 0x4630 (17968) - STG.E.128.SYS [R8], R24 ;
 Instr 1124 @ 0x4640 (17984) - STG.E.128.SYS [R6], R28 ;
 Instr 1125 @ 0x4650 (18000) - STG.E.128.SYS [R4], R32 ;
Basic block id 51 - num instructions 1
 Instr 1126 @ 0x4660 (18016) - @!P0 BRA 0x5200 ;
Basic block id 52 - num instructions 185
 Instr 1127 @ 0x4670 (18032) - STS.64 [R2], R20 ;
 Instr 1128 @ 0x4680 (18048) - IADD3 R13, R3.reuse, 0x20, RZ ;
 Instr 1129 @ 0x4690 (18064) - HADD2.F32 R19, R52.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1130 @ 0x46a0 (18080) - IADD3 R12, R3, 0x30, RZ ;
 Instr 1131 @ 0x46b0 (18096) - STS.64 [R2+0x10], R24 ;
 Instr 1132 @ 0x46c0 (18112) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1133 @ 0x46d0 (18128) - ISETP.GE.AND P0, PT, R56, R93, PT ;
 Instr 1134 @ 0x46e0 (18144) - HADD2.F32 R52, R52.H1_H1, -RZ.H0_H0 ;
 Instr 1135 @ 0x46f0 (18160) - STS.64 [R2+0x900], R22 ;
 Instr 1136 @ 0x4700 (18176) - @P6 IMAD.HI.U32 R18, R12, c[0x0][0x3dc], RZ ;
 Instr 1137 @ 0x4710 (18192) - ISETP.LT.AND P1, PT, R13.reuse, c[0x0][0x3c4], !P0 ;
 Instr 1138 @ 0x4720 (18208) - HADD2.F32 R21, R53.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1139 @ 0x4730 (18224) - STS.64 [R2+0x910], R26 ;
 Instr 1140 @ 0x4740 (18240) - @P6 IMAD.HI.U32 R20, R13, c[0x0][0x3dc], RZ ;
 Instr 1141 @ 0x4750 (18256) - @P6 SHF.R.U32.HI R18, RZ, c[0x0][0x3e0], R18 ;
 Instr 1142 @ 0x4760 (18272) - HADD2.F32 R53, R53.H1_H1, -RZ.H0_H0 ;
 Instr 1143 @ 0x4770 (18288) - STS.64 [R2+0x40], R28 ;
 Instr 1144 @ 0x4780 (18304) - IMAD R56, R56, c[0x0][0x254], RZ ;
 Instr 1145 @ 0x4790 (18320) - @P6 SHF.R.U32.HI R20, RZ, c[0x0][0x3e0], R20 ;
 Instr 1146 @ 0x47a0 (18336) - @P6 IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 1147 @ 0x47b0 (18352) - STS.64 [R2+0x50], R32 ;
 Instr 1148 @ 0x47c0 (18368) - ISETP.LT.AND P0, PT, R12, c[0x0][0x3c4], !P0 ;
 Instr 1149 @ 0x47d0 (18384) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1150 @ 0x47e0 (18400) - HADD2.F32 R3, R54.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1151 @ 0x47f0 (18416) - STS.64 [R2+0x940], R30 ;
 Instr 1152 @ 0x4800 (18432) - @P6 IMAD.MOV R14, RZ, RZ, -R20.reuse ;
 Instr 1153 @ 0x4810 (18448) - HADD2.F32 R54, R54.H1_H1, -RZ.H0_H0 ;
 Instr 1154 @ 0x4820 (18464) - IMAD.MOV.U32 R27, RZ, RZ, RZ ;
 Instr 1155 @ 0x4830 (18480) - STS.64 [R2+0x950], R34 ;
 Instr 1156 @ 0x4840 (18496) - @P6 IMAD R16, R14, c[0x0][0x3c8], R13 ;
 Instr 1157 @ 0x4850 (18512) - HADD2.F32 R17, R55.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1158 @ 0x4860 (18528) - @P6 IMAD.MOV.U32 R13, RZ, RZ, R20 ;
 Instr 1159 @ 0x4870 (18544) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1160 @ 0x4880 (18560) - HADD2.F32 R55, R55.H1_H1, -RZ.H0_H0 ;
 Instr 1161 @ 0x4890 (18576) - IMAD.MOV.U32 R29, RZ, RZ, RZ ;
 Instr 1162 @ 0x48a0 (18592) - IMAD R23, R13, c[0x0][0x244], R56 ;
 Instr 1163 @ 0x48b0 (18608) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1164 @ 0x48c0 (18624) - @P6 IMAD R2, R15, c[0x0][0x3c8], R12 ;
 Instr 1165 @ 0x48d0 (18640) - @P6 IMAD.MOV.U32 R12, RZ, RZ, R18 ;
 Instr 1166 @ 0x48e0 (18656) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1167 @ 0x48f0 (18672) - @P5 IMAD.HI.U32 R25, R2, c[0x0][0x3e4], RZ ;
 Instr 1168 @ 0x4900 (18688) - @P5 SHF.R.U32.HI R25, RZ, c[0x0][0x3e8], R25 ;
 Instr 1169 @ 0x4910 (18704) - LDS.U.128 R4, [R57.X16] ;
 Instr 1170 @ 0x4920 (18720) - LDS.U.128 R8, [R57.X16+0x1200] ;
 Instr 1171 @ 0x4930 (18736) - FFMA R20, R4, R0, R19 ;
 Instr 1172 @ 0x4940 (18752) - @P5 IMAD.HI.U32 R4, R16, c[0x0][0x3e4], RZ ;
 Instr 1173 @ 0x4950 (18768) - FSETP.GEU.AND P2, PT, R20, c[0x0][0x210], PT ;
 Instr 1174 @ 0x4960 (18784) - FFMA R26, R5, R0.reuse, R52 ;
 Instr 1175 @ 0x4970 (18800) - @P5 SHF.R.U32.HI R4, RZ, c[0x0][0x3e8], R4 ;
 Instr 1176 @ 0x4980 (18816) - FFMA R6, R6, R0.reuse, R21 ;
 Instr 1177 @ 0x4990 (18832) - FSEL R20, R20, c[0x0][0x210], P2 ;
 Instr 1178 @ 0x49a0 (18848) - FFMA R24, R7, R0.reuse, R53 ;
 Instr 1179 @ 0x49b0 (18864) - FSETP.GEU.AND P2, PT, R26, c[0x0][0x210], PT ;
 Instr 1180 @ 0x49c0 (18880) - @P5 IMAD.MOV R13, RZ, RZ, -R4 ;
 Instr 1181 @ 0x49d0 (18896) - FSETP.GT.AND P3, PT, R20, c[0x0][0x220], PT ;
 Instr 1182 @ 0x49e0 (18912) - IMAD R5, R12, c[0x0][0x244], R56 ;
 Instr 1183 @ 0x49f0 (18928) - FSEL R26, R26, c[0x0][0x210], P2 ;
 Instr 1184 @ 0x4a00 (18944) - @P5 IMAD R18, R13, c[0x0][0x3cc], R16 ;
 Instr 1185 @ 0x4a10 (18960) - FSETP.GEU.AND P2, PT, R6, c[0x0][0x210], PT ;
 Instr 1186 @ 0x4a20 (18976) - FFMA R8, R8, R0.reuse, R19 ;
 Instr 1187 @ 0x4a30 (18992) - FSEL R20, R20, c[0x0][0x220], !P3 ;
 Instr 1188 @ 0x4a40 (19008) - LDS.U.128 R12, [R57.X16+0x90] ;
 Instr 1189 @ 0x4a50 (19024) - FSETP.GT.AND P3, PT, R26, c[0x0][0x220], PT ;
 Instr 1190 @ 0x4a60 (19040) - @P5 IMAD.MOV R7, RZ, RZ, -R25.reuse ;
 Instr 1191 @ 0x4a70 (19056) - FSEL R6, R6, c[0x0][0x210], P2 ;
 Instr 1192 @ 0x4a80 (19072) - @P5 IMAD.MOV.U32 R16, RZ, RZ, R4 ;
 Instr 1193 @ 0x4a90 (19088) - FSETP.GEU.AND P2, PT, R24, c[0x0][0x210], PT ;
 Instr 1194 @ 0x4aa0 (19104) - @P5 IMAD R22, R7, c[0x0][0x3cc], R2 ;
 Instr 1195 @ 0x4ab0 (19120) - FSEL R26, R26, c[0x0][0x220], !P3 ;
 Instr 1196 @ 0x4ac0 (19136) - @P5 IMAD.MOV.U32 R2, RZ, RZ, R25 ;
 Instr 1197 @ 0x4ad0 (19152) - FSETP.GT.AND P3, PT, R6, c[0x0][0x220], PT ;
 Instr 1198 @ 0x4ae0 (19168) - FFMA R52, R9, R0.reuse, R52 ;
 Instr 1199 @ 0x4af0 (19184) - FSEL R24, R24, c[0x0][0x210], P2 ;
 Instr 1200 @ 0x4b00 (19200) - FFMA R10, R10, R0.reuse, R21 ;
 Instr 1201 @ 0x4b10 (19216) - FSETP.GEU.AND P2, PT, R8, c[0x0][0x210], PT ;
 Instr 1202 @ 0x4b20 (19232) - IMAD R21, R2, c[0x0][0x248], R5 ;
 Instr 1203 @ 0x4b30 (19248) - FSEL R6, R6, c[0x0][0x220], !P3 ;
 Instr 1204 @ 0x4b40 (19264) - FFMA R11, R11, R0, R53 ;
 Instr 1205 @ 0x4b50 (19280) - FSETP.GT.AND P3, PT, R24, c[0x0][0x220], PT ;
 Instr 1206 @ 0x4b60 (19296) - IMAD R23, R16, c[0x0][0x248], R23 ;
 Instr 1207 @ 0x4b70 (19312) - FSEL R4, R8, c[0x0][0x210], P2 ;
 Instr 1208 @ 0x4b80 (19328) - F2F.F16.F32 R19, R26 ;
 Instr 1209 @ 0x4b90 (19344) - FSEL R8, R24, c[0x0][0x220], !P3 ;
 Instr 1210 @ 0x4ba0 (19360) - @P4 IMAD.HI.U32 R28, R18, c[0x0][0x3ec], RZ ;
 Instr 1211 @ 0x4bb0 (19376) - FSETP.GT.AND P3, PT, R4, c[0x0][0x220], PT ;
 Instr 1212 @ 0x4bc0 (19392) - FSETP.GEU.AND P2, PT, R52, c[0x0][0x210], PT ;
 Instr 1213 @ 0x4bd0 (19408) - FSEL R24, R4, c[0x0][0x220], !P3 ;
 Instr 1214 @ 0x4be0 (19424) - F2F.F16.F32 R9, R6 ;
 Instr 1215 @ 0x4bf0 (19440) - FSEL R52, R52, c[0x0][0x210], P2 ;
 Instr 1216 @ 0x4c00 (19456) - @P4 IMAD.HI.U32 R26, R22, c[0x0][0x3ec], RZ ;
 Instr 1217 @ 0x4c10 (19472) - FSETP.GEU.AND P2, PT, R10, c[0x0][0x210], PT ;
 Instr 1218 @ 0x4c20 (19488) - FSETP.GT.AND P3, PT, R52, c[0x0][0x220], PT ;
 Instr 1219 @ 0x4c30 (19504) - FSEL R25, R10, c[0x0][0x210], P2 ;
 Instr 1220 @ 0x4c40 (19520) - LDS.U.128 R4, [R57.X16+0x1290] ;
 Instr 1221 @ 0x4c50 (19536) - FSETP.GEU.AND P2, PT, R11, c[0x0][0x210], PT ;
 Instr 1222 @ 0x4c60 (19552) - F2F.F16.F32 R2, R24 ;
 Instr 1223 @ 0x4c70 (19568) - FSEL R52, R52, c[0x0][0x220], !P3 ;
 Instr 1224 @ 0x4c80 (19584) - FFMA R12, R12, R0.reuse, R3 ;
 Instr 1225 @ 0x4c90 (19600) - FSETP.GT.AND P3, PT, R25, c[0x0][0x220], PT ;
 Instr 1226 @ 0x4ca0 (19616) - FFMA R16, R13, R0.reuse, R54 ;
 Instr 1227 @ 0x4cb0 (19632) - FSEL R10, R11, c[0x0][0x210], P2 ;
 Instr 1228 @ 0x4cc0 (19648) - FFMA R14, R14, R0.reuse, R17 ;
 Instr 1229 @ 0x4cd0 (19664) - FSETP.GEU.AND P2, PT, R12, c[0x0][0x210], PT ;
 Instr 1230 @ 0x4ce0 (19680) - FFMA R24, R15, R0, R55 ;
 Instr 1231 @ 0x4cf0 (19696) - FSEL R11, R25, c[0x0][0x220], !P3 ;
 Instr 1232 @ 0x4d00 (19712) - F2F.F16.F32 R8, R8 ;
 Instr 1233 @ 0x4d10 (19728) - FSETP.GT.AND P3, PT, R10, c[0x0][0x220], PT ;
 Instr 1234 @ 0x4d20 (19744) - FSEL R12, R12, c[0x0][0x210], P2 ;
 Instr 1235 @ 0x4d30 (19760) - FSETP.GEU.AND P2, PT, R16, c[0x0][0x210], PT ;
 Instr 1236 @ 0x4d40 (19776) - FSEL R10, R10, c[0x0][0x220], !P3 ;
 Instr 1237 @ 0x4d50 (19792) - F2F.F16.F32 R20, R20 ;
 Instr 1238 @ 0x4d60 (19808) - FSETP.GT.AND P3, PT, R12, c[0x0][0x220], PT ;
 Instr 1239 @ 0x4d70 (19824) - FSEL R16, R16, c[0x0][0x210], P2 ;
 Instr 1240 @ 0x4d80 (19840) - FSETP.GEU.AND P2, PT, R14, c[0x0][0x210], PT ;
 Instr 1241 @ 0x4d90 (19856) - FSEL R12, R12, c[0x0][0x220], !P3 ;
 Instr 1242 @ 0x4da0 (19872) - F2F.F16.F32 R13, R52 ;
 Instr 1243 @ 0x4db0 (19888) - FSETP.GT.AND P3, PT, R16, c[0x0][0x220], PT ;
 Instr 1244 @ 0x4dc0 (19904) - FSEL R14, R14, c[0x0][0x210], P2 ;
 Instr 1245 @ 0x4dd0 (19920) - FSETP.GEU.AND P2, PT, R24, c[0x0][0x210], PT ;
 Instr 1246 @ 0x4de0 (19936) - @P4 SHF.R.U32.HI R26, RZ, c[0x0][0x3f0], R26 ;
 Instr 1247 @ 0x4df0 (19952) - F2F.F16.F32 R12, R12 ;
 Instr 1248 @ 0x4e00 (19968) - @P4 SHF.R.U32.HI R28, RZ, c[0x0][0x3f0], R28 ;
 Instr 1249 @ 0x4e10 (19984) - FSEL R16, R16, c[0x0][0x220], !P3 ;
 Instr 1250 @ 0x4e20 (20000) - FFMA R4, R4, R0.reuse, R3 ;
 Instr 1251 @ 0x4e30 (20016) - FSETP.GT.AND P3, PT, R14, c[0x0][0x220], PT ;
 Instr 1252 @ 0x4e40 (20032) - FFMA R5, R5, R0.reuse, R54 ;
 Instr 1253 @ 0x4e50 (20048) - FSEL R24, R24, c[0x0][0x210], P2 ;
 Instr 1254 @ 0x4e60 (20064) - @P4 IMAD.MOV R15, RZ, RZ, -R26 ;
 Instr 1255 @ 0x4e70 (20080) - FSETP.GEU.AND P2, PT, R4, c[0x0][0x210], PT ;
 Instr 1256 @ 0x4e80 (20096) - @P4 IMAD.MOV R25, RZ, RZ, -R28 ;
 Instr 1257 @ 0x4e90 (20112) - FSEL R14, R14, c[0x0][0x220], !P3 ;
 Instr 1258 @ 0x4ea0 (20128) - FFMA R6, R6, R0.reuse, R17 ;
 Instr 1259 @ 0x4eb0 (20144) - FSETP.GT.AND P3, PT, R24, c[0x0][0x220], PT ;
 Instr 1260 @ 0x4ec0 (20160) - @P4 IMAD R27, R15, c[0x0][0x1b4], R22 ;
 Instr 1261 @ 0x4ed0 (20176) - FSEL R4, R4, c[0x0][0x210], P2 ;
 Instr 1262 @ 0x4ee0 (20192) - @P4 IMAD R29, R25, c[0x0][0x1b4], R18 ;
 Instr 1263 @ 0x4ef0 (20208) - FSETP.GEU.AND P2, PT, R5, c[0x0][0x210], PT ;
 Instr 1264 @ 0x4f00 (20224) - @P4 IMAD.MOV.U32 R22, RZ, RZ, R26 ;
 Instr 1265 @ 0x4f10 (20240) - FSEL R24, R24, c[0x0][0x220], !P3 ;
 Instr 1266 @ 0x4f20 (20256) - @P4 IMAD.MOV.U32 R18, RZ, RZ, R28 ;
 Instr 1267 @ 0x4f30 (20272) - FSETP.GT.AND P3, PT, R4, c[0x0][0x220], PT ;
 Instr 1268 @ 0x4f40 (20288) - FFMA R7, R7, R0, R55 ;
 Instr 1269 @ 0x4f50 (20304) - FSEL R5, R5, c[0x0][0x210], P2 ;
 Instr 1270 @ 0x4f60 (20320) - IMAD R22, R22, c[0x0][0x24c], R21 ;
 Instr 1271 @ 0x4f70 (20336) - FSETP.GEU.AND P2, PT, R6, c[0x0][0x210], PT ;
 Instr 1272 @ 0x4f80 (20352) - IMAD R18, R18, c[0x0][0x24c], R23 ;
 Instr 1273 @ 0x4f90 (20368) - FSEL R4, R4, c[0x0][0x220], !P3 ;
 Instr 1274 @ 0x4fa0 (20384) - IMAD R22, R27, c[0x0][0x250], R22 ;
 Instr 1275 @ 0x4fb0 (20400) - FSETP.GT.AND P3, PT, R5, c[0x0][0x220], PT ;
 Instr 1276 @ 0x4fc0 (20416) - IMAD R18, R29, c[0x0][0x250], R18 ;
 Instr 1277 @ 0x4fd0 (20432) - FSEL R6, R6, c[0x0][0x210], P2 ;
 Instr 1278 @ 0x4fe0 (20448) - F2F.F16.F32 R3, R16 ;
 Instr 1279 @ 0x4ff0 (20464) - FSETP.GEU.AND P2, PT, R7, c[0x0][0x210], PT ;
 Instr 1280 @ 0x5000 (20480) - FSEL R21, R5, c[0x0][0x220], !P3 ;
 Instr 1281 @ 0x5010 (20496) - FSEL R5, R7, c[0x0][0x210], P2 ;
 Instr 1282 @ 0x5020 (20512) - SEL R7, R22, 0xffffffff, P0 ;
 Instr 1283 @ 0x5030 (20528) - F2F.F16.F32 R14, R14 ;
 Instr 1284 @ 0x5040 (20544) - SEL R18, R18, 0xffffffff, P1 ;
 Instr 1285 @ 0x5050 (20560) - FSETP.GT.AND P3, PT, R6, c[0x0][0x220], PT ;
 Instr 1286 @ 0x5060 (20576) - FSETP.GT.AND P2, PT, R5, c[0x0][0x220], PT ;
 Instr 1287 @ 0x5070 (20592) - ISETP.GE.AND P0, PT, R7, RZ, PT ;
 Instr 1288 @ 0x5080 (20608) - F2F.F16.F32 R15, R24 ;
 Instr 1289 @ 0x5090 (20624) - ISETP.GE.AND P1, PT, R18, RZ, PT ;
 Instr 1290 @ 0x50a0 (20640) - FSEL R17, R6, c[0x0][0x220], !P3 ;
 Instr 1291 @ 0x50b0 (20656) - FSEL R16, R5, c[0x0][0x220], !P2 ;
 Instr 1292 @ 0x50c0 (20672) - PRMT R5, R9, 0x5410, R8 ;
 Instr 1293 @ 0x50d0 (20688) - F2F.F16.F32 R11, R11 ;
 Instr 1294 @ 0x50e0 (20704) - @P0 IMAD.MOV.U32 R6, RZ, RZ, 0x2 ;
 Instr 1295 @ 0x50f0 (20720) - @P1 IMAD.MOV.U32 R23, RZ, RZ, 0x2 ;
 Instr 1296 @ 0x5100 (20736) - @P0 IMAD.WIDE R8, R7, R6, c[0x0][0x170] ;
 Instr 1297 @ 0x5110 (20752) - F2F.F16.F32 R10, R10 ;
 Instr 1298 @ 0x5120 (20768) - PRMT R6, R12, 0x5410, R3 ;
 Instr 1299 @ 0x5130 (20784) - @P1 IMAD.WIDE R22, R18, R23, c[0x0][0x170] ;
 Instr 1300 @ 0x5140 (20800) - PRMT R7, R14, 0x5410, R15 ;
 Instr 1301 @ 0x5150 (20816) - F2F.F16.F32 R0, R4 ;
 Instr 1302 @ 0x5160 (20832) - F2F.F16.F32 R21, R21 ;
 Instr 1303 @ 0x5170 (20848) - PRMT R4, R20, 0x5410, R19 ;
 Instr 1304 @ 0x5180 (20864) - F2F.F16.F32 R17, R17 ;
 Instr 1305 @ 0x5190 (20880) - @P1 STG.E.128.SYS [R22], R4 ;
 Instr 1306 @ 0x51a0 (20896) - F2F.F16.F32 R16, R16 ;
 Instr 1307 @ 0x51b0 (20912) - PRMT R4, R2, 0x5410, R13 ;
 Instr 1308 @ 0x51c0 (20928) - PRMT R5, R11, 0x5410, R10 ;
 Instr 1309 @ 0x51d0 (20944) - PRMT R6, R0, 0x5410, R21 ;
 Instr 1310 @ 0x51e0 (20960) - PRMT R7, R17, 0x5410, R16 ;
 Instr 1311 @ 0x51f0 (20976) - @P0 STG.E.128.SYS [R8], R4 ;
Basic block id 53 - num instructions 2
 Instr 1312 @ 0x5200 (20992) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
 Instr 1313 @ 0x5210 (21008) - @P0 BRA 0x81a0 ;
Basic block id 54 - num instructions 5
 Instr 1314 @ 0x5220 (21024) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1315 @ 0x5230 (21040) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
 Instr 1316 @ 0x5240 (21056) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1317 @ 0x5250 (21072) - BSSY B0, 0x5390 ;
 Instr 1318 @ 0x5260 (21088) - @P0 BRA 0x5380 ;
Basic block id 55 - num instructions 5
 Instr 1319 @ 0x5270 (21104) - MEMBAR.SC.GPU ;
 Instr 1320 @ 0x5280 (21120) - ISETP.NE.AND P1, PT, R58, RZ, PT ;
 Instr 1321 @ 0x5290 (21136) - ERRBAR;
 Instr 1322 @ 0x52a0 (21152) - CCTL.IVALL ;
 Instr 1323 @ 0x52b0 (21168) - @P1 BRA 0x5320 ;
Basic block id 56 - num instructions 6
 Instr 1324 @ 0x52c0 (21184) - S2R R0, SR_LANEID ;
 Instr 1325 @ 0x52d0 (21200) - VOTEU.ANY UR5, UPT, PT ;
 Instr 1326 @ 0x52e0 (21216) - UFLO.U32 UR4, UR5 ;
 Instr 1327 @ 0x52f0 (21232) - POPC R3, UR5 ;
 Instr 1328 @ 0x5300 (21248) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 1329 @ 0x5310 (21264) - @P0 RED.E.ADD.STRONG.GPU [R68], R3 ;
Basic block id 57 - num instructions 6
 Instr 1330 @ 0x5320 (21280) - S2R R0, SR_LANEID ;
 Instr 1331 @ 0x5330 (21296) - VOTEU.ANY UR5, UPT, PT ;
 Instr 1332 @ 0x5340 (21312) - UFLO.U32 UR4, UR5 ;
 Instr 1333 @ 0x5350 (21328) - POPC R3, UR5 ;
 Instr 1334 @ 0x5360 (21344) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 1335 @ 0x5370 (21360) - @P0 RED.E.ADD.STRONG.GPU [R66], R3 ;
Basic block id 58 - num instructions 2
 Instr 1336 @ 0x5380 (21376) - BSYNC B0 ;
 Instr 1337 @ 0x5390 (21392) - BRA 0x81a0 ;
Basic block id 59 - num instructions 7
 Instr 1338 @ 0x53a0 (21408) - ISETP.NE.AND P0, PT, R37, 0x1, PT ;
 Instr 1339 @ 0x53b0 (21424) - UMOV UR9, 0x1 ;
 Instr 1340 @ 0x53c0 (21440) - IMAD.MOV.U32 R63, RZ, RZ, RZ ;
 Instr 1341 @ 0x53d0 (21456) - MOV R68, RZ ;
 Instr 1342 @ 0x53e0 (21472) - CS2R R66, SRZ ;
 Instr 1343 @ 0x53f0 (21488) - CS2R R64, SRZ ;
 Instr 1344 @ 0x5400 (21504) - @!P0 BRA 0x5a00 ;
Basic block id 60 - num instructions 5
 Instr 1345 @ 0x5410 (21520) - IMAD.MOV.U32 R38, RZ, RZ, 0x2 ;
 Instr 1346 @ 0x5420 (21536) - ISETP.NE.AND P1, PT, R37, c[0x0][0x294], PT ;
 Instr 1347 @ 0x5430 (21552) - IMAD.MOV.U32 R68, RZ, RZ, R36 ;
 Instr 1348 @ 0x5440 (21568) - ISETP.EQ.AND P0, PT, R38, c[0x0][0x298], PT ;
 Instr 1349 @ 0x5450 (21584) - @!P1 BRA P0, 0x5a00 ;
Basic block id 61 - num instructions 6
 Instr 1350 @ 0x5460 (21600) - MOV R37, UR8 ;
 Instr 1351 @ 0x5470 (21616) - IMAD.MOV.U32 R38, RZ, RZ, 0x4 ;
 Instr 1352 @ 0x5480 (21632) - ISETP.NE.AND P2, PT, R58, RZ, PT ;
 Instr 1353 @ 0x5490 (21648) - ISETP.EQ.AND P0, PT, R37, c[0x0][0x298], PT ;
 Instr 1354 @ 0x54a0 (21664) - IMAD.WIDE R64, R59, R38, c[0x0][0x2c0] ;
 Instr 1355 @ 0x54b0 (21680) - @P2 BRA P0, 0x5840 ;
Basic block id 62 - num instructions 36
 Instr 1356 @ 0x54c0 (21696) - IABS R40, c[0x0][0x294] ;
 Instr 1357 @ 0x54d0 (21712) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 1358 @ 0x54e0 (21728) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1359 @ 0x54f0 (21744) - BSSY B0, 0x57b0 ;
 Instr 1360 @ 0x5500 (21760) - I2F.RP R44, R40 ;
 Instr 1361 @ 0x5510 (21776) - MUFU.RCP R43, R44 ;
 Instr 1362 @ 0x5520 (21792) - IADD3 R43, R43, 0xffffffe, RZ ;
 Instr 1363 @ 0x5530 (21808) - F2I.FTZ.U32.TRUNC.NTZ R43, R43 ;
 Instr 1364 @ 0x5540 (21824) - IMAD.MOV R37, RZ, RZ, -R43.reuse ;
 Instr 1365 @ 0x5550 (21840) - IMAD R39, R37, R40, RZ ;
 Instr 1366 @ 0x5560 (21856) - IABS R37, R36 ;
 Instr 1367 @ 0x5570 (21872) - IMAD.HI.U32 R42, R43, R39, R42 ;
 Instr 1368 @ 0x5580 (21888) - IMAD.MOV.U32 R41, RZ, RZ, R37 ;
 Instr 1369 @ 0x5590 (21904) - IMAD.HI.U32 R39, R42, R41, RZ ;
 Instr 1370 @ 0x55a0 (21920) - IMAD.MOV R37, RZ, RZ, -R39 ;
 Instr 1371 @ 0x55b0 (21936) - IMAD R37, R40, R37, R41 ;
 Instr 1372 @ 0x55c0 (21952) - ISETP.GT.U32.AND P0, PT, R40, R37, PT ;
 Instr 1373 @ 0x55d0 (21968) - @!P0 IMAD.IADD R37, R37, 0x1, -R40 ;
 Instr 1374 @ 0x55e0 (21984) - @!P0 IADD3 R39, R39, 0x1, RZ ;
 Instr 1375 @ 0x55f0 (22000) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x294], PT ;
 Instr 1376 @ 0x5600 (22016) - ISETP.GE.U32.AND P2, PT, R37, R40, PT ;
 Instr 1377 @ 0x5610 (22032) - LOP3.LUT R37, R36, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 1378 @ 0x5620 (22048) - ISETP.GE.AND P1, PT, R37, RZ, PT ;
 Instr 1379 @ 0x5630 (22064) - @P2 IADD3 R39, R39, 0x1, RZ ;
 Instr 1380 @ 0x5640 (22080) - IMAD.MOV.U32 R37, RZ, RZ, R39 ;
 Instr 1381 @ 0x5650 (22096) - @!P1 IMAD.MOV R37, RZ, RZ, -R37 ;
 Instr 1382 @ 0x5660 (22112) - @!P0 LOP3.LUT R37, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 1383 @ 0x5670 (22128) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
 Instr 1384 @ 0x5680 (22144) - ISETP.NE.AND P1, PT, R37.reuse, RZ, PT ;
 Instr 1385 @ 0x5690 (22160) - IMAD.MOV R39, RZ, RZ, -R37 ;
 Instr 1386 @ 0x56a0 (22176) - ISETP.EQ.OR P0, PT, R37, RZ, P0 ;
 Instr 1387 @ 0x56b0 (22192) - SEL R63, RZ, 0x1, !P1 ;
 Instr 1388 @ 0x56c0 (22208) - IMAD R68, R39, c[0x0][0x294], R36 ;
 Instr 1389 @ 0x56d0 (22224) - IMAD R67, R60, R68, R59 ;
 Instr 1390 @ 0x56e0 (22240) - IMAD.WIDE R66, R67, R38, c[0x0][0x2b8] ;
 Instr 1391 @ 0x56f0 (22256) - @P0 BRA 0x57a0 ;
Basic block id 63 - num instructions 4
 Instr 1392 @ 0x5700 (22272) - LDG.E.STRONG.GPU R36, [R66] ;
 Instr 1393 @ 0x5710 (22288) - ISETP.NE.AND P0, PT, R36, R37, PT ;
 Instr 1394 @ 0x5720 (22304) - CCTL.IVALL ;
 Instr 1395 @ 0x5730 (22320) - @!P0 BRA 0x57a0 ;
Basic block id 64 - num instructions 5
 Instr 1396 @ 0x5740 (22336) - VOTE.ANY R36, PT, PT ;
 Instr 1397 @ 0x5750 (22352) - YIELD ;
 Instr 1398 @ 0x5760 (22368) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1399 @ 0x5770 (22384) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 1400 @ 0x5780 (22400) - @!P0 BRA.U 0x5700 ;
Basic block id 65 - num instructions 1
 Instr 1401 @ 0x5790 (22416) - BRA 0x5740 ;
Basic block id 66 - num instructions 2
 Instr 1402 @ 0x57a0 (22432) - BSYNC B0 ;
 Instr 1403 @ 0x57b0 (22448) - BRA.CONV 0x57f0 ;
Basic block id 67 - num instructions 3
 Instr 1404 @ 0x57c0 (22464) - MOV R37, 0xffffffff ;
 Instr 1405 @ 0x57d0 (22480) - MOV R36, 0x57f0 ;
 Instr 1406 @ 0x57e0 (22496) - CALL.REL.NOINC 0x81c0 ;
Basic block id 68 - num instructions 5
 Instr 1407 @ 0x57f0 (22512) - NOP ;
 Instr 1408 @ 0x5800 (22528) - WARPSYNC 0xffffffff ;
 Instr 1409 @ 0x5810 (22544) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1410 @ 0x5820 (22560) - UMOV UR9, URZ ;
 Instr 1411 @ 0x5830 (22576) - BRA 0x5a00 ;
Basic block id 69 - num instructions 8
 Instr 1412 @ 0x5840 (22592) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
 Instr 1413 @ 0x5850 (22608) - IMAD.MOV.U32 R63, RZ, RZ, 0x1 ;
 Instr 1414 @ 0x5860 (22624) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1415 @ 0x5870 (22640) - BSSY B0, 0x5970 ;
 Instr 1416 @ 0x5880 (22656) - ISETP.EQ.OR P0, PT, R39, RZ, P0 ;
 Instr 1417 @ 0x5890 (22672) - IADD3 R63, -R63, c[0x0][0x294], RZ ;
 Instr 1418 @ 0x58a0 (22688) - @P1 IMAD.MOV R63, RZ, RZ, c[0x0][0x294] ;
 Instr 1419 @ 0x58b0 (22704) - @P0 BRA 0x5960 ;
Basic block id 70 - num instructions 4
 Instr 1420 @ 0x58c0 (22720) - LDG.E.STRONG.GPU R36, [R64] ;
 Instr 1421 @ 0x58d0 (22736) - ISETP.NE.AND P0, PT, R36, R39, PT ;
 Instr 1422 @ 0x58e0 (22752) - CCTL.IVALL ;
 Instr 1423 @ 0x58f0 (22768) - @!P0 BRA 0x5960 ;
Basic block id 71 - num instructions 5
 Instr 1424 @ 0x5900 (22784) - VOTE.ANY R36, PT, PT ;
 Instr 1425 @ 0x5910 (22800) - YIELD ;
 Instr 1426 @ 0x5920 (22816) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1427 @ 0x5930 (22832) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 1428 @ 0x5940 (22848) - @!P0 BRA.U 0x58c0 ;
Basic block id 72 - num instructions 1
 Instr 1429 @ 0x5950 (22864) - BRA 0x5900 ;
Basic block id 73 - num instructions 2
 Instr 1430 @ 0x5960 (22880) - BSYNC B0 ;
 Instr 1431 @ 0x5970 (22896) - BRA.CONV 0x59b0 ;
Basic block id 74 - num instructions 3
 Instr 1432 @ 0x5980 (22912) - MOV R37, 0xffffffff ;
 Instr 1433 @ 0x5990 (22928) - MOV R36, 0x59b0 ;
 Instr 1434 @ 0x59a0 (22944) - CALL.REL.NOINC 0x81c0 ;
Basic block id 75 - num instructions 5
 Instr 1435 @ 0x59b0 (22960) - NOP ;
 Instr 1436 @ 0x59c0 (22976) - WARPSYNC 0xffffffff ;
 Instr 1437 @ 0x59d0 (22992) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1438 @ 0x59e0 (23008) - MOV R68, RZ ;
 Instr 1439 @ 0x59f0 (23024) - UMOV UR9, URZ ;
Basic block id 76 - num instructions 12
 Instr 1440 @ 0x5a00 (23040) - MOV R62, 0x2 ;
 Instr 1441 @ 0x5a10 (23056) - IMAD.MOV.U32 R36, RZ, RZ, 0x1 ;
 Instr 1442 @ 0x5a20 (23072) - SHF.R.S32.HI R71, RZ, 0x1f, R68 ;
 Instr 1443 @ 0x5a30 (23088) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1444 @ 0x5a40 (23104) - ISETP.LE.AND P3, PT, R62, c[0x0][0x290], PT ;
 Instr 1445 @ 0x5a50 (23120) - ISETP.NE.AND P0, PT, R58, RZ, PT ;
 Instr 1446 @ 0x5a60 (23136) - IMAD R71, R71, c[0x0][0x2a0], RZ ;
 Instr 1447 @ 0x5a70 (23152) - ISETP.EQ.AND P0, PT, R36, c[0x0][0x298], P0 ;
 Instr 1448 @ 0x5a80 (23168) - IMAD R71, R68.reuse, c[0x0][0x2a4], R71 ;
 Instr 1449 @ 0x5a90 (23184) - IMAD.WIDE.U32 R68, R68, c[0x0][0x2a0], RZ ;
 Instr 1450 @ 0x5aa0 (23200) - IMAD.IADD R71, R69, 0x1, R71 ;
 Instr 1451 @ 0x5ab0 (23216) - @!P3 BRA 0x5f50 ;
Basic block id 77 - num instructions 5
 Instr 1452 @ 0x5ac0 (23232) - ISETP.GE.AND P1, PT, R63, 0x1, PT ;
 Instr 1453 @ 0x5ad0 (23248) - IMAD.SHL.U32 R75, R60, 0x80, RZ ;
 Instr 1454 @ 0x5ae0 (23264) - IMAD R72, R59, 0x80, R92 ;
 Instr 1455 @ 0x5af0 (23280) - SHF.R.S32.HI R73, RZ, 0x1f, R75 ;
 Instr 1456 @ 0x5b00 (23296) - @!P1 BRA 0x5e30 ;
Basic block id 78 - num instructions 19
 Instr 1457 @ 0x5b10 (23312) - LEA R76, P1, R75.reuse, R68, 0x4 ;
 Instr 1458 @ 0x5b20 (23328) - IMAD.SHL.U32 R37, R72, 0x10, RZ ;
 Instr 1459 @ 0x5b30 (23344) - UMOV UR4, URZ ;
 Instr 1460 @ 0x5b40 (23360) - IMAD.MOV.U32 R70, RZ, RZ, R68 ;
 Instr 1461 @ 0x5b50 (23376) - LEA.HI.X R36, R75.reuse, R71, R73, 0x4, P1 ;
 Instr 1462 @ 0x5b60 (23392) - SHF.R.S32.HI R83, RZ, 0x1f, R37 ;
 Instr 1463 @ 0x5b70 (23408) - IMAD.WIDE.U32 R80, R75, 0x30, R70 ;
 Instr 1464 @ 0x5b80 (23424) - IADD3 R76, P2, P1, R76, c[0x0][0x2a8], R37 ;
 Instr 1465 @ 0x5b90 (23440) - IADD3.X R77, R36, c[0x0][0x2ac], R83, P2, P1 ;
 Instr 1466 @ 0x5ba0 (23456) - LEA R78, P1, R75.reuse, R68, 0x5 ;
 Instr 1467 @ 0x5bb0 (23472) - LEA.HI.X R36, R75, R71, R73, 0x5, P1 ;
 Instr 1468 @ 0x5bc0 (23488) - IADD3 R78, P2, P1, R78, c[0x0][0x2a8], R37 ;
 Instr 1469 @ 0x5bd0 (23504) - IADD3.X R79, R36, c[0x0][0x2ac], R83, P2, P1 ;
 Instr 1470 @ 0x5be0 (23520) - IMAD R36, R73, 0x30, RZ ;
 Instr 1471 @ 0x5bf0 (23536) - IADD3 R80, P2, P1, R80, c[0x0][0x2a8], R37 ;
 Instr 1472 @ 0x5c00 (23552) - IMAD.IADD R36, R36, 0x1, R81 ;
 Instr 1473 @ 0x5c10 (23568) - IADD3.X R81, R36, c[0x0][0x2ac], R83, P2, P1 ;
 Instr 1474 @ 0x5c20 (23584) - IADD3 R82, P2, P1, R68, c[0x0][0x2a8], R37 ;
 Instr 1475 @ 0x5c30 (23600) - IADD3.X R83, R71, c[0x0][0x2ac], R83, P2, P1 ;
Basic block id 79 - num instructions 31
 Instr 1476 @ 0x5c40 (23616) - LDG.E.128.STRONG.GPU R48, [R82] ;
 Instr 1477 @ 0x5c50 (23632) - LDG.E.128.STRONG.GPU R44, [R76] ;
 Instr 1478 @ 0x5c60 (23648) - LDG.E.128.STRONG.GPU R40, [R78] ;
 Instr 1479 @ 0x5c70 (23664) - LDG.E.128.STRONG.GPU R36, [R80] ;
 Instr 1480 @ 0x5c80 (23680) - IADD3 R82, P1, R82, c[0x0][0x2a0], RZ ;
 Instr 1481 @ 0x5c90 (23696) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 1482 @ 0x5ca0 (23712) - IADD3.X R83, R83, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1483 @ 0x5cb0 (23728) - IADD3 R76, P1, R76, c[0x0][0x2a0], RZ ;
 Instr 1484 @ 0x5cc0 (23744) - IADD3.X R77, R77, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1485 @ 0x5cd0 (23760) - IADD3 R78, P1, R78, c[0x0][0x2a0], RZ ;
 Instr 1486 @ 0x5ce0 (23776) - IADD3.X R79, R79, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1487 @ 0x5cf0 (23792) - IADD3 R80, P1, R80, c[0x0][0x2a0], RZ ;
 Instr 1488 @ 0x5d00 (23808) - IADD3.X R81, R81, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1489 @ 0x5d10 (23824) - ISETP.LE.AND P1, PT, R63, UR4, PT ;
 Instr 1490 @ 0x5d20 (23840) - FADD R4, R48, R4 ;
 Instr 1491 @ 0x5d30 (23856) - FADD R5, R49, R5 ;
 Instr 1492 @ 0x5d40 (23872) - FADD R6, R50, R6 ;
 Instr 1493 @ 0x5d50 (23888) - FADD R7, R51, R7 ;
 Instr 1494 @ 0x5d60 (23904) - FADD R8, R44, R8 ;
 Instr 1495 @ 0x5d70 (23920) - FADD R9, R45, R9 ;
 Instr 1496 @ 0x5d80 (23936) - FADD R10, R46, R10 ;
 Instr 1497 @ 0x5d90 (23952) - FADD R11, R47, R11 ;
 Instr 1498 @ 0x5da0 (23968) - FADD R12, R40, R12 ;
 Instr 1499 @ 0x5db0 (23984) - FADD R13, R41, R13 ;
 Instr 1500 @ 0x5dc0 (24000) - FADD R14, R42, R14 ;
 Instr 1501 @ 0x5dd0 (24016) - FADD R15, R43, R15 ;
 Instr 1502 @ 0x5de0 (24032) - FADD R16, R36, R16 ;
 Instr 1503 @ 0x5df0 (24048) - FADD R17, R37, R17 ;
 Instr 1504 @ 0x5e00 (24064) - FADD R18, R38, R18 ;
 Instr 1505 @ 0x5e10 (24080) - FADD R19, R39, R19 ;
 Instr 1506 @ 0x5e20 (24096) - @!P1 BRA 0x5c40 ;
Basic block id 80 - num instructions 1
 Instr 1507 @ 0x5e30 (24112) - @P0 BRA 0x5f50 ;
Basic block id 81 - num instructions 17
 Instr 1508 @ 0x5e40 (24128) - IMAD.MOV.U32 R36, RZ, RZ, R68 ;
 Instr 1509 @ 0x5e50 (24144) - SHF.L.U64.HI R73, R75, 0x4, R73 ;
 Instr 1510 @ 0x5e60 (24160) - IMAD.MOV.U32 R37, RZ, RZ, R71 ;
 Instr 1511 @ 0x5e70 (24176) - IMAD.WIDE R36, R72, 0x10, R36 ;
 Instr 1512 @ 0x5e80 (24192) - IADD3 R38, P1, R36, c[0x0][0x2a8], RZ ;
 Instr 1513 @ 0x5e90 (24208) - IMAD.SHL.U32 R36, R75, 0x10, RZ ;
 Instr 1514 @ 0x5ea0 (24224) - IADD3.X R39, R37, c[0x0][0x2ac], RZ, P1, !PT ;
 Instr 1515 @ 0x5eb0 (24240) - IADD3 R42, P1, R36, R38, RZ ;
 Instr 1516 @ 0x5ec0 (24256) - IADD3.X R43, R73, R39, RZ, P1, !PT ;
 Instr 1517 @ 0x5ed0 (24272) - IADD3 R40, P1, R36.reuse, R42, RZ ;
 Instr 1518 @ 0x5ee0 (24288) - STG.E.128.SYS [R38], R4 ;
 Instr 1519 @ 0x5ef0 (24304) - IMAD.X R41, R73.reuse, 0x1, R43, P1 ;
 Instr 1520 @ 0x5f00 (24320) - IADD3 R36, P1, R36, R40, RZ ;
 Instr 1521 @ 0x5f10 (24336) - STG.E.128.SYS [R42], R8 ;
 Instr 1522 @ 0x5f20 (24352) - IADD3.X R37, R73, R41, RZ, P1, !PT ;
 Instr 1523 @ 0x5f30 (24368) - STG.E.128.SYS [R40], R12 ;
 Instr 1524 @ 0x5f40 (24384) - STG.E.128.SYS [R36], R16 ;
Basic block id 82 - num instructions 1
 Instr 1525 @ 0x5f50 (24400) - @!P0 BRA 0x6d80 ;
Basic block id 83 - num instructions 226
 Instr 1526 @ 0x5f60 (24416) - @P6 IMAD.HI.U32 R36, R3.reuse, c[0x0][0x3dc], RZ ;
 Instr 1527 @ 0x5f70 (24432) - ISETP.GE.AND P1, PT, R56, R93, PT ;
 Instr 1528 @ 0x5f80 (24448) - P2R R48, PR, RZ, 0x1 ;
 Instr 1529 @ 0x5f90 (24464) - IMAD.MOV.U32 R43, RZ, RZ, R3 ;
 Instr 1530 @ 0x5fa0 (24480) - ISETP.LT.AND P2, PT, R3, c[0x0][0x3c4], !P1 ;
 Instr 1531 @ 0x5fb0 (24496) - IMAD.MOV.U32 R41, RZ, RZ, RZ ;
 Instr 1532 @ 0x5fc0 (24512) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 1533 @ 0x5fd0 (24528) - @P6 SHF.R.U32.HI R43, RZ, c[0x0][0x3e0], R36 ;
 Instr 1534 @ 0x5fe0 (24544) - IMAD.MOV.U32 R39, RZ, RZ, RZ ;
 Instr 1535 @ 0x5ff0 (24560) - @P6 IMAD.MOV R36, RZ, RZ, -R43 ;
 Instr 1536 @ 0x6000 (24576) - @P6 IMAD R41, R36, c[0x0][0x3c8], R3 ;
 Instr 1537 @ 0x6010 (24592) - @P5 IMAD.HI.U32 R40, R41, c[0x0][0x3e4], RZ ;
 Instr 1538 @ 0x6020 (24608) - @P5 SHF.R.U32.HI R40, RZ, c[0x0][0x3e8], R40 ;
 Instr 1539 @ 0x6030 (24624) - @P5 IMAD.MOV R36, RZ, RZ, -R40.reuse ;
 Instr 1540 @ 0x6040 (24640) - @P5 IMAD R42, R36, c[0x0][0x3cc], R41 ;
 Instr 1541 @ 0x6050 (24656) - IMAD R36, R56, c[0x0][0x254], RZ ;
 Instr 1542 @ 0x6060 (24672) - @P4 IMAD.HI.U32 R38, R42, c[0x0][0x3ec], RZ ;
 Instr 1543 @ 0x6070 (24688) - @P5 IMAD.MOV.U32 R41, RZ, RZ, R40 ;
 Instr 1544 @ 0x6080 (24704) - @P4 SHF.R.U32.HI R38, RZ, c[0x0][0x3f0], R38 ;
 Instr 1545 @ 0x6090 (24720) - IMAD R40, R43, c[0x0][0x244], R36 ;
 Instr 1546 @ 0x60a0 (24736) - IADD3 R43, R3, 0x10, RZ ;
 Instr 1547 @ 0x60b0 (24752) - @P4 IMAD.MOV R37, RZ, RZ, -R38 ;
 Instr 1548 @ 0x60c0 (24768) - ISETP.LT.AND P1, PT, R43, c[0x0][0x3c4], !P1 ;
 Instr 1549 @ 0x60d0 (24784) - IMAD R41, R41, c[0x0][0x248], R40 ;
 Instr 1550 @ 0x60e0 (24800) - @P4 IMAD R39, R37, c[0x0][0x1b4], R42 ;
 Instr 1551 @ 0x60f0 (24816) - @P6 IMAD.HI.U32 R37, R43, c[0x0][0x3dc], RZ ;
 Instr 1552 @ 0x6100 (24832) - @P4 IMAD.MOV.U32 R42, RZ, RZ, R38 ;
 Instr 1553 @ 0x6110 (24848) - @P6 SHF.R.U32.HI R37, RZ, c[0x0][0x3e0], R37 ;
 Instr 1554 @ 0x6120 (24864) - IMAD.MOV.U32 R40, RZ, RZ, RZ ;
 Instr 1555 @ 0x6130 (24880) - IMAD R42, R42, c[0x0][0x24c], R41 ;
 Instr 1556 @ 0x6140 (24896) - @P6 IMAD.MOV R38, RZ, RZ, -R37 ;
 Instr 1557 @ 0x6150 (24912) - IMAD R39, R39, c[0x0][0x250], R42 ;
 Instr 1558 @ 0x6160 (24928) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 1559 @ 0x6170 (24944) - SEL R51, R39, 0xffffffff, P2 ;
 Instr 1560 @ 0x6180 (24960) - @P6 IMAD R42, R38, c[0x0][0x3c8], R43 ;
 Instr 1561 @ 0x6190 (24976) - @P6 IMAD.MOV.U32 R43, RZ, RZ, R37 ;
 Instr 1562 @ 0x61a0 (24992) - ISETP.GE.AND P2, PT, R51, RZ, PT ;
 Instr 1563 @ 0x61b0 (25008) - @P5 IMAD.HI.U32 R39, R42, c[0x0][0x3e4], RZ ;
 Instr 1564 @ 0x61c0 (25024) - IMAD R43, R43, c[0x0][0x244], R36 ;
 Instr 1565 @ 0x61d0 (25040) - @P5 SHF.R.U32.HI R39, RZ, c[0x0][0x3e8], R39 ;
 Instr 1566 @ 0x61e0 (25056) - @P5 IMAD.MOV R41, RZ, RZ, -R39 ;
 Instr 1567 @ 0x61f0 (25072) - @P2 IMAD.WIDE R44, R51, R62, c[0x0][0x178] ;
 Instr 1568 @ 0x6200 (25088) - @P5 IMAD R40, R41, c[0x0][0x3cc], R42 ;
 Instr 1569 @ 0x6210 (25104) - IMAD.MOV.U32 R41, RZ, RZ, RZ ;
 Instr 1570 @ 0x6220 (25120) - @P4 IMAD.HI.U32 R38, R40, c[0x0][0x3ec], RZ ;
 Instr 1571 @ 0x6230 (25136) - @P5 IMAD.MOV.U32 R42, RZ, RZ, R39 ;
 Instr 1572 @ 0x6240 (25152) - @P4 SHF.R.U32.HI R38, RZ, c[0x0][0x3f0], R38 ;
 Instr 1573 @ 0x6250 (25168) - IMAD R43, R42, c[0x0][0x248], R43 ;
 Instr 1574 @ 0x6260 (25184) - @P4 IMAD.MOV R37, RZ, RZ, -R38 ;
 Instr 1575 @ 0x6270 (25200) - @P4 IMAD R41, R37, c[0x0][0x1b4], R40 ;
 Instr 1576 @ 0x6280 (25216) - @P4 IMAD.MOV.U32 R40, RZ, RZ, R38 ;
 Instr 1577 @ 0x6290 (25232) - IMAD R40, R40, c[0x0][0x24c], R43 ;
 Instr 1578 @ 0x62a0 (25248) - CS2R R42, SRZ ;
 Instr 1579 @ 0x62b0 (25264) - IMAD R40, R41, c[0x0][0x250], R40 ;
 Instr 1580 @ 0x62c0 (25280) - IMAD.MOV.U32 R41, RZ, RZ, RZ ;
 Instr 1581 @ 0x62d0 (25296) - SEL R49, R40, 0xffffffff, P1 ;
 Instr 1582 @ 0x62e0 (25312) - IMAD.MOV.U32 R40, RZ, RZ, RZ ;
 Instr 1583 @ 0x62f0 (25328) - @P2 LDG.E.128.SYS R40, [R44] ;
 Instr 1584 @ 0x6300 (25344) - ISETP.GE.AND P1, PT, R49, RZ, PT ;
 Instr 1585 @ 0x6310 (25360) - CS2R R36, SRZ ;
 Instr 1586 @ 0x6320 (25376) - IMAD.MOV.U32 R38, RZ, RZ, RZ ;
 Instr 1587 @ 0x6330 (25392) - IMAD.MOV.U32 R39, RZ, RZ, RZ ;
 Instr 1588 @ 0x6340 (25408) - @P1 IMAD.WIDE R72, R49, R62, c[0x0][0x178] ;
 Instr 1589 @ 0x6350 (25424) - @P1 LDG.E.128.SYS R36, [R72] ;
 Instr 1590 @ 0x6360 (25440) - STS.64 [R2], R4 ;
 Instr 1591 @ 0x6370 (25456) - STS.64 [R2+0x10], R8 ;
 Instr 1592 @ 0x6380 (25472) - HADD2.F32 R73, R52.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1593 @ 0x6390 (25488) - STS.64 [R2+0x900], R6 ;
 Instr 1594 @ 0x63a0 (25504) - STS.64 [R2+0x910], R10 ;
 Instr 1595 @ 0x63b0 (25520) - HADD2.F32 R8, R52.H1_H1, -RZ.H0_H0 ;
 Instr 1596 @ 0x63c0 (25536) - STS.64 [R2+0x40], R12 ;
 Instr 1597 @ 0x63d0 (25552) - STS.64 [R2+0x50], R16 ;
 Instr 1598 @ 0x63e0 (25568) - STS.64 [R2+0x940], R14 ;
 Instr 1599 @ 0x63f0 (25584) - HADD2.F32 R13, R53.H0_H0, -RZ.H0_H0 ;
 Instr 1600 @ 0x6400 (25600) - STS.64 [R2+0x950], R18 ;
 Instr 1601 @ 0x6410 (25616) - HADD2.F32 R17, R54.H1_H1, -RZ.H0_H0 ;
 Instr 1602 @ 0x6420 (25632) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1603 @ 0x6430 (25648) - HADD2.F32 R14, R53.H1_H1, -RZ.H0_H0 ;
 Instr 1604 @ 0x6440 (25664) - HADD2.F32 R15, R54.H0_H0, -RZ.H0_H0 ;
 Instr 1605 @ 0x6450 (25680) - HADD2.F32 R19, R55.H0_H0, -RZ.H0_H0 ;
 Instr 1606 @ 0x6460 (25696) - LDS.U.128 R44, [R57.X16] ;
 Instr 1607 @ 0x6470 (25712) - FFMA R44, R44, R0.reuse, R73 ;
 Instr 1608 @ 0x6480 (25728) - FFMA R45, R45, R0, R8 ;
 Instr 1609 @ 0x6490 (25744) - FFMA R46, R46, R0.reuse, R13 ;
 Instr 1610 @ 0x64a0 (25760) - FFMA R47, R47, R0, R14 ;
 Instr 1611 @ 0x64b0 (25776) - HADD2.F32 R4, R40.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1612 @ 0x64c0 (25792) - HADD2.F32 R40, R40.H1_H1, -RZ.H0_H0 ;
 Instr 1613 @ 0x64d0 (25808) - FFMA R44, R4, R61.reuse, R44 ;
 Instr 1614 @ 0x64e0 (25824) - HADD2.F32 R4, R41.H0_H0, -RZ.H0_H0 ;
 Instr 1615 @ 0x64f0 (25840) - FFMA R40, R40, R61.reuse, R45 ;
 Instr 1616 @ 0x6500 (25856) - FSETP.GEU.AND P0, PT, R44.reuse, c[0x0][0x210], PT ;
 Instr 1617 @ 0x6510 (25872) - FSEL R44, R44, c[0x0][0x210], P0 ;
 Instr 1618 @ 0x6520 (25888) - FFMA R4, R4, R61, R46 ;
 Instr 1619 @ 0x6530 (25904) - FSETP.GEU.AND P0, PT, R40, c[0x0][0x210], PT ;
 Instr 1620 @ 0x6540 (25920) - HADD2.F32 R10, R36.H0_H0, -RZ.H0_H0 ;
 Instr 1621 @ 0x6550 (25936) - FSEL R18, R40, c[0x0][0x210], P0 ;
 Instr 1622 @ 0x6560 (25952) - HADD2.F32 R36, R36.H1_H1, -RZ.H0_H0 ;
 Instr 1623 @ 0x6570 (25968) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1624 @ 0x6580 (25984) - FSEL R40, R4, c[0x0][0x210], P0 ;
 Instr 1625 @ 0x6590 (26000) - HADD2.F32 R4, R41.H1_H1, -RZ.H0_H0 ;
 Instr 1626 @ 0x65a0 (26016) - FFMA R4, R4, R61, R47 ;
 Instr 1627 @ 0x65b0 (26032) - @P2 IMAD.WIDE R46, R51, R62, c[0x0][0x170] ;
 Instr 1628 @ 0x65c0 (26048) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1629 @ 0x65d0 (26064) - FSEL R41, R4, c[0x0][0x210], P0 ;
 Instr 1630 @ 0x65e0 (26080) - LDS.U.128 R4, [R57.X16+0x1200] ;
 Instr 1631 @ 0x65f0 (26096) - FFMA R4, R4, R0, R73 ;
 Instr 1632 @ 0x6600 (26112) - FFMA R5, R5, R0.reuse, R8 ;
 Instr 1633 @ 0x6610 (26128) - FFMA R4, R10, R61.reuse, R4 ;
 Instr 1634 @ 0x6620 (26144) - LDS.U.128 R8, [R57.X16+0x90] ;
 Instr 1635 @ 0x6630 (26160) - FFMA R5, R36, R61, R5 ;
 Instr 1636 @ 0x6640 (26176) - FSETP.GEU.AND P0, PT, R4, c[0x0][0x210], PT ;
 Instr 1637 @ 0x6650 (26192) - HADD2.F32 R36, R55.H1_H1, -RZ.H0_H0 ;
 Instr 1638 @ 0x6660 (26208) - FFMA R6, R6, R0.reuse, R13 ;
 Instr 1639 @ 0x6670 (26224) - FSEL R12, R4, c[0x0][0x210], P0 ;
 Instr 1640 @ 0x6680 (26240) - FFMA R7, R7, R0, R14 ;
 Instr 1641 @ 0x6690 (26256) - HADD2.F32 R4, R42.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1642 @ 0x66a0 (26272) - FSETP.GEU.AND P0, PT, R5, c[0x0][0x210], PT ;
 Instr 1643 @ 0x66b0 (26288) - HADD2.F32 R42, R42.H1_H1, -RZ.H0_H0 ;
 Instr 1644 @ 0x66c0 (26304) - FSEL R16, R5, c[0x0][0x210], P0 ;
 Instr 1645 @ 0x66d0 (26320) - FFMA R8, R8, R0.reuse, R15 ;
 Instr 1646 @ 0x66e0 (26336) - FFMA R9, R9, R0.reuse, R17 ;
 Instr 1647 @ 0x66f0 (26352) - FFMA R4, R4, R61.reuse, R8 ;
 Instr 1648 @ 0x6700 (26368) - HADD2.F32 R8, R43.H0_H0, -RZ.H0_H0 ;
 Instr 1649 @ 0x6710 (26384) - FFMA R10, R10, R0, R19 ;
 Instr 1650 @ 0x6720 (26400) - FSETP.GEU.AND P0, PT, R4, c[0x0][0x210], PT ;
 Instr 1651 @ 0x6730 (26416) - FFMA R9, R42, R61, R9 ;
 Instr 1652 @ 0x6740 (26432) - FFMA R11, R11, R0, R36 ;
 Instr 1653 @ 0x6750 (26448) - FSEL R4, R4, c[0x0][0x210], P0 ;
 Instr 1654 @ 0x6760 (26464) - FFMA R8, R8, R61.reuse, R10 ;
 Instr 1655 @ 0x6770 (26480) - FSETP.GEU.AND P0, PT, R9.reuse, c[0x0][0x210], PT ;
 Instr 1656 @ 0x6780 (26496) - HADD2.F32 R10, R43.H1_H1, -RZ.H0_H0 ;
 Instr 1657 @ 0x6790 (26512) - FSEL R5, R9, c[0x0][0x210], P0 ;
 Instr 1658 @ 0x67a0 (26528) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 1659 @ 0x67b0 (26544) - FFMA R10, R10, R61, R11 ;
 Instr 1660 @ 0x67c0 (26560) - FSEL R8, R8, c[0x0][0x210], P0 ;
 Instr 1661 @ 0x67d0 (26576) - FSETP.GEU.AND P0, PT, R10.reuse, c[0x0][0x210], PT ;
 Instr 1662 @ 0x67e0 (26592) - FSEL R9, R10, c[0x0][0x210], P0 ;
 Instr 1663 @ 0x67f0 (26608) - FSETP.GT.AND P0, PT, R44.reuse, c[0x0][0x220], PT ;
 Instr 1664 @ 0x6800 (26624) - FSEL R44, R44, c[0x0][0x220], !P0 ;
 Instr 1665 @ 0x6810 (26640) - FSETP.GT.AND P0, PT, R18.reuse, c[0x0][0x220], PT ;
 Instr 1666 @ 0x6820 (26656) - FSEL R18, R18, c[0x0][0x220], !P0 ;
 Instr 1667 @ 0x6830 (26672) - F2F.F16.F32 R44, R44 ;
 Instr 1668 @ 0x6840 (26688) - FSETP.GT.AND P0, PT, R40.reuse, c[0x0][0x220], PT ;
 Instr 1669 @ 0x6850 (26704) - FSEL R40, R40, c[0x0][0x220], !P0 ;
 Instr 1670 @ 0x6860 (26720) - FSETP.GT.AND P0, PT, R41.reuse, c[0x0][0x220], PT ;
 Instr 1671 @ 0x6870 (26736) - F2F.F16.F32 R11, R18 ;
 Instr 1672 @ 0x6880 (26752) - FSEL R41, R41, c[0x0][0x220], !P0 ;
 Instr 1673 @ 0x6890 (26768) - FSETP.GT.AND P0, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 1674 @ 0x68a0 (26784) - F2F.F16.F32 R40, R40 ;
 Instr 1675 @ 0x68b0 (26800) - FSEL R4, R4, c[0x0][0x220], !P0 ;
 Instr 1676 @ 0x68c0 (26816) - HADD2.F32 R18, R37.H0_H0, -RZ.H0_H0 ;
 Instr 1677 @ 0x68d0 (26832) - FSETP.GT.AND P0, PT, R5, c[0x0][0x220], PT ;
 Instr 1678 @ 0x68e0 (26848) - FSEL R5, R5, c[0x0][0x220], !P0 ;
 Instr 1679 @ 0x68f0 (26864) - F2F.F16.F32 R41, R41 ;
 Instr 1680 @ 0x6900 (26880) - FSETP.GT.AND P0, PT, R8, c[0x0][0x220], PT ;
 Instr 1681 @ 0x6910 (26896) - FFMA R6, R18, R61, R6 ;
 Instr 1682 @ 0x6920 (26912) - FSEL R8, R8, c[0x0][0x220], !P0 ;
 Instr 1683 @ 0x6930 (26928) - FSETP.GT.AND P0, PT, R9.reuse, c[0x0][0x220], PT ;
 Instr 1684 @ 0x6940 (26944) - F2F.F16.F32 R4, R4 ;
 Instr 1685 @ 0x6950 (26960) - FSEL R9, R9, c[0x0][0x220], !P0 ;
 Instr 1686 @ 0x6960 (26976) - ISETP.NE.AND P0, PT, R48, RZ, PT ;
 Instr 1687 @ 0x6970 (26992) - F2F.F16.F32 R5, R5 ;
 Instr 1688 @ 0x6980 (27008) - F2F.F16.F32 R42, R8 ;
 Instr 1689 @ 0x6990 (27024) - F2F.F16.F32 R43, R9 ;
 Instr 1690 @ 0x69a0 (27040) - PRMT R8, R44, 0x5410, R11 ;
 Instr 1691 @ 0x69b0 (27056) - PRMT R10, R4, 0x5410, R5 ;
 Instr 1692 @ 0x69c0 (27072) - HADD2.F32 R4, R37.H1_H1, -RZ.H0_H0 ;
 Instr 1693 @ 0x69d0 (27088) - PRMT R9, R40, 0x5410, R41 ;
 Instr 1694 @ 0x69e0 (27104) - FFMA R4, R4, R61, R7 ;
 Instr 1695 @ 0x69f0 (27120) - PRMT R11, R42, 0x5410, R43 ;
 Instr 1696 @ 0x6a00 (27136) - @P2 STG.E.128.SYS [R46], R8 ;
 Instr 1697 @ 0x6a10 (27152) - FSETP.GEU.AND P2, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 1698 @ 0x6a20 (27168) - FSEL R13, R6, c[0x0][0x210], P2 ;
 Instr 1699 @ 0x6a30 (27184) - FSETP.GEU.AND P2, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1700 @ 0x6a40 (27200) - FSEL R14, R4, c[0x0][0x210], P2 ;
 Instr 1701 @ 0x6a50 (27216) - LDS.U.128 R4, [R57.X16+0x1290] ;
 Instr 1702 @ 0x6a60 (27232) - HADD2.F32 R8, R38.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1703 @ 0x6a70 (27248) - HADD2.F32 R38, R38.H1_H1, -RZ.H0_H0 ;
 Instr 1704 @ 0x6a80 (27264) - FFMA R4, R4, R0.reuse, R15 ;
 Instr 1705 @ 0x6a90 (27280) - FFMA R5, R5, R0.reuse, R17 ;
 Instr 1706 @ 0x6aa0 (27296) - FFMA R4, R8, R61, R4 ;
 Instr 1707 @ 0x6ab0 (27312) - HADD2.F32 R8, R39.H0_H0, -RZ.H0_H0 ;
 Instr 1708 @ 0x6ac0 (27328) - FFMA R6, R6, R0, R19 ;
 Instr 1709 @ 0x6ad0 (27344) - FSETP.GEU.AND P2, PT, R4, c[0x0][0x210], PT ;
 Instr 1710 @ 0x6ae0 (27360) - FFMA R5, R38, R61.reuse, R5 ;
 Instr 1711 @ 0x6af0 (27376) - FFMA R7, R7, R0, R36 ;
 Instr 1712 @ 0x6b00 (27392) - FSEL R4, R4, c[0x0][0x210], P2 ;
 Instr 1713 @ 0x6b10 (27408) - FFMA R6, R8, R61, R6 ;
 Instr 1714 @ 0x6b20 (27424) - FSETP.GEU.AND P2, PT, R5, c[0x0][0x210], PT ;
 Instr 1715 @ 0x6b30 (27440) - HADD2.F32 R8, R39.H1_H1, -RZ.H0_H0 ;
 Instr 1716 @ 0x6b40 (27456) - @P1 IMAD.WIDE R18, R49, R62, c[0x0][0x170] ;
 Instr 1717 @ 0x6b50 (27472) - FSEL R5, R5, c[0x0][0x210], P2 ;
 Instr 1718 @ 0x6b60 (27488) - FSETP.GEU.AND P2, PT, R6, c[0x0][0x210], PT ;
 Instr 1719 @ 0x6b70 (27504) - FFMA R7, R8, R61, R7 ;
 Instr 1720 @ 0x6b80 (27520) - FSEL R6, R6, c[0x0][0x210], P2 ;
 Instr 1721 @ 0x6b90 (27536) - FSETP.GEU.AND P2, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 1722 @ 0x6ba0 (27552) - FSEL R7, R7, c[0x0][0x210], P2 ;
 Instr 1723 @ 0x6bb0 (27568) - FSETP.GT.AND P2, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 1724 @ 0x6bc0 (27584) - FSEL R12, R12, c[0x0][0x220], !P2 ;
 Instr 1725 @ 0x6bd0 (27600) - FSETP.GT.AND P2, PT, R16.reuse, c[0x0][0x220], PT ;
 Instr 1726 @ 0x6be0 (27616) - FSEL R16, R16, c[0x0][0x220], !P2 ;
 Instr 1727 @ 0x6bf0 (27632) - F2F.F16.F32 R12, R12 ;
 Instr 1728 @ 0x6c00 (27648) - FSETP.GT.AND P2, PT, R13, c[0x0][0x220], PT ;
 Instr 1729 @ 0x6c10 (27664) - FSEL R13, R13, c[0x0][0x220], !P2 ;
 Instr 1730 @ 0x6c20 (27680) - FSETP.GT.AND P2, PT, R14.reuse, c[0x0][0x220], PT ;
 Instr 1731 @ 0x6c30 (27696) - F2F.F16.F32 R9, R16 ;
 Instr 1732 @ 0x6c40 (27712) - FSEL R14, R14, c[0x0][0x220], !P2 ;
 Instr 1733 @ 0x6c50 (27728) - FSETP.GT.AND P2, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 1734 @ 0x6c60 (27744) - F2F.F16.F32 R13, R13 ;
 Instr 1735 @ 0x6c70 (27760) - FSEL R4, R4, c[0x0][0x220], !P2 ;
 Instr 1736 @ 0x6c80 (27776) - FSETP.GT.AND P2, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 1737 @ 0x6c90 (27792) - FSEL R5, R5, c[0x0][0x220], !P2 ;
 Instr 1738 @ 0x6ca0 (27808) - F2F.F16.F32 R14, R14 ;
 Instr 1739 @ 0x6cb0 (27824) - FSETP.GT.AND P2, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 1740 @ 0x6cc0 (27840) - FSEL R6, R6, c[0x0][0x220], !P2 ;
 Instr 1741 @ 0x6cd0 (27856) - FSETP.GT.AND P2, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 1742 @ 0x6ce0 (27872) - F2F.F16.F32 R8, R4 ;
 Instr 1743 @ 0x6cf0 (27888) - FSEL R7, R7, c[0x0][0x220], !P2 ;
 Instr 1744 @ 0x6d00 (27904) - F2F.F16.F32 R11, R5 ;
 Instr 1745 @ 0x6d10 (27920) - PRMT R4, R12, 0x5410, R9 ;
 Instr 1746 @ 0x6d20 (27936) - F2F.F16.F32 R10, R6 ;
 Instr 1747 @ 0x6d30 (27952) - PRMT R5, R13, 0x5410, R14 ;
 Instr 1748 @ 0x6d40 (27968) - F2F.F16.F32 R7, R7 ;
 Instr 1749 @ 0x6d50 (27984) - PRMT R6, R8, 0x5410, R11 ;
 Instr 1750 @ 0x6d60 (28000) - PRMT R7, R10, 0x5410, R7 ;
 Instr 1751 @ 0x6d70 (28016) - @P1 STG.E.128.SYS [R18], R4 ;
Basic block id 84 - num instructions 2
 Instr 1752 @ 0x6d80 (28032) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1753 @ 0x6d90 (28048) - @!P3 BRA 0x7210 ;
Basic block id 85 - num instructions 5
 Instr 1754 @ 0x6da0 (28064) - ISETP.GE.AND P1, PT, R63, 0x1, PT ;
 Instr 1755 @ 0x6db0 (28080) - IMAD.SHL.U32 R37, R60, 0x80, RZ ;
 Instr 1756 @ 0x6dc0 (28096) - IMAD R59, R59, 0x80, R92 ;
 Instr 1757 @ 0x6dd0 (28112) - SHF.R.S32.HI R36, RZ, 0x1f, R37 ;
 Instr 1758 @ 0x6de0 (28128) - @!P1 BRA 0x70f0 ;
Basic block id 86 - num instructions 22
 Instr 1759 @ 0x6df0 (28144) - IMAD.MOV.U32 R8, RZ, RZ, R68 ;
 Instr 1760 @ 0x6e00 (28160) - UMOV UR8, URZ ;
 Instr 1761 @ 0x6e10 (28176) - IMAD.MOV.U32 R9, RZ, RZ, R71 ;
 Instr 1762 @ 0x6e20 (28192) - ULDC.64 UR6, c[0x0][0x2a8] ;
 Instr 1763 @ 0x6e30 (28208) - IMAD.SHL.U32 R42, R59, 0x10, RZ ;
 Instr 1764 @ 0x6e40 (28224) - IMAD.WIDE.U32 R12, R37.reuse, 0x60, R8 ;
 Instr 1765 @ 0x6e50 (28240) - SHF.R.S32.HI R5, RZ, 0x1f, R42 ;
 Instr 1766 @ 0x6e60 (28256) - IMAD R6, R36, 0x60, RZ ;
 Instr 1767 @ 0x6e70 (28272) - IADD3 R40, P2, R42, R12, RZ ;
 Instr 1768 @ 0x6e80 (28288) - IMAD.WIDE.U32 R10, R37, 0x70, R8 ;
 Instr 1769 @ 0x6e90 (28304) - IADD3.X R41, R5, R6, R13, P2, !PT ;
 Instr 1770 @ 0x6ea0 (28320) - IMAD R4, R36, 0x70, RZ ;
 Instr 1771 @ 0x6eb0 (28336) - IADD3 R38, P1, R42, R10, RZ ;
 Instr 1772 @ 0x6ec0 (28352) - IMAD.WIDE.U32 R8, R37.reuse, 0x50, R8 ;
 Instr 1773 @ 0x6ed0 (28368) - LEA R45, P2, R37, R68, 0x6 ;
 Instr 1774 @ 0x6ee0 (28384) - IADD3.X R39, R5, R4, R11, P1, !PT ;
 Instr 1775 @ 0x6ef0 (28400) - IMAD R4, R36, 0x50, RZ ;
 Instr 1776 @ 0x6f00 (28416) - IADD3 R44, P1, R42, R45, RZ ;
 Instr 1777 @ 0x6f10 (28432) - LEA.HI.X R6, R37, R71, R36, 0x6, P2 ;
 Instr 1778 @ 0x6f20 (28448) - IADD3 R42, P2, R42, R8, RZ ;
 Instr 1779 @ 0x6f30 (28464) - IMAD.X R45, R5.reuse, 0x1, R6, P1 ;
 Instr 1780 @ 0x6f40 (28480) - IADD3.X R43, R5, R4, R9, P2, !PT ;
Basic block id 87 - num instructions 26
 Instr 1781 @ 0x6f50 (28496) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
 Instr 1782 @ 0x6f60 (28512) - LDG.E.128.STRONG.GPU R12, [R42.64+UR6] ;
 Instr 1783 @ 0x6f70 (28528) - LDG.E.128.STRONG.GPU R8, [R40.64+UR6] ;
 Instr 1784 @ 0x6f80 (28544) - LDG.E.128.STRONG.GPU R4, [R38.64+UR6] ;
 Instr 1785 @ 0x6f90 (28560) - UIADD3 UR8, UR8, 0x1, URZ ;
 Instr 1786 @ 0x6fa0 (28576) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 1787 @ 0x6fb0 (28592) - UIADD3 UR6, UP0, UR6, UR4, URZ ;
 Instr 1788 @ 0x6fc0 (28608) - ISETP.LE.AND P1, PT, R63, UR8, PT ;
 Instr 1789 @ 0x6fd0 (28624) - UIADD3.X UR7, UR7, UR5, URZ, UP0, !UPT ;
 Instr 1790 @ 0x6fe0 (28640) - FADD R20, R16, R20 ;
 Instr 1791 @ 0x6ff0 (28656) - FADD R21, R17, R21 ;
 Instr 1792 @ 0x7000 (28672) - FADD R22, R18, R22 ;
 Instr 1793 @ 0x7010 (28688) - FADD R23, R19, R23 ;
 Instr 1794 @ 0x7020 (28704) - FADD R24, R12, R24 ;
 Instr 1795 @ 0x7030 (28720) - FADD R25, R13, R25 ;
 Instr 1796 @ 0x7040 (28736) - FADD R26, R14, R26 ;
 Instr 1797 @ 0x7050 (28752) - FADD R27, R15, R27 ;
 Instr 1798 @ 0x7060 (28768) - FADD R28, R8, R28 ;
 Instr 1799 @ 0x7070 (28784) - FADD R29, R9, R29 ;
 Instr 1800 @ 0x7080 (28800) - FADD R30, R10, R30 ;
 Instr 1801 @ 0x7090 (28816) - FADD R31, R11, R31 ;
 Instr 1802 @ 0x70a0 (28832) - FADD R32, R4, R32 ;
 Instr 1803 @ 0x70b0 (28848) - FADD R33, R5, R33 ;
 Instr 1804 @ 0x70c0 (28864) - FADD R34, R6, R34 ;
 Instr 1805 @ 0x70d0 (28880) - FADD R35, R7, R35 ;
 Instr 1806 @ 0x70e0 (28896) - @!P1 BRA 0x6f50 ;
Basic block id 88 - num instructions 1
 Instr 1807 @ 0x70f0 (28912) - @P0 BRA 0x7210 ;
Basic block id 89 - num instructions 17
 Instr 1808 @ 0x7100 (28928) - LEA R6, P1, R37.reuse, R68, 0x6 ;
 Instr 1809 @ 0x7110 (28944) - IMAD.SHL.U32 R4, R37.reuse, 0x10, RZ ;
 Instr 1810 @ 0x7120 (28960) - SHF.L.U64.HI R5, R37.reuse, 0x4, R36.reuse ;
 Instr 1811 @ 0x7130 (28976) - LEA.HI.X R7, R37, R71, R36, 0x6, P1 ;
 Instr 1812 @ 0x7140 (28992) - IMAD.WIDE R6, R59, 0x10, R6 ;
 Instr 1813 @ 0x7150 (29008) - IADD3 R10, P1, R6, c[0x0][0x2a8], RZ ;
 Instr 1814 @ 0x7160 (29024) - IADD3.X R11, R7, c[0x0][0x2ac], RZ, P1, !PT ;
 Instr 1815 @ 0x7170 (29040) - LEA R6, P1, R37.reuse, R10.reuse, 0x5 ;
 Instr 1816 @ 0x7180 (29056) - IADD3 R8, P2, R4, R10, RZ ;
 Instr 1817 @ 0x7190 (29072) - LEA.HI.X R7, R37, R11, R36, 0x5, P1 ;
 Instr 1818 @ 0x71a0 (29088) - IADD3 R4, P1, R4, R6, RZ ;
 Instr 1819 @ 0x71b0 (29104) - IMAD.X R9, R5.reuse, 0x1, R11, P2 ;
 Instr 1820 @ 0x71c0 (29120) - STG.E.128.SYS [R10], R20 ;
 Instr 1821 @ 0x71d0 (29136) - IMAD.X R5, R5, 0x1, R7, P1 ;
 Instr 1822 @ 0x71e0 (29152) - STG.E.128.SYS [R8], R24 ;
 Instr 1823 @ 0x71f0 (29168) - STG.E.128.SYS [R6], R28 ;
 Instr 1824 @ 0x7200 (29184) - STG.E.128.SYS [R4], R32 ;
Basic block id 90 - num instructions 1
 Instr 1825 @ 0x7210 (29200) - @!P0 BRA 0x8010 ;
Basic block id 91 - num instructions 223
 Instr 1826 @ 0x7220 (29216) - IADD3 R8, R3.reuse, 0x20, RZ ;
 Instr 1827 @ 0x7230 (29232) - CS2R R6, SRZ ;
 Instr 1828 @ 0x7240 (29248) - IADD3 R4, R3, 0x30, RZ ;
 Instr 1829 @ 0x7250 (29264) - IMAD.MOV.U32 R3, RZ, RZ, RZ ;
 Instr 1830 @ 0x7260 (29280) - ISETP.GE.AND P0, PT, R56, R93, PT ;
 Instr 1831 @ 0x7270 (29296) - @P6 IMAD.HI.U32 R10, R8, c[0x0][0x3dc], RZ ;
 Instr 1832 @ 0x7280 (29312) - ISETP.LT.AND P1, PT, R8, c[0x0][0x3c4], !P0 ;
 Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 1834 @ 0x72a0 (29344) - @P6 SHF.R.U32.HI R10, RZ, c[0x0][0x3e0], R10 ;
 Instr 1835 @ 0x72b0 (29360) - ISETP.LT.AND P0, PT, R4, c[0x0][0x3c4], !P0 ;
 Instr 1836 @ 0x72c0 (29376) - @P6 IMAD.MOV R5, RZ, RZ, -R10 ;
 Instr 1837 @ 0x72d0 (29392) - @P6 IMAD R6, R5, c[0x0][0x3c8], R8 ;
 Instr 1838 @ 0x72e0 (29408) - @P6 IMAD.MOV.U32 R8, RZ, RZ, R10 ;
 Instr 1839 @ 0x72f0 (29424) - @P5 IMAD.HI.U32 R5, R6, c[0x0][0x3e4], RZ ;
 Instr 1840 @ 0x7300 (29440) - @P5 SHF.R.U32.HI R5, RZ, c[0x0][0x3e8], R5 ;
 Instr 1841 @ 0x7310 (29456) - @P5 IMAD.MOV R9, RZ, RZ, -R5 ;
 Instr 1842 @ 0x7320 (29472) - @P5 IMAD R7, R9, c[0x0][0x3cc], R6 ;
 Instr 1843 @ 0x7330 (29488) - @P6 IMAD.HI.U32 R9, R4, c[0x0][0x3dc], RZ ;
 Instr 1844 @ 0x7340 (29504) - @P4 IMAD.HI.U32 R11, R7, c[0x0][0x3ec], RZ ;
 Instr 1845 @ 0x7350 (29520) - @P6 SHF.R.U32.HI R9, RZ, c[0x0][0x3e0], R9 ;
 Instr 1846 @ 0x7360 (29536) - @P5 IMAD.MOV.U32 R6, RZ, RZ, R5 ;
 Instr 1847 @ 0x7370 (29552) - @P4 SHF.R.U32.HI R10, RZ, c[0x0][0x3f0], R11 ;
 Instr 1848 @ 0x7380 (29568) - @P6 IMAD.MOV R13, RZ, RZ, -R9 ;
 Instr 1849 @ 0x7390 (29584) - IMAD R11, R56, c[0x0][0x254], RZ ;
 Instr 1850 @ 0x73a0 (29600) - @P6 IMAD R3, R13, c[0x0][0x3c8], R4 ;
 Instr 1851 @ 0x73b0 (29616) - @P4 IMAD.MOV R12, RZ, RZ, -R10 ;
 Instr 1852 @ 0x73c0 (29632) - IMAD R5, R8, c[0x0][0x244], R11 ;
 Instr 1853 @ 0x73d0 (29648) - @P5 IMAD.HI.U32 R8, R3, c[0x0][0x3e4], RZ ;
 Instr 1854 @ 0x73e0 (29664) - @P4 IMAD R14, R12, c[0x0][0x1b4], R7 ;
 Instr 1855 @ 0x73f0 (29680) - @P4 IMAD.MOV.U32 R7, RZ, RZ, R10 ;
 Instr 1856 @ 0x7400 (29696) - IMAD R10, R6, c[0x0][0x248], R5 ;
 Instr 1857 @ 0x7410 (29712) - @P5 SHF.R.U32.HI R6, RZ, c[0x0][0x3e8], R8 ;
 Instr 1858 @ 0x7420 (29728) - IMAD.MOV.U32 R5, RZ, RZ, RZ ;
 Instr 1859 @ 0x7430 (29744) - IMAD R7, R7, c[0x0][0x24c], R10 ;
 Instr 1860 @ 0x7440 (29760) - @P5 IMAD.MOV R8, RZ, RZ, -R6 ;
 Instr 1861 @ 0x7450 (29776) - IMAD R7, R14, c[0x0][0x250], R7 ;
 Instr 1862 @ 0x7460 (29792) - @P5 IMAD R5, R8, c[0x0][0x3cc], R3 ;
 Instr 1863 @ 0x7470 (29808) - @P6 IMAD.MOV.U32 R4, RZ, RZ, R9 ;
 Instr 1864 @ 0x7480 (29824) - SEL R37, R7, 0xffffffff, P1 ;
 Instr 1865 @ 0x7490 (29840) - @P4 IMAD.HI.U32 R7, R5, c[0x0][0x3ec], RZ ;
 Instr 1866 @ 0x74a0 (29856) - CS2R R8, SRZ ;
 Instr 1867 @ 0x74b0 (29872) - ISETP.GE.AND P1, PT, R37, RZ, PT ;
 Instr 1868 @ 0x74c0 (29888) - @P5 IMAD.MOV.U32 R3, RZ, RZ, R6 ;
 Instr 1869 @ 0x74d0 (29904) - @P4 SHF.R.U32.HI R7, RZ, c[0x0][0x3f0], R7 ;
 Instr 1870 @ 0x74e0 (29920) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 1871 @ 0x74f0 (29936) - IMAD R4, R4, c[0x0][0x244], R11 ;
 Instr 1872 @ 0x7500 (29952) - @P4 IMAD.MOV R6, RZ, RZ, -R7 ;
 Instr 1873 @ 0x7510 (29968) - CS2R R10, SRZ ;
 Instr 1874 @ 0x7520 (29984) - IMAD R4, R3, c[0x0][0x248], R4 ;
 Instr 1875 @ 0x7530 (30000) - @P4 IMAD R12, R6, c[0x0][0x1b4], R5 ;
 Instr 1876 @ 0x7540 (30016) - @P4 IMAD.MOV.U32 R5, RZ, RZ, R7 ;
 Instr 1877 @ 0x7550 (30032) - @P1 IMAD.WIDE R14, R37, R62, c[0x0][0x178] ;
 Instr 1878 @ 0x7560 (30048) - IMAD R5, R5, c[0x0][0x24c], R4 ;
 Instr 1879 @ 0x7570 (30064) - IMAD R3, R12, c[0x0][0x250], R5 ;
 Instr 1880 @ 0x7580 (30080) - @P1 LDG.E.128.SYS R8, [R14] ;
 Instr 1881 @ 0x7590 (30096) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1882 @ 0x75a0 (30112) - CS2R R6, SRZ ;
 Instr 1883 @ 0x75b0 (30128) - IMAD.MOV.U32 R5, RZ, RZ, RZ ;
 Instr 1884 @ 0x75c0 (30144) - SEL R3, R3, 0xffffffff, P0 ;
 Instr 1885 @ 0x75d0 (30160) - ISETP.GE.AND P0, PT, R3, RZ, PT ;
 Instr 1886 @ 0x75e0 (30176) - @P0 IMAD.WIDE R12, R3, R62, c[0x0][0x178] ;
 Instr 1887 @ 0x75f0 (30192) - @P0 LDG.E.128.SYS R4, [R12] ;
 Instr 1888 @ 0x7600 (30208) - STS.64 [R2], R20 ;
 Instr 1889 @ 0x7610 (30224) - STS.64 [R2+0x10], R24 ;
 Instr 1890 @ 0x7620 (30240) - STS.64 [R2+0x900], R22 ;
 Instr 1891 @ 0x7630 (30256) - HADD2.F32 R21, R52.H0_H0, -RZ.H0_H0 ;
 Instr 1892 @ 0x7640 (30272) - STS.64 [R2+0x910], R26 ;
 Instr 1893 @ 0x7650 (30288) - HADD2.F32 R52, R52.H1_H1, -RZ.H0_H0 ;
 Instr 1894 @ 0x7660 (30304) - HADD2.F32 R25, R55.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1895 @ 0x7670 (30320) - STS.64 [R2+0x40], R28 ;
 Instr 1896 @ 0x7680 (30336) - HADD2.F32 R55, R55.H1_H1, -RZ.H0_H0 ;
 Instr 1897 @ 0x7690 (30352) - HADD2.F32 R23, R54.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1898 @ 0x76a0 (30368) - STS.64 [R2+0x50], R32 ;
 Instr 1899 @ 0x76b0 (30384) - HADD2.F32 R54, R54.H1_H1, -RZ.H0_H0 ;
 Instr 1900 @ 0x76c0 (30400) - HADD2.F32 R27, R53.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1901 @ 0x76d0 (30416) - STS.64 [R2+0x940], R30 ;
 Instr 1902 @ 0x76e0 (30432) - HADD2.F32 R53, R53.H1_H1, -RZ.H0_H0 ;
 Instr 1903 @ 0x76f0 (30448) - STS.64 [R2+0x950], R34 ;
 Instr 1904 @ 0x7700 (30464) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1905 @ 0x7710 (30480) - LDS.U.128 R16, [R57.X16] ;
 Instr 1906 @ 0x7720 (30496) - LDS.U.128 R12, [R57.X16+0x1200] ;
 Instr 1907 @ 0x7730 (30512) - FFMA R16, R16, R0, R21 ;
 Instr 1908 @ 0x7740 (30528) - FFMA R17, R17, R0.reuse, R52.reuse ;
 Instr 1909 @ 0x7750 (30544) - FFMA R18, R18, R0.reuse, R27 ;
 Instr 1910 @ 0x7760 (30560) - FFMA R22, R19, R0.reuse, R53 ;
 Instr 1911 @ 0x7770 (30576) - FFMA R52, R13, R0.reuse, R52 ;
 Instr 1912 @ 0x7780 (30592) - FFMA R12, R12, R0, R21 ;
 Instr 1913 @ 0x7790 (30608) - HADD2.F32 R20, R8.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1914 @ 0x77a0 (30624) - HADD2.F32 R8, R8.H1_H1, -RZ.H0_H0 ;
 Instr 1915 @ 0x77b0 (30640) - FFMA R16, R20, R61.reuse, R16 ;
 Instr 1916 @ 0x77c0 (30656) - HADD2.F32 R20, R9.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1917 @ 0x77d0 (30672) - FFMA R2, R8, R61.reuse, R17 ;
 Instr 1918 @ 0x77e0 (30688) - FSETP.GEU.AND P2, PT, R16.reuse, c[0x0][0x210], PT ;
 Instr 1919 @ 0x77f0 (30704) - HADD2.F32 R8, R9.H1_H1, -RZ.H0_H0 ;
 Instr 1920 @ 0x7800 (30720) - FSEL R9, R16, c[0x0][0x210], P2 ;
 Instr 1921 @ 0x7810 (30736) - FFMA R20, R20, R61.reuse, R18 ;
 Instr 1922 @ 0x7820 (30752) - FSETP.GEU.AND P2, PT, R2, c[0x0][0x210], PT ;
 Instr 1923 @ 0x7830 (30768) - LDS.U.128 R16, [R57.X16+0x90] ;
 Instr 1924 @ 0x7840 (30784) - FSETP.GT.AND P3, PT, R9, c[0x0][0x220], PT ;
 Instr 1925 @ 0x7850 (30800) - FFMA R8, R8, R61, R22 ;
 Instr 1926 @ 0x7860 (30816) - FSEL R2, R2, c[0x0][0x210], P2 ;
 Instr 1927 @ 0x7870 (30832) - FSETP.GEU.AND P2, PT, R20, c[0x0][0x210], PT ;
 Instr 1928 @ 0x7880 (30848) - FSEL R9, R9, c[0x0][0x220], !P3 ;
 Instr 1929 @ 0x7890 (30864) - HADD2.F32 R13, R4.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1930 @ 0x78a0 (30880) - FSETP.GT.AND P3, PT, R2, c[0x0][0x220], PT ;
 Instr 1931 @ 0x78b0 (30896) - HADD2.F32 R22, R5.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1932 @ 0x78c0 (30912) - FSEL R20, R20, c[0x0][0x210], P2 ;
 Instr 1933 @ 0x78d0 (30928) - HADD2.F32 R5, R5.H1_H1, -RZ.H0_H0 ;
 Instr 1934 @ 0x78e0 (30944) - FSETP.GEU.AND P2, PT, R8, c[0x0][0x210], PT ;
 Instr 1935 @ 0x78f0 (30960) - F2F.F16.F32 R9, R9 ;
 Instr 1936 @ 0x7900 (30976) - FSEL R21, R2, c[0x0][0x220], !P3 ;
 Instr 1937 @ 0x7910 (30992) - FFMA R2, R14, R0.reuse, R27 ;
 Instr 1938 @ 0x7920 (31008) - FSETP.GT.AND P3, PT, R20, c[0x0][0x220], PT ;
 Instr 1939 @ 0x7930 (31024) - FFMA R12, R13, R61.reuse, R12 ;
 Instr 1940 @ 0x7940 (31040) - HADD2.F32 R14, R4.H1_H1, -RZ.H0_H0 ;
 Instr 1941 @ 0x7950 (31056) - FSEL R13, R8, c[0x0][0x210], P2 ;
 Instr 1942 @ 0x7960 (31072) - FFMA R8, R15, R0, R53 ;
 Instr 1943 @ 0x7970 (31088) - FSEL R20, R20, c[0x0][0x220], !P3 ;
 Instr 1944 @ 0x7980 (31104) - FFMA R2, R22, R61.reuse, R2 ;
 Instr 1945 @ 0x7990 (31120) - FSETP.GEU.AND P2, PT, R12, c[0x0][0x210], PT ;
 Instr 1946 @ 0x79a0 (31136) - HADD2.F32 R22, R10.H0_H0, -RZ.H0_H0 ;
 Instr 1947 @ 0x79b0 (31152) - FSETP.GT.AND P3, PT, R13, c[0x0][0x220], PT ;
 Instr 1948 @ 0x79c0 (31168) - FFMA R52, R14, R61.reuse, R52 ;
 Instr 1949 @ 0x79d0 (31184) - FSEL R24, R12, c[0x0][0x210], P2 ;
 Instr 1950 @ 0x79e0 (31200) - FFMA R5, R5, R61, R8 ;
 Instr 1951 @ 0x79f0 (31216) - FSEL R26, R13, c[0x0][0x220], !P3 ;
 Instr 1952 @ 0x7a00 (31232) - F2F.F16.F32 R4, R21 ;
 Instr 1953 @ 0x7a10 (31248) - LDS.U.128 R12, [R57.X16+0x1290] ;
 Instr 1954 @ 0x7a20 (31264) - FSETP.GEU.AND P2, PT, R52, c[0x0][0x210], PT ;
 Instr 1955 @ 0x7a30 (31280) - FSETP.GT.AND P3, PT, R24, c[0x0][0x220], PT ;
 Instr 1956 @ 0x7a40 (31296) - FSEL R52, R52, c[0x0][0x210], P2 ;
 Instr 1957 @ 0x7a50 (31312) - FSETP.GEU.AND P2, PT, R2, c[0x0][0x210], PT ;
 Instr 1958 @ 0x7a60 (31328) - FFMA R16, R16, R0.reuse, R23 ;
 Instr 1959 @ 0x7a70 (31344) - FSEL R24, R24, c[0x0][0x220], !P3 ;
 Instr 1960 @ 0x7a80 (31360) - FFMA R17, R17, R0.reuse, R54 ;
 Instr 1961 @ 0x7a90 (31376) - FSEL R2, R2, c[0x0][0x210], P2 ;
 Instr 1962 @ 0x7aa0 (31392) - FFMA R16, R22, R61.reuse, R16 ;
 Instr 1963 @ 0x7ab0 (31408) - FSETP.GEU.AND P2, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 1964 @ 0x7ac0 (31424) - HADD2.F32 R22, R10.H1_H1, -RZ.H0_H0 ;
 Instr 1965 @ 0x7ad0 (31440) - FSETP.GT.AND P3, PT, R52, c[0x0][0x220], PT ;
 Instr 1966 @ 0x7ae0 (31456) - HADD2.F32 R10, R11.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1967 @ 0x7af0 (31472) - FSEL R5, R5, c[0x0][0x210], P2 ;
 Instr 1968 @ 0x7b00 (31488) - F2F.F16.F32 R8, R24 ;
 Instr 1969 @ 0x7b10 (31504) - FSETP.GEU.AND P2, PT, R16, c[0x0][0x210], PT ;
 Instr 1970 @ 0x7b20 (31520) - FFMA R18, R18, R0.reuse, R25 ;
 Instr 1971 @ 0x7b30 (31536) - FSEL R27, R52, c[0x0][0x220], !P3 ;
 Instr 1972 @ 0x7b40 (31552) - FFMA R17, R22, R61.reuse, R17 ;
 Instr 1973 @ 0x7b50 (31568) - FSETP.GT.AND P3, PT, R2, c[0x0][0x220], PT ;
 Instr 1974 @ 0x7b60 (31584) - FFMA R10, R10, R61, R18 ;
 Instr 1975 @ 0x7b70 (31600) - FSEL R16, R16, c[0x0][0x210], P2 ;
 Instr 1976 @ 0x7b80 (31616) - HADD2.F32 R24, R11.H1_H1, -RZ.H0_H0 ;
 Instr 1977 @ 0x7b90 (31632) - FSETP.GEU.AND P2, PT, R17, c[0x0][0x210], PT ;
 Instr 1978 @ 0x7ba0 (31648) - FFMA R19, R19, R0, R55 ;
 Instr 1979 @ 0x7bb0 (31664) - FSEL R2, R2, c[0x0][0x220], !P3 ;
 Instr 1980 @ 0x7bc0 (31680) - F2F.F16.F32 R20, R20 ;
 Instr 1981 @ 0x7bd0 (31696) - FSETP.GT.AND P3, PT, R5, c[0x0][0x220], PT ;
 Instr 1982 @ 0x7be0 (31712) - FSEL R17, R17, c[0x0][0x210], P2 ;
 Instr 1983 @ 0x7bf0 (31728) - FFMA R19, R24, R61.reuse, R19 ;
 Instr 1984 @ 0x7c00 (31744) - FSETP.GEU.AND P2, PT, R10, c[0x0][0x210], PT ;
 Instr 1985 @ 0x7c10 (31760) - FSEL R11, R5, c[0x0][0x220], !P3 ;
 Instr 1986 @ 0x7c20 (31776) - F2F.F16.F32 R21, R26 ;
 Instr 1987 @ 0x7c30 (31792) - FSETP.GT.AND P3, PT, R16, c[0x0][0x220], PT ;
 Instr 1988 @ 0x7c40 (31808) - FFMA R23, R12, R0.reuse, R23 ;
 Instr 1989 @ 0x7c50 (31824) - FSEL R10, R10, c[0x0][0x210], P2 ;
 Instr 1990 @ 0x7c60 (31840) - HADD2.F32 R12, R6.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1991 @ 0x7c70 (31856) - FFMA R54, R13, R0.reuse, R54 ;
 Instr 1992 @ 0x7c80 (31872) - HADD2.F32 R6, R6.H1_H1, -RZ.H0_H0 ;
 Instr 1993 @ 0x7c90 (31888) - FSETP.GEU.AND P2, PT, R19, c[0x0][0x210], PT ;
 Instr 1994 @ 0x7ca0 (31904) - FFMA R25, R14, R0.reuse, R25 ;
 Instr 1995 @ 0x7cb0 (31920) - FSEL R16, R16, c[0x0][0x220], !P3 ;
 Instr 1996 @ 0x7cc0 (31936) - HADD2.F32 R14, R7.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 1997 @ 0x7cd0 (31952) - FSETP.GT.AND P3, PT, R17, c[0x0][0x220], PT ;
 Instr 1998 @ 0x7ce0 (31968) - FFMA R12, R12, R61.reuse, R23 ;
 Instr 1999 @ 0x7cf0 (31984) - FSEL R19, R19, c[0x0][0x210], P2 ;
 Instr 2000 @ 0x7d00 (32000) - FFMA R54, R6, R61.reuse, R54 ;
 Instr 2001 @ 0x7d10 (32016) - FSEL R17, R17, c[0x0][0x220], !P3 ;
 Instr 2002 @ 0x7d20 (32032) - HADD2.F32 R6, R7.H0_H0, -RZ.H0_H0 ;
 Instr 2003 @ 0x7d30 (32048) - FSETP.GEU.AND P2, PT, R12, c[0x0][0x210], PT ;
 Instr 2004 @ 0x7d40 (32064) - FFMA R15, R15, R0, R55 ;
 Instr 2005 @ 0x7d50 (32080) - FSETP.GT.AND P3, PT, R10, c[0x0][0x220], PT ;
 Instr 2006 @ 0x7d60 (32096) - F2F.F16.F32 R16, R16 ;
 Instr 2007 @ 0x7d70 (32112) - FSEL R12, R12, c[0x0][0x210], P2 ;
 Instr 2008 @ 0x7d80 (32128) - FFMA R14, R14, R61.reuse, R15 ;
 Instr 2009 @ 0x7d90 (32144) - FSETP.GEU.AND P2, PT, R54, c[0x0][0x210], PT ;
 Instr 2010 @ 0x7da0 (32160) - FFMA R6, R6, R61, R25 ;
 Instr 2011 @ 0x7db0 (32176) - FSEL R10, R10, c[0x0][0x220], !P3 ;
 Instr 2012 @ 0x7dc0 (32192) - FSETP.GT.AND P3, PT, R19.reuse, c[0x0][0x220], PT ;
 Instr 2013 @ 0x7dd0 (32208) - F2F.F16.F32 R17, R17 ;
 Instr 2014 @ 0x7de0 (32224) - FSEL R54, R54, c[0x0][0x210], P2 ;
 Instr 2015 @ 0x7df0 (32240) - FSETP.GEU.AND P2, PT, R6, c[0x0][0x210], PT ;
 Instr 2016 @ 0x7e00 (32256) - FSEL R19, R19, c[0x0][0x220], !P3 ;
 Instr 2017 @ 0x7e10 (32272) - FSETP.GT.AND P3, PT, R12, c[0x0][0x220], PT ;
 Instr 2018 @ 0x7e20 (32288) - F2F.F16.F32 R10, R10 ;
 Instr 2019 @ 0x7e30 (32304) - FSEL R6, R6, c[0x0][0x210], P2 ;
 Instr 2020 @ 0x7e40 (32320) - FSETP.GEU.AND P2, PT, R14, c[0x0][0x210], PT ;
 Instr 2021 @ 0x7e50 (32336) - FSEL R5, R12, c[0x0][0x220], !P3 ;
 Instr 2022 @ 0x7e60 (32352) - FSETP.GT.AND P3, PT, R54, c[0x0][0x220], PT ;
 Instr 2023 @ 0x7e70 (32368) - F2F.F16.F32 R7, R19 ;
 Instr 2024 @ 0x7e80 (32384) - FSEL R14, R14, c[0x0][0x210], P2 ;
 Instr 2025 @ 0x7e90 (32400) - FSEL R12, R54, c[0x0][0x220], !P3 ;
 Instr 2026 @ 0x7ea0 (32416) - FSETP.GT.AND P3, PT, R6, c[0x0][0x220], PT ;
 Instr 2027 @ 0x7eb0 (32432) - FSETP.GT.AND P2, PT, R14, c[0x0][0x220], PT ;
 Instr 2028 @ 0x7ec0 (32448) - F2F.F16.F32 R27, R27 ;
 Instr 2029 @ 0x7ed0 (32464) - FSEL R13, R6, c[0x0][0x220], !P3 ;
 Instr 2030 @ 0x7ee0 (32480) - @P1 IMAD.WIDE R18, R37, R62.reuse, c[0x0][0x170] ;
 Instr 2031 @ 0x7ef0 (32496) - FSEL R0, R14, c[0x0][0x220], !P2 ;
 Instr 2032 @ 0x7f00 (32512) - PRMT R4, R9, 0x5410, R4 ;
 Instr 2033 @ 0x7f10 (32528) - @P0 IMAD.WIDE R62, R3, R62, c[0x0][0x170] ;
 Instr 2034 @ 0x7f20 (32544) - PRMT R6, R16, 0x5410, R17 ;
 Instr 2035 @ 0x7f30 (32560) - F2F.F16.F32 R2, R2 ;
 Instr 2036 @ 0x7f40 (32576) - PRMT R7, R10, 0x5410, R7 ;
 Instr 2037 @ 0x7f50 (32592) - F2F.F16.F32 R11, R11 ;
 Instr 2038 @ 0x7f60 (32608) - F2F.F16.F32 R15, R5 ;
 Instr 2039 @ 0x7f70 (32624) - F2F.F16.F32 R12, R12 ;
 Instr 2040 @ 0x7f80 (32640) - PRMT R5, R20, 0x5410, R21 ;
 Instr 2041 @ 0x7f90 (32656) - F2F.F16.F32 R13, R13 ;
 Instr 2042 @ 0x7fa0 (32672) - @P1 STG.E.128.SYS [R18], R4 ;
 Instr 2043 @ 0x7fb0 (32688) - F2F.F16.F32 R0, R0 ;
 Instr 2044 @ 0x7fc0 (32704) - PRMT R4, R8, 0x5410, R27 ;
 Instr 2045 @ 0x7fd0 (32720) - PRMT R5, R2, 0x5410, R11 ;
 Instr 2046 @ 0x7fe0 (32736) - PRMT R6, R15, 0x5410, R12 ;
 Instr 2047 @ 0x7ff0 (32752) - PRMT R7, R13, 0x5410, R0 ;
 Instr 2048 @ 0x8000 (32768) - @P0 STG.E.128.SYS [R62], R4 ;
Basic block id 92 - num instructions 4
 Instr 2049 @ 0x8010 (32784) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
 Instr 2050 @ 0x8020 (32800) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2051 @ 0x8030 (32816) - BSSY B0, 0x81a0 ;
 Instr 2052 @ 0x8040 (32832) - @P0 BRA 0x8190 ;
Basic block id 93 - num instructions 3
 Instr 2053 @ 0x8050 (32848) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2054 @ 0x8060 (32864) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
 Instr 2055 @ 0x8070 (32880) - @P0 BRA 0x8190 ;
Basic block id 94 - num instructions 5
 Instr 2056 @ 0x8080 (32896) - MEMBAR.SC.GPU ;
 Instr 2057 @ 0x8090 (32912) - ISETP.NE.AND P1, PT, R58, RZ, PT ;
 Instr 2058 @ 0x80a0 (32928) - ERRBAR;
 Instr 2059 @ 0x80b0 (32944) - CCTL.IVALL ;
 Instr 2060 @ 0x80c0 (32960) - @P1 BRA 0x8130 ;
Basic block id 95 - num instructions 6
 Instr 2061 @ 0x80d0 (32976) - S2R R0, SR_LANEID ;
 Instr 2062 @ 0x80e0 (32992) - VOTEU.ANY UR5, UPT, PT ;
 Instr 2063 @ 0x80f0 (33008) - UFLO.U32 UR4, UR5 ;
 Instr 2064 @ 0x8100 (33024) - POPC R3, UR5 ;
 Instr 2065 @ 0x8110 (33040) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 2066 @ 0x8120 (33056) - @P0 RED.E.ADD.STRONG.GPU [R66], R3 ;
Basic block id 96 - num instructions 6
 Instr 2067 @ 0x8130 (33072) - S2R R0, SR_LANEID ;
 Instr 2068 @ 0x8140 (33088) - VOTEU.ANY UR5, UPT, PT ;
 Instr 2069 @ 0x8150 (33104) - UFLO.U32 UR4, UR5 ;
 Instr 2070 @ 0x8160 (33120) - POPC R3, UR5 ;
 Instr 2071 @ 0x8170 (33136) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 2072 @ 0x8180 (33152) - @P0 RED.E.ADD.STRONG.GPU [R64], R3 ;
Basic block id 97 - num instructions 1
 Instr 2073 @ 0x8190 (33168) - BSYNC B0 ;
Basic block id 98 - num instructions 2
 Instr 2074 @ 0x81a0 (33184) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2075 @ 0x81b0 (33200) - EXIT ;
Basic block id 99 - num instructions 3
 Instr 2076 @ 0x81c0 (33216) - WARPSYNC R37 ;
 Instr 2077 @ 0x81d0 (33232) - MOV R37, 0x0 ;
 Instr 2078 @ 0x81e0 (33248) - RET.REL.NODEC R36 0x0 ;
Basic block id 100 - num instructions 1
 Instr 2079 @ 0x81f0 (33264) - BRA 0x81f0;
inspecting sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - number basic blocks 101
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R7, RZ, RZ, -0x1 ;
Inject count_instr before - Instr 23 @ 0x170 (368) - MOV R0, 0x1 ;
Inject count_instr before - Instr 24 @ 0x180 (384) - ISETP.NE.AND P2, PT, R5, R8, PT ;
Inject count_instr before - Instr 27 @ 0x1b0 (432) - IADD3 R9, R9, -0x1, RZ ;
Inject count_instr before - Instr 36 @ 0x240 (576) - LOP3.LUT R0, R7, R2, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 41 @ 0x290 (656) - LOP3.LUT R0, R7, R2, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 47 @ 0x2f0 (752) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
Inject count_instr before - Instr 51 @ 0x330 (816) - S2R R92, SR_TID.X ;
Inject count_instr before - Instr 220 @ 0xdc0 (3520) - IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 344 @ 0x1580 (5504) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 360 @ 0x1680 (5760) - IMAD.WIDE R110, R110, 0x2, RZ ;
Inject count_instr before - Instr 367 @ 0x16f0 (5872) - HMMA.1688.F32 R4, R2, R36, R4 ;
Inject count_instr before - Instr 605 @ 0x25d0 (9680) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
Inject count_instr before - Instr 642 @ 0x2820 (10272) - ISETP.GE.AND P0, PT, R56, c[0x0][0x320], PT ;
Inject count_instr before - Instr 646 @ 0x2860 (10336) - SHF.R.S32.HI R39, RZ, 0x1f, R56 ;
Inject count_instr before - Instr 652 @ 0x28c0 (10432) - CS2R R52, SRZ ;
Inject count_instr before - Instr 654 @ 0x28e0 (10464) - BSYNC B0 ;
Inject count_instr before - Instr 659 @ 0x2930 (10544) - S2R R37, SR_CTAID.Z ;
Inject count_instr before - Instr 671 @ 0x29f0 (10736) - S2R R36, SR_CTAID.Z ;
Inject count_instr before - Instr 684 @ 0x2ac0 (10944) - ISETP.NE.AND P0, PT, R37, 0x1, PT ;
Inject count_instr before - Instr 691 @ 0x2b30 (11056) - IMAD.MOV.U32 R38, RZ, RZ, c[0x0][0x298] ;
Inject count_instr before - Instr 696 @ 0x2b80 (11136) - ISETP.EQ.AND P0, PT, R38, 0x1, PT ;
Inject count_instr before - Instr 700 @ 0x2bc0 (11200) - IABS R39, c[0x0][0x294] ;
Inject count_instr before - Instr 735 @ 0x2df0 (11760) - LDG.E.STRONG.GPU R36, [R68] ;
Inject count_instr before - Instr 739 @ 0x2e30 (11824) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 744 @ 0x2e80 (11904) - BRA 0x2e30 ;
Inject count_instr before - Instr 745 @ 0x2e90 (11920) - BSYNC B0 ;
Inject count_instr before - Instr 747 @ 0x2eb0 (11952) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 750 @ 0x2ee0 (12000) - NOP ;
Inject count_instr before - Instr 755 @ 0x2f30 (12080) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
Inject count_instr before - Instr 763 @ 0x2fb0 (12208) - LDG.E.STRONG.GPU R36, [R66] ;
Inject count_instr before - Instr 767 @ 0x2ff0 (12272) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 772 @ 0x3040 (12352) - BRA 0x2ff0 ;
Inject count_instr before - Instr 773 @ 0x3050 (12368) - BSYNC B0 ;
Inject count_instr before - Instr 775 @ 0x3070 (12400) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 778 @ 0x30a0 (12448) - NOP ;
Inject count_instr before - Instr 783 @ 0x30f0 (12528) - MOV R36, c[0x0][0x290] ;
Inject count_instr before - Instr 795 @ 0x31b0 (12720) - ISETP.GE.AND P1, PT, R61, 0x1, PT ;
Inject count_instr before - Instr 800 @ 0x3200 (12800) - LEA R70, P1, R81.reuse, R62, 0x4 ;
Inject count_instr before - Instr 819 @ 0x3330 (13104) - LDG.E.128.STRONG.GPU R48, [R76] ;
Inject count_instr before - Instr 850 @ 0x3520 (13600) - @P0 BRA 0x3640 ;
Inject count_instr before - Instr 851 @ 0x3530 (13616) - IMAD.MOV.U32 R36, RZ, RZ, R62 ;
Inject count_instr before - Instr 868 @ 0x3640 (13888) - @!P0 BRA 0x41d0 ;
Inject count_instr before - Instr 869 @ 0x3650 (13904) - STS.64 [R2], R4 ;
Inject count_instr before - Instr 1053 @ 0x41d0 (16848) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 1055 @ 0x41f0 (16880) - ISETP.GE.AND P1, PT, R61, 0x1, PT ;
Inject count_instr before - Instr 1060 @ 0x4240 (16960) - IMAD.MOV.U32 R8, RZ, RZ, R62 ;
Inject count_instr before - Instr 1082 @ 0x43a0 (17312) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
Inject count_instr before - Instr 1108 @ 0x4540 (17728) - @P0 BRA 0x4660 ;
Inject count_instr before - Instr 1109 @ 0x4550 (17744) - LEA R6, P1, R37.reuse, R62, 0x6 ;
Inject count_instr before - Instr 1126 @ 0x4660 (18016) - @!P0 BRA 0x5200 ;
Inject count_instr before - Instr 1127 @ 0x4670 (18032) - STS.64 [R2], R20 ;
Inject count_instr before - Instr 1312 @ 0x5200 (20992) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
Inject count_instr before - Instr 1314 @ 0x5220 (21024) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 1319 @ 0x5270 (21104) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 1324 @ 0x52c0 (21184) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 1330 @ 0x5320 (21280) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 1336 @ 0x5380 (21376) - BSYNC B0 ;
Inject count_instr before - Instr 1338 @ 0x53a0 (21408) - ISETP.NE.AND P0, PT, R37, 0x1, PT ;
Inject count_instr before - Instr 1345 @ 0x5410 (21520) - IMAD.MOV.U32 R38, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 1350 @ 0x5460 (21600) - MOV R37, UR8 ;
Inject count_instr before - Instr 1356 @ 0x54c0 (21696) - IABS R40, c[0x0][0x294] ;
Inject count_instr before - Instr 1392 @ 0x5700 (22272) - LDG.E.STRONG.GPU R36, [R66] ;
Inject count_instr before - Instr 1396 @ 0x5740 (22336) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 1401 @ 0x5790 (22416) - BRA 0x5740 ;
Inject count_instr before - Instr 1402 @ 0x57a0 (22432) - BSYNC B0 ;
Inject count_instr before - Instr 1404 @ 0x57c0 (22464) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 1407 @ 0x57f0 (22512) - NOP ;
Inject count_instr before - Instr 1412 @ 0x5840 (22592) - ISETP.NE.AND P0, PT, R92, RZ, PT ;
Inject count_instr before - Instr 1420 @ 0x58c0 (22720) - LDG.E.STRONG.GPU R36, [R64] ;
Inject count_instr before - Instr 1424 @ 0x5900 (22784) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 1429 @ 0x5950 (22864) - BRA 0x5900 ;
Inject count_instr before - Instr 1430 @ 0x5960 (22880) - BSYNC B0 ;
Inject count_instr before - Instr 1432 @ 0x5980 (22912) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 1435 @ 0x59b0 (22960) - NOP ;
Inject count_instr before - Instr 1440 @ 0x5a00 (23040) - MOV R62, 0x2 ;
Inject count_instr before - Instr 1452 @ 0x5ac0 (23232) - ISETP.GE.AND P1, PT, R63, 0x1, PT ;
Inject count_instr before - Instr 1457 @ 0x5b10 (23312) - LEA R76, P1, R75.reuse, R68, 0x4 ;
Inject count_instr before - Instr 1476 @ 0x5c40 (23616) - LDG.E.128.STRONG.GPU R48, [R82] ;
Inject count_instr before - Instr 1507 @ 0x5e30 (24112) - @P0 BRA 0x5f50 ;
Inject count_instr before - Instr 1508 @ 0x5e40 (24128) - IMAD.MOV.U32 R36, RZ, RZ, R68 ;
Inject count_instr before - Instr 1525 @ 0x5f50 (24400) - @!P0 BRA 0x6d80 ;
Inject count_instr before - Instr 1526 @ 0x5f60 (24416) - @P6 IMAD.HI.U32 R36, R3.reuse, c[0x0][0x3dc], RZ ;
Inject count_instr before - Instr 1752 @ 0x6d80 (28032) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 1754 @ 0x6da0 (28064) - ISETP.GE.AND P1, PT, R63, 0x1, PT ;
Inject count_instr before - Instr 1759 @ 0x6df0 (28144) - IMAD.MOV.U32 R8, RZ, RZ, R68 ;
Inject count_instr before - Instr 1781 @ 0x6f50 (28496) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
Inject count_instr before - Instr 1807 @ 0x70f0 (28912) - @P0 BRA 0x7210 ;
Inject count_instr before - Instr 1808 @ 0x7100 (28928) - LEA R6, P1, R37.reuse, R68, 0x6 ;
Inject count_instr before - Instr 1825 @ 0x7210 (29200) - @!P0 BRA 0x8010 ;
Inject count_instr before - Instr 1826 @ 0x7220 (29216) - IADD3 R8, R3.reuse, 0x20, RZ ;
Inject count_instr before - Instr 2049 @ 0x8010 (32784) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
Inject count_instr before - Instr 2053 @ 0x8050 (32848) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 2056 @ 0x8080 (32896) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 2061 @ 0x80d0 (32976) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 2067 @ 0x8130 (33072) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 2073 @ 0x8190 (33168) - BSYNC B0 ;
Inject count_instr before - Instr 2074 @ 0x81a0 (33184) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 2076 @ 0x81c0 (33216) - WARPSYNC R37 ;
Inject count_instr before - Instr 2079 @ 0x81f0 (33264) - BRA 0x81f0;
kernel 114 - sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 49,  kernel instructions 572320, total instructions 11007358
kernel 115 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 174928, total instructions 11182286
kernel 116 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 172, total instructions 11182458
kernel 117 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 598, total instructions 11183056
kernel 118 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 64,  kernel instructions 180736, total instructions 11363792
kernel 119 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 196,  kernel instructions 47040, total instructions 11410832
kernel 120 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 162960, total instructions 11573792
kernel 121 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 128,  kernel instructions 154112, total instructions 11727904
kernel 122 - sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 49,  kernel instructions 572320, total instructions 12300224
kernel 123 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 174928, total instructions 12475152
kernel 124 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 172, total instructions 12475324
kernel 125 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 598, total instructions 12475922
kernel 126 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 64,  kernel instructions 180736, total instructions 12656658
Function void at::native::vectorized_elementwise_kernel<8, at::native::CUDAFunctor_add<c10::Half>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<c10::Half>, std::array<char*, 3ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R5, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R5, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x360 ;
Basic block id 1 - num instructions 47
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R18, RZ, RZ, 0x2 ;
 Instr 8 @ 0x80 (128) - IMAD.WIDE R4, R3, R18, c[0x0][0x170] ;
 Instr 9 @ 0x90 (144) - IMAD.WIDE R6, R3, R18, c[0x0][0x178] ;
 Instr 10 @ 0xa0 (160) - IMAD.WIDE.U32 R4, R0, 0x10, R4 ;
 Instr 11 @ 0xb0 (176) - IMAD.WIDE.U32 R8, R0, 0x10, R6 ;
 Instr 12 @ 0xc0 (192) - LDG.E.128.SYS R4, [R4] ;
 Instr 13 @ 0xd0 (208) - LDG.E.128.SYS R8, [R8] ;
 Instr 14 @ 0xe0 (224) - HADD2.F32 R2, R4.H1_H1, -RZ.H0_H0 ;
 Instr 15 @ 0xf0 (240) - HADD2.F32 R12, R5.H1_H1, -RZ.H0_H0 ;
 Instr 16 @ 0x100 (256) - HADD2.F32 R13, R8.H1_H1, -RZ.H0_H0 ;
 Instr 17 @ 0x110 (272) - HADD2.F32 R15, R9.H1_H1, -RZ.H0_H0 ;
 Instr 18 @ 0x120 (288) - HADD2.F32 R14, R10.H1_H1, -RZ.H0_H0 ;
 Instr 19 @ 0x130 (304) - HADD2.F32 R5, R5.H0_H0, -RZ.H0_H0 ;
 Instr 20 @ 0x140 (320) - FFMA R2, R13, c[0x0][0x164], R2 ;
 Instr 21 @ 0x150 (336) - HADD2.F32 R16, R11.H1_H1, -RZ.H0_H0 ;
 Instr 22 @ 0x160 (352) - FFMA R12, R15, c[0x0][0x164], R12 ;
 Instr 23 @ 0x170 (368) - HADD2.F32 R13, R6.H1_H1, -RZ.H0_H0 ;
 Instr 24 @ 0x180 (384) - HADD2.F32 R15, R7.H1_H1, -RZ.H0_H0 ;
 Instr 25 @ 0x190 (400) - F2F.F16.F32 R17, R2 ;
 Instr 26 @ 0x1a0 (416) - HADD2.F32 R4, R4.H0_H0, -RZ.H0_H0 ;
 Instr 27 @ 0x1b0 (432) - HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 28 @ 0x1c0 (448) - FFMA R14, R14, c[0x0][0x164], R13 ;
 Instr 29 @ 0x1d0 (464) - HADD2.F32 R7, R7.H0_H0, -RZ.H0_H0 ;
 Instr 30 @ 0x1e0 (480) - FFMA R15, R16, c[0x0][0x164], R15 ;
 Instr 31 @ 0x1f0 (496) - HADD2.F32 R2, R9.H0_H0, -RZ.H0_H0 ;
 Instr 32 @ 0x200 (512) - F2F.F16.F32 R12, R12 ;
 Instr 33 @ 0x210 (528) - HADD2.F32 R13, R8.H0_H0, -RZ.H0_H0 ;
 Instr 34 @ 0x220 (544) - HADD2.F32 R9, R10.H0_H0, -RZ.H0_H0 ;
 Instr 35 @ 0x230 (560) - FFMA R5, R2, c[0x0][0x164], R5 ;
 Instr 36 @ 0x240 (576) - F2F.F16.F32 R14, R14 ;
 Instr 37 @ 0x250 (592) - HADD2.F32 R2, R11.H0_H0, -RZ.H0_H0 ;
 Instr 38 @ 0x260 (608) - FFMA R4, R13, c[0x0][0x164], R4 ;
 Instr 39 @ 0x270 (624) - FFMA R6, R9, c[0x0][0x164], R6 ;
 Instr 40 @ 0x280 (640) - F2F.F16.F32 R15, R15 ;
 Instr 41 @ 0x290 (656) - FFMA R7, R2, c[0x0][0x164], R7 ;
 Instr 42 @ 0x2a0 (672) - IMAD.WIDE.U32 R2, R3, R18, c[0x0][0x168] ;
 Instr 43 @ 0x2b0 (688) - F2F.F16.F32 R4, R4 ;
 Instr 44 @ 0x2c0 (704) - IMAD.WIDE R2, R0, 0x10, R2 ;
 Instr 45 @ 0x2d0 (720) - F2F.F16.F32 R5, R5 ;
 Instr 46 @ 0x2e0 (736) - F2F.F16.F32 R9, R6 ;
 Instr 47 @ 0x2f0 (752) - PRMT R4, R4, 0x5410, R17 ;
 Instr 48 @ 0x300 (768) - F2F.F16.F32 R8, R7 ;
 Instr 49 @ 0x310 (784) - PRMT R5, R5, 0x5410, R12 ;
 Instr 50 @ 0x320 (800) - PRMT R6, R9, 0x5410, R14 ;
 Instr 51 @ 0x330 (816) - PRMT R7, R8, 0x5410, R15 ;
 Instr 52 @ 0x340 (832) - STG.E.128.SYS [R2], R4 ;
 Instr 53 @ 0x350 (848) - EXIT ;
Basic block id 2 - num instructions 20
 Instr 54 @ 0x360 (864) - ISETP.GE.AND P6, PT, R0, R5, PT ;
 Instr 55 @ 0x370 (880) - BMOV.32.CLEAR RZ, B0 ;
 Instr 56 @ 0x380 (896) - BSSY B0, 0x730 ;
 Instr 57 @ 0x390 (912) - PRMT R4, RZ, 0x7610, R4 ;
 Instr 58 @ 0x3a0 (928) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 59 @ 0x3b0 (944) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 60 @ 0x3c0 (960) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 61 @ 0x3d0 (976) - PRMT R12, RZ, 0x7610, R12 ;
 Instr 62 @ 0x3e0 (992) - PRMT R13, RZ, 0x7610, R13 ;
 Instr 63 @ 0x3f0 (1008) - PRMT R14, RZ, 0x7610, R14 ;
 Instr 64 @ 0x400 (1024) - PRMT R15, RZ, 0x7610, R15 ;
 Instr 65 @ 0x410 (1040) - PRMT R16, RZ, 0x7610, R16 ;
 Instr 66 @ 0x420 (1056) - PRMT R17, RZ, 0x7610, R17 ;
 Instr 67 @ 0x430 (1072) - PRMT R18, RZ, 0x7610, R18 ;
 Instr 68 @ 0x440 (1088) - PRMT R19, RZ, 0x7610, R19 ;
 Instr 69 @ 0x450 (1104) - PRMT R20, RZ, 0x7610, R20 ;
 Instr 70 @ 0x460 (1120) - PRMT R21, RZ, 0x7610, R21 ;
 Instr 71 @ 0x470 (1136) - PRMT R22, RZ, 0x7610, R22 ;
 Instr 72 @ 0x480 (1152) - PRMT R23, RZ, 0x7610, R23 ;
 Instr 73 @ 0x490 (1168) - @P6 BRA 0x720 ;
Basic block id 3 - num instructions 9
 Instr 74 @ 0x4a0 (1184) - IMAD.IADD R8, R3, 0x1, R0 ;
 Instr 75 @ 0x4b0 (1200) - IMAD.MOV.U32 R9, RZ, RZ, 0x2 ;
 Instr 76 @ 0x4c0 (1216) - IMAD.WIDE.U32 R6, R8, R9, c[0x0][0x170] ;
 Instr 77 @ 0x4d0 (1232) - IMAD.WIDE.U32 R8, R8, R9, c[0x0][0x178] ;
 Instr 78 @ 0x4e0 (1248) - LDG.E.U16.SYS R22, [R6] ;
 Instr 79 @ 0x4f0 (1264) - LDG.E.U16.SYS R23, [R8] ;
 Instr 80 @ 0x500 (1280) - IADD3 R24, R0, 0x80, RZ ;
 Instr 81 @ 0x510 (1296) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 82 @ 0x520 (1312) - @P0 BRA 0x720 ;
Basic block id 4 - num instructions 5
 Instr 83 @ 0x530 (1328) - LDG.E.U16.SYS R20, [R6+0x100] ;
 Instr 84 @ 0x540 (1344) - LDG.E.U16.SYS R21, [R8+0x100] ;
 Instr 85 @ 0x550 (1360) - IADD3 R24, R0, 0x100, RZ ;
 Instr 86 @ 0x560 (1376) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 87 @ 0x570 (1392) - @P0 BRA 0x720 ;
Basic block id 5 - num instructions 5
 Instr 88 @ 0x580 (1408) - LDG.E.U16.SYS R18, [R6+0x200] ;
 Instr 89 @ 0x590 (1424) - LDG.E.U16.SYS R19, [R8+0x200] ;
 Instr 90 @ 0x5a0 (1440) - IADD3 R24, R0, 0x180, RZ ;
 Instr 91 @ 0x5b0 (1456) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 92 @ 0x5c0 (1472) - @P0 BRA 0x720 ;
Basic block id 6 - num instructions 5
 Instr 93 @ 0x5d0 (1488) - LDG.E.U16.SYS R16, [R6+0x300] ;
 Instr 94 @ 0x5e0 (1504) - LDG.E.U16.SYS R17, [R8+0x300] ;
 Instr 95 @ 0x5f0 (1520) - IADD3 R24, R0, 0x200, RZ ;
 Instr 96 @ 0x600 (1536) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 97 @ 0x610 (1552) - @P0 BRA 0x720 ;
Basic block id 7 - num instructions 5
 Instr 98 @ 0x620 (1568) - LDG.E.U16.SYS R14, [R6+0x400] ;
 Instr 99 @ 0x630 (1584) - LDG.E.U16.SYS R15, [R8+0x400] ;
 Instr 100 @ 0x640 (1600) - IADD3 R24, R0, 0x280, RZ ;
 Instr 101 @ 0x650 (1616) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 102 @ 0x660 (1632) - @P0 BRA 0x720 ;
Basic block id 8 - num instructions 5
 Instr 103 @ 0x670 (1648) - LDG.E.U16.SYS R12, [R6+0x500] ;
 Instr 104 @ 0x680 (1664) - LDG.E.U16.SYS R13, [R8+0x500] ;
 Instr 105 @ 0x690 (1680) - IADD3 R24, R0, 0x300, RZ ;
 Instr 106 @ 0x6a0 (1696) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 107 @ 0x6b0 (1712) - @P0 BRA 0x720 ;
Basic block id 9 - num instructions 6
 Instr 108 @ 0x6c0 (1728) - IADD3 R10, R0, 0x380, RZ ;
 Instr 109 @ 0x6d0 (1744) - LDG.E.U16.SYS R11, [R8+0x600] ;
 Instr 110 @ 0x6e0 (1760) - ISETP.GE.AND P0, PT, R10, R5, PT ;
 Instr 111 @ 0x6f0 (1776) - LDG.E.U16.SYS R10, [R6+0x600] ;
 Instr 112 @ 0x700 (1792) - @!P0 LDG.E.U16.SYS R4, [R6+0x700] ;
 Instr 113 @ 0x710 (1808) - @!P0 LDG.E.U16.SYS R2, [R8+0x700] ;
Basic block id 10 - num instructions 46
 Instr 114 @ 0x720 (1824) - BSYNC B0 ;
 Instr 115 @ 0x730 (1840) - IADD3 R6, R0.reuse, 0x80, RZ ;
 Instr 116 @ 0x740 (1856) - @!P6 HADD2.F32 R22, R22.H0_H0, -RZ.H0_H0 ;
 Instr 117 @ 0x750 (1872) - IADD3 R8, R0, 0x300, RZ ;
 Instr 118 @ 0x760 (1888) - @!P6 HADD2.F32 R23, R23.H0_H0, -RZ.H0_H0 ;
 Instr 119 @ 0x770 (1904) - ISETP.GE.AND P3, PT, R6, R5, PT ;
 Instr 120 @ 0x780 (1920) - IADD3 R6, R0, 0x100, RZ ;
 Instr 121 @ 0x790 (1936) - P2R R24, PR, RZ, 0x8 ;
 Instr 122 @ 0x7a0 (1952) - ISETP.GE.AND P0, PT, R6, R5.reuse, PT ;
 Instr 123 @ 0x7b0 (1968) - @!P6 FFMA R22, R23, c[0x0][0x164], R22 ;
 Instr 124 @ 0x7c0 (1984) - IADD3 R6, R0, 0x180, RZ ;
 Instr 125 @ 0x7d0 (2000) - ISETP.GE.AND P4, PT, R8, R5.reuse, PT ;
 Instr 126 @ 0x7e0 (2016) - @!P3 HADD2.F32 R20, R20.H0_H0, -RZ.H0_H0 ;
 Instr 127 @ 0x7f0 (2032) - ISETP.GE.AND P1, PT, R6, R5.reuse, PT ;
 Instr 128 @ 0x800 (2048) - @!P3 HADD2.F32 R21, R21.H0_H0, -RZ.H0_H0 ;
 Instr 129 @ 0x810 (2064) - IADD3 R6, R0, 0x200, RZ ;
 Instr 130 @ 0x820 (2080) - @!P6 F2F.F16.F32 R7, R22 ;
 Instr 131 @ 0x830 (2096) - @!P0 HADD2.F32 R18, R18.H0_H0, -RZ.H0_H0 ;
 Instr 132 @ 0x840 (2112) - ISETP.GE.AND P2, PT, R6, R5, PT ;
 Instr 133 @ 0x850 (2128) - @!P0 HADD2.F32 R19, R19.H0_H0, -RZ.H0_H0 ;
 Instr 134 @ 0x860 (2144) - IADD3 R6, R0, 0x280, RZ ;
 Instr 135 @ 0x870 (2160) - @!P3 FFMA R20, R21, c[0x0][0x164], R20 ;
 Instr 136 @ 0x880 (2176) - @!P4 HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 137 @ 0x890 (2192) - @!P1 HADD2.F32 R16, R16.H0_H0, -RZ.H0_H0 ;
 Instr 138 @ 0x8a0 (2208) - @!P1 HADD2.F32 R21, R17.H0_H0, -RZ.H0_H0 ;
 Instr 139 @ 0x8b0 (2224) - @!P3 F2F.F16.F32 R9, R20 ;
 Instr 140 @ 0x8c0 (2240) - ISETP.GE.AND P3, PT, R6, R5.reuse, PT ;
 Instr 141 @ 0x8d0 (2256) - @!P0 FFMA R18, R19, c[0x0][0x164], R18 ;
 Instr 142 @ 0x8e0 (2272) - @!P2 HADD2.F32 R14, R14.H0_H0, -RZ.H0_H0 ;
 Instr 143 @ 0x8f0 (2288) - IADD3 R6, R0, 0x380, RZ ;
 Instr 144 @ 0x900 (2304) - @!P2 HADD2.F32 R19, R15.H0_H0, -RZ.H0_H0 ;
 Instr 145 @ 0x910 (2320) - @!P1 FFMA R16, R21, c[0x0][0x164], R16 ;
 Instr 146 @ 0x920 (2336) - ISETP.GE.AND P5, PT, R6, R5, PT ;
 Instr 147 @ 0x930 (2352) - @!P0 F2F.F16.F32 R17, R18 ;
 Instr 148 @ 0x940 (2368) - @!P3 HADD2.F32 R12, R12.H0_H0, -RZ.H0_H0 ;
 Instr 149 @ 0x950 (2384) - @!P2 FFMA R14, R19, c[0x0][0x164], R14 ;
 Instr 150 @ 0x960 (2400) - @!P3 HADD2.F32 R13, R13.H0_H0, -RZ.H0_H0 ;
 Instr 151 @ 0x970 (2416) - @!P4 HADD2.F32 R19, R11.H0_H0, -RZ.H0_H0 ;
 Instr 152 @ 0x980 (2432) - @!P1 F2F.F16.F32 R15, R16 ;
 Instr 153 @ 0x990 (2448) - @!P5 HADD2.F32 R4, R4.H0_H0, -RZ.H0_H0 ;
 Instr 154 @ 0x9a0 (2464) - @!P3 FFMA R12, R13, c[0x0][0x164], R12 ;
 Instr 155 @ 0x9b0 (2480) - @!P5 HADD2.F32 R13, R2.H0_H0, -RZ.H0_H0 ;
 Instr 156 @ 0x9c0 (2496) - @!P2 F2F.F16.F32 R11, R14 ;
 Instr 157 @ 0x9d0 (2512) - @!P4 FFMA R10, R19, c[0x0][0x164], R10 ;
 Instr 158 @ 0x9e0 (2528) - @!P3 F2F.F16.F32 R25, R12 ;
 Instr 159 @ 0x9f0 (2544) - @P6 EXIT ;
Basic block id 11 - num instructions 9
 Instr 160 @ 0xa00 (2560) - @!P5 FFMA R4, R13, c[0x0][0x164], R4 ;
 Instr 161 @ 0xa10 (2576) - ISETP.NE.AND P6, PT, R24, RZ, PT ;
 Instr 162 @ 0xa20 (2592) - IMAD.IADD R3, R3, 0x1, R0 ;
 Instr 163 @ 0xa30 (2608) - @!P4 F2F.F16.F32 R5, R10 ;
 Instr 164 @ 0xa40 (2624) - IMAD.MOV.U32 R2, RZ, RZ, 0x2 ;
 Instr 165 @ 0xa50 (2640) - IMAD.WIDE.U32 R2, R3, R2, c[0x0][0x168] ;
 Instr 166 @ 0xa60 (2656) - @!P5 F2F.F16.F32 R13, R4 ;
 Instr 167 @ 0xa70 (2672) - STG.E.U16.SYS [R2], R7 ;
 Instr 168 @ 0xa80 (2688) - @P6 EXIT ;
Basic block id 12 - num instructions 2
 Instr 169 @ 0xa90 (2704) - STG.E.U16.SYS [R2+0x100], R9 ;
 Instr 170 @ 0xaa0 (2720) - @P0 EXIT ;
Basic block id 13 - num instructions 2
 Instr 171 @ 0xab0 (2736) - STG.E.U16.SYS [R2+0x200], R17 ;
 Instr 172 @ 0xac0 (2752) - @P1 EXIT ;
Basic block id 14 - num instructions 2
 Instr 173 @ 0xad0 (2768) - STG.E.U16.SYS [R2+0x300], R15 ;
 Instr 174 @ 0xae0 (2784) - @P2 EXIT ;
Basic block id 15 - num instructions 2
 Instr 175 @ 0xaf0 (2800) - STG.E.U16.SYS [R2+0x400], R11 ;
 Instr 176 @ 0xb00 (2816) - @P3 EXIT ;
Basic block id 16 - num instructions 2
 Instr 177 @ 0xb10 (2832) - STG.E.U16.SYS [R2+0x500], R25 ;
 Instr 178 @ 0xb20 (2848) - @P4 EXIT ;
Basic block id 17 - num instructions 2
 Instr 179 @ 0xb30 (2864) - STG.E.U16.SYS [R2+0x600], R5 ;
 Instr 180 @ 0xb40 (2880) - @P5 EXIT ;
Basic block id 18 - num instructions 2
 Instr 181 @ 0xb50 (2896) - STG.E.U16.SYS [R2+0x700], R13 ;
 Instr 182 @ 0xb60 (2912) - EXIT ;
Basic block id 19 - num instructions 1
 Instr 183 @ 0xb70 (2928) - BRA 0xb70;
inspecting void at::native::vectorized_elementwise_kernel<8, at::native::CUDAFunctor_add<c10::Half>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<c10::Half>, std::array<char*, 3ul>) - number basic blocks 20
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R18, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 54 @ 0x360 (864) - ISETP.GE.AND P6, PT, R0, R5, PT ;
Inject count_instr before - Instr 74 @ 0x4a0 (1184) - IMAD.IADD R8, R3, 0x1, R0 ;
Inject count_instr before - Instr 83 @ 0x530 (1328) - LDG.E.U16.SYS R20, [R6+0x100] ;
Inject count_instr before - Instr 88 @ 0x580 (1408) - LDG.E.U16.SYS R18, [R6+0x200] ;
Inject count_instr before - Instr 93 @ 0x5d0 (1488) - LDG.E.U16.SYS R16, [R6+0x300] ;
Inject count_instr before - Instr 98 @ 0x620 (1568) - LDG.E.U16.SYS R14, [R6+0x400] ;
Inject count_instr before - Instr 103 @ 0x670 (1648) - LDG.E.U16.SYS R12, [R6+0x500] ;
Inject count_instr before - Instr 108 @ 0x6c0 (1728) - IADD3 R10, R0, 0x380, RZ ;
Inject count_instr before - Instr 114 @ 0x720 (1824) - BSYNC B0 ;
Inject count_instr before - Instr 160 @ 0xa00 (2560) - @!P5 FFMA R4, R13, c[0x0][0x164], R4 ;
Inject count_instr before - Instr 169 @ 0xa90 (2704) - STG.E.U16.SYS [R2+0x100], R9 ;
Inject count_instr before - Instr 171 @ 0xab0 (2736) - STG.E.U16.SYS [R2+0x200], R17 ;
Inject count_instr before - Instr 173 @ 0xad0 (2768) - STG.E.U16.SYS [R2+0x300], R15 ;
Inject count_instr before - Instr 175 @ 0xaf0 (2800) - STG.E.U16.SYS [R2+0x400], R11 ;
Inject count_instr before - Instr 177 @ 0xb10 (2832) - STG.E.U16.SYS [R2+0x500], R25 ;
Inject count_instr before - Instr 179 @ 0xb30 (2864) - STG.E.U16.SYS [R2+0x600], R5 ;
Inject count_instr before - Instr 181 @ 0xb50 (2896) - STG.E.U16.SYS [R2+0x700], R13 ;
Inject count_instr before - Instr 183 @ 0xb70 (2928) - BRA 0xb70;
kernel 127 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 196,  kernel instructions 42336, total instructions 12698994
kernel 128 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 196,  kernel instructions 47040, total instructions 12746034
kernel 129 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 162960, total instructions 12908994
kernel 130 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 128,  kernel instructions 154112, total instructions 13063106
kernel 131 - sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 49,  kernel instructions 572320, total instructions 13635426
kernel 132 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 174928, total instructions 13810354
kernel 133 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 172, total instructions 13810526
kernel 134 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 598, total instructions 13811124
kernel 135 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 64,  kernel instructions 180736, total instructions 13991860
kernel 136 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 196,  kernel instructions 47040, total instructions 14038900
kernel 137 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 162960, total instructions 14201860
kernel 138 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 128,  kernel instructions 154112, total instructions 14355972
kernel 139 - sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 49,  kernel instructions 572320, total instructions 14928292
kernel 140 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 174928, total instructions 15103220
kernel 141 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 172, total instructions 15103392
kernel 142 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 598, total instructions 15103990
kernel 143 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 64,  kernel instructions 180736, total instructions 15284726
kernel 144 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 196,  kernel instructions 42336, total instructions 15327062
kernel 145 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 196,  kernel instructions 47040, total instructions 15374102
kernel 146 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 162960, total instructions 15537062
kernel 147 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 256,  kernel instructions 308224, total instructions 15845286
Function sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x32x64_stage1_warpsize2x1x2_g1_tensor16x8x8_execute_kernel__5x_cudnn
Basic block id 0 - num instructions 9
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2UR UR5, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x310], PT ;
 Instr 3 @ 0x30 (48) - ISETP.NE.AND P3, PT, RZ, c[0x0][0x318], PT ;
 Instr 4 @ 0x40 (64) - S2UR UR4, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - S2R R7, SR_CTAID.Z ;
 Instr 6 @ 0x60 (96) - IMAD.U32 R3, RZ, RZ, UR5 ;
 Instr 7 @ 0x70 (112) - IMAD.U32 R58, RZ, RZ, UR4 ;
 Instr 8 @ 0x80 (128) - @!P0 BRA 0x330 ;
Basic block id 1 - num instructions 14
 Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R9, RZ, RZ, -0x1 ;
 Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x344] ;
 Instr 11 @ 0xb0 (176) - IMAD.MOV.U32 R11, RZ, RZ, 0x1 ;
 Instr 12 @ 0xc0 (192) - SHF.L.U32 R9, R9, c[0x0][0x648], RZ ;
 Instr 13 @ 0xd0 (208) - SEL R6, R2, c[0x0][0x340], !P3 ;
 Instr 14 @ 0xe0 (224) - LOP3.LUT R5, R58, R9, RZ, 0xf3, !PT ;
 Instr 15 @ 0xf0 (240) - SHF.L.U32 R11, R11, c[0x0][0x648], RZ ;
 Instr 16 @ 0x100 (256) - ISETP.GE.U32.AND P0, PT, R5, R6, PT ;
 Instr 17 @ 0x110 (272) - LOP3.LUT P1, RZ, R11, R58, RZ, 0xc0, !PT ;
 Instr 18 @ 0x120 (288) - IMAD.MOV.U32 R11, RZ, RZ, c[0x0][0x648] ;
 Instr 19 @ 0x130 (304) - SEL R2, R2, c[0x0][0x340], P3 ;
 Instr 20 @ 0x140 (320) - LOP3.LUT R9, RZ, R9, RZ, 0x33, !PT ;
 Instr 21 @ 0x150 (336) - SEL R4, RZ, 0x1, !P1 ;
 Instr 22 @ 0x160 (352) - @!P0 BRA 0x240 ;
Basic block id 2 - num instructions 1
 Instr 23 @ 0x170 (368) - MOV R0, 0x1 ;
Basic block id 3 - num instructions 3
 Instr 24 @ 0x180 (384) - ISETP.NE.AND P1, PT, R5, R6, PT ;
 Instr 25 @ 0x190 (400) - ISETP.EQ.AND P0, PT, R11, 0x2, PT ;
 Instr 26 @ 0x1a0 (416) - @!P1 BRA P0, 0x290 ;
Basic block id 4 - num instructions 9
 Instr 27 @ 0x1b0 (432) - IADD3 R11, R11, -0x1, RZ ;
 Instr 28 @ 0x1c0 (448) - SHF.R.U32.HI R9, RZ, 0x1, R9 ;
 Instr 29 @ 0x1d0 (464) - SHF.L.U32 R5, R0, R11, RZ ;
 Instr 30 @ 0x1e0 (480) - ISETP.NE.AND P1, PT, R4, RZ, PT ;
 Instr 31 @ 0x1f0 (496) - LOP3.LUT P2, RZ, R5, R58.reuse, RZ, 0xc0, !PT ;
 Instr 32 @ 0x200 (512) - LOP3.LUT R5, R9, R58, RZ, 0xfc, !PT ;
 Instr 33 @ 0x210 (528) - ISETP.GE.U32.AND P0, PT, R5, R6, PT ;
 Instr 34 @ 0x220 (544) - @P2 SEL R4, RZ, 0x1, P1 ;
 Instr 35 @ 0x230 (560) - @P0 BRA 0x180 ;
Basic block id 5 - num instructions 5
 Instr 36 @ 0x240 (576) - LOP3.LUT R0, R9, R58, RZ, 0xc0, !PT ;
 Instr 37 @ 0x250 (592) - IMAD R0, R0, R2, R3 ;
 Instr 38 @ 0x260 (608) - LOP3.LUT R58, R58, R9, R0.reuse, 0xb8, !PT ;
 Instr 39 @ 0x270 (624) - SHF.R.U32.HI R3, RZ, R11, R0 ;
 Instr 40 @ 0x280 (640) - BRA 0x300 ;
Basic block id 6 - num instructions 7
 Instr 41 @ 0x290 (656) - LOP3.LUT R0, R9, R58, RZ, 0xc0, !PT ;
 Instr 42 @ 0x2a0 (672) - LOP3.LUT R9, R58, R9, RZ, 0x30, !PT ;
 Instr 43 @ 0x2b0 (688) - IMAD R0, R0, R2, R3 ;
 Instr 44 @ 0x2c0 (704) - IADD3 R58, R0.reuse, R9, RZ ;
 Instr 45 @ 0x2d0 (720) - IMAD.WIDE.U32 R8, R0, 0x55555556, RZ ;
 Instr 46 @ 0x2e0 (736) - IMAD R58, R9, -0x3, R58 ;
 Instr 47 @ 0x2f0 (752) - MOV R3, R9 ;
Basic block id 7 - num instructions 3
 Instr 48 @ 0x300 (768) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 49 @ 0x310 (784) - LOP3.LUT R5, RZ, R3, RZ, 0x33, !PT ;
 Instr 50 @ 0x320 (800) - @P0 IMAD.IADD R3, R5, 0x1, R2 ;
Basic block id 8 - num instructions 236
 Instr 51 @ 0x330 (816) - S2R R0, SR_TID.X ;
 Instr 52 @ 0x340 (832) - UMOV UR12, 0x1 ;
 Instr 53 @ 0x350 (848) - SEL R57, R58, R3, !P3 ;
 Instr 54 @ 0x360 (864) - ULDC.64 UR4, c[0x0][0x3c8] ;
 Instr 55 @ 0x370 (880) - SEL R58, R3, R58, !P3 ;
 Instr 56 @ 0x380 (896) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 57 @ 0x390 (912) - IMAD.MOV.U32 R85, RZ, RZ, c[0x0][0x1c8] ;
 Instr 58 @ 0x3a0 (928) - SHF.L.U32 R57, R57, 0x5, RZ ;
 Instr 59 @ 0x3b0 (944) - IMAD R35, R7, c[0x0][0x3ac], RZ ;
 Instr 60 @ 0x3c0 (960) - CS2R R74, SRZ ;
 Instr 61 @ 0x3d0 (976) - IMAD.SHL.U32 R58, R58, 0x40, RZ ;
 Instr 62 @ 0x3e0 (992) - PLOP3.LUT P2, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 63 @ 0x3f0 (1008) - UISETP.NE.AND UP0, UPT, UR12, UR5, UPT ;
 Instr 64 @ 0x400 (1024) - ISETP.GT.AND P0, PT, R85.reuse, 0x1, PT ;
 Instr 65 @ 0x410 (1040) - CS2R R66, SRZ ;
 Instr 66 @ 0x420 (1056) - IMAD R91, R85, c[0x0][0x1a8], RZ ;
 Instr 67 @ 0x430 (1072) - ULDC UR4, c[0x0][0x1b4] ;
 Instr 68 @ 0x440 (1088) - SEL R11, R57, RZ, P0 ;
 Instr 69 @ 0x450 (1104) - CS2R R70, SRZ ;
 Instr 70 @ 0x460 (1120) - PLOP3.LUT P1, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 71 @ 0x470 (1136) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 72 @ 0x480 (1152) - IMAD.MOV.U32 R76, RZ, RZ, RZ ;
 Instr 73 @ 0x490 (1168) - CS2R R68, SRZ ;
 Instr 74 @ 0x4a0 (1184) - CS2R R72, SRZ ;
 Instr 75 @ 0x4b0 (1200) - SHF.R.S32.HI R77, RZ, 0x1f, R0 ;
 Instr 76 @ 0x4c0 (1216) - IMAD.SHL.U32 R55, R0.reuse, 0x10, RZ ;
 Instr 77 @ 0x4d0 (1232) - LOP3.LUT R5, R0.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 78 @ 0x4e0 (1248) - IMAD.SHL.U32 R6, R0.reuse, 0x80, RZ ;
 Instr 79 @ 0x4f0 (1264) - LEA.HI R77, R77, R0, RZ, 0x3 ;
 Instr 80 @ 0x500 (1280) - IMAD.MOV.U32 R38, RZ, RZ, c[0x0][0x274] ;
 Instr 81 @ 0x510 (1296) - LOP3.LUT R56, R0, 0xf, RZ, 0xc0, !PT ;
 Instr 82 @ 0x520 (1312) - IMAD.MOV.U32 R36, RZ, RZ, c[0x0][0x27c] ;
 Instr 83 @ 0x530 (1328) - SHF.R.S32.HI R4, RZ, 0x3, R77.reuse ;
 Instr 84 @ 0x540 (1344) - S2UR UR8, SR_CTAID.Z ;
 Instr 85 @ 0x550 (1360) - SHF.R.S32.HI R59, RZ, 0x1f, R77 ;
 Instr 86 @ 0x560 (1376) - CS2R R18, SRZ ;
 Instr 87 @ 0x570 (1392) - LOP3.LUT R3, R77, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 88 @ 0x580 (1408) - IMAD.IADD R2, R4, 0x1, R58 ;
 Instr 89 @ 0x590 (1424) - LEA.HI R59, R59, R4, RZ, 0x3 ;
 Instr 90 @ 0x5a0 (1440) - CS2R R20, SRZ ;
 Instr 91 @ 0x5b0 (1456) - IADD3 R98, -R3, R0, RZ ;
 Instr 92 @ 0x5c0 (1472) - @P2 IMAD.HI.U32 R3, R2, c[0x0][0x3d8], RZ ;
 Instr 93 @ 0x5d0 (1488) - LOP3.LUT R59, R59, 0xffffff8, RZ, 0xc0, !PT ;
 Instr 94 @ 0x5e0 (1504) - CS2R R22, SRZ ;
 Instr 95 @ 0x5f0 (1520) - LOP3.LUT R55, R55, 0x70, RZ, 0xc0, !PT ;
 Instr 96 @ 0x600 (1536) - IMAD.MOV.U32 R9, RZ, RZ, R2 ;
 Instr 97 @ 0x610 (1552) - LEA.HI R56, R5, R56, RZ, 0x1f ;
 Instr 98 @ 0x620 (1568) - IMAD.IADD R59, R4, 0x1, -R59 ;
 Instr 99 @ 0x630 (1584) - LOP3.LUT R55, R55, 0x40, R0, 0x78, !PT ;
 Instr 100 @ 0x640 (1600) - CS2R R24, SRZ ;
 Instr 101 @ 0x650 (1616) - LOP3.LUT R6, R6, 0x780, RZ, 0xc0, !PT ;
 Instr 102 @ 0x660 (1632) - CS2R R26, SRZ ;
 Instr 103 @ 0x670 (1648) - LOP3.LUT R59, R59, R98, RZ, 0x3c, !PT ;
 Instr 104 @ 0x680 (1664) - IMAD R56, R56, 0x80, R55 ;
 Instr 105 @ 0x690 (1680) - LOP3.LUT R5, R77.reuse, 0x1ffffff8, RZ, 0xc0, !PT ;
 Instr 106 @ 0x6a0 (1696) - IMAD R98, R98, 0x8, R35 ;
 Instr 107 @ 0x6b0 (1712) - @P2 SHF.R.U32.HI R9, RZ, c[0x0][0x3dc], R3 ;
 Instr 108 @ 0x6c0 (1728) - IMAD R59, R4, 0x8, R59 ;
 Instr 109 @ 0x6d0 (1744) - LEA.HI.SX32 R4, R77, R58, 0x1d ;
 Instr 110 @ 0x6e0 (1760) - IMAD.IADD R0, R0, 0x1, -R5 ;
 Instr 111 @ 0x6f0 (1776) - IADD3 R55, R6, R55, RZ ;
 Instr 112 @ 0x700 (1792) - @P2 IMAD.MOV R15, RZ, RZ, -R9 ;
 Instr 113 @ 0x710 (1808) - IADD3 R4, R4, 0x30, RZ ;
 Instr 114 @ 0x720 (1824) - IMAD.IADD R102, R98, 0x1, R11 ;
 Instr 115 @ 0x730 (1840) - IADD3 R6, R2.reuse, 0x10, RZ ;
 Instr 116 @ 0x740 (1856) - @P2 IMAD R75, R15, c[0x0][0x3c8], R2 ;
 Instr 117 @ 0x750 (1872) - IADD3 R5, R2, 0x20, RZ ;
 Instr 118 @ 0x760 (1888) - @P2 IMAD.HI.U32 R3, R4, c[0x0][0x3d8], RZ ;
 Instr 119 @ 0x770 (1904) - ISETP.GE.AND P3, PT, R102, R91, PT ;
 Instr 120 @ 0x780 (1920) - CS2R R28, SRZ ;
 Instr 121 @ 0x790 (1936) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 122 @ 0x7a0 (1952) - @P2 IMAD.HI.U32 R12, R6, c[0x0][0x3d8], RZ ;
 Instr 123 @ 0x7b0 (1968) - @P2 SHF.R.U32.HI R3, RZ, c[0x0][0x3dc], R3 ;
 Instr 124 @ 0x7c0 (1984) - CS2R R30, SRZ ;
 Instr 125 @ 0x7d0 (2000) - ISETP.LT.AND P6, PT, R2, c[0x0][0x3c4], !P3 ;
 Instr 126 @ 0x7e0 (2016) - @P2 IMAD.HI.U32 R10, R5, c[0x0][0x3d8], RZ ;
 Instr 127 @ 0x7f0 (2032) - @P2 SHF.R.U32.HI R12, RZ, c[0x0][0x3dc], R12 ;
 Instr 128 @ 0x800 (2048) - CS2R R32, SRZ ;
 Instr 129 @ 0x810 (2064) - @P2 IADD3 R11, -R3, RZ, RZ ;
 Instr 130 @ 0x820 (2080) - @P1 IMAD.HI.U32 R14, R75, c[0x0][0x3e0], RZ ;
 Instr 131 @ 0x830 (2096) - @P2 SHF.R.U32.HI R10, RZ, c[0x0][0x3dc], R10 ;
 Instr 132 @ 0x840 (2112) - ISETP.LT.AND P5, PT, R6, c[0x0][0x3c4], !P3 ;
 Instr 133 @ 0x850 (2128) - @P2 IMAD.MOV R13, RZ, RZ, -R12 ;
 Instr 134 @ 0x860 (2144) - @P1 SHF.R.U32.HI R14, RZ, c[0x0][0x3e4], R14 ;
 Instr 135 @ 0x870 (2160) - @P2 IMAD R67, R11, c[0x0][0x3c8], R4 ;
 Instr 136 @ 0x880 (2176) - ISETP.LT.AND P4, PT, R5, c[0x0][0x3c4], !P3 ;
 Instr 137 @ 0x890 (2192) - @P2 IMAD.MOV R8, RZ, RZ, -R10 ;
 Instr 138 @ 0x8a0 (2208) - ISETP.LT.AND P3, PT, R4, c[0x0][0x3c4], !P3 ;
 Instr 139 @ 0x8b0 (2224) - @P2 IMAD R74, R13, c[0x0][0x3c8], R6 ;
 Instr 140 @ 0x8c0 (2240) - @P2 MOV R4, R3 ;
 Instr 141 @ 0x8d0 (2256) - @P1 IMAD.HI.U32 R2, R67, c[0x0][0x3e0], RZ ;
 Instr 142 @ 0x8e0 (2272) - MOV R65, RZ ;
 Instr 143 @ 0x8f0 (2288) - MOV R64, c[0x0][0x1cc] ;
 Instr 144 @ 0x900 (2304) - @P2 IMAD.MOV.U32 R6, RZ, RZ, R12 ;
 Instr 145 @ 0x910 (2320) - @P1 SHF.R.U32.HI R2, RZ, c[0x0][0x3e4], R2 ;
 Instr 146 @ 0x920 (2336) - @P1 IMAD.MOV R12, RZ, RZ, -R14 ;
 Instr 147 @ 0x930 (2352) - @P2 IMAD R70, R8, c[0x0][0x3c8], R5 ;
 Instr 148 @ 0x940 (2368) - @P2 MOV R5, R10 ;
 Instr 149 @ 0x950 (2384) - @P1 IMAD.HI.U32 R11, R74, c[0x0][0x3e0], RZ ;
 Instr 150 @ 0x960 (2400) - @P1 IMAD R76, R12, c[0x0][0x3cc], R75 ;
 Instr 151 @ 0x970 (2416) - @P1 SHF.R.U32.HI R12, RZ, c[0x0][0x3e4], R11 ;
 Instr 152 @ 0x980 (2432) - @P1 IMAD.HI.U32 R8, R70, c[0x0][0x3e0], RZ ;
 Instr 153 @ 0x990 (2448) - @P1 IMAD.MOV R10, RZ, RZ, -R2 ;
 Instr 154 @ 0x9a0 (2464) - @P1 SHF.R.U32.HI R8, RZ, c[0x0][0x3e4], R8 ;
 Instr 155 @ 0x9b0 (2480) - @P0 IMAD.HI.U32 R13, R76, c[0x0][0x3e8], RZ ;
 Instr 156 @ 0x9c0 (2496) - @P1 IMAD R66, R10, c[0x0][0x3cc], R67 ;
 Instr 157 @ 0x9d0 (2512) - @P0 SHF.R.U32.HI R13, RZ, c[0x0][0x3ec], R13 ;
 Instr 158 @ 0x9e0 (2528) - @P1 IMAD.MOV R11, RZ, RZ, -R12 ;
 Instr 159 @ 0x9f0 (2544) - @P1 IMAD.MOV R3, RZ, RZ, -R8 ;
 Instr 160 @ 0xa00 (2560) - @P0 IMAD.HI.U32 R10, R66, c[0x0][0x3e8], RZ ;
 Instr 161 @ 0xa10 (2576) - @P1 IMAD R71, R11, c[0x0][0x3cc], R74 ;
 Instr 162 @ 0xa20 (2592) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3ec], R10 ;
 Instr 163 @ 0xa30 (2608) - @P0 IMAD.MOV R11, RZ, RZ, -R13 ;
 Instr 164 @ 0xa40 (2624) - @P1 MOV R74, R12 ;
 Instr 165 @ 0xa50 (2640) - @P1 IMAD R69, R3, c[0x0][0x3cc], R70 ;
 Instr 166 @ 0xa60 (2656) - @P0 IMAD R73, R11, c[0x0][0x1b4], R76 ;
 Instr 167 @ 0xa70 (2672) - @P1 IMAD.MOV.U32 R67, RZ, RZ, R2 ;
 Instr 168 @ 0xa80 (2688) - @P0 IMAD.HI.U32 R11, R69, c[0x0][0x3e8], RZ ;
 Instr 169 @ 0xa90 (2704) - @P0 IMAD.MOV R3, RZ, RZ, -R10 ;
 Instr 170 @ 0xaa0 (2720) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3ec], R11 ;
 Instr 171 @ 0xab0 (2736) - @P0 IMAD.HI.U32 R12, R71, c[0x0][0x3e8], RZ ;
 Instr 172 @ 0xac0 (2752) - IMAD R15, R7, c[0x0][0x3a4], RZ ;
 Instr 173 @ 0xad0 (2768) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x3ec], R12 ;
 Instr 174 @ 0xae0 (2784) - IMAD R2, R67, R38, -c[0x0][0x25c] ;
 Instr 175 @ 0xaf0 (2800) - @P0 IMAD R65, R3, c[0x0][0x1b4], R66 ;
 Instr 176 @ 0xb00 (2816) - IMAD R3, R15, c[0x0][0x280], R2 ;
 Instr 177 @ 0xb10 (2832) - @P0 IADD3 R2, -R11, RZ, RZ ;
 Instr 178 @ 0xb20 (2848) - @P1 IMAD.MOV.U32 R75, RZ, RZ, R14 ;
 Instr 179 @ 0xb30 (2864) - @P1 IMAD.MOV.U32 R70, RZ, RZ, R8 ;
 Instr 180 @ 0xb40 (2880) - @P0 IMAD.MOV R8, RZ, RZ, -R12 ;
 Instr 181 @ 0xb50 (2896) - @P0 IMAD R68, R2, c[0x0][0x1b4], R69 ;
 Instr 182 @ 0xb60 (2912) - IMAD R44, R75, R38, -c[0x0][0x25c] ;
 Instr 183 @ 0xb70 (2928) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x278] ;
 Instr 184 @ 0xb80 (2944) - @P0 IMAD.MOV.U32 R69, RZ, RZ, R11 ;
 Instr 185 @ 0xb90 (2960) - @P0 IMAD R72, R8, c[0x0][0x1b4], R71 ;
 Instr 186 @ 0xba0 (2976) - @P0 MOV R71, R12 ;
 Instr 187 @ 0xbb0 (2992) - IMAD R44, R15, c[0x0][0x280], R44 ;
 Instr 188 @ 0xbc0 (3008) - IMAD R14, R74, R38, -c[0x0][0x25c] ;
 Instr 189 @ 0xbd0 (3024) - IMAD R7, R7, c[0x0][0x3a8], RZ ;
 Instr 190 @ 0xbe0 (3040) - IMAD R8, R69, R2, -c[0x0][0x264] ;
 Instr 191 @ 0xbf0 (3056) - IMAD R38, R70, R38, -c[0x0][0x25c] ;
 Instr 192 @ 0xc00 (3072) - @P0 IMAD.MOV.U32 R76, RZ, RZ, R13 ;
 Instr 193 @ 0xc10 (3088) - @P0 IMAD.MOV.U32 R66, RZ, RZ, R10 ;
 Instr 194 @ 0xc20 (3104) - ISETP.GE.U32.AND P0, PT, R44, c[0x0][0x19c], PT ;
 Instr 195 @ 0xc30 (3120) - IMAD R37, R7, c[0x0][0x284], R8 ;
 Instr 196 @ 0xc40 (3136) - LOP3.LUT R8, RZ, c[0x0][0x620], RZ, 0x33, !PT ;
 Instr 197 @ 0xc50 (3152) - IMAD R38, R15, c[0x0][0x280], R38 ;
 Instr 198 @ 0xc60 (3168) - IMAD R41, R15, c[0x0][0x280], R14 ;
 Instr 199 @ 0xc70 (3184) - SEL R15, R8, 0xffffffff, P0 ;
 Instr 200 @ 0xc80 (3200) - IMAD R12, R76, R2.reuse, -c[0x0][0x264] ;
 Instr 201 @ 0xc90 (3216) - ISETP.GE.U32.AND P0, PT, R38, c[0x0][0x19c], PT ;
 Instr 202 @ 0xca0 (3232) - IMAD R10, R66, R2.reuse, -c[0x0][0x264] ;
 Instr 203 @ 0xcb0 (3248) - ISETP.GE.U32.AND P1, PT, R41, c[0x0][0x19c], PT ;
 Instr 204 @ 0xcc0 (3264) - IMAD R40, R71, R2, -c[0x0][0x264] ;
 Instr 205 @ 0xcd0 (3280) - SEL R11, R8.reuse, 0xffffffff, P0 ;
 Instr 206 @ 0xce0 (3296) - IMAD R45, R73, R36.reuse, -c[0x0][0x26c] ;
 Instr 207 @ 0xcf0 (3312) - SEL R14, R8, 0xffffffff, P1 ;
 Instr 208 @ 0xd00 (3328) - IMAD R42, R72, R36.reuse, -c[0x0][0x26c] ;
 Instr 209 @ 0xd10 (3344) - SEL R11, R11, RZ, P4 ;
 Instr 210 @ 0xd20 (3360) - IMAD R43, R7, c[0x0][0x284], R12 ;
 Instr 211 @ 0xd30 (3376) - ISETP.GE.U32.AND P0, PT, R45, c[0x0][0x1a4], PT ;
 Instr 212 @ 0xd40 (3392) - IMAD R2, R7.reuse, c[0x0][0x284], R10 ;
 Instr 213 @ 0xd50 (3408) - ISETP.GE.U32.AND P2, PT, R42, c[0x0][0x1a4], PT ;
 Instr 214 @ 0xd60 (3424) - IMAD R40, R7, c[0x0][0x284], R40 ;
 Instr 215 @ 0xd70 (3440) - LOP3.LUT R7, RZ, c[0x0][0x628], RZ, 0x33, !PT ;
 Instr 216 @ 0xd80 (3456) - IMAD R39, R68, R36.reuse, -c[0x0][0x26c] ;
 Instr 217 @ 0xd90 (3472) - LOP3.LUT R12, RZ, c[0x0][0x624], RZ, 0x33, !PT ;
 Instr 218 @ 0xda0 (3488) - IMAD R36, R65, R36, -c[0x0][0x26c] ;
 Instr 219 @ 0xdb0 (3504) - SEL R89, R7, 0xffffffff, P0 ;
 Instr 220 @ 0xdc0 (3520) - IMAD R9, R9, c[0x0][0x230], RZ ;
 Instr 221 @ 0xdd0 (3536) - ISETP.GE.U32.AND P1, PT, R39, c[0x0][0x1a4], PT ;
 Instr 222 @ 0xde0 (3552) - IMAD R4, R4, c[0x0][0x230], RZ ;
 Instr 223 @ 0xdf0 (3568) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x1a0], PT ;
 Instr 224 @ 0xe00 (3584) - IMAD R6, R6, c[0x0][0x230], RZ ;
 Instr 225 @ 0xe10 (3600) - SEL R88, R7, 0xffffffff, P2 ;
 Instr 226 @ 0xe20 (3616) - IMAD R90, R0, 0x8, R35 ;
 Instr 227 @ 0xe30 (3632) - ISETP.GE.U32.AND P4, PT, R43, c[0x0][0x1a0], PT ;
 Instr 228 @ 0xe40 (3648) - CS2R R34, SRZ ;
 Instr 229 @ 0xe50 (3664) - SEL R87, R7, 0xffffffff, P1 ;
 Instr 230 @ 0xe60 (3680) - ISETP.GE.U32.AND P2, PT, R40, c[0x0][0x1a0], PT ;
 Instr 231 @ 0xe70 (3696) - ISETP.GE.U32.AND P1, PT, R37, c[0x0][0x1a0], PT ;
 Instr 232 @ 0xe80 (3712) - SEL R86, R12.reuse, 0xffffffff, P0 ;
 Instr 233 @ 0xe90 (3728) - SEL R16, R12.reuse, 0xffffffff, P4 ;
 Instr 234 @ 0xea0 (3744) - SEL R13, R12.reuse, 0xffffffff, P2 ;
 Instr 235 @ 0xeb0 (3760) - SEL R12, R12, 0xffffffff, P1 ;
 Instr 236 @ 0xec0 (3776) - LOP3.LUT R10, R86, 0x1, RZ, 0xc0, !PT ;
 Instr 237 @ 0xed0 (3792) - ISETP.GE.U32.AND P1, PT, R3.reuse, c[0x0][0x19c], PT ;
 Instr 238 @ 0xee0 (3808) - ISETP.NE.U32.AND P0, PT, R10, 0x1, PT ;
 Instr 239 @ 0xef0 (3824) - SEL R10, R8, 0xffffffff, P1 ;
 Instr 240 @ 0xf00 (3840) - IMAD R8, R44, c[0x0][0x234], R9 ;
 Instr 241 @ 0xf10 (3856) - SEL R14, R14, RZ, P5 ;
 Instr 242 @ 0xf20 (3872) - IMAD R9, R3, c[0x0][0x234], R4 ;
 Instr 243 @ 0xf30 (3888) - ISETP.GE.U32.AND P1, PT, R36, c[0x0][0x1a4], PT ;
 Instr 244 @ 0xf40 (3904) - IMAD R8, R43, c[0x0][0x238], R8 ;
 Instr 245 @ 0xf50 (3920) - LOP3.LUT R87, R87, R11, R12, 0x80, !PT ;
 Instr 246 @ 0xf60 (3936) - IMAD R11, R5, c[0x0][0x230], RZ ;
 Instr 247 @ 0xf70 (3952) - LOP3.LUT R88, R88, R14, R13, 0x80, !PT ;
 Instr 248 @ 0xf80 (3968) - IMAD R13, R41, c[0x0][0x234], R6 ;
 Instr 249 @ 0xf90 (3984) - SEL R5, R10, RZ, P3 ;
 Instr 250 @ 0xfa0 (4000) - IMAD R6, R38, c[0x0][0x234], R11 ;
 Instr 251 @ 0xfb0 (4016) - SEL R7, R7, 0xffffffff, P1 ;
 Instr 252 @ 0xfc0 (4032) - IMAD R9, R2, c[0x0][0x238], R9 ;
 Instr 253 @ 0xfd0 (4048) - LOP3.LUT R4, R5, 0x1, RZ, 0xc0, !PT ;
 Instr 254 @ 0xfe0 (4064) - IMAD R6, R37, c[0x0][0x238], R6 ;
 Instr 255 @ 0xff0 (4080) - LOP3.LUT R86, R7, R5, R86, 0x80, !PT ;
 Instr 256 @ 0x1000 (4096) - IMAD R5, R40, c[0x0][0x238], R13 ;
 Instr 257 @ 0x1010 (4112) - SEL R15, R15, RZ, P6 ;
 Instr 258 @ 0x1020 (4128) - IMAD R11, R36, c[0x0][0x23c], R9 ;
 Instr 259 @ 0x1030 (4144) - ISETP.GE.AND P4, PT, R64, 0x2, PT ;
 Instr 260 @ 0x1040 (4160) - IMAD R13, R45, c[0x0][0x23c], R8 ;
 Instr 261 @ 0x1050 (4176) - LOP3.LUT R89, R89, R15, R16, 0x80, !PT ;
 Instr 262 @ 0x1060 (4192) - IMAD R9, R42, c[0x0][0x23c], R5 ;
 Instr 263 @ 0x1070 (4208) - ISETP.EQ.U32.AND P3, PT, R4, 0x1, !P0 ;
 Instr 264 @ 0x1080 (4224) - IMAD R5, R39, c[0x0][0x23c], R6 ;
 Instr 265 @ 0x1090 (4240) - LOP3.LUT R4, R89, 0x1, RZ, 0xc0, !PT ;
 Instr 266 @ 0x10a0 (4256) - IMAD R106, R102.reuse, c[0x0][0x240], R13 ;
 Instr 267 @ 0x10b0 (4272) - LOP3.LUT R7, R7, 0x1, RZ, 0xc0, !PT ;
 Instr 268 @ 0x10c0 (4288) - IMAD R100, R102, c[0x0][0x240], R11 ;
 Instr 269 @ 0x10d0 (4304) - LOP3.LUT R6, R88, 0x1, RZ, 0xc0, !PT ;
 Instr 270 @ 0x10e0 (4320) - IMAD R104, R102, c[0x0][0x240], R9 ;
 Instr 271 @ 0x10f0 (4336) - ISETP.EQ.U32.AND P0, PT, R4, 0x1, PT ;
 Instr 272 @ 0x1100 (4352) - IMAD R102, R102, c[0x0][0x240], R5 ;
 Instr 273 @ 0x1110 (4368) - LOP3.LUT R5, R87, 0x1, RZ, 0xc0, !PT ;
 Instr 274 @ 0x1120 (4384) - CS2R R8, SRZ ;
 Instr 275 @ 0x1130 (4400) - ISETP.EQ.U32.AND P3, PT, R7, 0x1, P3 ;
 Instr 276 @ 0x1140 (4416) - CS2R R10, SRZ ;
 Instr 277 @ 0x1150 (4432) - ISETP.EQ.U32.AND P1, PT, R6, 0x1, PT ;
 Instr 278 @ 0x1160 (4448) - CS2R R12, SRZ ;
 Instr 279 @ 0x1170 (4464) - ISETP.EQ.U32.AND P2, PT, R5, 0x1, PT ;
 Instr 280 @ 0x1180 (4480) - CS2R R6, SRZ ;
 Instr 281 @ 0x1190 (4496) - CS2R R4, SRZ ;
 Instr 282 @ 0x11a0 (4512) - CS2R R14, SRZ ;
 Instr 283 @ 0x11b0 (4528) - CS2R R16, SRZ ;
 Instr 284 @ 0x11c0 (4544) - IADD3 R90, R90, c[0x0][0x638], RZ ;
 Instr 285 @ 0x11d0 (4560) - P2R R93, PR, RZ, 0xf ;
 Instr 286 @ 0x11e0 (4576) - @!P4 BRA 0x1a00 ;
Basic block id 9 - num instructions 5
 Instr 287 @ 0x11f0 (4592) - IADD3 R46, R64.reuse, -0x2, RZ ;
 Instr 288 @ 0x1200 (4608) - UMOV UR11, 0x1 ;
 Instr 289 @ 0x1210 (4624) - IADD3 R64, R64, -0x1, RZ ;
 Instr 290 @ 0x1220 (4640) - ISETP.GE.U32.AND P0, PT, R46, 0x3, PT ;
 Instr 291 @ 0x1230 (4656) - @!P0 BRA 0x1750 ;
Basic block id 10 - num instructions 2
 Instr 292 @ 0x1240 (4672) - LOP3.LUT R63, R64, 0x3, RZ, 0xc0, !PT ;
 Instr 293 @ 0x1250 (4688) - IADD3 R63, R64, -R63, RZ ;
Basic block id 11 - num instructions 79
 Instr 294 @ 0x1260 (4704) - IMAD.U32 R46, RZ, RZ, UR11 ;
 Instr 295 @ 0x1270 (4720) - ULDC UR5, c[0x0][0x280] ;
 Instr 296 @ 0x1280 (4736) - IADD3 R63, R63, -0x4, RZ ;
 Instr 297 @ 0x1290 (4752) - UIMAD UR7, UR11, UR5, UR5 ;
 Instr 298 @ 0x12a0 (4768) - IMAD R49, R46.reuse, c[0x0][0x280], R44 ;
 Instr 299 @ 0x12b0 (4784) - ULDC UR4, c[0x0][0x61c] ;
 Instr 300 @ 0x12c0 (4800) - IMAD R48, R46.reuse, c[0x0][0x280], R41 ;
 Instr 301 @ 0x12d0 (4816) - UIMAD UR10, UR11, UR4, URZ ;
 Instr 302 @ 0x12e0 (4832) - IMAD R47, R46.reuse, c[0x0][0x280], R38 ;
 Instr 303 @ 0x12f0 (4848) - UIADD3 UR6, UR7, UR5, URZ ;
 Instr 304 @ 0x1300 (4864) - IMAD R46, R46, c[0x0][0x280], R3 ;
 Instr 305 @ 0x1310 (4880) - UIADD3 UR9, UR10, UR4, URZ ;
 Instr 306 @ 0x1320 (4896) - ISETP.GE.U32.AND P0, PT, R48, c[0x0][0x19c], PT ;
 Instr 307 @ 0x1330 (4912) - UIADD3 UR5, UR6, UR5, URZ ;
 Instr 308 @ 0x1340 (4928) - ISETP.GE.U32.AND P5, PT, R47, c[0x0][0x19c], PT ;
 Instr 309 @ 0x1350 (4944) - UIADD3 UR11, UR11, 0x4, URZ ;
 Instr 310 @ 0x1360 (4960) - ISETP.GE.U32.AND P4, PT, R46, c[0x0][0x19c], PT ;
 Instr 311 @ 0x1370 (4976) - IMAD.MOV.U32 R46, RZ, RZ, c[0x0][0x620] ;
 Instr 312 @ 0x1380 (4992) - IADD3 R47, R41, UR7, RZ ;
 Instr 313 @ 0x1390 (5008) - IADD3 R48, R44, UR7, RZ ;
 Instr 314 @ 0x13a0 (5024) - ISETP.GE.U32.AND P6, PT, R47, c[0x0][0x19c], PT ;
 Instr 315 @ 0x13b0 (5040) - IADD3 R47, R38, UR7, RZ ;
 Instr 316 @ 0x13c0 (5056) - SHF.L.U32 R54, R46.reuse, UR10, RZ ;
 Instr 317 @ 0x13d0 (5072) - SHF.L.U32 R51, R46, UR9, RZ ;
 Instr 318 @ 0x13e0 (5088) - UIADD3 UR9, UR9, UR4, URZ ;
 Instr 319 @ 0x13f0 (5104) - ISETP.GE.U32.AND P1, PT, R49, c[0x0][0x19c], PT ;
 Instr 320 @ 0x1400 (5120) - ISETP.GE.U32.AND P3, PT, R47, c[0x0][0x19c], PT ;
 Instr 321 @ 0x1410 (5136) - UIADD3 UR4, UR9, UR4, URZ ;
 Instr 322 @ 0x1420 (5152) - LOP3.LUT R54, RZ, R54, RZ, 0x33, !PT ;
 Instr 323 @ 0x1430 (5168) - IADD3 R47, R44, UR6, RZ ;
 Instr 324 @ 0x1440 (5184) - ISETP.GE.U32.AND P2, PT, R48, c[0x0][0x19c], PT ;
 Instr 325 @ 0x1450 (5200) - LOP3.LUT R51, RZ, R51, RZ, 0x33, !PT ;
 Instr 326 @ 0x1460 (5216) - IADD3 R48, R3, UR7, RZ ;
 Instr 327 @ 0x1470 (5232) - SEL R62, R54, 0xffffffff, P1 ;
 Instr 328 @ 0x1480 (5248) - ISETP.GE.U32.AND P1, PT, R47, c[0x0][0x19c], PT ;
 Instr 329 @ 0x1490 (5264) - IADD3 R47, R38, UR6, RZ ;
 Instr 330 @ 0x14a0 (5280) - SEL R52, R51, 0xffffffff, P2 ;
 Instr 331 @ 0x14b0 (5296) - ISETP.GE.U32.AND P2, PT, R48, c[0x0][0x19c], PT ;
 Instr 332 @ 0x14c0 (5312) - IADD3 R48, R41, UR6, RZ ;
 Instr 333 @ 0x14d0 (5328) - SEL R53, R51, 0xffffffff, P6 ;
 Instr 334 @ 0x14e0 (5344) - ISETP.GE.U32.AND P6, PT, R47, c[0x0][0x19c], PT ;
 Instr 335 @ 0x14f0 (5360) - SHF.L.U32 R49, R46, UR9, RZ ;
 Instr 336 @ 0x1500 (5376) - IADD3 R47, R3, UR6, RZ ;
 Instr 337 @ 0x1510 (5392) - SEL R61, R54, 0xffffffff, P0 ;
 Instr 338 @ 0x1520 (5408) - ISETP.GE.U32.AND P0, PT, R48, c[0x0][0x19c], PT ;
 Instr 339 @ 0x1530 (5424) - SEL R60, R54, 0xffffffff, P5 ;
 Instr 340 @ 0x1540 (5440) - IADD3 R48, R44, UR5, RZ ;
 Instr 341 @ 0x1550 (5456) - LOP3.LUT R49, RZ, R49, RZ, 0x33, !PT ;
 Instr 342 @ 0x1560 (5472) - ISETP.GE.U32.AND P5, PT, R47, c[0x0][0x19c], PT ;
 Instr 343 @ 0x1570 (5488) - IADD3 R47, R41, UR5, RZ ;
 Instr 344 @ 0x1580 (5504) - SEL R54, R54, 0xffffffff, P4 ;
 Instr 345 @ 0x1590 (5520) - LOP3.LUT R53, R53, R88, R61, 0x80, !PT ;
 Instr 346 @ 0x15a0 (5536) - ISETP.GE.U32.AND P4, PT, R48, c[0x0][0x19c], PT ;
 Instr 347 @ 0x15b0 (5552) - SEL R50, R51, 0xffffffff, P3 ;
 Instr 348 @ 0x15c0 (5568) - SEL R88, R49, 0xffffffff, P0 ;
 Instr 349 @ 0x15d0 (5584) - IADD3 R48, R38, UR5, RZ ;
 Instr 350 @ 0x15e0 (5600) - SEL R51, R51, 0xffffffff, P2 ;
 Instr 351 @ 0x15f0 (5616) - ISETP.NE.AND P0, PT, R63, RZ, PT ;
 Instr 352 @ 0x1600 (5632) - ISETP.GE.U32.AND P3, PT, R47, c[0x0][0x19c], PT ;
 Instr 353 @ 0x1610 (5648) - SHF.L.U32 R46, R46, UR4, RZ ;
 Instr 354 @ 0x1620 (5664) - IADD3 R47, R3, UR5, RZ ;
 Instr 355 @ 0x1630 (5680) - ISETP.GE.U32.AND P2, PT, R48, c[0x0][0x19c], PT ;
 Instr 356 @ 0x1640 (5696) - LOP3.LUT R51, R51, R86, R54, 0x80, !PT ;
 Instr 357 @ 0x1650 (5712) - SEL R48, R49, 0xffffffff, P1 ;
 Instr 358 @ 0x1660 (5728) - LOP3.LUT R86, RZ, R46, RZ, 0x33, !PT ;
 Instr 359 @ 0x1670 (5744) - ISETP.GE.U32.AND P1, PT, R47, c[0x0][0x19c], PT ;
 Instr 360 @ 0x1680 (5760) - LOP3.LUT R89, R52, R89, R62, 0x80, !PT ;
 Instr 361 @ 0x1690 (5776) - LOP3.LUT R50, R50, R87, R60, 0x80, !PT ;
 Instr 362 @ 0x16a0 (5792) - SEL R87, R49, 0xffffffff, P6 ;
 Instr 363 @ 0x16b0 (5808) - SEL R52, R86.reuse, 0xffffffff, P4 ;
 Instr 364 @ 0x16c0 (5824) - SEL R47, R86.reuse, 0xffffffff, P3 ;
 Instr 365 @ 0x16d0 (5840) - SEL R46, R86.reuse, 0xffffffff, P2 ;
 Instr 366 @ 0x16e0 (5856) - SEL R49, R49, 0xffffffff, P5 ;
 Instr 367 @ 0x16f0 (5872) - SEL R86, R86, 0xffffffff, P1 ;
 Instr 368 @ 0x1700 (5888) - LOP3.LUT R89, R52, R89, R48, 0x80, !PT ;
 Instr 369 @ 0x1710 (5904) - LOP3.LUT R88, R47, R53, R88, 0x80, !PT ;
 Instr 370 @ 0x1720 (5920) - LOP3.LUT R87, R46, R50, R87, 0x80, !PT ;
 Instr 371 @ 0x1730 (5936) - LOP3.LUT R86, R86, R51, R49, 0x80, !PT ;
 Instr 372 @ 0x1740 (5952) - @P0 BRA 0x1260 ;
Basic block id 12 - num instructions 2
 Instr 373 @ 0x1750 (5968) - LOP3.LUT P0, RZ, R64, 0x3, RZ, 0xc0, !PT ;
 Instr 374 @ 0x1760 (5984) - @!P0 BRA 0x1a00 ;
Basic block id 13 - num instructions 18
 Instr 375 @ 0x1770 (6000) - ULDC UR5, c[0x0][0x3a4] ;
 Instr 376 @ 0x1780 (6016) - LOP3.LUT R64, R64, 0x3, RZ, 0xc0, !PT ;
 Instr 377 @ 0x1790 (6032) - UIMAD UR5, UR8, UR5, UR11 ;
 Instr 378 @ 0x17a0 (6048) - ULDC UR4, c[0x0][0x280] ;
 Instr 379 @ 0x17b0 (6064) - IADD3 R64, -R64, RZ, RZ ;
 Instr 380 @ 0x17c0 (6080) - UIMAD UR4, UR5, UR4, URZ ;
 Instr 381 @ 0x17d0 (6096) - IMAD.U32 R3, RZ, RZ, UR4 ;
 Instr 382 @ 0x17e0 (6112) - ULDC UR4, c[0x0][0x61c] ;
 Instr 383 @ 0x17f0 (6128) - UIMAD UR4, UR11, UR4, URZ ;
 Instr 384 @ 0x1800 (6144) - IMAD R67, R67, c[0x0][0x274], R3.reuse ;
 Instr 385 @ 0x1810 (6160) - IMAD R70, R70, c[0x0][0x274], R3.reuse ;
 Instr 386 @ 0x1820 (6176) - IMAD R74, R74, c[0x0][0x274], R3.reuse ;
 Instr 387 @ 0x1830 (6192) - IADD3 R67, R67, -c[0x0][0x25c], RZ ;
 Instr 388 @ 0x1840 (6208) - IMAD R3, R75, c[0x0][0x274], R3 ;
 Instr 389 @ 0x1850 (6224) - IADD3 R70, R70, -c[0x0][0x25c], RZ ;
 Instr 390 @ 0x1860 (6240) - IMAD.U32 R38, RZ, RZ, UR4 ;
 Instr 391 @ 0x1870 (6256) - IADD3 R74, R74, -c[0x0][0x25c], RZ ;
 Instr 392 @ 0x1880 (6272) - IADD3 R46, R3, -c[0x0][0x25c], RZ ;
Basic block id 14 - num instructions 23
 Instr 393 @ 0x1890 (6288) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x620] ;
 Instr 394 @ 0x18a0 (6304) - ISETP.GE.U32.AND P0, PT, R46, c[0x0][0x19c], PT ;
 Instr 395 @ 0x18b0 (6320) - ISETP.GE.U32.AND P2, PT, R74, c[0x0][0x19c], PT ;
 Instr 396 @ 0x18c0 (6336) - SHF.L.U32 R3, R3, R38, RZ ;
 Instr 397 @ 0x18d0 (6352) - ISETP.GE.U32.AND P1, PT, R70, c[0x0][0x19c], PT ;
 Instr 398 @ 0x18e0 (6368) - LOP3.LUT R3, RZ, R3, RZ, 0x33, !PT ;
 Instr 399 @ 0x18f0 (6384) - IADD3 R64, R64, 0x1, RZ ;
 Instr 400 @ 0x1900 (6400) - SEL R44, R3, 0xffffffff, P0 ;
 Instr 401 @ 0x1910 (6416) - ISETP.GE.U32.AND P0, PT, R67, c[0x0][0x19c], PT ;
 Instr 402 @ 0x1920 (6432) - LOP3.LUT R89, R89, R44, RZ, 0xc0, !PT ;
 Instr 403 @ 0x1930 (6448) - SEL R41, R3.reuse, 0xffffffff, P2 ;
 Instr 404 @ 0x1940 (6464) - SEL R44, R3.reuse, 0xffffffff, P1 ;
 Instr 405 @ 0x1950 (6480) - SEL R3, R3, 0xffffffff, P0 ;
 Instr 406 @ 0x1960 (6496) - ISETP.NE.AND P0, PT, R64, RZ, PT ;
 Instr 407 @ 0x1970 (6512) - LOP3.LUT R88, R88, R41, RZ, 0xc0, !PT ;
 Instr 408 @ 0x1980 (6528) - LOP3.LUT R87, R87, R44, RZ, 0xc0, !PT ;
 Instr 409 @ 0x1990 (6544) - LOP3.LUT R86, R86, R3, RZ, 0xc0, !PT ;
 Instr 410 @ 0x19a0 (6560) - IADD3 R67, R67, c[0x0][0x280], RZ ;
 Instr 411 @ 0x19b0 (6576) - IADD3 R70, R70, c[0x0][0x280], RZ ;
 Instr 412 @ 0x19c0 (6592) - IADD3 R74, R74, c[0x0][0x280], RZ ;
 Instr 413 @ 0x19d0 (6608) - IADD3 R46, R46, c[0x0][0x280], RZ ;
 Instr 414 @ 0x19e0 (6624) - IADD3 R38, R38, c[0x0][0x61c], RZ ;
 Instr 415 @ 0x19f0 (6640) - @P0 BRA 0x1890 ;
Basic block id 15 - num instructions 3
 Instr 416 @ 0x1a00 (6656) - MOV R3, c[0x0][0x1d0] ;
 Instr 417 @ 0x1a10 (6672) - ISETP.GE.AND P0, PT, R3, 0x2, PT ;
 Instr 418 @ 0x1a20 (6688) - @!P0 BRA 0x2230 ;
Basic block id 16 - num instructions 6
 Instr 419 @ 0x1a30 (6704) - IADD3 R38, R3.reuse, -0x2, RZ ;
 Instr 420 @ 0x1a40 (6720) - UMOV UR11, 0x1 ;
 Instr 421 @ 0x1a50 (6736) - IADD3 R3, R3, -0x1, RZ ;
 Instr 422 @ 0x1a60 (6752) - ISETP.GE.U32.AND P0, PT, R38, 0x3, PT ;
 Instr 423 @ 0x1a70 (6768) - LOP3.LUT R60, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 424 @ 0x1a80 (6784) - @!P0 BRA 0x1f90 ;
Basic block id 17 - num instructions 1
 Instr 425 @ 0x1a90 (6800) - IADD3 R54, R3, -R60, RZ ;
Basic block id 18 - num instructions 79
 Instr 426 @ 0x1aa0 (6816) - IMAD.U32 R3, RZ, RZ, UR11 ;
 Instr 427 @ 0x1ab0 (6832) - ULDC UR5, c[0x0][0x284] ;
 Instr 428 @ 0x1ac0 (6848) - IADD3 R54, R54, -0x4, RZ ;
 Instr 429 @ 0x1ad0 (6864) - UIMAD UR7, UR11, UR5, UR5 ;
 Instr 430 @ 0x1ae0 (6880) - IMAD R44, R3.reuse, c[0x0][0x284], R43 ;
 Instr 431 @ 0x1af0 (6896) - ULDC UR4, c[0x0][0x1d4] ;
 Instr 432 @ 0x1b00 (6912) - IMAD R41, R3.reuse, c[0x0][0x284], R40 ;
 Instr 433 @ 0x1b10 (6928) - UIMAD UR10, UR11, UR4, URZ ;
 Instr 434 @ 0x1b20 (6944) - IMAD R38, R3.reuse, c[0x0][0x284], R37 ;
 Instr 435 @ 0x1b30 (6960) - UIADD3 UR6, UR7, UR5, URZ ;
 Instr 436 @ 0x1b40 (6976) - IMAD R3, R3, c[0x0][0x284], R2 ;
 Instr 437 @ 0x1b50 (6992) - UIADD3 UR9, UR10, UR4, URZ ;
 Instr 438 @ 0x1b60 (7008) - ISETP.GE.U32.AND P0, PT, R41, c[0x0][0x1a0], PT ;
 Instr 439 @ 0x1b70 (7024) - UIADD3 UR5, UR6, UR5, URZ ;
 Instr 440 @ 0x1b80 (7040) - ISETP.GE.U32.AND P5, PT, R38, c[0x0][0x1a0], PT ;
 Instr 441 @ 0x1b90 (7056) - UIADD3 UR11, UR11, 0x4, URZ ;
 Instr 442 @ 0x1ba0 (7072) - ISETP.GE.U32.AND P4, PT, R3, c[0x0][0x1a0], PT ;
 Instr 443 @ 0x1bb0 (7088) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x624] ;
 Instr 444 @ 0x1bc0 (7104) - IADD3 R38, R40, UR7, RZ ;
 Instr 445 @ 0x1bd0 (7120) - IADD3 R41, R43, UR7, RZ ;
 Instr 446 @ 0x1be0 (7136) - ISETP.GE.U32.AND P6, PT, R38, c[0x0][0x1a0], PT ;
 Instr 447 @ 0x1bf0 (7152) - IADD3 R38, R37, UR7, RZ ;
 Instr 448 @ 0x1c00 (7168) - SHF.L.U32 R50, R3.reuse, UR10, RZ ;
 Instr 449 @ 0x1c10 (7184) - SHF.L.U32 R47, R3, UR9, RZ ;
 Instr 450 @ 0x1c20 (7200) - UIADD3 UR9, UR9, UR4, URZ ;
 Instr 451 @ 0x1c30 (7216) - ISETP.GE.U32.AND P1, PT, R44, c[0x0][0x1a0], PT ;
 Instr 452 @ 0x1c40 (7232) - ISETP.GE.U32.AND P3, PT, R38, c[0x0][0x1a0], PT ;
 Instr 453 @ 0x1c50 (7248) - UIADD3 UR4, UR9, UR4, URZ ;
 Instr 454 @ 0x1c60 (7264) - LOP3.LUT R50, RZ, R50, RZ, 0x33, !PT ;
 Instr 455 @ 0x1c70 (7280) - IADD3 R38, R43, UR6, RZ ;
 Instr 456 @ 0x1c80 (7296) - ISETP.GE.U32.AND P2, PT, R41, c[0x0][0x1a0], PT ;
 Instr 457 @ 0x1c90 (7312) - LOP3.LUT R47, RZ, R47, RZ, 0x33, !PT ;
 Instr 458 @ 0x1ca0 (7328) - IADD3 R41, R2, UR7, RZ ;
 Instr 459 @ 0x1cb0 (7344) - SEL R53, R50, 0xffffffff, P1 ;
 Instr 460 @ 0x1cc0 (7360) - ISETP.GE.U32.AND P1, PT, R38, c[0x0][0x1a0], PT ;
 Instr 461 @ 0x1cd0 (7376) - IADD3 R38, R37, UR6, RZ ;
 Instr 462 @ 0x1ce0 (7392) - SEL R48, R47, 0xffffffff, P2 ;
 Instr 463 @ 0x1cf0 (7408) - ISETP.GE.U32.AND P2, PT, R41, c[0x0][0x1a0], PT ;
 Instr 464 @ 0x1d00 (7424) - IADD3 R41, R40, UR6, RZ ;
 Instr 465 @ 0x1d10 (7440) - SEL R49, R47, 0xffffffff, P6 ;
 Instr 466 @ 0x1d20 (7456) - ISETP.GE.U32.AND P6, PT, R38, c[0x0][0x1a0], PT ;
 Instr 467 @ 0x1d30 (7472) - SHF.L.U32 R44, R3, UR9, RZ ;
 Instr 468 @ 0x1d40 (7488) - IADD3 R38, R2, UR6, RZ ;
 Instr 469 @ 0x1d50 (7504) - SEL R52, R50, 0xffffffff, P0 ;
 Instr 470 @ 0x1d60 (7520) - ISETP.GE.U32.AND P0, PT, R41, c[0x0][0x1a0], PT ;
 Instr 471 @ 0x1d70 (7536) - SEL R51, R50, 0xffffffff, P5 ;
 Instr 472 @ 0x1d80 (7552) - IADD3 R41, R43, UR5, RZ ;
 Instr 473 @ 0x1d90 (7568) - LOP3.LUT R44, RZ, R44, RZ, 0x33, !PT ;
 Instr 474 @ 0x1da0 (7584) - ISETP.GE.U32.AND P5, PT, R38, c[0x0][0x1a0], PT ;
 Instr 475 @ 0x1db0 (7600) - IADD3 R38, R40, UR5, RZ ;
 Instr 476 @ 0x1dc0 (7616) - SEL R50, R50, 0xffffffff, P4 ;
 Instr 477 @ 0x1dd0 (7632) - LOP3.LUT R49, R49, R88, R52, 0x80, !PT ;
 Instr 478 @ 0x1de0 (7648) - ISETP.GE.U32.AND P4, PT, R41, c[0x0][0x1a0], PT ;
 Instr 479 @ 0x1df0 (7664) - SEL R46, R47, 0xffffffff, P3 ;
 Instr 480 @ 0x1e00 (7680) - SEL R88, R44, 0xffffffff, P0 ;
 Instr 481 @ 0x1e10 (7696) - IADD3 R41, R37, UR5, RZ ;
 Instr 482 @ 0x1e20 (7712) - SEL R47, R47, 0xffffffff, P2 ;
 Instr 483 @ 0x1e30 (7728) - ISETP.NE.AND P0, PT, R54, RZ, PT ;
 Instr 484 @ 0x1e40 (7744) - ISETP.GE.U32.AND P3, PT, R38, c[0x0][0x1a0], PT ;
 Instr 485 @ 0x1e50 (7760) - SHF.L.U32 R3, R3, UR4, RZ ;
 Instr 486 @ 0x1e60 (7776) - IADD3 R38, R2, UR5, RZ ;
 Instr 487 @ 0x1e70 (7792) - ISETP.GE.U32.AND P2, PT, R41, c[0x0][0x1a0], PT ;
 Instr 488 @ 0x1e80 (7808) - LOP3.LUT R47, R47, R86, R50, 0x80, !PT ;
 Instr 489 @ 0x1e90 (7824) - SEL R41, R44, 0xffffffff, P1 ;
 Instr 490 @ 0x1ea0 (7840) - LOP3.LUT R86, RZ, R3, RZ, 0x33, !PT ;
 Instr 491 @ 0x1eb0 (7856) - ISETP.GE.U32.AND P1, PT, R38, c[0x0][0x1a0], PT ;
 Instr 492 @ 0x1ec0 (7872) - LOP3.LUT R48, R48, R89, R53, 0x80, !PT ;
 Instr 493 @ 0x1ed0 (7888) - LOP3.LUT R46, R46, R87, R51, 0x80, !PT ;
 Instr 494 @ 0x1ee0 (7904) - SEL R87, R44, 0xffffffff, P6 ;
 Instr 495 @ 0x1ef0 (7920) - SEL R89, R86.reuse, 0xffffffff, P4 ;
 Instr 496 @ 0x1f00 (7936) - SEL R38, R86.reuse, 0xffffffff, P3 ;
 Instr 497 @ 0x1f10 (7952) - SEL R3, R86, 0xffffffff, P2 ;
 Instr 498 @ 0x1f20 (7968) - SEL R44, R44, 0xffffffff, P5 ;
 Instr 499 @ 0x1f30 (7984) - SEL R86, R86, 0xffffffff, P1 ;
 Instr 500 @ 0x1f40 (8000) - LOP3.LUT R89, R89, R48, R41, 0x80, !PT ;
 Instr 501 @ 0x1f50 (8016) - LOP3.LUT R88, R38, R49, R88, 0x80, !PT ;
 Instr 502 @ 0x1f60 (8032) - LOP3.LUT R87, R3, R46, R87, 0x80, !PT ;
 Instr 503 @ 0x1f70 (8048) - LOP3.LUT R86, R86, R47, R44, 0x80, !PT ;
 Instr 504 @ 0x1f80 (8064) - @P0 BRA 0x1aa0 ;
Basic block id 19 - num instructions 2
 Instr 505 @ 0x1f90 (8080) - ISETP.NE.AND P0, PT, R60, RZ, PT ;
 Instr 506 @ 0x1fa0 (8096) - @!P0 BRA 0x2230 ;
Basic block id 20 - num instructions 17
 Instr 507 @ 0x1fb0 (8112) - ULDC UR5, c[0x0][0x3a8] ;
 Instr 508 @ 0x1fc0 (8128) - IADD3 R60, -R60, RZ, RZ ;
 Instr 509 @ 0x1fd0 (8144) - UIMAD UR5, UR8, UR5, UR11 ;
 Instr 510 @ 0x1fe0 (8160) - ULDC UR4, c[0x0][0x284] ;
 Instr 511 @ 0x1ff0 (8176) - UIMAD UR4, UR5, UR4, URZ ;
 Instr 512 @ 0x2000 (8192) - MOV R2, UR4 ;
 Instr 513 @ 0x2010 (8208) - ULDC UR4, c[0x0][0x1d4] ;
 Instr 514 @ 0x2020 (8224) - UIMAD UR4, UR11, UR4, URZ ;
 Instr 515 @ 0x2030 (8240) - IMAD R66, R66, c[0x0][0x278], R2.reuse ;
 Instr 516 @ 0x2040 (8256) - IMAD R69, R69, c[0x0][0x278], R2.reuse ;
 Instr 517 @ 0x2050 (8272) - IMAD R71, R71, c[0x0][0x278], R2.reuse ;
 Instr 518 @ 0x2060 (8288) - MOV R3, UR4 ;
 Instr 519 @ 0x2070 (8304) - IMAD R2, R76, c[0x0][0x278], R2 ;
 Instr 520 @ 0x2080 (8320) - IADD3 R66, R66, -c[0x0][0x264], RZ ;
 Instr 521 @ 0x2090 (8336) - IADD3 R69, R69, -c[0x0][0x264], RZ ;
 Instr 522 @ 0x20a0 (8352) - IADD3 R71, R71, -c[0x0][0x264], RZ ;
 Instr 523 @ 0x20b0 (8368) - IADD3 R38, R2, -c[0x0][0x264], RZ ;
Basic block id 21 - num instructions 23
 Instr 524 @ 0x20c0 (8384) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x624] ;
 Instr 525 @ 0x20d0 (8400) - ISETP.GE.U32.AND P0, PT, R38, c[0x0][0x1a0], PT ;
 Instr 526 @ 0x20e0 (8416) - ISETP.GE.U32.AND P2, PT, R71, c[0x0][0x1a0], PT ;
 Instr 527 @ 0x20f0 (8432) - SHF.L.U32 R2, R2, R3, RZ ;
 Instr 528 @ 0x2100 (8448) - ISETP.GE.U32.AND P1, PT, R69, c[0x0][0x1a0], PT ;
 Instr 529 @ 0x2110 (8464) - LOP3.LUT R37, RZ, R2, RZ, 0x33, !PT ;
 Instr 530 @ 0x2120 (8480) - IADD3 R60, R60, 0x1, RZ ;
 Instr 531 @ 0x2130 (8496) - SEL R2, R37, 0xffffffff, P0 ;
 Instr 532 @ 0x2140 (8512) - ISETP.GE.U32.AND P0, PT, R66, c[0x0][0x1a0], PT ;
 Instr 533 @ 0x2150 (8528) - LOP3.LUT R89, R89, R2, RZ, 0xc0, !PT ;
 Instr 534 @ 0x2160 (8544) - SEL R41, R37, 0xffffffff, P2 ;
 Instr 535 @ 0x2170 (8560) - SEL R2, R37.reuse, 0xffffffff, P1 ;
 Instr 536 @ 0x2180 (8576) - SEL R37, R37, 0xffffffff, P0 ;
 Instr 537 @ 0x2190 (8592) - ISETP.NE.AND P0, PT, R60, RZ, PT ;
 Instr 538 @ 0x21a0 (8608) - LOP3.LUT R88, R88, R41, RZ, 0xc0, !PT ;
 Instr 539 @ 0x21b0 (8624) - LOP3.LUT R87, R87, R2, RZ, 0xc0, !PT ;
 Instr 540 @ 0x21c0 (8640) - LOP3.LUT R86, R86, R37, RZ, 0xc0, !PT ;
 Instr 541 @ 0x21d0 (8656) - IADD3 R66, R66, c[0x0][0x284], RZ ;
 Instr 542 @ 0x21e0 (8672) - IADD3 R69, R69, c[0x0][0x284], RZ ;
 Instr 543 @ 0x21f0 (8688) - IADD3 R71, R71, c[0x0][0x284], RZ ;
 Instr 544 @ 0x2200 (8704) - IADD3 R38, R38, c[0x0][0x284], RZ ;
 Instr 545 @ 0x2210 (8720) - IADD3 R3, R3, c[0x0][0x1d4], RZ ;
 Instr 546 @ 0x2220 (8736) - @P0 BRA 0x20c0 ;
Basic block id 22 - num instructions 3
 Instr 547 @ 0x2230 (8752) - MOV R2, c[0x0][0x1d4] ;
 Instr 548 @ 0x2240 (8768) - ISETP.GE.AND P0, PT, R2, 0x2, PT ;
 Instr 549 @ 0x2250 (8784) - @!P0 BRA 0x29c0 ;
Basic block id 23 - num instructions 6
 Instr 550 @ 0x2260 (8800) - IADD3 R3, R2.reuse, -0x2, RZ ;
 Instr 551 @ 0x2270 (8816) - IMAD.MOV.U32 R50, RZ, RZ, 0x1 ;
 Instr 552 @ 0x2280 (8832) - IADD3 R2, R2, -0x1, RZ ;
 Instr 553 @ 0x2290 (8848) - ISETP.GE.U32.AND P0, PT, R3, 0x3, PT ;
 Instr 554 @ 0x22a0 (8864) - LOP3.LUT R51, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 555 @ 0x22b0 (8880) - @!P0 BRA 0x2790 ;
Basic block id 24 - num instructions 1
 Instr 556 @ 0x22c0 (8896) - IADD3 R49, R2, -R51, RZ ;
Basic block id 25 - num instructions 76
 Instr 557 @ 0x22d0 (8912) - IMAD R3, R50.reuse, c[0x0][0x288], R42 ;
 Instr 558 @ 0x22e0 (8928) - IADD3 R38, R50.reuse, 0x1, RZ ;
 Instr 559 @ 0x22f0 (8944) - IMAD R37, R50.reuse, c[0x0][0x288], R45 ;
 Instr 560 @ 0x2300 (8960) - IADD3 R40, R50.reuse, 0x2, RZ ;
 Instr 561 @ 0x2310 (8976) - IMAD R41, R50.reuse, c[0x0][0x288], R36 ;
 Instr 562 @ 0x2320 (8992) - ISETP.GE.U32.AND P2, PT, R3, c[0x0][0x1a4], PT ;
 Instr 563 @ 0x2330 (9008) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x288] ;
 Instr 564 @ 0x2340 (9024) - ISETP.GE.U32.AND P4, PT, R37, c[0x0][0x1a4], PT ;
 Instr 565 @ 0x2350 (9040) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x628] ;
 Instr 566 @ 0x2360 (9056) - ISETP.GE.U32.AND P6, PT, R41, c[0x0][0x1a4], PT ;
 Instr 567 @ 0x2370 (9072) - IMAD R3, R50.reuse, R3, c[0x0][0x288] ;
 Instr 568 @ 0x2380 (9088) - IADD3 R49, R49, -0x4, RZ ;
 Instr 569 @ 0x2390 (9104) - IMAD R2, R50, c[0x0][0x288], R39 ;
 Instr 570 @ 0x23a0 (9120) - SHF.L.U32 R43, R37, R38, RZ ;
 Instr 571 @ 0x23b0 (9136) - IMAD.IADD R38, R39, 0x1, R3.reuse ;
 Instr 572 @ 0x23c0 (9152) - SHF.L.U32 R48, R37, R50, RZ ;
 Instr 573 @ 0x23d0 (9168) - IMAD.IADD R44, R45, 0x1, R3.reuse ;
 Instr 574 @ 0x23e0 (9184) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x1a4], PT ;
 Instr 575 @ 0x23f0 (9200) - IMAD.IADD R41, R42, 0x1, R3 ;
 Instr 576 @ 0x2400 (9216) - ISETP.GE.U32.AND P5, PT, R38, c[0x0][0x1a4], PT ;
 Instr 577 @ 0x2410 (9232) - IADD3 R38, R3, c[0x0][0x288], RZ ;
 Instr 578 @ 0x2420 (9248) - IMAD.IADD R3, R36, 0x1, R3 ;
 Instr 579 @ 0x2430 (9264) - LOP3.LUT R48, RZ, R48, RZ, 0x33, !PT ;
 Instr 580 @ 0x2440 (9280) - IADD3 R2, R50, 0x3, RZ ;
 Instr 581 @ 0x2450 (9296) - SEL R47, R48, 0xffffffff, P4 ;
 Instr 582 @ 0x2460 (9312) - SHF.L.U32 R40, R37.reuse, R40, RZ ;
 Instr 583 @ 0x2470 (9328) - SHF.L.U32 R2, R37, R2, RZ ;
 Instr 584 @ 0x2480 (9344) - IMAD.IADD R37, R45, 0x1, R38.reuse ;
 Instr 585 @ 0x2490 (9360) - ISETP.GE.U32.AND P4, PT, R3, c[0x0][0x1a4], PT ;
 Instr 586 @ 0x24a0 (9376) - IMAD.IADD R3, R42, 0x1, R38 ;
 Instr 587 @ 0x24b0 (9392) - ISETP.GE.U32.AND P3, PT, R44, c[0x0][0x1a4], PT ;
 Instr 588 @ 0x24c0 (9408) - LOP3.LUT R43, RZ, R43, RZ, 0x33, !PT ;
 Instr 589 @ 0x24d0 (9424) - SEL R46, R48, 0xffffffff, P2 ;
 Instr 590 @ 0x24e0 (9440) - SEL R44, R43, 0xffffffff, P3 ;
 Instr 591 @ 0x24f0 (9456) - ISETP.GE.U32.AND P3, PT, R37, c[0x0][0x1a4], PT ;
 Instr 592 @ 0x2500 (9472) - IMAD.IADD R37, R39, 0x1, R38.reuse ;
 Instr 593 @ 0x2510 (9488) - ISETP.GE.U32.AND P2, PT, R3, c[0x0][0x1a4], PT ;
 Instr 594 @ 0x2520 (9504) - IMAD.IADD R3, R36, 0x1, R38 ;
 Instr 595 @ 0x2530 (9520) - ISETP.GE.U32.AND P1, PT, R41, c[0x0][0x1a4], PT ;
 Instr 596 @ 0x2540 (9536) - IADD3 R38, R38, c[0x0][0x288], RZ ;
 Instr 597 @ 0x2550 (9552) - SEL R41, R43, 0xffffffff, P1 ;
 Instr 598 @ 0x2560 (9568) - SEL R52, R48, 0xffffffff, P0 ;
 Instr 599 @ 0x2570 (9584) - ISETP.GE.U32.AND P1, PT, R37, c[0x0][0x1a4], PT ;
 Instr 600 @ 0x2580 (9600) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x1a4], PT ;
 Instr 601 @ 0x2590 (9616) - LOP3.LUT R44, R44, R89, R47, 0x80, !PT ;
 Instr 602 @ 0x25a0 (9632) - SEL R37, R48, 0xffffffff, P6 ;
 Instr 603 @ 0x25b0 (9648) - SEL R3, R43.reuse, 0xffffffff, P5 ;
 Instr 604 @ 0x25c0 (9664) - SEL R47, R43, 0xffffffff, P4 ;
 Instr 605 @ 0x25d0 (9680) - IMAD.IADD R43, R45, 0x1, R38 ;
 Instr 606 @ 0x25e0 (9696) - LOP3.LUT R41, R41, R88, R46, 0x80, !PT ;
 Instr 607 @ 0x25f0 (9712) - LOP3.LUT R37, R47, R86, R37, 0x80, !PT ;
 Instr 608 @ 0x2600 (9728) - LOP3.LUT R86, RZ, R2, RZ, 0x33, !PT ;
 Instr 609 @ 0x2610 (9744) - IMAD.IADD R2, R39, 0x1, R38 ;
 Instr 610 @ 0x2620 (9760) - ISETP.GE.U32.AND P4, PT, R43, c[0x0][0x1a4], PT ;
 Instr 611 @ 0x2630 (9776) - LOP3.LUT R43, RZ, R40, RZ, 0x33, !PT ;
 Instr 612 @ 0x2640 (9792) - IMAD.IADD R40, R42, 0x1, R38.reuse ;
 Instr 613 @ 0x2650 (9808) - SEL R89, R86, 0xffffffff, P4 ;
 Instr 614 @ 0x2660 (9824) - IMAD.IADD R38, R36, 0x1, R38 ;
 Instr 615 @ 0x2670 (9840) - ISETP.GE.U32.AND P4, PT, R2, c[0x0][0x1a4], PT ;
 Instr 616 @ 0x2680 (9856) - SEL R2, R43, 0xffffffff, P0 ;
 Instr 617 @ 0x2690 (9872) - ISETP.NE.AND P0, PT, R49, RZ, PT ;
 Instr 618 @ 0x26a0 (9888) - SEL R46, R43, 0xffffffff, P3 ;
 Instr 619 @ 0x26b0 (9904) - ISETP.GE.U32.AND P5, PT, R40, c[0x0][0x1a4], PT ;
 Instr 620 @ 0x26c0 (9920) - ISETP.GE.U32.AND P3, PT, R38, c[0x0][0x1a4], PT ;
 Instr 621 @ 0x26d0 (9936) - LOP3.LUT R3, R3, R87, R52, 0x80, !PT ;
 Instr 622 @ 0x26e0 (9952) - SEL R88, R86.reuse, 0xffffffff, P5 ;
 Instr 623 @ 0x26f0 (9968) - SEL R38, R86, 0xffffffff, P4 ;
 Instr 624 @ 0x2700 (9984) - SEL R40, R43, 0xffffffff, P2 ;
 Instr 625 @ 0x2710 (10000) - SEL R87, R43, 0xffffffff, P1 ;
 Instr 626 @ 0x2720 (10016) - SEL R86, R86, 0xffffffff, P3 ;
 Instr 627 @ 0x2730 (10032) - LOP3.LUT R89, R89, R44, R46, 0x80, !PT ;
 Instr 628 @ 0x2740 (10048) - LOP3.LUT R88, R88, R41, R40, 0x80, !PT ;
 Instr 629 @ 0x2750 (10064) - LOP3.LUT R87, R38, R3, R87, 0x80, !PT ;
 Instr 630 @ 0x2760 (10080) - LOP3.LUT R86, R86, R37, R2, 0x80, !PT ;
 Instr 631 @ 0x2770 (10096) - IADD3 R50, R50, 0x4, RZ ;
 Instr 632 @ 0x2780 (10112) - @P0 BRA 0x22d0 ;
Basic block id 26 - num instructions 2
 Instr 633 @ 0x2790 (10128) - ISETP.NE.AND P0, PT, R51, RZ, PT ;
 Instr 634 @ 0x27a0 (10144) - @!P0 BRA 0x29c0 ;
Basic block id 27 - num instructions 10
 Instr 635 @ 0x27b0 (10160) - IMAD R2, R50, c[0x0][0x288], RZ ;
 Instr 636 @ 0x27c0 (10176) - IADD3 R51, -R51, RZ, RZ ;
 Instr 637 @ 0x27d0 (10192) - IMAD R65, R65, c[0x0][0x27c], R2.reuse ;
 Instr 638 @ 0x27e0 (10208) - IMAD R68, R68, c[0x0][0x27c], R2.reuse ;
 Instr 639 @ 0x27f0 (10224) - IMAD R72, R72, c[0x0][0x27c], R2.reuse ;
 Instr 640 @ 0x2800 (10240) - IADD3 R65, R65, -c[0x0][0x26c], RZ ;
 Instr 641 @ 0x2810 (10256) - IMAD R2, R73, c[0x0][0x27c], R2 ;
 Instr 642 @ 0x2820 (10272) - IADD3 R68, R68, -c[0x0][0x26c], RZ ;
 Instr 643 @ 0x2830 (10288) - IADD3 R72, R72, -c[0x0][0x26c], RZ ;
 Instr 644 @ 0x2840 (10304) - IADD3 R37, R2, -c[0x0][0x26c], RZ ;
Basic block id 28 - num instructions 23
 Instr 645 @ 0x2850 (10320) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x628] ;
 Instr 646 @ 0x2860 (10336) - ISETP.GE.U32.AND P0, PT, R37, c[0x0][0x1a4], PT ;
 Instr 647 @ 0x2870 (10352) - IADD3 R51, R51, 0x1, RZ ;
 Instr 648 @ 0x2880 (10368) - SHF.L.U32 R2, R3, R50, RZ ;
 Instr 649 @ 0x2890 (10384) - ISETP.GE.U32.AND P2, PT, R72, c[0x0][0x1a4], PT ;
 Instr 650 @ 0x28a0 (10400) - LOP3.LUT R2, RZ, R2, RZ, 0x33, !PT ;
 Instr 651 @ 0x28b0 (10416) - ISETP.GE.U32.AND P1, PT, R68, c[0x0][0x1a4], PT ;
 Instr 652 @ 0x28c0 (10432) - SEL R36, R2, 0xffffffff, P0 ;
 Instr 653 @ 0x28d0 (10448) - ISETP.GE.U32.AND P0, PT, R65, c[0x0][0x1a4], PT ;
 Instr 654 @ 0x28e0 (10464) - LOP3.LUT R89, R89, R36, RZ, 0xc0, !PT ;
 Instr 655 @ 0x28f0 (10480) - SEL R39, R2.reuse, 0xffffffff, P0 ;
 Instr 656 @ 0x2900 (10496) - ISETP.NE.AND P0, PT, R51, RZ, PT ;
 Instr 657 @ 0x2910 (10512) - SEL R3, R2.reuse, 0xffffffff, P2 ;
 Instr 658 @ 0x2920 (10528) - SEL R36, R2, 0xffffffff, P1 ;
 Instr 659 @ 0x2930 (10544) - LOP3.LUT R88, R88, R3, RZ, 0xc0, !PT ;
 Instr 660 @ 0x2940 (10560) - LOP3.LUT R87, R87, R36, RZ, 0xc0, !PT ;
 Instr 661 @ 0x2950 (10576) - LOP3.LUT R86, R86, R39, RZ, 0xc0, !PT ;
 Instr 662 @ 0x2960 (10592) - IADD3 R65, R65, c[0x0][0x288], RZ ;
 Instr 663 @ 0x2970 (10608) - IADD3 R68, R68, c[0x0][0x288], RZ ;
 Instr 664 @ 0x2980 (10624) - IADD3 R72, R72, c[0x0][0x288], RZ ;
 Instr 665 @ 0x2990 (10640) - IADD3 R37, R37, c[0x0][0x288], RZ ;
 Instr 666 @ 0x29a0 (10656) - IADD3 R50, R50, 0x1, RZ ;
 Instr 667 @ 0x29b0 (10672) - @P0 BRA 0x2850 ;
Basic block id 29 - num instructions 44
 Instr 668 @ 0x29c0 (10688) - ULDC.U8 UR4, c[0x0][0x28c] ;
 Instr 669 @ 0x29d0 (10704) - S2R R2, SR_CTAID.Z ;
 Instr 670 @ 0x29e0 (10720) - UISETP.NE.AND UP0, UPT, UR4, URZ, UPT ;
 Instr 671 @ 0x29f0 (10736) - LEA.HI.SX32 R36, R77, R57, 0x1d ;
 Instr 672 @ 0x2a00 (10752) - ULDC UR7, c[0x0][0x1bc] ;
 Instr 673 @ 0x2a10 (10768) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x3d4] ;
 Instr 674 @ 0x2a20 (10784) - ULDC UR14, c[0x0][0x618] ;
 Instr 675 @ 0x2a30 (10800) - ISETP.LE.AND P5, PT, RZ, c[0x0][0x630], PT ;
 Instr 676 @ 0x2a40 (10816) - ULDC.64 UR4, c[0x0][0x3b0] ;
 Instr 677 @ 0x2a50 (10832) - IMAD R85, R85, c[0x0][0x1b8], RZ ;
 Instr 678 @ 0x2a60 (10848) - ULDC UR6, c[0x0][0x1c0] ;
 Instr 679 @ 0x2a70 (10864) - SHF.L.U32 R41, R0, 0x3, RZ ;
 Instr 680 @ 0x2a80 (10880) - UIADD3 UR14, UR14, -0x1, URZ ;
 Instr 681 @ 0x2a90 (10896) - ISETP.GE.AND P1, PT, R98, c[0x0][0x1a8], PT ;
 Instr 682 @ 0x2aa0 (10912) - @!UP0 ULOP3.LUT UR10, URZ, UR8, URZ, 0x33, !UPT ;
 Instr 683 @ 0x2ab0 (10928) - IADD3 R0, R36, 0x10, RZ ;
 Instr 684 @ 0x2ac0 (10944) - @UP0 ULDC UR9, c[0x0][0x3b4] ;
 Instr 685 @ 0x2ad0 (10960) - @!UP0 UIADD3 UR7, UR10, UR7, URZ ;
 Instr 686 @ 0x2ae0 (10976) - @UP0 UIADD3 UR9, UR9, UR4, URZ ;
 Instr 687 @ 0x2af0 (10992) - @!UP0 UIADD3 UR6, UR10, UR6, URZ ;
 Instr 688 @ 0x2b00 (11008) - @!UP0 UIMAD UR7, UR7, UR4, URZ ;
 Instr 689 @ 0x2b10 (11024) - IMAD R2, R2, c[0x0][0x3ac], R41 ;
 Instr 690 @ 0x2b20 (11040) - USEL UR4, UR14, URZ, !UP0 ;
 Instr 691 @ 0x2b30 (11056) - @UP0 UIMAD UR8, UR9, UR8, URZ ;
 Instr 692 @ 0x2b40 (11072) - @!UP0 UIMAD UR8, UR6, UR5, UR7 ;
 Instr 693 @ 0x2b50 (11088) - IADD3 R84, R2, c[0x0][0x638], RZ ;
 Instr 694 @ 0x2b60 (11104) - UMOV UR13, URZ ;
 Instr 695 @ 0x2b70 (11120) - UIADD3 UR8, UR4, UR8, URZ ;
 Instr 696 @ 0x2b80 (11136) - ULDC.64 UR6, c[0x0][0x160] ;
 Instr 697 @ 0x2b90 (11152) - ULDC.U8 UR4, c[0x0][0x258] ;
 Instr 698 @ 0x2ba0 (11168) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 699 @ 0x2bb0 (11184) - IMAD.U32 R3, RZ, RZ, UR8 ;
 Instr 700 @ 0x2bc0 (11200) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 701 @ 0x2bd0 (11216) - SEL R37, R37, 0x1, P0 ;
 Instr 702 @ 0x2be0 (11232) - IMAD R39, R36.reuse, c[0x0][0x3d0], R3.reuse ;
 Instr 703 @ 0x2bf0 (11248) - IMAD R3, R36, c[0x0][0x3d4], R3 ;
 Instr 704 @ 0x2c00 (11264) - @!P0 IMAD R39, R3, c[0x0][0x1a8], RZ ;
 Instr 705 @ 0x2c10 (11280) - ISETP.LT.AND P0, PT, R36, R85.reuse, !P1 ;
 Instr 706 @ 0x2c20 (11296) - IMAD.MOV.U32 R3, RZ, RZ, 0x10 ;
 Instr 707 @ 0x2c30 (11312) - ISETP.LT.AND P1, PT, R0, R85, !P1 ;
 Instr 708 @ 0x2c40 (11328) - IMAD R98, R98, R37, R39 ;
 Instr 709 @ 0x2c50 (11344) - P2R R92, PR, RZ, 0x3 ;
 Instr 710 @ 0x2c60 (11360) - IMAD R96, R3, c[0x0][0x3d0], R98 ;
 Instr 711 @ 0x2c70 (11376) - @!P5 BRA 0x3030 ;
Basic block id 30 - num instructions 59
 Instr 712 @ 0x2c80 (11392) - R2P PR, R93, 0xf ;
 Instr 713 @ 0x2c90 (11408) - IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 714 @ 0x2ca0 (11424) - CS2R R60, SRZ ;
 Instr 715 @ 0x2cb0 (11440) - CS2R R62, SRZ ;
 Instr 716 @ 0x2cc0 (11456) - CS2R R64, SRZ ;
 Instr 717 @ 0x2cd0 (11472) - CS2R R66, SRZ ;
 Instr 718 @ 0x2ce0 (11488) - IMAD.WIDE R38, R106, R3.reuse, c[0x0][0x160] ;
 Instr 719 @ 0x2cf0 (11504) - CS2R R44, SRZ ;
 Instr 720 @ 0x2d00 (11520) - CS2R R46, SRZ ;
 Instr 721 @ 0x2d10 (11536) - CS2R R48, SRZ ;
 Instr 722 @ 0x2d20 (11552) - IMAD.WIDE R40, R104, R3, c[0x0][0x160] ;
 Instr 723 @ 0x2d30 (11568) - CS2R R50, SRZ ;
 Instr 724 @ 0x2d40 (11584) - CS2R R36, SRZ ;
 Instr 725 @ 0x2d50 (11600) - CS2R R42, SRZ ;
 Instr 726 @ 0x2d60 (11616) - @P0 LDG.E.128.SYS R60, [R38] ;
 Instr 727 @ 0x2d70 (11632) - UMOV UR5, 0x2 ;
 Instr 728 @ 0x2d80 (11648) - ULDC UR4, c[0x0][0x618] ;
 Instr 729 @ 0x2d90 (11664) - @P1 LDG.E.128.SYS R64, [R40] ;
 Instr 730 @ 0x2da0 (11680) - R2P PR, R92, 0x3 ;
 Instr 731 @ 0x2db0 (11696) - IMAD.WIDE R70, R102, R3.reuse, c[0x0][0x160] ;
 Instr 732 @ 0x2dc0 (11712) - ULDC.64 UR8, c[0x0][0x160] ;
 Instr 733 @ 0x2dd0 (11728) - CS2R R38, SRZ ;
 Instr 734 @ 0x2de0 (11744) - IMAD.WIDE R68, R100, R3.reuse, c[0x0][0x160] ;
 Instr 735 @ 0x2df0 (11760) - ULDC.64 UR6, c[0x0][0x408] ;
 Instr 736 @ 0x2e00 (11776) - CS2R R40, SRZ ;
 Instr 737 @ 0x2e10 (11792) - IMAD.WIDE R52, R98, R3, c[0x0][0x168] ;
 Instr 738 @ 0x2e20 (11808) - @P2 LDG.E.128.SYS R44, [R70] ;
 Instr 739 @ 0x2e30 (11824) - ULDC.64 UR10, c[0x0][0x168] ;
 Instr 740 @ 0x2e40 (11840) - IMAD.WIDE R2, R96, R3, c[0x0][0x168] ;
 Instr 741 @ 0x2e50 (11856) - @P3 LDG.E.128.SYS R48, [R68] ;
 Instr 742 @ 0x2e60 (11872) - @P0 LDG.E.128.SYS R36, [R52] ;
 Instr 743 @ 0x2e70 (11888) - @P1 LDG.E.128.SYS R40, [R2] ;
 Instr 744 @ 0x2e80 (11904) - UISETP.LE.AND UP0, UPT, UR5, UR4, UPT ;
 Instr 745 @ 0x2e90 (11920) - UISETP.NE.AND UP1, UPT, UR12, UR4, UPT ;
 Instr 746 @ 0x2ea0 (11936) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x630] ;
 Instr 747 @ 0x2eb0 (11952) - ULDC.64 UR4, c[0x0][0x508] ;
 Instr 748 @ 0x2ec0 (11968) - PLOP3.LUT P4, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 749 @ 0x2ed0 (11984) - USEL UR13, URZ, 0x1, !UP1 ;
 Instr 750 @ 0x2ee0 (12000) - @UP0 USHF.L.U32 UR15, UR12, UR13, URZ ;
 Instr 751 @ 0x2ef0 (12016) - ISETP.GE.AND P6, PT, R0, c[0x0][0x634], PT ;
 Instr 752 @ 0x2f00 (12032) - @P4 LOP3.LUT P0, RZ, R89, UR15, RZ, 0xc0, !PT ;
 Instr 753 @ 0x2f10 (12048) - @P4 LOP3.LUT P1, RZ, R88, UR15, RZ, 0xc0, !PT ;
 Instr 754 @ 0x2f20 (12064) - @P4 LOP3.LUT P2, RZ, R87, UR15, RZ, 0xc0, !PT ;
 Instr 755 @ 0x2f30 (12080) - @P4 LOP3.LUT P3, RZ, R86, UR15, RZ, 0xc0, !PT ;
 Instr 756 @ 0x2f40 (12096) - @P4 P2R R93, PR, RZ, 0xf ;
 Instr 757 @ 0x2f50 (12112) - @!P6 ISETP.GE.AND P0, PT, R90, R91.reuse, PT ;
 Instr 758 @ 0x2f60 (12128) - @!P6 ISETP.GE.AND P1, PT, R84, R91, PT ;
 Instr 759 @ 0x2f70 (12144) - UIADD3 UR6, UP1, UR8, UR6, URZ ;
 Instr 760 @ 0x2f80 (12160) - @!P6 SEL R93, R93, RZ, !P0 ;
 Instr 761 @ 0x2f90 (12176) - UIADD3 UR4, UP0, UR10, UR4, URZ ;
 Instr 762 @ 0x2fa0 (12192) - @!P6 SEL R92, R92, RZ, !P1 ;
 Instr 763 @ 0x2fb0 (12208) - UIADD3.X UR7, UR9, UR7, URZ, UP1, !UPT ;
 Instr 764 @ 0x2fc0 (12224) - UIADD3.X UR5, UR11, UR5, URZ, UP0, !UPT ;
 Instr 765 @ 0x2fd0 (12240) - STS.128 [R59.X16], R60 ;
 Instr 766 @ 0x2fe0 (12256) - STS.128 [R59.X16+0x800], R64 ;
 Instr 767 @ 0x2ff0 (12272) - STS.128 [R59.X16+0x1000], R44 ;
 Instr 768 @ 0x3000 (12288) - STS.128 [R59.X16+0x1800], R48 ;
 Instr 769 @ 0x3010 (12304) - STS.128 [R59.X16+0x2000], R36 ;
 Instr 770 @ 0x3020 (12320) - STS.128 [R59.X16+0x2800], R40 ;
Basic block id 31 - num instructions 6
 Instr 771 @ 0x3030 (12336) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 772 @ 0x3040 (12352) - LDSM.16.M88.2 R2, [R56] ;
 Instr 773 @ 0x3050 (12368) - LDSM.16.M88.2 R40, [R56+0x1000] ;
 Instr 774 @ 0x3060 (12384) - LDSM.16.M88.2 R36, [R55+0x2000] ;
 Instr 775 @ 0x3070 (12400) - LDSM.16.M88.2 R38, [R55+0x2800] ;
 Instr 776 @ 0x3080 (12416) - @!P5 BRA 0x37f0 ;
Basic block id 32 - num instructions 13
 Instr 777 @ 0x3090 (12432) - LOP3.LUT R54, R55, 0x10, RZ, 0x3c, !PT ;
 Instr 778 @ 0x30a0 (12448) - IMAD.WIDE R106, R106, 0x2, RZ ;
 Instr 779 @ 0x30b0 (12464) - LOP3.LUT R53, R56, 0x10, RZ, 0x3c, !PT ;
 Instr 780 @ 0x30c0 (12480) - LOP3.LUT R52, R56, 0x20, RZ, 0x3c, !PT ;
 Instr 781 @ 0x30d0 (12496) - IMAD.WIDE R104, R104, 0x2, RZ ;
 Instr 782 @ 0x30e0 (12512) - LOP3.LUT R51, R55.reuse, 0x20, RZ, 0x3c, !PT ;
 Instr 783 @ 0x30f0 (12528) - LOP3.LUT R50, R56, 0x30, RZ, 0x3c, !PT ;
 Instr 784 @ 0x3100 (12544) - IMAD.WIDE R102, R102, 0x2, RZ ;
 Instr 785 @ 0x3110 (12560) - LOP3.LUT R0, R55, 0x30, RZ, 0x3c, !PT ;
 Instr 786 @ 0x3120 (12576) - MOV R94, c[0x0][0x630] ;
 Instr 787 @ 0x3130 (12592) - IMAD.WIDE R100, R100, 0x2, RZ ;
 Instr 788 @ 0x3140 (12608) - IMAD.WIDE R98, R98, 0x2, RZ ;
 Instr 789 @ 0x3150 (12624) - IMAD.WIDE R96, R96, 0x2, RZ ;
Basic block id 33 - num instructions 105
 Instr 790 @ 0x3160 (12640) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 791 @ 0x3170 (12656) - CS2R R76, SRZ ;
 Instr 792 @ 0x3180 (12672) - CS2R R78, SRZ ;
 Instr 793 @ 0x3190 (12688) - CS2R R80, SRZ ;
 Instr 794 @ 0x31a0 (12704) - ISETP.GT.AND P6, PT, R94, RZ, PT ;
 Instr 795 @ 0x31b0 (12720) - CS2R R82, SRZ ;
 Instr 796 @ 0x31c0 (12736) - CS2R R68, SRZ ;
 Instr 797 @ 0x31d0 (12752) - LDSM.16.M88.2 R42, [R53] ;
 Instr 798 @ 0x31e0 (12768) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 799 @ 0x31f0 (12784) - CS2R R70, SRZ ;
 Instr 800 @ 0x3200 (12800) - SEL R93, R93, RZ, P6 ;
 Instr 801 @ 0x3210 (12816) - CS2R R72, SRZ ;
 Instr 802 @ 0x3220 (12832) - SEL R92, R92, RZ, P6 ;
 Instr 803 @ 0x3230 (12848) - CS2R R74, SRZ ;
 Instr 804 @ 0x3240 (12864) - R2P PR, R93, 0xf ;
 Instr 805 @ 0x3250 (12880) - LDSM.16.M88.2 R44, [R54+0x2000] ;
 Instr 806 @ 0x3260 (12896) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 807 @ 0x3270 (12912) - CS2R R60, SRZ ;
 Instr 808 @ 0x3280 (12928) - CS2R R62, SRZ ;
 Instr 809 @ 0x3290 (12944) - CS2R R64, SRZ ;
 Instr 810 @ 0x32a0 (12960) - CS2R R66, SRZ ;
 Instr 811 @ 0x32b0 (12976) - LDSM.16.M88.2 R46, [R54+0x2800] ;
 Instr 812 @ 0x32c0 (12992) - UIADD3 UR9, UR13, 0x1, URZ ;
 Instr 813 @ 0x32d0 (13008) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 814 @ 0x32e0 (13024) - LDSM.16.M88.2 R48, [R53+0x1000] ;
 Instr 815 @ 0x32f0 (13040) - UISETP.NE.AND UP0, UPT, UR14, UR13, UPT ;
 Instr 816 @ 0x3300 (13056) - USHF.L.U32 UR8, UR13, 0x3, URZ ;
 Instr 817 @ 0x3310 (13072) - @P0 LDG.E.128.SYS R76, [R106.64+UR6] ;
 Instr 818 @ 0x3320 (13088) - USEL UR13, UR9, URZ, UP0 ;
 Instr 819 @ 0x3330 (13104) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 820 @ 0x3340 (13120) - @P1 LDG.E.128.SYS R80, [R104.64+UR6] ;
 Instr 821 @ 0x3350 (13136) - R2P PR, R92, 0x3 ;
 Instr 822 @ 0x3360 (13152) - @P2 LDG.E.128.SYS R68, [R102.64+UR6] ;
 Instr 823 @ 0x3370 (13168) - ISETP.GT.AND P5, PT, R94.reuse, c[0x0][0x634], PT ;
 Instr 824 @ 0x3380 (13184) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 825 @ 0x3390 (13200) - @P3 LDG.E.128.SYS R72, [R100.64+UR6] ;
 Instr 826 @ 0x33a0 (13216) - ULDC.64 UR10, c[0x0][UR8+0x408] ;
 Instr 827 @ 0x33b0 (13232) - IADD3 R94, R94, -0x1, RZ ;
 Instr 828 @ 0x33c0 (13248) - ULDC.64 UR8, c[0x0][UR8+0x508] ;
 Instr 829 @ 0x33d0 (13264) - LDSM.16.M88.2 R2, [R52] ;
 Instr 830 @ 0x33e0 (13280) - UIADD3 UR6, UP1, UR10, UR6, URZ ;
 Instr 831 @ 0x33f0 (13296) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 832 @ 0x3400 (13312) - @P0 LDG.E.128.SYS R60, [R98.64+UR4] ;
 Instr 833 @ 0x3410 (13328) - UIADD3.X UR7, UR11, UR7, URZ, UP1, !UPT ;
 Instr 834 @ 0x3420 (13344) - @P1 LDG.E.128.SYS R64, [R96.64+UR4] ;
 Instr 835 @ 0x3430 (13360) - UIADD3 UR4, UP0, UR8, UR4, URZ ;
 Instr 836 @ 0x3440 (13376) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 837 @ 0x3450 (13392) - LDSM.16.M88.2 R36, [R51+0x2000] ;
 Instr 838 @ 0x3460 (13408) - UIADD3.X UR5, UR9, UR5, URZ, UP0, !UPT ;
 Instr 839 @ 0x3470 (13424) - LDSM.16.M88.2 R38, [R51+0x2800] ;
 Instr 840 @ 0x3480 (13440) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 841 @ 0x3490 (13456) - LDSM.16.M88.2 R40, [R52+0x1000] ;
 Instr 842 @ 0x34a0 (13472) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 843 @ 0x34b0 (13488) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 844 @ 0x34c0 (13504) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 845 @ 0x34d0 (13520) - LDSM.16.M88.2 R42, [R50] ;
 Instr 846 @ 0x34e0 (13536) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 847 @ 0x34f0 (13552) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 848 @ 0x3500 (13568) - LDSM.16.M88.2 R44, [R0+0x2000] ;
 Instr 849 @ 0x3510 (13584) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 850 @ 0x3520 (13600) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 851 @ 0x3530 (13616) - LDSM.16.M88.2 R46, [R0+0x2800] ;
 Instr 852 @ 0x3540 (13632) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 853 @ 0x3550 (13648) - LDSM.16.M88.2 R48, [R50+0x1000] ;
 Instr 854 @ 0x3560 (13664) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 855 @ 0x3570 (13680) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 856 @ 0x3580 (13696) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 857 @ 0x3590 (13712) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 858 @ 0x35a0 (13728) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 859 @ 0x35b0 (13744) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 860 @ 0x35c0 (13760) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 861 @ 0x35d0 (13776) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 862 @ 0x35e0 (13792) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 863 @ 0x35f0 (13808) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 864 @ 0x3600 (13824) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 865 @ 0x3610 (13840) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 866 @ 0x3620 (13856) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 867 @ 0x3630 (13872) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 868 @ 0x3640 (13888) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 869 @ 0x3650 (13904) - STS.128 [R59.X16], R76 ;
 Instr 870 @ 0x3660 (13920) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 871 @ 0x3670 (13936) - STS.128 [R59.X16+0x800], R80 ;
 Instr 872 @ 0x3680 (13952) - STS.128 [R59.X16+0x1000], R68 ;
 Instr 873 @ 0x3690 (13968) - STS.128 [R59.X16+0x1800], R72 ;
 Instr 874 @ 0x36a0 (13984) - STS.128 [R59.X16+0x2000], R60 ;
 Instr 875 @ 0x36b0 (14000) - STS.128 [R59.X16+0x2800], R64 ;
 Instr 876 @ 0x36c0 (14016) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 877 @ 0x36d0 (14032) - IMAD.MOV.U32 R60, RZ, RZ, c[0x0][0x618] ;
 Instr 878 @ 0x36e0 (14048) - ISETP.GE.AND P4, PT, R60, 0x2, PT ;
 Instr 879 @ 0x36f0 (14064) - LDSM.16.M88.2 R2, [R56] ;
 Instr 880 @ 0x3700 (14080) - @P4 IMAD.MOV.U32 R60, RZ, RZ, 0x1 ;
 Instr 881 @ 0x3710 (14096) - LDSM.16.M88.2 R40, [R56+0x1000] ;
 Instr 882 @ 0x3720 (14112) - @P4 SHF.L.U32 R60, R60, UR13, RZ ;
 Instr 883 @ 0x3730 (14128) - LDSM.16.M88.2 R36, [R55+0x2000] ;
 Instr 884 @ 0x3740 (14144) - @P4 LOP3.LUT P0, RZ, R89, R60.reuse, RZ, 0xc0, !PT ;
 Instr 885 @ 0x3750 (14160) - @P4 LOP3.LUT P1, RZ, R88, R60.reuse, RZ, 0xc0, !PT ;
 Instr 886 @ 0x3760 (14176) - LDSM.16.M88.2 R38, [R55+0x2800] ;
 Instr 887 @ 0x3770 (14192) - @P4 LOP3.LUT P2, RZ, R87, R60.reuse, RZ, 0xc0, !PT ;
 Instr 888 @ 0x3780 (14208) - @P4 LOP3.LUT P3, RZ, R86, R60, RZ, 0xc0, !PT ;
 Instr 889 @ 0x3790 (14224) - @P4 P2R R93, PR, RZ, 0xf ;
 Instr 890 @ 0x37a0 (14240) - ISETP.LT.OR P0, PT, R84, R91.reuse, P5 ;
 Instr 891 @ 0x37b0 (14256) - ISETP.LT.OR P5, PT, R90, R91, P5 ;
 Instr 892 @ 0x37c0 (14272) - SEL R92, R92, RZ, P0 ;
 Instr 893 @ 0x37d0 (14288) - SEL R93, R93, RZ, P5 ;
 Instr 894 @ 0x37e0 (14304) - @P6 BRA 0x3160 ;
Basic block id 34 - num instructions 23
 Instr 895 @ 0x37f0 (14320) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
 Instr 896 @ 0x3800 (14336) - @P1 IMAD.MOV.U32 R42, RZ, RZ, c[0x0][0x188] ;
 Instr 897 @ 0x3810 (14352) - @P1 MOV R65, c[0x0][0x194] ;
 Instr 898 @ 0x3820 (14368) - @P1 IMAD.MOV.U32 R43, RZ, RZ, c[0x0][0x18c] ;
 Instr 899 @ 0x3830 (14384) - @P1 IMAD.MOV.U32 R64, RZ, RZ, c[0x0][0x190] ;
 Instr 900 @ 0x3840 (14400) - @P1 LDG.E.SYS R0, [R42] ;
 Instr 901 @ 0x3850 (14416) - @P1 LDG.E.SYS R64, [R64] ;
 Instr 902 @ 0x3860 (14432) - ULDC.U8 UR6, c[0x0][0x32c] ;
 Instr 903 @ 0x3870 (14448) - BMOV.32.CLEAR RZ, B0 ;
 Instr 904 @ 0x3880 (14464) - ISETP.NE.AND P0, PT, RZ, UR6, PT ;
 Instr 905 @ 0x3890 (14480) - S2R R40, SR_TID.X ;
 Instr 906 @ 0x38a0 (14496) - MOV R43, c[0x0][0x184] ;
 Instr 907 @ 0x38b0 (14512) - IMAD.MOV.U32 R42, RZ, RZ, c[0x0][0x180] ;
 Instr 908 @ 0x38c0 (14528) - BSSY B0, 0x3b10 ;
 Instr 909 @ 0x38d0 (14544) - @P0 S2R R37, SR_CTAID.Z ;
 Instr 910 @ 0x38e0 (14560) - @P0 IMAD.MOV.U32 R36, RZ, RZ, 0x2 ;
 Instr 911 @ 0x38f0 (14576) - IMAD.SHL.U32 R39, R40.reuse, 0x8, RZ ;
 Instr 912 @ 0x3900 (14592) - SHF.R.S32.HI R41, RZ, 0x1f, R40 ;
 Instr 913 @ 0x3910 (14608) - LOP3.LUT R3, R40.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 914 @ 0x3920 (14624) - LOP3.LUT R2, R40, 0x1e, RZ, 0xc0, !PT ;
 Instr 915 @ 0x3930 (14640) - LOP3.LUT R39, R39, 0x8, RZ, 0xc0, !PT ;
 Instr 916 @ 0x3940 (14656) - LEA.HI R38, R41, R40, RZ, 0x2 ;
 Instr 917 @ 0x3950 (14672) - @P0 IMAD R37, R37, c[0x0][0x33c], RZ ;
Basic block id 35 - num instructions 14
 Instr 918 @ 0x3960 (14688) - LEA.HI R3, R2, R3, RZ, 0x1f ;
 Instr 919 @ 0x3970 (14704) - LOP3.LUT R2, R39, 0x40, R40, 0xf8, !PT ;
 Instr 920 @ 0x3980 (14720) - @P0 IMAD.WIDE R42, R37, R36, c[0x0][0x180] ;
 Instr 921 @ 0x3990 (14736) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x320], PT ;
 Instr 922 @ 0x39a0 (14752) - LOP3.LUT R39, R38, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 923 @ 0x39b0 (14768) - IMAD R2, R3, 0x90, R2 ;
 Instr 924 @ 0x39c0 (14784) - SHF.R.S32.HI R37, RZ, 0x2, R38 ;
 Instr 925 @ 0x39d0 (14800) - IMAD.IADD R60, R40, 0x1, -R39 ;
 Instr 926 @ 0x39e0 (14816) - IADD3 R3, R58, R37, RZ ;
 Instr 927 @ 0x39f0 (14832) - IMAD R54, R60, 0x8, R57 ;
 Instr 928 @ 0x3a00 (14848) - IMAD R60, R37, 0x12, R60 ;
 Instr 929 @ 0x3a10 (14864) - @!P1 IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x1e0] ;
 Instr 930 @ 0x3a20 (14880) - @!P1 MOV R64, c[0x0][0x1f0] ;
 Instr 931 @ 0x3a30 (14896) - @!P0 BRA 0x3ae0 ;
Basic block id 36 - num instructions 4
 Instr 932 @ 0x3a40 (14912) - ISETP.GE.AND P0, PT, R54, c[0x0][0x320], PT ;
 Instr 933 @ 0x3a50 (14928) - CS2R R36, SRZ ;
 Instr 934 @ 0x3a60 (14944) - CS2R R38, SRZ ;
 Instr 935 @ 0x3a70 (14960) - @P0 BRA 0x3b00 ;
Basic block id 37 - num instructions 6
 Instr 936 @ 0x3a80 (14976) - SHF.R.S32.HI R37, RZ, 0x1f, R54 ;
 Instr 937 @ 0x3a90 (14992) - LEA.HI R37, R37, R54, RZ, 0x3 ;
 Instr 938 @ 0x3aa0 (15008) - SHF.R.S32.HI R37, RZ, 0x3, R37 ;
 Instr 939 @ 0x3ab0 (15024) - IMAD.WIDE R42, R37, 0x10, R42 ;
 Instr 940 @ 0x3ac0 (15040) - LDG.E.128.SYS R36, [R42] ;
 Instr 941 @ 0x3ad0 (15056) - BRA 0x3b00 ;
Basic block id 38 - num instructions 2
 Instr 942 @ 0x3ae0 (15072) - CS2R R36, SRZ ;
 Instr 943 @ 0x3af0 (15088) - CS2R R38, SRZ ;
Basic block id 39 - num instructions 5
 Instr 944 @ 0x3b00 (15104) - BSYNC B0 ;
 Instr 945 @ 0x3b10 (15120) - IMAD.MOV.U32 R41, RZ, RZ, c[0x0][0x338] ;
 Instr 946 @ 0x3b20 (15136) - ISETP.GE.AND P0, PT, R41, 0x1, PT ;
 Instr 947 @ 0x3b30 (15152) - ISETP.EQ.OR P0, PT, RZ, UR6, !P0 ;
 Instr 948 @ 0x3b40 (15168) - @P0 BRA 0x3c00 ;
Basic block id 40 - num instructions 11
 Instr 949 @ 0x3b50 (15184) - S2R R41, SR_CTAID.Z ;
 Instr 950 @ 0x3b60 (15200) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 951 @ 0x3b70 (15216) - IMAD.MOV.U32 R44, RZ, RZ, 0x4 ;
 Instr 952 @ 0x3b80 (15232) - IMAD.MOV.U32 R64, RZ, RZ, RZ ;
 Instr 953 @ 0x3b90 (15248) - IMAD R41, R41, c[0x0][0x338], RZ ;
 Instr 954 @ 0x3ba0 (15264) - IMAD.WIDE R44, R41.reuse, R44, c[0x0][0x188] ;
 Instr 955 @ 0x3bb0 (15280) - SHF.R.S32.HI R0, RZ, 0x1f, R41 ;
 Instr 956 @ 0x3bc0 (15296) - @P1 LEA R42, P0, R41, c[0x0][0x190], 0x2 ;
 Instr 957 @ 0x3bd0 (15312) - @P1 LEA.HI.X R43, R41, c[0x0][0x194], R0, 0x2, P0 ;
 Instr 958 @ 0x3be0 (15328) - LDG.E.SYS R0, [R44] ;
 Instr 959 @ 0x3bf0 (15344) - @P1 LDG.E.SYS R64, [R42] ;
Basic block id 41 - num instructions 20
 Instr 960 @ 0x3c00 (15360) - S2R R41, SR_CTAID.Z ;
 Instr 961 @ 0x3c10 (15376) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 962 @ 0x3c20 (15392) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 963 @ 0x3c30 (15408) - IMAD.MOV.U32 R42, RZ, RZ, c[0x0][0x290] ;
 Instr 964 @ 0x3c40 (15424) - ISETP.NE.AND P1, PT, RZ, UR6, PT ;
 Instr 965 @ 0x3c50 (15440) - IMAD.MOV.U32 R62, RZ, RZ, c[0x0][0x34c] ;
 Instr 966 @ 0x3c60 (15456) - S2R R46, SR_CTAID.Y ;
 Instr 967 @ 0x3c70 (15472) - FSETP.NEU.OR P0, PT, R64, RZ, P0 ;
 Instr 968 @ 0x3c80 (15488) - ULDC.64 UR4, c[0x0][0x3c8] ;
 Instr 969 @ 0x3c90 (15504) - IADD3 R44, R42, -0x1, RZ ;
 Instr 970 @ 0x3ca0 (15520) - S2R R61, SR_CTAID.X ;
 Instr 971 @ 0x3cb0 (15536) - UISETP.NE.AND UP2, UPT, UR12, UR4, UPT ;
 Instr 972 @ 0x3cc0 (15552) - IMAD R62, R62, c[0x0][0x350], RZ ;
 Instr 973 @ 0x3cd0 (15568) - UISETP.NE.AND UP1, UPT, UR12, UR5, UPT ;
 Instr 974 @ 0x3ce0 (15584) - ULDC UR4, c[0x0][0x1b4] ;
 Instr 975 @ 0x3cf0 (15600) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 976 @ 0x3d00 (15616) - ISETP.EQ.OR P2, PT, R41, R44, P1 ;
 Instr 977 @ 0x3d10 (15632) - P2R R63, PR, RZ, 0x4 ;
 Instr 978 @ 0x3d20 (15648) - IMAD R61, R46, c[0x0][0x34c], R61 ;
 Instr 979 @ 0x3d30 (15664) - @P0 BRA 0x5d00 ;
Basic block id 42 - num instructions 8
 Instr 980 @ 0x3d40 (15680) - ISETP.NE.AND P0, PT, R42, 0x1, PT ;
 Instr 981 @ 0x3d50 (15696) - UMOV UR5, 0x1 ;
 Instr 982 @ 0x3d60 (15712) - IMAD.MOV.U32 R57, RZ, RZ, RZ ;
 Instr 983 @ 0x3d70 (15728) - MOV R48, RZ ;
 Instr 984 @ 0x3d80 (15744) - IMAD.MOV.U32 R55, RZ, RZ, RZ ;
 Instr 985 @ 0x3d90 (15760) - CS2R R52, SRZ ;
 Instr 986 @ 0x3da0 (15776) - CS2R R50, SRZ ;
 Instr 987 @ 0x3db0 (15792) - @!P0 BRA 0x4380 ;
Basic block id 43 - num instructions 5
 Instr 988 @ 0x3dc0 (15808) - IMAD.MOV.U32 R43, RZ, RZ, c[0x0][0x298] ;
 Instr 989 @ 0x3dd0 (15824) - ISETP.NE.AND P1, PT, R42, c[0x0][0x294], PT ;
 Instr 990 @ 0x3de0 (15840) - IMAD.MOV.U32 R55, RZ, RZ, R41 ;
 Instr 991 @ 0x3df0 (15856) - ISETP.EQ.AND P0, PT, R43, 0x2, PT ;
 Instr 992 @ 0x3e00 (15872) - @!P1 BRA P0, 0x4380 ;
Basic block id 44 - num instructions 4
 Instr 993 @ 0x3e10 (15888) - ISETP.EQ.AND P0, PT, R43, 0x1, PT ;
 Instr 994 @ 0x3e20 (15904) - MOV R42, 0x4 ;
 Instr 995 @ 0x3e30 (15920) - IMAD.WIDE R50, R61, R42, c[0x0][0x2c0] ;
 Instr 996 @ 0x3e40 (15936) - @P2 BRA P0, 0x41c0 ;
Basic block id 45 - num instructions 35
 Instr 997 @ 0x3e50 (15952) - IABS R45, c[0x0][0x294] ;
 Instr 998 @ 0x3e60 (15968) - IMAD.MOV.U32 R46, RZ, RZ, RZ ;
 Instr 999 @ 0x3e70 (15984) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1000 @ 0x3e80 (16000) - BSSY B0, 0x4130 ;
 Instr 1001 @ 0x3e90 (16016) - I2F.RP R48, R45 ;
 Instr 1002 @ 0x3ea0 (16032) - MUFU.RCP R47, R48 ;
 Instr 1003 @ 0x3eb0 (16048) - IADD3 R47, R47, 0xffffffe, RZ ;
 Instr 1004 @ 0x3ec0 (16064) - F2I.FTZ.U32.TRUNC.NTZ R47, R47 ;
 Instr 1005 @ 0x3ed0 (16080) - IMAD.MOV R43, RZ, RZ, -R47.reuse ;
 Instr 1006 @ 0x3ee0 (16096) - IMAD R44, R43, R45, RZ ;
 Instr 1007 @ 0x3ef0 (16112) - IABS R43, R41 ;
 Instr 1008 @ 0x3f00 (16128) - IMAD.HI.U32 R44, R47, R44, R46 ;
 Instr 1009 @ 0x3f10 (16144) - IMAD.HI.U32 R46, R44, R43, RZ ;
 Instr 1010 @ 0x3f20 (16160) - IMAD.MOV R44, RZ, RZ, -R46 ;
 Instr 1011 @ 0x3f30 (16176) - IMAD R44, R45, R44, R43 ;
 Instr 1012 @ 0x3f40 (16192) - LOP3.LUT R43, R41, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 1013 @ 0x3f50 (16208) - ISETP.GT.U32.AND P1, PT, R45, R44, PT ;
 Instr 1014 @ 0x3f60 (16224) - ISETP.GE.AND P0, PT, R43, RZ, PT ;
 Instr 1015 @ 0x3f70 (16240) - @!P1 IMAD.IADD R44, R44, 0x1, -R45 ;
 Instr 1016 @ 0x3f80 (16256) - @!P1 IADD3 R46, R46, 0x1, RZ ;
 Instr 1017 @ 0x3f90 (16272) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x294], PT ;
 Instr 1018 @ 0x3fa0 (16288) - ISETP.GE.U32.AND P2, PT, R44, R45, PT ;
 Instr 1019 @ 0x3fb0 (16304) - @P2 IADD3 R46, R46, 0x1, RZ ;
 Instr 1020 @ 0x3fc0 (16320) - IMAD.MOV.U32 R43, RZ, RZ, R46 ;
 Instr 1021 @ 0x3fd0 (16336) - @!P0 IMAD.MOV R43, RZ, RZ, -R43 ;
 Instr 1022 @ 0x3fe0 (16352) - ISETP.NE.AND P0, PT, R40, RZ, PT ;
 Instr 1023 @ 0x3ff0 (16368) - @!P1 LOP3.LUT R43, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 1024 @ 0x4000 (16384) - ISETP.EQ.OR P0, PT, R43.reuse, RZ, P0 ;
 Instr 1025 @ 0x4010 (16400) - IMAD.MOV R44, RZ, RZ, -R43 ;
 Instr 1026 @ 0x4020 (16416) - ISETP.NE.AND P1, PT, R43, RZ, PT ;
 Instr 1027 @ 0x4030 (16432) - IMAD R55, R44, c[0x0][0x294], R41 ;
 Instr 1028 @ 0x4040 (16448) - SEL R48, RZ, 0x1, !P1 ;
 Instr 1029 @ 0x4050 (16464) - IMAD R53, R62, R55, R61 ;
 Instr 1030 @ 0x4060 (16480) - IMAD.WIDE R52, R53, R42, c[0x0][0x2b8] ;
 Instr 1031 @ 0x4070 (16496) - @P0 BRA 0x4120 ;
Basic block id 46 - num instructions 4
 Instr 1032 @ 0x4080 (16512) - LDG.E.STRONG.GPU R40, [R52] ;
 Instr 1033 @ 0x4090 (16528) - ISETP.NE.AND P0, PT, R40, R43, PT ;
 Instr 1034 @ 0x40a0 (16544) - CCTL.IVALL ;
 Instr 1035 @ 0x40b0 (16560) - @!P0 BRA 0x4120 ;
Basic block id 47 - num instructions 5
 Instr 1036 @ 0x40c0 (16576) - VOTE.ANY R40, PT, PT ;
 Instr 1037 @ 0x40d0 (16592) - YIELD ;
 Instr 1038 @ 0x40e0 (16608) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1039 @ 0x40f0 (16624) - LOP3.LUT P0, RZ, R40, UR4, RZ, 0xc, !PT ;
 Instr 1040 @ 0x4100 (16640) - @!P0 BRA.U 0x4080 ;
Basic block id 48 - num instructions 1
 Instr 1041 @ 0x4110 (16656) - BRA 0x40c0 ;
Basic block id 49 - num instructions 2
 Instr 1042 @ 0x4120 (16672) - BSYNC B0 ;
 Instr 1043 @ 0x4130 (16688) - BRA.CONV 0x4170 ;
Basic block id 50 - num instructions 3
 Instr 1044 @ 0x4140 (16704) - MOV R41, 0xffffffff ;
 Instr 1045 @ 0x4150 (16720) - MOV R40, 0x4170 ;
 Instr 1046 @ 0x4160 (16736) - CALL.REL.NOINC 0x7f70 ;
Basic block id 51 - num instructions 5
 Instr 1047 @ 0x4170 (16752) - NOP ;
 Instr 1048 @ 0x4180 (16768) - WARPSYNC 0xffffffff ;
 Instr 1049 @ 0x4190 (16784) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1050 @ 0x41a0 (16800) - UMOV UR5, URZ ;
 Instr 1051 @ 0x41b0 (16816) - BRA 0x4380 ;
Basic block id 52 - num instructions 8
 Instr 1052 @ 0x41c0 (16832) - ISETP.NE.AND P0, PT, R40, RZ, PT ;
 Instr 1053 @ 0x41d0 (16848) - IMAD.MOV.U32 R48, RZ, RZ, c[0x0][0x294] ;
 Instr 1054 @ 0x41e0 (16864) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1055 @ 0x41f0 (16880) - BSSY B0, 0x42f0 ;
 Instr 1056 @ 0x4200 (16896) - ISETP.EQ.OR P0, PT, R44, RZ, P0 ;
 Instr 1057 @ 0x4210 (16912) - IADD3 R48, R48, -0x1, RZ ;
 Instr 1058 @ 0x4220 (16928) - @P1 IMAD.MOV R48, RZ, RZ, c[0x0][0x294] ;
 Instr 1059 @ 0x4230 (16944) - @P0 BRA 0x42e0 ;
Basic block id 53 - num instructions 4
 Instr 1060 @ 0x4240 (16960) - LDG.E.STRONG.GPU R41, [R50] ;
 Instr 1061 @ 0x4250 (16976) - ISETP.NE.AND P0, PT, R41, R44, PT ;
 Instr 1062 @ 0x4260 (16992) - CCTL.IVALL ;
 Instr 1063 @ 0x4270 (17008) - @!P0 BRA 0x42e0 ;
Basic block id 54 - num instructions 5
 Instr 1064 @ 0x4280 (17024) - VOTE.ANY R40, PT, PT ;
 Instr 1065 @ 0x4290 (17040) - YIELD ;
 Instr 1066 @ 0x42a0 (17056) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1067 @ 0x42b0 (17072) - LOP3.LUT P0, RZ, R40, UR4, RZ, 0xc, !PT ;
 Instr 1068 @ 0x42c0 (17088) - @!P0 BRA.U 0x4240 ;
Basic block id 55 - num instructions 1
 Instr 1069 @ 0x42d0 (17104) - BRA 0x4280 ;
Basic block id 56 - num instructions 2
 Instr 1070 @ 0x42e0 (17120) - BSYNC B0 ;
 Instr 1071 @ 0x42f0 (17136) - BRA.CONV 0x4330 ;
Basic block id 57 - num instructions 3
 Instr 1072 @ 0x4300 (17152) - MOV R41, 0xffffffff ;
 Instr 1073 @ 0x4310 (17168) - MOV R40, 0x4330 ;
 Instr 1074 @ 0x4320 (17184) - CALL.REL.NOINC 0x7f70 ;
Basic block id 58 - num instructions 5
 Instr 1075 @ 0x4330 (17200) - NOP ;
 Instr 1076 @ 0x4340 (17216) - WARPSYNC 0xffffffff ;
 Instr 1077 @ 0x4350 (17232) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1078 @ 0x4360 (17248) - MOV R55, RZ ;
 Instr 1079 @ 0x4370 (17264) - UMOV UR5, URZ ;
Basic block id 59 - num instructions 78
 Instr 1080 @ 0x4380 (17280) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1081 @ 0x4390 (17296) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 1082 @ 0x43a0 (17312) - IMAD R49, R54, c[0x0][0x254], RZ ;
 Instr 1083 @ 0x43b0 (17328) - MOV R56, R3 ;
 Instr 1084 @ 0x43c0 (17344) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 1085 @ 0x43d0 (17360) - MOV R59, RZ ;
 Instr 1086 @ 0x43e0 (17376) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 1087 @ 0x43f0 (17392) - ISETP.GE.AND P4, PT, R54, R85, PT ;
 Instr 1088 @ 0x4400 (17408) - @P2 IMAD.HI.U32 R40, R3, c[0x0][0x3d8], RZ ;
 Instr 1089 @ 0x4410 (17424) - MOV R54, c[0x0][0x290] ;
 Instr 1090 @ 0x4420 (17440) - ISETP.NE.AND P3, PT, R63, RZ, PT ;
 Instr 1091 @ 0x4430 (17456) - @P2 SHF.R.U32.HI R56, RZ, c[0x0][0x3dc], R40 ;
 Instr 1092 @ 0x4440 (17472) - ISETP.GE.AND P6, PT, R54, 0x2, PT ;
 Instr 1093 @ 0x4450 (17488) - @P2 IADD3 R40, -R56, RZ, RZ ;
 Instr 1094 @ 0x4460 (17504) - STS.64 [R2], R4 ;
 Instr 1095 @ 0x4470 (17520) - ISETP.LT.AND P5, PT, R3, c[0x0][0x3c4], !P4 ;
 Instr 1096 @ 0x4480 (17536) - @P2 IMAD R57, R40, c[0x0][0x3c8], R3 ;
 Instr 1097 @ 0x4490 (17552) - STS.64 [R2+0x10], R8 ;
 Instr 1098 @ 0x44a0 (17568) - @P1 IMAD.HI.U32 R58, R57, c[0x0][0x3e0], RZ ;
 Instr 1099 @ 0x44b0 (17584) - STS.64 [R2+0x900], R6 ;
 Instr 1100 @ 0x44c0 (17600) - STS.64 [R2+0x910], R10 ;
 Instr 1101 @ 0x44d0 (17616) - @P1 SHF.R.U32.HI R58, RZ, c[0x0][0x3e4], R58 ;
 Instr 1102 @ 0x44e0 (17632) - STS.64 [R2+0x20], R12 ;
 Instr 1103 @ 0x44f0 (17648) - @P1 IADD3 R4, -R58, RZ, RZ ;
 Instr 1104 @ 0x4500 (17664) - STS.64 [R2+0x30], R16 ;
 Instr 1105 @ 0x4510 (17680) - @P1 IMAD R59, R4, c[0x0][0x3cc], R57 ;
 Instr 1106 @ 0x4520 (17696) - @P1 MOV R57, R58 ;
 Instr 1107 @ 0x4530 (17712) - STS.64 [R2+0x920], R14 ;
 Instr 1108 @ 0x4540 (17728) - @P0 IMAD.HI.U32 R13, R59, c[0x0][0x3e8], RZ ;
 Instr 1109 @ 0x4550 (17744) - STS.64 [R2+0x930], R18 ;
 Instr 1110 @ 0x4560 (17760) - IMAD R16, R56, c[0x0][0x244], R49 ;
 Instr 1111 @ 0x4570 (17776) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1112 @ 0x4580 (17792) - @P0 SHF.R.U32.HI R13, RZ, c[0x0][0x3ec], R13 ;
 Instr 1113 @ 0x4590 (17808) - MOV R14, RZ ;
 Instr 1114 @ 0x45a0 (17824) - IMAD R16, R57, c[0x0][0x248], R16 ;
 Instr 1115 @ 0x45b0 (17840) - @P0 IADD3 R12, -R13, RZ, RZ ;
 Instr 1116 @ 0x45c0 (17856) - @P0 IMAD R14, R12, c[0x0][0x1b4], R59 ;
 Instr 1117 @ 0x45d0 (17872) - @P0 MOV R59, R13 ;
 Instr 1118 @ 0x45e0 (17888) - SHF.R.S32.HI R13, RZ, 0x1f, R55 ;
 Instr 1119 @ 0x45f0 (17904) - MOV R12, c[0x0][0x298] ;
 Instr 1120 @ 0x4600 (17920) - IMAD R59, R59, c[0x0][0x24c], R16 ;
 Instr 1121 @ 0x4610 (17936) - ISETP.EQ.AND P3, PT, R12, 0x1, P3 ;
 Instr 1122 @ 0x4620 (17952) - IMAD R14, R14, c[0x0][0x250], R59 ;
 Instr 1123 @ 0x4630 (17968) - LDS.U.128 R44, [R60.X16] ;
 Instr 1124 @ 0x4640 (17984) - SEL R12, R14, 0xffffffff, P5 ;
 Instr 1125 @ 0x4650 (18000) - LDS.U.128 R8, [R60.X16+0x40] ;
 Instr 1126 @ 0x4660 (18016) - LDS.U.128 R40, [R60.X16+0x90] ;
 Instr 1127 @ 0x4670 (18032) - LDS.U.128 R4, [R60.X16+0xd0] ;
 Instr 1128 @ 0x4680 (18048) - FADD R57, R44, R8 ;
 Instr 1129 @ 0x4690 (18064) - IMAD R8, R13, c[0x0][0x2a0], RZ ;
 Instr 1130 @ 0x46a0 (18080) - P2R R13, PR, RZ, 0x40 ;
 Instr 1131 @ 0x46b0 (18096) - FADD R9, R45, R9 ;
 Instr 1132 @ 0x46c0 (18112) - FADD R11, R47, R11 ;
 Instr 1133 @ 0x46d0 (18128) - FADD R13, R46, R10 ;
 Instr 1134 @ 0x46e0 (18144) - IMAD R15, R55.reuse, c[0x0][0x2a4], R8 ;
 Instr 1135 @ 0x46f0 (18160) - IMAD.WIDE.U32 R44, R55, c[0x0][0x2a0], RZ ;
 Instr 1136 @ 0x4700 (18176) - FADD R19, R40, R4 ;
 Instr 1137 @ 0x4710 (18192) - FADD R5, R41, R5 ;
 Instr 1138 @ 0x4720 (18208) - IADD3 R41, R45, R15, RZ ;
 Instr 1139 @ 0x4730 (18224) - FADD R17, R42, R6 ;
 Instr 1140 @ 0x4740 (18240) - FADD R7, R43, R7 ;
 Instr 1141 @ 0x4750 (18256) - FMUL R57, R57, R0.reuse ;
 Instr 1142 @ 0x4760 (18272) - FMUL R46, R9, R0 ;
 Instr 1143 @ 0x4770 (18288) - FMUL R43, R13, R0.reuse ;
 Instr 1144 @ 0x4780 (18304) - MOV R8, R57 ;
 Instr 1145 @ 0x4790 (18320) - FMUL R42, R11, R0 ;
 Instr 1146 @ 0x47a0 (18336) - MOV R9, R46 ;
 Instr 1147 @ 0x47b0 (18352) - FMUL R19, R19, R0.reuse ;
 Instr 1148 @ 0x47c0 (18368) - MOV R10, R43 ;
 Instr 1149 @ 0x47d0 (18384) - FMUL R18, R5, R0 ;
 Instr 1150 @ 0x47e0 (18400) - MOV R11, R42 ;
 Instr 1151 @ 0x47f0 (18416) - FMUL R17, R17, R0.reuse ;
 Instr 1152 @ 0x4800 (18432) - MOV R4, R19 ;
 Instr 1153 @ 0x4810 (18448) - FMUL R16, R7, R0 ;
 Instr 1154 @ 0x4820 (18464) - MOV R5, R18 ;
 Instr 1155 @ 0x4830 (18480) - MOV R6, R17 ;
 Instr 1156 @ 0x4840 (18496) - MOV R7, R16 ;
 Instr 1157 @ 0x4850 (18512) - @!P6 BRA 0x4bb0 ;
Basic block id 60 - num instructions 6
 Instr 1158 @ 0x4860 (18528) - S2R R56, SR_TID.X ;
 Instr 1159 @ 0x4870 (18544) - ISETP.GE.AND P5, PT, R48, 0x1, PT ;
 Instr 1160 @ 0x4880 (18560) - IMAD.SHL.U32 R14, R62, 0x80, RZ ;
 Instr 1161 @ 0x4890 (18576) - SHF.R.S32.HI R13, RZ, 0x1f, R14 ;
 Instr 1162 @ 0x48a0 (18592) - IMAD R15, R61, 0x80, R56 ;
 Instr 1163 @ 0x48b0 (18608) - @!P5 BRA 0x4b20 ;
Basic block id 61 - num instructions 9
 Instr 1164 @ 0x48c0 (18624) - LEA R56, P5, R14.reuse, R44, 0x4 ;
 Instr 1165 @ 0x48d0 (18640) - IMAD.SHL.U32 R5, R15, 0x10, RZ ;
 Instr 1166 @ 0x48e0 (18656) - UMOV UR4, URZ ;
 Instr 1167 @ 0x48f0 (18672) - LEA.HI.X R4, R14, R41, R13, 0x4, P5 ;
 Instr 1168 @ 0x4900 (18688) - SHF.R.S32.HI R55, RZ, 0x1f, R5.reuse ;
 Instr 1169 @ 0x4910 (18704) - IADD3 R56, P6, P5, R56, c[0x0][0x2a8], R5 ;
 Instr 1170 @ 0x4920 (18720) - IADD3.X R47, R4, c[0x0][0x2ac], R55, P6, P5 ;
 Instr 1171 @ 0x4930 (18736) - IADD3 R58, P6, P5, R44, c[0x0][0x2a8], R5 ;
 Instr 1172 @ 0x4940 (18752) - IADD3.X R55, R41, c[0x0][0x2ac], R55, P6, P5 ;
Basic block id 62 - num instructions 21
 Instr 1173 @ 0x4950 (18768) - MOV R8, R58 ;
 Instr 1174 @ 0x4960 (18784) - MOV R9, R55 ;
 Instr 1175 @ 0x4970 (18800) - MOV R4, R56 ;
 Instr 1176 @ 0x4980 (18816) - MOV R5, R47 ;
 Instr 1177 @ 0x4990 (18832) - IADD3 R58, P5, R58, c[0x0][0x2a0], RZ ;
 Instr 1178 @ 0x49a0 (18848) - LDG.E.128.STRONG.GPU R8, [R8] ;
 Instr 1179 @ 0x49b0 (18864) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 1180 @ 0x49c0 (18880) - IADD3.X R55, R55, c[0x0][0x2a4], RZ, P5, !PT ;
 Instr 1181 @ 0x49d0 (18896) - LDG.E.128.STRONG.GPU R4, [R4] ;
 Instr 1182 @ 0x49e0 (18912) - IADD3 R56, P5, R56, c[0x0][0x2a0], RZ ;
 Instr 1183 @ 0x49f0 (18928) - IADD3.X R47, R47, c[0x0][0x2a4], RZ, P5, !PT ;
 Instr 1184 @ 0x4a00 (18944) - ISETP.LE.AND P5, PT, R48, UR4, PT ;
 Instr 1185 @ 0x4a10 (18960) - FADD R57, R8, R57 ;
 Instr 1186 @ 0x4a20 (18976) - FADD R46, R9, R46 ;
 Instr 1187 @ 0x4a30 (18992) - FADD R43, R10, R43 ;
 Instr 1188 @ 0x4a40 (19008) - FADD R42, R11, R42 ;
 Instr 1189 @ 0x4a50 (19024) - FADD R19, R4, R19 ;
 Instr 1190 @ 0x4a60 (19040) - FADD R18, R5, R18 ;
 Instr 1191 @ 0x4a70 (19056) - FADD R17, R6, R17 ;
 Instr 1192 @ 0x4a80 (19072) - FADD R16, R7, R16 ;
 Instr 1193 @ 0x4a90 (19088) - @!P5 BRA 0x4950 ;
Basic block id 63 - num instructions 8
 Instr 1194 @ 0x4aa0 (19104) - IMAD.MOV.U32 R8, RZ, RZ, R57 ;
 Instr 1195 @ 0x4ab0 (19120) - MOV R10, R43 ;
 Instr 1196 @ 0x4ac0 (19136) - IMAD.MOV.U32 R9, RZ, RZ, R46 ;
 Instr 1197 @ 0x4ad0 (19152) - MOV R4, R19 ;
 Instr 1198 @ 0x4ae0 (19168) - IMAD.MOV.U32 R11, RZ, RZ, R42 ;
 Instr 1199 @ 0x4af0 (19184) - MOV R6, R17 ;
 Instr 1200 @ 0x4b00 (19200) - IMAD.MOV.U32 R5, RZ, RZ, R18 ;
 Instr 1201 @ 0x4b10 (19216) - MOV R7, R16 ;
Basic block id 64 - num instructions 1
 Instr 1202 @ 0x4b20 (19232) - @P3 BRA 0x4bb0 ;
Basic block id 65 - num instructions 8
 Instr 1203 @ 0x4b30 (19248) - IMAD.MOV.U32 R40, RZ, RZ, R44 ;
 Instr 1204 @ 0x4b40 (19264) - IMAD.WIDE R16, R15, 0x10, R40 ;
 Instr 1205 @ 0x4b50 (19280) - IADD3 R18, P5, R16, c[0x0][0x2a8], RZ ;
 Instr 1206 @ 0x4b60 (19296) - IADD3.X R19, R17, c[0x0][0x2ac], RZ, P5, !PT ;
 Instr 1207 @ 0x4b70 (19312) - LEA R16, P5, R14.reuse, R18, 0x4 ;
 Instr 1208 @ 0x4b80 (19328) - LEA.HI.X R17, R14, R19, R13, 0x4, P5 ;
 Instr 1209 @ 0x4b90 (19344) - STG.E.128.SYS [R18], R8 ;
 Instr 1210 @ 0x4ba0 (19360) - STG.E.128.SYS [R16], R4 ;
Basic block id 66 - num instructions 1
 Instr 1211 @ 0x4bb0 (19376) - @!P3 BRA 0x4fc0 ;
Basic block id 67 - num instructions 64
 Instr 1212 @ 0x4bc0 (19392) - HADD2.F32 R13, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1213 @ 0x4bd0 (19408) - HADD2.F32 R14, R37.H1_H1, -RZ.H0_H0 ;
 Instr 1214 @ 0x4be0 (19424) - FADD R10, R13, R10 ;
 Instr 1215 @ 0x4bf0 (19440) - HADD2.F32 R13, R38.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1216 @ 0x4c00 (19456) - FADD R11, R14, R11 ;
 Instr 1217 @ 0x4c10 (19472) - FSETP.GEU.AND P5, PT, R10.reuse, c[0x0][0x210], PT ;
 Instr 1218 @ 0x4c20 (19488) - HADD2.F32 R14, R38.H1_H1, -RZ.H0_H0 ;
 Instr 1219 @ 0x4c30 (19504) - FSEL R10, R10, c[0x0][0x210], P5 ;
 Instr 1220 @ 0x4c40 (19520) - FADD R4, R13, R4 ;
 Instr 1221 @ 0x4c50 (19536) - FSETP.GEU.AND P5, PT, R11, c[0x0][0x210], PT ;
 Instr 1222 @ 0x4c60 (19552) - HADD2.F32 R13, R39.H0_H0, -RZ.H0_H0 ;
 Instr 1223 @ 0x4c70 (19568) - FADD R5, R14, R5 ;
 Instr 1224 @ 0x4c80 (19584) - FSEL R11, R11, c[0x0][0x210], P5 ;
 Instr 1225 @ 0x4c90 (19600) - HADD2.F32 R14, R39.H1_H1, -RZ.H0_H0 ;
 Instr 1226 @ 0x4ca0 (19616) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1227 @ 0x4cb0 (19632) - FADD R6, R13, R6 ;
 Instr 1228 @ 0x4cc0 (19648) - FSEL R4, R4, c[0x0][0x210], P5 ;
 Instr 1229 @ 0x4cd0 (19664) - HADD2.F32 R13, R36.H0_H0, -RZ.H0_H0 ;
 Instr 1230 @ 0x4ce0 (19680) - FSETP.GEU.AND P5, PT, R5, c[0x0][0x210], PT ;
 Instr 1231 @ 0x4cf0 (19696) - FADD R7, R14, R7 ;
 Instr 1232 @ 0x4d00 (19712) - HADD2.F32 R14, R36.H1_H1, -RZ.H0_H0 ;
 Instr 1233 @ 0x4d10 (19728) - FSEL R5, R5, c[0x0][0x210], P5 ;
 Instr 1234 @ 0x4d20 (19744) - FSETP.GEU.AND P5, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 1235 @ 0x4d30 (19760) - FADD R8, R13, R8 ;
 Instr 1236 @ 0x4d40 (19776) - FSEL R6, R6, c[0x0][0x210], P5 ;
 Instr 1237 @ 0x4d50 (19792) - FADD R9, R14, R9 ;
 Instr 1238 @ 0x4d60 (19808) - FSETP.GEU.AND P5, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 1239 @ 0x4d70 (19824) - FSEL R7, R7, c[0x0][0x210], P5 ;
 Instr 1240 @ 0x4d80 (19840) - FSETP.GEU.AND P5, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 1241 @ 0x4d90 (19856) - FSEL R8, R8, c[0x0][0x210], P5 ;
 Instr 1242 @ 0x4da0 (19872) - FSETP.GEU.AND P5, PT, R9.reuse, c[0x0][0x210], PT ;
 Instr 1243 @ 0x4db0 (19888) - FSEL R9, R9, c[0x0][0x210], P5 ;
 Instr 1244 @ 0x4dc0 (19904) - FSETP.GT.AND P5, PT, R10.reuse, c[0x0][0x220], PT ;
 Instr 1245 @ 0x4dd0 (19920) - FSEL R10, R10, c[0x0][0x220], !P5 ;
 Instr 1246 @ 0x4de0 (19936) - FSETP.GT.AND P5, PT, R11.reuse, c[0x0][0x220], PT ;
 Instr 1247 @ 0x4df0 (19952) - FSEL R11, R11, c[0x0][0x220], !P5 ;
 Instr 1248 @ 0x4e00 (19968) - F2F.F16.F32 R10, R10 ;
 Instr 1249 @ 0x4e10 (19984) - FSETP.GT.AND P5, PT, R4, c[0x0][0x220], PT ;
 Instr 1250 @ 0x4e20 (20000) - FSEL R4, R4, c[0x0][0x220], !P5 ;
 Instr 1251 @ 0x4e30 (20016) - FSETP.GT.AND P5, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 1252 @ 0x4e40 (20032) - F2F.F16.F32 R11, R11 ;
 Instr 1253 @ 0x4e50 (20048) - FSEL R5, R5, c[0x0][0x220], !P5 ;
 Instr 1254 @ 0x4e60 (20064) - FSETP.GT.AND P5, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 1255 @ 0x4e70 (20080) - F2F.F16.F32 R4, R4 ;
 Instr 1256 @ 0x4e80 (20096) - FSEL R6, R6, c[0x0][0x220], !P5 ;
 Instr 1257 @ 0x4e90 (20112) - FSETP.GT.AND P5, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 1258 @ 0x4ea0 (20128) - FSEL R7, R7, c[0x0][0x220], !P5 ;
 Instr 1259 @ 0x4eb0 (20144) - F2F.F16.F32 R15, R5 ;
 Instr 1260 @ 0x4ec0 (20160) - FSETP.GT.AND P5, PT, R9.reuse, c[0x0][0x220], PT ;
 Instr 1261 @ 0x4ed0 (20176) - FSEL R9, R9, c[0x0][0x220], !P5 ;
 Instr 1262 @ 0x4ee0 (20192) - FSETP.GT.AND P5, PT, R8, c[0x0][0x220], PT ;
 Instr 1263 @ 0x4ef0 (20208) - F2F.F16.F32 R13, R6 ;
 Instr 1264 @ 0x4f00 (20224) - PRMT R5, R10, 0x5410, R11 ;
 Instr 1265 @ 0x4f10 (20240) - FSEL R8, R8, c[0x0][0x220], !P5 ;
 Instr 1266 @ 0x4f20 (20256) - ISETP.GE.AND P5, PT, R12, RZ, PT ;
 Instr 1267 @ 0x4f30 (20272) - F2F.F16.F32 R14, R7 ;
 Instr 1268 @ 0x4f40 (20288) - PRMT R6, R4, 0x5410, R15 ;
 Instr 1269 @ 0x4f50 (20304) - F2F.F16.F32 R9, R9 ;
 Instr 1270 @ 0x4f60 (20320) - @P5 IMAD.MOV.U32 R17, RZ, RZ, 0x2 ;
 Instr 1271 @ 0x4f70 (20336) - @P5 IMAD.WIDE R16, R12, R17, c[0x0][0x170] ;
 Instr 1272 @ 0x4f80 (20352) - F2F.F16.F32 R8, R8 ;
 Instr 1273 @ 0x4f90 (20368) - PRMT R7, R13, 0x5410, R14 ;
 Instr 1274 @ 0x4fa0 (20384) - PRMT R4, R8, 0x5410, R9 ;
 Instr 1275 @ 0x4fb0 (20400) - @P5 STG.E.128.SYS [R16], R4 ;
Basic block id 68 - num instructions 65
 Instr 1276 @ 0x4fc0 (20416) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1277 @ 0x4fd0 (20432) - IADD3 R46, R3, 0x20, RZ ;
 Instr 1278 @ 0x4fe0 (20448) - MOV R42, RZ ;
 Instr 1279 @ 0x4ff0 (20464) - ISETP.LT.AND P4, PT, R46.reuse, c[0x0][0x3c4], !P4 ;
 Instr 1280 @ 0x5000 (20480) - @P2 IMAD.HI.U32 R3, R46, c[0x0][0x3d8], RZ ;
 Instr 1281 @ 0x5010 (20496) - ISETP.GE.AND P5, PT, R54, 0x2, PT ;
 Instr 1282 @ 0x5020 (20512) - @P2 SHF.R.U32.HI R3, RZ, c[0x0][0x3dc], R3 ;
 Instr 1283 @ 0x5030 (20528) - @P2 IADD3 R5, -R3, RZ, RZ ;
 Instr 1284 @ 0x5040 (20544) - @P2 IMAD R42, R5, c[0x0][0x3c8], R46 ;
 Instr 1285 @ 0x5050 (20560) - @P2 MOV R46, R3 ;
 Instr 1286 @ 0x5060 (20576) - MOV R3, RZ ;
 Instr 1287 @ 0x5070 (20592) - STS.64 [R2], R20 ;
 Instr 1288 @ 0x5080 (20608) - @P1 IMAD.HI.U32 R8, R42, c[0x0][0x3e0], RZ ;
 Instr 1289 @ 0x5090 (20624) - STS.64 [R2+0x10], R24 ;
 Instr 1290 @ 0x50a0 (20640) - IMAD R49, R46, c[0x0][0x244], R49 ;
 Instr 1291 @ 0x50b0 (20656) - STS.64 [R2+0x900], R22 ;
 Instr 1292 @ 0x50c0 (20672) - @P1 SHF.R.U32.HI R20, RZ, c[0x0][0x3e4], R8 ;
 Instr 1293 @ 0x50d0 (20688) - STS.64 [R2+0x910], R26 ;
 Instr 1294 @ 0x50e0 (20704) - MOV R21, RZ ;
 Instr 1295 @ 0x50f0 (20720) - STS.64 [R2+0x20], R28 ;
 Instr 1296 @ 0x5100 (20736) - @P1 IADD3 R23, -R20, RZ, RZ ;
 Instr 1297 @ 0x5110 (20752) - STS.64 [R2+0x30], R32 ;
 Instr 1298 @ 0x5120 (20768) - STS.64 [R2+0x920], R30 ;
 Instr 1299 @ 0x5130 (20784) - @P1 IMAD R21, R23, c[0x0][0x3cc], R42 ;
 Instr 1300 @ 0x5140 (20800) - @P1 MOV R42, R20 ;
 Instr 1301 @ 0x5150 (20816) - STS.64 [R2+0x930], R34 ;
 Instr 1302 @ 0x5160 (20832) - IMAD R42, R42, c[0x0][0x248], R49 ;
 Instr 1303 @ 0x5170 (20848) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1304 @ 0x5180 (20864) - @P0 IMAD.HI.U32 R2, R21, c[0x0][0x3e8], RZ ;
 Instr 1305 @ 0x5190 (20880) - @P0 SHF.R.U32.HI R2, RZ, c[0x0][0x3ec], R2 ;
 Instr 1306 @ 0x51a0 (20896) - @P0 IADD3 R22, -R2, RZ, RZ ;
 Instr 1307 @ 0x51b0 (20912) - @P0 IMAD R3, R22, c[0x0][0x1b4], R21 ;
 Instr 1308 @ 0x51c0 (20928) - @P0 MOV R21, R2 ;
 Instr 1309 @ 0x51d0 (20944) - LDS.U.128 R12, [R60.X16] ;
 Instr 1310 @ 0x51e0 (20960) - IMAD R2, R21, c[0x0][0x24c], R42 ;
 Instr 1311 @ 0x51f0 (20976) - IMAD R2, R3, c[0x0][0x250], R2 ;
 Instr 1312 @ 0x5200 (20992) - LDS.U.128 R4, [R60.X16+0x40] ;
 Instr 1313 @ 0x5210 (21008) - SEL R2, R2, 0xffffffff, P4 ;
 Instr 1314 @ 0x5220 (21024) - LDS.U.128 R8, [R60.X16+0x90] ;
 Instr 1315 @ 0x5230 (21040) - LDS.U.128 R16, [R60.X16+0xd0] ;
 Instr 1316 @ 0x5240 (21056) - FADD R5, R13, R5 ;
 Instr 1317 @ 0x5250 (21072) - FADD R7, R15, R7 ;
 Instr 1318 @ 0x5260 (21088) - FADD R23, R12, R4 ;
 Instr 1319 @ 0x5270 (21104) - FADD R3, R14, R6 ;
 Instr 1320 @ 0x5280 (21120) - FMUL R23, R23, R0.reuse ;
 Instr 1321 @ 0x5290 (21136) - FMUL R14, R7, R0 ;
 Instr 1322 @ 0x52a0 (21152) - MOV R4, R23 ;
 Instr 1323 @ 0x52b0 (21168) - MOV R7, R14 ;
 Instr 1324 @ 0x52c0 (21184) - FADD R15, R8, R16 ;
 Instr 1325 @ 0x52d0 (21200) - FADD R9, R9, R17 ;
 Instr 1326 @ 0x52e0 (21216) - FADD R13, R10, R18 ;
 Instr 1327 @ 0x52f0 (21232) - FADD R11, R11, R19 ;
 Instr 1328 @ 0x5300 (21248) - FMUL R16, R5, R0.reuse ;
 Instr 1329 @ 0x5310 (21264) - FMUL R17, R3, R0.reuse ;
 Instr 1330 @ 0x5320 (21280) - FMUL R15, R15, R0 ;
 Instr 1331 @ 0x5330 (21296) - MOV R5, R16 ;
 Instr 1332 @ 0x5340 (21312) - FMUL R12, R9, R0.reuse ;
 Instr 1333 @ 0x5350 (21328) - MOV R6, R17 ;
 Instr 1334 @ 0x5360 (21344) - FMUL R13, R13, R0.reuse ;
 Instr 1335 @ 0x5370 (21360) - MOV R8, R15 ;
 Instr 1336 @ 0x5380 (21376) - FMUL R0, R11, R0 ;
 Instr 1337 @ 0x5390 (21392) - MOV R9, R12 ;
 Instr 1338 @ 0x53a0 (21408) - MOV R10, R13 ;
 Instr 1339 @ 0x53b0 (21424) - MOV R11, R0 ;
 Instr 1340 @ 0x53c0 (21440) - @!P5 BRA 0x5740 ;
Basic block id 69 - num instructions 6
 Instr 1341 @ 0x53d0 (21456) - S2R R18, SR_TID.X ;
 Instr 1342 @ 0x53e0 (21472) - ISETP.GE.AND P0, PT, R48, 0x1, PT ;
 Instr 1343 @ 0x53f0 (21488) - IMAD.SHL.U32 R62, R62, 0x80, RZ ;
 Instr 1344 @ 0x5400 (21504) - SHF.R.S32.HI R3, RZ, 0x1f, R62 ;
 Instr 1345 @ 0x5410 (21520) - IMAD R61, R61, 0x80, R18 ;
 Instr 1346 @ 0x5420 (21536) - @!P0 BRA 0x5690 ;
Basic block id 70 - num instructions 13
 Instr 1347 @ 0x5430 (21552) - MOV R9, R41 ;
 Instr 1348 @ 0x5440 (21568) - IMAD.MOV.U32 R8, RZ, RZ, R44 ;
 Instr 1349 @ 0x5450 (21584) - UMOV UR4, URZ ;
 Instr 1350 @ 0x5460 (21600) - IMAD.SHL.U32 R18, R61, 0x10, RZ ;
 Instr 1351 @ 0x5470 (21616) - IMAD.WIDE R6, R62, 0x20, R8 ;
 Instr 1352 @ 0x5480 (21632) - SHF.R.S32.HI R19, RZ, 0x1f, R18.reuse ;
 Instr 1353 @ 0x5490 (21648) - IMAD R4, R3, 0x30, RZ ;
 Instr 1354 @ 0x54a0 (21664) - IADD3 R20, P1, P0, R6, c[0x0][0x2a8], R18 ;
 Instr 1355 @ 0x54b0 (21680) - IMAD.WIDE.U32 R8, R62, 0x30, R8 ;
 Instr 1356 @ 0x54c0 (21696) - IADD3.X R21, R7, c[0x0][0x2ac], R19.reuse, P1, P0 ;
 Instr 1357 @ 0x54d0 (21712) - IMAD.IADD R4, R9, 0x1, R4 ;
 Instr 1358 @ 0x54e0 (21728) - IADD3 R18, P4, P2, R8, c[0x0][0x2a8], R18 ;
 Instr 1359 @ 0x54f0 (21744) - IADD3.X R19, R4, c[0x0][0x2ac], R19, P4, P2 ;
Basic block id 71 - num instructions 17
 Instr 1360 @ 0x5500 (21760) - LDG.E.128.STRONG.GPU R8, [R20] ;
 Instr 1361 @ 0x5510 (21776) - LDG.E.128.STRONG.GPU R4, [R18] ;
 Instr 1362 @ 0x5520 (21792) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 1363 @ 0x5530 (21808) - IADD3 R20, P0, R20, c[0x0][0x2a0], RZ ;
 Instr 1364 @ 0x5540 (21824) - ISETP.LE.AND P2, PT, R48, UR4, PT ;
 Instr 1365 @ 0x5550 (21840) - IADD3 R18, P1, R18, c[0x0][0x2a0], RZ ;
 Instr 1366 @ 0x5560 (21856) - IADD3.X R21, R21, c[0x0][0x2a4], RZ, P0, !PT ;
 Instr 1367 @ 0x5570 (21872) - IADD3.X R19, R19, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1368 @ 0x5580 (21888) - FADD R23, R8, R23 ;
 Instr 1369 @ 0x5590 (21904) - FADD R16, R9, R16 ;
 Instr 1370 @ 0x55a0 (21920) - FADD R17, R10, R17 ;
 Instr 1371 @ 0x55b0 (21936) - FADD R14, R11, R14 ;
 Instr 1372 @ 0x55c0 (21952) - FADD R15, R4, R15 ;
 Instr 1373 @ 0x55d0 (21968) - FADD R12, R5, R12 ;
 Instr 1374 @ 0x55e0 (21984) - FADD R13, R6, R13 ;
 Instr 1375 @ 0x55f0 (22000) - FADD R0, R7, R0 ;
 Instr 1376 @ 0x5600 (22016) - @!P2 BRA 0x5500 ;
Basic block id 72 - num instructions 8
 Instr 1377 @ 0x5610 (22032) - IMAD.MOV.U32 R4, RZ, RZ, R23 ;
 Instr 1378 @ 0x5620 (22048) - MOV R6, R17 ;
 Instr 1379 @ 0x5630 (22064) - IMAD.MOV.U32 R5, RZ, RZ, R16 ;
 Instr 1380 @ 0x5640 (22080) - MOV R8, R15 ;
 Instr 1381 @ 0x5650 (22096) - IMAD.MOV.U32 R7, RZ, RZ, R14 ;
 Instr 1382 @ 0x5660 (22112) - MOV R10, R13 ;
 Instr 1383 @ 0x5670 (22128) - IMAD.MOV.U32 R9, RZ, RZ, R12 ;
 Instr 1384 @ 0x5680 (22144) - MOV R11, R0 ;
Basic block id 73 - num instructions 1
 Instr 1385 @ 0x5690 (22160) - @P3 BRA 0x5740 ;
Basic block id 74 - num instructions 10
 Instr 1386 @ 0x56a0 (22176) - IMAD.MOV.U32 R12, RZ, RZ, R44 ;
 Instr 1387 @ 0x56b0 (22192) - IMAD.MOV.U32 R13, RZ, RZ, R41 ;
 Instr 1388 @ 0x56c0 (22208) - IMAD.WIDE R12, R62, 0x20, R12 ;
 Instr 1389 @ 0x56d0 (22224) - IMAD.WIDE R12, R61, 0x10, R12 ;
 Instr 1390 @ 0x56e0 (22240) - IADD3 R14, P0, R12, c[0x0][0x2a8], RZ ;
 Instr 1391 @ 0x56f0 (22256) - IADD3.X R15, R13, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 1392 @ 0x5700 (22272) - LEA R12, P0, R62.reuse, R14, 0x4 ;
 Instr 1393 @ 0x5710 (22288) - LEA.HI.X R13, R62, R15, R3, 0x4, P0 ;
 Instr 1394 @ 0x5720 (22304) - STG.E.128.SYS [R14], R4 ;
 Instr 1395 @ 0x5730 (22320) - STG.E.128.SYS [R12], R8 ;
Basic block id 75 - num instructions 1
 Instr 1396 @ 0x5740 (22336) - @!P3 BRA 0x5b50 ;
Basic block id 76 - num instructions 64
 Instr 1397 @ 0x5750 (22352) - HADD2.F32 R3, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1398 @ 0x5760 (22368) - HADD2.F32 R0, R37.H1_H1, -RZ.H0_H0 ;
 Instr 1399 @ 0x5770 (22384) - FADD R6, R3, R6 ;
 Instr 1400 @ 0x5780 (22400) - HADD2.F32 R3, R38.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1401 @ 0x5790 (22416) - FADD R0, R0, R7 ;
 Instr 1402 @ 0x57a0 (22432) - HADD2.F32 R38, R38.H1_H1, -RZ.H0_H0 ;
 Instr 1403 @ 0x57b0 (22448) - FSETP.GEU.AND P0, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 1404 @ 0x57c0 (22464) - HADD2.F32 R7, R39.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1405 @ 0x57d0 (22480) - FSEL R6, R6, c[0x0][0x210], P0 ;
 Instr 1406 @ 0x57e0 (22496) - FADD R3, R3, R8 ;
 Instr 1407 @ 0x57f0 (22512) - FSETP.GEU.AND P0, PT, R0, c[0x0][0x210], PT ;
 Instr 1408 @ 0x5800 (22528) - FADD R38, R38, R9 ;
 Instr 1409 @ 0x5810 (22544) - FSETP.GT.AND P1, PT, R6, c[0x0][0x220], PT ;
 Instr 1410 @ 0x5820 (22560) - HADD2.F32 R8, R39.H1_H1, -RZ.H0_H0 ;
 Instr 1411 @ 0x5830 (22576) - FSEL R0, R0, c[0x0][0x210], P0 ;
 Instr 1412 @ 0x5840 (22592) - FADD R7, R7, R10 ;
 Instr 1413 @ 0x5850 (22608) - FSETP.GEU.AND P0, PT, R3, c[0x0][0x210], PT ;
 Instr 1414 @ 0x5860 (22624) - FSEL R6, R6, c[0x0][0x220], !P1 ;
 Instr 1415 @ 0x5870 (22640) - FSETP.GT.AND P1, PT, R0, c[0x0][0x220], PT ;
 Instr 1416 @ 0x5880 (22656) - FADD R8, R8, R11 ;
 Instr 1417 @ 0x5890 (22672) - FSEL R3, R3, c[0x0][0x210], P0 ;
 Instr 1418 @ 0x58a0 (22688) - FSEL R0, R0, c[0x0][0x220], !P1 ;
 Instr 1419 @ 0x58b0 (22704) - F2F.F16.F32 R6, R6 ;
 Instr 1420 @ 0x58c0 (22720) - FSETP.GT.AND P1, PT, R3, c[0x0][0x220], PT ;
 Instr 1421 @ 0x58d0 (22736) - FSETP.GEU.AND P0, PT, R38, c[0x0][0x210], PT ;
 Instr 1422 @ 0x58e0 (22752) - FSEL R10, R3, c[0x0][0x220], !P1 ;
 Instr 1423 @ 0x58f0 (22768) - HADD2.F32 R3, R36.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1424 @ 0x5900 (22784) - FSEL R38, R38, c[0x0][0x210], P0 ;
 Instr 1425 @ 0x5910 (22800) - HADD2.F32 R36, R36.H1_H1, -RZ.H0_H0 ;
 Instr 1426 @ 0x5920 (22816) - FSETP.GEU.AND P0, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 1427 @ 0x5930 (22832) - F2F.F16.F32 R9, R0 ;
 Instr 1428 @ 0x5940 (22848) - FSETP.GT.AND P1, PT, R38, c[0x0][0x220], PT ;
 Instr 1429 @ 0x5950 (22864) - FSEL R7, R7, c[0x0][0x210], P0 ;
 Instr 1430 @ 0x5960 (22880) - FADD R3, R3, R4 ;
 Instr 1431 @ 0x5970 (22896) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 1432 @ 0x5980 (22912) - FADD R36, R36, R5 ;
 Instr 1433 @ 0x5990 (22928) - FSEL R38, R38, c[0x0][0x220], !P1 ;
 Instr 1434 @ 0x59a0 (22944) - F2F.F16.F32 R10, R10 ;
 Instr 1435 @ 0x59b0 (22960) - FSETP.GT.AND P1, PT, R7, c[0x0][0x220], PT ;
 Instr 1436 @ 0x59c0 (22976) - FSEL R8, R8, c[0x0][0x210], P0 ;
 Instr 1437 @ 0x59d0 (22992) - FSETP.GEU.AND P0, PT, R3, c[0x0][0x210], PT ;
 Instr 1438 @ 0x59e0 (23008) - FSEL R7, R7, c[0x0][0x220], !P1 ;
 Instr 1439 @ 0x59f0 (23024) - F2F.F16.F32 R11, R38 ;
 Instr 1440 @ 0x5a00 (23040) - FSETP.GT.AND P1, PT, R8, c[0x0][0x220], PT ;
 Instr 1441 @ 0x5a10 (23056) - FSEL R3, R3, c[0x0][0x210], P0 ;
 Instr 1442 @ 0x5a20 (23072) - FSETP.GEU.AND P0, PT, R36, c[0x0][0x210], PT ;
 Instr 1443 @ 0x5a30 (23088) - FSEL R0, R8, c[0x0][0x220], !P1 ;
 Instr 1444 @ 0x5a40 (23104) - F2F.F16.F32 R7, R7 ;
 Instr 1445 @ 0x5a50 (23120) - FSETP.GT.AND P1, PT, R3.reuse, c[0x0][0x220], PT ;
 Instr 1446 @ 0x5a60 (23136) - FSEL R36, R36, c[0x0][0x210], P0 ;
 Instr 1447 @ 0x5a70 (23152) - FSEL R3, R3, c[0x0][0x220], !P1 ;
 Instr 1448 @ 0x5a80 (23168) - FSETP.GT.AND P1, PT, R36, c[0x0][0x220], PT ;
 Instr 1449 @ 0x5a90 (23184) - F2F.F16.F32 R0, R0 ;
 Instr 1450 @ 0x5aa0 (23200) - ISETP.GE.AND P0, PT, R2, RZ, PT ;
 Instr 1451 @ 0x5ab0 (23216) - FSEL R4, R36, c[0x0][0x220], !P1 ;
 Instr 1452 @ 0x5ac0 (23232) - PRMT R5, R6, 0x5410, R9 ;
 Instr 1453 @ 0x5ad0 (23248) - PRMT R6, R10, 0x5410, R11 ;
 Instr 1454 @ 0x5ae0 (23264) - F2F.F16.F32 R3, R3 ;
 Instr 1455 @ 0x5af0 (23280) - @P0 IMAD.MOV.U32 R13, RZ, RZ, 0x2 ;
 Instr 1456 @ 0x5b00 (23296) - F2F.F16.F32 R4, R4 ;
 Instr 1457 @ 0x5b10 (23312) - @P0 IMAD.WIDE R12, R2, R13, c[0x0][0x170] ;
 Instr 1458 @ 0x5b20 (23328) - PRMT R7, R7, 0x5410, R0 ;
 Instr 1459 @ 0x5b30 (23344) - PRMT R4, R3, 0x5410, R4 ;
 Instr 1460 @ 0x5b40 (23360) - @P0 STG.E.128.SYS [R12], R4 ;
Basic block id 77 - num instructions 2
 Instr 1461 @ 0x5b50 (23376) - ISETP.NE.AND P0, PT, RZ, UR5, PT ;
 Instr 1462 @ 0x5b60 (23392) - @P0 BRA 0x7f50 ;
Basic block id 78 - num instructions 6
 Instr 1463 @ 0x5b70 (23408) - S2R R0, SR_TID.X ;
 Instr 1464 @ 0x5b80 (23424) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1465 @ 0x5b90 (23440) - BSSY B0, 0x5cf0 ;
 Instr 1466 @ 0x5ba0 (23456) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1467 @ 0x5bb0 (23472) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1468 @ 0x5bc0 (23488) - @P0 BRA 0x5ce0 ;
Basic block id 79 - num instructions 5
 Instr 1469 @ 0x5bd0 (23504) - MEMBAR.SC.GPU ;
 Instr 1470 @ 0x5be0 (23520) - ISETP.NE.AND P1, PT, R63, RZ, PT ;
 Instr 1471 @ 0x5bf0 (23536) - ERRBAR;
 Instr 1472 @ 0x5c00 (23552) - CCTL.IVALL ;
 Instr 1473 @ 0x5c10 (23568) - @P1 BRA 0x5c80 ;
Basic block id 80 - num instructions 6
 Instr 1474 @ 0x5c20 (23584) - S2R R0, SR_LANEID ;
 Instr 1475 @ 0x5c30 (23600) - VOTEU.ANY UR5, UPT, PT ;
 Instr 1476 @ 0x5c40 (23616) - UFLO.U32 UR4, UR5 ;
 Instr 1477 @ 0x5c50 (23632) - POPC R3, UR5 ;
 Instr 1478 @ 0x5c60 (23648) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 1479 @ 0x5c70 (23664) - @P0 RED.E.ADD.STRONG.GPU [R52], R3 ;
Basic block id 81 - num instructions 6
 Instr 1480 @ 0x5c80 (23680) - S2R R0, SR_LANEID ;
 Instr 1481 @ 0x5c90 (23696) - VOTEU.ANY UR5, UPT, PT ;
 Instr 1482 @ 0x5ca0 (23712) - UFLO.U32 UR4, UR5 ;
 Instr 1483 @ 0x5cb0 (23728) - POPC R3, UR5 ;
 Instr 1484 @ 0x5cc0 (23744) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 1485 @ 0x5cd0 (23760) - @P0 RED.E.ADD.STRONG.GPU [R50], R3 ;
Basic block id 82 - num instructions 2
 Instr 1486 @ 0x5ce0 (23776) - BSYNC B0 ;
 Instr 1487 @ 0x5cf0 (23792) - BRA 0x7f50 ;
Basic block id 83 - num instructions 8
 Instr 1488 @ 0x5d00 (23808) - ISETP.NE.AND P0, PT, R42, 0x1, PT ;
 Instr 1489 @ 0x5d10 (23824) - UMOV UR5, 0x1 ;
 Instr 1490 @ 0x5d20 (23840) - IMAD.MOV.U32 R43, RZ, RZ, RZ ;
 Instr 1491 @ 0x5d30 (23856) - MOV R65, RZ ;
 Instr 1492 @ 0x5d40 (23872) - IMAD.MOV.U32 R72, RZ, RZ, RZ ;
 Instr 1493 @ 0x5d50 (23888) - CS2R R70, SRZ ;
 Instr 1494 @ 0x5d60 (23904) - CS2R R68, SRZ ;
 Instr 1495 @ 0x5d70 (23920) - @!P0 BRA 0x6350 ;
Basic block id 84 - num instructions 5
 Instr 1496 @ 0x5d80 (23936) - IMAD.MOV.U32 R45, RZ, RZ, c[0x0][0x298] ;
 Instr 1497 @ 0x5d90 (23952) - ISETP.NE.AND P1, PT, R42, c[0x0][0x294], PT ;
 Instr 1498 @ 0x5da0 (23968) - IMAD.MOV.U32 R72, RZ, RZ, R41 ;
 Instr 1499 @ 0x5db0 (23984) - ISETP.EQ.AND P0, PT, R45, 0x2, PT ;
 Instr 1500 @ 0x5dc0 (24000) - @!P1 BRA P0, 0x6350 ;
Basic block id 85 - num instructions 5
 Instr 1501 @ 0x5dd0 (24016) - ISETP.NE.AND P2, PT, R63, RZ, PT ;
 Instr 1502 @ 0x5de0 (24032) - ISETP.EQ.AND P0, PT, R45, 0x1, PT ;
 Instr 1503 @ 0x5df0 (24048) - MOV R42, 0x4 ;
 Instr 1504 @ 0x5e00 (24064) - IMAD.WIDE R68, R61, R42, c[0x0][0x2c0] ;
 Instr 1505 @ 0x5e10 (24080) - @P2 BRA P0, 0x6190 ;
Basic block id 86 - num instructions 35
 Instr 1506 @ 0x5e20 (24096) - IABS R46, c[0x0][0x294] ;
 Instr 1507 @ 0x5e30 (24112) - IMAD.MOV.U32 R48, RZ, RZ, RZ ;
 Instr 1508 @ 0x5e40 (24128) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1509 @ 0x5e50 (24144) - BSSY B0, 0x6100 ;
 Instr 1510 @ 0x5e60 (24160) - I2F.RP R50, R46 ;
 Instr 1511 @ 0x5e70 (24176) - MUFU.RCP R49, R50 ;
 Instr 1512 @ 0x5e80 (24192) - IADD3 R49, R49, 0xffffffe, RZ ;
 Instr 1513 @ 0x5e90 (24208) - F2I.FTZ.U32.TRUNC.NTZ R49, R49 ;
 Instr 1514 @ 0x5ea0 (24224) - IMAD.MOV R44, RZ, RZ, -R49.reuse ;
 Instr 1515 @ 0x5eb0 (24240) - IMAD R45, R44, R46, RZ ;
 Instr 1516 @ 0x5ec0 (24256) - IABS R44, R41 ;
 Instr 1517 @ 0x5ed0 (24272) - IMAD.HI.U32 R48, R49, R45, R48 ;
 Instr 1518 @ 0x5ee0 (24288) - IMAD.MOV.U32 R47, RZ, RZ, R44 ;
 Instr 1519 @ 0x5ef0 (24304) - IMAD.HI.U32 R44, R48, R47, RZ ;
 Instr 1520 @ 0x5f00 (24320) - IMAD.MOV R45, RZ, RZ, -R44 ;
 Instr 1521 @ 0x5f10 (24336) - IMAD R45, R46, R45, R47 ;
 Instr 1522 @ 0x5f20 (24352) - ISETP.GT.U32.AND P0, PT, R46, R45, PT ;
 Instr 1523 @ 0x5f30 (24368) - @!P0 IMAD.IADD R45, R45, 0x1, -R46 ;
 Instr 1524 @ 0x5f40 (24384) - @!P0 IADD3 R44, R44, 0x1, RZ ;
 Instr 1525 @ 0x5f50 (24400) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x294], PT ;
 Instr 1526 @ 0x5f60 (24416) - ISETP.GE.U32.AND P2, PT, R45, R46, PT ;
 Instr 1527 @ 0x5f70 (24432) - LOP3.LUT R45, R41, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 1528 @ 0x5f80 (24448) - ISETP.GE.AND P1, PT, R45, RZ, PT ;
 Instr 1529 @ 0x5f90 (24464) - @P2 IADD3 R44, R44, 0x1, RZ ;
 Instr 1530 @ 0x5fa0 (24480) - @!P1 IMAD.MOV R44, RZ, RZ, -R44 ;
 Instr 1531 @ 0x5fb0 (24496) - @!P0 LOP3.LUT R44, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 1532 @ 0x5fc0 (24512) - ISETP.NE.AND P0, PT, R40, RZ, PT ;
 Instr 1533 @ 0x5fd0 (24528) - ISETP.NE.AND P1, PT, R44.reuse, RZ, PT ;
 Instr 1534 @ 0x5fe0 (24544) - IMAD.MOV R72, RZ, RZ, -R44 ;
 Instr 1535 @ 0x5ff0 (24560) - ISETP.EQ.OR P0, PT, R44, RZ, P0 ;
 Instr 1536 @ 0x6000 (24576) - SEL R65, RZ, 0x1, !P1 ;
 Instr 1537 @ 0x6010 (24592) - IMAD R72, R72, c[0x0][0x294], R41 ;
 Instr 1538 @ 0x6020 (24608) - IMAD R71, R62, R72, R61 ;
 Instr 1539 @ 0x6030 (24624) - IMAD.WIDE R70, R71, R42, c[0x0][0x2b8] ;
 Instr 1540 @ 0x6040 (24640) - @P0 BRA 0x60f0 ;
Basic block id 87 - num instructions 4
 Instr 1541 @ 0x6050 (24656) - LDG.E.STRONG.GPU R41, [R70] ;
 Instr 1542 @ 0x6060 (24672) - ISETP.NE.AND P0, PT, R41, R44, PT ;
 Instr 1543 @ 0x6070 (24688) - CCTL.IVALL ;
 Instr 1544 @ 0x6080 (24704) - @!P0 BRA 0x60f0 ;
Basic block id 88 - num instructions 5
 Instr 1545 @ 0x6090 (24720) - VOTE.ANY R40, PT, PT ;
 Instr 1546 @ 0x60a0 (24736) - YIELD ;
 Instr 1547 @ 0x60b0 (24752) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1548 @ 0x60c0 (24768) - LOP3.LUT P0, RZ, R40, UR4, RZ, 0xc, !PT ;
 Instr 1549 @ 0x60d0 (24784) - @!P0 BRA.U 0x6050 ;
Basic block id 89 - num instructions 1
 Instr 1550 @ 0x60e0 (24800) - BRA 0x6090 ;
Basic block id 90 - num instructions 2
 Instr 1551 @ 0x60f0 (24816) - BSYNC B0 ;
 Instr 1552 @ 0x6100 (24832) - BRA.CONV 0x6140 ;
Basic block id 91 - num instructions 3
 Instr 1553 @ 0x6110 (24848) - MOV R41, 0xffffffff ;
 Instr 1554 @ 0x6120 (24864) - MOV R40, 0x6140 ;
 Instr 1555 @ 0x6130 (24880) - CALL.REL.NOINC 0x7f70 ;
Basic block id 92 - num instructions 5
 Instr 1556 @ 0x6140 (24896) - NOP ;
 Instr 1557 @ 0x6150 (24912) - WARPSYNC 0xffffffff ;
 Instr 1558 @ 0x6160 (24928) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1559 @ 0x6170 (24944) - UMOV UR5, URZ ;
 Instr 1560 @ 0x6180 (24960) - BRA 0x6350 ;
Basic block id 93 - num instructions 8
 Instr 1561 @ 0x6190 (24976) - ISETP.NE.AND P0, PT, R40, RZ, PT ;
 Instr 1562 @ 0x61a0 (24992) - IMAD.MOV.U32 R65, RZ, RZ, c[0x0][0x294] ;
 Instr 1563 @ 0x61b0 (25008) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1564 @ 0x61c0 (25024) - BSSY B0, 0x62c0 ;
 Instr 1565 @ 0x61d0 (25040) - ISETP.EQ.OR P0, PT, R44, RZ, P0 ;
 Instr 1566 @ 0x61e0 (25056) - IADD3 R65, R65, -0x1, RZ ;
 Instr 1567 @ 0x61f0 (25072) - @P1 IMAD.MOV R65, RZ, RZ, c[0x0][0x294] ;
 Instr 1568 @ 0x6200 (25088) - @P0 BRA 0x62b0 ;
Basic block id 94 - num instructions 4
 Instr 1569 @ 0x6210 (25104) - LDG.E.STRONG.GPU R41, [R68] ;
 Instr 1570 @ 0x6220 (25120) - ISETP.NE.AND P0, PT, R41, R44, PT ;
 Instr 1571 @ 0x6230 (25136) - CCTL.IVALL ;
 Instr 1572 @ 0x6240 (25152) - @!P0 BRA 0x62b0 ;
Basic block id 95 - num instructions 5
 Instr 1573 @ 0x6250 (25168) - VOTE.ANY R40, PT, PT ;
 Instr 1574 @ 0x6260 (25184) - YIELD ;
 Instr 1575 @ 0x6270 (25200) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1576 @ 0x6280 (25216) - LOP3.LUT P0, RZ, R40, UR4, RZ, 0xc, !PT ;
 Instr 1577 @ 0x6290 (25232) - @!P0 BRA.U 0x6210 ;
Basic block id 96 - num instructions 1
 Instr 1578 @ 0x62a0 (25248) - BRA 0x6250 ;
Basic block id 97 - num instructions 2
 Instr 1579 @ 0x62b0 (25264) - BSYNC B0 ;
 Instr 1580 @ 0x62c0 (25280) - BRA.CONV 0x6300 ;
Basic block id 98 - num instructions 3
 Instr 1581 @ 0x62d0 (25296) - MOV R41, 0xffffffff ;
 Instr 1582 @ 0x62e0 (25312) - MOV R40, 0x6300 ;
 Instr 1583 @ 0x62f0 (25328) - CALL.REL.NOINC 0x7f70 ;
Basic block id 99 - num instructions 5
 Instr 1584 @ 0x6300 (25344) - NOP ;
 Instr 1585 @ 0x6310 (25360) - WARPSYNC 0xffffffff ;
 Instr 1586 @ 0x6320 (25376) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1587 @ 0x6330 (25392) - MOV R72, RZ ;
 Instr 1588 @ 0x6340 (25408) - UMOV UR5, URZ ;
Basic block id 100 - num instructions 82
 Instr 1589 @ 0x6350 (25424) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 1590 @ 0x6360 (25440) - CS2R R44, SRZ ;
 Instr 1591 @ 0x6370 (25456) - MOV R46, R3 ;
 Instr 1592 @ 0x6380 (25472) - IMAD R67, R54, c[0x0][0x254], RZ ;
 Instr 1593 @ 0x6390 (25488) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1594 @ 0x63a0 (25504) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 1595 @ 0x63b0 (25520) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 1596 @ 0x63c0 (25536) - ISETP.GE.AND P3, PT, R54, R85, PT ;
 Instr 1597 @ 0x63d0 (25552) - MOV R66, 0x2 ;
 Instr 1598 @ 0x63e0 (25568) - @P2 IMAD.HI.U32 R40, R3.reuse, c[0x0][0x3d8], RZ ;
 Instr 1599 @ 0x63f0 (25584) - ISETP.LT.AND P4, PT, R3, c[0x0][0x3c4], !P3 ;
 Instr 1600 @ 0x6400 (25600) - ISETP.NE.AND P6, PT, R63, RZ, PT ;
 Instr 1601 @ 0x6410 (25616) - @P2 SHF.R.U32.HI R46, RZ, c[0x0][0x3dc], R40 ;
 Instr 1602 @ 0x6420 (25632) - @P2 IADD3 R40, -R46, RZ, RZ ;
 Instr 1603 @ 0x6430 (25648) - @P2 IMAD R43, R40, c[0x0][0x3c8], R3 ;
 Instr 1604 @ 0x6440 (25664) - @P1 IMAD.HI.U32 R42, R43, c[0x0][0x3e0], RZ ;
 Instr 1605 @ 0x6450 (25680) - @P1 SHF.R.U32.HI R42, RZ, c[0x0][0x3e4], R42 ;
 Instr 1606 @ 0x6460 (25696) - @P1 IADD3 R40, -R42, RZ, RZ ;
 Instr 1607 @ 0x6470 (25712) - @P1 IMAD R45, R40, c[0x0][0x3cc], R43 ;
 Instr 1608 @ 0x6480 (25728) - @P1 MOV R43, R42 ;
 Instr 1609 @ 0x6490 (25744) - IMAD R42, R46, c[0x0][0x244], R67 ;
 Instr 1610 @ 0x64a0 (25760) - @P0 IMAD.HI.U32 R41, R45, c[0x0][0x3e8], RZ ;
 Instr 1611 @ 0x64b0 (25776) - IMAD R42, R43, c[0x0][0x248], R42 ;
 Instr 1612 @ 0x64c0 (25792) - @P0 SHF.R.U32.HI R41, RZ, c[0x0][0x3ec], R41 ;
 Instr 1613 @ 0x64d0 (25808) - @P0 IADD3 R40, -R41, RZ, RZ ;
 Instr 1614 @ 0x64e0 (25824) - @P0 IMAD R44, R40, c[0x0][0x1b4], R45 ;
 Instr 1615 @ 0x64f0 (25840) - @P0 MOV R45, R41 ;
 Instr 1616 @ 0x6500 (25856) - CS2R R40, SRZ ;
 Instr 1617 @ 0x6510 (25872) - IMAD R45, R45, c[0x0][0x24c], R42 ;
 Instr 1618 @ 0x6520 (25888) - CS2R R42, SRZ ;
 Instr 1619 @ 0x6530 (25904) - IMAD R44, R44, c[0x0][0x250], R45 ;
 Instr 1620 @ 0x6540 (25920) - SEL R73, R44, 0xffffffff, P4 ;
 Instr 1621 @ 0x6550 (25936) - ISETP.GE.AND P5, PT, R73.reuse, RZ, PT ;
 Instr 1622 @ 0x6560 (25952) - STS.64 [R2], R4 ;
 Instr 1623 @ 0x6570 (25968) - @P5 IMAD.WIDE R44, R73, R66, c[0x0][0x178] ;
 Instr 1624 @ 0x6580 (25984) - STS.64 [R2+0x10], R8 ;
 Instr 1625 @ 0x6590 (26000) - STS.64 [R2+0x900], R6 ;
 Instr 1626 @ 0x65a0 (26016) - @P5 LDG.E.128.SYS R40, [R44] ;
 Instr 1627 @ 0x65b0 (26032) - MOV R4, c[0x0][0x298] ;
 Instr 1628 @ 0x65c0 (26048) - SHF.R.S32.HI R9, RZ, 0x1f, R72 ;
 Instr 1629 @ 0x65d0 (26064) - STS.64 [R2+0x910], R10 ;
 Instr 1630 @ 0x65e0 (26080) - ISETP.EQ.AND P4, PT, R4, 0x1, P6 ;
 Instr 1631 @ 0x65f0 (26096) - ISETP.LE.AND P6, PT, R66, c[0x0][0x290], PT ;
 Instr 1632 @ 0x6600 (26112) - STS.64 [R2+0x20], R12 ;
 Instr 1633 @ 0x6610 (26128) - IMAD R9, R9, c[0x0][0x2a0], RZ ;
 Instr 1634 @ 0x6620 (26144) - STS.64 [R2+0x30], R16 ;
 Instr 1635 @ 0x6630 (26160) - IMAD R9, R72, c[0x0][0x2a4], R9 ;
 Instr 1636 @ 0x6640 (26176) - STS.64 [R2+0x920], R14 ;
 Instr 1637 @ 0x6650 (26192) - P2R R12, PR, RZ, 0x40 ;
 Instr 1638 @ 0x6660 (26208) - STS.64 [R2+0x930], R18 ;
 Instr 1639 @ 0x6670 (26224) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1640 @ 0x6680 (26240) - LDS.U.128 R56, [R60.X16] ;
 Instr 1641 @ 0x6690 (26256) - LDS.U.128 R48, [R60.X16+0x40] ;
 Instr 1642 @ 0x66a0 (26272) - LDS.U.128 R52, [R60.X16+0x90] ;
 Instr 1643 @ 0x66b0 (26288) - LDS.U.128 R44, [R60.X16+0xd0] ;
 Instr 1644 @ 0x66c0 (26304) - FADD R5, R56, R48 ;
 Instr 1645 @ 0x66d0 (26320) - FADD R57, R57, R49 ;
 Instr 1646 @ 0x66e0 (26336) - FADD R7, R58, R50 ;
 Instr 1647 @ 0x66f0 (26352) - FADD R51, R59, R51 ;
 Instr 1648 @ 0x6700 (26368) - IMAD.WIDE.U32 R48, R72, c[0x0][0x2a0], RZ ;
 Instr 1649 @ 0x6710 (26384) - FMUL R18, R51, R0 ;
 Instr 1650 @ 0x6720 (26400) - FADD R19, R52, R44 ;
 Instr 1651 @ 0x6730 (26416) - FADD R53, R53, R45 ;
 Instr 1652 @ 0x6740 (26432) - IADD3 R45, R49, R9, RZ ;
 Instr 1653 @ 0x6750 (26448) - FADD R17, R54, R46 ;
 Instr 1654 @ 0x6760 (26464) - FADD R11, R55, R47 ;
 Instr 1655 @ 0x6770 (26480) - FMUL R55, R5, R0.reuse ;
 Instr 1656 @ 0x6780 (26496) - FMUL R46, R57, R0 ;
 Instr 1657 @ 0x6790 (26512) - FMUL R47, R7, R0.reuse ;
 Instr 1658 @ 0x67a0 (26528) - MOV R8, R55 ;
 Instr 1659 @ 0x67b0 (26544) - FMUL R19, R19, R0 ;
 Instr 1660 @ 0x67c0 (26560) - MOV R9, R46 ;
 Instr 1661 @ 0x67d0 (26576) - FMUL R16, R53, R0.reuse ;
 Instr 1662 @ 0x67e0 (26592) - MOV R10, R47 ;
 Instr 1663 @ 0x67f0 (26608) - FMUL R17, R17, R0.reuse ;
 Instr 1664 @ 0x6800 (26624) - MOV R4, R19 ;
 Instr 1665 @ 0x6810 (26640) - FMUL R14, R11, R0 ;
 Instr 1666 @ 0x6820 (26656) - MOV R11, R18 ;
 Instr 1667 @ 0x6830 (26672) - MOV R5, R16 ;
 Instr 1668 @ 0x6840 (26688) - MOV R6, R17 ;
 Instr 1669 @ 0x6850 (26704) - MOV R7, R14 ;
 Instr 1670 @ 0x6860 (26720) - @!P6 BRA 0x6be0 ;
Basic block id 101 - num instructions 6
 Instr 1671 @ 0x6870 (26736) - S2R R50, SR_TID.X ;
 Instr 1672 @ 0x6880 (26752) - ISETP.GE.AND P6, PT, R65, 0x1, PT ;
 Instr 1673 @ 0x6890 (26768) - IMAD.SHL.U32 R12, R62, 0x80, RZ ;
 Instr 1674 @ 0x68a0 (26784) - SHF.R.S32.HI R13, RZ, 0x1f, R12 ;
 Instr 1675 @ 0x68b0 (26800) - IMAD R15, R61, 0x80, R50 ;
 Instr 1676 @ 0x68c0 (26816) - @!P6 BRA 0x6b50 ;
Basic block id 102 - num instructions 11
 Instr 1677 @ 0x68d0 (26832) - LEA R50, P6, R12.reuse, R48, 0x4 ;
 Instr 1678 @ 0x68e0 (26848) - IMAD.SHL.U32 R5, R15, 0x10, RZ ;
 Instr 1679 @ 0x68f0 (26864) - P2R R4, PR, RZ, 0x1 ;
 Instr 1680 @ 0x6900 (26880) - UMOV UR4, URZ ;
 Instr 1681 @ 0x6910 (26896) - LEA.HI.X R6, R12, R45, R13, 0x4, P6 ;
 Instr 1682 @ 0x6920 (26912) - SHF.R.S32.HI R53, RZ, 0x1f, R5.reuse ;
 Instr 1683 @ 0x6930 (26928) - IADD3 R50, P0, P6, R50, c[0x0][0x2a8], R5 ;
 Instr 1684 @ 0x6940 (26944) - IADD3.X R51, R6, c[0x0][0x2ac], R53, P0, P6 ;
 Instr 1685 @ 0x6950 (26960) - IADD3 R52, P0, P6, R48, c[0x0][0x2a8], R5 ;
 Instr 1686 @ 0x6960 (26976) - IADD3.X R53, R45, c[0x0][0x2ac], R53, P0, P6 ;
 Instr 1687 @ 0x6970 (26992) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
Basic block id 103 - num instructions 21
 Instr 1688 @ 0x6980 (27008) - MOV R8, R52 ;
 Instr 1689 @ 0x6990 (27024) - MOV R9, R53 ;
 Instr 1690 @ 0x69a0 (27040) - MOV R4, R50 ;
 Instr 1691 @ 0x69b0 (27056) - MOV R5, R51 ;
 Instr 1692 @ 0x69c0 (27072) - IADD3 R52, P6, R52, c[0x0][0x2a0], RZ ;
 Instr 1693 @ 0x69d0 (27088) - LDG.E.128.STRONG.GPU R8, [R8] ;
 Instr 1694 @ 0x69e0 (27104) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 1695 @ 0x69f0 (27120) - IADD3.X R53, R53, c[0x0][0x2a4], RZ, P6, !PT ;
 Instr 1696 @ 0x6a00 (27136) - LDG.E.128.STRONG.GPU R4, [R4] ;
 Instr 1697 @ 0x6a10 (27152) - IADD3 R50, P6, R50, c[0x0][0x2a0], RZ ;
 Instr 1698 @ 0x6a20 (27168) - IADD3.X R51, R51, c[0x0][0x2a4], RZ, P6, !PT ;
 Instr 1699 @ 0x6a30 (27184) - ISETP.LE.AND P6, PT, R65, UR4, PT ;
 Instr 1700 @ 0x6a40 (27200) - FADD R55, R8, R55 ;
 Instr 1701 @ 0x6a50 (27216) - FADD R46, R9, R46 ;
 Instr 1702 @ 0x6a60 (27232) - FADD R47, R10, R47 ;
 Instr 1703 @ 0x6a70 (27248) - FADD R18, R11, R18 ;
 Instr 1704 @ 0x6a80 (27264) - FADD R19, R4, R19 ;
 Instr 1705 @ 0x6a90 (27280) - FADD R16, R5, R16 ;
 Instr 1706 @ 0x6aa0 (27296) - FADD R17, R6, R17 ;
 Instr 1707 @ 0x6ab0 (27312) - FADD R14, R7, R14 ;
 Instr 1708 @ 0x6ac0 (27328) - @!P6 BRA 0x6980 ;
Basic block id 104 - num instructions 8
 Instr 1709 @ 0x6ad0 (27344) - IMAD.MOV.U32 R8, RZ, RZ, R55 ;
 Instr 1710 @ 0x6ae0 (27360) - MOV R10, R47 ;
 Instr 1711 @ 0x6af0 (27376) - IMAD.MOV.U32 R9, RZ, RZ, R46 ;
 Instr 1712 @ 0x6b00 (27392) - MOV R4, R19 ;
 Instr 1713 @ 0x6b10 (27408) - IMAD.MOV.U32 R11, RZ, RZ, R18 ;
 Instr 1714 @ 0x6b20 (27424) - MOV R6, R17 ;
 Instr 1715 @ 0x6b30 (27440) - IMAD.MOV.U32 R5, RZ, RZ, R16 ;
 Instr 1716 @ 0x6b40 (27456) - MOV R7, R14 ;
Basic block id 105 - num instructions 1
 Instr 1717 @ 0x6b50 (27472) - @P4 BRA 0x6be0 ;
Basic block id 106 - num instructions 8
 Instr 1718 @ 0x6b60 (27488) - IMAD.MOV.U32 R44, RZ, RZ, R48 ;
 Instr 1719 @ 0x6b70 (27504) - IMAD.WIDE R14, R15, 0x10, R44 ;
 Instr 1720 @ 0x6b80 (27520) - IADD3 R16, P6, R14, c[0x0][0x2a8], RZ ;
 Instr 1721 @ 0x6b90 (27536) - IADD3.X R17, R15, c[0x0][0x2ac], RZ, P6, !PT ;
 Instr 1722 @ 0x6ba0 (27552) - LEA R14, P6, R12.reuse, R16, 0x4 ;
 Instr 1723 @ 0x6bb0 (27568) - LEA.HI.X R15, R12, R17, R13, 0x4, P6 ;
 Instr 1724 @ 0x6bc0 (27584) - STG.E.128.SYS [R16], R8 ;
 Instr 1725 @ 0x6bd0 (27600) - STG.E.128.SYS [R14], R4 ;
Basic block id 107 - num instructions 1
 Instr 1726 @ 0x6be0 (27616) - @!P4 BRA 0x70d0 ;
Basic block id 108 - num instructions 78
 Instr 1727 @ 0x6bf0 (27632) - HADD2.F32 R13, R37.H0_H0, -RZ.H0_H0 ;
 Instr 1728 @ 0x6c00 (27648) - @P5 IMAD.WIDE R16, R73, R66, c[0x0][0x170] ;
 Instr 1729 @ 0x6c10 (27664) - HADD2.F32 R15, R41.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1730 @ 0x6c20 (27680) - HADD2.F32 R41, R41.H1_H1, -RZ.H0_H0 ;
 Instr 1731 @ 0x6c30 (27696) - FADD R13, R13, R10 ;
 Instr 1732 @ 0x6c40 (27712) - HADD2.F32 R10, R37.H1_H1, -RZ.H0_H0 ;
 Instr 1733 @ 0x6c50 (27728) - FFMA R13, R15, R64, R13 ;
 Instr 1734 @ 0x6c60 (27744) - FSETP.GEU.AND P6, PT, R13.reuse, c[0x0][0x210], PT ;
 Instr 1735 @ 0x6c70 (27760) - FADD R10, R10, R11 ;
 Instr 1736 @ 0x6c80 (27776) - HADD2.F32 R11, R38.H0_H0, -RZ.H0_H0 ;
 Instr 1737 @ 0x6c90 (27792) - FSEL R12, R13, c[0x0][0x210], P6 ;
 Instr 1738 @ 0x6ca0 (27808) - FFMA R10, R41, R64, R10 ;
 Instr 1739 @ 0x6cb0 (27824) - HADD2.F32 R13, R42.H0_H0, -RZ.H0_H0 ;
 Instr 1740 @ 0x6cc0 (27840) - FSETP.GEU.AND P6, PT, R10, c[0x0][0x210], PT ;
 Instr 1741 @ 0x6cd0 (27856) - FADD R11, R11, R4 ;
 Instr 1742 @ 0x6ce0 (27872) - HADD2.F32 R4, R38.H1_H1, -RZ.H0_H0 ;
 Instr 1743 @ 0x6cf0 (27888) - FSEL R10, R10, c[0x0][0x210], P6 ;
 Instr 1744 @ 0x6d00 (27904) - FFMA R11, R13, R64.reuse, R11 ;
 Instr 1745 @ 0x6d10 (27920) - HADD2.F32 R13, R42.H1_H1, -RZ.H0_H0 ;
 Instr 1746 @ 0x6d20 (27936) - FSETP.GEU.AND P6, PT, R11.reuse, c[0x0][0x210], PT ;
 Instr 1747 @ 0x6d30 (27952) - FADD R4, R4, R5 ;
 Instr 1748 @ 0x6d40 (27968) - HADD2.F32 R5, R39.H0_H0, -RZ.H0_H0 ;
 Instr 1749 @ 0x6d50 (27984) - FSEL R11, R11, c[0x0][0x210], P6 ;
 Instr 1750 @ 0x6d60 (28000) - FFMA R4, R13, R64, R4 ;
 Instr 1751 @ 0x6d70 (28016) - HADD2.F32 R13, R43.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1752 @ 0x6d80 (28032) - HADD2.F32 R43, R43.H1_H1, -RZ.H0_H0 ;
 Instr 1753 @ 0x6d90 (28048) - FSETP.GEU.AND P6, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1754 @ 0x6da0 (28064) - FADD R5, R5, R6 ;
 Instr 1755 @ 0x6db0 (28080) - HADD2.F32 R6, R39.H1_H1, -RZ.H0_H0 ;
 Instr 1756 @ 0x6dc0 (28096) - FSEL R4, R4, c[0x0][0x210], P6 ;
 Instr 1757 @ 0x6dd0 (28112) - FFMA R5, R13, R64, R5 ;
 Instr 1758 @ 0x6de0 (28128) - HADD2.F32 R13, R40.H0_H0, -RZ.H0_H0 ;
 Instr 1759 @ 0x6df0 (28144) - FSETP.GEU.AND P6, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 1760 @ 0x6e00 (28160) - FADD R6, R6, R7 ;
 Instr 1761 @ 0x6e10 (28176) - HADD2.F32 R7, R36.H0_H0, -RZ.H0_H0 ;
 Instr 1762 @ 0x6e20 (28192) - FSEL R5, R5, c[0x0][0x210], P6 ;
 Instr 1763 @ 0x6e30 (28208) - FFMA R6, R43, R64, R6 ;
 Instr 1764 @ 0x6e40 (28224) - FSETP.GEU.AND P6, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 1765 @ 0x6e50 (28240) - FADD R7, R7, R8 ;
 Instr 1766 @ 0x6e60 (28256) - HADD2.F32 R8, R36.H1_H1, -RZ.H0_H0 ;
 Instr 1767 @ 0x6e70 (28272) - FSEL R6, R6, c[0x0][0x210], P6 ;
 Instr 1768 @ 0x6e80 (28288) - FFMA R7, R13, R64, R7 ;
 Instr 1769 @ 0x6e90 (28304) - HADD2.F32 R13, R40.H1_H1, -RZ.H0_H0 ;
 Instr 1770 @ 0x6ea0 (28320) - FSETP.GEU.AND P6, PT, R7, c[0x0][0x210], PT ;
 Instr 1771 @ 0x6eb0 (28336) - FADD R8, R8, R9 ;
 Instr 1772 @ 0x6ec0 (28352) - FSEL R7, R7, c[0x0][0x210], P6 ;
 Instr 1773 @ 0x6ed0 (28368) - FFMA R8, R13, R64, R8 ;
 Instr 1774 @ 0x6ee0 (28384) - FSETP.GEU.AND P6, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 1775 @ 0x6ef0 (28400) - FSEL R8, R8, c[0x0][0x210], P6 ;
 Instr 1776 @ 0x6f00 (28416) - FSETP.GT.AND P6, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 1777 @ 0x6f10 (28432) - FSEL R12, R12, c[0x0][0x220], !P6 ;
 Instr 1778 @ 0x6f20 (28448) - FSETP.GT.AND P6, PT, R10.reuse, c[0x0][0x220], PT ;
 Instr 1779 @ 0x6f30 (28464) - FSEL R10, R10, c[0x0][0x220], !P6 ;
 Instr 1780 @ 0x6f40 (28480) - F2F.F16.F32 R12, R12 ;
 Instr 1781 @ 0x6f50 (28496) - FSETP.GT.AND P6, PT, R11.reuse, c[0x0][0x220], PT ;
 Instr 1782 @ 0x6f60 (28512) - FSEL R11, R11, c[0x0][0x220], !P6 ;
 Instr 1783 @ 0x6f70 (28528) - FSETP.GT.AND P6, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 1784 @ 0x6f80 (28544) - F2F.F16.F32 R9, R10 ;
 Instr 1785 @ 0x6f90 (28560) - FSEL R4, R4, c[0x0][0x220], !P6 ;
 Instr 1786 @ 0x6fa0 (28576) - FSETP.GT.AND P6, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 1787 @ 0x6fb0 (28592) - F2F.F16.F32 R11, R11 ;
 Instr 1788 @ 0x6fc0 (28608) - FSEL R5, R5, c[0x0][0x220], !P6 ;
 Instr 1789 @ 0x6fd0 (28624) - FSETP.GT.AND P6, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 1790 @ 0x6fe0 (28640) - FSEL R6, R6, c[0x0][0x220], !P6 ;
 Instr 1791 @ 0x6ff0 (28656) - F2F.F16.F32 R4, R4 ;
 Instr 1792 @ 0x7000 (28672) - FSETP.GT.AND P6, PT, R8.reuse, c[0x0][0x220], PT ;
 Instr 1793 @ 0x7010 (28688) - FSEL R8, R8, c[0x0][0x220], !P6 ;
 Instr 1794 @ 0x7020 (28704) - FSETP.GT.AND P6, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 1795 @ 0x7030 (28720) - F2F.F16.F32 R13, R5 ;
 Instr 1796 @ 0x7040 (28736) - FSEL R7, R7, c[0x0][0x220], !P6 ;
 Instr 1797 @ 0x7050 (28752) - F2F.F16.F32 R14, R6 ;
 Instr 1798 @ 0x7060 (28768) - PRMT R5, R12, 0x5410, R9 ;
 Instr 1799 @ 0x7070 (28784) - F2F.F16.F32 R8, R8 ;
 Instr 1800 @ 0x7080 (28800) - PRMT R6, R11, 0x5410, R4 ;
 Instr 1801 @ 0x7090 (28816) - F2F.F16.F32 R15, R7 ;
 Instr 1802 @ 0x70a0 (28832) - PRMT R7, R13, 0x5410, R14 ;
 Instr 1803 @ 0x70b0 (28848) - PRMT R4, R15, 0x5410, R8 ;
 Instr 1804 @ 0x70c0 (28864) - @P5 STG.E.128.SYS [R16], R4 ;
Basic block id 109 - num instructions 72
 Instr 1805 @ 0x70d0 (28880) - IADD3 R10, R3, 0x20, RZ ;
 Instr 1806 @ 0x70e0 (28896) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1807 @ 0x70f0 (28912) - MOV R7, RZ ;
 Instr 1808 @ 0x7100 (28928) - MOV R8, RZ ;
 Instr 1809 @ 0x7110 (28944) - @P2 IMAD.HI.U32 R3, R10.reuse, c[0x0][0x3d8], RZ ;
 Instr 1810 @ 0x7120 (28960) - ISETP.LT.AND P3, PT, R10, c[0x0][0x3c4], !P3 ;
 Instr 1811 @ 0x7130 (28976) - @P2 SHF.R.U32.HI R3, RZ, c[0x0][0x3dc], R3 ;
 Instr 1812 @ 0x7140 (28992) - @P2 IADD3 R5, -R3, RZ, RZ ;
 Instr 1813 @ 0x7150 (29008) - @P2 IMAD R7, R5, c[0x0][0x3c8], R10 ;
 Instr 1814 @ 0x7160 (29024) - @P2 MOV R10, R3 ;
 Instr 1815 @ 0x7170 (29040) - MOV R5, RZ ;
 Instr 1816 @ 0x7180 (29056) - @P1 IMAD.HI.U32 R6, R7, c[0x0][0x3e0], RZ ;
 Instr 1817 @ 0x7190 (29072) - IMAD R10, R10, c[0x0][0x244], R67 ;
 Instr 1818 @ 0x71a0 (29088) - @P1 SHF.R.U32.HI R6, RZ, c[0x0][0x3e4], R6 ;
 Instr 1819 @ 0x71b0 (29104) - @P1 IADD3 R4, -R6, RZ, RZ ;
 Instr 1820 @ 0x71c0 (29120) - @P1 IMAD R8, R4, c[0x0][0x3cc], R7 ;
 Instr 1821 @ 0x71d0 (29136) - @P1 MOV R7, R6 ;
 Instr 1822 @ 0x71e0 (29152) - MOV R6, RZ ;
 Instr 1823 @ 0x71f0 (29168) - @P0 IMAD.HI.U32 R4, R8, c[0x0][0x3e8], RZ ;
 Instr 1824 @ 0x7200 (29184) - IMAD R7, R7, c[0x0][0x248], R10 ;
 Instr 1825 @ 0x7210 (29200) - @P0 SHF.R.U32.HI R4, RZ, c[0x0][0x3ec], R4 ;
 Instr 1826 @ 0x7220 (29216) - @P0 IADD3 R3, -R4, RZ, RZ ;
 Instr 1827 @ 0x7230 (29232) - @P0 IMAD R5, R3, c[0x0][0x1b4], R8 ;
 Instr 1828 @ 0x7240 (29248) - @P0 MOV R8, R4 ;
 Instr 1829 @ 0x7250 (29264) - MOV R4, RZ ;
 Instr 1830 @ 0x7260 (29280) - IMAD R8, R8, c[0x0][0x24c], R7 ;
 Instr 1831 @ 0x7270 (29296) - MOV R7, RZ ;
 Instr 1832 @ 0x7280 (29312) - IMAD R3, R5, c[0x0][0x250], R8 ;
 Instr 1833 @ 0x7290 (29328) - MOV R5, RZ ;
 Instr 1834 @ 0x72a0 (29344) - SEL R3, R3, 0xffffffff, P3 ;
 Instr 1835 @ 0x72b0 (29360) - ISETP.GE.AND P0, PT, R3.reuse, RZ, PT ;
 Instr 1836 @ 0x72c0 (29376) - STS.64 [R2], R20 ;
 Instr 1837 @ 0x72d0 (29392) - @P0 IMAD.WIDE R8, R3, R66, c[0x0][0x178] ;
 Instr 1838 @ 0x72e0 (29408) - STS.64 [R2+0x10], R24 ;
 Instr 1839 @ 0x72f0 (29424) - STS.64 [R2+0x900], R22 ;
 Instr 1840 @ 0x7300 (29440) - @P0 LDG.E.128.SYS R4, [R8] ;
 Instr 1841 @ 0x7310 (29456) - ISETP.LE.AND P5, PT, R66, c[0x0][0x290], PT ;
 Instr 1842 @ 0x7320 (29472) - STS.64 [R2+0x910], R26 ;
 Instr 1843 @ 0x7330 (29488) - STS.64 [R2+0x20], R28 ;
 Instr 1844 @ 0x7340 (29504) - STS.64 [R2+0x30], R32 ;
 Instr 1845 @ 0x7350 (29520) - STS.64 [R2+0x920], R30 ;
 Instr 1846 @ 0x7360 (29536) - STS.64 [R2+0x930], R34 ;
 Instr 1847 @ 0x7370 (29552) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1848 @ 0x7380 (29568) - LDS.U.128 R16, [R60.X16] ;
 Instr 1849 @ 0x7390 (29584) - LDS.U.128 R8, [R60.X16+0x40] ;
 Instr 1850 @ 0x73a0 (29600) - LDS.U.128 R12, [R60.X16+0x90] ;
 Instr 1851 @ 0x73b0 (29616) - LDS.U.128 R40, [R60.X16+0xd0] ;
 Instr 1852 @ 0x73c0 (29632) - FADD R21, R16, R8 ;
 Instr 1853 @ 0x73d0 (29648) - FADD R9, R17, R9 ;
 Instr 1854 @ 0x73e0 (29664) - FADD R11, R19, R11 ;
 Instr 1855 @ 0x73f0 (29680) - FADD R23, R18, R10 ;
 Instr 1856 @ 0x7400 (29696) - FMUL R29, R21, R0.reuse ;
 Instr 1857 @ 0x7410 (29712) - FMUL R18, R9, R0.reuse ;
 Instr 1858 @ 0x7420 (29728) - FMUL R23, R23, R0 ;
 Instr 1859 @ 0x7430 (29744) - FMUL R16, R11, R0.reuse ;
 Instr 1860 @ 0x7440 (29760) - FADD R17, R12, R40 ;
 Instr 1861 @ 0x7450 (29776) - MOV R12, R29 ;
 Instr 1862 @ 0x7460 (29792) - FADD R13, R13, R41 ;
 Instr 1863 @ 0x7470 (29808) - FADD R19, R14, R42 ;
 Instr 1864 @ 0x7480 (29824) - MOV R14, R23 ;
 Instr 1865 @ 0x7490 (29840) - FADD R15, R15, R43 ;
 Instr 1866 @ 0x74a0 (29856) - FMUL R21, R17, R0 ;
 Instr 1867 @ 0x74b0 (29872) - FMUL R2, R13, R0 ;
 Instr 1868 @ 0x74c0 (29888) - MOV R13, R18 ;
 Instr 1869 @ 0x74d0 (29904) - FMUL R19, R19, R0.reuse ;
 Instr 1870 @ 0x74e0 (29920) - MOV R8, R21 ;
 Instr 1871 @ 0x74f0 (29936) - FMUL R0, R15, R0 ;
 Instr 1872 @ 0x7500 (29952) - MOV R15, R16 ;
 Instr 1873 @ 0x7510 (29968) - MOV R9, R2 ;
 Instr 1874 @ 0x7520 (29984) - MOV R10, R19 ;
 Instr 1875 @ 0x7530 (30000) - MOV R11, R0 ;
 Instr 1876 @ 0x7540 (30016) - @!P5 BRA 0x78c0 ;
Basic block id 110 - num instructions 6
 Instr 1877 @ 0x7550 (30032) - S2R R20, SR_TID.X ;
 Instr 1878 @ 0x7560 (30048) - ISETP.GE.AND P1, PT, R65, 0x1, PT ;
 Instr 1879 @ 0x7570 (30064) - IMAD.SHL.U32 R62, R62, 0x80, RZ ;
 Instr 1880 @ 0x7580 (30080) - SHF.R.S32.HI R17, RZ, 0x1f, R62 ;
 Instr 1881 @ 0x7590 (30096) - IMAD R61, R61, 0x80, R20 ;
 Instr 1882 @ 0x75a0 (30112) - @!P1 BRA 0x7810 ;
Basic block id 111 - num instructions 13
 Instr 1883 @ 0x75b0 (30128) - MOV R13, R45 ;
 Instr 1884 @ 0x75c0 (30144) - IMAD.MOV.U32 R12, RZ, RZ, R48 ;
 Instr 1885 @ 0x75d0 (30160) - UMOV UR4, URZ ;
 Instr 1886 @ 0x75e0 (30176) - IMAD.SHL.U32 R24, R61, 0x10, RZ ;
 Instr 1887 @ 0x75f0 (30192) - IMAD.WIDE R10, R62, 0x20, R12 ;
 Instr 1888 @ 0x7600 (30208) - SHF.R.S32.HI R25, RZ, 0x1f, R24.reuse ;
 Instr 1889 @ 0x7610 (30224) - IMAD R8, R17, 0x30, RZ ;
 Instr 1890 @ 0x7620 (30240) - IADD3 R26, P2, P1, R10, c[0x0][0x2a8], R24 ;
 Instr 1891 @ 0x7630 (30256) - IMAD.WIDE.U32 R12, R62, 0x30, R12 ;
 Instr 1892 @ 0x7640 (30272) - IADD3.X R27, R11, c[0x0][0x2ac], R25, P2, P1 ;
 Instr 1893 @ 0x7650 (30288) - IMAD.IADD R8, R8, 0x1, R13 ;
 Instr 1894 @ 0x7660 (30304) - IADD3 R24, P5, P3, R12, c[0x0][0x2a8], R24 ;
 Instr 1895 @ 0x7670 (30320) - IADD3.X R25, R8, c[0x0][0x2ac], R25, P5, P3 ;
Basic block id 112 - num instructions 17
 Instr 1896 @ 0x7680 (30336) - LDG.E.128.STRONG.GPU R12, [R26] ;
 Instr 1897 @ 0x7690 (30352) - LDG.E.128.STRONG.GPU R8, [R24] ;
 Instr 1898 @ 0x76a0 (30368) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 1899 @ 0x76b0 (30384) - IADD3 R26, P1, R26, c[0x0][0x2a0], RZ ;
 Instr 1900 @ 0x76c0 (30400) - ISETP.LE.AND P3, PT, R65, UR4, PT ;
 Instr 1901 @ 0x76d0 (30416) - IADD3 R24, P2, R24, c[0x0][0x2a0], RZ ;
 Instr 1902 @ 0x76e0 (30432) - IADD3.X R27, R27, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1903 @ 0x76f0 (30448) - IADD3.X R25, R25, c[0x0][0x2a4], RZ, P2, !PT ;
 Instr 1904 @ 0x7700 (30464) - FADD R29, R12, R29 ;
 Instr 1905 @ 0x7710 (30480) - FADD R18, R13, R18 ;
 Instr 1906 @ 0x7720 (30496) - FADD R23, R14, R23 ;
 Instr 1907 @ 0x7730 (30512) - FADD R16, R15, R16 ;
 Instr 1908 @ 0x7740 (30528) - FADD R21, R8, R21 ;
 Instr 1909 @ 0x7750 (30544) - FADD R2, R9, R2 ;
 Instr 1910 @ 0x7760 (30560) - FADD R19, R10, R19 ;
 Instr 1911 @ 0x7770 (30576) - FADD R0, R11, R0 ;
 Instr 1912 @ 0x7780 (30592) - @!P3 BRA 0x7680 ;
Basic block id 113 - num instructions 8
 Instr 1913 @ 0x7790 (30608) - IMAD.MOV.U32 R12, RZ, RZ, R29 ;
 Instr 1914 @ 0x77a0 (30624) - MOV R14, R23 ;
 Instr 1915 @ 0x77b0 (30640) - IMAD.MOV.U32 R13, RZ, RZ, R18 ;
 Instr 1916 @ 0x77c0 (30656) - MOV R8, R21 ;
 Instr 1917 @ 0x77d0 (30672) - IMAD.MOV.U32 R15, RZ, RZ, R16 ;
 Instr 1918 @ 0x77e0 (30688) - MOV R10, R19 ;
 Instr 1919 @ 0x77f0 (30704) - IMAD.MOV.U32 R9, RZ, RZ, R2 ;
 Instr 1920 @ 0x7800 (30720) - MOV R11, R0 ;
Basic block id 114 - num instructions 1
 Instr 1921 @ 0x7810 (30736) - @P4 BRA 0x78c0 ;
Basic block id 115 - num instructions 10
 Instr 1922 @ 0x7820 (30752) - IMAD.MOV.U32 R18, RZ, RZ, R48 ;
 Instr 1923 @ 0x7830 (30768) - IMAD.MOV.U32 R19, RZ, RZ, R45 ;
 Instr 1924 @ 0x7840 (30784) - IMAD.WIDE R18, R62, 0x20, R18 ;
 Instr 1925 @ 0x7850 (30800) - IMAD.WIDE R18, R61, 0x10, R18 ;
 Instr 1926 @ 0x7860 (30816) - IADD3 R18, P1, R18, c[0x0][0x2a8], RZ ;
 Instr 1927 @ 0x7870 (30832) - IADD3.X R19, R19, c[0x0][0x2ac], RZ, P1, !PT ;
 Instr 1928 @ 0x7880 (30848) - LEA R16, P1, R62.reuse, R18, 0x4 ;
 Instr 1929 @ 0x7890 (30864) - LEA.HI.X R17, R62, R19, R17, 0x4, P1 ;
 Instr 1930 @ 0x78a0 (30880) - STG.E.128.SYS [R18], R12 ;
 Instr 1931 @ 0x78b0 (30896) - STG.E.128.SYS [R16], R8 ;
Basic block id 116 - num instructions 1
 Instr 1932 @ 0x78c0 (30912) - @!P4 BRA 0x7db0 ;
Basic block id 117 - num instructions 78
 Instr 1933 @ 0x78d0 (30928) - HADD2.F32 R17, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1934 @ 0x78e0 (30944) - @P0 IMAD.WIDE R66, R3, R66, c[0x0][0x170] ;
 Instr 1935 @ 0x78f0 (30960) - HADD2.F32 R0, R37.H1_H1, -RZ.H0_H0 ;
 Instr 1936 @ 0x7900 (30976) - HADD2.F32 R19, R5.H0_H0, -RZ.H0_H0 ;
 Instr 1937 @ 0x7910 (30992) - HADD2.F32 R5, R5.H1_H1, -RZ.H0_H0 ;
 Instr 1938 @ 0x7920 (31008) - FADD R14, R17, R14 ;
 Instr 1939 @ 0x7930 (31024) - FADD R0, R0, R15 ;
 Instr 1940 @ 0x7940 (31040) - HADD2.F32 R17, R38.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1941 @ 0x7950 (31056) - FFMA R14, R19, R64.reuse, R14 ;
 Instr 1942 @ 0x7960 (31072) - HADD2.F32 R38, R38.H1_H1, -RZ.H0_H0 ;
 Instr 1943 @ 0x7970 (31088) - FFMA R2, R5, R64.reuse, R0 ;
 Instr 1944 @ 0x7980 (31104) - HADD2.F32 R15, R36.H0_H0, -RZ.H0_H0 ;
 Instr 1945 @ 0x7990 (31120) - HADD2.F32 R0, R6.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1946 @ 0x79a0 (31136) - FSETP.GEU.AND P1, PT, R14, c[0x0][0x210], PT ;
 Instr 1947 @ 0x79b0 (31152) - HADD2.F32 R6, R6.H1_H1, -RZ.H0_H0 ;
 Instr 1948 @ 0x79c0 (31168) - FADD R17, R17, R8 ;
 Instr 1949 @ 0x79d0 (31184) - HADD2.F32 R5, R39.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1950 @ 0x79e0 (31200) - FADD R9, R38, R9 ;
 Instr 1951 @ 0x79f0 (31216) - FSEL R14, R14, c[0x0][0x210], P1 ;
 Instr 1952 @ 0x7a00 (31232) - HADD2.F32 R8, R39.H1_H1, -RZ.H0_H0 ;
 Instr 1953 @ 0x7a10 (31248) - FSETP.GEU.AND P1, PT, R2, c[0x0][0x210], PT ;
 Instr 1954 @ 0x7a20 (31264) - FFMA R0, R0, R64.reuse, R17 ;
 Instr 1955 @ 0x7a30 (31280) - FSETP.GT.AND P2, PT, R14, c[0x0][0x220], PT ;
 Instr 1956 @ 0x7a40 (31296) - FFMA R9, R6, R64.reuse, R9 ;
 Instr 1957 @ 0x7a50 (31312) - FSEL R2, R2, c[0x0][0x210], P1 ;
 Instr 1958 @ 0x7a60 (31328) - HADD2.F32 R6, R7.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1959 @ 0x7a70 (31344) - FSETP.GEU.AND P1, PT, R0, c[0x0][0x210], PT ;
 Instr 1960 @ 0x7a80 (31360) - FADD R5, R5, R10 ;
 Instr 1961 @ 0x7a90 (31376) - HADD2.F32 R7, R7.H1_H1, -RZ.H0_H0 ;
 Instr 1962 @ 0x7aa0 (31392) - FADD R11, R8, R11 ;
 Instr 1963 @ 0x7ab0 (31408) - FSEL R0, R0, c[0x0][0x210], P1 ;
 Instr 1964 @ 0x7ac0 (31424) - HADD2.F32 R36, R36.H1_H1, -RZ.H0_H0 ;
 Instr 1965 @ 0x7ad0 (31440) - FSETP.GEU.AND P1, PT, R9, c[0x0][0x210], PT ;
 Instr 1966 @ 0x7ae0 (31456) - FFMA R5, R6, R64.reuse, R5 ;
 Instr 1967 @ 0x7af0 (31472) - FSEL R14, R14, c[0x0][0x220], !P2 ;
 Instr 1968 @ 0x7b00 (31488) - HADD2.F32 R6, R4.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1969 @ 0x7b10 (31504) - FSETP.GT.AND P2, PT, R2.reuse, c[0x0][0x220], PT ;
 Instr 1970 @ 0x7b20 (31520) - FFMA R7, R7, R64.reuse, R11 ;
 Instr 1971 @ 0x7b30 (31536) - FSEL R9, R9, c[0x0][0x210], P1 ;
 Instr 1972 @ 0x7b40 (31552) - FADD R15, R15, R12 ;
 Instr 1973 @ 0x7b50 (31568) - FSETP.GEU.AND P1, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 1974 @ 0x7b60 (31584) - HADD2.F32 R11, R4.H1_H1, -RZ.H0_H0 ;
 Instr 1975 @ 0x7b70 (31600) - FSEL R2, R2, c[0x0][0x220], !P2 ;
 Instr 1976 @ 0x7b80 (31616) - FFMA R6, R6, R64.reuse, R15 ;
 Instr 1977 @ 0x7b90 (31632) - FSETP.GT.AND P2, PT, R0, c[0x0][0x220], PT ;
 Instr 1978 @ 0x7ba0 (31648) - FADD R36, R36, R13 ;
 Instr 1979 @ 0x7bb0 (31664) - FSEL R5, R5, c[0x0][0x210], P1 ;
 Instr 1980 @ 0x7bc0 (31680) - F2F.F16.F32 R14, R14 ;
 Instr 1981 @ 0x7bd0 (31696) - FSETP.GEU.AND P1, PT, R7, c[0x0][0x210], PT ;
 Instr 1982 @ 0x7be0 (31712) - FFMA R11, R11, R64, R36 ;
 Instr 1983 @ 0x7bf0 (31728) - FSEL R0, R0, c[0x0][0x220], !P2 ;
 Instr 1984 @ 0x7c00 (31744) - FSETP.GT.AND P2, PT, R9, c[0x0][0x220], PT ;
 Instr 1985 @ 0x7c10 (31760) - FSEL R7, R7, c[0x0][0x210], P1 ;
 Instr 1986 @ 0x7c20 (31776) - F2F.F16.F32 R17, R2 ;
 Instr 1987 @ 0x7c30 (31792) - FSETP.GEU.AND P1, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 1988 @ 0x7c40 (31808) - FSEL R9, R9, c[0x0][0x220], !P2 ;
 Instr 1989 @ 0x7c50 (31824) - FSETP.GT.AND P2, PT, R5, c[0x0][0x220], PT ;
 Instr 1990 @ 0x7c60 (31840) - FSEL R6, R6, c[0x0][0x210], P1 ;
 Instr 1991 @ 0x7c70 (31856) - F2F.F16.F32 R0, R0 ;
 Instr 1992 @ 0x7c80 (31872) - FSETP.GEU.AND P1, PT, R11, c[0x0][0x210], PT ;
 Instr 1993 @ 0x7c90 (31888) - FSEL R5, R5, c[0x0][0x220], !P2 ;
 Instr 1994 @ 0x7ca0 (31904) - FSETP.GT.AND P2, PT, R7, c[0x0][0x220], PT ;
 Instr 1995 @ 0x7cb0 (31920) - FSEL R4, R11, c[0x0][0x210], P1 ;
 Instr 1996 @ 0x7cc0 (31936) - F2F.F16.F32 R9, R9 ;
 Instr 1997 @ 0x7cd0 (31952) - FSEL R7, R7, c[0x0][0x220], !P2 ;
 Instr 1998 @ 0x7ce0 (31968) - FSETP.GT.AND P2, PT, R6, c[0x0][0x220], PT ;
 Instr 1999 @ 0x7cf0 (31984) - FSETP.GT.AND P1, PT, R4, c[0x0][0x220], PT ;
 Instr 2000 @ 0x7d00 (32000) - FSEL R11, R6, c[0x0][0x220], !P2 ;
 Instr 2001 @ 0x7d10 (32016) - F2F.F16.F32 R2, R5 ;
 Instr 2002 @ 0x7d20 (32032) - FSEL R4, R4, c[0x0][0x220], !P1 ;
 Instr 2003 @ 0x7d30 (32048) - F2F.F16.F32 R7, R7 ;
 Instr 2004 @ 0x7d40 (32064) - PRMT R5, R14, 0x5410, R17 ;
 Instr 2005 @ 0x7d50 (32080) - PRMT R6, R0, 0x5410, R9 ;
 Instr 2006 @ 0x7d60 (32096) - F2F.F16.F32 R11, R11 ;
 Instr 2007 @ 0x7d70 (32112) - F2F.F16.F32 R4, R4 ;
 Instr 2008 @ 0x7d80 (32128) - PRMT R7, R2, 0x5410, R7 ;
 Instr 2009 @ 0x7d90 (32144) - PRMT R4, R11, 0x5410, R4 ;
 Instr 2010 @ 0x7da0 (32160) - @P0 STG.E.128.SYS [R66], R4 ;
Basic block id 118 - num instructions 4
 Instr 2011 @ 0x7db0 (32176) - ISETP.NE.AND P0, PT, RZ, UR5, PT ;
 Instr 2012 @ 0x7dc0 (32192) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2013 @ 0x7dd0 (32208) - BSSY B0, 0x7f50 ;
 Instr 2014 @ 0x7de0 (32224) - @P0 BRA 0x7f40 ;
Basic block id 119 - num instructions 4
 Instr 2015 @ 0x7df0 (32240) - S2R R0, SR_TID.X ;
 Instr 2016 @ 0x7e00 (32256) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 2018 @ 0x7e20 (32288) - @P0 BRA 0x7f40 ;
Basic block id 120 - num instructions 5
 Instr 2019 @ 0x7e30 (32304) - MEMBAR.SC.GPU ;
 Instr 2020 @ 0x7e40 (32320) - ISETP.NE.AND P1, PT, R63, RZ, PT ;
 Instr 2021 @ 0x7e50 (32336) - ERRBAR;
 Instr 2022 @ 0x7e60 (32352) - CCTL.IVALL ;
 Instr 2023 @ 0x7e70 (32368) - @P1 BRA 0x7ee0 ;
Basic block id 121 - num instructions 6
 Instr 2024 @ 0x7e80 (32384) - S2R R0, SR_LANEID ;
 Instr 2025 @ 0x7e90 (32400) - VOTEU.ANY UR5, UPT, PT ;
 Instr 2026 @ 0x7ea0 (32416) - UFLO.U32 UR4, UR5 ;
 Instr 2027 @ 0x7eb0 (32432) - POPC R3, UR5 ;
 Instr 2028 @ 0x7ec0 (32448) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 2029 @ 0x7ed0 (32464) - @P0 RED.E.ADD.STRONG.GPU [R70], R3 ;
Basic block id 122 - num instructions 6
 Instr 2030 @ 0x7ee0 (32480) - S2R R0, SR_LANEID ;
 Instr 2031 @ 0x7ef0 (32496) - VOTEU.ANY UR5, UPT, PT ;
 Instr 2032 @ 0x7f00 (32512) - UFLO.U32 UR4, UR5 ;
 Instr 2033 @ 0x7f10 (32528) - POPC R3, UR5 ;
 Instr 2034 @ 0x7f20 (32544) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 2035 @ 0x7f30 (32560) - @P0 RED.E.ADD.STRONG.GPU [R68], R3 ;
Basic block id 123 - num instructions 1
 Instr 2036 @ 0x7f40 (32576) - BSYNC B0 ;
Basic block id 124 - num instructions 2
 Instr 2037 @ 0x7f50 (32592) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2038 @ 0x7f60 (32608) - EXIT ;
Basic block id 125 - num instructions 3
 Instr 2039 @ 0x7f70 (32624) - WARPSYNC R41 ;
 Instr 2040 @ 0x7f80 (32640) - MOV R41, 0x0 ;
 Instr 2041 @ 0x7f90 (32656) - RET.REL.NODEC R40 0x0 ;
Basic block id 126 - num instructions 1
 Instr 2042 @ 0x7fa0 (32672) - BRA 0x7fa0;
inspecting sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x32x64_stage1_warpsize2x1x2_g1_tensor16x8x8_execute_kernel__5x_cudnn - number basic blocks 127
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R9, RZ, RZ, -0x1 ;
Inject count_instr before - Instr 23 @ 0x170 (368) - MOV R0, 0x1 ;
Inject count_instr before - Instr 24 @ 0x180 (384) - ISETP.NE.AND P1, PT, R5, R6, PT ;
Inject count_instr before - Instr 27 @ 0x1b0 (432) - IADD3 R11, R11, -0x1, RZ ;
Inject count_instr before - Instr 36 @ 0x240 (576) - LOP3.LUT R0, R9, R58, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 41 @ 0x290 (656) - LOP3.LUT R0, R9, R58, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 48 @ 0x300 (768) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
Inject count_instr before - Instr 51 @ 0x330 (816) - S2R R0, SR_TID.X ;
Inject count_instr before - Instr 287 @ 0x11f0 (4592) - IADD3 R46, R64.reuse, -0x2, RZ ;
Inject count_instr before - Instr 292 @ 0x1240 (4672) - LOP3.LUT R63, R64, 0x3, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 294 @ 0x1260 (4704) - IMAD.U32 R46, RZ, RZ, UR11 ;
Inject count_instr before - Instr 373 @ 0x1750 (5968) - LOP3.LUT P0, RZ, R64, 0x3, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 375 @ 0x1770 (6000) - ULDC UR5, c[0x0][0x3a4] ;
Inject count_instr before - Instr 393 @ 0x1890 (6288) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x620] ;
Inject count_instr before - Instr 416 @ 0x1a00 (6656) - MOV R3, c[0x0][0x1d0] ;
Inject count_instr before - Instr 419 @ 0x1a30 (6704) - IADD3 R38, R3.reuse, -0x2, RZ ;
Inject count_instr before - Instr 425 @ 0x1a90 (6800) - IADD3 R54, R3, -R60, RZ ;
Inject count_instr before - Instr 426 @ 0x1aa0 (6816) - IMAD.U32 R3, RZ, RZ, UR11 ;
Inject count_instr before - Instr 505 @ 0x1f90 (8080) - ISETP.NE.AND P0, PT, R60, RZ, PT ;
Inject count_instr before - Instr 507 @ 0x1fb0 (8112) - ULDC UR5, c[0x0][0x3a8] ;
Inject count_instr before - Instr 524 @ 0x20c0 (8384) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x624] ;
Inject count_instr before - Instr 547 @ 0x2230 (8752) - MOV R2, c[0x0][0x1d4] ;
Inject count_instr before - Instr 550 @ 0x2260 (8800) - IADD3 R3, R2.reuse, -0x2, RZ ;
Inject count_instr before - Instr 556 @ 0x22c0 (8896) - IADD3 R49, R2, -R51, RZ ;
Inject count_instr before - Instr 557 @ 0x22d0 (8912) - IMAD R3, R50.reuse, c[0x0][0x288], R42 ;
Inject count_instr before - Instr 633 @ 0x2790 (10128) - ISETP.NE.AND P0, PT, R51, RZ, PT ;
Inject count_instr before - Instr 635 @ 0x27b0 (10160) - IMAD R2, R50, c[0x0][0x288], RZ ;
Inject count_instr before - Instr 645 @ 0x2850 (10320) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x628] ;
Inject count_instr before - Instr 668 @ 0x29c0 (10688) - ULDC.U8 UR4, c[0x0][0x28c] ;
Inject count_instr before - Instr 712 @ 0x2c80 (11392) - R2P PR, R93, 0xf ;
Inject count_instr before - Instr 771 @ 0x3030 (12336) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 777 @ 0x3090 (12432) - LOP3.LUT R54, R55, 0x10, RZ, 0x3c, !PT ;
Inject count_instr before - Instr 790 @ 0x3160 (12640) - HMMA.1688.F32 R4, R2, R36, R4 ;
Inject count_instr before - Instr 895 @ 0x37f0 (14320) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
Inject count_instr before - Instr 918 @ 0x3960 (14688) - LEA.HI R3, R2, R3, RZ, 0x1f ;
Inject count_instr before - Instr 932 @ 0x3a40 (14912) - ISETP.GE.AND P0, PT, R54, c[0x0][0x320], PT ;
Inject count_instr before - Instr 936 @ 0x3a80 (14976) - SHF.R.S32.HI R37, RZ, 0x1f, R54 ;
Inject count_instr before - Instr 942 @ 0x3ae0 (15072) - CS2R R36, SRZ ;
Inject count_instr before - Instr 944 @ 0x3b00 (15104) - BSYNC B0 ;
Inject count_instr before - Instr 949 @ 0x3b50 (15184) - S2R R41, SR_CTAID.Z ;
Inject count_instr before - Instr 960 @ 0x3c00 (15360) - S2R R41, SR_CTAID.Z ;
Inject count_instr before - Instr 980 @ 0x3d40 (15680) - ISETP.NE.AND P0, PT, R42, 0x1, PT ;
Inject count_instr before - Instr 988 @ 0x3dc0 (15808) - IMAD.MOV.U32 R43, RZ, RZ, c[0x0][0x298] ;
Inject count_instr before - Instr 993 @ 0x3e10 (15888) - ISETP.EQ.AND P0, PT, R43, 0x1, PT ;
Inject count_instr before - Instr 997 @ 0x3e50 (15952) - IABS R45, c[0x0][0x294] ;
Inject count_instr before - Instr 1032 @ 0x4080 (16512) - LDG.E.STRONG.GPU R40, [R52] ;
Inject count_instr before - Instr 1036 @ 0x40c0 (16576) - VOTE.ANY R40, PT, PT ;
Inject count_instr before - Instr 1041 @ 0x4110 (16656) - BRA 0x40c0 ;
Inject count_instr before - Instr 1042 @ 0x4120 (16672) - BSYNC B0 ;
Inject count_instr before - Instr 1044 @ 0x4140 (16704) - MOV R41, 0xffffffff ;
Inject count_instr before - Instr 1047 @ 0x4170 (16752) - NOP ;
Inject count_instr before - Instr 1052 @ 0x41c0 (16832) - ISETP.NE.AND P0, PT, R40, RZ, PT ;
Inject count_instr before - Instr 1060 @ 0x4240 (16960) - LDG.E.STRONG.GPU R41, [R50] ;
Inject count_instr before - Instr 1064 @ 0x4280 (17024) - VOTE.ANY R40, PT, PT ;
Inject count_instr before - Instr 1069 @ 0x42d0 (17104) - BRA 0x4280 ;
Inject count_instr before - Instr 1070 @ 0x42e0 (17120) - BSYNC B0 ;
Inject count_instr before - Instr 1072 @ 0x4300 (17152) - MOV R41, 0xffffffff ;
Inject count_instr before - Instr 1075 @ 0x4330 (17200) - NOP ;
Inject count_instr before - Instr 1080 @ 0x4380 (17280) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 1158 @ 0x4860 (18528) - S2R R56, SR_TID.X ;
Inject count_instr before - Instr 1164 @ 0x48c0 (18624) - LEA R56, P5, R14.reuse, R44, 0x4 ;
Inject count_instr before - Instr 1173 @ 0x4950 (18768) - MOV R8, R58 ;
Inject count_instr before - Instr 1194 @ 0x4aa0 (19104) - IMAD.MOV.U32 R8, RZ, RZ, R57 ;
Inject count_instr before - Instr 1202 @ 0x4b20 (19232) - @P3 BRA 0x4bb0 ;
Inject count_instr before - Instr 1203 @ 0x4b30 (19248) - IMAD.MOV.U32 R40, RZ, RZ, R44 ;
Inject count_instr before - Instr 1211 @ 0x4bb0 (19376) - @!P3 BRA 0x4fc0 ;
Inject count_instr before - Instr 1212 @ 0x4bc0 (19392) - HADD2.F32 R13, R37.reuse.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 1276 @ 0x4fc0 (20416) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 1341 @ 0x53d0 (21456) - S2R R18, SR_TID.X ;
Inject count_instr before - Instr 1347 @ 0x5430 (21552) - MOV R9, R41 ;
Inject count_instr before - Instr 1360 @ 0x5500 (21760) - LDG.E.128.STRONG.GPU R8, [R20] ;
Inject count_instr before - Instr 1377 @ 0x5610 (22032) - IMAD.MOV.U32 R4, RZ, RZ, R23 ;
Inject count_instr before - Instr 1385 @ 0x5690 (22160) - @P3 BRA 0x5740 ;
Inject count_instr before - Instr 1386 @ 0x56a0 (22176) - IMAD.MOV.U32 R12, RZ, RZ, R44 ;
Inject count_instr before - Instr 1396 @ 0x5740 (22336) - @!P3 BRA 0x5b50 ;
Inject count_instr before - Instr 1397 @ 0x5750 (22352) - HADD2.F32 R3, R37.reuse.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 1461 @ 0x5b50 (23376) - ISETP.NE.AND P0, PT, RZ, UR5, PT ;
Inject count_instr before - Instr 1463 @ 0x5b70 (23408) - S2R R0, SR_TID.X ;
Inject count_instr before - Instr 1469 @ 0x5bd0 (23504) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 1474 @ 0x5c20 (23584) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 1480 @ 0x5c80 (23680) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 1486 @ 0x5ce0 (23776) - BSYNC B0 ;
Inject count_instr before - Instr 1488 @ 0x5d00 (23808) - ISETP.NE.AND P0, PT, R42, 0x1, PT ;
Inject count_instr before - Instr 1496 @ 0x5d80 (23936) - IMAD.MOV.U32 R45, RZ, RZ, c[0x0][0x298] ;
Inject count_instr before - Instr 1501 @ 0x5dd0 (24016) - ISETP.NE.AND P2, PT, R63, RZ, PT ;
Inject count_instr before - Instr 1506 @ 0x5e20 (24096) - IABS R46, c[0x0][0x294] ;
Inject count_instr before - Instr 1541 @ 0x6050 (24656) - LDG.E.STRONG.GPU R41, [R70] ;
Inject count_instr before - Instr 1545 @ 0x6090 (24720) - VOTE.ANY R40, PT, PT ;
Inject count_instr before - Instr 1550 @ 0x60e0 (24800) - BRA 0x6090 ;
Inject count_instr before - Instr 1551 @ 0x60f0 (24816) - BSYNC B0 ;
Inject count_instr before - Instr 1553 @ 0x6110 (24848) - MOV R41, 0xffffffff ;
Inject count_instr before - Instr 1556 @ 0x6140 (24896) - NOP ;
Inject count_instr before - Instr 1561 @ 0x6190 (24976) - ISETP.NE.AND P0, PT, R40, RZ, PT ;
Inject count_instr before - Instr 1569 @ 0x6210 (25104) - LDG.E.STRONG.GPU R41, [R68] ;
Inject count_instr before - Instr 1573 @ 0x6250 (25168) - VOTE.ANY R40, PT, PT ;
Inject count_instr before - Instr 1578 @ 0x62a0 (25248) - BRA 0x6250 ;
Inject count_instr before - Instr 1579 @ 0x62b0 (25264) - BSYNC B0 ;
Inject count_instr before - Instr 1581 @ 0x62d0 (25296) - MOV R41, 0xffffffff ;
Inject count_instr before - Instr 1584 @ 0x6300 (25344) - NOP ;
Inject count_instr before - Instr 1589 @ 0x6350 (25424) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 1671 @ 0x6870 (26736) - S2R R50, SR_TID.X ;
Inject count_instr before - Instr 1677 @ 0x68d0 (26832) - LEA R50, P6, R12.reuse, R48, 0x4 ;
Inject count_instr before - Instr 1688 @ 0x6980 (27008) - MOV R8, R52 ;
Inject count_instr before - Instr 1709 @ 0x6ad0 (27344) - IMAD.MOV.U32 R8, RZ, RZ, R55 ;
Inject count_instr before - Instr 1717 @ 0x6b50 (27472) - @P4 BRA 0x6be0 ;
Inject count_instr before - Instr 1718 @ 0x6b60 (27488) - IMAD.MOV.U32 R44, RZ, RZ, R48 ;
Inject count_instr before - Instr 1726 @ 0x6be0 (27616) - @!P4 BRA 0x70d0 ;
Inject count_instr before - Instr 1727 @ 0x6bf0 (27632) - HADD2.F32 R13, R37.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 1805 @ 0x70d0 (28880) - IADD3 R10, R3, 0x20, RZ ;
Inject count_instr before - Instr 1877 @ 0x7550 (30032) - S2R R20, SR_TID.X ;
Inject count_instr before - Instr 1883 @ 0x75b0 (30128) - MOV R13, R45 ;
Inject count_instr before - Instr 1896 @ 0x7680 (30336) - LDG.E.128.STRONG.GPU R12, [R26] ;
Inject count_instr before - Instr 1913 @ 0x7790 (30608) - IMAD.MOV.U32 R12, RZ, RZ, R29 ;
Inject count_instr before - Instr 1921 @ 0x7810 (30736) - @P4 BRA 0x78c0 ;
Inject count_instr before - Instr 1922 @ 0x7820 (30752) - IMAD.MOV.U32 R18, RZ, RZ, R48 ;
Inject count_instr before - Instr 1932 @ 0x78c0 (30912) - @!P4 BRA 0x7db0 ;
Inject count_instr before - Instr 1933 @ 0x78d0 (30928) - HADD2.F32 R17, R37.reuse.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 2011 @ 0x7db0 (32176) - ISETP.NE.AND P0, PT, RZ, UR5, PT ;
Inject count_instr before - Instr 2015 @ 0x7df0 (32240) - S2R R0, SR_TID.X ;
Inject count_instr before - Instr 2019 @ 0x7e30 (32304) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 2024 @ 0x7e80 (32384) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 2030 @ 0x7ee0 (32480) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 2036 @ 0x7f40 (32576) - BSYNC B0 ;
Inject count_instr before - Instr 2037 @ 0x7f50 (32592) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 2039 @ 0x7f70 (32624) - WARPSYNC R41 ;
Inject count_instr before - Instr 2042 @ 0x7fa0 (32672) - BRA 0x7fa0;
kernel 148 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x32x64_stage1_warpsize2x1x2_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 52,  kernel instructions 374816, total instructions 16220102
kernel 149 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 80736, total instructions 16300838
kernel 150 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 264, total instructions 16301102
kernel 151 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 636, total instructions 16301738
kernel 152 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 128,  kernel instructions 119808, total instructions 16421546
kernel 153 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 98,  kernel instructions 23520, total instructions 16445066
kernel 154 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 76104, total instructions 16521170
kernel 155 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 512,  kernel instructions 574464, total instructions 17095634
kernel 156 - sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 26,  kernel instructions 526448, total instructions 17622082
kernel 157 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 80736, total instructions 17702818
kernel 158 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 264, total instructions 17703082
kernel 159 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 636, total instructions 17703718
kernel 160 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 128,  kernel instructions 119808, total instructions 17823526
kernel 161 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 196,  kernel instructions 162960, total instructions 17986486
Function sm75_xmma_fprop_implicit_gemm_indexed_wo_smem_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8_execute_kernel__5x_cudnn
Basic block id 0 - num instructions 8
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2UR UR5, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x660], PT ;
 Instr 3 @ 0x30 (48) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x318], PT ;
 Instr 4 @ 0x40 (64) - S2UR UR4, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - IMAD.U32 R4, RZ, RZ, UR5 ;
 Instr 6 @ 0x60 (96) - IMAD.U32 R133, RZ, RZ, UR4 ;
 Instr 7 @ 0x70 (112) - @!P0 BRA 0x320 ;
Basic block id 1 - num instructions 14
 Instr 8 @ 0x80 (128) - IMAD.MOV.U32 R6, RZ, RZ, -0x1 ;
 Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x344] ;
 Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 11 @ 0xb0 (176) - SHF.L.U32 R6, R6, c[0x0][0x65c], RZ ;
 Instr 12 @ 0xc0 (192) - IMAD.MOV.U32 R7, RZ, RZ, c[0x0][0x65c] ;
 Instr 13 @ 0xd0 (208) - SEL R8, R3, c[0x0][0x340], !P1 ;
 Instr 14 @ 0xe0 (224) - LOP3.LUT R9, R133, R6, RZ, 0xf3, !PT ;
 Instr 15 @ 0xf0 (240) - SHF.L.U32 R0, R0, c[0x0][0x65c], RZ ;
 Instr 16 @ 0x100 (256) - ISETP.GE.U32.AND P0, PT, R9, R8, PT ;
 Instr 17 @ 0x110 (272) - LOP3.LUT P2, RZ, R0, R133, RZ, 0xc0, !PT ;
 Instr 18 @ 0x120 (288) - SEL R3, R3, c[0x0][0x340], P1 ;
 Instr 19 @ 0x130 (304) - LOP3.LUT R6, RZ, R6, RZ, 0x33, !PT ;
 Instr 20 @ 0x140 (320) - SEL R5, RZ, 0x1, !P2 ;
 Instr 21 @ 0x150 (336) - @!P0 BRA 0x230 ;
Basic block id 2 - num instructions 1
 Instr 22 @ 0x160 (352) - MOV R0, 0x1 ;
Basic block id 3 - num instructions 3
 Instr 23 @ 0x170 (368) - ISETP.NE.AND P2, PT, R9, R8, PT ;
 Instr 24 @ 0x180 (384) - ISETP.EQ.AND P0, PT, R7, 0x2, PT ;
 Instr 25 @ 0x190 (400) - @!P2 BRA P0, 0x280 ;
Basic block id 4 - num instructions 9
 Instr 26 @ 0x1a0 (416) - SHF.R.U32.HI R6, RZ, 0x1, R6 ;
 Instr 27 @ 0x1b0 (432) - IADD3 R7, R7, -0x1, RZ ;
 Instr 28 @ 0x1c0 (448) - LOP3.LUT R9, R6, R133, RZ, 0xfc, !PT ;
 Instr 29 @ 0x1d0 (464) - SHF.L.U32 R2, R0, R7, RZ ;
 Instr 30 @ 0x1e0 (480) - ISETP.GE.U32.AND P0, PT, R9, R8, PT ;
 Instr 31 @ 0x1f0 (496) - LOP3.LUT P3, RZ, R2, R133, RZ, 0xc0, !PT ;
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P2, PT, R5, RZ, PT ;
 Instr 33 @ 0x210 (528) - @P3 SEL R5, RZ, 0x1, P2 ;
 Instr 34 @ 0x220 (544) - @P0 BRA 0x170 ;
Basic block id 5 - num instructions 5
 Instr 35 @ 0x230 (560) - LOP3.LUT R0, R6, R133, RZ, 0xc0, !PT ;
 Instr 36 @ 0x240 (576) - IMAD R0, R0, R3, R4 ;
 Instr 37 @ 0x250 (592) - LOP3.LUT R133, R133, R6, R0.reuse, 0xb8, !PT ;
 Instr 38 @ 0x260 (608) - SHF.R.U32.HI R7, RZ, R7, R0 ;
 Instr 39 @ 0x270 (624) - BRA 0x2e0 ;
Basic block id 6 - num instructions 6
 Instr 40 @ 0x280 (640) - LOP3.LUT R0, R6, R133, RZ, 0xc0, !PT ;
 Instr 41 @ 0x290 (656) - LOP3.LUT R133, R133, R6, RZ, 0x30, !PT ;
 Instr 42 @ 0x2a0 (672) - IMAD R0, R0, R3, R4 ;
 Instr 43 @ 0x2b0 (688) - IMAD.WIDE.U32 R6, R0.reuse, 0x55555556, RZ ;
 Instr 44 @ 0x2c0 (704) - IADD3 R133, R0, R133, RZ ;
 Instr 45 @ 0x2d0 (720) - IMAD R133, R7, -0x3, R133 ;
Basic block id 7 - num instructions 4
 Instr 46 @ 0x2e0 (736) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
 Instr 47 @ 0x2f0 (752) - IMAD.MOV.U32 R4, RZ, RZ, R7 ;
 Instr 48 @ 0x300 (768) - LOP3.LUT R0, RZ, R4, RZ, 0x33, !PT ;
 Instr 49 @ 0x310 (784) - @P0 IMAD.IADD R4, R0, 0x1, R3 ;
Basic block id 8 - num instructions 19
 Instr 50 @ 0x320 (800) - S2R R129, SR_TID.X ;
 Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 52 @ 0x340 (832) - SEL R124, R4, R133, !P1 ;
 Instr 53 @ 0x350 (848) - BMOV.32.CLEAR RZ, B0 ;
 Instr 54 @ 0x360 (864) - SEL R133, R133, R4, !P1 ;
 Instr 55 @ 0x370 (880) - BSSY B0, 0x650 ;
 Instr 56 @ 0x380 (896) - ISETP.NE.AND P0, PT, R2, c[0x0][0x414], PT ;
 Instr 57 @ 0x390 (912) - IMAD.MOV.U32 R3, RZ, RZ, R133 ;
 Instr 58 @ 0x3a0 (928) - @P0 IMAD.HI.U32 R4, R133, c[0x0][0x40c], RZ ;
 Instr 59 @ 0x3b0 (944) - @P0 SHF.R.U32.HI R3, RZ, c[0x0][0x410], R4 ;
 Instr 60 @ 0x3c0 (960) - IMAD R0, R124, 0x80, R129 ;
 Instr 61 @ 0x3d0 (976) - IMAD R134, R3, c[0x0][0x1a8], RZ ;
 Instr 62 @ 0x3e0 (992) - ISETP.GE.AND P1, PT, R0, c[0x0][0x3c4], PT ;
 Instr 63 @ 0x3f0 (1008) - IMAD.WIDE R134, R134, 0x2, RZ ;
 Instr 64 @ 0x400 (1024) - @P1 IADD3 R5, R2.reuse, c[0x0][0x19c], RZ ;
 Instr 65 @ 0x410 (1040) - @P1 IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 66 @ 0x420 (1056) - @P1 IADD3 R6, R2.reuse, c[0x0][0x1a0], RZ ;
 Instr 67 @ 0x430 (1072) - @P1 IADD3 R7, R2, c[0x0][0x1a4], RZ ;
 Instr 68 @ 0x440 (1088) - @P1 BRA 0x640 ;
Basic block id 9 - num instructions 31
 Instr 69 @ 0x450 (1104) - ISETP.NE.AND P3, PT, R2.reuse, c[0x0][0x3c8], PT ;
 Instr 70 @ 0x460 (1120) - CS2R R8, SRZ ;
 Instr 71 @ 0x470 (1136) - MOV R4, R0 ;
 Instr 72 @ 0x480 (1152) - ISETP.NE.AND P2, PT, R2.reuse, c[0x0][0x3cc], PT ;
 Instr 73 @ 0x490 (1168) - ISETP.NE.AND P1, PT, R2, c[0x0][0x1b4], PT ;
 Instr 74 @ 0x4a0 (1184) - MOV R7, RZ ;
 Instr 75 @ 0x4b0 (1200) - MOV R5, c[0x0][0x274] ;
 Instr 76 @ 0x4c0 (1216) - @P3 IMAD.HI.U32 R6, R4, c[0x0][0x3dc], RZ ;
 Instr 77 @ 0x4d0 (1232) - @P3 SHF.R.U32.HI R6, RZ, c[0x0][0x3e0], R6 ;
 Instr 78 @ 0x4e0 (1248) - @P3 IADD3 R3, -R6, RZ, RZ ;
 Instr 79 @ 0x4f0 (1264) - @P3 IMAD R8, R3, c[0x0][0x3c8], R4 ;
 Instr 80 @ 0x500 (1280) - @P3 IMAD.MOV.U32 R4, RZ, RZ, R6 ;
 Instr 81 @ 0x510 (1296) - MOV R6, c[0x0][0x278] ;
 Instr 82 @ 0x520 (1312) - @P2 IMAD.HI.U32 R0, R8, c[0x0][0x3e4], RZ ;
 Instr 83 @ 0x530 (1328) - IMAD R4, R4, c[0x0][0x230], RZ ;
 Instr 84 @ 0x540 (1344) - @P2 SHF.R.U32.HI R0, RZ, c[0x0][0x3e8], R0 ;
 Instr 85 @ 0x550 (1360) - @P2 IADD3 R3, -R0, RZ, RZ ;
 Instr 86 @ 0x560 (1376) - @P2 IMAD R9, R3, c[0x0][0x3cc], R8 ;
 Instr 87 @ 0x570 (1392) - @P2 IMAD.MOV.U32 R8, RZ, RZ, R0 ;
 Instr 88 @ 0x580 (1408) - @P1 IMAD.HI.U32 R3, R9, c[0x0][0x3ec], RZ ;
 Instr 89 @ 0x590 (1424) - IMAD R5, R8, R5, -c[0x0][0x25c] ;
 Instr 90 @ 0x5a0 (1440) - @P1 SHF.R.U32.HI R3, RZ, c[0x0][0x3f0], R3 ;
 Instr 91 @ 0x5b0 (1456) - @P1 IADD3 R0, -R3, RZ, RZ ;
 Instr 92 @ 0x5c0 (1472) - @P1 IMAD R7, R0, c[0x0][0x1b4], R9 ;
 Instr 93 @ 0x5d0 (1488) - @P1 MOV R9, R3 ;
 Instr 94 @ 0x5e0 (1504) - IMAD R3, R5, c[0x0][0x234], R4 ;
 Instr 95 @ 0x5f0 (1520) - MOV R0, c[0x0][0x27c] ;
 Instr 96 @ 0x600 (1536) - IMAD R6, R9, R6, -c[0x0][0x264] ;
 Instr 97 @ 0x610 (1552) - IMAD R7, R7, R0, -c[0x0][0x26c] ;
 Instr 98 @ 0x620 (1568) - IMAD R4, R6, c[0x0][0x238], R3 ;
 Instr 99 @ 0x630 (1584) - IMAD R4, R7, c[0x0][0x23c], R4 ;
Basic block id 10 - num instructions 9
 Instr 100 @ 0x640 (1600) - BSYNC B0 ;
 Instr 101 @ 0x650 (1616) - STS.128 [R129.X16], R4 ;
 Instr 102 @ 0x660 (1632) - ISETP.GE.U32.AND P1, PT, R129, c[0x0][0x3d0], PT ;
 Instr 103 @ 0x670 (1648) - BMOV.32.CLEAR RZ, B0 ;
 Instr 104 @ 0x680 (1664) - BSSY B0, 0x880 ;
 Instr 105 @ 0x690 (1680) - IMAD.MOV.U32 R0, RZ, RZ, RZ ;
 Instr 106 @ 0x6a0 (1696) - MOV R8, RZ ;
 Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R13, RZ, RZ, -0x1 ;
 Instr 108 @ 0x6c0 (1728) - @P1 BRA 0x870 ;
Basic block id 11 - num instructions 26
 Instr 109 @ 0x6d0 (1744) - MOV R3, c[0x0][0x3d4] ;
 Instr 110 @ 0x6e0 (1760) - CS2R R14, SRZ ;
 Instr 111 @ 0x6f0 (1776) - MOV R6, R129 ;
 Instr 112 @ 0x700 (1792) - ISETP.NE.AND P1, PT, R3, 0x1, PT ;
 Instr 113 @ 0x710 (1808) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x3d8] ;
 Instr 114 @ 0x720 (1824) - MOV R8, RZ ;
 Instr 115 @ 0x730 (1840) - ISETP.NE.AND P2, PT, R3, 0x1, PT ;
 Instr 116 @ 0x740 (1856) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x1a8] ;
 Instr 117 @ 0x750 (1872) - @P1 IMAD.HI.U32 R4, R129, c[0x0][0x3f4], RZ ;
 Instr 118 @ 0x760 (1888) - @P1 SHF.R.U32.HI R6, RZ, c[0x0][0x3f8], R4 ;
 Instr 119 @ 0x770 (1904) - @P1 IADD3 R4, -R6.reuse, RZ, RZ ;
 Instr 120 @ 0x780 (1920) - IMAD R13, R6, c[0x0][0x280], RZ ;
 Instr 121 @ 0x790 (1936) - @P1 IMAD R14, R4, c[0x0][0x3d4], R129 ;
 Instr 122 @ 0x7a0 (1952) - ISETP.NE.AND P1, PT, R3, 0x1, PT ;
 Instr 123 @ 0x7b0 (1968) - @P2 IMAD.HI.U32 R5, R14, c[0x0][0x3fc], RZ ;
 Instr 124 @ 0x7c0 (1984) - @P2 SHF.R.U32.HI R5, RZ, c[0x0][0x400], R5 ;
 Instr 125 @ 0x7d0 (2000) - @P2 IADD3 R3, -R5, RZ, RZ ;
 Instr 126 @ 0x7e0 (2016) - @P2 IMAD R15, R3, c[0x0][0x3d8], R14 ;
 Instr 127 @ 0x7f0 (2032) - @P2 MOV R14, R5 ;
 Instr 128 @ 0x800 (2048) - @P1 IMAD.HI.U32 R3, R15, c[0x0][0x404], RZ ;
 Instr 129 @ 0x810 (2064) - IMAD R14, R14, c[0x0][0x284], RZ ;
 Instr 130 @ 0x820 (2080) - @P1 SHF.R.U32.HI R3, RZ, c[0x0][0x408], R3 ;
 Instr 131 @ 0x830 (2096) - @P1 IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 132 @ 0x840 (2112) - @P1 IMAD R8, R4, c[0x0][0x1a8], R15 ;
 Instr 133 @ 0x850 (2128) - @P1 MOV R15, R3 ;
 Instr 134 @ 0x860 (2144) - IMAD R15, R15, c[0x0][0x288], RZ ;
Basic block id 12 - num instructions 47
 Instr 135 @ 0x870 (2160) - BSYNC B0 ;
 Instr 136 @ 0x880 (2176) - SHF.R.S32.HI R4, RZ, 0x1f, R129 ;
 Instr 137 @ 0x890 (2192) - @P0 IMAD.HI.U32 R6, R133, c[0x0][0x40c], RZ ;
 Instr 138 @ 0x8a0 (2208) - LOP3.LUT R40, R129, 0x1c, RZ, 0xc0, !PT ;
 Instr 139 @ 0x8b0 (2224) - CS2R R10, SRZ ;
 Instr 140 @ 0x8c0 (2240) - LEA.HI R3, R4, R129, RZ, 0x2 ;
 Instr 141 @ 0x8d0 (2256) - IMAD.MOV.U32 R36, RZ, RZ, R133 ;
 Instr 142 @ 0x8e0 (2272) - CS2R R16, SRZ ;
 Instr 143 @ 0x8f0 (2288) - IMAD R7, R13, c[0x0][0x234], R8 ;
 Instr 144 @ 0x900 (2304) - SHF.R.S32.HI R5, RZ, 0x2, R3 ;
 Instr 145 @ 0x910 (2320) - CS2R R8, SRZ ;
 Instr 146 @ 0x920 (2336) - @P0 SHF.R.U32.HI R36, RZ, c[0x0][0x410], R6 ;
 Instr 147 @ 0x930 (2352) - IMAD R12, R14, c[0x0][0x238], R7 ;
 Instr 148 @ 0x940 (2368) - LEA.HI R4, R3.reuse, R5, RZ, 0x1 ;
 Instr 149 @ 0x950 (2384) - CS2R R18, SRZ ;
 Instr 150 @ 0x960 (2400) - LOP3.LUT R30, R3, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 151 @ 0x970 (2416) - @P0 IMAD.MOV R6, RZ, RZ, -R36 ;
 Instr 152 @ 0x980 (2432) - LOP3.LUT R4, R4, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 153 @ 0x990 (2448) - IMAD R12, R15, c[0x0][0x23c], R12 ;
 Instr 154 @ 0x9a0 (2464) - LOP3.LUT R7, R129, 0x60, RZ, 0xc0, !PT ;
 Instr 155 @ 0x9b0 (2480) - @P0 IMAD R6, R6, c[0x0][0x414], R133 ;
 Instr 156 @ 0x9c0 (2496) - CS2R R20, SRZ ;
 Instr 157 @ 0x9d0 (2512) - IMAD.IADD R4, R5, 0x1, -R4 ;
 Instr 158 @ 0x9e0 (2528) - LOP3.LUT R5, R129.reuse, 0x18, RZ, 0xc0, !PT ;
 Instr 159 @ 0x9f0 (2544) - @P0 IMAD.SHL.U32 R0, R6, 0x20, RZ ;
 Instr 160 @ 0xa00 (2560) - ISETP.LE.AND P0, PT, RZ, c[0x0][0x648], PT ;
 Instr 161 @ 0xa10 (2576) - IMAD.IADD R37, R129, 0x1, -R30 ;
 Instr 162 @ 0xa20 (2592) - LEA.HI R5, R5, R4, RZ, 0x1f ;
 Instr 163 @ 0xa30 (2608) - STS.128 [R129.X16+0x800], R12 ;
 Instr 164 @ 0xa40 (2624) - SHF.R.U32.HI R7, RZ, 0x1, R7 ;
 Instr 165 @ 0xa50 (2640) - IMAD.SHL.U32 R37, R37, 0x8, RZ ;
 Instr 166 @ 0xa60 (2656) - CS2R R22, SRZ ;
 Instr 167 @ 0xa70 (2672) - IMAD.IADD R0, R5, 0x1, R0 ;
 Instr 168 @ 0xa80 (2688) - LEA.HI R40, R40, R7, RZ, 0x1e ;
 Instr 169 @ 0xa90 (2704) - CS2R R4, SRZ ;
 Instr 170 @ 0xaa0 (2720) - CS2R R6, SRZ ;
 Instr 171 @ 0xab0 (2736) - CS2R R24, SRZ ;
 Instr 172 @ 0xac0 (2752) - CS2R R26, SRZ ;
 Instr 173 @ 0xad0 (2768) - CS2R R28, SRZ ;
 Instr 174 @ 0xae0 (2784) - CS2R R30, SRZ ;
 Instr 175 @ 0xaf0 (2800) - CS2R R32, SRZ ;
 Instr 176 @ 0xb00 (2816) - CS2R R34, SRZ ;
 Instr 177 @ 0xb10 (2832) - IMAD R39, R0, c[0x0][0x3d0], R37 ;
 Instr 178 @ 0xb20 (2848) - CS2R R12, SRZ ;
 Instr 179 @ 0xb30 (2864) - CS2R R14, SRZ ;
 Instr 180 @ 0xb40 (2880) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 181 @ 0xb50 (2896) - @!P0 BRA 0x1e70 ;
Basic block id 13 - num instructions 36
 Instr 182 @ 0xb60 (2912) - LDS.U.128 R112, [R40.X16] ;
 Instr 183 @ 0xb70 (2928) - IMAD R125, R36, c[0x0][0x3d0], RZ ;
 Instr 184 @ 0xb80 (2944) - ULDC UR4, c[0x0][0x3d0] ;
 Instr 185 @ 0xb90 (2960) - IMAD.SHL.U32 R126, R39, 0x2, RZ ;
 Instr 186 @ 0xba0 (2976) - USHF.L.U32 UR6, UR4, 0x1, URZ ;
 Instr 187 @ 0xbb0 (2992) - IMAD R125, R125, c[0x0][0x1b8], RZ ;
 Instr 188 @ 0xbc0 (3008) - SHF.R.S32.HI R36, RZ, 0x1f, R39 ;
 Instr 189 @ 0xbd0 (3024) - USHF.L.U32 UR10, UR4, 0x4, URZ ;
 Instr 190 @ 0xbe0 (3040) - LDS.U.128 R108, [R40.X16+0x80] ;
 Instr 191 @ 0xbf0 (3056) - UIADD3 UR5, UR6, 0x20, URZ ;
 Instr 192 @ 0xc00 (3072) - LOP3.LUT R128, R3, 0x1fffffc, RZ, 0xc0, !PT ;
 Instr 193 @ 0xc10 (3088) - UIMAD UR8, UR4, 0x12, URZ ;
 Instr 194 @ 0xc20 (3104) - SHF.L.U64.HI R36, R39, 0x1, R36 ;
 Instr 195 @ 0xc30 (3120) - UIMAD UR4, UR4, 0xe, UR5 ;
 Instr 196 @ 0xc40 (3136) - LEA R126, P0, R125, R126, 0x1 ;
 Instr 197 @ 0xc50 (3152) - IMAD.IADD R128, R129, 0x1, -R128 ;
 Instr 198 @ 0xc60 (3168) - LDS.U.128 R104, [R40.X16+0x400] ;
 Instr 199 @ 0xc70 (3184) - SHF.R.S32.HI R38, RZ, 0x1f, R125 ;
 Instr 200 @ 0xc80 (3200) - UIMAD.WIDE.U32 UR12, UR6, 0x2, URZ ;
 Instr 201 @ 0xc90 (3216) - IADD3 R132, -R37, c[0x0][0x3d0], RZ ;
 Instr 202 @ 0xca0 (3232) - UIADD3 UR6, UR6, UR4, URZ ;
 Instr 203 @ 0xcb0 (3248) - LEA.HI.X R125, R125, R36, R38, 0x1, P0 ;
 Instr 204 @ 0xcc0 (3264) - IMAD.SHL.U32 R128, R128, 0x80, RZ ;
 Instr 205 @ 0xcd0 (3280) - IADD3 R126, P1, R126, c[0x0][0x168], RZ ;
 Instr 206 @ 0xce0 (3296) - LDS.U.128 R100, [R40.X16+0x480] ;
 Instr 207 @ 0xcf0 (3312) - IADD3 R0, -R0, c[0x0][0x1b8], RZ ;
 Instr 208 @ 0xd00 (3328) - UIMAD.WIDE.U32 UR14, UR5, 0x2, URZ ;
 Instr 209 @ 0xd10 (3344) - ISETP.GT.AND P6, PT, R132.reuse, 0x20, PT ;
 Instr 210 @ 0xd20 (3360) - UIMAD.WIDE.U32 UR10, UR10, 0x2, URZ ;
 Instr 211 @ 0xd30 (3376) - ISETP.GT.AND P0, PT, R132, RZ, PT ;
 Instr 212 @ 0xd40 (3392) - UIMAD.WIDE.U32 UR8, UR8, 0x2, URZ ;
 Instr 213 @ 0xd50 (3408) - IADD3 R130, R2, c[0x0][0x648], RZ ;
 Instr 214 @ 0xd60 (3424) - UIMAD.WIDE.U32 UR4, UR4, 0x2, URZ ;
 Instr 215 @ 0xd70 (3440) - IADD3 R131, R129, 0x40, RZ ;
 Instr 216 @ 0xd80 (3456) - UIMAD.WIDE.U32 UR6, UR6, 0x2, URZ ;
 Instr 217 @ 0xd90 (3472) - IADD3.X R125, R125, c[0x0][0x16c], RZ, P1, !PT ;
Basic block id 14 - num instructions 222
 Instr 218 @ 0xda0 (3488) - LDS.U.128 R120, [R128+0x800] ;
 Instr 219 @ 0xdb0 (3504) - CS2R R36, SRZ ;
 Instr 220 @ 0xdc0 (3520) - CS2R R38, SRZ ;
 Instr 221 @ 0xdd0 (3536) - CS2R R96, SRZ ;
 Instr 222 @ 0xde0 (3552) - CS2R R98, SRZ ;
 Instr 223 @ 0xdf0 (3568) - ISETP.LT.OR P3, PT, R0, 0x1, !P0 ;
 Instr 224 @ 0xe00 (3584) - ULDC.64 UR16, c[0x0][0x160] ;
 Instr 225 @ 0xe10 (3600) - CS2R R40, SRZ ;
 Instr 226 @ 0xe20 (3616) - CS2R R42, SRZ ;
 Instr 227 @ 0xe30 (3632) - CS2R R44, SRZ ;
 Instr 228 @ 0xe40 (3648) - CS2R R46, SRZ ;
 Instr 229 @ 0xe50 (3664) - CS2R R48, SRZ ;
 Instr 230 @ 0xe60 (3680) - CS2R R50, SRZ ;
 Instr 231 @ 0xe70 (3696) - CS2R R52, SRZ ;
 Instr 232 @ 0xe80 (3712) - CS2R R54, SRZ ;
 Instr 233 @ 0xe90 (3728) - CS2R R56, SRZ ;
 Instr 234 @ 0xea0 (3744) - CS2R R58, SRZ ;
 Instr 235 @ 0xeb0 (3760) - CS2R R92, SRZ ;
 Instr 236 @ 0xec0 (3776) - CS2R R94, SRZ ;
 Instr 237 @ 0xed0 (3792) - CS2R R60, SRZ ;
 Instr 238 @ 0xee0 (3808) - CS2R R62, SRZ ;
 Instr 239 @ 0xef0 (3824) - CS2R R88, SRZ ;
 Instr 240 @ 0xf00 (3840) - CS2R R90, SRZ ;
 Instr 241 @ 0xf10 (3856) - CS2R R64, SRZ ;
 Instr 242 @ 0xf20 (3872) - CS2R R66, SRZ ;
 Instr 243 @ 0xf30 (3888) - CS2R R68, SRZ ;
 Instr 244 @ 0xf40 (3904) - CS2R R70, SRZ ;
 Instr 245 @ 0xf50 (3920) - CS2R R72, SRZ ;
 Instr 246 @ 0xf60 (3936) - CS2R R74, SRZ ;
 Instr 247 @ 0xf70 (3952) - CS2R R76, SRZ ;
 Instr 248 @ 0xf80 (3968) - CS2R R78, SRZ ;
 Instr 249 @ 0xf90 (3984) - CS2R R80, SRZ ;
 Instr 250 @ 0xfa0 (4000) - CS2R R82, SRZ ;
 Instr 251 @ 0xfb0 (4016) - CS2R R84, SRZ ;
 Instr 252 @ 0xfc0 (4032) - CS2R R86, SRZ ;
 Instr 253 @ 0xfd0 (4048) - IMAD.IADD R117, R110, 0x1, R122.reuse ;
 Instr 254 @ 0xfe0 (4064) - IMAD.IADD R127, R114, 0x1, R122.reuse ;
 Instr 255 @ 0xff0 (4080) - IMAD.IADD R116, R106, 0x1, R122.reuse ;
 Instr 256 @ 0x1000 (4096) - ISETP.GE.U32.AND P1, PT, R117, c[0x0][0x1a0], PT ;
 Instr 257 @ 0x1010 (4112) - IMAD.IADD R122, R102, 0x1, R122 ;
 Instr 258 @ 0x1020 (4128) - ISETP.GE.U32.AND P2, PT, R127, c[0x0][0x1a0], PT ;
 Instr 259 @ 0x1030 (4144) - IMAD.IADD R117, R105, 0x1, R121 ;
 Instr 260 @ 0x1040 (4160) - ISETP.GE.U32.AND P5, PT, R116, c[0x0][0x1a0], PT ;
 Instr 261 @ 0x1050 (4176) - IMAD.MOV.U32 R127, RZ, RZ, R125 ;
 Instr 262 @ 0x1060 (4192) - ISETP.GE.U32.AND P4, PT, R122, c[0x0][0x1a0], PT ;
 Instr 263 @ 0x1070 (4208) - IMAD.IADD R122, R109, 0x1, R121 ;
 Instr 264 @ 0x1080 (4224) - IADD3 R116, R113, R121, RZ ;
 Instr 265 @ 0x1090 (4240) - ISETP.GE.U32.OR P5, PT, R117, c[0x0][0x19c], P5 ;
 Instr 266 @ 0x10a0 (4256) - IMAD.IADD R117, R115, 0x1, R123 ;
 Instr 267 @ 0x10b0 (4272) - ISETP.GE.U32.OR P2, PT, R116, c[0x0][0x19c], P2 ;
 Instr 268 @ 0x10c0 (4288) - IMAD.IADD R116, R101, 0x1, R121 ;
 Instr 269 @ 0x10d0 (4304) - ISETP.GE.U32.OR P1, PT, R122, c[0x0][0x19c], P1 ;
 Instr 270 @ 0x10e0 (4320) - @!P3 LDG.E.128.SYS R40, [R126] ;
 Instr 271 @ 0x10f0 (4336) - IADD3 R122, R111, R123, RZ ;
 Instr 272 @ 0x1100 (4352) - ISETP.GE.U32.OR P2, PT, R117, c[0x0][0x1a4], P2 ;
 Instr 273 @ 0x1110 (4368) - ISETP.GE.U32.OR P1, PT, R122, c[0x0][0x1a4], P1 ;
 Instr 274 @ 0x1120 (4384) - ISETP.LT.OR P2, PT, R121.reuse, RZ, P2 ;
 Instr 275 @ 0x1130 (4400) - ISETP.LT.OR P1, PT, R121, RZ, P1 ;
 Instr 276 @ 0x1140 (4416) - ISETP.GE.U32.OR P4, PT, R116, c[0x0][0x19c], P4 ;
 Instr 277 @ 0x1150 (4432) - IMAD.IADD R116, R107, 0x1, R123.reuse ;
 Instr 278 @ 0x1160 (4448) - IMAD.IADD R123, R103, 0x1, R123 ;
 Instr 279 @ 0x1170 (4464) - ISETP.GE.U32.OR P5, PT, R116, c[0x0][0x1a4], P5 ;
 Instr 280 @ 0x1180 (4480) - ISETP.GE.U32.OR P4, PT, R123, c[0x0][0x1a4], P4 ;
 Instr 281 @ 0x1190 (4496) - @!P2 IMAD.IADD R123, R112, 0x1, R120.reuse ;
 Instr 282 @ 0x11a0 (4512) - ISETP.LT.OR P5, PT, R121.reuse, RZ, P5 ;
 Instr 283 @ 0x11b0 (4528) - @!P1 IMAD.IADD R117, R108, 0x1, R120 ;
 Instr 284 @ 0x11c0 (4544) - ISETP.LT.OR P4, PT, R121, RZ, P4 ;
 Instr 285 @ 0x11d0 (4560) - @!P2 IMAD.WIDE R122, R123, 0x2, R134.reuse ;
 Instr 286 @ 0x11e0 (4576) - @!P1 IMAD.WIDE R136, R117, 0x2, R134 ;
 Instr 287 @ 0x11f0 (4592) - @!P2 LDG.E.128.SYS R36, [R122.64+UR16] ;
 Instr 288 @ 0x1200 (4608) - ISETP.LT.OR P2, PT, R0, 0x3, !P0 ;
 Instr 289 @ 0x1210 (4624) - @!P5 IADD3 R121, R104, R120, RZ ;
 Instr 290 @ 0x1220 (4640) - @!P4 IMAD.IADD R117, R100, 0x1, R120 ;
 Instr 291 @ 0x1230 (4656) - @!P5 IMAD.WIDE R120, R121, 0x2, R134.reuse ;
 Instr 292 @ 0x1240 (4672) - @!P1 LDG.E.128.SYS R96, [R136.64+UR16] ;
 Instr 293 @ 0x1250 (4688) - ISETP.LT.OR P1, PT, R0.reuse, 0x11, !P0 ;
 Instr 294 @ 0x1260 (4704) - @!P4 IMAD.WIDE R116, R117, 0x2, R134 ;
 Instr 295 @ 0x1270 (4720) - ISETP.LT.OR P0, PT, R0.reuse, 0x13, !P0 ;
 Instr 296 @ 0x1280 (4736) - @!P2 LDG.E.128.SYS R44, [R126.64+UR12] ;
 Instr 297 @ 0x1290 (4752) - ISETP.LT.OR P2, PT, R0, 0x1, !P6 ;
 Instr 298 @ 0x12a0 (4768) - @!P1 LDG.E.128.SYS R48, [R126.64+UR10] ;
 Instr 299 @ 0x12b0 (4784) - @!P0 LDG.E.128.SYS R52, [R126.64+UR8] ;
 Instr 300 @ 0x12c0 (4800) - @!P5 LDG.E.128.SYS R56, [R120.64+UR16] ;
 Instr 301 @ 0x12d0 (4816) - @!P4 LDG.E.128.SYS R92, [R116.64+UR16] ;
 Instr 302 @ 0x12e0 (4832) - LDS.U.128 R120, [R128+0xa00] ;
 Instr 303 @ 0x12f0 (4848) - @!P2 LDG.E.128.SYS R64, [R126+0x40] ;
 Instr 304 @ 0x1300 (4864) - IMAD.IADD R116, R114, 0x1, R122.reuse ;
 Instr 305 @ 0x1310 (4880) - IADD3 R117, R110, R122, RZ ;
 Instr 306 @ 0x1320 (4896) - IMAD.IADD R136, R113, 0x1, R121 ;
 Instr 307 @ 0x1330 (4912) - ISETP.GE.U32.AND P1, PT, R116, c[0x0][0x1a0], PT ;
 Instr 308 @ 0x1340 (4928) - IMAD.IADD R116, R106, 0x1, R122.reuse ;
 Instr 309 @ 0x1350 (4944) - ISETP.GE.U32.AND P0, PT, R117, c[0x0][0x1a0], PT ;
 Instr 310 @ 0x1360 (4960) - IMAD.IADD R122, R102, 0x1, R122 ;
 Instr 311 @ 0x1370 (4976) - IADD3 R117, R109, R121, RZ ;
 Instr 312 @ 0x1380 (4992) - ISETP.GE.U32.OR P1, PT, R136, c[0x0][0x19c], P1 ;
 Instr 313 @ 0x1390 (5008) - IMAD.IADD R136, R115, 0x1, R123 ;
 Instr 314 @ 0x13a0 (5024) - ISETP.GE.U32.OR P0, PT, R117, c[0x0][0x19c], P0 ;
 Instr 315 @ 0x13b0 (5040) - IADD3 R117, R111, R123, RZ ;
 Instr 316 @ 0x13c0 (5056) - ISETP.GE.U32.OR P1, PT, R136, c[0x0][0x1a4], P1 ;
 Instr 317 @ 0x13d0 (5072) - ISETP.GE.U32.OR P0, PT, R117, c[0x0][0x1a4], P0 ;
 Instr 318 @ 0x13e0 (5088) - ISETP.GE.U32.AND P4, PT, R116, c[0x0][0x1a0], PT ;
 Instr 319 @ 0x13f0 (5104) - IMAD.IADD R116, R105, 0x1, R121.reuse ;
 Instr 320 @ 0x1400 (5120) - ISETP.LT.OR P1, PT, R121.reuse, RZ, P1 ;
 Instr 321 @ 0x1410 (5136) - ISETP.LT.OR P0, PT, R121, RZ, P0 ;
 Instr 322 @ 0x1420 (5152) - ISETP.GE.U32.OR P4, PT, R116, c[0x0][0x19c], P4 ;
 Instr 323 @ 0x1430 (5168) - IMAD.IADD R116, R101, 0x1, R121 ;
 Instr 324 @ 0x1440 (5184) - ISETP.GE.U32.AND P3, PT, R122, c[0x0][0x1a0], PT ;
 Instr 325 @ 0x1450 (5200) - ISETP.GE.U32.OR P3, PT, R116, c[0x0][0x19c], P3 ;
 Instr 326 @ 0x1460 (5216) - IMAD.IADD R116, R107, 0x1, R123.reuse ;
 Instr 327 @ 0x1470 (5232) - IMAD.IADD R123, R103, 0x1, R123 ;
 Instr 328 @ 0x1480 (5248) - @!P0 IMAD.IADD R117, R108, 0x1, R120 ;
 Instr 329 @ 0x1490 (5264) - ISETP.GE.U32.OR P4, PT, R116, c[0x0][0x1a4], P4 ;
 Instr 330 @ 0x14a0 (5280) - ISETP.GE.U32.OR P3, PT, R123, c[0x0][0x1a4], P3 ;
 Instr 331 @ 0x14b0 (5296) - @!P0 IMAD.WIDE R116, R117, 0x2, R134.reuse ;
 Instr 332 @ 0x14c0 (5312) - @!P1 IADD3 R123, R112, R120, RZ ;
 Instr 333 @ 0x14d0 (5328) - ISETP.LT.OR P4, PT, R121.reuse, RZ, P4 ;
 Instr 334 @ 0x14e0 (5344) - ISETP.LT.OR P3, PT, R121, RZ, P3 ;
 Instr 335 @ 0x14f0 (5360) - @!P1 IMAD.WIDE R122, R123, 0x2, R134 ;
 Instr 336 @ 0x1500 (5376) - @!P0 LDG.E.128.SYS R88, [R116.64+UR16] ;
 Instr 337 @ 0x1510 (5392) - ISETP.LT.OR P0, PT, R0, 0x11, !P6 ;
 Instr 338 @ 0x1520 (5408) - @!P4 IMAD.IADD R121, R104, 0x1, R120.reuse ;
 Instr 339 @ 0x1530 (5424) - @!P3 IMAD.IADD R117, R100, 0x1, R120 ;
 Instr 340 @ 0x1540 (5440) - @!P1 LDG.E.128.SYS R60, [R122.64+UR16] ;
 Instr 341 @ 0x1550 (5456) - ISETP.LT.OR P1, PT, R0.reuse, 0x3, !P6 ;
 Instr 342 @ 0x1560 (5472) - @!P4 IMAD.WIDE R120, R121, 0x2, R134.reuse ;
 Instr 343 @ 0x1570 (5488) - ISETP.LT.OR P6, PT, R0, 0x13, !P6 ;
 Instr 344 @ 0x1580 (5504) - @!P3 IMAD.WIDE R122, R117, 0x2, R134 ;
 Instr 345 @ 0x1590 (5520) - @!P0 LDG.E.128.SYS R72, [R126.64+UR4] ;
 Instr 346 @ 0x15a0 (5536) - ISETP.NE.AND P0, PT, R130, 0x1, PT ;
 Instr 347 @ 0x15b0 (5552) - @!P1 LDG.E.128.SYS R68, [R126.64+UR14] ;
 Instr 348 @ 0x15c0 (5568) - @!P6 LDG.E.128.SYS R76, [R126.64+UR6] ;
 Instr 349 @ 0x15d0 (5584) - @!P4 LDG.E.128.SYS R80, [R120.64+UR16] ;
 Instr 350 @ 0x15e0 (5600) - @!P3 LDG.E.128.SYS R84, [R122.64+UR16] ;
 Instr 351 @ 0x15f0 (5616) - IMAD.MOV.U32 R2, RZ, RZ, R36 ;
 Instr 352 @ 0x1600 (5632) - MOV R3, R96 ;
 Instr 353 @ 0x1610 (5648) - IMAD.MOV.U32 R96, RZ, RZ, R37 ;
 Instr 354 @ 0x1620 (5664) - HMMA.1688.F32 R4, R2, R40, R4 ;
 Instr 355 @ 0x1630 (5680) - HMMA.1688.F32 R8, R2, R44, R8 ;
 Instr 356 @ 0x1640 (5696) - HMMA.1688.F32 R12, R2, R48, R12 ;
 Instr 357 @ 0x1650 (5712) - HMMA.1688.F32 R16, R2, R52, R16 ;
 Instr 358 @ 0x1660 (5728) - IMAD.MOV.U32 R2, RZ, RZ, R56 ;
 Instr 359 @ 0x1670 (5744) - IMAD.MOV.U32 R3, RZ, RZ, R92 ;
 Instr 360 @ 0x1680 (5760) - MOV R92, R57 ;
 Instr 361 @ 0x1690 (5776) - HMMA.1688.F32 R20, R2, R40, R20 ;
 Instr 362 @ 0x16a0 (5792) - HMMA.1688.F32 R24, R2, R44, R24 ;
 Instr 363 @ 0x16b0 (5808) - HMMA.1688.F32 R28, R2, R48, R28 ;
 Instr 364 @ 0x16c0 (5824) - HMMA.1688.F32 R32, R2, R52, R32 ;
 Instr 365 @ 0x16d0 (5840) - IMAD.MOV.U32 R2, RZ, RZ, R38 ;
 Instr 366 @ 0x16e0 (5856) - HMMA.1688.F32 R4, R96, R41, R4 ;
 Instr 367 @ 0x16f0 (5872) - IMAD.MOV.U32 R3, RZ, RZ, R98 ;
 Instr 368 @ 0x1700 (5888) - IMAD.MOV.U32 R98, RZ, RZ, R39 ;
 Instr 369 @ 0x1710 (5904) - HMMA.1688.F32 R8, R96, R45, R8 ;
 Instr 370 @ 0x1720 (5920) - HMMA.1688.F32 R12, R96, R49, R12 ;
 Instr 371 @ 0x1730 (5936) - HMMA.1688.F32 R16, R96, R53, R16 ;
 Instr 372 @ 0x1740 (5952) - HMMA.1688.F32 R20, R92, R41, R20 ;
 Instr 373 @ 0x1750 (5968) - HMMA.1688.F32 R24, R92, R45, R24 ;
 Instr 374 @ 0x1760 (5984) - HMMA.1688.F32 R28, R92, R49, R28 ;
 Instr 375 @ 0x1770 (6000) - HMMA.1688.F32 R32, R92, R53, R32 ;
 Instr 376 @ 0x1780 (6016) - HMMA.1688.F32 R4, R2, R42, R4 ;
 Instr 377 @ 0x1790 (6032) - HMMA.1688.F32 R8, R2, R46, R8 ;
 Instr 378 @ 0x17a0 (6048) - HMMA.1688.F32 R12, R2, R50, R12 ;
 Instr 379 @ 0x17b0 (6064) - HMMA.1688.F32 R16, R2, R54, R16 ;
 Instr 380 @ 0x17c0 (6080) - IMAD.MOV.U32 R2, RZ, RZ, R58 ;
 Instr 381 @ 0x17d0 (6096) - MOV R3, R94 ;
 Instr 382 @ 0x17e0 (6112) - IMAD.MOV.U32 R94, RZ, RZ, R59 ;
 Instr 383 @ 0x17f0 (6128) - HMMA.1688.F32 R20, R2, R42, R20 ;
 Instr 384 @ 0x1800 (6144) - HMMA.1688.F32 R24, R2, R46, R24 ;
 Instr 385 @ 0x1810 (6160) - HMMA.1688.F32 R28, R2, R50, R28 ;
 Instr 386 @ 0x1820 (6176) - HMMA.1688.F32 R32, R2, R54, R32 ;
 Instr 387 @ 0x1830 (6192) - IMAD.MOV.U32 R2, RZ, RZ, R60 ;
 Instr 388 @ 0x1840 (6208) - MOV R3, R88 ;
 Instr 389 @ 0x1850 (6224) - HMMA.1688.F32 R4, R98, R43, R4 ;
 Instr 390 @ 0x1860 (6240) - IMAD.MOV.U32 R88, RZ, RZ, R61 ;
 Instr 391 @ 0x1870 (6256) - HMMA.1688.F32 R8, R98, R47, R8 ;
 Instr 392 @ 0x1880 (6272) - HMMA.1688.F32 R12, R98, R51, R12 ;
 Instr 393 @ 0x1890 (6288) - HMMA.1688.F32 R16, R98, R55, R16 ;
 Instr 394 @ 0x18a0 (6304) - HMMA.1688.F32 R20, R94, R43, R20 ;
 Instr 395 @ 0x18b0 (6320) - HMMA.1688.F32 R24, R94, R47, R24 ;
 Instr 396 @ 0x18c0 (6336) - HMMA.1688.F32 R28, R94, R51, R28 ;
 Instr 397 @ 0x18d0 (6352) - HMMA.1688.F32 R32, R94, R55, R32 ;
 Instr 398 @ 0x18e0 (6368) - HMMA.1688.F32 R4, R2, R64, R4 ;
 Instr 399 @ 0x18f0 (6384) - HMMA.1688.F32 R8, R2, R68, R8 ;
 Instr 400 @ 0x1900 (6400) - HMMA.1688.F32 R12, R2, R72, R12 ;
 Instr 401 @ 0x1910 (6416) - HMMA.1688.F32 R16, R2, R76, R16 ;
 Instr 402 @ 0x1920 (6432) - IMAD.MOV.U32 R2, RZ, RZ, R80 ;
 Instr 403 @ 0x1930 (6448) - IMAD.MOV.U32 R3, RZ, RZ, R84 ;
 Instr 404 @ 0x1940 (6464) - MOV R84, R81 ;
 Instr 405 @ 0x1950 (6480) - HMMA.1688.F32 R20, R2, R64, R20 ;
 Instr 406 @ 0x1960 (6496) - HMMA.1688.F32 R24, R2, R68, R24 ;
 Instr 407 @ 0x1970 (6512) - HMMA.1688.F32 R28, R2, R72, R28 ;
 Instr 408 @ 0x1980 (6528) - HMMA.1688.F32 R32, R2, R76, R32 ;
 Instr 409 @ 0x1990 (6544) - IMAD.MOV.U32 R2, RZ, RZ, R62 ;
 Instr 410 @ 0x19a0 (6560) - HMMA.1688.F32 R4, R88, R65, R4 ;
 Instr 411 @ 0x19b0 (6576) - IMAD.MOV.U32 R3, RZ, RZ, R90 ;
 Instr 412 @ 0x19c0 (6592) - IMAD.MOV.U32 R90, RZ, RZ, R63 ;
 Instr 413 @ 0x19d0 (6608) - HMMA.1688.F32 R8, R88, R69, R8 ;
 Instr 414 @ 0x19e0 (6624) - HMMA.1688.F32 R12, R88, R73, R12 ;
 Instr 415 @ 0x19f0 (6640) - HMMA.1688.F32 R16, R88, R77, R16 ;
 Instr 416 @ 0x1a00 (6656) - HMMA.1688.F32 R20, R84, R65, R20 ;
 Instr 417 @ 0x1a10 (6672) - HMMA.1688.F32 R24, R84, R69, R24 ;
 Instr 418 @ 0x1a20 (6688) - HMMA.1688.F32 R28, R84, R73, R28 ;
 Instr 419 @ 0x1a30 (6704) - HMMA.1688.F32 R32, R84, R77, R32 ;
 Instr 420 @ 0x1a40 (6720) - HMMA.1688.F32 R4, R2, R66, R4 ;
 Instr 421 @ 0x1a50 (6736) - HMMA.1688.F32 R8, R2, R70, R8 ;
 Instr 422 @ 0x1a60 (6752) - HMMA.1688.F32 R12, R2, R74, R12 ;
 Instr 423 @ 0x1a70 (6768) - HMMA.1688.F32 R16, R2, R78, R16 ;
 Instr 424 @ 0x1a80 (6784) - IMAD.MOV.U32 R2, RZ, RZ, R82 ;
 Instr 425 @ 0x1a90 (6800) - MOV R3, R86 ;
 Instr 426 @ 0x1aa0 (6816) - IMAD.MOV.U32 R86, RZ, RZ, R83 ;
 Instr 427 @ 0x1ab0 (6832) - HMMA.1688.F32 R20, R2, R66, R20 ;
 Instr 428 @ 0x1ac0 (6848) - HMMA.1688.F32 R24, R2, R70, R24 ;
 Instr 429 @ 0x1ad0 (6864) - HMMA.1688.F32 R28, R2, R74, R28 ;
 Instr 430 @ 0x1ae0 (6880) - HMMA.1688.F32 R32, R2, R78, R32 ;
 Instr 431 @ 0x1af0 (6896) - HMMA.1688.F32 R4, R90, R67, R4 ;
 Instr 432 @ 0x1b00 (6912) - HMMA.1688.F32 R8, R90, R71, R8 ;
 Instr 433 @ 0x1b10 (6928) - HMMA.1688.F32 R12, R90, R75, R12 ;
 Instr 434 @ 0x1b20 (6944) - HMMA.1688.F32 R16, R90, R79, R16 ;
 Instr 435 @ 0x1b30 (6960) - HMMA.1688.F32 R20, R86, R67, R20 ;
 Instr 436 @ 0x1b40 (6976) - HMMA.1688.F32 R24, R86, R71, R24 ;
 Instr 437 @ 0x1b50 (6992) - HMMA.1688.F32 R28, R86, R75, R28 ;
 Instr 438 @ 0x1b60 (7008) - HMMA.1688.F32 R32, R86, R79, R32 ;
 Instr 439 @ 0x1b70 (7024) - @!P0 BRA 0x1e70 ;
Basic block id 15 - num instructions 7
 Instr 440 @ 0x1b80 (7040) - ISETP.GE.U32.AND P0, PT, R131, c[0x0][0x3d0], PT ;
 Instr 441 @ 0x1b90 (7056) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 442 @ 0x1ba0 (7072) - MOV R117, 0xffffffff ;
 Instr 443 @ 0x1bb0 (7088) - IMAD.MOV.U32 R116, RZ, RZ, RZ ;
 Instr 444 @ 0x1bc0 (7104) - BMOV.32.CLEAR RZ, B0 ;
 Instr 445 @ 0x1bd0 (7120) - BSSY B0, 0x1d90 ;
 Instr 446 @ 0x1be0 (7136) - @P0 BRA 0x1d80 ;
Basic block id 16 - num instructions 25
 Instr 447 @ 0x1bf0 (7152) - MOV R3, 0x1 ;
 Instr 448 @ 0x1c00 (7168) - CS2R R118, SRZ ;
 Instr 449 @ 0x1c10 (7184) - MOV R38, R131 ;
 Instr 450 @ 0x1c20 (7200) - ISETP.NE.AND P0, PT, R3.reuse, c[0x0][0x3d4], PT ;
 Instr 451 @ 0x1c30 (7216) - ISETP.NE.AND P1, PT, R3, c[0x0][0x3d8], PT ;
 Instr 452 @ 0x1c40 (7232) - MOV R116, RZ ;
 Instr 453 @ 0x1c50 (7248) - @P0 IMAD.HI.U32 R2, R131, c[0x0][0x3f4], RZ ;
 Instr 454 @ 0x1c60 (7264) - @P0 SHF.R.U32.HI R38, RZ, c[0x0][0x3f8], R2 ;
 Instr 455 @ 0x1c70 (7280) - @P0 IMAD.MOV R2, RZ, RZ, -c[0x0][0x3d4] ;
 Instr 456 @ 0x1c80 (7296) - @P0 IMAD R118, R38.reuse, R2, R131 ;
 Instr 457 @ 0x1c90 (7312) - MOV R2, c[0x0][0x1a8] ;
 Instr 458 @ 0x1ca0 (7328) - IMAD R117, R38, c[0x0][0x280], RZ ;
 Instr 459 @ 0x1cb0 (7344) - @P1 IMAD.HI.U32 R36, R118, c[0x0][0x3fc], RZ ;
 Instr 460 @ 0x1cc0 (7360) - ISETP.NE.AND P0, PT, R2, 0x1, PT ;
 Instr 461 @ 0x1cd0 (7376) - @P1 SHF.R.U32.HI R36, RZ, c[0x0][0x400], R36 ;
 Instr 462 @ 0x1ce0 (7392) - @P1 IMAD.MOV R3, RZ, RZ, -R36 ;
 Instr 463 @ 0x1cf0 (7408) - @P1 IMAD R119, R3, c[0x0][0x3d8], R118 ;
 Instr 464 @ 0x1d00 (7424) - @P1 MOV R118, R36 ;
 Instr 465 @ 0x1d10 (7440) - @P0 IMAD.HI.U32 R3, R119, c[0x0][0x404], RZ ;
 Instr 466 @ 0x1d20 (7456) - IMAD R118, R118, c[0x0][0x284], RZ ;
 Instr 467 @ 0x1d30 (7472) - @P0 SHF.R.U32.HI R3, RZ, c[0x0][0x408], R3 ;
 Instr 468 @ 0x1d40 (7488) - @P0 IMAD.MOV R2, RZ, RZ, -R3 ;
 Instr 469 @ 0x1d50 (7504) - @P0 IMAD R116, R2, c[0x0][0x1a8], R119 ;
 Instr 470 @ 0x1d60 (7520) - @P0 MOV R119, R3 ;
 Instr 471 @ 0x1d70 (7536) - IMAD R119, R119, c[0x0][0x288], RZ ;
Basic block id 17 - num instructions 15
 Instr 472 @ 0x1d80 (7552) - BSYNC B0 ;
 Instr 473 @ 0x1d90 (7568) - IADD3 R130, R130, -0x1, RZ ;
 Instr 474 @ 0x1da0 (7584) - IMAD R116, R117, c[0x0][0x234], R116 ;
 Instr 475 @ 0x1db0 (7600) - IADD3 R126, P1, R126, 0x80, RZ ;
 Instr 476 @ 0x1dc0 (7616) - ISETP.GT.AND P2, PT, R130, RZ, PT ;
 Instr 477 @ 0x1dd0 (7632) - IMAD R116, R118, c[0x0][0x238], R116 ;
 Instr 478 @ 0x1de0 (7648) - ISETP.GT.AND P0, PT, R132.reuse, 0x40, PT ;
 Instr 479 @ 0x1df0 (7664) - IMAD.X R125, RZ, RZ, R125, P1 ;
 Instr 480 @ 0x1e00 (7680) - ISETP.GT.AND P6, PT, R132.reuse, 0x60, PT ;
 Instr 481 @ 0x1e10 (7696) - IMAD R116, R119, c[0x0][0x23c], R116 ;
 Instr 482 @ 0x1e20 (7712) - IADD3 R132, R132, -0x40, RZ ;
 Instr 483 @ 0x1e30 (7728) - IADD3 R131, R131, 0x40, RZ ;
 Instr 484 @ 0x1e40 (7744) - STS.128 [R129.X16+0x800], R116 ;
 Instr 485 @ 0x1e50 (7760) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 486 @ 0x1e60 (7776) - @P2 BRA 0xda0 ;
Basic block id 18 - num instructions 33
 Instr 487 @ 0x1e70 (7792) - IMAD.MOV.U32 R53, RZ, RZ, 0x1 ;
 Instr 488 @ 0x1e80 (7808) - S2R R39, SR_TID.X ;
 Instr 489 @ 0x1e90 (7824) - IMAD.MOV.U32 R41, RZ, RZ, R133 ;
 Instr 490 @ 0x1ea0 (7840) - ISETP.NE.AND P3, PT, RZ, c[0x0][0x320], PT ;
 Instr 491 @ 0x1eb0 (7856) - ISETP.NE.AND P0, PT, R53, c[0x0][0x414], PT ;
 Instr 492 @ 0x1ec0 (7872) - MOV R43, RZ ;
 Instr 493 @ 0x1ed0 (7888) - @P0 IMAD.HI.U32 R0, R133, c[0x0][0x40c], RZ ;
 Instr 494 @ 0x1ee0 (7904) - @P0 IMAD.HI.U32 R2, R133, c[0x0][0x40c], RZ ;
 Instr 495 @ 0x1ef0 (7920) - @P0 SHF.R.U32.HI R41, RZ, c[0x0][0x410], R0 ;
 Instr 496 @ 0x1f00 (7936) - SHF.R.S32.HI R36, RZ, 0x1f, R39 ;
 Instr 497 @ 0x1f10 (7952) - @P0 IADD3 R0, -R41, RZ, RZ ;
 Instr 498 @ 0x1f20 (7968) - LEA.HI R36, R36, R39, RZ, 0x2 ;
 Instr 499 @ 0x1f30 (7984) - @P0 SHF.R.U32.HI R2, RZ, c[0x0][0x410], R2 ;
 Instr 500 @ 0x1f40 (8000) - @P0 IMAD R3, R0, c[0x0][0x414], R133 ;
 Instr 501 @ 0x1f50 (8016) - LOP3.LUT R36, R36, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 502 @ 0x1f60 (8032) - IMAD.MOV.U32 R0, RZ, RZ, RZ ;
 Instr 503 @ 0x1f70 (8048) - LOP3.LUT R38, R39, 0x60, RZ, 0xc0, !PT ;
 Instr 504 @ 0x1f80 (8064) - @P0 IMAD.SHL.U32 R0, R3, 0x20, RZ ;
 Instr 505 @ 0x1f90 (8080) - IADD3 R3, -R36, R39, RZ ;
 Instr 506 @ 0x1fa0 (8096) - @P0 IMAD.MOV R36, RZ, RZ, -R2 ;
 Instr 507 @ 0x1fb0 (8112) - LOP3.LUT R39, R39, 0x1c, RZ, 0xc0, !PT ;
 Instr 508 @ 0x1fc0 (8128) - SHF.R.U32.HI R38, RZ, 0x1, R38 ;
 Instr 509 @ 0x1fd0 (8144) - @P0 IMAD R37, R36, c[0x0][0x414], R133 ;
 Instr 510 @ 0x1fe0 (8160) - MOV R36, RZ ;
 Instr 511 @ 0x1ff0 (8176) - IMAD R0, R3, 0x4, R0 ;
 Instr 512 @ 0x2000 (8192) - LEA.HI R39, R39, R38, RZ, 0x1e ;
 Instr 513 @ 0x2010 (8208) - @P0 MOV R133, R2 ;
 Instr 514 @ 0x2020 (8224) - IMAD R42, R41, c[0x0][0x1b8], R0 ;
 Instr 515 @ 0x2030 (8240) - LEA R124, R124, R39, 0x7 ;
 Instr 516 @ 0x2040 (8256) - @P0 IMAD.SHL.U32 R36, R37, 0x20, RZ ;
 Instr 517 @ 0x2050 (8272) - IMAD.SHL.U32 R42, R42, 0x2, RZ ;
 Instr 518 @ 0x2060 (8288) - IMAD R36, R3, 0x4, R36 ;
 Instr 519 @ 0x2070 (8304) - @!P3 BRA 0x2180 ;
Basic block id 19 - num instructions 16
 Instr 520 @ 0x2080 (8320) - IADD3 R3, R36.reuse, 0x10, RZ ;
 Instr 521 @ 0x2090 (8336) - IMAD R133, R133, c[0x0][0x1b8], R36 ;
 Instr 522 @ 0x20a0 (8352) - MOV R2, 0x2 ;
 Instr 523 @ 0x20b0 (8368) - ISETP.GE.AND P1, PT, R36, c[0x0][0x1b8], PT ;
 Instr 524 @ 0x20c0 (8384) - ISETP.GE.AND P0, PT, R3, c[0x0][0x1b8], PT ;
 Instr 525 @ 0x20d0 (8400) - IMAD.WIDE R38, R133, R2, c[0x0][0x180] ;
 Instr 526 @ 0x20e0 (8416) - @!P1 LDG.E.64.SYS R36, [R38] ;
 Instr 527 @ 0x20f0 (8432) - @!P0 LDG.E.64.SYS R2, [R38+0x20] ;
 Instr 528 @ 0x2100 (8448) - @!P1 HADD2.F32 R51, R36.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 529 @ 0x2110 (8464) - @!P1 HADD2.F32 R50, R36.H1_H1, -RZ.H0_H0 ;
 Instr 530 @ 0x2120 (8480) - @!P1 HADD2.F32 R49, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 531 @ 0x2130 (8496) - @!P1 HADD2.F32 R48, R37.H1_H1, -RZ.H0_H0 ;
 Instr 532 @ 0x2140 (8512) - @!P0 HADD2.F32 R47, R2.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 533 @ 0x2150 (8528) - @!P0 HADD2.F32 R46, R2.H1_H1, -RZ.H0_H0 ;
 Instr 534 @ 0x2160 (8544) - @!P0 HADD2.F32 R45, R3.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 535 @ 0x2170 (8560) - @!P0 HADD2.F32 R44, R3.H1_H1, -RZ.H0_H0 ;
Basic block id 20 - num instructions 6
 Instr 536 @ 0x2180 (8576) - ISETP.NE.AND P2, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 537 @ 0x2190 (8592) - ULDC.U8 UR4, c[0x0][0x31c] ;
 Instr 538 @ 0x21a0 (8608) - IMAD.MOV.U32 R52, RZ, RZ, c[0x0][0x1e0] ;
 Instr 539 @ 0x21b0 (8624) - ISETP.NE.AND P1, PT, RZ, UR4, PT ;
 Instr 540 @ 0x21c0 (8640) - FSEL R52, R52, 1, !P1 ;
 Instr 541 @ 0x21d0 (8656) - @!P2 BRA 0x2510 ;
Basic block id 21 - num instructions 51
 Instr 542 @ 0x21e0 (8672) - ISETP.NE.AND P4, PT, R53, c[0x0][0x3c8], PT ;
 Instr 543 @ 0x21f0 (8688) - IMAD.MOV.U32 R60, RZ, RZ, R124 ;
 Instr 544 @ 0x2200 (8704) - IADD3 R62, R124, 0x8, RZ ;
 Instr 545 @ 0x2210 (8720) - IMAD.MOV.U32 R63, RZ, RZ, RZ ;
 Instr 546 @ 0x2220 (8736) - MOV R64, R124 ;
 Instr 547 @ 0x2230 (8752) - ULDC.64 UR4, c[0x0][0x178] ;
 Instr 548 @ 0x2240 (8768) - MOV R65, R62 ;
 Instr 549 @ 0x2250 (8784) - MOV R58, RZ ;
 Instr 550 @ 0x2260 (8800) - MOV R66, RZ ;
 Instr 551 @ 0x2270 (8816) - @P4 IMAD.HI.U32 R55, R65, c[0x0][0x3dc], RZ ;
 Instr 552 @ 0x2280 (8832) - MOV R61, RZ ;
 Instr 553 @ 0x2290 (8848) - ISETP.GE.AND P5, PT, R124.reuse, c[0x0][0x3c4], PT ;
 Instr 554 @ 0x22a0 (8864) - @P4 IMAD.HI.U32 R54, R124.reuse, c[0x0][0x3dc], RZ ;
 Instr 555 @ 0x22b0 (8880) - @P4 SHF.R.U32.HI R62, RZ, c[0x0][0x3e0], R55.reuse ;
 Instr 556 @ 0x22c0 (8896) - @P4 SHF.R.U32.HI R55, RZ, c[0x0][0x3e0], R55 ;
 Instr 557 @ 0x22d0 (8912) - @P4 IMAD.HI.U32 R56, R124, c[0x0][0x3dc], RZ ;
 Instr 558 @ 0x22e0 (8928) - @P4 SHF.R.U32.HI R60, RZ, c[0x0][0x3e0], R54 ;
 Instr 559 @ 0x22f0 (8944) - @P4 IADD3 R54, -R55, RZ, RZ ;
 Instr 560 @ 0x2300 (8960) - @P4 SHF.R.U32.HI R64, RZ, c[0x0][0x3e0], R56 ;
 Instr 561 @ 0x2310 (8976) - @P4 IMAD.MOV R57, RZ, RZ, -R60 ;
 Instr 562 @ 0x2320 (8992) - @P4 IADD3 R56, -R62, RZ, RZ ;
 Instr 563 @ 0x2330 (9008) - @P4 IMAD R58, R54, c[0x0][0x3c8], R65.reuse ;
 Instr 564 @ 0x2340 (9024) - @P4 IADD3 R59, -R64, RZ, RZ ;
 Instr 565 @ 0x2350 (9040) - @P4 IMAD R61, R57, c[0x0][0x3c8], R124.reuse ;
 Instr 566 @ 0x2360 (9056) - IADD3 R54, R0, 0x10, RZ ;
 Instr 567 @ 0x2370 (9072) - @P4 IMAD R63, R56, c[0x0][0x3c8], R65 ;
 Instr 568 @ 0x2380 (9088) - ISETP.GE.AND P0, PT, R65, c[0x0][0x3c4], PT ;
 Instr 569 @ 0x2390 (9104) - @P4 IMAD R66, R59, c[0x0][0x3c8], R124 ;
 Instr 570 @ 0x23a0 (9120) - ISETP.GE.OR P6, PT, R0, c[0x0][0x1b8], P5 ;
 Instr 571 @ 0x23b0 (9136) - @P4 IMAD.MOV.U32 R65, RZ, RZ, R55 ;
 Instr 572 @ 0x23c0 (9152) - MOV R56, c[0x0][0x250] ;
 Instr 573 @ 0x23d0 (9168) - IMAD R57, R66, c[0x0][0x250], RZ ;
 Instr 574 @ 0x23e0 (9184) - ISETP.GE.OR P5, PT, R54.reuse, c[0x0][0x1b8], P5 ;
 Instr 575 @ 0x23f0 (9200) - IMAD R63, R63, c[0x0][0x250], RZ ;
 Instr 576 @ 0x2400 (9216) - ISETP.GE.OR P4, PT, R54, c[0x0][0x1b8], P0 ;
 Instr 577 @ 0x2410 (9232) - IMAD R61, R61, R56, 0x10 ;
 Instr 578 @ 0x2420 (9248) - MOV R55, c[0x0][0x250] ;
 Instr 579 @ 0x2430 (9264) - IMAD R57, R64, c[0x0][0x244], R57 ;
 Instr 580 @ 0x2440 (9280) - ISETP.GE.OR P0, PT, R0, c[0x0][0x1b8], P0 ;
 Instr 581 @ 0x2450 (9296) - IMAD R61, R60, c[0x0][0x244], R61 ;
 Instr 582 @ 0x2460 (9312) - IMAD R58, R58, R55, 0x10 ;
 Instr 583 @ 0x2470 (9328) - IMAD R63, R62, c[0x0][0x244], R63 ;
 Instr 584 @ 0x2480 (9344) - IMAD R65, R65, c[0x0][0x244], R58 ;
 Instr 585 @ 0x2490 (9360) - @!P6 IMAD.WIDE R54, R57, 0x2, R42 ;
 Instr 586 @ 0x24a0 (9376) - @!P5 IMAD.WIDE R56, R61, 0x2, R42 ;
 Instr 587 @ 0x24b0 (9392) - @!P0 IMAD.WIDE R58, R63, 0x2, R42.reuse ;
 Instr 588 @ 0x24c0 (9408) - @!P6 LDG.E.64.SYS R40, [R54.64+UR4] ;
 Instr 589 @ 0x24d0 (9424) - @!P4 IMAD.WIDE R60, R65, 0x2, R42 ;
 Instr 590 @ 0x24e0 (9440) - @!P5 LDG.E.64.SYS R36, [R56.64+UR4] ;
 Instr 591 @ 0x24f0 (9456) - @!P0 LDG.E.64.SYS R38, [R58.64+UR4] ;
 Instr 592 @ 0x2500 (9472) - @!P4 LDG.E.64.SYS R2, [R60.64+UR4] ;
Basic block id 22 - num instructions 17
 Instr 593 @ 0x2510 (9488) - FMUL R4, R4, R52.reuse ;
 Instr 594 @ 0x2520 (9504) - FMUL R5, R5, R52 ;
 Instr 595 @ 0x2530 (9520) - FMUL R6, R6, R52.reuse ;
 Instr 596 @ 0x2540 (9536) - FMUL R7, R7, R52.reuse ;
 Instr 597 @ 0x2550 (9552) - FMUL R8, R8, R52.reuse ;
 Instr 598 @ 0x2560 (9568) - FMUL R9, R9, R52.reuse ;
 Instr 599 @ 0x2570 (9584) - FMUL R10, R10, R52.reuse ;
 Instr 600 @ 0x2580 (9600) - FMUL R11, R11, R52 ;
 Instr 601 @ 0x2590 (9616) - FMUL R12, R12, R52.reuse ;
 Instr 602 @ 0x25a0 (9632) - FMUL R54, R13, R52.reuse ;
 Instr 603 @ 0x25b0 (9648) - FMUL R14, R14, R52.reuse ;
 Instr 604 @ 0x25c0 (9664) - FMUL R15, R15, R52.reuse ;
 Instr 605 @ 0x25d0 (9680) - FMUL R16, R16, R52.reuse ;
 Instr 606 @ 0x25e0 (9696) - FMUL R17, R17, R52 ;
 Instr 607 @ 0x25f0 (9712) - FMUL R18, R18, R52.reuse ;
 Instr 608 @ 0x2600 (9728) - FMUL R63, R19, R52 ;
 Instr 609 @ 0x2610 (9744) - @!P3 BRA 0x2720 ;
Basic block id 23 - num instructions 16
 Instr 610 @ 0x2620 (9760) - FADD R4, R51.reuse, R4 ;
 Instr 611 @ 0x2630 (9776) - FADD R6, R51, R6 ;
 Instr 612 @ 0x2640 (9792) - FADD R5, R50.reuse, R5 ;
 Instr 613 @ 0x2650 (9808) - FADD R7, R50, R7 ;
 Instr 614 @ 0x2660 (9824) - FADD R8, R49, R8 ;
 Instr 615 @ 0x2670 (9840) - FADD R10, R49, R10 ;
 Instr 616 @ 0x2680 (9856) - FADD R9, R48.reuse, R9 ;
 Instr 617 @ 0x2690 (9872) - FADD R11, R48, R11 ;
 Instr 618 @ 0x26a0 (9888) - FADD R12, R47.reuse, R12 ;
 Instr 619 @ 0x26b0 (9904) - FADD R14, R47, R14 ;
 Instr 620 @ 0x26c0 (9920) - FADD R54, R46, R54 ;
 Instr 621 @ 0x26d0 (9936) - FADD R15, R46, R15 ;
 Instr 622 @ 0x26e0 (9952) - FADD R16, R45.reuse, R16 ;
 Instr 623 @ 0x26f0 (9968) - FADD R18, R45, R18 ;
 Instr 624 @ 0x2700 (9984) - FADD R17, R44.reuse, R17 ;
 Instr 625 @ 0x2710 (10000) - FADD R63, R44, R63 ;
Basic block id 24 - num instructions 3
 Instr 626 @ 0x2720 (10016) - MOV R13, c[0x0][0x1f0] ;
 Instr 627 @ 0x2730 (10032) - FSEL R13, R13, 1, !P1 ;
 Instr 628 @ 0x2740 (10048) - @!P2 BRA 0x2950 ;
Basic block id 25 - num instructions 32
 Instr 629 @ 0x2750 (10064) - HADD2.F32 R59, R40.H0_H0, -RZ.H0_H0 ;
 Instr 630 @ 0x2760 (10080) - HADD2.F32 R57, R41.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 631 @ 0x2770 (10096) - HADD2.F32 R60, R41.H1_H1, -RZ.H0_H0 ;
 Instr 632 @ 0x2780 (10112) - HADD2.F32 R55, R38.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 633 @ 0x2790 (10128) - HADD2.F32 R58, R38.H1_H1, -RZ.H0_H0 ;
 Instr 634 @ 0x27a0 (10144) - FFMA R4, R59, R13.reuse, R4 ;
 Instr 635 @ 0x27b0 (10160) - HADD2.F32 R19, R39.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 636 @ 0x27c0 (10176) - FFMA R8, R57, R13.reuse, R8 ;
 Instr 637 @ 0x27d0 (10192) - HADD2.F32 R56, R39.H1_H1, -RZ.H0_H0 ;
 Instr 638 @ 0x27e0 (10208) - FFMA R9, R60, R13.reuse, R9 ;
 Instr 639 @ 0x27f0 (10224) - HADD2.F32 R62, R40.H1_H1, -RZ.H0_H0 ;
 Instr 640 @ 0x2800 (10240) - FFMA R6, R55, R13.reuse, R6 ;
 Instr 641 @ 0x2810 (10256) - HADD2.F32 R61, R36.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 642 @ 0x2820 (10272) - FFMA R7, R58, R13.reuse, R7 ;
 Instr 643 @ 0x2830 (10288) - HADD2.F32 R59, R36.H1_H1, -RZ.H0_H0 ;
 Instr 644 @ 0x2840 (10304) - FFMA R10, R19, R13.reuse, R10 ;
 Instr 645 @ 0x2850 (10320) - HADD2.F32 R57, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 646 @ 0x2860 (10336) - FFMA R11, R56, R13.reuse, R11 ;
 Instr 647 @ 0x2870 (10352) - HADD2.F32 R60, R37.H1_H1, -RZ.H0_H0 ;
 Instr 648 @ 0x2880 (10368) - FFMA R5, R62, R13.reuse, R5 ;
 Instr 649 @ 0x2890 (10384) - HADD2.F32 R55, R2.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 650 @ 0x28a0 (10400) - FFMA R12, R61, R13.reuse, R12 ;
 Instr 651 @ 0x28b0 (10416) - HADD2.F32 R58, R2.H1_H1, -RZ.H0_H0 ;
 Instr 652 @ 0x28c0 (10432) - FFMA R54, R59, R13.reuse, R54 ;
 Instr 653 @ 0x28d0 (10448) - HADD2.F32 R19, R3.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 654 @ 0x28e0 (10464) - FFMA R16, R57, R13.reuse, R16 ;
 Instr 655 @ 0x28f0 (10480) - HADD2.F32 R56, R3.H1_H1, -RZ.H0_H0 ;
 Instr 656 @ 0x2900 (10496) - FFMA R17, R60, R13, R17 ;
 Instr 657 @ 0x2910 (10512) - FFMA R14, R55, R13.reuse, R14 ;
 Instr 658 @ 0x2920 (10528) - FFMA R15, R58, R13.reuse, R15 ;
 Instr 659 @ 0x2930 (10544) - FFMA R18, R19, R13.reuse, R18 ;
 Instr 660 @ 0x2940 (10560) - FFMA R63, R56, R13, R63 ;
Basic block id 26 - num instructions 119
 Instr 661 @ 0x2950 (10576) - F2F.F16.F32 R4, R4 ;
 Instr 662 @ 0x2960 (10592) - ISETP.NE.AND P0, PT, R53, c[0x0][0x3c8], PT ;
 Instr 663 @ 0x2970 (10608) - IMAD.MOV.U32 R55, RZ, RZ, R124 ;
 Instr 664 @ 0x2980 (10624) - ISETP.GE.AND P1, PT, R124, c[0x0][0x3c4], PT ;
 Instr 665 @ 0x2990 (10640) - IMAD.MOV.U32 R65, RZ, RZ, RZ ;
 Instr 666 @ 0x29a0 (10656) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 667 @ 0x29b0 (10672) - ISETP.GE.OR P6, PT, R0, c[0x0][0x1b8], P1 ;
 Instr 668 @ 0x29c0 (10688) - F2F.F16.F32 R5, R5 ;
 Instr 669 @ 0x29d0 (10704) - F2F.F16.F32 R8, R8 ;
 Instr 670 @ 0x29e0 (10720) - F2F.F16.F32 R9, R9 ;
 Instr 671 @ 0x29f0 (10736) - PRMT R4, R4, 0x5410, R5 ;
 Instr 672 @ 0x2a00 (10752) - F2F.F16.F32 R6, R6 ;
 Instr 673 @ 0x2a10 (10768) - F2F.F16.F32 R7, R7 ;
 Instr 674 @ 0x2a20 (10784) - F2F.F16.F32 R12, R12 ;
 Instr 675 @ 0x2a30 (10800) - F2F.F16.F32 R19, R54 ;
 Instr 676 @ 0x2a40 (10816) - PRMT R6, R6, 0x5410, R7 ;
 Instr 677 @ 0x2a50 (10832) - PRMT R56, R6, 0x5410, R7 ;
 Instr 678 @ 0x2a60 (10848) - F2F.F16.F32 R14, R14 ;
 Instr 679 @ 0x2a70 (10864) - PRMT R54, R4, 0x5410, R5 ;
 Instr 680 @ 0x2a80 (10880) - PRMT R5, R8.reuse, 0x5410, R9.reuse ;
 Instr 681 @ 0x2a90 (10896) - PRMT R8, R8, 0x5410, R9 ;
 Instr 682 @ 0x2aa0 (10912) - F2F.F16.F32 R15, R15 ;
 Instr 683 @ 0x2ab0 (10928) - PRMT R9, R12.reuse, 0x5410, R19.reuse ;
 Instr 684 @ 0x2ac0 (10944) - PRMT R12, R12, 0x5410, R19 ;
 Instr 685 @ 0x2ad0 (10960) - F2F.F16.F32 R53, c[0x0][0x210] ;
 Instr 686 @ 0x2ae0 (10976) - F2F.F16.F32 R10, R10 ;
 Instr 687 @ 0x2af0 (10992) - PRMT R14, R14, 0x5410, R15 ;
 Instr 688 @ 0x2b00 (11008) - PRMT R58, R14, 0x5410, R15 ;
 Instr 689 @ 0x2b10 (11024) - @P0 IMAD.HI.U32 R15, R124.reuse, c[0x0][0x3dc], RZ ;
 Instr 690 @ 0x2b20 (11040) - F2F.F16.F32 R11, R11 ;
 Instr 691 @ 0x2b30 (11056) - HSET2.GTU.AND R19, R54, R53.reuse.H0_H0, PT ;
 Instr 692 @ 0x2b40 (11072) - @P0 IMAD.HI.U32 R54, R124, c[0x0][0x3dc], RZ ;
 Instr 693 @ 0x2b50 (11088) - HSET2.GTU.AND R8, R8, R53.reuse.H0_H0, PT ;
 Instr 694 @ 0x2b60 (11104) - HSET2.GTU.AND R57, R58, R53.reuse.H0_H0, PT ;
 Instr 695 @ 0x2b70 (11120) - HSET2.GTU.AND R12, R12, R53.H0_H0, PT ;
 Instr 696 @ 0x2b80 (11136) - F2F.F16.F32 R16, R16 ;
 Instr 697 @ 0x2b90 (11152) - LOP3.LUT R19, R19, R4, RZ, 0xc0, !PT ;
 Instr 698 @ 0x2ba0 (11168) - IADD3 R4, R124, 0x8, RZ ;
 Instr 699 @ 0x2bb0 (11184) - LOP3.LUT R5, R8, R5, RZ, 0xc0, !PT ;
 Instr 700 @ 0x2bc0 (11200) - @P0 SHF.R.U32.HI R55, RZ, c[0x0][0x3e0], R54 ;
 Instr 701 @ 0x2bd0 (11216) - F2F.F16.F32 R17, R17 ;
 Instr 702 @ 0x2be0 (11232) - PRMT R7, R10.reuse, 0x5410, R11.reuse ;
 Instr 703 @ 0x2bf0 (11248) - IMAD.MOV.U32 R8, RZ, RZ, R4 ;
 Instr 704 @ 0x2c00 (11264) - PRMT R10, R10, 0x5410, R11 ;
 Instr 705 @ 0x2c10 (11280) - LOP3.LUT R57, R57, R14, RZ, 0xc0, !PT ;
 Instr 706 @ 0x2c20 (11296) - LOP3.LUT R12, R12, R9, RZ, 0xc0, !PT ;
 Instr 707 @ 0x2c30 (11312) - F2F.F16.F32 R18, R18 ;
 Instr 708 @ 0x2c40 (11328) - HSET2.GTU.AND R10, R10, R53.H0_H0, PT ;
 Instr 709 @ 0x2c50 (11344) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 710 @ 0x2c60 (11360) - ISETP.GE.AND P4, PT, R8, c[0x0][0x3c4], PT ;
 Instr 711 @ 0x2c70 (11376) - ISETP.GE.OR P5, PT, R0, c[0x0][0x1b8], P4 ;
 Instr 712 @ 0x2c80 (11392) - F2F.F16.F32 R63, R63 ;
 Instr 713 @ 0x2c90 (11408) - PRMT R11, R16.reuse, 0x5410, R17.reuse ;
 Instr 714 @ 0x2ca0 (11424) - PRMT R16, R16, 0x5410, R17 ;
 Instr 715 @ 0x2cb0 (11440) - IMAD.MOV.U32 R17, RZ, RZ, R124 ;
 Instr 716 @ 0x2cc0 (11456) - LOP3.LUT R7, R10, R7, RZ, 0xc0, !PT ;
 Instr 717 @ 0x2cd0 (11472) - @P0 IMAD.HI.U32 R10, R8, c[0x0][0x3dc], RZ ;
 Instr 718 @ 0x2ce0 (11488) - F2F.F16.F32 R14, c[0x0][0x220] ;
 Instr 719 @ 0x2cf0 (11504) - @P0 SHF.R.U32.HI R17, RZ, c[0x0][0x3e0], R15 ;
 Instr 720 @ 0x2d00 (11520) - HSET2.GTU.AND R16, R16, R53.reuse.H0_H0, PT ;
 Instr 721 @ 0x2d10 (11536) - @P0 SHF.R.U32.HI R4, RZ, c[0x0][0x3e0], R10.reuse ;
 Instr 722 @ 0x2d20 (11552) - HSET2.GTU.AND R15, R56, R53.H0_H0, PT ;
 Instr 723 @ 0x2d30 (11568) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3e0], R10 ;
 Instr 724 @ 0x2d40 (11584) - PRMT R18, R18, 0x5410, R63 ;
 Instr 725 @ 0x2d50 (11600) - @P0 IMAD.MOV R67, RZ, RZ, -R4 ;
 Instr 726 @ 0x2d60 (11616) - LOP3.LUT R59, R16, R11, RZ, 0xc0, !PT ;
 Instr 727 @ 0x2d70 (11632) - @P0 IMAD.MOV R11, RZ, RZ, -R17 ;
 Instr 728 @ 0x2d80 (11648) - PRMT R60, R18, 0x5410, R63 ;
 Instr 729 @ 0x2d90 (11664) - @P0 IMAD.MOV R63, RZ, RZ, -R55 ;
 Instr 730 @ 0x2da0 (11680) - LOP3.LUT R6, R15, R6, RZ, 0xc0, !PT ;
 Instr 731 @ 0x2db0 (11696) - @P0 IMAD.MOV R61, RZ, RZ, -R10 ;
 Instr 732 @ 0x2dc0 (11712) - @P0 IMAD R9, R11, c[0x0][0x3c8], R124.reuse ;
 Instr 733 @ 0x2dd0 (11728) - HSET2.GTU.AND R15, R60, R53.H0_H0, PT ;
 Instr 734 @ 0x2de0 (11744) - @P0 IMAD R65, R63, c[0x0][0x3c8], R124 ;
 Instr 735 @ 0x2df0 (11760) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 736 @ 0x2e00 (11776) - IMAD.MOV.U32 R63, RZ, RZ, c[0x0][0x250] ;
 Instr 737 @ 0x2e10 (11792) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x250] ;
 Instr 738 @ 0x2e20 (11808) - LOP3.LUT R15, R15, R18, RZ, 0xc0, !PT ;
 Instr 739 @ 0x2e30 (11824) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 740 @ 0x2e40 (11840) - @P0 IMAD R11, R67, c[0x0][0x3c8], R8.reuse ;
 Instr 741 @ 0x2e50 (11856) - @P0 IMAD R18, R61, c[0x0][0x3c8], R8 ;
 Instr 742 @ 0x2e60 (11872) - HSET2.LEU.AND R67, R6, R14.H0_H0, PT ;
 Instr 743 @ 0x2e70 (11888) - IMAD R16, R65, R16, 0x10 ;
 Instr 744 @ 0x2e80 (11904) - IMAD R63, R18, R63, 0x10 ;
 Instr 745 @ 0x2e90 (11920) - HSET2.LEU.AND R65, R12, R14.reuse.H0_H0, PT ;
 Instr 746 @ 0x2ea0 (11936) - IMAD R18, R9, c[0x0][0x250], RZ ;
 Instr 747 @ 0x2eb0 (11952) - @P0 IMAD.MOV.U32 R8, RZ, RZ, R10 ;
 Instr 748 @ 0x2ec0 (11968) - HSET2.LEU.AND R9, R7, R14.reuse.H0_H0, PT ;
 Instr 749 @ 0x2ed0 (11984) - IMAD R61, R11, c[0x0][0x250], RZ ;
 Instr 750 @ 0x2ee0 (12000) - HSET2.LEU.AND R10, R19, R14.reuse.H0_H0, PT ;
 Instr 751 @ 0x2ef0 (12016) - IMAD R17, R17, c[0x0][0x244], R18 ;
 Instr 752 @ 0x2f00 (12032) - HSET2.LEU.AND R11, R5, R14.reuse.H0_H0, PT ;
 Instr 753 @ 0x2f10 (12048) - IMAD R55, R55, c[0x0][0x244], R16 ;
 Instr 754 @ 0x2f20 (12064) - IADD3 R18, R0, 0x10, RZ ;
 Instr 755 @ 0x2f30 (12080) - IMAD R61, R4, c[0x0][0x244], R61 ;
 Instr 756 @ 0x2f40 (12096) - PRMT R16, R14, 0x5410, R14 ;
 Instr 757 @ 0x2f50 (12112) - HSET2.LEU.AND R4, R57, R14.H0_H0, PT ;
 Instr 758 @ 0x2f60 (12128) - ISETP.GE.OR P1, PT, R18, c[0x0][0x1b8], P1 ;
 Instr 759 @ 0x2f70 (12144) - IMAD R63, R8, c[0x0][0x244], R63 ;
 Instr 760 @ 0x2f80 (12160) - LOP3.LUT R10, R19, R16, R10, 0xe4, !PT ;
 Instr 761 @ 0x2f90 (12176) - ISETP.GE.OR P4, PT, R18, c[0x0][0x1b8], P4 ;
 Instr 762 @ 0x2fa0 (12192) - HSET2.LEU.AND R19, R59, R14.reuse.H0_H0, PT ;
 Instr 763 @ 0x2fb0 (12208) - LOP3.LUT R11, R5, R16.reuse, R11, 0xe4, !PT ;
 Instr 764 @ 0x2fc0 (12224) - HSET2.LEU.AND R5, R15, R14.H0_H0, PT ;
 Instr 765 @ 0x2fd0 (12240) - LOP3.LUT R9, R7, R16.reuse, R9, 0xe4, !PT ;
 Instr 766 @ 0x2fe0 (12256) - LOP3.LUT R4, R57, R16.reuse, R4, 0xe4, !PT ;
 Instr 767 @ 0x2ff0 (12272) - @!P6 IMAD.WIDE R56, R17, 0x2, R42 ;
 Instr 768 @ 0x3000 (12288) - LOP3.LUT R7, R59, R16.reuse, R19, 0xe4, !PT ;
 Instr 769 @ 0x3010 (12304) - LOP3.LUT R8, R6, R16.reuse, R67, 0xe4, !PT ;
 Instr 770 @ 0x3020 (12320) - @!P5 IMAD.WIDE R58, R61, 0x2, R42 ;
 Instr 771 @ 0x3030 (12336) - LOP3.LUT R6, R12, R16, R65, 0xe4, !PT ;
 Instr 772 @ 0x3040 (12352) - LOP3.LUT R5, R15, R16, R5, 0xe4, !PT ;
 Instr 773 @ 0x3050 (12368) - @!P1 IMAD.WIDE R54, R55, 0x2, R42.reuse ;
 Instr 774 @ 0x3060 (12384) - @!P6 STG.E.64.SYS [R56.64+UR4], R10 ;
 Instr 775 @ 0x3070 (12400) - @!P4 IMAD.WIDE R60, R63, 0x2, R42 ;
 Instr 776 @ 0x3080 (12416) - @!P5 STG.E.64.SYS [R58.64+UR4], R8 ;
 Instr 777 @ 0x3090 (12432) - @!P1 STG.E.64.SYS [R54.64+UR4], R6 ;
 Instr 778 @ 0x30a0 (12448) - @!P4 STG.E.64.SYS [R60.64+UR4], R4 ;
 Instr 779 @ 0x30b0 (12464) - @!P2 BRA 0x33e0 ;
Basic block id 27 - num instructions 50
 Instr 780 @ 0x30c0 (12480) - IADD3 R19, R124.reuse, 0x40, RZ ;
 Instr 781 @ 0x30d0 (12496) - CS2R R10, SRZ ;
 Instr 782 @ 0x30e0 (12512) - IADD3 R12, R124, 0x48, RZ ;
 Instr 783 @ 0x30f0 (12528) - ULDC.64 UR4, c[0x0][0x178] ;
 Instr 784 @ 0x3100 (12544) - MOV R55, R19 ;
 Instr 785 @ 0x3110 (12560) - MOV R17, R12 ;
 Instr 786 @ 0x3120 (12576) - MOV R54, RZ ;
 Instr 787 @ 0x3130 (12592) - @P0 IMAD.HI.U32 R5, R55.reuse, c[0x0][0x3dc], RZ ;
 Instr 788 @ 0x3140 (12608) - MOV R15, RZ ;
 Instr 789 @ 0x3150 (12624) - ISETP.GE.AND P4, PT, R55.reuse, c[0x0][0x3c4], PT ;
 Instr 790 @ 0x3160 (12640) - @P0 IMAD.HI.U32 R7, R55, c[0x0][0x3dc], RZ ;
 Instr 791 @ 0x3170 (12656) - @P0 SHF.R.U32.HI R19, RZ, c[0x0][0x3e0], R5 ;
 Instr 792 @ 0x3180 (12672) - ISETP.GE.AND P1, PT, R17.reuse, c[0x0][0x3c4], PT ;
 Instr 793 @ 0x3190 (12688) - @P0 IMAD.HI.U32 R4, R17, c[0x0][0x3dc], RZ ;
 Instr 794 @ 0x31a0 (12704) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3e0], R7 ;
 Instr 795 @ 0x31b0 (12720) - @P0 IADD3 R9, -R19, RZ, RZ ;
 Instr 796 @ 0x31c0 (12736) - @P0 IMAD.HI.U32 R5, R17, c[0x0][0x3dc], RZ ;
 Instr 797 @ 0x31d0 (12752) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x3e0], R4 ;
 Instr 798 @ 0x31e0 (12768) - ISETP.GE.OR P6, PT, R0, c[0x0][0x1b8], P4 ;
 Instr 799 @ 0x31f0 (12784) - @P0 IMAD.MOV R6, RZ, RZ, -R7 ;
 Instr 800 @ 0x3200 (12800) - @P0 SHF.R.U32.HI R5, RZ, c[0x0][0x3e0], R5 ;
 Instr 801 @ 0x3210 (12816) - @P0 IMAD R54, R9, c[0x0][0x3c8], R55.reuse ;
 Instr 802 @ 0x3220 (12832) - @P0 IADD3 R8, -R12, RZ, RZ ;
 Instr 803 @ 0x3230 (12848) - @P0 IMAD R11, R6, c[0x0][0x3c8], R55 ;
 Instr 804 @ 0x3240 (12864) - @P0 IADD3 R4, -R5, RZ, RZ ;
 Instr 805 @ 0x3250 (12880) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x250] ;
 Instr 806 @ 0x3260 (12896) - @P0 MOV R55, R7 ;
 Instr 807 @ 0x3270 (12912) - @P0 IMAD R15, R8, c[0x0][0x3c8], R17.reuse ;
 Instr 808 @ 0x3280 (12928) - MOV R7, c[0x0][0x250] ;
 Instr 809 @ 0x3290 (12944) - @P0 IMAD R10, R4, c[0x0][0x3c8], R17 ;
 Instr 810 @ 0x32a0 (12960) - ISETP.GE.OR P5, PT, R0, c[0x0][0x1b8], P1 ;
 Instr 811 @ 0x32b0 (12976) - IMAD R6, R11, R6, 0x10 ;
 Instr 812 @ 0x32c0 (12992) - ISETP.GE.OR P4, PT, R18, c[0x0][0x1b8], P4 ;
 Instr 813 @ 0x32d0 (13008) - IMAD R54, R54, c[0x0][0x250], RZ ;
 Instr 814 @ 0x32e0 (13024) - ISETP.GE.OR P1, PT, R18, c[0x0][0x1b8], P1 ;
 Instr 815 @ 0x32f0 (13040) - IMAD R15, R15, c[0x0][0x250], RZ ;
 Instr 816 @ 0x3300 (13056) - @P0 MOV R17, R5 ;
 Instr 817 @ 0x3310 (13072) - IMAD R10, R10, R7, 0x10 ;
 Instr 818 @ 0x3320 (13088) - IMAD R5, R19, c[0x0][0x244], R54 ;
 Instr 819 @ 0x3330 (13104) - IMAD R55, R55, c[0x0][0x244], R6 ;
 Instr 820 @ 0x3340 (13120) - IMAD R15, R12, c[0x0][0x244], R15 ;
 Instr 821 @ 0x3350 (13136) - IMAD R17, R17, c[0x0][0x244], R10 ;
 Instr 822 @ 0x3360 (13152) - @!P6 IMAD.WIDE R4, R5, 0x2, R42 ;
 Instr 823 @ 0x3370 (13168) - @!P5 IMAD.WIDE R6, R15, 0x2, R42 ;
 Instr 824 @ 0x3380 (13184) - @!P4 IMAD.WIDE R8, R55, 0x2, R42.reuse ;
 Instr 825 @ 0x3390 (13200) - @!P6 LDG.E.64.SYS R40, [R4.64+UR4] ;
 Instr 826 @ 0x33a0 (13216) - @!P1 IMAD.WIDE R10, R17, 0x2, R42 ;
 Instr 827 @ 0x33b0 (13232) - @!P5 LDG.E.64.SYS R38, [R6.64+UR4] ;
 Instr 828 @ 0x33c0 (13248) - @!P4 LDG.E.64.SYS R36, [R8.64+UR4] ;
 Instr 829 @ 0x33d0 (13264) - @!P1 LDG.E.64.SYS R2, [R10.64+UR4] ;
Basic block id 28 - num instructions 17
 Instr 830 @ 0x33e0 (13280) - FMUL R20, R20, R52.reuse ;
 Instr 831 @ 0x33f0 (13296) - FMUL R21, R21, R52 ;
 Instr 832 @ 0x3400 (13312) - FMUL R22, R22, R52.reuse ;
 Instr 833 @ 0x3410 (13328) - FMUL R23, R23, R52.reuse ;
 Instr 834 @ 0x3420 (13344) - FMUL R24, R24, R52.reuse ;
 Instr 835 @ 0x3430 (13360) - FMUL R25, R25, R52.reuse ;
 Instr 836 @ 0x3440 (13376) - FMUL R26, R26, R52.reuse ;
 Instr 837 @ 0x3450 (13392) - FMUL R27, R27, R52 ;
 Instr 838 @ 0x3460 (13408) - FMUL R28, R28, R52.reuse ;
 Instr 839 @ 0x3470 (13424) - FMUL R29, R29, R52.reuse ;
 Instr 840 @ 0x3480 (13440) - FMUL R30, R30, R52.reuse ;
 Instr 841 @ 0x3490 (13456) - FMUL R31, R31, R52.reuse ;
 Instr 842 @ 0x34a0 (13472) - FMUL R32, R32, R52.reuse ;
 Instr 843 @ 0x34b0 (13488) - FMUL R33, R33, R52 ;
 Instr 844 @ 0x34c0 (13504) - FMUL R34, R34, R52.reuse ;
 Instr 845 @ 0x34d0 (13520) - FMUL R35, R35, R52 ;
 Instr 846 @ 0x34e0 (13536) - @!P3 BRA 0x35f0 ;
Basic block id 29 - num instructions 16
 Instr 847 @ 0x34f0 (13552) - FADD R20, R51.reuse, R20 ;
 Instr 848 @ 0x3500 (13568) - FADD R22, R51, R22 ;
 Instr 849 @ 0x3510 (13584) - FADD R21, R50.reuse, R21 ;
 Instr 850 @ 0x3520 (13600) - FADD R23, R50, R23 ;
 Instr 851 @ 0x3530 (13616) - FADD R24, R49, R24 ;
 Instr 852 @ 0x3540 (13632) - FADD R26, R49, R26 ;
 Instr 853 @ 0x3550 (13648) - FADD R25, R48.reuse, R25 ;
 Instr 854 @ 0x3560 (13664) - FADD R27, R48, R27 ;
 Instr 855 @ 0x3570 (13680) - FADD R28, R47.reuse, R28 ;
 Instr 856 @ 0x3580 (13696) - FADD R30, R47, R30 ;
 Instr 857 @ 0x3590 (13712) - FADD R29, R46, R29 ;
 Instr 858 @ 0x35a0 (13728) - FADD R31, R46, R31 ;
 Instr 859 @ 0x35b0 (13744) - FADD R32, R45.reuse, R32 ;
 Instr 860 @ 0x35c0 (13760) - FADD R34, R45, R34 ;
 Instr 861 @ 0x35d0 (13776) - FADD R33, R44.reuse, R33 ;
 Instr 862 @ 0x35e0 (13792) - FADD R35, R44, R35 ;
Basic block id 30 - num instructions 1
 Instr 863 @ 0x35f0 (13808) - @!P2 BRA 0x3800 ;
Basic block id 31 - num instructions 32
 Instr 864 @ 0x3600 (13824) - HADD2.F32 R4, R40.H0_H0, -RZ.H0_H0 ;
 Instr 865 @ 0x3610 (13840) - HADD2.F32 R6, R38.H0_H0, -RZ.H0_H0 ;
 Instr 866 @ 0x3620 (13856) - HADD2.F32 R10, R39.H1_H1, -RZ.H0_H0 ;
 Instr 867 @ 0x3630 (13872) - HADD2.F32 R5, R41.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 868 @ 0x3640 (13888) - HADD2.F32 R8, R41.H1_H1, -RZ.H0_H0 ;
 Instr 869 @ 0x3650 (13904) - FFMA R20, R4, R13.reuse, R20 ;
 Instr 870 @ 0x3660 (13920) - HADD2.F32 R40, R40.H1_H1, -RZ.H0_H0 ;
 Instr 871 @ 0x3670 (13936) - FFMA R22, R6, R13.reuse, R22 ;
 Instr 872 @ 0x3680 (13952) - HADD2.F32 R4, R36.H0_H0, -RZ.H0_H0 ;
 Instr 873 @ 0x3690 (13968) - FFMA R27, R10, R13.reuse, R27 ;
 Instr 874 @ 0x36a0 (13984) - HADD2.F32 R6, R2.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 875 @ 0x36b0 (14000) - FFMA R24, R5, R13.reuse, R24 ;
 Instr 876 @ 0x36c0 (14016) - HADD2.F32 R10, R2.H1_H1, -RZ.H0_H0 ;
 Instr 877 @ 0x36d0 (14032) - FFMA R25, R8, R13.reuse, R25 ;
 Instr 878 @ 0x36e0 (14048) - HADD2.F32 R38, R38.H1_H1, -RZ.H0_H0 ;
 Instr 879 @ 0x36f0 (14064) - FFMA R21, R40, R13.reuse, R21 ;
 Instr 880 @ 0x3700 (14080) - HADD2.F32 R7, R39.H0_H0, -RZ.H0_H0 ;
 Instr 881 @ 0x3710 (14096) - FFMA R28, R4, R13.reuse, R28 ;
 Instr 882 @ 0x3720 (14112) - HADD2.F32 R36, R36.H1_H1, -RZ.H0_H0 ;
 Instr 883 @ 0x3730 (14128) - FFMA R30, R6, R13.reuse, R30 ;
 Instr 884 @ 0x3740 (14144) - HADD2.F32 R5, R37.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 885 @ 0x3750 (14160) - FFMA R31, R10, R13.reuse, R31 ;
 Instr 886 @ 0x3760 (14176) - HADD2.F32 R8, R37.H1_H1, -RZ.H0_H0 ;
 Instr 887 @ 0x3770 (14192) - FFMA R23, R38, R13.reuse, R23 ;
 Instr 888 @ 0x3780 (14208) - HADD2.F32 R2, R3.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 889 @ 0x3790 (14224) - FFMA R26, R7, R13.reuse, R26 ;
 Instr 890 @ 0x37a0 (14240) - HADD2.F32 R12, R3.H1_H1, -RZ.H0_H0 ;
 Instr 891 @ 0x37b0 (14256) - FFMA R29, R36, R13, R29 ;
 Instr 892 @ 0x37c0 (14272) - FFMA R32, R5, R13.reuse, R32 ;
 Instr 893 @ 0x37d0 (14288) - FFMA R33, R8, R13.reuse, R33 ;
 Instr 894 @ 0x37e0 (14304) - FFMA R34, R2, R13.reuse, R34 ;
 Instr 895 @ 0x37f0 (14320) - FFMA R35, R12, R13, R35 ;
Basic block id 32 - num instructions 116
 Instr 896 @ 0x3800 (14336) - F2F.F16.F32 R20, R20 ;
 Instr 897 @ 0x3810 (14352) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 898 @ 0x3820 (14368) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 899 @ 0x3830 (14384) - F2F.F16.F32 R21, R21 ;
 Instr 900 @ 0x3840 (14400) - F2F.F16.F32 R22, R22 ;
 Instr 901 @ 0x3850 (14416) - F2F.F16.F32 R23, R23 ;
 Instr 902 @ 0x3860 (14432) - PRMT R2, R20, 0x5410, R21 ;
 Instr 903 @ 0x3870 (14448) - PRMT R20, R20, 0x5410, R21 ;
 Instr 904 @ 0x3880 (14464) - F2F.F16.F32 R28, R28 ;
 Instr 905 @ 0x3890 (14480) - HSET2.GTU.AND R11, R20, R53.H0_H0, PT ;
 Instr 906 @ 0x38a0 (14496) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 907 @ 0x38b0 (14512) - F2F.F16.F32 R29, R29 ;
 Instr 908 @ 0x38c0 (14528) - PRMT R4, R22.reuse, 0x5410, R23.reuse ;
 Instr 909 @ 0x38d0 (14544) - PRMT R22, R22, 0x5410, R23 ;
 Instr 910 @ 0x38e0 (14560) - LOP3.LUT R11, R11, R2, RZ, 0xc0, !PT ;
 Instr 911 @ 0x38f0 (14576) - IADD3 R2, R124.reuse, 0x40, RZ ;
 Instr 912 @ 0x3900 (14592) - F2F.F16.F32 R30, R30 ;
 Instr 913 @ 0x3910 (14608) - HSET2.GTU.AND R13, R22, R53.H0_H0, PT ;
 Instr 914 @ 0x3920 (14624) - IADD3 R124, R124, 0x48, RZ ;
 Instr 915 @ 0x3930 (14640) - F2F.F16.F32 R31, R31 ;
 Instr 916 @ 0x3940 (14656) - PRMT R6, R28.reuse, 0x5410, R29.reuse ;
 Instr 917 @ 0x3950 (14672) - PRMT R28, R28, 0x5410, R29 ;
 Instr 918 @ 0x3960 (14688) - LOP3.LUT R13, R13, R4, RZ, 0xc0, !PT ;
 Instr 919 @ 0x3970 (14704) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
 Instr 920 @ 0x3980 (14720) - F2F.F16.F32 R24, R24 ;
 Instr 921 @ 0x3990 (14736) - HSET2.GTU.AND R15, R28, R53.H0_H0, PT ;
 Instr 922 @ 0x39a0 (14752) - @P0 IMAD.HI.U32 R10, R4.reuse, c[0x0][0x3dc], RZ ;
 Instr 923 @ 0x39b0 (14768) - ISETP.GE.AND P2, PT, R4, c[0x0][0x3c4], PT ;
 Instr 924 @ 0x39c0 (14784) - ISETP.GE.OR P4, PT, R0, c[0x0][0x1b8], P2 ;
 Instr 925 @ 0x39d0 (14800) - F2F.F16.F32 R25, R25 ;
 Instr 926 @ 0x39e0 (14816) - PRMT R8, R30.reuse, 0x5410, R31.reuse ;
 Instr 927 @ 0x39f0 (14832) - PRMT R30, R30, 0x5410, R31 ;
 Instr 928 @ 0x3a00 (14848) - LOP3.LUT R15, R15, R6, RZ, 0xc0, !PT ;
 Instr 929 @ 0x3a10 (14864) - IMAD.MOV.U32 R6, RZ, RZ, R124 ;
 Instr 930 @ 0x3a20 (14880) - @P0 SHF.R.U32.HI R2, RZ, c[0x0][0x3e0], R10 ;
 Instr 931 @ 0x3a30 (14896) - F2F.F16.F32 R26, R26 ;
 Instr 932 @ 0x3a40 (14912) - HSET2.GTU.AND R17, R30, R53.H0_H0, PT ;
 Instr 933 @ 0x3a50 (14928) - ISETP.GE.OR P2, PT, R18, c[0x0][0x1b8], P2 ;
 Instr 934 @ 0x3a60 (14944) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 935 @ 0x3a70 (14960) - ISETP.GE.AND P1, PT, R6, c[0x0][0x3c4], PT ;
 Instr 936 @ 0x3a80 (14976) - F2F.F16.F32 R27, R27 ;
 Instr 937 @ 0x3a90 (14992) - LOP3.LUT R17, R17, R8, RZ, 0xc0, !PT ;
 Instr 938 @ 0x3aa0 (15008) - @P0 IMAD.HI.U32 R8, R6, c[0x0][0x3dc], RZ ;
 Instr 939 @ 0x3ab0 (15024) - ISETP.GE.OR P3, PT, R0, c[0x0][0x1b8], P1 ;
 Instr 940 @ 0x3ac0 (15040) - PRMT R3, R24, 0x5410, R25.reuse ;
 Instr 941 @ 0x3ad0 (15056) - @P0 IMAD.HI.U32 R0, R6, c[0x0][0x3dc], RZ ;
 Instr 942 @ 0x3ae0 (15072) - @P0 SHF.R.U32.HI R124, RZ, c[0x0][0x3e0], R8 ;
 Instr 943 @ 0x3af0 (15088) - F2F.F16.F32 R32, R32 ;
 Instr 944 @ 0x3b00 (15104) - PRMT R24, R24, 0x5410, R25 ;
 Instr 945 @ 0x3b10 (15120) - @P0 IMAD.HI.U32 R8, R4, c[0x0][0x3dc], RZ ;
 Instr 946 @ 0x3b20 (15136) - @P0 SHF.R.U32.HI R0, RZ, c[0x0][0x3e0], R0 ;
 Instr 947 @ 0x3b30 (15152) - ISETP.GE.OR P1, PT, R18, c[0x0][0x1b8], P1 ;
 Instr 948 @ 0x3b40 (15168) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 949 @ 0x3b50 (15184) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x3e0], R8 ;
 Instr 950 @ 0x3b60 (15200) - F2F.F16.F32 R33, R33 ;
 Instr 951 @ 0x3b70 (15216) - PRMT R5, R26.reuse, 0x5410, R27.reuse ;
 Instr 952 @ 0x3b80 (15232) - HSET2.GTU.AND R24, R24, R53.reuse.H0_H0, PT ;
 Instr 953 @ 0x3b90 (15248) - PRMT R26, R26, 0x5410, R27 ;
 Instr 954 @ 0x3ba0 (15264) - @P0 IMAD.MOV R25, RZ, RZ, -R2 ;
 Instr 955 @ 0x3bb0 (15280) - @P0 IMAD.MOV R23, RZ, RZ, -R124 ;
 Instr 956 @ 0x3bc0 (15296) - F2F.F16.F32 R34, R34 ;
 Instr 957 @ 0x3bd0 (15312) - HSET2.GTU.AND R26, R26, R53.H0_H0, PT ;
 Instr 958 @ 0x3be0 (15328) - @P0 IMAD.MOV R21, RZ, RZ, -R8 ;
 Instr 959 @ 0x3bf0 (15344) - LOP3.LUT R3, R24, R3, RZ, 0xc0, !PT ;
 Instr 960 @ 0x3c00 (15360) - @P0 IMAD.MOV R19, RZ, RZ, -R0 ;
 Instr 961 @ 0x3c10 (15376) - @P0 IMAD R20, R25, c[0x0][0x3c8], R4 ;
 Instr 962 @ 0x3c20 (15392) - F2F.F16.F32 R35, R35 ;
 Instr 963 @ 0x3c30 (15408) - PRMT R7, R32.reuse, 0x5410, R33.reuse ;
 Instr 964 @ 0x3c40 (15424) - @P0 IMAD R18, R23, c[0x0][0x3c8], R6 ;
 Instr 965 @ 0x3c50 (15440) - PRMT R32, R32, 0x5410, R33 ;
 Instr 966 @ 0x3c60 (15456) - IMAD.MOV.U32 R23, RZ, RZ, c[0x0][0x250] ;
 Instr 967 @ 0x3c70 (15472) - LOP3.LUT R5, R26, R5, RZ, 0xc0, !PT ;
 Instr 968 @ 0x3c80 (15488) - @P0 IMAD R12, R21, c[0x0][0x3c8], R4 ;
 Instr 969 @ 0x3c90 (15504) - @P0 IMAD R10, R19, c[0x0][0x3c8], R6 ;
 Instr 970 @ 0x3ca0 (15520) - HSET2.GTU.AND R32, R32, R53.H0_H0, PT ;
 Instr 971 @ 0x3cb0 (15536) - IMAD.MOV.U32 R19, RZ, RZ, c[0x0][0x250] ;
 Instr 972 @ 0x3cc0 (15552) - @P0 IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 973 @ 0x3cd0 (15568) - IMAD R21, R20, c[0x0][0x250], RZ ;
 Instr 974 @ 0x3ce0 (15584) - HSET2.LEU.AND R8, R17, R14.reuse.H0_H0, PT ;
 Instr 975 @ 0x3cf0 (15600) - PRMT R9, R34, 0x5410, R35.reuse ;
 Instr 976 @ 0x3d00 (15616) - IMAD R23, R12, R23, 0x10 ;
 Instr 977 @ 0x3d10 (15632) - PRMT R34, R34, 0x5410, R35 ;
 Instr 978 @ 0x3d20 (15648) - IMAD R25, R18, c[0x0][0x250], RZ ;
 Instr 979 @ 0x3d30 (15664) - LOP3.LUT R7, R32, R7, RZ, 0xc0, !PT ;
 Instr 980 @ 0x3d40 (15680) - @P0 IMAD.MOV.U32 R6, RZ, RZ, R0 ;
 Instr 981 @ 0x3d50 (15696) - HSET2.LEU.AND R12, R3, R14.reuse.H0_H0, PT ;
 Instr 982 @ 0x3d60 (15712) - IMAD R19, R10, R19, 0x10 ;
 Instr 983 @ 0x3d70 (15728) - HSET2.GTU.AND R34, R34, R53.H0_H0, PT ;
 Instr 984 @ 0x3d80 (15744) - IMAD R27, R2, c[0x0][0x244], R21 ;
 Instr 985 @ 0x3d90 (15760) - HSET2.LEU.AND R10, R5, R14.reuse.H0_H0, PT ;
 Instr 986 @ 0x3da0 (15776) - IMAD R21, R124, c[0x0][0x244], R25 ;
 Instr 987 @ 0x3db0 (15792) - HSET2.LEU.AND R2, R11, R14.reuse.H0_H0, PT ;
 Instr 988 @ 0x3dc0 (15808) - IMAD R29, R4, c[0x0][0x244], R23 ;
 Instr 989 @ 0x3dd0 (15824) - HSET2.LEU.AND R0, R7, R14.reuse.H0_H0, PT ;
 Instr 990 @ 0x3de0 (15840) - IMAD R25, R6, c[0x0][0x244], R19 ;
 Instr 991 @ 0x3df0 (15856) - LOP3.LUT R9, R34, R9, RZ, 0xc0, !PT ;
 Instr 992 @ 0x3e00 (15872) - HSET2.LEU.AND R4, R13, R14.reuse.H0_H0, PT ;
 Instr 993 @ 0x3e10 (15888) - @!P4 IMAD.WIDE R22, R27, 0x2, R42 ;
 Instr 994 @ 0x3e20 (15904) - HSET2.LEU.AND R6, R15, R14.H0_H0, PT ;
 Instr 995 @ 0x3e30 (15920) - LOP3.LUT R2, R11, R16, R2, 0xe4, !PT ;
 Instr 996 @ 0x3e40 (15936) - HSET2.LEU.AND R14, R9, R14.H0_H0, PT ;
 Instr 997 @ 0x3e50 (15952) - LOP3.LUT R3, R3, R16.reuse, R12, 0xe4, !PT ;
 Instr 998 @ 0x3e60 (15968) - @!P3 IMAD.WIDE R20, R21, 0x2, R42 ;
 Instr 999 @ 0x3e70 (15984) - LOP3.LUT R4, R13, R16.reuse, R4, 0xe4, !PT ;
 Instr 1000 @ 0x3e80 (16000) - LOP3.LUT R5, R5, R16.reuse, R10, 0xe4, !PT ;
 Instr 1001 @ 0x3e90 (16016) - @!P2 IMAD.WIDE R18, R29, 0x2, R42 ;
 Instr 1002 @ 0x3ea0 (16032) - LOP3.LUT R6, R15, R16.reuse, R6, 0xe4, !PT ;
 Instr 1003 @ 0x3eb0 (16048) - LOP3.LUT R7, R7, R16.reuse, R0, 0xe4, !PT ;
 Instr 1004 @ 0x3ec0 (16064) - @!P1 IMAD.WIDE R42, R25, 0x2, R42 ;
 Instr 1005 @ 0x3ed0 (16080) - LOP3.LUT R8, R17, R16.reuse, R8, 0xe4, !PT ;
 Instr 1006 @ 0x3ee0 (16096) - @!P4 STG.E.64.SYS [R22.64+UR4], R2 ;
 Instr 1007 @ 0x3ef0 (16112) - LOP3.LUT R9, R9, R16, R14, 0xe4, !PT ;
 Instr 1008 @ 0x3f00 (16128) - @!P3 STG.E.64.SYS [R20.64+UR4], R4 ;
 Instr 1009 @ 0x3f10 (16144) - @!P2 STG.E.64.SYS [R18.64+UR4], R6 ;
 Instr 1010 @ 0x3f20 (16160) - @!P1 STG.E.64.SYS [R42.64+UR4], R8 ;
 Instr 1011 @ 0x3f30 (16176) - EXIT ;
Basic block id 33 - num instructions 1
 Instr 1012 @ 0x3f40 (16192) - BRA 0x3f40;
inspecting sm75_xmma_fprop_implicit_gemm_indexed_wo_smem_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8_execute_kernel__5x_cudnn - number basic blocks 34
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 8 @ 0x80 (128) - IMAD.MOV.U32 R6, RZ, RZ, -0x1 ;
Inject count_instr before - Instr 22 @ 0x160 (352) - MOV R0, 0x1 ;
Inject count_instr before - Instr 23 @ 0x170 (368) - ISETP.NE.AND P2, PT, R9, R8, PT ;
Inject count_instr before - Instr 26 @ 0x1a0 (416) - SHF.R.U32.HI R6, RZ, 0x1, R6 ;
Inject count_instr before - Instr 35 @ 0x230 (560) - LOP3.LUT R0, R6, R133, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 40 @ 0x280 (640) - LOP3.LUT R0, R6, R133, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 46 @ 0x2e0 (736) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
Inject count_instr before - Instr 50 @ 0x320 (800) - S2R R129, SR_TID.X ;
Inject count_instr before - Instr 69 @ 0x450 (1104) - ISETP.NE.AND P3, PT, R2.reuse, c[0x0][0x3c8], PT ;
Inject count_instr before - Instr 100 @ 0x640 (1600) - BSYNC B0 ;
Inject count_instr before - Instr 109 @ 0x6d0 (1744) - MOV R3, c[0x0][0x3d4] ;
Inject count_instr before - Instr 135 @ 0x870 (2160) - BSYNC B0 ;
Inject count_instr before - Instr 182 @ 0xb60 (2912) - LDS.U.128 R112, [R40.X16] ;
Inject count_instr before - Instr 218 @ 0xda0 (3488) - LDS.U.128 R120, [R128+0x800] ;
Inject count_instr before - Instr 440 @ 0x1b80 (7040) - ISETP.GE.U32.AND P0, PT, R131, c[0x0][0x3d0], PT ;
Inject count_instr before - Instr 447 @ 0x1bf0 (7152) - MOV R3, 0x1 ;
Inject count_instr before - Instr 472 @ 0x1d80 (7552) - BSYNC B0 ;
Inject count_instr before - Instr 487 @ 0x1e70 (7792) - IMAD.MOV.U32 R53, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 520 @ 0x2080 (8320) - IADD3 R3, R36.reuse, 0x10, RZ ;
Inject count_instr before - Instr 536 @ 0x2180 (8576) - ISETP.NE.AND P2, PT, RZ, c[0x0][0x3a0], PT ;
Inject count_instr before - Instr 542 @ 0x21e0 (8672) - ISETP.NE.AND P4, PT, R53, c[0x0][0x3c8], PT ;
Inject count_instr before - Instr 593 @ 0x2510 (9488) - FMUL R4, R4, R52.reuse ;
Inject count_instr before - Instr 610 @ 0x2620 (9760) - FADD R4, R51.reuse, R4 ;
Inject count_instr before - Instr 626 @ 0x2720 (10016) - MOV R13, c[0x0][0x1f0] ;
Inject count_instr before - Instr 629 @ 0x2750 (10064) - HADD2.F32 R59, R40.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 661 @ 0x2950 (10576) - F2F.F16.F32 R4, R4 ;
Inject count_instr before - Instr 780 @ 0x30c0 (12480) - IADD3 R19, R124.reuse, 0x40, RZ ;
Inject count_instr before - Instr 830 @ 0x33e0 (13280) - FMUL R20, R20, R52.reuse ;
Inject count_instr before - Instr 847 @ 0x34f0 (13552) - FADD R20, R51.reuse, R20 ;
Inject count_instr before - Instr 863 @ 0x35f0 (13808) - @!P2 BRA 0x3800 ;
Inject count_instr before - Instr 864 @ 0x3600 (13824) - HADD2.F32 R4, R40.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 896 @ 0x3800 (14336) - F2F.F16.F32 R20, R20 ;
Inject count_instr before - Instr 1012 @ 0x3f40 (16192) - BRA 0x3f40;
kernel 162 - sm75_xmma_fprop_implicit_gemm_indexed_wo_smem_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8_execute_kernel__5x_cudnn - #thread-blocks 28,  kernel instructions 77728, total instructions 18064214
kernel 163 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 80736, total instructions 18144950
kernel 164 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 264, total instructions 18145214
kernel 165 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 636, total instructions 18145850
kernel 166 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 128,  kernel instructions 119808, total instructions 18265658
kernel 167 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 98,  kernel instructions 21168, total instructions 18286826
kernel 168 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 98,  kernel instructions 23520, total instructions 18310346
kernel 169 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 76104, total instructions 18386450
kernel 170 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 512,  kernel instructions 574464, total instructions 18960914
kernel 171 - sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 26,  kernel instructions 526448, total instructions 19487362
kernel 172 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 80736, total instructions 19568098
kernel 173 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 264, total instructions 19568362
kernel 174 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 636, total instructions 19568998
kernel 175 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 128,  kernel instructions 119808, total instructions 19688806
kernel 176 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 98,  kernel instructions 23520, total instructions 19712326
kernel 177 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 76104, total instructions 19788430
kernel 178 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 512,  kernel instructions 574464, total instructions 20362894
kernel 179 - sm75_xmma_fprop_implicit_gemm_indexed_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 26,  kernel instructions 526448, total instructions 20889342
kernel 180 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 80736, total instructions 20970078
kernel 181 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 264, total instructions 20970342
kernel 182 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 636, total instructions 20970978
kernel 183 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 128,  kernel instructions 119808, total instructions 21090786
kernel 184 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 98,  kernel instructions 21168, total instructions 21111954
kernel 185 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 98,  kernel instructions 23520, total instructions 21135474
kernel 186 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 76104, total instructions 21211578
kernel 187 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 1024,  kernel instructions 1148928, total instructions 22360506
kernel 188 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x32x64_stage1_warpsize2x1x2_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 32,  kernel instructions 351616, total instructions 22712122
kernel 189 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 44736, total instructions 22756858
kernel 190 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 432, total instructions 22757290
kernel 191 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 660, total instructions 22757950
kernel 192 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 256,  kernel instructions 64512, total instructions 22822462
kernel 193 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 49,  kernel instructions 11760, total instructions 22834222
kernel 194 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 42488, total instructions 22876710
kernel 195 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 2048,  kernel instructions 2213888, total instructions 25090598
Function sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn
Basic block id 0 - num instructions 8
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R68, SR_CTAID.Z ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x310], PT ;
 Instr 3 @ 0x30 (48) - ULDC UR4, c[0x0][0x318] ;
 Instr 4 @ 0x40 (64) - S2UR UR7, SR_CTAID.X ;
 Instr 5 @ 0x50 (80) - UISETP.NE.AND UP3, UPT, URZ, UR4, UPT ;
 Instr 6 @ 0x60 (96) - S2UR UR6, SR_CTAID.Y ;
 Instr 7 @ 0x70 (112) - @!P0 BRA 0x370 ;
Basic block id 1 - num instructions 15
 Instr 8 @ 0x80 (128) - UMOV UR11, 0xffffffff ;
 Instr 9 @ 0x90 (144) - ULDC UR8, c[0x0][0x648] ;
 Instr 10 @ 0xa0 (160) - USHF.L.U32 UR11, UR11, UR8, URZ ;
 Instr 11 @ 0xb0 (176) - ULDC.64 UR4, c[0x0][0x340] ;
 Instr 12 @ 0xc0 (192) - USEL UR12, UR5, UR4, !UP3 ;
 Instr 13 @ 0xd0 (208) - ULOP3.LUT UR10, UR6, UR11, URZ, 0xf3, !UPT ;
 Instr 14 @ 0xe0 (224) - UMOV UR9, 0x1 ;
 Instr 15 @ 0xf0 (240) - UISETP.GE.U32.AND UP0, UPT, UR10, UR12, UPT ;
 Instr 16 @ 0x100 (256) - USHF.L.U32 UR9, UR9, UR8, URZ ;
 Instr 17 @ 0x110 (272) - USEL UR4, UR5, UR4, UP3 ;
 Instr 18 @ 0x120 (288) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 19 @ 0x130 (304) - ULOP3.LUT UP1, URZ, UR9, UR6, URZ, 0xc0, !UPT ;
 Instr 20 @ 0x140 (320) - ULOP3.LUT UR11, URZ, UR11, URZ, 0x33, !UPT ;
 Instr 21 @ 0x150 (336) - USEL UR5, URZ, 0x1, !UP1 ;
 Instr 22 @ 0x160 (352) - @!P0 BRA 0x280 ;
Basic block id 2 - num instructions 2
 Instr 23 @ 0x170 (368) - MOV R2, UR10 ;
 Instr 24 @ 0x180 (384) - UMOV UR9, 0x1 ;
Basic block id 3 - num instructions 4
 Instr 25 @ 0x190 (400) - IMAD.U32 R0, RZ, RZ, UR8 ;
 Instr 26 @ 0x1a0 (416) - ISETP.NE.AND P1, PT, R2, UR12, PT ;
 Instr 27 @ 0x1b0 (432) - ISETP.EQ.AND P0, PT, R0, 0x2, PT ;
 Instr 28 @ 0x1c0 (448) - @!P1 BRA P0, 0x2d0 ;
Basic block id 4 - num instructions 11
 Instr 29 @ 0x1d0 (464) - UIADD3 UR8, UR8, -0x1, URZ ;
 Instr 30 @ 0x1e0 (480) - USHF.R.U32.HI UR11, URZ, 0x1, UR11 ;
 Instr 31 @ 0x1f0 (496) - USHF.L.U32 UR10, UR9, UR8, URZ ;
 Instr 32 @ 0x200 (512) - UISETP.NE.AND UP1, UPT, UR5, URZ, UPT ;
 Instr 33 @ 0x210 (528) - ULOP3.LUT UP2, URZ, UR10, UR6, URZ, 0xc0, !UPT ;
 Instr 34 @ 0x220 (544) - ULOP3.LUT UR10, UR11, UR6, URZ, 0xfc, !UPT ;
 Instr 35 @ 0x230 (560) - UISETP.GE.U32.AND UP0, UPT, UR10, UR12, UPT ;
 Instr 36 @ 0x240 (576) - MOV R2, UR10 ;
 Instr 37 @ 0x250 (592) - @UP2 USEL UR5, URZ, 0x1, UP1 ;
 Instr 38 @ 0x260 (608) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 39 @ 0x270 (624) - @P0 BRA 0x190 ;
Basic block id 5 - num instructions 5
 Instr 40 @ 0x280 (640) - ULOP3.LUT UR9, UR11, UR6, URZ, 0xc0, !UPT ;
 Instr 41 @ 0x290 (656) - UIMAD UR9, UR9, UR4, UR7 ;
 Instr 42 @ 0x2a0 (672) - USHF.R.U32.HI UR7, URZ, UR8, UR9 ;
 Instr 43 @ 0x2b0 (688) - ULOP3.LUT UR6, UR6, UR11, UR9, 0xb8, !UPT ;
 Instr 44 @ 0x2c0 (704) - BRA 0x340 ;
Basic block id 6 - num instructions 7
 Instr 45 @ 0x2d0 (720) - ULOP3.LUT UR8, UR11, UR6, URZ, 0xc0, !UPT ;
 Instr 46 @ 0x2e0 (736) - ULOP3.LUT UR6, UR6, UR11, URZ, 0x30, !UPT ;
 Instr 47 @ 0x2f0 (752) - UIMAD UR7, UR8, UR4, UR7 ;
 Instr 48 @ 0x300 (768) - UIMAD.WIDE.U32 UR8, UR7, 0x55555556, URZ ;
 Instr 49 @ 0x310 (784) - UIADD3 UR6, UR7, UR6, URZ ;
 Instr 50 @ 0x320 (800) - UIMAD UR6, UR9, -0x3, UR6 ;
 Instr 51 @ 0x330 (816) - UMOV UR7, UR9 ;
Basic block id 7 - num instructions 3
 Instr 52 @ 0x340 (832) - UISETP.NE.AND UP0, UPT, UR5, URZ, UPT ;
 Instr 53 @ 0x350 (848) - ULOP3.LUT UR5, URZ, UR7, URZ, 0x33, !UPT ;
 Instr 54 @ 0x360 (864) - @UP0 UIADD3 UR7, UR5, UR4, URZ ;
Basic block id 8 - num instructions 247
 Instr 55 @ 0x370 (880) - S2R R72, SR_TID.X ;
 Instr 56 @ 0x380 (896) - UMOV UR12, 0x1 ;
 Instr 57 @ 0x390 (912) - CS2R R70, SRZ ;
 Instr 58 @ 0x3a0 (928) - ULDC.64 UR4, c[0x0][0x3c8] ;
 Instr 59 @ 0x3b0 (944) - S2UR UR9, SR_CTAID.Z ;
 Instr 60 @ 0x3c0 (960) - USEL UR8, UR7, UR6, !UP3 ;
 Instr 61 @ 0x3d0 (976) - CS2R R62, SRZ ;
 Instr 62 @ 0x3e0 (992) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 63 @ 0x3f0 (1008) - IMAD.MOV.U32 R73, RZ, RZ, RZ ;
 Instr 64 @ 0x400 (1024) - CS2R R58, SRZ ;
 Instr 65 @ 0x410 (1040) - ULDC UR4, c[0x0][0x1b4] ;
 Instr 66 @ 0x420 (1056) - IMAD.U32 R0, RZ, RZ, UR8 ;
 Instr 67 @ 0x430 (1072) - CS2R R66, SRZ ;
 Instr 68 @ 0x440 (1088) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 69 @ 0x450 (1104) - UISETP.NE.AND UP0, UPT, UR12, UR5, UPT ;
 Instr 70 @ 0x460 (1120) - IMAD.MOV.U32 R65, RZ, RZ, RZ ;
 Instr 71 @ 0x470 (1136) - USEL UR13, UR6, UR7, !UP3 ;
 Instr 72 @ 0x480 (1152) - IMAD R35, R68, c[0x0][0x3ac], RZ ;
 Instr 73 @ 0x490 (1168) - ULDC UR15, c[0x0][0x1c8] ;
 Instr 74 @ 0x4a0 (1184) - MOV R42, c[0x0][0x278] ;
 Instr 75 @ 0x4b0 (1200) - USHF.L.U32 UR13, UR13, 0x6, URZ ;
 Instr 76 @ 0x4c0 (1216) - PLOP3.LUT P1, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 77 @ 0x4d0 (1232) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 78 @ 0x4e0 (1248) - IMAD.U32 R105, RZ, RZ, UR15 ;
 Instr 79 @ 0x4f0 (1264) - SHF.R.S32.HI R3, RZ, 0x1f, R72 ;
 Instr 80 @ 0x500 (1280) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x27c] ;
 Instr 81 @ 0x510 (1296) - LOP3.LUT R2, R72.reuse, 0xf, RZ, 0xc0, !PT ;
 Instr 82 @ 0x520 (1312) - IMAD R105, R105, c[0x0][0x1a8], RZ ;
 Instr 83 @ 0x530 (1328) - LEA.HI R36, R3, R72, RZ, 0x3 ;
 Instr 84 @ 0x540 (1344) - IMAD.MOV.U32 R61, RZ, RZ, RZ ;
 Instr 85 @ 0x550 (1360) - LOP3.LUT R3, R72.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 86 @ 0x560 (1376) - CS2R R18, SRZ ;
 Instr 87 @ 0x570 (1392) - SHF.R.S32.HI R93, RZ, 0x3, R36 ;
 Instr 88 @ 0x580 (1408) - CS2R R20, SRZ ;
 Instr 89 @ 0x590 (1424) - LOP3.LUT R51, R72, 0x40, RZ, 0xc0, !PT ;
 Instr 90 @ 0x5a0 (1440) - CS2R R22, SRZ ;
 Instr 91 @ 0x5b0 (1456) - LOP3.LUT R5, R36, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 92 @ 0x5c0 (1472) - IMAD R55, R0, 0x40, R93 ;
 Instr 93 @ 0x5d0 (1488) - LEA.HI R3, R3, R2.reuse, RZ, 0x1f ;
 Instr 94 @ 0x5e0 (1504) - CS2R R24, SRZ ;
 Instr 95 @ 0x5f0 (1520) - LEA.HI R51, R51, R2, RZ, 0x1e ;
 Instr 96 @ 0x600 (1536) - IMAD.MOV.U32 R88, RZ, RZ, R55 ;
 Instr 97 @ 0x610 (1552) - MOV R10, R55 ;
 Instr 98 @ 0x620 (1568) - IMAD.IADD R112, R72, 0x1, -R5 ;
 Instr 99 @ 0x630 (1584) - LOP3.LUT R9, R36, 0x1ffffff8, RZ, 0xc0, !PT ;
 Instr 100 @ 0x640 (1600) - @P0 IMAD.HI.U32 R0, R88.reuse, c[0x0][0x3d8], RZ ;
 Instr 101 @ 0x650 (1616) - IADD3 R91, R88.reuse, 0x20, RZ ;
 Instr 102 @ 0x660 (1632) - CS2R R26, SRZ ;
 Instr 103 @ 0x670 (1648) - IADD3 R90, R88, 0x30, RZ ;
 Instr 104 @ 0x680 (1664) - IMAD.SHL.U32 R7, R112, 0x8, RZ ;
 Instr 105 @ 0x690 (1680) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3dc], R0 ;
 Instr 106 @ 0x6a0 (1696) - IMAD.SHL.U32 R0, R72, 0x10, RZ ;
 Instr 107 @ 0x6b0 (1712) - IADD3 R92, R88, 0x10, RZ ;
 Instr 108 @ 0x6c0 (1728) - IMAD.MOV.U32 R100, RZ, RZ, R91 ;
 Instr 109 @ 0x6d0 (1744) - SHF.R.S32.HI R12, RZ, 0x1f, R36 ;
 Instr 110 @ 0x6e0 (1760) - IMAD.IADD R72, R72, 0x1, -R9 ;
 Instr 111 @ 0x6f0 (1776) - LOP3.LUT R0, R0, 0x70, RZ, 0xc0, !PT ;
 Instr 112 @ 0x700 (1792) - @P0 IMAD.HI.U32 R4, R100, c[0x0][0x3d8], RZ ;
 Instr 113 @ 0x710 (1808) - MOV R8, UR9 ;
 Instr 114 @ 0x720 (1824) - CS2R R28, SRZ ;
 Instr 115 @ 0x730 (1840) - LEA R51, R51, R0, 0x7 ;
 Instr 116 @ 0x740 (1856) - IMAD R52, R3, 0x80, R0 ;
 Instr 117 @ 0x750 (1872) - MOV R98, R90.reuse ;
 Instr 118 @ 0x760 (1888) - IMAD.MOV.U32 R0, RZ, RZ, R91 ;
 Instr 119 @ 0x770 (1904) - LEA.HI R9, R12, R93, RZ, 0x3 ;
 Instr 120 @ 0x780 (1920) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 121 @ 0x790 (1936) - MOV R41, c[0x0][0x1cc] ;
 Instr 122 @ 0x7a0 (1952) - @P0 IMAD.MOV R5, RZ, RZ, -R10 ;
 Instr 123 @ 0x7b0 (1968) - @P0 SHF.R.U32.HI R0, RZ, c[0x0][0x3dc], R4 ;
 Instr 124 @ 0x7c0 (1984) - IMAD.MOV.U32 R102, RZ, RZ, R92 ;
 Instr 125 @ 0x7d0 (2000) - LOP3.LUT R4, R9, 0xffffff8, RZ, 0xc0, !PT ;
 Instr 126 @ 0x7e0 (2016) - IMAD R8, R8, c[0x0][0x3ac], R7 ;
 Instr 127 @ 0x7f0 (2032) - MOV R7, R90 ;
 Instr 128 @ 0x800 (2048) - @P0 IMAD.HI.U32 R3, R98, c[0x0][0x3d8], RZ ;
 Instr 129 @ 0x810 (2064) - CS2R R30, SRZ ;
 Instr 130 @ 0x820 (2080) - CS2R R32, SRZ ;
 Instr 131 @ 0x830 (2096) - @P0 IMAD R2, R5, c[0x0][0x3c8], R88 ;
 Instr 132 @ 0x840 (2112) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3dc], R3 ;
 Instr 133 @ 0x850 (2128) - IMAD.MOV.U32 R5, RZ, RZ, R92 ;
 Instr 134 @ 0x860 (2144) - @P0 IMAD.HI.U32 R6, R102, c[0x0][0x3d8], RZ ;
 Instr 135 @ 0x870 (2160) - IMAD.IADD R3, R93, 0x1, -R4 ;
 Instr 136 @ 0x880 (2176) - @P0 SHF.R.U32.HI R5, RZ, c[0x0][0x3dc], R6 ;
 Instr 137 @ 0x890 (2192) - @P1 IMAD.HI.U32 R13, R2, c[0x0][0x3e0], RZ ;
 Instr 138 @ 0x8a0 (2208) - LOP3.LUT R4, R3, R112, RZ, 0x3c, !PT ;
 Instr 139 @ 0x8b0 (2224) - @P0 IMAD.MOV R9, RZ, RZ, -R0 ;
 Instr 140 @ 0x8c0 (2240) - @P0 IADD3 R11, -R5, RZ, RZ ;
 Instr 141 @ 0x8d0 (2256) - @P0 IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 142 @ 0x8e0 (2272) - @P1 SHF.R.U32.HI R13, RZ, c[0x0][0x3e4], R13 ;
 Instr 143 @ 0x8f0 (2288) - @P0 IMAD R63, R9, c[0x0][0x3c8], R100 ;
 Instr 144 @ 0x900 (2304) - @P0 IMAD R71, R11, c[0x0][0x3c8], R102 ;
 Instr 145 @ 0x910 (2320) - @P1 IADD3 R15, -R13, RZ, RZ ;
 Instr 146 @ 0x920 (2336) - @P0 IMAD R62, R3, c[0x0][0x3c8], R98 ;
 Instr 147 @ 0x930 (2352) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 148 @ 0x940 (2368) - @P1 IMAD.HI.U32 R6, R63, c[0x0][0x3e0], RZ ;
 Instr 149 @ 0x950 (2384) - UISETP.GT.AND UP0, UPT, UR15, 0x1, UPT ;
 Instr 150 @ 0x960 (2400) - IMAD R93, R93, 0x8, R4 ;
 Instr 151 @ 0x970 (2416) - @P1 SHF.R.U32.HI R6, RZ, c[0x0][0x3e4], R6 ;
 Instr 152 @ 0x980 (2432) - @P1 IMAD R73, R15, c[0x0][0x3cc], R2 ;
 Instr 153 @ 0x990 (2448) - @P1 MOV R2, R13 ;
 Instr 154 @ 0x9a0 (2464) - @P1 IMAD.HI.U32 R4, R62, c[0x0][0x3e0], RZ ;
 Instr 155 @ 0x9b0 (2480) - USEL UR4, UR13, URZ, UP0 ;
 Instr 156 @ 0x9c0 (2496) - UISETP.LT.AND UP0, UPT, UR12, UR15, UPT ;
 Instr 157 @ 0x9d0 (2512) - @P1 IMAD.HI.U32 R9, R71, c[0x0][0x3e0], RZ ;
 Instr 158 @ 0x9e0 (2528) - @P1 SHF.R.U32.HI R4, RZ, c[0x0][0x3e4], R4 ;
 Instr 159 @ 0x9f0 (2544) - @P0 IMAD.HI.U32 R11, R73, c[0x0][0x3e8], RZ ;
 Instr 160 @ 0xa00 (2560) - @P1 SHF.R.U32.HI R9, RZ, c[0x0][0x3e4], R9 ;
 Instr 161 @ 0xa10 (2576) - @P1 IMAD.MOV R12, RZ, RZ, -R6 ;
 Instr 162 @ 0xa20 (2592) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3ec], R11 ;
 Instr 163 @ 0xa30 (2608) - @P1 IMAD.MOV R3, RZ, RZ, -R4 ;
 Instr 164 @ 0xa40 (2624) - @P1 IADD3 R14, -R9, RZ, RZ ;
 Instr 165 @ 0xa50 (2640) - @P1 IMAD R65, R12, c[0x0][0x3cc], R63 ;
 Instr 166 @ 0xa60 (2656) - @P0 IADD3 R12, -R11, RZ, RZ ;
 Instr 167 @ 0xa70 (2672) - @P1 IMAD R59, R3, c[0x0][0x3cc], R62 ;
 Instr 168 @ 0xa80 (2688) - @P1 IMAD R67, R14, c[0x0][0x3cc], R71 ;
 Instr 169 @ 0xa90 (2704) - @P0 IMAD R70, R12, c[0x0][0x1b4], R73 ;
 Instr 170 @ 0xaa0 (2720) - @P0 MOV R73, R11 ;
 Instr 171 @ 0xab0 (2736) - @P1 IMAD.MOV.U32 R71, RZ, RZ, R9 ;
 Instr 172 @ 0xac0 (2752) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x274] ;
 Instr 173 @ 0xad0 (2768) - @P1 IMAD.MOV.U32 R63, RZ, RZ, R6 ;
 Instr 174 @ 0xae0 (2784) - @P0 IMAD.HI.U32 R12, R59, c[0x0][0x3e8], RZ ;
 Instr 175 @ 0xaf0 (2800) - @P1 IMAD.MOV.U32 R62, RZ, RZ, R4 ;
 Instr 176 @ 0xb00 (2816) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x3ec], R12 ;
 Instr 177 @ 0xb10 (2832) - IMAD R69, R2, R3, -c[0x0][0x25c] ;
 Instr 178 @ 0xb20 (2848) - @P0 IMAD.HI.U32 R9, R67, c[0x0][0x3e8], RZ ;
 Instr 179 @ 0xb30 (2864) - IMAD R13, R71, R3.reuse, -c[0x0][0x25c] ;
 Instr 180 @ 0xb40 (2880) - @P0 SHF.R.U32.HI R9, RZ, c[0x0][0x3ec], R9 ;
 Instr 181 @ 0xb50 (2896) - IMAD R11, R63, R3.reuse, -c[0x0][0x25c] ;
 Instr 182 @ 0xb60 (2912) - IMAD R6, R68, c[0x0][0x3a4], RZ ;
 Instr 183 @ 0xb70 (2928) - IMAD R3, R62, R3, -c[0x0][0x25c] ;
 Instr 184 @ 0xb80 (2944) - IMAD R112, R112, 0x8, R35 ;
 Instr 185 @ 0xb90 (2960) - @P0 IMAD.HI.U32 R4, R65, c[0x0][0x3e8], RZ ;
 Instr 186 @ 0xba0 (2976) - IADD3 R118, R112, UR4, RZ ;
 Instr 187 @ 0xbb0 (2992) - IMAD R69, R6.reuse, c[0x0][0x280], R69 ;
 Instr 188 @ 0xbc0 (3008) - @P0 SHF.R.U32.HI R4, RZ, c[0x0][0x3ec], R4 ;
 Instr 189 @ 0xbd0 (3024) - IMAD R64, R6, c[0x0][0x280], R13 ;
 Instr 190 @ 0xbe0 (3040) - ISETP.GE.AND P1, PT, R118, R105, PT ;
 Instr 191 @ 0xbf0 (3056) - IMAD R60, R6.reuse, c[0x0][0x280], R11 ;
 Instr 192 @ 0xc00 (3072) - ISETP.GE.U32.AND P3, PT, R69, c[0x0][0x19c], PT ;
 Instr 193 @ 0xc10 (3088) - IMAD R3, R6, c[0x0][0x280], R3 ;
 Instr 194 @ 0xc20 (3104) - @P0 IADD3 R14, -R4, RZ, RZ ;
 Instr 195 @ 0xc30 (3120) - @P0 IMAD.MOV R6, RZ, RZ, -R12 ;
 Instr 196 @ 0xc40 (3136) - ISETP.LT.AND P2, PT, R55, c[0x0][0x3c4], !P1 ;
 Instr 197 @ 0xc50 (3152) - @P0 IMAD.MOV R16, RZ, RZ, -R9 ;
 Instr 198 @ 0xc60 (3168) - USEL UR4, UR13, URZ, UP0 ;
 Instr 199 @ 0xc70 (3184) - @P0 IMAD R58, R6, c[0x0][0x1b4], R59 ;
 Instr 200 @ 0xc80 (3200) - LOP3.LUT R6, RZ, c[0x0][0x620], RZ, 0x33, !PT ;
 Instr 201 @ 0xc90 (3216) - IMAD R68, R68, c[0x0][0x3a8], RZ ;
 Instr 202 @ 0xca0 (3232) - IMAD R13, R73, R42, -c[0x0][0x264] ;
 Instr 203 @ 0xcb0 (3248) - SEL R11, R6, 0xffffffff, P3 ;
 Instr 204 @ 0xcc0 (3264) - @P0 IMAD R66, R16, c[0x0][0x1b4], R67 ;
 Instr 205 @ 0xcd0 (3280) - IADD3 R8, R8, UR4, RZ ;
 Instr 206 @ 0xce0 (3296) - IMAD R40, R70, R37.reuse, -c[0x0][0x26c] ;
 Instr 207 @ 0xcf0 (3312) - SEL R11, R11, RZ, P2 ;
 Instr 208 @ 0xd00 (3328) - IMAD R16, R68, c[0x0][0x284], R13 ;
 Instr 209 @ 0xd10 (3344) - @P0 IMAD.MOV.U32 R67, RZ, RZ, R9 ;
 Instr 210 @ 0xd20 (3360) - LOP3.LUT R9, RZ, c[0x0][0x624], RZ, 0x33, !PT ;
 Instr 211 @ 0xd30 (3376) - @P0 IMAD R61, R14, c[0x0][0x1b4], R65 ;
 Instr 212 @ 0xd40 (3392) - @P0 MOV R65, R4 ;
 Instr 213 @ 0xd50 (3408) - IMAD R10, R10, c[0x0][0x230], RZ ;
 Instr 214 @ 0xd60 (3424) - LOP3.LUT R4, RZ, c[0x0][0x628], RZ, 0x33, !PT ;
 Instr 215 @ 0xd70 (3440) - IMAD R15, R5, c[0x0][0x230], RZ ;
 Instr 216 @ 0xd80 (3456) - ISETP.GE.U32.AND P2, PT, R40, c[0x0][0x1a4], PT ;
 Instr 217 @ 0xd90 (3472) - IMAD R5, R67, R42.reuse, -c[0x0][0x264] ;
 Instr 218 @ 0xda0 (3488) - ISETP.GE.U32.AND P3, PT, R16, c[0x0][0x1a0], PT ;
 Instr 219 @ 0xdb0 (3504) - IMAD R13, R69, c[0x0][0x234], R10 ;
 Instr 220 @ 0xdc0 (3520) - SEL R103, R4, 0xffffffff, P2 ;
 Instr 221 @ 0xdd0 (3536) - IMAD R5, R68, c[0x0][0x284], R5 ;
 Instr 222 @ 0xde0 (3552) - SEL R10, R9, 0xffffffff, P3 ;
 Instr 223 @ 0xdf0 (3568) - IMAD R14, R64.reuse, c[0x0][0x234], R15 ;
 Instr 224 @ 0xe00 (3584) - ISETP.GE.U32.AND P2, PT, R64, c[0x0][0x19c], PT ;
 Instr 225 @ 0xe10 (3600) - IMAD R39, R66, R37, -c[0x0][0x26c] ;
 Instr 226 @ 0xe20 (3616) - LOP3.LUT R103, R103, R11, R10, 0x80, !PT ;
 Instr 227 @ 0xe30 (3632) - IMAD R14, R5.reuse, c[0x0][0x238], R14 ;
 Instr 228 @ 0xe40 (3648) - ISETP.GE.U32.AND P5, PT, R5, c[0x0][0x1a0], PT ;
 Instr 229 @ 0xe50 (3664) - IMAD R11, R65, R42.reuse, -c[0x0][0x264] ;
 Instr 230 @ 0xe60 (3680) - SEL R10, R6, 0xffffffff, P2 ;
 Instr 231 @ 0xe70 (3696) - IMAD R5, R0, c[0x0][0x230], RZ ;
 Instr 232 @ 0xe80 (3712) - ISETP.GE.U32.AND P4, PT, R39, c[0x0][0x1a4], PT ;
 Instr 233 @ 0xe90 (3728) - IMAD R0, R68, c[0x0][0x284], R11 ;
 Instr 234 @ 0xea0 (3744) - ISETP.GE.U32.AND P3, PT, R60, c[0x0][0x19c], PT ;
 Instr 235 @ 0xeb0 (3760) - @P0 IMAD.MOV.U32 R59, RZ, RZ, R12 ;
 Instr 236 @ 0xec0 (3776) - ISETP.LT.AND P0, PT, R92, c[0x0][0x3c4], !P1 ;
 Instr 237 @ 0xed0 (3792) - IMAD R5, R60, c[0x0][0x234], R5 ;
 Instr 238 @ 0xee0 (3808) - ISETP.GE.U32.AND P2, PT, R0, c[0x0][0x1a0], PT ;
 Instr 239 @ 0xef0 (3824) - IMAD R38, R61, R37.reuse, -c[0x0][0x26c] ;
 Instr 240 @ 0xf00 (3840) - SEL R10, R10, RZ, P0 ;
 Instr 241 @ 0xf10 (3856) - IMAD R5, R0, c[0x0][0x238], R5 ;
 Instr 242 @ 0xf20 (3872) - SEL R101, R4, 0xffffffff, P4 ;
 Instr 243 @ 0xf30 (3888) - IMAD R11, R59, R42, -c[0x0][0x264] ;
 Instr 244 @ 0xf40 (3904) - SEL R0, R9, 0xffffffff, P5 ;
 Instr 245 @ 0xf50 (3920) - IMAD R13, R16, c[0x0][0x238], R13 ;
 Instr 246 @ 0xf60 (3936) - ISETP.GE.U32.AND P0, PT, R38, c[0x0][0x1a4], PT ;
 Instr 247 @ 0xf70 (3952) - IMAD R37, R58, R37, -c[0x0][0x26c] ;
 Instr 248 @ 0xf80 (3968) - LOP3.LUT R101, R101, R10, R0, 0x80, !PT ;
 Instr 249 @ 0xf90 (3984) - IMAD R0, R68, c[0x0][0x284], R11 ;
 Instr 250 @ 0xfa0 (4000) - ISETP.LT.AND P1, PT, R91, c[0x0][0x3c4], !P1 ;
 Instr 251 @ 0xfb0 (4016) - IMAD R13, R40, c[0x0][0x23c], R13 ;
 Instr 252 @ 0xfc0 (4032) - SEL R12, R6, 0xffffffff, P3 ;
 Instr 253 @ 0xfd0 (4048) - IMAD R11, R39, c[0x0][0x23c], R14 ;
 Instr 254 @ 0xfe0 (4064) - SEL R99, R4, 0xffffffff, P0 ;
 Instr 255 @ 0xff0 (4080) - IMAD R120, R118, c[0x0][0x240], R13 ;
 Instr 256 @ 0x1000 (4096) - SEL R12, R12, RZ, P1 ;
 Instr 257 @ 0x1010 (4112) - IMAD R118, R118, c[0x0][0x240], R11 ;
 Instr 258 @ 0x1020 (4128) - SEL R10, R9, 0xffffffff, P2 ;
 Instr 259 @ 0x1030 (4144) - IMAD R104, R72, 0x8, R35 ;
 Instr 260 @ 0x1040 (4160) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x1a0], PT ;
 Instr 261 @ 0x1050 (4176) - CS2R R14, SRZ ;
 Instr 262 @ 0x1060 (4192) - LOP3.LUT R99, R99, R12, R10, 0x80, !PT ;
 Instr 263 @ 0x1070 (4208) - IMAD R10, R7, c[0x0][0x230], RZ ;
 Instr 264 @ 0x1080 (4224) - SEL R9, R9, 0xffffffff, P0 ;
 Instr 265 @ 0x1090 (4240) - CS2R R12, SRZ ;
 Instr 266 @ 0x10a0 (4256) - ISETP.GE.AND P0, PT, R90, c[0x0][0x3c4], PT ;
 Instr 267 @ 0x10b0 (4272) - IMAD R11, R3.reuse, c[0x0][0x234], R10 ;
 Instr 268 @ 0x10c0 (4288) - ISETP.GE.U32.AND P1, PT, R3, c[0x0][0x19c], PT ;
 Instr 269 @ 0x10d0 (4304) - CS2R R16, SRZ ;
 Instr 270 @ 0x10e0 (4320) - ISETP.LT.AND P0, PT, R8, R105, !P0 ;
 Instr 271 @ 0x10f0 (4336) - IMAD R10, R0, c[0x0][0x238], R11 ;
 Instr 272 @ 0x1100 (4352) - SEL R6, R6, 0xffffffff, P1 ;
 Instr 273 @ 0x1110 (4368) - IMAD R11, R38, c[0x0][0x23c], R5 ;
 Instr 274 @ 0x1120 (4384) - LOP3.LUT R7, R9, 0x1, RZ, 0xc0, !PT ;
 Instr 275 @ 0x1130 (4400) - CS2R R34, SRZ ;
 Instr 276 @ 0x1140 (4416) - ISETP.GE.U32.AND P1, PT, R37, c[0x0][0x1a4], PT ;
 Instr 277 @ 0x1150 (4432) - IMAD R116, R8, c[0x0][0x240], R11 ;
 Instr 278 @ 0x1160 (4448) - SEL R6, R6, RZ, P0 ;
 Instr 279 @ 0x1170 (4464) - ISETP.NE.U32.AND P3, PT, R7, 0x1, PT ;
 Instr 280 @ 0x1180 (4480) - IMAD R7, R37, c[0x0][0x23c], R10 ;
 Instr 281 @ 0x1190 (4496) - SEL R5, R4, 0xffffffff, P1 ;
 Instr 282 @ 0x11a0 (4512) - CS2R R10, SRZ ;
 Instr 283 @ 0x11b0 (4528) - ISETP.GE.AND P4, PT, R41, 0x2, PT ;
 Instr 284 @ 0x11c0 (4544) - IMAD R114, R8, c[0x0][0x240], R7 ;
 Instr 285 @ 0x11d0 (4560) - LOP3.LUT R4, R6, 0x1, RZ, 0xc0, !PT ;
 Instr 286 @ 0x11e0 (4576) - LOP3.LUT R97, R5, R6, R9, 0x80, !PT ;
 Instr 287 @ 0x11f0 (4592) - ISETP.EQ.U32.AND P3, PT, R4, 0x1, !P3 ;
 Instr 288 @ 0x1200 (4608) - CS2R R8, SRZ ;
 Instr 289 @ 0x1210 (4624) - LOP3.LUT R7, R103, 0x1, RZ, 0xc0, !PT ;
 Instr 290 @ 0x1220 (4640) - LOP3.LUT R6, R101, 0x1, RZ, 0xc0, !PT ;
 Instr 291 @ 0x1230 (4656) - LOP3.LUT R4, R99, 0x1, RZ, 0xc0, !PT ;
 Instr 292 @ 0x1240 (4672) - LOP3.LUT R5, R5, 0x1, RZ, 0xc0, !PT ;
 Instr 293 @ 0x1250 (4688) - ISETP.EQ.U32.AND P0, PT, R7, 0x1, PT ;
 Instr 294 @ 0x1260 (4704) - ISETP.EQ.U32.AND P1, PT, R6, 0x1, PT ;
 Instr 295 @ 0x1270 (4720) - ISETP.EQ.U32.AND P2, PT, R4, 0x1, PT ;
 Instr 296 @ 0x1280 (4736) - CS2R R6, SRZ ;
 Instr 297 @ 0x1290 (4752) - ISETP.EQ.U32.AND P3, PT, R5, 0x1, P3 ;
 Instr 298 @ 0x12a0 (4768) - CS2R R4, SRZ ;
 Instr 299 @ 0x12b0 (4784) - IADD3 R104, R104, c[0x0][0x638], RZ ;
 Instr 300 @ 0x12c0 (4800) - P2R R94, PR, RZ, 0xf ;
 Instr 301 @ 0x12d0 (4816) - @!P4 BRA 0x1b30 ;
Basic block id 9 - num instructions 4
 Instr 302 @ 0x12e0 (4832) - IADD3 R43, R41, -0x2, RZ ;
 Instr 303 @ 0x12f0 (4848) - UMOV UR11, 0x1 ;
 Instr 304 @ 0x1300 (4864) - ISETP.GE.U32.AND P0, PT, R43, 0x3, PT ;
 Instr 305 @ 0x1310 (4880) - @!P0 BRA 0x1860 ;
Basic block id 10 - num instructions 3
 Instr 306 @ 0x1320 (4896) - IADD3 R44, R41, -0x1, RZ ;
 Instr 307 @ 0x1330 (4912) - LOP3.LUT R57, R44, 0x3, RZ, 0xc0, !PT ;
 Instr 308 @ 0x1340 (4928) - IMAD.IADD R57, R44, 0x1, -R57 ;
Basic block id 11 - num instructions 81
 Instr 309 @ 0x1350 (4944) - IMAD.U32 R43, RZ, RZ, UR11 ;
 Instr 310 @ 0x1360 (4960) - ULDC UR5, c[0x0][0x280] ;
 Instr 311 @ 0x1370 (4976) - IMAD.U32 R41, RZ, RZ, UR11 ;
 Instr 312 @ 0x1380 (4992) - ULDC UR4, c[0x0][0x61c] ;
 Instr 313 @ 0x1390 (5008) - IMAD R43, R43, c[0x0][0x280], R64 ;
 Instr 314 @ 0x13a0 (5024) - UIMAD UR7, UR11, UR5, UR5 ;
 Instr 315 @ 0x13b0 (5040) - IMAD R41, R41, c[0x0][0x280], R60 ;
 Instr 316 @ 0x13c0 (5056) - UIMAD UR10, UR11, UR4, URZ ;
 Instr 317 @ 0x13d0 (5072) - IMAD.U32 R44, RZ, RZ, UR11 ;
 Instr 318 @ 0x13e0 (5088) - ISETP.GE.U32.AND P0, PT, R43, c[0x0][0x19c], PT ;
 Instr 319 @ 0x13f0 (5104) - UIADD3 UR6, UR7, UR5, URZ ;
 Instr 320 @ 0x1400 (5120) - ISETP.GE.U32.AND P5, PT, R41, c[0x0][0x19c], PT ;
 Instr 321 @ 0x1410 (5136) - UIADD3 UR8, UR10, UR4, URZ ;
 Instr 322 @ 0x1420 (5152) - IADD3 R43, R69, UR7, RZ ;
 Instr 323 @ 0x1430 (5168) - IMAD.MOV.U32 R41, RZ, RZ, c[0x0][0x620] ;
 Instr 324 @ 0x1440 (5184) - UIADD3 UR5, UR6, UR5, URZ ;
 Instr 325 @ 0x1450 (5200) - IMAD R45, R44.reuse, c[0x0][0x280], R69 ;
 Instr 326 @ 0x1460 (5216) - ISETP.GE.U32.AND P1, PT, R43, c[0x0][0x19c], PT ;
 Instr 327 @ 0x1470 (5232) - IMAD R44, R44, c[0x0][0x280], R3 ;
 Instr 328 @ 0x1480 (5248) - IADD3 R43, R60, UR7, RZ ;
 Instr 329 @ 0x1490 (5264) - UIADD3 UR11, UR11, 0x4, URZ ;
 Instr 330 @ 0x14a0 (5280) - SHF.L.U32 R46, R41, UR8, RZ ;
 Instr 331 @ 0x14b0 (5296) - UIADD3 UR8, UR8, UR4, URZ ;
 Instr 332 @ 0x14c0 (5312) - ISETP.GE.U32.AND P3, PT, R44, c[0x0][0x19c], PT ;
 Instr 333 @ 0x14d0 (5328) - IADD3 R44, R64, UR7, RZ ;
 Instr 334 @ 0x14e0 (5344) - UIADD3 UR4, UR8, UR4, URZ ;
 Instr 335 @ 0x14f0 (5360) - SHF.L.U32 R47, R41, UR10, RZ ;
 Instr 336 @ 0x1500 (5376) - ISETP.GE.U32.AND P4, PT, R43, c[0x0][0x19c], PT ;
 Instr 337 @ 0x1510 (5392) - LOP3.LUT R46, RZ, R46, RZ, 0x33, !PT ;
 Instr 338 @ 0x1520 (5408) - IADD3 R43, R69, UR6, RZ ;
 Instr 339 @ 0x1530 (5424) - ISETP.GE.U32.AND P2, PT, R45, c[0x0][0x19c], PT ;
 Instr 340 @ 0x1540 (5440) - ISETP.GE.U32.AND P6, PT, R44, c[0x0][0x19c], PT ;
 Instr 341 @ 0x1550 (5456) - LOP3.LUT R47, RZ, R47, RZ, 0x33, !PT ;
 Instr 342 @ 0x1560 (5472) - IADD3 R44, R3, UR7, RZ ;
 Instr 343 @ 0x1570 (5488) - SEL R54, R46, 0xffffffff, P1 ;
 Instr 344 @ 0x1580 (5504) - ISETP.GE.U32.AND P1, PT, R43, c[0x0][0x19c], PT ;
 Instr 345 @ 0x1590 (5520) - IADD3 R43, R60, UR6, RZ ;
 Instr 346 @ 0x15a0 (5536) - SEL R56, R47, 0xffffffff, P2 ;
 Instr 347 @ 0x15b0 (5552) - ISETP.GE.U32.AND P2, PT, R44, c[0x0][0x19c], PT ;
 Instr 348 @ 0x15c0 (5568) - IADD3 R44, R64, UR6, RZ ;
 Instr 349 @ 0x15d0 (5584) - SEL R50, R46, 0xffffffff, P6 ;
 Instr 350 @ 0x15e0 (5600) - ISETP.GE.U32.AND P6, PT, R43, c[0x0][0x19c], PT ;
 Instr 351 @ 0x15f0 (5616) - SHF.L.U32 R45, R41, UR8, RZ ;
 Instr 352 @ 0x1600 (5632) - IADD3 R43, R3, UR6, RZ ;
 Instr 353 @ 0x1610 (5648) - SEL R53, R47.reuse, 0xffffffff, P0 ;
 Instr 354 @ 0x1620 (5664) - ISETP.GE.U32.AND P0, PT, R44, c[0x0][0x19c], PT ;
 Instr 355 @ 0x1630 (5680) - SEL R49, R47, 0xffffffff, P5 ;
 Instr 356 @ 0x1640 (5696) - IADD3 R44, R69, UR5, RZ ;
 Instr 357 @ 0x1650 (5712) - LOP3.LUT R45, RZ, R45, RZ, 0x33, !PT ;
 Instr 358 @ 0x1660 (5728) - ISETP.GE.U32.AND P5, PT, R43, c[0x0][0x19c], PT ;
 Instr 359 @ 0x1670 (5744) - IADD3 R57, R57, -0x4, RZ ;
 Instr 360 @ 0x1680 (5760) - IADD3 R43, R64, UR5, RZ ;
 Instr 361 @ 0x1690 (5776) - SEL R48, R46, 0xffffffff, P4 ;
 Instr 362 @ 0x16a0 (5792) - LOP3.LUT R50, R50, R101, R53, 0x80, !PT ;
 Instr 363 @ 0x16b0 (5808) - ISETP.GE.U32.AND P4, PT, R44, c[0x0][0x19c], PT ;
 Instr 364 @ 0x16c0 (5824) - SEL R101, R45, 0xffffffff, P0 ;
 Instr 365 @ 0x16d0 (5840) - SEL R47, R47, 0xffffffff, P3 ;
 Instr 366 @ 0x16e0 (5856) - IADD3 R44, R60, UR5, RZ ;
 Instr 367 @ 0x16f0 (5872) - SEL R46, R46, 0xffffffff, P2 ;
 Instr 368 @ 0x1700 (5888) - ISETP.NE.AND P0, PT, R57, RZ, PT ;
 Instr 369 @ 0x1710 (5904) - ISETP.GE.U32.AND P3, PT, R43, c[0x0][0x19c], PT ;
 Instr 370 @ 0x1720 (5920) - SHF.L.U32 R41, R41, UR4, RZ ;
 Instr 371 @ 0x1730 (5936) - IADD3 R43, R3, UR5, RZ ;
 Instr 372 @ 0x1740 (5952) - ISETP.GE.U32.AND P2, PT, R44, c[0x0][0x19c], PT ;
 Instr 373 @ 0x1750 (5968) - LOP3.LUT R46, R46, R97, R47, 0x80, !PT ;
 Instr 374 @ 0x1760 (5984) - SEL R44, R45, 0xffffffff, P1 ;
 Instr 375 @ 0x1770 (6000) - LOP3.LUT R97, RZ, R41, RZ, 0x33, !PT ;
 Instr 376 @ 0x1780 (6016) - ISETP.GE.U32.AND P1, PT, R43, c[0x0][0x19c], PT ;
 Instr 377 @ 0x1790 (6032) - LOP3.LUT R48, R48, R99, R49, 0x80, !PT ;
 Instr 378 @ 0x17a0 (6048) - SEL R99, R45, 0xffffffff, P6 ;
 Instr 379 @ 0x17b0 (6064) - SEL R47, R97.reuse, 0xffffffff, P4 ;
 Instr 380 @ 0x17c0 (6080) - SEL R43, R97.reuse, 0xffffffff, P3 ;
 Instr 381 @ 0x17d0 (6096) - SEL R41, R97, 0xffffffff, P2 ;
 Instr 382 @ 0x17e0 (6112) - LOP3.LUT R103, R54, R103, R56, 0x80, !PT ;
 Instr 383 @ 0x17f0 (6128) - SEL R45, R45, 0xffffffff, P5 ;
 Instr 384 @ 0x1800 (6144) - SEL R97, R97, 0xffffffff, P1 ;
 Instr 385 @ 0x1810 (6160) - LOP3.LUT R103, R47, R103, R44, 0x80, !PT ;
 Instr 386 @ 0x1820 (6176) - LOP3.LUT R101, R43, R50, R101, 0x80, !PT ;
 Instr 387 @ 0x1830 (6192) - LOP3.LUT R99, R41, R48, R99, 0x80, !PT ;
 Instr 388 @ 0x1840 (6208) - LOP3.LUT R97, R97, R46, R45, 0x80, !PT ;
 Instr 389 @ 0x1850 (6224) - @P0 BRA 0x1350 ;
Basic block id 12 - num instructions 4
 Instr 390 @ 0x1860 (6240) - IMAD.MOV.U32 R41, RZ, RZ, 0x1 ;
 Instr 391 @ 0x1870 (6256) - IADD3 R41, -R41, c[0x0][0x1cc], RZ ;
 Instr 392 @ 0x1880 (6272) - LOP3.LUT P0, RZ, R41, 0x3, RZ, 0xc0, !PT ;
 Instr 393 @ 0x1890 (6288) - @!P0 BRA 0x1b30 ;
Basic block id 13 - num instructions 17
 Instr 394 @ 0x18a0 (6304) - ULDC UR5, c[0x0][0x3a4] ;
 Instr 395 @ 0x18b0 (6320) - LOP3.LUT R41, R41, 0x3, RZ, 0xc0, !PT ;
 Instr 396 @ 0x18c0 (6336) - UIMAD UR5, UR9, UR5, UR11 ;
 Instr 397 @ 0x18d0 (6352) - ULDC UR4, c[0x0][0x280] ;
 Instr 398 @ 0x18e0 (6368) - IADD3 R41, -R41, RZ, RZ ;
 Instr 399 @ 0x18f0 (6384) - UIMAD UR4, UR5, UR4, URZ ;
 Instr 400 @ 0x1900 (6400) - IMAD.U32 R3, RZ, RZ, UR4 ;
 Instr 401 @ 0x1910 (6416) - ULDC UR4, c[0x0][0x61c] ;
 Instr 402 @ 0x1920 (6432) - UIMAD UR11, UR11, UR4, URZ ;
 Instr 403 @ 0x1930 (6448) - IMAD R62, R62, c[0x0][0x274], R3.reuse ;
 Instr 404 @ 0x1940 (6464) - IMAD R63, R63, c[0x0][0x274], R3.reuse ;
 Instr 405 @ 0x1950 (6480) - IMAD R71, R71, c[0x0][0x274], R3.reuse ;
 Instr 406 @ 0x1960 (6496) - IADD3 R62, R62, -c[0x0][0x25c], RZ ;
 Instr 407 @ 0x1970 (6512) - IMAD R2, R2, c[0x0][0x274], R3 ;
 Instr 408 @ 0x1980 (6528) - IADD3 R63, R63, -c[0x0][0x25c], RZ ;
 Instr 409 @ 0x1990 (6544) - IADD3 R71, R71, -c[0x0][0x25c], RZ ;
 Instr 410 @ 0x19a0 (6560) - IADD3 R3, R2, -c[0x0][0x25c], RZ ;
Basic block id 14 - num instructions 24
 Instr 411 @ 0x19b0 (6576) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x620] ;
 Instr 412 @ 0x19c0 (6592) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x19c], PT ;
 Instr 413 @ 0x19d0 (6608) - ULDC UR4, c[0x0][0x61c] ;
 Instr 414 @ 0x19e0 (6624) - ISETP.GE.U32.AND P2, PT, R71, c[0x0][0x19c], PT ;
 Instr 415 @ 0x19f0 (6640) - SHF.L.U32 R2, R2, UR11, RZ ;
 Instr 416 @ 0x1a00 (6656) - UIADD3 UR11, UR11, UR4, URZ ;
 Instr 417 @ 0x1a10 (6672) - ISETP.GE.U32.AND P1, PT, R63, c[0x0][0x19c], PT ;
 Instr 418 @ 0x1a20 (6688) - LOP3.LUT R2, RZ, R2, RZ, 0x33, !PT ;
 Instr 419 @ 0x1a30 (6704) - IADD3 R41, R41, 0x1, RZ ;
 Instr 420 @ 0x1a40 (6720) - SEL R44, R2, 0xffffffff, P0 ;
 Instr 421 @ 0x1a50 (6736) - ISETP.GE.U32.AND P0, PT, R62, c[0x0][0x19c], PT ;
 Instr 422 @ 0x1a60 (6752) - LOP3.LUT R103, R103, R44, RZ, 0xc0, !PT ;
 Instr 423 @ 0x1a70 (6768) - SEL R46, R2.reuse, 0xffffffff, P2 ;
 Instr 424 @ 0x1a80 (6784) - SEL R44, R2, 0xffffffff, P1 ;
 Instr 425 @ 0x1a90 (6800) - SEL R2, R2, 0xffffffff, P0 ;
 Instr 426 @ 0x1aa0 (6816) - ISETP.NE.AND P0, PT, R41, RZ, PT ;
 Instr 427 @ 0x1ab0 (6832) - LOP3.LUT R101, R101, R46, RZ, 0xc0, !PT ;
 Instr 428 @ 0x1ac0 (6848) - LOP3.LUT R99, R99, R44, RZ, 0xc0, !PT ;
 Instr 429 @ 0x1ad0 (6864) - LOP3.LUT R97, R97, R2, RZ, 0xc0, !PT ;
 Instr 430 @ 0x1ae0 (6880) - IADD3 R62, R62, c[0x0][0x280], RZ ;
 Instr 431 @ 0x1af0 (6896) - IADD3 R63, R63, c[0x0][0x280], RZ ;
 Instr 432 @ 0x1b00 (6912) - IADD3 R71, R71, c[0x0][0x280], RZ ;
 Instr 433 @ 0x1b10 (6928) - IADD3 R3, R3, c[0x0][0x280], RZ ;
 Instr 434 @ 0x1b20 (6944) - @P0 BRA 0x19b0 ;
Basic block id 15 - num instructions 3
 Instr 435 @ 0x1b30 (6960) - MOV R57, c[0x0][0x1d0] ;
 Instr 436 @ 0x1b40 (6976) - ISETP.GE.AND P0, PT, R57, 0x2, PT ;
 Instr 437 @ 0x1b50 (6992) - @!P0 BRA 0x23f0 ;
Basic block id 16 - num instructions 6
 Instr 438 @ 0x1b60 (7008) - IADD3 R2, R57.reuse, -0x2, RZ ;
 Instr 439 @ 0x1b70 (7024) - UMOV UR11, 0x1 ;
 Instr 440 @ 0x1b80 (7040) - IADD3 R57, R57, -0x1, RZ ;
 Instr 441 @ 0x1b90 (7056) - ISETP.GE.U32.AND P0, PT, R2, 0x3, PT ;
 Instr 442 @ 0x1ba0 (7072) - LOP3.LUT R2, R57, 0x3, RZ, 0xc0, !PT ;
 Instr 443 @ 0x1bb0 (7088) - @!P0 BRA 0x2150 ;
Basic block id 17 - num instructions 7
 Instr 444 @ 0x1bc0 (7104) - IMAD R41, R73, R42, -c[0x0][0x264] ;
 Instr 445 @ 0x1bd0 (7120) - IADD3 R57, R57, -R2, RZ ;
 Instr 446 @ 0x1be0 (7136) - IMAD R3, R67, R42.reuse, -c[0x0][0x264] ;
 Instr 447 @ 0x1bf0 (7152) - IMAD R43, R65, R42, -c[0x0][0x264] ;
 Instr 448 @ 0x1c00 (7168) - IMAD R41, R68.reuse, c[0x0][0x284], R41 ;
 Instr 449 @ 0x1c10 (7184) - IMAD R3, R68.reuse, c[0x0][0x284], R3 ;
 Instr 450 @ 0x1c20 (7200) - IMAD R68, R68, c[0x0][0x284], R43 ;
Basic block id 18 - num instructions 82
 Instr 451 @ 0x1c30 (7216) - IMAD.U32 R42, RZ, RZ, UR11 ;
 Instr 452 @ 0x1c40 (7232) - ULDC UR5, c[0x0][0x284] ;
 Instr 453 @ 0x1c50 (7248) - IMAD.U32 R43, RZ, RZ, UR11 ;
 Instr 454 @ 0x1c60 (7264) - UIMAD UR7, UR11, UR5, UR5 ;
 Instr 455 @ 0x1c70 (7280) - IMAD R42, R42, c[0x0][0x284], R3 ;
 Instr 456 @ 0x1c80 (7296) - ULDC UR4, c[0x0][0x1d4] ;
 Instr 457 @ 0x1c90 (7312) - IMAD.U32 R44, RZ, RZ, UR11 ;
 Instr 458 @ 0x1ca0 (7328) - UIMAD UR10, UR11, UR4, URZ ;
 Instr 459 @ 0x1cb0 (7344) - IMAD R43, R43, c[0x0][0x284], R0 ;
 Instr 460 @ 0x1cc0 (7360) - ISETP.GE.U32.AND P0, PT, R42, c[0x0][0x1a0], PT ;
 Instr 461 @ 0x1cd0 (7376) - IMAD R44, R44, c[0x0][0x284], R41 ;
 Instr 462 @ 0x1ce0 (7392) - IADD3 R42, R41, UR7, RZ ;
 Instr 463 @ 0x1cf0 (7408) - UIADD3 UR8, UR10, UR4, URZ ;
 Instr 464 @ 0x1d00 (7424) - ISETP.GE.U32.AND P3, PT, R43, c[0x0][0x1a0], PT ;
 Instr 465 @ 0x1d10 (7440) - UIADD3 UR6, UR7, UR5, URZ ;
 Instr 466 @ 0x1d20 (7456) - ISETP.GE.U32.AND P1, PT, R42, c[0x0][0x1a0], PT ;
 Instr 467 @ 0x1d30 (7472) - IMAD.MOV.U32 R42, RZ, RZ, c[0x0][0x624] ;
 Instr 468 @ 0x1d40 (7488) - IADD3 R43, R68, UR7, RZ ;
 Instr 469 @ 0x1d50 (7504) - IMAD.U32 R45, RZ, RZ, UR11 ;
 Instr 470 @ 0x1d60 (7520) - ISETP.GE.U32.AND P2, PT, R44, c[0x0][0x1a0], PT ;
 Instr 471 @ 0x1d70 (7536) - UIADD3 UR5, UR6, UR5, URZ ;
 Instr 472 @ 0x1d80 (7552) - SHF.L.U32 R46, R42.reuse, UR8, RZ ;
 Instr 473 @ 0x1d90 (7568) - IMAD R45, R45, c[0x0][0x284], R68 ;
 Instr 474 @ 0x1da0 (7584) - IADD3 R44, R3, UR7, RZ ;
 Instr 475 @ 0x1db0 (7600) - UIADD3 UR8, UR8, UR4, URZ ;
 Instr 476 @ 0x1dc0 (7616) - SHF.L.U32 R47, R42, UR10, RZ ;
 Instr 477 @ 0x1dd0 (7632) - UIADD3 UR11, UR11, 0x4, URZ ;
 Instr 478 @ 0x1de0 (7648) - ISETP.GE.U32.AND P4, PT, R43, c[0x0][0x1a0], PT ;
 Instr 479 @ 0x1df0 (7664) - UIADD3 UR4, UR8, UR4, URZ ;
 Instr 480 @ 0x1e00 (7680) - LOP3.LUT R46, RZ, R46, RZ, 0x33, !PT ;
 Instr 481 @ 0x1e10 (7696) - IADD3 R43, R41, UR6, RZ ;
 Instr 482 @ 0x1e20 (7712) - ISETP.GE.U32.AND P6, PT, R44, c[0x0][0x1a0], PT ;
 Instr 483 @ 0x1e30 (7728) - LOP3.LUT R47, RZ, R47, RZ, 0x33, !PT ;
 Instr 484 @ 0x1e40 (7744) - IADD3 R44, R0, UR7, RZ ;
 Instr 485 @ 0x1e50 (7760) - SEL R54, R46, 0xffffffff, P1 ;
 Instr 486 @ 0x1e60 (7776) - ISETP.GE.U32.AND P1, PT, R43, c[0x0][0x1a0], PT ;
 Instr 487 @ 0x1e70 (7792) - IADD3 R43, R68, UR6, RZ ;
 Instr 488 @ 0x1e80 (7808) - SEL R56, R47, 0xffffffff, P2 ;
 Instr 489 @ 0x1e90 (7824) - ISETP.GE.U32.AND P2, PT, R44, c[0x0][0x1a0], PT ;
 Instr 490 @ 0x1ea0 (7840) - ISETP.GE.U32.AND P5, PT, R45, c[0x0][0x1a0], PT ;
 Instr 491 @ 0x1eb0 (7856) - IADD3 R44, R3, UR6, RZ ;
 Instr 492 @ 0x1ec0 (7872) - SEL R50, R46, 0xffffffff, P6 ;
 Instr 493 @ 0x1ed0 (7888) - ISETP.GE.U32.AND P6, PT, R43, c[0x0][0x1a0], PT ;
 Instr 494 @ 0x1ee0 (7904) - SHF.L.U32 R45, R42, UR8, RZ ;
 Instr 495 @ 0x1ef0 (7920) - IADD3 R43, R0, UR6, RZ ;
 Instr 496 @ 0x1f00 (7936) - SEL R53, R47.reuse, 0xffffffff, P0 ;
 Instr 497 @ 0x1f10 (7952) - ISETP.GE.U32.AND P0, PT, R44, c[0x0][0x1a0], PT ;
 Instr 498 @ 0x1f20 (7968) - SEL R49, R47, 0xffffffff, P5 ;
 Instr 499 @ 0x1f30 (7984) - IADD3 R44, R41, UR5, RZ ;
 Instr 500 @ 0x1f40 (8000) - LOP3.LUT R45, RZ, R45, RZ, 0x33, !PT ;
 Instr 501 @ 0x1f50 (8016) - ISETP.GE.U32.AND P5, PT, R43, c[0x0][0x1a0], PT ;
 Instr 502 @ 0x1f60 (8032) - IADD3 R57, R57, -0x4, RZ ;
 Instr 503 @ 0x1f70 (8048) - IADD3 R43, R3, UR5, RZ ;
 Instr 504 @ 0x1f80 (8064) - SEL R48, R46, 0xffffffff, P4 ;
 Instr 505 @ 0x1f90 (8080) - LOP3.LUT R50, R50, R101, R53, 0x80, !PT ;
 Instr 506 @ 0x1fa0 (8096) - ISETP.GE.U32.AND P4, PT, R44, c[0x0][0x1a0], PT ;
 Instr 507 @ 0x1fb0 (8112) - SEL R101, R45, 0xffffffff, P0 ;
 Instr 508 @ 0x1fc0 (8128) - SEL R47, R47, 0xffffffff, P3 ;
 Instr 509 @ 0x1fd0 (8144) - IADD3 R44, R68, UR5, RZ ;
 Instr 510 @ 0x1fe0 (8160) - SEL R46, R46, 0xffffffff, P2 ;
 Instr 511 @ 0x1ff0 (8176) - ISETP.NE.AND P0, PT, R57, RZ, PT ;
 Instr 512 @ 0x2000 (8192) - ISETP.GE.U32.AND P3, PT, R43, c[0x0][0x1a0], PT ;
 Instr 513 @ 0x2010 (8208) - SHF.L.U32 R42, R42, UR4, RZ ;
 Instr 514 @ 0x2020 (8224) - IADD3 R43, R0, UR5, RZ ;
 Instr 515 @ 0x2030 (8240) - ISETP.GE.U32.AND P2, PT, R44, c[0x0][0x1a0], PT ;
 Instr 516 @ 0x2040 (8256) - LOP3.LUT R46, R46, R97, R47, 0x80, !PT ;
 Instr 517 @ 0x2050 (8272) - SEL R44, R45, 0xffffffff, P1 ;
 Instr 518 @ 0x2060 (8288) - LOP3.LUT R97, RZ, R42, RZ, 0x33, !PT ;
 Instr 519 @ 0x2070 (8304) - ISETP.GE.U32.AND P1, PT, R43, c[0x0][0x1a0], PT ;
 Instr 520 @ 0x2080 (8320) - LOP3.LUT R48, R48, R99, R49, 0x80, !PT ;
 Instr 521 @ 0x2090 (8336) - SEL R99, R45, 0xffffffff, P6 ;
 Instr 522 @ 0x20a0 (8352) - SEL R47, R97, 0xffffffff, P4 ;
 Instr 523 @ 0x20b0 (8368) - SEL R43, R97.reuse, 0xffffffff, P3 ;
 Instr 524 @ 0x20c0 (8384) - SEL R42, R97, 0xffffffff, P2 ;
 Instr 525 @ 0x20d0 (8400) - LOP3.LUT R103, R54, R103, R56, 0x80, !PT ;
 Instr 526 @ 0x20e0 (8416) - SEL R45, R45, 0xffffffff, P5 ;
 Instr 527 @ 0x20f0 (8432) - SEL R97, R97, 0xffffffff, P1 ;
 Instr 528 @ 0x2100 (8448) - LOP3.LUT R103, R47, R103, R44, 0x80, !PT ;
 Instr 529 @ 0x2110 (8464) - LOP3.LUT R101, R43, R50, R101, 0x80, !PT ;
 Instr 530 @ 0x2120 (8480) - LOP3.LUT R99, R42, R48, R99, 0x80, !PT ;
 Instr 531 @ 0x2130 (8496) - LOP3.LUT R97, R97, R46, R45, 0x80, !PT ;
 Instr 532 @ 0x2140 (8512) - @P0 BRA 0x1c30 ;
Basic block id 19 - num instructions 2
 Instr 533 @ 0x2150 (8528) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 534 @ 0x2160 (8544) - @!P0 BRA 0x23f0 ;
Basic block id 20 - num instructions 16
 Instr 535 @ 0x2170 (8560) - ULDC UR5, c[0x0][0x3a8] ;
 Instr 536 @ 0x2180 (8576) - IADD3 R2, -R2, RZ, RZ ;
 Instr 537 @ 0x2190 (8592) - UIMAD UR5, UR9, UR5, UR11 ;
 Instr 538 @ 0x21a0 (8608) - ULDC UR4, c[0x0][0x284] ;
 Instr 539 @ 0x21b0 (8624) - UIMAD UR4, UR5, UR4, URZ ;
 Instr 540 @ 0x21c0 (8640) - MOV R0, UR4 ;
 Instr 541 @ 0x21d0 (8656) - ULDC UR4, c[0x0][0x1d4] ;
 Instr 542 @ 0x21e0 (8672) - UIMAD UR11, UR11, UR4, URZ ;
 Instr 543 @ 0x21f0 (8688) - IMAD R59, R59, c[0x0][0x278], R0.reuse ;
 Instr 544 @ 0x2200 (8704) - IMAD R65, R65, c[0x0][0x278], R0.reuse ;
 Instr 545 @ 0x2210 (8720) - IMAD R67, R67, c[0x0][0x278], R0.reuse ;
 Instr 546 @ 0x2220 (8736) - IADD3 R59, R59, -c[0x0][0x264], RZ ;
 Instr 547 @ 0x2230 (8752) - IMAD R0, R73, c[0x0][0x278], R0 ;
 Instr 548 @ 0x2240 (8768) - IADD3 R65, R65, -c[0x0][0x264], RZ ;
 Instr 549 @ 0x2250 (8784) - IADD3 R67, R67, -c[0x0][0x264], RZ ;
 Instr 550 @ 0x2260 (8800) - IADD3 R3, R0, -c[0x0][0x264], RZ ;
Basic block id 21 - num instructions 24
 Instr 551 @ 0x2270 (8816) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x624] ;
 Instr 552 @ 0x2280 (8832) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x1a0], PT ;
 Instr 553 @ 0x2290 (8848) - ULDC UR4, c[0x0][0x1d4] ;
 Instr 554 @ 0x22a0 (8864) - ISETP.GE.U32.AND P2, PT, R67, c[0x0][0x1a0], PT ;
 Instr 555 @ 0x22b0 (8880) - SHF.L.U32 R0, R0, UR11, RZ ;
 Instr 556 @ 0x22c0 (8896) - UIADD3 UR11, UR11, UR4, URZ ;
 Instr 557 @ 0x22d0 (8912) - ISETP.GE.U32.AND P1, PT, R65, c[0x0][0x1a0], PT ;
 Instr 558 @ 0x22e0 (8928) - LOP3.LUT R0, RZ, R0, RZ, 0x33, !PT ;
 Instr 559 @ 0x22f0 (8944) - IADD3 R2, R2, 0x1, RZ ;
 Instr 560 @ 0x2300 (8960) - SEL R42, R0.reuse, 0xffffffff, P0 ;
 Instr 561 @ 0x2310 (8976) - ISETP.GE.U32.AND P0, PT, R59, c[0x0][0x1a0], PT ;
 Instr 562 @ 0x2320 (8992) - LOP3.LUT R103, R103, R42, RZ, 0xc0, !PT ;
 Instr 563 @ 0x2330 (9008) - SEL R44, R0.reuse, 0xffffffff, P2 ;
 Instr 564 @ 0x2340 (9024) - SEL R42, R0, 0xffffffff, P1 ;
 Instr 565 @ 0x2350 (9040) - SEL R0, R0, 0xffffffff, P0 ;
 Instr 566 @ 0x2360 (9056) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 567 @ 0x2370 (9072) - LOP3.LUT R101, R101, R44, RZ, 0xc0, !PT ;
 Instr 568 @ 0x2380 (9088) - LOP3.LUT R99, R99, R42, RZ, 0xc0, !PT ;
 Instr 569 @ 0x2390 (9104) - LOP3.LUT R97, R97, R0, RZ, 0xc0, !PT ;
 Instr 570 @ 0x23a0 (9120) - IADD3 R59, R59, c[0x0][0x284], RZ ;
 Instr 571 @ 0x23b0 (9136) - IADD3 R65, R65, c[0x0][0x284], RZ ;
 Instr 572 @ 0x23c0 (9152) - IADD3 R67, R67, c[0x0][0x284], RZ ;
 Instr 573 @ 0x23d0 (9168) - IADD3 R3, R3, c[0x0][0x284], RZ ;
 Instr 574 @ 0x23e0 (9184) - @P0 BRA 0x2270 ;
Basic block id 22 - num instructions 3
 Instr 575 @ 0x23f0 (9200) - MOV R0, c[0x0][0x1d4] ;
 Instr 576 @ 0x2400 (9216) - ISETP.GE.AND P0, PT, R0, 0x2, PT ;
 Instr 577 @ 0x2410 (9232) - @!P0 BRA 0x2b80 ;
Basic block id 23 - num instructions 6
 Instr 578 @ 0x2420 (9248) - IADD3 R2, R0.reuse, -0x2, RZ ;
 Instr 579 @ 0x2430 (9264) - IMAD.MOV.U32 R50, RZ, RZ, 0x1 ;
 Instr 580 @ 0x2440 (9280) - IADD3 R0, R0, -0x1, RZ ;
 Instr 581 @ 0x2450 (9296) - ISETP.GE.U32.AND P0, PT, R2, 0x3, PT ;
 Instr 582 @ 0x2460 (9312) - LOP3.LUT R53, R0, 0x3, RZ, 0xc0, !PT ;
 Instr 583 @ 0x2470 (9328) - @!P0 BRA 0x2950 ;
Basic block id 24 - num instructions 1
 Instr 584 @ 0x2480 (9344) - IADD3 R49, R0, -R53, RZ ;
Basic block id 25 - num instructions 76
 Instr 585 @ 0x2490 (9360) - IMAD R2, R50.reuse, c[0x0][0x288], R39 ;
 Instr 586 @ 0x24a0 (9376) - IADD3 R44, R50.reuse, 0x1, RZ ;
 Instr 587 @ 0x24b0 (9392) - IMAD R3, R50.reuse, c[0x0][0x288], R40 ;
 Instr 588 @ 0x24c0 (9408) - IADD3 R42, R50, 0x2, RZ ;
 Instr 589 @ 0x24d0 (9424) - IMAD.MOV.U32 R43, RZ, RZ, c[0x0][0x288] ;
 Instr 590 @ 0x24e0 (9440) - ISETP.GE.U32.AND P2, PT, R2, c[0x0][0x1a4], PT ;
 Instr 591 @ 0x24f0 (9456) - IMAD R41, R50.reuse, c[0x0][0x288], R37 ;
 Instr 592 @ 0x2500 (9472) - ISETP.GE.U32.AND P4, PT, R3, c[0x0][0x1a4], PT ;
 Instr 593 @ 0x2510 (9488) - IMAD R2, R50, R43, c[0x0][0x288] ;
 Instr 594 @ 0x2520 (9504) - IADD3 R49, R49, -0x4, RZ ;
 Instr 595 @ 0x2530 (9520) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x628] ;
 Instr 596 @ 0x2540 (9536) - ISETP.GE.U32.AND P6, PT, R41, c[0x0][0x1a4], PT ;
 Instr 597 @ 0x2550 (9552) - IMAD.IADD R41, R38, 0x1, R2 ;
 Instr 598 @ 0x2560 (9568) - IMAD R0, R50, c[0x0][0x288], R38 ;
 Instr 599 @ 0x2570 (9584) - SHF.L.U32 R48, R3.reuse, R50, RZ ;
 Instr 600 @ 0x2580 (9600) - IMAD.IADD R45, R40, 0x1, R2.reuse ;
 Instr 601 @ 0x2590 (9616) - SHF.L.U32 R43, R3, R44, RZ ;
 Instr 602 @ 0x25a0 (9632) - IMAD.IADD R44, R39, 0x1, R2.reuse ;
 Instr 603 @ 0x25b0 (9648) - ISETP.GE.U32.AND P5, PT, R41, c[0x0][0x1a4], PT ;
 Instr 604 @ 0x25c0 (9664) - IADD3 R41, R2, c[0x0][0x288], RZ ;
 Instr 605 @ 0x25d0 (9680) - IMAD.IADD R2, R37, 0x1, R2 ;
 Instr 606 @ 0x25e0 (9696) - LOP3.LUT R48, RZ, R48, RZ, 0x33, !PT ;
 Instr 607 @ 0x25f0 (9712) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x1a4], PT ;
 Instr 608 @ 0x2600 (9728) - IADD3 R0, R50, 0x3, RZ ;
 Instr 609 @ 0x2610 (9744) - SEL R47, R48, 0xffffffff, P4 ;
 Instr 610 @ 0x2620 (9760) - ISETP.GE.U32.AND P4, PT, R2, c[0x0][0x1a4], PT ;
 Instr 611 @ 0x2630 (9776) - IMAD.IADD R2, R39, 0x1, R41.reuse ;
 Instr 612 @ 0x2640 (9792) - SHF.L.U32 R42, R3.reuse, R42, RZ ;
 Instr 613 @ 0x2650 (9808) - SHF.L.U32 R0, R3, R0, RZ ;
 Instr 614 @ 0x2660 (9824) - IMAD.IADD R3, R40, 0x1, R41 ;
 Instr 615 @ 0x2670 (9840) - ISETP.GE.U32.AND P3, PT, R45, c[0x0][0x1a4], PT ;
 Instr 616 @ 0x2680 (9856) - LOP3.LUT R43, RZ, R43, RZ, 0x33, !PT ;
 Instr 617 @ 0x2690 (9872) - SEL R45, R48, 0xffffffff, P2 ;
 Instr 618 @ 0x26a0 (9888) - SEL R46, R43, 0xffffffff, P3 ;
 Instr 619 @ 0x26b0 (9904) - ISETP.GE.U32.AND P2, PT, R2, c[0x0][0x1a4], PT ;
 Instr 620 @ 0x26c0 (9920) - IMAD.IADD R2, R37, 0x1, R41.reuse ;
 Instr 621 @ 0x26d0 (9936) - ISETP.GE.U32.AND P3, PT, R3, c[0x0][0x1a4], PT ;
 Instr 622 @ 0x26e0 (9952) - IMAD.IADD R3, R38, 0x1, R41 ;
 Instr 623 @ 0x26f0 (9968) - ISETP.GE.U32.AND P1, PT, R44, c[0x0][0x1a4], PT ;
 Instr 624 @ 0x2700 (9984) - IADD3 R41, R41, c[0x0][0x288], RZ ;
 Instr 625 @ 0x2710 (10000) - SEL R54, R48, 0xffffffff, P0 ;
 Instr 626 @ 0x2720 (10016) - SEL R44, R43, 0xffffffff, P1 ;
 Instr 627 @ 0x2730 (10032) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x1a4], PT ;
 Instr 628 @ 0x2740 (10048) - ISETP.GE.U32.AND P1, PT, R3, c[0x0][0x1a4], PT ;
 Instr 629 @ 0x2750 (10064) - IMAD.IADD R3, R40, 0x1, R41 ;
 Instr 630 @ 0x2760 (10080) - SEL R2, R43, 0xffffffff, P5 ;
 Instr 631 @ 0x2770 (10096) - SEL R48, R48, 0xffffffff, P6 ;
 Instr 632 @ 0x2780 (10112) - SEL R43, R43, 0xffffffff, P4 ;
 Instr 633 @ 0x2790 (10128) - LOP3.LUT R42, RZ, R42, RZ, 0x33, !PT ;
 Instr 634 @ 0x27a0 (10144) - LOP3.LUT R43, R43, R97, R48, 0x80, !PT ;
 Instr 635 @ 0x27b0 (10160) - LOP3.LUT R44, R44, R101, R45, 0x80, !PT ;
 Instr 636 @ 0x27c0 (10176) - IMAD.IADD R45, R39, 0x1, R41.reuse ;
 Instr 637 @ 0x27d0 (10192) - ISETP.GE.U32.AND P4, PT, R3, c[0x0][0x1a4], PT ;
 Instr 638 @ 0x27e0 (10208) - IMAD.IADD R3, R38, 0x1, R41.reuse ;
 Instr 639 @ 0x27f0 (10224) - SEL R97, R42, 0xffffffff, P0 ;
 Instr 640 @ 0x2800 (10240) - IMAD.IADD R41, R37, 0x1, R41 ;
 Instr 641 @ 0x2810 (10256) - LOP3.LUT R0, RZ, R0, RZ, 0x33, !PT ;
 Instr 642 @ 0x2820 (10272) - ISETP.NE.AND P0, PT, R49, RZ, PT ;
 Instr 643 @ 0x2830 (10288) - LOP3.LUT R46, R46, R103, R47, 0x80, !PT ;
 Instr 644 @ 0x2840 (10304) - SEL R103, R0, 0xffffffff, P4 ;
 Instr 645 @ 0x2850 (10320) - SEL R47, R42, 0xffffffff, P3 ;
 Instr 646 @ 0x2860 (10336) - ISETP.GE.U32.AND P5, PT, R45, c[0x0][0x1a4], PT ;
 Instr 647 @ 0x2870 (10352) - ISETP.GE.U32.AND P4, PT, R3, c[0x0][0x1a4], PT ;
 Instr 648 @ 0x2880 (10368) - ISETP.GE.U32.AND P3, PT, R41, c[0x0][0x1a4], PT ;
 Instr 649 @ 0x2890 (10384) - LOP3.LUT R2, R2, R99, R54, 0x80, !PT ;
 Instr 650 @ 0x28a0 (10400) - SEL R101, R0.reuse, 0xffffffff, P5 ;
 Instr 651 @ 0x28b0 (10416) - SEL R99, R0, 0xffffffff, P4 ;
 Instr 652 @ 0x28c0 (10432) - SEL R41, R42.reuse, 0xffffffff, P2 ;
 Instr 653 @ 0x28d0 (10448) - SEL R3, R42, 0xffffffff, P1 ;
 Instr 654 @ 0x28e0 (10464) - SEL R0, R0, 0xffffffff, P3 ;
 Instr 655 @ 0x28f0 (10480) - LOP3.LUT R103, R103, R46, R47, 0x80, !PT ;
 Instr 656 @ 0x2900 (10496) - LOP3.LUT R101, R101, R44, R41, 0x80, !PT ;
 Instr 657 @ 0x2910 (10512) - LOP3.LUT R99, R99, R2, R3, 0x80, !PT ;
 Instr 658 @ 0x2920 (10528) - LOP3.LUT R97, R0, R43, R97, 0x80, !PT ;
 Instr 659 @ 0x2930 (10544) - IADD3 R50, R50, 0x4, RZ ;
 Instr 660 @ 0x2940 (10560) - @P0 BRA 0x2490 ;
Basic block id 26 - num instructions 2
 Instr 661 @ 0x2950 (10576) - ISETP.NE.AND P0, PT, R53, RZ, PT ;
 Instr 662 @ 0x2960 (10592) - @!P0 BRA 0x2b80 ;
Basic block id 27 - num instructions 10
 Instr 663 @ 0x2970 (10608) - IMAD R3, R50, c[0x0][0x288], RZ ;
 Instr 664 @ 0x2980 (10624) - IADD3 R53, -R53, RZ, RZ ;
 Instr 665 @ 0x2990 (10640) - IMAD R58, R58, c[0x0][0x27c], R3.reuse ;
 Instr 666 @ 0x29a0 (10656) - IMAD R61, R61, c[0x0][0x27c], R3.reuse ;
 Instr 667 @ 0x29b0 (10672) - IMAD R66, R66, c[0x0][0x27c], R3.reuse ;
 Instr 668 @ 0x29c0 (10688) - IADD3 R58, R58, -c[0x0][0x26c], RZ ;
 Instr 669 @ 0x29d0 (10704) - IMAD R3, R70, c[0x0][0x27c], R3 ;
 Instr 670 @ 0x29e0 (10720) - IADD3 R61, R61, -c[0x0][0x26c], RZ ;
 Instr 671 @ 0x29f0 (10736) - IADD3 R66, R66, -c[0x0][0x26c], RZ ;
 Instr 672 @ 0x2a00 (10752) - IADD3 R3, R3, -c[0x0][0x26c], RZ ;
Basic block id 28 - num instructions 23
 Instr 673 @ 0x2a10 (10768) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x628] ;
 Instr 674 @ 0x2a20 (10784) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x1a4], PT ;
 Instr 675 @ 0x2a30 (10800) - ISETP.GE.U32.AND P2, PT, R66, c[0x0][0x1a4], PT ;
 Instr 676 @ 0x2a40 (10816) - SHF.L.U32 R0, R37, R50, RZ ;
 Instr 677 @ 0x2a50 (10832) - ISETP.GE.U32.AND P1, PT, R61, c[0x0][0x1a4], PT ;
 Instr 678 @ 0x2a60 (10848) - LOP3.LUT R0, RZ, R0, RZ, 0x33, !PT ;
 Instr 679 @ 0x2a70 (10864) - IADD3 R53, R53, 0x1, RZ ;
 Instr 680 @ 0x2a80 (10880) - SEL R2, R0, 0xffffffff, P0 ;
 Instr 681 @ 0x2a90 (10896) - ISETP.GE.U32.AND P0, PT, R58, c[0x0][0x1a4], PT ;
 Instr 682 @ 0x2aa0 (10912) - LOP3.LUT R103, R103, R2, RZ, 0xc0, !PT ;
 Instr 683 @ 0x2ab0 (10928) - SEL R38, R0.reuse, 0xffffffff, P2 ;
 Instr 684 @ 0x2ac0 (10944) - SEL R2, R0.reuse, 0xffffffff, P1 ;
 Instr 685 @ 0x2ad0 (10960) - SEL R0, R0, 0xffffffff, P0 ;
 Instr 686 @ 0x2ae0 (10976) - ISETP.NE.AND P0, PT, R53, RZ, PT ;
 Instr 687 @ 0x2af0 (10992) - LOP3.LUT R101, R101, R38, RZ, 0xc0, !PT ;
 Instr 688 @ 0x2b00 (11008) - LOP3.LUT R99, R99, R2, RZ, 0xc0, !PT ;
 Instr 689 @ 0x2b10 (11024) - LOP3.LUT R97, R97, R0, RZ, 0xc0, !PT ;
 Instr 690 @ 0x2b20 (11040) - IADD3 R58, R58, c[0x0][0x288], RZ ;
 Instr 691 @ 0x2b30 (11056) - IADD3 R61, R61, c[0x0][0x288], RZ ;
 Instr 692 @ 0x2b40 (11072) - IADD3 R66, R66, c[0x0][0x288], RZ ;
 Instr 693 @ 0x2b50 (11088) - IADD3 R3, R3, c[0x0][0x288], RZ ;
 Instr 694 @ 0x2b60 (11104) - IADD3 R50, R50, 0x1, RZ ;
 Instr 695 @ 0x2b70 (11120) - @P0 BRA 0x2a10 ;
Basic block id 29 - num instructions 50
 Instr 696 @ 0x2b80 (11136) - ULDC.U8 UR4, c[0x0][0x28c] ;
 Instr 697 @ 0x2b90 (11152) - LEA.HI.SX32 R36, R36, UR13, 0x1d ;
 Instr 698 @ 0x2ba0 (11168) - UISETP.NE.AND UP0, UPT, UR4, URZ, UPT ;
 Instr 699 @ 0x2bb0 (11184) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x3d4] ;
 Instr 700 @ 0x2bc0 (11200) - ULDC UR16, c[0x0][0x618] ;
 Instr 701 @ 0x2bd0 (11216) - ISETP.LE.AND P5, PT, RZ, c[0x0][0x630], PT ;
 Instr 702 @ 0x2be0 (11232) - ULDC.64 UR4, c[0x0][0x1b8] ;
 Instr 703 @ 0x2bf0 (11248) - ISETP.GE.AND P3, PT, R112, c[0x0][0x1a8], PT ;
 Instr 704 @ 0x2c00 (11264) - ULDC.64 UR6, c[0x0][0x3b0] ;
 Instr 705 @ 0x2c10 (11280) - IMAD.SHL.U32 R39, R72, 0x8, RZ ;
 Instr 706 @ 0x2c20 (11296) - ULDC UR8, c[0x0][0x1c0] ;
 Instr 707 @ 0x2c30 (11312) - IMAD.U32 R96, RZ, RZ, UR9 ;
 Instr 708 @ 0x2c40 (11328) - UIADD3 UR16, UR16, -0x1, URZ ;
 Instr 709 @ 0x2c50 (11344) - IADD3 R2, R36, 0x10, RZ ;
 Instr 710 @ 0x2c60 (11360) - @!UP0 ULOP3.LUT UR11, URZ, UR9, URZ, 0x33, !UPT ;
 Instr 711 @ 0x2c70 (11376) - IMAD R96, R96, c[0x0][0x3ac], R39 ;
 Instr 712 @ 0x2c80 (11392) - @UP0 ULDC UR10, c[0x0][0x3b4] ;
 Instr 713 @ 0x2c90 (11408) - @!UP0 UIADD3 UR5, UR11, UR5, URZ ;
 Instr 714 @ 0x2ca0 (11424) - @UP0 UIADD3 UR10, UR10, UR6, URZ ;
 Instr 715 @ 0x2cb0 (11440) - IADD3 R96, R96, c[0x0][0x638], RZ ;
 Instr 716 @ 0x2cc0 (11456) - @!UP0 UIADD3 UR8, UR11, UR8, URZ ;
 Instr 717 @ 0x2cd0 (11472) - @!UP0 UIMAD UR6, UR5, UR6, URZ ;
 Instr 718 @ 0x2ce0 (11488) - USEL UR5, UR16, URZ, !UP0 ;
 Instr 719 @ 0x2cf0 (11504) - @UP0 UIMAD UR10, UR10, UR9, URZ ;
 Instr 720 @ 0x2d00 (11520) - @!UP0 UIMAD UR10, UR8, UR7, UR6 ;
 Instr 721 @ 0x2d10 (11536) - UIMAD UR15, UR15, UR4, URZ ;
 Instr 722 @ 0x2d20 (11552) - UIADD3 UR10, UR5, UR10, URZ ;
 Instr 723 @ 0x2d30 (11568) - UMOV UR14, URZ ;
 Instr 724 @ 0x2d40 (11584) - ULDC.U8 UR5, c[0x0][0x258] ;
 Instr 725 @ 0x2d50 (11600) - ISETP.LT.AND P1, PT, R2, UR15, !P3 ;
 Instr 726 @ 0x2d60 (11616) - IMAD.U32 R3, RZ, RZ, UR10 ;
 Instr 727 @ 0x2d70 (11632) - ISETP.NE.AND P0, PT, RZ, UR5, PT ;
 Instr 728 @ 0x2d80 (11648) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 729 @ 0x2d90 (11664) - IMAD R37, R36, c[0x0][0x3d0], R3.reuse ;
 Instr 730 @ 0x2da0 (11680) - SEL R0, R0, 0x1, P0 ;
 Instr 731 @ 0x2db0 (11696) - IMAD R3, R36, c[0x0][0x3d4], R3 ;
 Instr 732 @ 0x2dc0 (11712) - ULDC.64 UR6, c[0x0][0x160] ;
 Instr 733 @ 0x2dd0 (11728) - @!P0 IMAD R37, R3, c[0x0][0x1a8], RZ ;
 Instr 734 @ 0x2de0 (11744) - ISETP.LT.AND P0, PT, R36, UR15, !P3 ;
 Instr 735 @ 0x2df0 (11760) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x3d0] ;
 Instr 736 @ 0x2e00 (11776) - IMAD R112, R112, R0, R37 ;
 Instr 737 @ 0x2e10 (11792) - IADD3 R0, R36.reuse, 0x20, RZ ;
 Instr 738 @ 0x2e20 (11808) - IADD3 R36, R36, 0x30, RZ ;
 Instr 739 @ 0x2e30 (11824) - IMAD R110, R3.reuse, 0x10, R112 ;
 Instr 740 @ 0x2e40 (11840) - ISETP.LT.AND P2, PT, R0, UR15, !P3 ;
 Instr 741 @ 0x2e50 (11856) - ISETP.LT.AND P3, PT, R36, UR15, !P3 ;
 Instr 742 @ 0x2e60 (11872) - IMAD R108, R3, 0x10, R110 ;
 Instr 743 @ 0x2e70 (11888) - P2R R89, PR, RZ, 0xf ;
 Instr 744 @ 0x2e80 (11904) - IMAD R106, R3, 0x10, R108 ;
 Instr 745 @ 0x2e90 (11920) - @!P5 BRA 0x3360 ;
Basic block id 30 - num instructions 76
 Instr 746 @ 0x2ea0 (11936) - UMOV UR5, 0x2 ;
 Instr 747 @ 0x2eb0 (11952) - R2P PR, R94, 0xf ;
 Instr 748 @ 0x2ec0 (11968) - IMAD.U32 R37, RZ, RZ, UR5 ;
 Instr 749 @ 0x2ed0 (11984) - MOV R3, UR5 ;
 Instr 750 @ 0x2ee0 (12000) - IMAD.U32 R41, RZ, RZ, UR5 ;
 Instr 751 @ 0x2ef0 (12016) - CS2R R60, SRZ ;
 Instr 752 @ 0x2f00 (12032) - IMAD.U32 R39, RZ, RZ, UR5 ;
 Instr 753 @ 0x2f10 (12048) - CS2R R62, SRZ ;
 Instr 754 @ 0x2f20 (12064) - IMAD.WIDE R42, R116, R37, c[0x0][0x160] ;
 Instr 755 @ 0x2f30 (12080) - CS2R R68, SRZ ;
 Instr 756 @ 0x2f40 (12096) - CS2R R70, SRZ ;
 Instr 757 @ 0x2f50 (12112) - CS2R R72, SRZ ;
 Instr 758 @ 0x2f60 (12128) - CS2R R74, SRZ ;
 Instr 759 @ 0x2f70 (12144) - CS2R R64, SRZ ;
 Instr 760 @ 0x2f80 (12160) - CS2R R66, SRZ ;
 Instr 761 @ 0x2f90 (12176) - IMAD.WIDE R40, R120, R41, c[0x0][0x160] ;
 Instr 762 @ 0x2fa0 (12192) - @P2 LDG.E.128.SYS R60, [R42] ;
 Instr 763 @ 0x2fb0 (12208) - CS2R R44, SRZ ;
 Instr 764 @ 0x2fc0 (12224) - CS2R R46, SRZ ;
 Instr 765 @ 0x2fd0 (12240) - IMAD.WIDE R38, R118, R39, c[0x0][0x160] ;
 Instr 766 @ 0x2fe0 (12256) - CS2R R56, SRZ ;
 Instr 767 @ 0x2ff0 (12272) - CS2R R58, SRZ ;
 Instr 768 @ 0x3000 (12288) - ULDC UR4, c[0x0][0x618] ;
 Instr 769 @ 0x3010 (12304) - IMAD.WIDE R2, R114, R3, c[0x0][0x160] ;
 Instr 770 @ 0x3020 (12320) - @P0 LDG.E.128.SYS R68, [R40] ;
 Instr 771 @ 0x3030 (12336) - MOV R43, UR5 ;
 Instr 772 @ 0x3040 (12352) - ULDC.64 UR8, c[0x0][0x160] ;
 Instr 773 @ 0x3050 (12368) - IMAD.U32 R77, RZ, RZ, UR5 ;
 Instr 774 @ 0x3060 (12384) - @P1 LDG.E.128.SYS R72, [R38] ;
 Instr 775 @ 0x3070 (12400) - IMAD.U32 R49, RZ, RZ, UR5 ;
 Instr 776 @ 0x3080 (12416) - MOV R0, c[0x0][0x630] ;
 Instr 777 @ 0x3090 (12432) - ULDC.64 UR6, c[0x0][0x408] ;
 Instr 778 @ 0x30a0 (12448) - @P3 LDG.E.128.SYS R64, [R2] ;
 Instr 779 @ 0x30b0 (12464) - R2P PR, R89, 0xf ;
 Instr 780 @ 0x30c0 (12480) - IMAD.WIDE R78, R108, R43, c[0x0][0x168] ;
 Instr 781 @ 0x30d0 (12496) - CS2R R36, SRZ ;
 Instr 782 @ 0x30e0 (12512) - CS2R R40, SRZ ;
 Instr 783 @ 0x30f0 (12528) - CS2R R38, SRZ ;
 Instr 784 @ 0x3100 (12544) - ULDC.64 UR10, c[0x0][0x168] ;
 Instr 785 @ 0x3110 (12560) - IMAD.U32 R3, RZ, RZ, UR5 ;
 Instr 786 @ 0x3120 (12576) - CS2R R42, SRZ ;
 Instr 787 @ 0x3130 (12592) - IMAD.WIDE R76, R112, R77, c[0x0][0x168] ;
 Instr 788 @ 0x3140 (12608) - @P2 LDG.E.128.SYS R36, [R78] ;
 Instr 789 @ 0x3150 (12624) - IMAD.WIDE R48, R110, R49, c[0x0][0x168] ;
 Instr 790 @ 0x3160 (12640) - IMAD.WIDE R2, R106, R3, c[0x0][0x168] ;
 Instr 791 @ 0x3170 (12656) - @P0 LDG.E.128.SYS R44, [R76] ;
 Instr 792 @ 0x3180 (12672) - @P1 LDG.E.128.SYS R56, [R48] ;
 Instr 793 @ 0x3190 (12688) - @P3 LDG.E.128.SYS R40, [R2] ;
 Instr 794 @ 0x31a0 (12704) - UISETP.LE.AND UP0, UPT, UR5, UR4, UPT ;
 Instr 795 @ 0x31b0 (12720) - UISETP.NE.AND UP1, UPT, UR12, UR4, UPT ;
 Instr 796 @ 0x31c0 (12736) - ISETP.GE.AND P6, PT, R0, c[0x0][0x634], PT ;
 Instr 797 @ 0x31d0 (12752) - ULDC.64 UR4, c[0x0][0x508] ;
 Instr 798 @ 0x31e0 (12768) - PLOP3.LUT P4, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 799 @ 0x31f0 (12784) - USEL UR14, URZ, 0x1, !UP1 ;
 Instr 800 @ 0x3200 (12800) - @UP0 USHF.L.U32 UR17, UR12, UR14, URZ ;
 Instr 801 @ 0x3210 (12816) - @P4 LOP3.LUT P0, RZ, R103, UR17, RZ, 0xc0, !PT ;
 Instr 802 @ 0x3220 (12832) - @P4 LOP3.LUT P1, RZ, R101, UR17, RZ, 0xc0, !PT ;
 Instr 803 @ 0x3230 (12848) - @P4 LOP3.LUT P2, RZ, R99, UR17, RZ, 0xc0, !PT ;
 Instr 804 @ 0x3240 (12864) - @P4 LOP3.LUT P3, RZ, R97, UR17, RZ, 0xc0, !PT ;
 Instr 805 @ 0x3250 (12880) - @P4 P2R R94, PR, RZ, 0xf ;
 Instr 806 @ 0x3260 (12896) - @!P6 ISETP.GE.AND P0, PT, R104, R105.reuse, PT ;
 Instr 807 @ 0x3270 (12912) - @!P6 ISETP.GE.AND P1, PT, R96, R105, PT ;
 Instr 808 @ 0x3280 (12928) - UIADD3 UR6, UP1, UR8, UR6, URZ ;
 Instr 809 @ 0x3290 (12944) - @!P6 SEL R94, R94, RZ, !P0 ;
 Instr 810 @ 0x32a0 (12960) - UIADD3 UR4, UP0, UR10, UR4, URZ ;
 Instr 811 @ 0x32b0 (12976) - @!P6 SEL R89, R89, RZ, !P1 ;
 Instr 812 @ 0x32c0 (12992) - UIADD3.X UR7, UR9, UR7, URZ, UP1, !UPT ;
 Instr 813 @ 0x32d0 (13008) - UIADD3.X UR5, UR11, UR5, URZ, UP0, !UPT ;
 Instr 814 @ 0x32e0 (13024) - STS.128 [R93.X16+0x1000], R60 ;
 Instr 815 @ 0x32f0 (13040) - STS.128 [R93.X16], R68 ;
 Instr 816 @ 0x3300 (13056) - STS.128 [R93.X16+0x800], R72 ;
 Instr 817 @ 0x3310 (13072) - STS.128 [R93.X16+0x1800], R64 ;
 Instr 818 @ 0x3320 (13088) - STS.128 [R93.X16+0x3000], R36 ;
 Instr 819 @ 0x3330 (13104) - STS.128 [R93.X16+0x2000], R44 ;
 Instr 820 @ 0x3340 (13120) - STS.128 [R93.X16+0x2800], R56 ;
 Instr 821 @ 0x3350 (13136) - STS.128 [R93.X16+0x3800], R40 ;
Basic block id 31 - num instructions 6
 Instr 822 @ 0x3360 (13152) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 823 @ 0x3370 (13168) - LDSM.16.M88.2 R2, [R52] ;
 Instr 824 @ 0x3380 (13184) - LDSM.16.M88.2 R40, [R52+0x1000] ;
 Instr 825 @ 0x3390 (13200) - LDSM.16.M88.2 R36, [R51+0x2000] ;
 Instr 826 @ 0x33a0 (13216) - LDSM.16.M88.2 R38, [R51+0x3000] ;
 Instr 827 @ 0x33b0 (13232) - @!P5 BRA 0x3f40 ;
Basic block id 32 - num instructions 11
 Instr 828 @ 0x33c0 (13248) - IMAD.WIDE R120, R120, 0x2, RZ ;
 Instr 829 @ 0x33d0 (13264) - MOV R95, c[0x0][0x630] ;
 Instr 830 @ 0x33e0 (13280) - LOP3.LUT R50, R52, 0x10, RZ, 0x3c, !PT ;
 Instr 831 @ 0x33f0 (13296) - IMAD.WIDE R118, R118, 0x2, RZ ;
 Instr 832 @ 0x3400 (13312) - LOP3.LUT R0, R51, 0x10, RZ, 0x3c, !PT ;
 Instr 833 @ 0x3410 (13328) - IMAD.WIDE R116, R116, 0x2, RZ ;
 Instr 834 @ 0x3420 (13344) - IMAD.WIDE R114, R114, 0x2, RZ ;
 Instr 835 @ 0x3430 (13360) - IMAD.WIDE R112, R112, 0x2, RZ ;
 Instr 836 @ 0x3440 (13376) - IMAD.WIDE R110, R110, 0x2, RZ ;
 Instr 837 @ 0x3450 (13392) - IMAD.WIDE R108, R108, 0x2, RZ ;
 Instr 838 @ 0x3460 (13408) - IMAD.WIDE R106, R106, 0x2, RZ ;
Basic block id 33 - num instructions 173
 Instr 839 @ 0x3470 (13424) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 840 @ 0x3480 (13440) - LDSM.16.M88.2 R42, [R50] ;
 Instr 841 @ 0x3490 (13456) - CS2R R80, SRZ ;
 Instr 842 @ 0x34a0 (13472) - CS2R R82, SRZ ;
 Instr 843 @ 0x34b0 (13488) - LOP3.LUT R53, R52, 0x20, RZ, 0x3c, !PT ;
 Instr 844 @ 0x34c0 (13504) - LDSM.16.M88.2 R44, [R0+0x2000] ;
 Instr 845 @ 0x34d0 (13520) - LOP3.LUT R54, R51, 0x20, RZ, 0x3c, !PT ;
 Instr 846 @ 0x34e0 (13536) - UISETP.NE.AND UP0, UPT, UR16, UR14, UPT ;
 Instr 847 @ 0x34f0 (13552) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 848 @ 0x3500 (13568) - LDSM.16.M88.2 R46, [R0+0x3000] ;
 Instr 849 @ 0x3510 (13584) - CS2R R84, SRZ ;
 Instr 850 @ 0x3520 (13600) - CS2R R86, SRZ ;
 Instr 851 @ 0x3530 (13616) - CS2R R72, SRZ ;
 Instr 852 @ 0x3540 (13632) - LDSM.16.M88.2 R48, [R50+0x1000] ;
 Instr 853 @ 0x3550 (13648) - CS2R R74, SRZ ;
 Instr 854 @ 0x3560 (13664) - ISETP.GT.AND P6, PT, R95, RZ, PT ;
 Instr 855 @ 0x3570 (13680) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 856 @ 0x3580 (13696) - CS2R R76, SRZ ;
 Instr 857 @ 0x3590 (13712) - CS2R R78, SRZ ;
 Instr 858 @ 0x35a0 (13728) - CS2R R64, SRZ ;
 Instr 859 @ 0x35b0 (13744) - CS2R R66, SRZ ;
 Instr 860 @ 0x35c0 (13760) - CS2R R68, SRZ ;
 Instr 861 @ 0x35d0 (13776) - CS2R R70, SRZ ;
 Instr 862 @ 0x35e0 (13792) - UIADD3 UR9, UR14, 0x1, URZ ;
 Instr 863 @ 0x35f0 (13808) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 864 @ 0x3600 (13824) - CS2R R56, SRZ ;
 Instr 865 @ 0x3610 (13840) - CS2R R58, SRZ ;
 Instr 866 @ 0x3620 (13856) - CS2R R60, SRZ ;
 Instr 867 @ 0x3630 (13872) - CS2R R62, SRZ ;
 Instr 868 @ 0x3640 (13888) - SEL R94, R94, RZ, P6 ;
 Instr 869 @ 0x3650 (13904) - LDSM.16.M88.2 R2, [R53] ;
 Instr 870 @ 0x3660 (13920) - USHF.L.U32 UR8, UR14, 0x3, URZ ;
 Instr 871 @ 0x3670 (13936) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 872 @ 0x3680 (13952) - USEL UR14, UR9, URZ, UP0 ;
 Instr 873 @ 0x3690 (13968) - R2P PR, R94, 0xf ;
 Instr 874 @ 0x36a0 (13984) - SEL R89, R89, RZ, P6 ;
 Instr 875 @ 0x36b0 (14000) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 876 @ 0x36c0 (14016) - ULDC.64 UR10, c[0x0][UR8+0x408] ;
 Instr 877 @ 0x36d0 (14032) - ULDC.64 UR8, c[0x0][UR8+0x508] ;
 Instr 878 @ 0x36e0 (14048) - LDSM.16.M88.2 R36, [R54+0x2000] ;
 Instr 879 @ 0x36f0 (14064) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 880 @ 0x3700 (14080) - @P0 LDG.E.128.SYS R80, [R120.64+UR6] ;
 Instr 881 @ 0x3710 (14096) - @P1 LDG.E.128.SYS R84, [R118.64+UR6] ;
 Instr 882 @ 0x3720 (14112) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 883 @ 0x3730 (14128) - @P2 LDG.E.128.SYS R72, [R116.64+UR6] ;
 Instr 884 @ 0x3740 (14144) - LDSM.16.M88.2 R38, [R54+0x3000] ;
 Instr 885 @ 0x3750 (14160) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 886 @ 0x3760 (14176) - @P3 LDG.E.128.SYS R76, [R114.64+UR6] ;
 Instr 887 @ 0x3770 (14192) - UIADD3 UR6, UP1, UR10, UR6, URZ ;
 Instr 888 @ 0x3780 (14208) - R2P PR, R89, 0xf ;
 Instr 889 @ 0x3790 (14224) - LDSM.16.M88.2 R40, [R53+0x1000] ;
 Instr 890 @ 0x37a0 (14240) - ISETP.GT.AND P5, PT, R95, c[0x0][0x634], PT ;
 Instr 891 @ 0x37b0 (14256) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 892 @ 0x37c0 (14272) - UIADD3.X UR7, UR11, UR7, URZ, UP1, !UPT ;
 Instr 893 @ 0x37d0 (14288) - LOP3.LUT R54, R51, 0x30, RZ, 0x3c, !PT ;
 Instr 894 @ 0x37e0 (14304) - IADD3 R95, R95, -0x1, RZ ;
 Instr 895 @ 0x37f0 (14320) - LOP3.LUT R53, R52.reuse, 0x30, RZ, 0x3c, !PT ;
 Instr 896 @ 0x3800 (14336) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 897 @ 0x3810 (14352) - @P0 LDG.E.128.SYS R64, [R112.64+UR4] ;
 Instr 898 @ 0x3820 (14368) - @P1 LDG.E.128.SYS R68, [R110.64+UR4] ;
 Instr 899 @ 0x3830 (14384) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 900 @ 0x3840 (14400) - @P2 LDG.E.128.SYS R56, [R108.64+UR4] ;
 Instr 901 @ 0x3850 (14416) - @P3 LDG.E.128.SYS R60, [R106.64+UR4] ;
 Instr 902 @ 0x3860 (14432) - UIADD3 UR4, UP0, UR8, UR4, URZ ;
 Instr 903 @ 0x3870 (14448) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 904 @ 0x3880 (14464) - LDSM.16.M88.2 R42, [R53] ;
 Instr 905 @ 0x3890 (14480) - UIADD3.X UR5, UR9, UR5, URZ, UP0, !UPT ;
 Instr 906 @ 0x38a0 (14496) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 907 @ 0x38b0 (14512) - LDSM.16.M88.2 R44, [R54+0x2000] ;
 Instr 908 @ 0x38c0 (14528) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 909 @ 0x38d0 (14544) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 910 @ 0x38e0 (14560) - LDSM.16.M88.2 R46, [R54+0x3000] ;
 Instr 911 @ 0x38f0 (14576) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 912 @ 0x3900 (14592) - LDSM.16.M88.2 R48, [R53+0x1000] ;
 Instr 913 @ 0x3910 (14608) - LOP3.LUT R54, R51.reuse, 0x40, RZ, 0x3c, !PT ;
 Instr 914 @ 0x3920 (14624) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 915 @ 0x3930 (14640) - LOP3.LUT R53, R52.reuse, 0x40, RZ, 0x3c, !PT ;
 Instr 916 @ 0x3940 (14656) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 917 @ 0x3950 (14672) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 918 @ 0x3960 (14688) - LDSM.16.M88.2 R2, [R53] ;
 Instr 919 @ 0x3970 (14704) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 920 @ 0x3980 (14720) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 921 @ 0x3990 (14736) - LDSM.16.M88.2 R36, [R54+0x2000] ;
 Instr 922 @ 0x39a0 (14752) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 923 @ 0x39b0 (14768) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 924 @ 0x39c0 (14784) - LDSM.16.M88.2 R38, [R54+0x3000] ;
 Instr 925 @ 0x39d0 (14800) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 926 @ 0x39e0 (14816) - LDSM.16.M88.2 R40, [R53+0x1000] ;
 Instr 927 @ 0x39f0 (14832) - LOP3.LUT R54, R51, 0x50, RZ, 0x3c, !PT ;
 Instr 928 @ 0x3a00 (14848) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 929 @ 0x3a10 (14864) - LOP3.LUT R53, R52, 0x50, RZ, 0x3c, !PT ;
 Instr 930 @ 0x3a20 (14880) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 931 @ 0x3a30 (14896) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 932 @ 0x3a40 (14912) - LDSM.16.M88.2 R42, [R53] ;
 Instr 933 @ 0x3a50 (14928) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 934 @ 0x3a60 (14944) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 935 @ 0x3a70 (14960) - LDSM.16.M88.2 R44, [R54+0x2000] ;
 Instr 936 @ 0x3a80 (14976) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 937 @ 0x3a90 (14992) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 938 @ 0x3aa0 (15008) - LDSM.16.M88.2 R46, [R54+0x3000] ;
 Instr 939 @ 0x3ab0 (15024) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 940 @ 0x3ac0 (15040) - LDSM.16.M88.2 R48, [R53+0x1000] ;
 Instr 941 @ 0x3ad0 (15056) - LOP3.LUT R54, R51.reuse, 0x60, RZ, 0x3c, !PT ;
 Instr 942 @ 0x3ae0 (15072) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 943 @ 0x3af0 (15088) - LOP3.LUT R53, R52.reuse, 0x60, RZ, 0x3c, !PT ;
 Instr 944 @ 0x3b00 (15104) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 945 @ 0x3b10 (15120) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 946 @ 0x3b20 (15136) - LDSM.16.M88.2 R2, [R53] ;
 Instr 947 @ 0x3b30 (15152) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 948 @ 0x3b40 (15168) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 949 @ 0x3b50 (15184) - LDSM.16.M88.2 R36, [R54+0x2000] ;
 Instr 950 @ 0x3b60 (15200) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 951 @ 0x3b70 (15216) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 952 @ 0x3b80 (15232) - LDSM.16.M88.2 R38, [R54+0x3000] ;
 Instr 953 @ 0x3b90 (15248) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 954 @ 0x3ba0 (15264) - LDSM.16.M88.2 R40, [R53+0x1000] ;
 Instr 955 @ 0x3bb0 (15280) - LOP3.LUT R54, R51, 0x70, RZ, 0x3c, !PT ;
 Instr 956 @ 0x3bc0 (15296) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 957 @ 0x3bd0 (15312) - LOP3.LUT R53, R52, 0x70, RZ, 0x3c, !PT ;
 Instr 958 @ 0x3be0 (15328) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 959 @ 0x3bf0 (15344) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 960 @ 0x3c00 (15360) - LDSM.16.M88.2 R42, [R53] ;
 Instr 961 @ 0x3c10 (15376) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 962 @ 0x3c20 (15392) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 963 @ 0x3c30 (15408) - LDSM.16.M88.2 R44, [R54+0x2000] ;
 Instr 964 @ 0x3c40 (15424) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 965 @ 0x3c50 (15440) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 966 @ 0x3c60 (15456) - LDSM.16.M88.2 R46, [R54+0x3000] ;
 Instr 967 @ 0x3c70 (15472) - HMMA.1688.F32 R4, R2, R36, R4 ;
 Instr 968 @ 0x3c80 (15488) - LDSM.16.M88.2 R48, [R53+0x1000] ;
 Instr 969 @ 0x3c90 (15504) - HMMA.1688.F32 R8, R2, R37, R8 ;
 Instr 970 @ 0x3ca0 (15520) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 971 @ 0x3cb0 (15536) - HMMA.1688.F32 R12, R2, R38, R12 ;
 Instr 972 @ 0x3cc0 (15552) - HMMA.1688.F32 R16, R2, R39, R16 ;
 Instr 973 @ 0x3cd0 (15568) - HMMA.1688.F32 R20, R40, R36, R20 ;
 Instr 974 @ 0x3ce0 (15584) - STS.128 [R93.X16], R80 ;
 Instr 975 @ 0x3cf0 (15600) - STS.128 [R93.X16+0x800], R84 ;
 Instr 976 @ 0x3d00 (15616) - HMMA.1688.F32 R24, R40, R37, R24 ;
 Instr 977 @ 0x3d10 (15632) - STS.128 [R93.X16+0x1000], R72 ;
 Instr 978 @ 0x3d20 (15648) - STS.128 [R93.X16+0x1800], R76 ;
 Instr 979 @ 0x3d30 (15664) - HMMA.1688.F32 R28, R40, R38, R28 ;
 Instr 980 @ 0x3d40 (15680) - STS.128 [R93.X16+0x2000], R64 ;
 Instr 981 @ 0x3d50 (15696) - STS.128 [R93.X16+0x2800], R68 ;
 Instr 982 @ 0x3d60 (15712) - HMMA.1688.F32 R32, R40, R39, R32 ;
 Instr 983 @ 0x3d70 (15728) - STS.128 [R93.X16+0x3000], R56 ;
 Instr 984 @ 0x3d80 (15744) - STS.128 [R93.X16+0x3800], R60 ;
 Instr 985 @ 0x3d90 (15760) - HMMA.1688.F32 R4, R42, R44, R4 ;
 Instr 986 @ 0x3da0 (15776) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 987 @ 0x3db0 (15792) - HMMA.1688.F32 R8, R42, R45, R8 ;
 Instr 988 @ 0x3dc0 (15808) - IMAD.MOV.U32 R56, RZ, RZ, c[0x0][0x618] ;
 Instr 989 @ 0x3dd0 (15824) - ISETP.GE.AND P4, PT, R56, 0x2, PT ;
 Instr 990 @ 0x3de0 (15840) - HMMA.1688.F32 R12, R42, R46, R12 ;
 Instr 991 @ 0x3df0 (15856) - HMMA.1688.F32 R16, R42, R47, R16 ;
 Instr 992 @ 0x3e00 (15872) - LDSM.16.M88.2 R2, [R52] ;
 Instr 993 @ 0x3e10 (15888) - @P4 IMAD.MOV.U32 R56, RZ, RZ, 0x1 ;
 Instr 994 @ 0x3e20 (15904) - LDSM.16.M88.2 R40, [R52+0x1000] ;
 Instr 995 @ 0x3e30 (15920) - HMMA.1688.F32 R20, R48, R44, R20 ;
 Instr 996 @ 0x3e40 (15936) - LDSM.16.M88.2 R36, [R51+0x2000] ;
 Instr 997 @ 0x3e50 (15952) - @P4 SHF.L.U32 R56, R56, UR14, RZ ;
 Instr 998 @ 0x3e60 (15968) - LDSM.16.M88.2 R38, [R51+0x3000] ;
 Instr 999 @ 0x3e70 (15984) - HMMA.1688.F32 R24, R48, R45, R24 ;
 Instr 1000 @ 0x3e80 (16000) - @P4 LOP3.LUT P0, RZ, R103, R56.reuse, RZ, 0xc0, !PT ;
 Instr 1001 @ 0x3e90 (16016) - @P4 LOP3.LUT P1, RZ, R101, R56.reuse, RZ, 0xc0, !PT ;
 Instr 1002 @ 0x3ea0 (16032) - @P4 LOP3.LUT P2, RZ, R99, R56.reuse, RZ, 0xc0, !PT ;
 Instr 1003 @ 0x3eb0 (16048) - HMMA.1688.F32 R28, R48, R46, R28 ;
 Instr 1004 @ 0x3ec0 (16064) - @P4 LOP3.LUT P3, RZ, R97, R56, RZ, 0xc0, !PT ;
 Instr 1005 @ 0x3ed0 (16080) - HMMA.1688.F32 R32, R48, R47, R32 ;
 Instr 1006 @ 0x3ee0 (16096) - @P4 P2R R94, PR, RZ, 0xf ;
 Instr 1007 @ 0x3ef0 (16112) - ISETP.LT.OR P0, PT, R96, R105.reuse, P5 ;
 Instr 1008 @ 0x3f00 (16128) - ISETP.LT.OR P5, PT, R104, R105, P5 ;
 Instr 1009 @ 0x3f10 (16144) - SEL R89, R89, RZ, P0 ;
 Instr 1010 @ 0x3f20 (16160) - SEL R94, R94, RZ, P5 ;
 Instr 1011 @ 0x3f30 (16176) - @P6 BRA 0x3470 ;
Basic block id 34 - num instructions 37
 Instr 1012 @ 0x3f40 (16192) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
 Instr 1013 @ 0x3f50 (16208) - @P1 IMAD.MOV.U32 R44, RZ, RZ, c[0x0][0x188] ;
 Instr 1014 @ 0x3f60 (16224) - @P1 IMAD.MOV.U32 R45, RZ, RZ, c[0x0][0x18c] ;
 Instr 1015 @ 0x3f70 (16240) - @P1 IMAD.MOV.U32 R42, RZ, RZ, c[0x0][0x190] ;
 Instr 1016 @ 0x3f80 (16256) - @P1 IMAD.MOV.U32 R43, RZ, RZ, c[0x0][0x194] ;
 Instr 1017 @ 0x3f90 (16272) - @P1 LDG.E.SYS R3, [R44] ;
 Instr 1018 @ 0x3fa0 (16288) - @P1 LDG.E.SYS R61, [R42] ;
 Instr 1019 @ 0x3fb0 (16304) - ULDC.U8 UR6, c[0x0][0x32c] ;
 Instr 1020 @ 0x3fc0 (16320) - MOV R38, c[0x0][0x180] ;
 Instr 1021 @ 0x3fd0 (16336) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1022 @ 0x3fe0 (16352) - ISETP.NE.AND P0, PT, RZ, UR6, PT ;
 Instr 1023 @ 0x3ff0 (16368) - S2R R37, SR_TID.X ;
 Instr 1024 @ 0x4000 (16384) - BSSY B0, 0x4260 ;
 Instr 1025 @ 0x4010 (16400) - @P0 S2R R2, SR_CTAID.Z ;
 Instr 1026 @ 0x4020 (16416) - @P0 IMAD.MOV.U32 R0, RZ, RZ, 0x2 ;
 Instr 1027 @ 0x4030 (16432) - LOP3.LUT R52, R37.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 1028 @ 0x4040 (16448) - IMAD.SHL.U32 R41, R37.reuse, 0x8, RZ ;
 Instr 1029 @ 0x4050 (16464) - LOP3.LUT R39, R37, 0x1e, RZ, 0xc0, !PT ;
 Instr 1030 @ 0x4060 (16480) - SHF.R.S32.HI R40, RZ, 0x1f, R37 ;
 Instr 1031 @ 0x4070 (16496) - LEA.HI R52, R39, R52, RZ, 0x1f ;
 Instr 1032 @ 0x4080 (16512) - IMAD.MOV.U32 R39, RZ, RZ, c[0x0][0x184] ;
 Instr 1033 @ 0x4090 (16528) - LEA.HI R40, R40, R37, RZ, 0x3 ;
 Instr 1034 @ 0x40a0 (16544) - LOP3.LUT R36, R37, 0x40, RZ, 0xc0, !PT ;
 Instr 1035 @ 0x40b0 (16560) - @P0 IMAD R43, R2, c[0x0][0x33c], RZ ;
 Instr 1036 @ 0x40c0 (16576) - LOP3.LUT R2, R40, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1037 @ 0x40d0 (16592) - LOP3.LUT R41, R41, 0x8, RZ, 0xc0, !PT ;
 Instr 1038 @ 0x40e0 (16608) - @P0 IMAD.WIDE R38, R43, R0, c[0x0][0x180] ;
 Instr 1039 @ 0x40f0 (16624) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x320], PT ;
 Instr 1040 @ 0x4100 (16640) - SHF.R.S32.HI R43, RZ, 0x3, R40 ;
 Instr 1041 @ 0x4110 (16656) - IMAD.IADD R0, R37, 0x1, -R2 ;
 Instr 1042 @ 0x4120 (16672) - LEA.HI R41, R36, R41, RZ, 0x1f ;
 Instr 1043 @ 0x4130 (16688) - IMAD R2, R43, 0x12, R0 ;
 Instr 1044 @ 0x4140 (16704) - LEA R0, R0, UR13, 0x3 ;
 Instr 1045 @ 0x4150 (16720) - IMAD R52, R52, 0x90, R41 ;
 Instr 1046 @ 0x4160 (16736) - @!P1 MOV R3, c[0x0][0x1e0] ;
 Instr 1047 @ 0x4170 (16752) - @!P1 IMAD.MOV.U32 R61, RZ, RZ, c[0x0][0x1f0] ;
 Instr 1048 @ 0x4180 (16768) - @!P0 BRA 0x4230 ;
Basic block id 35 - num instructions 4
 Instr 1049 @ 0x4190 (16784) - ISETP.GE.AND P0, PT, R0, c[0x0][0x320], PT ;
 Instr 1050 @ 0x41a0 (16800) - CS2R R56, SRZ ;
 Instr 1051 @ 0x41b0 (16816) - CS2R R58, SRZ ;
 Instr 1052 @ 0x41c0 (16832) - @P0 BRA 0x4250 ;
Basic block id 36 - num instructions 6
 Instr 1053 @ 0x41d0 (16848) - SHF.R.S32.HI R41, RZ, 0x1f, R0 ;
 Instr 1054 @ 0x41e0 (16864) - LEA.HI R41, R41, R0, RZ, 0x3 ;
 Instr 1055 @ 0x41f0 (16880) - SHF.R.S32.HI R41, RZ, 0x3, R41 ;
 Instr 1056 @ 0x4200 (16896) - IMAD.WIDE R38, R41, 0x10, R38 ;
 Instr 1057 @ 0x4210 (16912) - LDG.E.128.SYS R56, [R38] ;
 Instr 1058 @ 0x4220 (16928) - BRA 0x4250 ;
Basic block id 37 - num instructions 2
 Instr 1059 @ 0x4230 (16944) - CS2R R56, SRZ ;
 Instr 1060 @ 0x4240 (16960) - CS2R R58, SRZ ;
Basic block id 38 - num instructions 5
 Instr 1061 @ 0x4250 (16976) - BSYNC B0 ;
 Instr 1062 @ 0x4260 (16992) - IMAD.MOV.U32 R36, RZ, RZ, c[0x0][0x338] ;
 Instr 1063 @ 0x4270 (17008) - ISETP.GE.AND P0, PT, R36, 0x1, PT ;
 Instr 1064 @ 0x4280 (17024) - ISETP.EQ.OR P0, PT, RZ, UR6, !P0 ;
 Instr 1065 @ 0x4290 (17040) - @P0 BRA 0x4350 ;
Basic block id 39 - num instructions 11
 Instr 1066 @ 0x42a0 (17056) - S2R R36, SR_CTAID.Z ;
 Instr 1067 @ 0x42b0 (17072) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 1068 @ 0x42c0 (17088) - IMAD.MOV.U32 R41, RZ, RZ, 0x4 ;
 Instr 1069 @ 0x42d0 (17104) - IMAD.MOV.U32 R61, RZ, RZ, RZ ;
 Instr 1070 @ 0x42e0 (17120) - IMAD R36, R36, c[0x0][0x338], RZ ;
 Instr 1071 @ 0x42f0 (17136) - IMAD.WIDE R40, R36.reuse, R41, c[0x0][0x188] ;
 Instr 1072 @ 0x4300 (17152) - SHF.R.S32.HI R3, RZ, 0x1f, R36 ;
 Instr 1073 @ 0x4310 (17168) - @P1 LEA R38, P0, R36, c[0x0][0x190], 0x2 ;
 Instr 1074 @ 0x4320 (17184) - @P1 LEA.HI.X R39, R36, c[0x0][0x194], R3, 0x2, P0 ;
 Instr 1075 @ 0x4330 (17200) - LDG.E.SYS R3, [R40] ;
 Instr 1076 @ 0x4340 (17216) - @P1 LDG.E.SYS R61, [R38] ;
Basic block id 40 - num instructions 19
 Instr 1077 @ 0x4350 (17232) - S2R R36, SR_CTAID.Z ;
 Instr 1078 @ 0x4360 (17248) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1079 @ 0x4370 (17264) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 1080 @ 0x4380 (17280) - IMAD.MOV.U32 R38, RZ, RZ, c[0x0][0x290] ;
 Instr 1081 @ 0x4390 (17296) - ISETP.NE.AND P6, PT, RZ, UR6, PT ;
 Instr 1082 @ 0x43a0 (17312) - IMAD.MOV.U32 R54, RZ, RZ, c[0x0][0x34c] ;
 Instr 1083 @ 0x43b0 (17328) - S2R R40, SR_CTAID.Y ;
 Instr 1084 @ 0x43c0 (17344) - FSETP.NEU.OR P0, PT, R61, RZ, P0 ;
 Instr 1085 @ 0x43d0 (17360) - ULDC.64 UR4, c[0x0][0x3c8] ;
 Instr 1086 @ 0x43e0 (17376) - IADD3 R39, R38, -0x1, RZ ;
 Instr 1087 @ 0x43f0 (17392) - S2R R53, SR_CTAID.X ;
 Instr 1088 @ 0x4400 (17408) - UISETP.NE.AND UP2, UPT, UR12, UR4, UPT ;
 Instr 1089 @ 0x4410 (17424) - IMAD R54, R54, c[0x0][0x350], RZ ;
 Instr 1090 @ 0x4420 (17440) - UISETP.NE.AND UP1, UPT, UR12, UR5, UPT ;
 Instr 1091 @ 0x4430 (17456) - ULDC UR4, c[0x0][0x1b4] ;
 Instr 1092 @ 0x4440 (17472) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 1093 @ 0x4450 (17488) - ISETP.EQ.OR P6, PT, R36, R39, P6 ;
 Instr 1094 @ 0x4460 (17504) - IMAD R53, R40, c[0x0][0x34c], R53 ;
 Instr 1095 @ 0x4470 (17520) - @P0 BRA 0x6e00 ;
Basic block id 41 - num instructions 7
 Instr 1096 @ 0x4480 (17536) - ISETP.NE.AND P0, PT, R38, 0x1, PT ;
 Instr 1097 @ 0x4490 (17552) - UMOV UR9, 0x1 ;
 Instr 1098 @ 0x44a0 (17568) - IMAD.MOV.U32 R60, RZ, RZ, RZ ;
 Instr 1099 @ 0x44b0 (17584) - MOV R62, RZ ;
 Instr 1100 @ 0x44c0 (17600) - CS2R R68, SRZ ;
 Instr 1101 @ 0x44d0 (17616) - CS2R R66, SRZ ;
 Instr 1102 @ 0x44e0 (17632) - @!P0 BRA 0x4ab0 ;
Basic block id 42 - num instructions 5
 Instr 1103 @ 0x44f0 (17648) - IMAD.MOV.U32 R40, RZ, RZ, c[0x0][0x298] ;
 Instr 1104 @ 0x4500 (17664) - ISETP.NE.AND P1, PT, R38, c[0x0][0x294], PT ;
 Instr 1105 @ 0x4510 (17680) - IMAD.MOV.U32 R62, RZ, RZ, R36 ;
 Instr 1106 @ 0x4520 (17696) - ISETP.EQ.AND P0, PT, R40, 0x2, PT ;
 Instr 1107 @ 0x4530 (17712) - @!P1 BRA P0, 0x4ab0 ;
Basic block id 43 - num instructions 4
 Instr 1108 @ 0x4540 (17728) - ISETP.EQ.AND P0, PT, R40, 0x1, PT ;
 Instr 1109 @ 0x4550 (17744) - MOV R38, 0x4 ;
 Instr 1110 @ 0x4560 (17760) - IMAD.WIDE R66, R53, R38, c[0x0][0x2c0] ;
 Instr 1111 @ 0x4570 (17776) - @P6 BRA P0, 0x48f0 ;
Basic block id 44 - num instructions 35
 Instr 1112 @ 0x4580 (17792) - IABS R41, c[0x0][0x294] ;
 Instr 1113 @ 0x4590 (17808) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 1114 @ 0x45a0 (17824) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1115 @ 0x45b0 (17840) - BSSY B0, 0x4860 ;
 Instr 1116 @ 0x45c0 (17856) - I2F.RP R44, R41 ;
 Instr 1117 @ 0x45d0 (17872) - MUFU.RCP R43, R44 ;
 Instr 1118 @ 0x45e0 (17888) - IADD3 R43, R43, 0xffffffe, RZ ;
 Instr 1119 @ 0x45f0 (17904) - F2I.FTZ.U32.TRUNC.NTZ R43, R43 ;
 Instr 1120 @ 0x4600 (17920) - IMAD.MOV R39, RZ, RZ, -R43.reuse ;
 Instr 1121 @ 0x4610 (17936) - IMAD R40, R39, R41, RZ ;
 Instr 1122 @ 0x4620 (17952) - IABS R39, R36 ;
 Instr 1123 @ 0x4630 (17968) - IMAD.HI.U32 R40, R43, R40, R42 ;
 Instr 1124 @ 0x4640 (17984) - IMAD.HI.U32 R42, R40, R39, RZ ;
 Instr 1125 @ 0x4650 (18000) - IMAD.MOV R40, RZ, RZ, -R42 ;
 Instr 1126 @ 0x4660 (18016) - IMAD R40, R41.reuse, R40, R39 ;
 Instr 1127 @ 0x4670 (18032) - LOP3.LUT R39, R36, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 1128 @ 0x4680 (18048) - ISETP.GT.U32.AND P1, PT, R41, R40, PT ;
 Instr 1129 @ 0x4690 (18064) - ISETP.GE.AND P0, PT, R39, RZ, PT ;
 Instr 1130 @ 0x46a0 (18080) - @!P1 IMAD.IADD R40, R40, 0x1, -R41 ;
 Instr 1131 @ 0x46b0 (18096) - @!P1 IADD3 R42, R42, 0x1, RZ ;
 Instr 1132 @ 0x46c0 (18112) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x294], PT ;
 Instr 1133 @ 0x46d0 (18128) - ISETP.GE.U32.AND P2, PT, R40, R41, PT ;
 Instr 1134 @ 0x46e0 (18144) - @P2 IADD3 R42, R42, 0x1, RZ ;
 Instr 1135 @ 0x46f0 (18160) - IMAD.MOV.U32 R39, RZ, RZ, R42 ;
 Instr 1136 @ 0x4700 (18176) - @!P0 IMAD.MOV R39, RZ, RZ, -R39 ;
 Instr 1137 @ 0x4710 (18192) - ISETP.NE.AND P0, PT, R37, RZ, PT ;
 Instr 1138 @ 0x4720 (18208) - @!P1 LOP3.LUT R39, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 1139 @ 0x4730 (18224) - ISETP.EQ.OR P0, PT, R39.reuse, RZ, P0 ;
 Instr 1140 @ 0x4740 (18240) - IMAD.MOV R41, RZ, RZ, -R39 ;
 Instr 1141 @ 0x4750 (18256) - ISETP.NE.AND P1, PT, R39, RZ, PT ;
 Instr 1142 @ 0x4760 (18272) - IMAD R62, R41, c[0x0][0x294], R36 ;
 Instr 1143 @ 0x4770 (18288) - SEL R60, RZ, 0x1, !P1 ;
 Instr 1144 @ 0x4780 (18304) - IMAD R69, R54, R62, R53 ;
 Instr 1145 @ 0x4790 (18320) - IMAD.WIDE R68, R69, R38, c[0x0][0x2b8] ;
 Instr 1146 @ 0x47a0 (18336) - @P0 BRA 0x4850 ;
Basic block id 45 - num instructions 4
 Instr 1147 @ 0x47b0 (18352) - LDG.E.STRONG.GPU R36, [R68] ;
 Instr 1148 @ 0x47c0 (18368) - ISETP.NE.AND P0, PT, R36, R39, PT ;
 Instr 1149 @ 0x47d0 (18384) - CCTL.IVALL ;
 Instr 1150 @ 0x47e0 (18400) - @!P0 BRA 0x4850 ;
Basic block id 46 - num instructions 5
 Instr 1151 @ 0x47f0 (18416) - VOTE.ANY R36, PT, PT ;
 Instr 1152 @ 0x4800 (18432) - YIELD ;
 Instr 1153 @ 0x4810 (18448) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1154 @ 0x4820 (18464) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 1155 @ 0x4830 (18480) - @!P0 BRA.U 0x47b0 ;
Basic block id 47 - num instructions 1
 Instr 1156 @ 0x4840 (18496) - BRA 0x47f0 ;
Basic block id 48 - num instructions 2
 Instr 1157 @ 0x4850 (18512) - BSYNC B0 ;
 Instr 1158 @ 0x4860 (18528) - BRA.CONV 0x48a0 ;
Basic block id 49 - num instructions 3
 Instr 1159 @ 0x4870 (18544) - MOV R37, 0xffffffff ;
 Instr 1160 @ 0x4880 (18560) - MOV R36, 0x48a0 ;
 Instr 1161 @ 0x4890 (18576) - CALL.REL.NOINC 0x9bf0 ;
Basic block id 50 - num instructions 5
 Instr 1162 @ 0x48a0 (18592) - NOP ;
 Instr 1163 @ 0x48b0 (18608) - WARPSYNC 0xffffffff ;
 Instr 1164 @ 0x48c0 (18624) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1165 @ 0x48d0 (18640) - UMOV UR9, URZ ;
 Instr 1166 @ 0x48e0 (18656) - BRA 0x4ab0 ;
Basic block id 51 - num instructions 8
 Instr 1167 @ 0x48f0 (18672) - ISETP.NE.AND P0, PT, R37, RZ, PT ;
 Instr 1168 @ 0x4900 (18688) - IMAD.MOV.U32 R60, RZ, RZ, c[0x0][0x294] ;
 Instr 1169 @ 0x4910 (18704) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1170 @ 0x4920 (18720) - BSSY B0, 0x4a20 ;
 Instr 1171 @ 0x4930 (18736) - ISETP.EQ.OR P0, PT, R39, RZ, P0 ;
 Instr 1172 @ 0x4940 (18752) - IADD3 R60, R60, -0x1, RZ ;
 Instr 1173 @ 0x4950 (18768) - @P1 IMAD.MOV R60, RZ, RZ, c[0x0][0x294] ;
 Instr 1174 @ 0x4960 (18784) - @P0 BRA 0x4a10 ;
Basic block id 52 - num instructions 4
 Instr 1175 @ 0x4970 (18800) - LDG.E.STRONG.GPU R36, [R66] ;
 Instr 1176 @ 0x4980 (18816) - ISETP.NE.AND P0, PT, R36, R39, PT ;
 Instr 1177 @ 0x4990 (18832) - CCTL.IVALL ;
 Instr 1178 @ 0x49a0 (18848) - @!P0 BRA 0x4a10 ;
Basic block id 53 - num instructions 5
 Instr 1179 @ 0x49b0 (18864) - VOTE.ANY R36, PT, PT ;
 Instr 1180 @ 0x49c0 (18880) - YIELD ;
 Instr 1181 @ 0x49d0 (18896) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1182 @ 0x49e0 (18912) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 1183 @ 0x49f0 (18928) - @!P0 BRA.U 0x4970 ;
Basic block id 54 - num instructions 1
 Instr 1184 @ 0x4a00 (18944) - BRA 0x49b0 ;
Basic block id 55 - num instructions 2
 Instr 1185 @ 0x4a10 (18960) - BSYNC B0 ;
 Instr 1186 @ 0x4a20 (18976) - BRA.CONV 0x4a60 ;
Basic block id 56 - num instructions 3
 Instr 1187 @ 0x4a30 (18992) - MOV R37, 0xffffffff ;
 Instr 1188 @ 0x4a40 (19008) - MOV R36, 0x4a60 ;
 Instr 1189 @ 0x4a50 (19024) - CALL.REL.NOINC 0x9bf0 ;
Basic block id 57 - num instructions 5
 Instr 1190 @ 0x4a60 (19040) - NOP ;
 Instr 1191 @ 0x4a70 (19056) - WARPSYNC 0xffffffff ;
 Instr 1192 @ 0x4a80 (19072) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1193 @ 0x4a90 (19088) - MOV R62, RZ ;
 Instr 1194 @ 0x4aa0 (19104) - UMOV UR9, URZ ;
Basic block id 58 - num instructions 11
 Instr 1195 @ 0x4ab0 (19120) - MOV R36, c[0x0][0x290] ;
 Instr 1196 @ 0x4ac0 (19136) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1197 @ 0x4ad0 (19152) - SHF.R.S32.HI R65, RZ, 0x1f, R62 ;
 Instr 1198 @ 0x4ae0 (19168) - ISETP.GE.AND P4, PT, R36, 0x2, PT ;
 Instr 1199 @ 0x4af0 (19184) - MOV R37, c[0x0][0x298] ;
 Instr 1200 @ 0x4b00 (19200) - IMAD R65, R65, c[0x0][0x2a0], RZ ;
 Instr 1201 @ 0x4b10 (19216) - ISETP.EQ.AND P0, PT, R37, 0x1, P6 ;
 Instr 1202 @ 0x4b20 (19232) - IMAD R65, R62.reuse, c[0x0][0x2a4], R65 ;
 Instr 1203 @ 0x4b30 (19248) - IMAD.WIDE.U32 R62, R62, c[0x0][0x2a0], RZ ;
 Instr 1204 @ 0x4b40 (19264) - IADD3 R65, R63, R65, RZ ;
 Instr 1205 @ 0x4b50 (19280) - @!P4 BRA 0x5080 ;
Basic block id 59 - num instructions 6
 Instr 1206 @ 0x4b60 (19296) - S2R R78, SR_TID.X ;
 Instr 1207 @ 0x4b70 (19312) - ISETP.GE.AND P1, PT, R60, 0x1, PT ;
 Instr 1208 @ 0x4b80 (19328) - IMAD.SHL.U32 R79, R54, 0x80, RZ ;
 Instr 1209 @ 0x4b90 (19344) - SHF.R.S32.HI R77, RZ, 0x1f, R79 ;
 Instr 1210 @ 0x4ba0 (19360) - IMAD R78, R53, 0x80, R78 ;
 Instr 1211 @ 0x4bb0 (19376) - @!P1 BRA 0x4f60 ;
Basic block id 60 - num instructions 19
 Instr 1212 @ 0x4bc0 (19392) - IMAD.SHL.U32 R37, R78, 0x10, RZ ;
 Instr 1213 @ 0x4bd0 (19408) - LEA R70, P2, R79.reuse, R62.reuse, 0x4 ;
 Instr 1214 @ 0x4be0 (19424) - IMAD.MOV.U32 R64, RZ, RZ, R62 ;
 Instr 1215 @ 0x4bf0 (19440) - LEA R72, P1, R79, R62, 0x5 ;
 Instr 1216 @ 0x4c00 (19456) - IMAD R36, R77, 0x30, RZ ;
 Instr 1217 @ 0x4c10 (19472) - IADD3 R70, P5, P3, R70, c[0x0][0x2a8], R37 ;
 Instr 1218 @ 0x4c20 (19488) - IMAD.WIDE.U32 R42, R79.reuse, 0x30, R64 ;
 Instr 1219 @ 0x4c30 (19504) - LEA.HI.X R40, R79, R65.reuse, R77, 0x4, P2 ;
 Instr 1220 @ 0x4c40 (19520) - UMOV UR4, URZ ;
 Instr 1221 @ 0x4c50 (19536) - SHF.R.S32.HI R75, RZ, 0x1f, R37 ;
 Instr 1222 @ 0x4c60 (19552) - IMAD.IADD R36, R43, 0x1, R36 ;
 Instr 1223 @ 0x4c70 (19568) - LEA.HI.X R38, R79, R65, R77, 0x5, P1 ;
 Instr 1224 @ 0x4c80 (19584) - IADD3 R72, P2, P1, R72, c[0x0][0x2a8], R37 ;
 Instr 1225 @ 0x4c90 (19600) - IADD3.X R61, R40, c[0x0][0x2ac], R75, P5, P3 ;
 Instr 1226 @ 0x4ca0 (19616) - IADD3 R74, P5, P3, R42, c[0x0][0x2a8], R37 ;
 Instr 1227 @ 0x4cb0 (19632) - IADD3.X R71, R38, c[0x0][0x2ac], R75, P2, P1 ;
 Instr 1228 @ 0x4cc0 (19648) - IADD3 R76, P2, P1, R62, c[0x0][0x2a8], R37 ;
 Instr 1229 @ 0x4cd0 (19664) - IADD3.X R73, R36, c[0x0][0x2ac], R75, P5, P3 ;
 Instr 1230 @ 0x4ce0 (19680) - IADD3.X R75, R65, c[0x0][0x2ac], R75, P2, P1 ;
Basic block id 61 - num instructions 39
 Instr 1231 @ 0x4cf0 (19696) - MOV R48, R76 ;
 Instr 1232 @ 0x4d00 (19712) - MOV R49, R75 ;
 Instr 1233 @ 0x4d10 (19728) - MOV R44, R70 ;
 Instr 1234 @ 0x4d20 (19744) - MOV R45, R61 ;
 Instr 1235 @ 0x4d30 (19760) - MOV R40, R72 ;
 Instr 1236 @ 0x4d40 (19776) - MOV R41, R71 ;
 Instr 1237 @ 0x4d50 (19792) - LDG.E.128.STRONG.GPU R48, [R48] ;
 Instr 1238 @ 0x4d60 (19808) - MOV R36, R74 ;
 Instr 1239 @ 0x4d70 (19824) - MOV R37, R73 ;
 Instr 1240 @ 0x4d80 (19840) - LDG.E.128.STRONG.GPU R44, [R44] ;
 Instr 1241 @ 0x4d90 (19856) - LDG.E.128.STRONG.GPU R40, [R40] ;
 Instr 1242 @ 0x4da0 (19872) - LDG.E.128.STRONG.GPU R36, [R36] ;
 Instr 1243 @ 0x4db0 (19888) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 1244 @ 0x4dc0 (19904) - IADD3 R76, P1, R76, c[0x0][0x2a0], RZ ;
 Instr 1245 @ 0x4dd0 (19920) - IADD3 R70, P3, R70, c[0x0][0x2a0], RZ ;
 Instr 1246 @ 0x4de0 (19936) - IADD3.X R75, R75, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1247 @ 0x4df0 (19952) - ISETP.LE.AND P5, PT, R60, UR4, PT ;
 Instr 1248 @ 0x4e00 (19968) - IADD3 R72, P2, R72, c[0x0][0x2a0], RZ ;
 Instr 1249 @ 0x4e10 (19984) - IADD3 R74, P1, R74, c[0x0][0x2a0], RZ ;
 Instr 1250 @ 0x4e20 (20000) - IADD3.X R61, R61, c[0x0][0x2a4], RZ, P3, !PT ;
 Instr 1251 @ 0x4e30 (20016) - IADD3.X R71, R71, c[0x0][0x2a4], RZ, P2, !PT ;
 Instr 1252 @ 0x4e40 (20032) - IADD3.X R73, R73, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1253 @ 0x4e50 (20048) - FADD R4, R48, R4 ;
 Instr 1254 @ 0x4e60 (20064) - FADD R5, R49, R5 ;
 Instr 1255 @ 0x4e70 (20080) - FADD R6, R50, R6 ;
 Instr 1256 @ 0x4e80 (20096) - FADD R7, R51, R7 ;
 Instr 1257 @ 0x4e90 (20112) - FADD R8, R44, R8 ;
 Instr 1258 @ 0x4ea0 (20128) - FADD R9, R45, R9 ;
 Instr 1259 @ 0x4eb0 (20144) - FADD R10, R46, R10 ;
 Instr 1260 @ 0x4ec0 (20160) - FADD R11, R47, R11 ;
 Instr 1261 @ 0x4ed0 (20176) - FADD R12, R40, R12 ;
 Instr 1262 @ 0x4ee0 (20192) - FADD R13, R41, R13 ;
 Instr 1263 @ 0x4ef0 (20208) - FADD R14, R42, R14 ;
 Instr 1264 @ 0x4f00 (20224) - FADD R15, R43, R15 ;
 Instr 1265 @ 0x4f10 (20240) - FADD R16, R36, R16 ;
 Instr 1266 @ 0x4f20 (20256) - FADD R17, R37, R17 ;
 Instr 1267 @ 0x4f30 (20272) - FADD R18, R38, R18 ;
 Instr 1268 @ 0x4f40 (20288) - FADD R19, R39, R19 ;
 Instr 1269 @ 0x4f50 (20304) - @!P5 BRA 0x4cf0 ;
Basic block id 62 - num instructions 1
 Instr 1270 @ 0x4f60 (20320) - @P0 BRA 0x5080 ;
Basic block id 63 - num instructions 17
 Instr 1271 @ 0x4f70 (20336) - IMAD.MOV.U32 R38, RZ, RZ, R62 ;
 Instr 1272 @ 0x4f80 (20352) - SHF.L.U64.HI R77, R79, 0x4, R77 ;
 Instr 1273 @ 0x4f90 (20368) - IMAD.MOV.U32 R39, RZ, RZ, R65 ;
 Instr 1274 @ 0x4fa0 (20384) - IMAD.SHL.U32 R36, R79, 0x10, RZ ;
 Instr 1275 @ 0x4fb0 (20400) - IMAD.WIDE R38, R78, 0x10, R38 ;
 Instr 1276 @ 0x4fc0 (20416) - IADD3 R38, P2, R38, c[0x0][0x2a8], RZ ;
 Instr 1277 @ 0x4fd0 (20432) - IADD3 R42, P1, R36, R38, RZ ;
 Instr 1278 @ 0x4fe0 (20448) - IADD3.X R39, R39, c[0x0][0x2ac], RZ, P2, !PT ;
 Instr 1279 @ 0x4ff0 (20464) - IADD3 R40, P2, R42, R36, RZ ;
 Instr 1280 @ 0x5000 (20480) - IADD3.X R43, R77, R39, RZ, P1, !PT ;
 Instr 1281 @ 0x5010 (20496) - IADD3 R36, P1, R40, R36, RZ ;
 Instr 1282 @ 0x5020 (20512) - STG.E.128.SYS [R38], R4 ;
 Instr 1283 @ 0x5030 (20528) - IMAD.X R41, R43, 0x1, R77, P2 ;
 Instr 1284 @ 0x5040 (20544) - STG.E.128.SYS [R42], R8 ;
 Instr 1285 @ 0x5050 (20560) - IADD3.X R37, R41, R77, RZ, P1, !PT ;
 Instr 1286 @ 0x5060 (20576) - STG.E.128.SYS [R40], R12 ;
 Instr 1287 @ 0x5070 (20592) - STG.E.128.SYS [R36], R16 ;
Basic block id 64 - num instructions 1
 Instr 1288 @ 0x5080 (20608) - @!P0 BRA 0x5c20 ;
Basic block id 65 - num instructions 185
 Instr 1289 @ 0x5090 (20624) - STS.64 [R52], R4 ;
 Instr 1290 @ 0x50a0 (20640) - PLOP3.LUT P1, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 1291 @ 0x50b0 (20656) - IMAD.MOV.U32 R40, RZ, RZ, RZ ;
 Instr 1292 @ 0x50c0 (20672) - PLOP3.LUT P3, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 1293 @ 0x50d0 (20688) - STS.64 [R52+0x10], R8 ;
 Instr 1294 @ 0x50e0 (20704) - HADD2.F32 R44, R57.H0_H0, -RZ.H0_H0 ;
 Instr 1295 @ 0x50f0 (20720) - ISETP.GE.AND P2, PT, R0, UR15, PT ;
 Instr 1296 @ 0x5100 (20736) - HADD2.F32 R43, R59.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1297 @ 0x5110 (20752) - STS.64 [R52+0x900], R6 ;
 Instr 1298 @ 0x5120 (20768) - HADD2.F32 R42, R59.H1_H1, -RZ.H0_H0 ;
 Instr 1299 @ 0x5130 (20784) - STS.64 [R52+0x910], R10 ;
 Instr 1300 @ 0x5140 (20800) - @P1 IMAD.HI.U32 R41, R88, c[0x0][0x3d8], RZ ;
 Instr 1301 @ 0x5150 (20816) - STS.64 [R52+0x40], R12 ;
 Instr 1302 @ 0x5160 (20832) - @P1 IMAD.HI.U32 R4, R102, c[0x0][0x3d8], RZ ;
 Instr 1303 @ 0x5170 (20848) - @P1 SHF.R.U32.HI R41, RZ, c[0x0][0x3dc], R41 ;
 Instr 1304 @ 0x5180 (20864) - STS.64 [R52+0x50], R16 ;
 Instr 1305 @ 0x5190 (20880) - @P1 SHF.R.U32.HI R10, RZ, c[0x0][0x3dc], R4 ;
 Instr 1306 @ 0x51a0 (20896) - STS.64 [R52+0x940], R14 ;
 Instr 1307 @ 0x51b0 (20912) - @P1 IMAD.MOV R11, RZ, RZ, -R41 ;
 Instr 1308 @ 0x51c0 (20928) - CS2R R12, SRZ ;
 Instr 1309 @ 0x51d0 (20944) - STS.64 [R52+0x950], R18 ;
 Instr 1310 @ 0x51e0 (20960) - @P1 IMAD.MOV R9, RZ, RZ, -R10 ;
 Instr 1311 @ 0x51f0 (20976) - @P1 IMAD R40, R11, c[0x0][0x3c8], R88 ;
 Instr 1312 @ 0x5200 (20992) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1313 @ 0x5210 (21008) - @P1 IMAD R13, R9, c[0x0][0x3c8], R102 ;
 Instr 1314 @ 0x5220 (21024) - HADD2.F32 R16, R57.H1_H1, -RZ.H0_H0 ;
 Instr 1315 @ 0x5230 (21040) - @P3 IMAD.HI.U32 R9, R40, c[0x0][0x3e0], RZ ;
 Instr 1316 @ 0x5240 (21056) - HADD2.F32 R15, R56.H0_H0, -RZ.H0_H0 ;
 Instr 1317 @ 0x5250 (21072) - @P3 IMAD.HI.U32 R17, R13, c[0x0][0x3e0], RZ ;
 Instr 1318 @ 0x5260 (21088) - @P3 SHF.R.U32.HI R9, RZ, c[0x0][0x3e4], R9 ;
 Instr 1319 @ 0x5270 (21104) - HADD2.F32 R18, R56.H1_H1, -RZ.H0_H0 ;
 Instr 1320 @ 0x5280 (21120) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 1321 @ 0x5290 (21136) - @P3 SHF.R.U32.HI R17, RZ, c[0x0][0x3e4], R17 ;
 Instr 1322 @ 0x52a0 (21152) - @P3 IMAD.MOV R11, RZ, RZ, -R9 ;
 Instr 1323 @ 0x52b0 (21168) - @P1 IMAD.MOV.U32 R88, RZ, RZ, R41 ;
 Instr 1324 @ 0x52c0 (21184) - @P3 IMAD.MOV R8, RZ, RZ, -R17 ;
 Instr 1325 @ 0x52d0 (21200) - @P1 IMAD.MOV.U32 R102, RZ, RZ, R10 ;
 Instr 1326 @ 0x52e0 (21216) - @P3 IMAD R14, R11, c[0x0][0x3cc], R40 ;
 Instr 1327 @ 0x52f0 (21232) - @P3 IMAD R12, R8, c[0x0][0x3cc], R13 ;
 Instr 1328 @ 0x5300 (21248) - LDS.U.128 R36, [R2.X16] ;
 Instr 1329 @ 0x5310 (21264) - @P3 IMAD.MOV.U32 R40, RZ, RZ, R9 ;
 Instr 1330 @ 0x5320 (21280) - @P3 IMAD.MOV.U32 R13, RZ, RZ, R17 ;
 Instr 1331 @ 0x5330 (21296) - LDS.U.128 R4, [R2.X16+0x1200] ;
 Instr 1332 @ 0x5340 (21312) - LDS.U.128 R8, [R2.X16+0x90] ;
 Instr 1333 @ 0x5350 (21328) - FFMA R36, R36, R3.reuse, R15 ;
 Instr 1334 @ 0x5360 (21344) - FFMA R37, R37, R3, R18 ;
 Instr 1335 @ 0x5370 (21360) - FFMA R38, R38, R3.reuse, R44 ;
 Instr 1336 @ 0x5380 (21376) - FSETP.GEU.AND P1, PT, R36, c[0x0][0x210], PT ;
 Instr 1337 @ 0x5390 (21392) - FFMA R17, R39, R3.reuse, R16 ;
 Instr 1338 @ 0x53a0 (21408) - FFMA R4, R4, R3.reuse, R15 ;
 Instr 1339 @ 0x53b0 (21424) - FSEL R36, R36, c[0x0][0x210], P1 ;
 Instr 1340 @ 0x53c0 (21440) - FFMA R39, R5, R3.reuse, R18 ;
 Instr 1341 @ 0x53d0 (21456) - FSETP.GEU.AND P1, PT, R37.reuse, c[0x0][0x210], PT ;
 Instr 1342 @ 0x53e0 (21472) - FFMA R44, R6, R3, R44 ;
 Instr 1343 @ 0x53f0 (21488) - FSETP.GT.AND P5, PT, R36, c[0x0][0x220], PT ;
 Instr 1344 @ 0x5400 (21504) - FSEL R19, R37, c[0x0][0x210], P1 ;
 Instr 1345 @ 0x5410 (21520) - FSETP.GEU.AND P3, PT, R38, c[0x0][0x210], PT ;
 Instr 1346 @ 0x5420 (21536) - FSEL R36, R36, c[0x0][0x220], !P5 ;
 Instr 1347 @ 0x5430 (21552) - FSETP.GT.AND P5, PT, R19, c[0x0][0x220], PT ;
 Instr 1348 @ 0x5440 (21568) - FSEL R37, R38, c[0x0][0x210], P3 ;
 Instr 1349 @ 0x5450 (21584) - FFMA R38, R7, R3, R16 ;
 Instr 1350 @ 0x5460 (21600) - FSETP.GEU.AND P3, PT, R17, c[0x0][0x210], PT ;
 Instr 1351 @ 0x5470 (21616) - F2F.F16.F32 R15, R36 ;
 Instr 1352 @ 0x5480 (21632) - FSEL R19, R19, c[0x0][0x220], !P5 ;
 Instr 1353 @ 0x5490 (21648) - FSETP.GT.AND P5, PT, R37, c[0x0][0x220], PT ;
 Instr 1354 @ 0x54a0 (21664) - FSEL R5, R17, c[0x0][0x210], P3 ;
 Instr 1355 @ 0x54b0 (21680) - FSEL R17, R37, c[0x0][0x220], !P5 ;
 Instr 1356 @ 0x54c0 (21696) - HADD2.F32 R36, R58.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 1357 @ 0x54d0 (21712) - FSETP.GEU.AND P3, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1358 @ 0x54e0 (21728) - HADD2.F32 R37, R58.H0_H0, -RZ.H0_H0 ;
 Instr 1359 @ 0x54f0 (21744) - FSETP.GT.AND P5, PT, R5, c[0x0][0x220], PT ;
 Instr 1360 @ 0x5500 (21760) - F2F.F16.F32 R18, R19 ;
 Instr 1361 @ 0x5510 (21776) - FSEL R45, R4, c[0x0][0x210], P3 ;
 Instr 1362 @ 0x5520 (21792) - FSEL R16, R5, c[0x0][0x220], !P5 ;
 Instr 1363 @ 0x5530 (21808) - FSETP.GEU.AND P5, PT, R39, c[0x0][0x210], PT ;
 Instr 1364 @ 0x5540 (21824) - LDS.U.128 R4, [R2.X16+0x1290] ;
 Instr 1365 @ 0x5550 (21840) - FSETP.GT.AND P3, PT, R45, c[0x0][0x220], PT ;
 Instr 1366 @ 0x5560 (21856) - FFMA R41, R8, R3, R37 ;
 Instr 1367 @ 0x5570 (21872) - FSEL R39, R39, c[0x0][0x210], P5 ;
 Instr 1368 @ 0x5580 (21888) - IMAD R19, R0, c[0x0][0x254], RZ ;
 Instr 1369 @ 0x5590 (21904) - FSETP.GEU.AND P5, PT, R44, c[0x0][0x210], PT ;
 Instr 1370 @ 0x55a0 (21920) - F2F.F16.F32 R17, R17 ;
 Instr 1371 @ 0x55b0 (21936) - FSEL R45, R45, c[0x0][0x220], !P3 ;
 Instr 1372 @ 0x55c0 (21952) - IMAD R46, R102, c[0x0][0x244], R19 ;
 Instr 1373 @ 0x55d0 (21968) - FSETP.GEU.AND P3, PT, R38, c[0x0][0x210], PT ;
 Instr 1374 @ 0x55e0 (21984) - FSEL R44, R44, c[0x0][0x210], P5 ;
 Instr 1375 @ 0x55f0 (22000) - IMAD R13, R13, c[0x0][0x248], R46 ;
 Instr 1376 @ 0x5600 (22016) - FSETP.GT.AND P5, PT, R39.reuse, c[0x0][0x220], PT ;
 Instr 1377 @ 0x5610 (22032) - F2F.F16.F32 R16, R16 ;
 Instr 1378 @ 0x5620 (22048) - FSEL R38, R38, c[0x0][0x210], P3 ;
 Instr 1379 @ 0x5630 (22064) - FSETP.GT.AND P3, PT, R44, c[0x0][0x220], PT ;
 Instr 1380 @ 0x5640 (22080) - FSEL R8, R39, c[0x0][0x220], !P5 ;
 Instr 1381 @ 0x5650 (22096) - FFMA R39, R9, R3, R36 ;
 Instr 1382 @ 0x5660 (22112) - FSETP.GT.AND P5, PT, R38, c[0x0][0x220], PT ;
 Instr 1383 @ 0x5670 (22128) - F2F.F16.F32 R9, R45 ;
 Instr 1384 @ 0x5680 (22144) - FSEL R44, R44, c[0x0][0x220], !P3 ;
 Instr 1385 @ 0x5690 (22160) - FSETP.GEU.AND P3, PT, R41, c[0x0][0x210], PT ;
 Instr 1386 @ 0x56a0 (22176) - FSEL R38, R38, c[0x0][0x220], !P5 ;
 Instr 1387 @ 0x56b0 (22192) - FSETP.GEU.AND P5, PT, R39, c[0x0][0x210], PT ;
 Instr 1388 @ 0x56c0 (22208) - IMAD R45, R88, c[0x0][0x244], R19 ;
 Instr 1389 @ 0x56d0 (22224) - FSEL R41, R41, c[0x0][0x210], P3 ;
 Instr 1390 @ 0x56e0 (22240) - FFMA R19, R10, R3.reuse, R43 ;
 Instr 1391 @ 0x56f0 (22256) - FSEL R39, R39, c[0x0][0x210], P5 ;
 Instr 1392 @ 0x5700 (22272) - IMAD R45, R40, c[0x0][0x248], R45 ;
 Instr 1393 @ 0x5710 (22288) - FSETP.GT.AND P5, PT, R41, c[0x0][0x220], PT ;
 Instr 1394 @ 0x5720 (22304) - FFMA R40, R11, R3.reuse, R42 ;
 Instr 1395 @ 0x5730 (22320) - PLOP3.LUT P3, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 1396 @ 0x5740 (22336) - F2F.F16.F32 R10, R44 ;
 Instr 1397 @ 0x5750 (22352) - FSEL R41, R41, c[0x0][0x220], !P5 ;
 Instr 1398 @ 0x5760 (22368) - FFMA R4, R4, R3.reuse, R37 ;
 Instr 1399 @ 0x5770 (22384) - FSETP.GT.AND P5, PT, R39, c[0x0][0x220], PT ;
 Instr 1400 @ 0x5780 (22400) - IMAD.MOV.U32 R37, RZ, RZ, RZ ;
 Instr 1401 @ 0x5790 (22416) - ISETP.LT.AND P1, PT, R55, c[0x0][0x3c4], !P2 ;
 Instr 1402 @ 0x57a0 (22432) - FFMA R5, R5, R3.reuse, R36 ;
 Instr 1403 @ 0x57b0 (22448) - FSEL R39, R39, c[0x0][0x220], !P5 ;
 Instr 1404 @ 0x57c0 (22464) - F2F.F16.F32 R11, R38 ;
 Instr 1405 @ 0x57d0 (22480) - FSETP.GEU.AND P5, PT, R19.reuse, c[0x0][0x210], PT ;
 Instr 1406 @ 0x57e0 (22496) - FFMA R6, R6, R3, R43 ;
 Instr 1407 @ 0x57f0 (22512) - ISETP.LT.AND P2, PT, R92, c[0x0][0x3c4], !P2 ;
 Instr 1408 @ 0x5800 (22528) - @P3 IMAD.HI.U32 R47, R14, c[0x0][0x3e8], RZ ;
 Instr 1409 @ 0x5810 (22544) - FSEL R19, R19, c[0x0][0x210], P5 ;
 Instr 1410 @ 0x5820 (22560) - FSETP.GEU.AND P5, PT, R40, c[0x0][0x210], PT ;
 Instr 1411 @ 0x5830 (22576) - @P3 IMAD.HI.U32 R46, R12, c[0x0][0x3e8], RZ ;
 Instr 1412 @ 0x5840 (22592) - @P3 SHF.R.U32.HI R44, RZ, c[0x0][0x3ec], R47 ;
 Instr 1413 @ 0x5850 (22608) - F2F.F16.F32 R41, R41 ;
 Instr 1414 @ 0x5860 (22624) - FSEL R40, R40, c[0x0][0x210], P5 ;
 Instr 1415 @ 0x5870 (22640) - IMAD.MOV.U32 R38, RZ, RZ, RZ ;
 Instr 1416 @ 0x5880 (22656) - @P3 SHF.R.U32.HI R46, RZ, c[0x0][0x3ec], R46 ;
 Instr 1417 @ 0x5890 (22672) - @P3 IMAD.MOV R47, RZ, RZ, -R44 ;
 Instr 1418 @ 0x58a0 (22688) - FSETP.GT.AND P5, PT, R19, c[0x0][0x220], PT ;
 Instr 1419 @ 0x58b0 (22704) - FFMA R7, R7, R3, R42 ;
 Instr 1420 @ 0x58c0 (22720) - @P3 IMAD.MOV R49, RZ, RZ, -R46 ;
 Instr 1421 @ 0x58d0 (22736) - FSEL R19, R19, c[0x0][0x220], !P5 ;
 Instr 1422 @ 0x58e0 (22752) - @P3 IMAD R37, R47, c[0x0][0x1b4], R14 ;
 Instr 1423 @ 0x58f0 (22768) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1424 @ 0x5900 (22784) - @P3 IMAD R38, R49, c[0x0][0x1b4], R12 ;
 Instr 1425 @ 0x5910 (22800) - F2F.F16.F32 R48, R39 ;
 Instr 1426 @ 0x5920 (22816) - @P3 IMAD.MOV.U32 R14, RZ, RZ, R44 ;
 Instr 1427 @ 0x5930 (22832) - FSEL R4, R4, c[0x0][0x210], P5 ;
 Instr 1428 @ 0x5940 (22848) - @P3 IMAD.MOV.U32 R12, RZ, RZ, R46 ;
 Instr 1429 @ 0x5950 (22864) - FSETP.GT.AND P5, PT, R40, c[0x0][0x220], PT ;
 Instr 1430 @ 0x5960 (22880) - IMAD R14, R14, c[0x0][0x24c], R45 ;
 Instr 1431 @ 0x5970 (22896) - FSETP.GEU.AND P3, PT, R5, c[0x0][0x210], PT ;
 Instr 1432 @ 0x5980 (22912) - IMAD R13, R12, c[0x0][0x24c], R13 ;
 Instr 1433 @ 0x5990 (22928) - FSEL R40, R40, c[0x0][0x220], !P5 ;
 Instr 1434 @ 0x59a0 (22944) - IMAD R14, R37, c[0x0][0x250], R14 ;
 Instr 1435 @ 0x59b0 (22960) - FSETP.GT.AND P5, PT, R4, c[0x0][0x220], PT ;
 Instr 1436 @ 0x59c0 (22976) - IMAD R13, R38, c[0x0][0x250], R13 ;
 Instr 1437 @ 0x59d0 (22992) - FSEL R5, R5, c[0x0][0x210], P3 ;
 Instr 1438 @ 0x59e0 (23008) - F2F.F16.F32 R19, R19 ;
 Instr 1439 @ 0x59f0 (23024) - FSETP.GEU.AND P3, PT, R6, c[0x0][0x210], PT ;
 Instr 1440 @ 0x5a00 (23040) - FSEL R12, R4, c[0x0][0x220], !P5 ;
 Instr 1441 @ 0x5a10 (23056) - FSETP.GT.AND P5, PT, R5, c[0x0][0x220], PT ;
 Instr 1442 @ 0x5a20 (23072) - FSEL R6, R6, c[0x0][0x210], P3 ;
 Instr 1443 @ 0x5a30 (23088) - F2F.F16.F32 R40, R40 ;
 Instr 1444 @ 0x5a40 (23104) - FSETP.GEU.AND P3, PT, R7, c[0x0][0x210], PT ;
 Instr 1445 @ 0x5a50 (23120) - FSEL R37, R5, c[0x0][0x220], !P5 ;
 Instr 1446 @ 0x5a60 (23136) - SEL R4, R14, 0xffffffff, P1 ;
 Instr 1447 @ 0x5a70 (23152) - FSEL R5, R7, c[0x0][0x210], P3 ;
 Instr 1448 @ 0x5a80 (23168) - F2F.F16.F32 R8, R8 ;
 Instr 1449 @ 0x5a90 (23184) - SEL R7, R13, 0xffffffff, P2 ;
 Instr 1450 @ 0x5aa0 (23200) - ISETP.GE.AND P2, PT, R4, RZ, PT ;
 Instr 1451 @ 0x5ab0 (23216) - FSETP.GT.AND P5, PT, R6, c[0x0][0x220], PT ;
 Instr 1452 @ 0x5ac0 (23232) - FSETP.GT.AND P3, PT, R5, c[0x0][0x220], PT ;
 Instr 1453 @ 0x5ad0 (23248) - F2F.F16.F32 R12, R12 ;
 Instr 1454 @ 0x5ae0 (23264) - ISETP.GE.AND P1, PT, R7, RZ, PT ;
 Instr 1455 @ 0x5af0 (23280) - FSEL R14, R6, c[0x0][0x220], !P5 ;
 Instr 1456 @ 0x5b00 (23296) - FSEL R13, R5, c[0x0][0x220], !P3 ;
 Instr 1457 @ 0x5b10 (23312) - @P2 IMAD.MOV.U32 R5, RZ, RZ, 0x2 ;
 Instr 1458 @ 0x5b20 (23328) - F2F.F16.F32 R37, R37 ;
 Instr 1459 @ 0x5b30 (23344) - @P2 IMAD.WIDE R38, R4, R5, c[0x0][0x170] ;
 Instr 1460 @ 0x5b40 (23360) - PRMT R5, R17, 0x5410, R16 ;
 Instr 1461 @ 0x5b50 (23376) - PRMT R4, R15, 0x5410, R18 ;
 Instr 1462 @ 0x5b60 (23392) - @P1 IMAD.MOV.U32 R6, RZ, RZ, 0x2 ;
 Instr 1463 @ 0x5b70 (23408) - F2F.F16.F32 R14, R14 ;
 Instr 1464 @ 0x5b80 (23424) - @P1 IMAD.WIDE R16, R7, R6, c[0x0][0x170] ;
 Instr 1465 @ 0x5b90 (23440) - PRMT R6, R41, 0x5410, R48 ;
 Instr 1466 @ 0x5ba0 (23456) - PRMT R7, R19, 0x5410, R40 ;
 Instr 1467 @ 0x5bb0 (23472) - F2F.F16.F32 R13, R13 ;
 Instr 1468 @ 0x5bc0 (23488) - @P2 STG.E.128.SYS [R38], R4 ;
 Instr 1469 @ 0x5bd0 (23504) - PRMT R4, R9, 0x5410, R8 ;
 Instr 1470 @ 0x5be0 (23520) - PRMT R5, R10, 0x5410, R11 ;
 Instr 1471 @ 0x5bf0 (23536) - PRMT R6, R12, 0x5410, R37 ;
 Instr 1472 @ 0x5c00 (23552) - PRMT R7, R14, 0x5410, R13 ;
 Instr 1473 @ 0x5c10 (23568) - @P1 STG.E.128.SYS [R16], R4 ;
Basic block id 66 - num instructions 2
 Instr 1474 @ 0x5c20 (23584) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1475 @ 0x5c30 (23600) - @!P4 BRA 0x60c0 ;
Basic block id 67 - num instructions 6
 Instr 1476 @ 0x5c40 (23616) - S2R R4, SR_TID.X ;
 Instr 1477 @ 0x5c50 (23632) - ISETP.GE.AND P1, PT, R60, 0x1, PT ;
 Instr 1478 @ 0x5c60 (23648) - IMAD.SHL.U32 R37, R54, 0x80, RZ ;
 Instr 1479 @ 0x5c70 (23664) - SHF.R.S32.HI R36, RZ, 0x1f, R37 ;
 Instr 1480 @ 0x5c80 (23680) - IMAD R53, R53, 0x80, R4 ;
 Instr 1481 @ 0x5c90 (23696) - @!P1 BRA 0x5fa0 ;
Basic block id 68 - num instructions 22
 Instr 1482 @ 0x5ca0 (23712) - IMAD.MOV.U32 R12, RZ, RZ, R62 ;
 Instr 1483 @ 0x5cb0 (23728) - LEA R45, P2, R37, R62, 0x6 ;
 Instr 1484 @ 0x5cc0 (23744) - IMAD.MOV.U32 R13, RZ, RZ, R65 ;
 Instr 1485 @ 0x5cd0 (23760) - UMOV UR8, URZ ;
 Instr 1486 @ 0x5ce0 (23776) - IMAD.SHL.U32 R42, R53, 0x10, RZ ;
 Instr 1487 @ 0x5cf0 (23792) - LEA.HI.X R11, R37.reuse, R65, R36, 0x6, P2 ;
 Instr 1488 @ 0x5d00 (23808) - IMAD.WIDE.U32 R16, R37.reuse, 0x60, R12.reuse ;
 Instr 1489 @ 0x5d10 (23824) - ULDC.64 UR6, c[0x0][0x2a8] ;
 Instr 1490 @ 0x5d20 (23840) - IADD3 R44, P1, R42, R45, RZ ;
 Instr 1491 @ 0x5d30 (23856) - IMAD.WIDE.U32 R14, R37, 0x70, R12 ;
 Instr 1492 @ 0x5d40 (23872) - SHF.R.S32.HI R4, RZ, 0x1f, R42 ;
 Instr 1493 @ 0x5d50 (23888) - IADD3 R40, P4, R42.reuse, R16, RZ ;
 Instr 1494 @ 0x5d60 (23904) - IMAD.WIDE.U32 R12, R37, 0x50, R12 ;
 Instr 1495 @ 0x5d70 (23920) - IADD3 R38, P3, R42, R14, RZ ;
 Instr 1496 @ 0x5d80 (23936) - IMAD R9, R36, 0x60, RZ ;
 Instr 1497 @ 0x5d90 (23952) - IADD3 R42, P2, R42, R12, RZ ;
 Instr 1498 @ 0x5da0 (23968) - IMAD R7, R36.reuse, 0x70, RZ ;
 Instr 1499 @ 0x5db0 (23984) - IMAD R5, R36, 0x50, RZ ;
 Instr 1500 @ 0x5dc0 (24000) - IADD3.X R41, R4.reuse, R17, R9, P4, !PT ;
 Instr 1501 @ 0x5dd0 (24016) - IMAD.X R45, R4.reuse, 0x1, R11, P1 ;
 Instr 1502 @ 0x5de0 (24032) - IADD3.X R39, R4, R15, R7, P3, !PT ;
 Instr 1503 @ 0x5df0 (24048) - IADD3.X R43, R4, R13, R5, P2, !PT ;
Basic block id 69 - num instructions 26
 Instr 1504 @ 0x5e00 (24064) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
 Instr 1505 @ 0x5e10 (24080) - LDG.E.128.STRONG.GPU R12, [R42.64+UR6] ;
 Instr 1506 @ 0x5e20 (24096) - LDG.E.128.STRONG.GPU R8, [R40.64+UR6] ;
 Instr 1507 @ 0x5e30 (24112) - LDG.E.128.STRONG.GPU R4, [R38.64+UR6] ;
 Instr 1508 @ 0x5e40 (24128) - UIADD3 UR8, UR8, 0x1, URZ ;
 Instr 1509 @ 0x5e50 (24144) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 1510 @ 0x5e60 (24160) - UIADD3 UR6, UP3, UR6, UR4, URZ ;
 Instr 1511 @ 0x5e70 (24176) - ISETP.LE.AND P1, PT, R60, UR8, PT ;
 Instr 1512 @ 0x5e80 (24192) - UIADD3.X UR7, UR7, UR5, URZ, UP3, !UPT ;
 Instr 1513 @ 0x5e90 (24208) - FADD R20, R16, R20 ;
 Instr 1514 @ 0x5ea0 (24224) - FADD R21, R17, R21 ;
 Instr 1515 @ 0x5eb0 (24240) - FADD R22, R18, R22 ;
 Instr 1516 @ 0x5ec0 (24256) - FADD R23, R19, R23 ;
 Instr 1517 @ 0x5ed0 (24272) - FADD R24, R12, R24 ;
 Instr 1518 @ 0x5ee0 (24288) - FADD R25, R13, R25 ;
 Instr 1519 @ 0x5ef0 (24304) - FADD R26, R14, R26 ;
 Instr 1520 @ 0x5f00 (24320) - FADD R27, R15, R27 ;
 Instr 1521 @ 0x5f10 (24336) - FADD R28, R8, R28 ;
 Instr 1522 @ 0x5f20 (24352) - FADD R29, R9, R29 ;
 Instr 1523 @ 0x5f30 (24368) - FADD R30, R10, R30 ;
 Instr 1524 @ 0x5f40 (24384) - FADD R31, R11, R31 ;
 Instr 1525 @ 0x5f50 (24400) - FADD R32, R4, R32 ;
 Instr 1526 @ 0x5f60 (24416) - FADD R33, R5, R33 ;
 Instr 1527 @ 0x5f70 (24432) - FADD R34, R6, R34 ;
 Instr 1528 @ 0x5f80 (24448) - FADD R35, R7, R35 ;
 Instr 1529 @ 0x5f90 (24464) - @!P1 BRA 0x5e00 ;
Basic block id 70 - num instructions 1
 Instr 1530 @ 0x5fa0 (24480) - @P0 BRA 0x60c0 ;
Basic block id 71 - num instructions 17
 Instr 1531 @ 0x5fb0 (24496) - LEA R62, P1, R37.reuse, R62, 0x6 ;
 Instr 1532 @ 0x5fc0 (24512) - IMAD.SHL.U32 R4, R37.reuse, 0x10, RZ ;
 Instr 1533 @ 0x5fd0 (24528) - SHF.L.U64.HI R5, R37.reuse, 0x4, R36.reuse ;
 Instr 1534 @ 0x5fe0 (24544) - LEA.HI.X R63, R37, R65, R36, 0x6, P1 ;
 Instr 1535 @ 0x5ff0 (24560) - IMAD.WIDE R62, R53, 0x10, R62 ;
 Instr 1536 @ 0x6000 (24576) - IADD3 R10, P1, R62, c[0x0][0x2a8], RZ ;
 Instr 1537 @ 0x6010 (24592) - IADD3.X R11, R63, c[0x0][0x2ac], RZ, P1, !PT ;
 Instr 1538 @ 0x6020 (24608) - LEA R6, P1, R37.reuse, R10, 0x5 ;
 Instr 1539 @ 0x6030 (24624) - IADD3 R8, P2, R10, R4, RZ ;
 Instr 1540 @ 0x6040 (24640) - LEA.HI.X R7, R37, R11, R36, 0x5, P1 ;
 Instr 1541 @ 0x6050 (24656) - IADD3 R4, P1, R6, R4, RZ ;
 Instr 1542 @ 0x6060 (24672) - IMAD.X R9, R11, 0x1, R5.reuse, P2 ;
 Instr 1543 @ 0x6070 (24688) - STG.E.128.SYS [R10], R20 ;
 Instr 1544 @ 0x6080 (24704) - IMAD.X R5, R7, 0x1, R5, P1 ;
 Instr 1545 @ 0x6090 (24720) - STG.E.128.SYS [R8], R24 ;
 Instr 1546 @ 0x60a0 (24736) - STG.E.128.SYS [R6], R28 ;
 Instr 1547 @ 0x60b0 (24752) - STG.E.128.SYS [R4], R32 ;
Basic block id 72 - num instructions 1
 Instr 1548 @ 0x60c0 (24768) - @!P0 BRA 0x6c60 ;
Basic block id 73 - num instructions 185
 Instr 1549 @ 0x60d0 (24784) - STS.64 [R52], R20 ;
 Instr 1550 @ 0x60e0 (24800) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 1551 @ 0x60f0 (24816) - IMAD.MOV.U32 R19, RZ, RZ, RZ ;
 Instr 1552 @ 0x6100 (24832) - HADD2.F32 R15, R56.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1553 @ 0x6110 (24848) - STS.64 [R52+0x10], R24 ;
 Instr 1554 @ 0x6120 (24864) - IMAD.MOV.U32 R17, RZ, RZ, RZ ;
 Instr 1555 @ 0x6130 (24880) - HADD2.F32 R56, R56.H1_H1, -RZ.H0_H0 ;
 Instr 1556 @ 0x6140 (24896) - ISETP.GE.AND P1, PT, R0, UR15, PT ;
 Instr 1557 @ 0x6150 (24912) - STS.64 [R52+0x900], R22 ;
 Instr 1558 @ 0x6160 (24928) - HADD2.F32 R16, R57.H0_H0, -RZ.H0_H0 ;
 Instr 1559 @ 0x6170 (24944) - HADD2.F32 R18, R57.H1_H1, -RZ.H0_H0 ;
 Instr 1560 @ 0x6180 (24960) - STS.64 [R52+0x910], R26 ;
 Instr 1561 @ 0x6190 (24976) - @P0 IMAD.HI.U32 R20, R98, c[0x0][0x3d8], RZ ;
 Instr 1562 @ 0x61a0 (24992) - HADD2.F32 R12, R58.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1563 @ 0x61b0 (25008) - ISETP.LT.AND P2, PT, R91, c[0x0][0x3c4], !P1 ;
 Instr 1564 @ 0x61c0 (25024) - STS.64 [R52+0x40], R28 ;
 Instr 1565 @ 0x61d0 (25040) - HADD2.F32 R13, R59.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1566 @ 0x61e0 (25056) - @P0 SHF.R.U32.HI R20, RZ, c[0x0][0x3dc], R20 ;
 Instr 1567 @ 0x61f0 (25072) - @P0 IMAD.HI.U32 R22, R100, c[0x0][0x3d8], RZ ;
 Instr 1568 @ 0x6200 (25088) - STS.64 [R52+0x50], R32 ;
 Instr 1569 @ 0x6210 (25104) - HADD2.F32 R58, R58.H1_H1, -RZ.H0_H0 ;
 Instr 1570 @ 0x6220 (25120) - ISETP.LT.AND P1, PT, R90, c[0x0][0x3c4], !P1 ;
 Instr 1571 @ 0x6230 (25136) - @P0 IMAD.MOV R21, RZ, RZ, -R20 ;
 Instr 1572 @ 0x6240 (25152) - STS.64 [R52+0x940], R30 ;
 Instr 1573 @ 0x6250 (25168) - @P0 SHF.R.U32.HI R22, RZ, c[0x0][0x3dc], R22 ;
 Instr 1574 @ 0x6260 (25184) - HADD2.F32 R14, R59.H1_H1, -RZ.H0_H0 ;
 Instr 1575 @ 0x6270 (25200) - @P0 IMAD R17, R21, c[0x0][0x3c8], R98 ;
 Instr 1576 @ 0x6280 (25216) - STS.64 [R52+0x950], R34 ;
 Instr 1577 @ 0x6290 (25232) - @P0 IMAD.MOV.U32 R98, RZ, RZ, R20 ;
 Instr 1578 @ 0x62a0 (25248) - @P0 IMAD.MOV R23, RZ, RZ, -R22 ;
 Instr 1579 @ 0x62b0 (25264) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1580 @ 0x62c0 (25280) - IMAD R21, R0, c[0x0][0x254], RZ ;
 Instr 1581 @ 0x62d0 (25296) - @P0 IMAD R19, R23, c[0x0][0x3c8], R100 ;
 Instr 1582 @ 0x62e0 (25312) - @P0 IMAD.MOV.U32 R100, RZ, RZ, R22 ;
 Instr 1583 @ 0x62f0 (25328) - PLOP3.LUT P0, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 1584 @ 0x6300 (25344) - IMAD R98, R98, c[0x0][0x244], R21.reuse ;
 Instr 1585 @ 0x6310 (25360) - IMAD R100, R100, c[0x0][0x244], R21 ;
 Instr 1586 @ 0x6320 (25376) - CS2R R20, SRZ ;
 Instr 1587 @ 0x6330 (25392) - IMAD.MOV.U32 R29, RZ, RZ, RZ ;
 Instr 1588 @ 0x6340 (25408) - @P0 IMAD.HI.U32 R28, R19, c[0x0][0x3e0], RZ ;
 Instr 1589 @ 0x6350 (25424) - @P0 IMAD.HI.U32 R27, R17, c[0x0][0x3e0], RZ ;
 Instr 1590 @ 0x6360 (25440) - @P0 SHF.R.U32.HI R28, RZ, c[0x0][0x3e4], R28 ;
 Instr 1591 @ 0x6370 (25456) - LDS.U.128 R4, [R2.X16] ;
 Instr 1592 @ 0x6380 (25472) - @P0 SHF.R.U32.HI R27, RZ, c[0x0][0x3e4], R27 ;
 Instr 1593 @ 0x6390 (25488) - @P0 IMAD.MOV R26, RZ, RZ, -R28 ;
 Instr 1594 @ 0x63a0 (25504) - LDS.U.128 R8, [R2.X16+0x1200] ;
 Instr 1595 @ 0x63b0 (25520) - @P0 IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 1596 @ 0x63c0 (25536) - @P0 IMAD R21, R26, c[0x0][0x3cc], R19 ;
 Instr 1597 @ 0x63d0 (25552) - @P0 IMAD R20, R24, c[0x0][0x3cc], R17 ;
 Instr 1598 @ 0x63e0 (25568) - @P0 IMAD.MOV.U32 R19, RZ, RZ, R28 ;
 Instr 1599 @ 0x63f0 (25584) - @P0 IMAD.MOV.U32 R17, RZ, RZ, R27 ;
 Instr 1600 @ 0x6400 (25600) - IMAD R100, R19, c[0x0][0x248], R100 ;
 Instr 1601 @ 0x6410 (25616) - IMAD.MOV.U32 R27, RZ, RZ, RZ ;
 Instr 1602 @ 0x6420 (25632) - IMAD R17, R17, c[0x0][0x248], R98 ;
 Instr 1603 @ 0x6430 (25648) - FFMA R4, R4, R3.reuse, R15 ;
 Instr 1604 @ 0x6440 (25664) - FFMA R23, R5, R3.reuse, R56 ;
 Instr 1605 @ 0x6450 (25680) - FFMA R22, R6, R3.reuse, R16 ;
 Instr 1606 @ 0x6460 (25696) - FSETP.GEU.AND P3, PT, R4, c[0x0][0x210], PT ;
 Instr 1607 @ 0x6470 (25712) - FFMA R25, R7, R3, R18 ;
 Instr 1608 @ 0x6480 (25728) - FFMA R8, R8, R3.reuse, R15 ;
 Instr 1609 @ 0x6490 (25744) - FSEL R0, R4, c[0x0][0x210], P3 ;
 Instr 1610 @ 0x64a0 (25760) - FFMA R9, R9, R3.reuse, R56 ;
 Instr 1611 @ 0x64b0 (25776) - FSETP.GEU.AND P3, PT, R23, c[0x0][0x210], PT ;
 Instr 1612 @ 0x64c0 (25792) - LDS.U.128 R4, [R2.X16+0x90] ;
 Instr 1613 @ 0x64d0 (25808) - FSETP.GT.AND P4, PT, R0, c[0x0][0x220], PT ;
 Instr 1614 @ 0x64e0 (25824) - FFMA R18, R11, R3, R18 ;
 Instr 1615 @ 0x64f0 (25840) - FSEL R23, R23, c[0x0][0x210], P3 ;
 Instr 1616 @ 0x6500 (25856) - FSETP.GEU.AND P3, PT, R22, c[0x0][0x210], PT ;
 Instr 1617 @ 0x6510 (25872) - FSEL R0, R0, c[0x0][0x220], !P4 ;
 Instr 1618 @ 0x6520 (25888) - FSEL R22, R22, c[0x0][0x210], P3 ;
 Instr 1619 @ 0x6530 (25904) - FSETP.GEU.AND P3, PT, R25, c[0x0][0x210], PT ;
 Instr 1620 @ 0x6540 (25920) - FSETP.GT.AND P4, PT, R23, c[0x0][0x220], PT ;
 Instr 1621 @ 0x6550 (25936) - F2F.F16.F32 R0, R0 ;
 Instr 1622 @ 0x6560 (25952) - FSEL R25, R25, c[0x0][0x210], P3 ;
 Instr 1623 @ 0x6570 (25968) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 1624 @ 0x6580 (25984) - FSETP.GT.AND P3, PT, R25, c[0x0][0x220], PT ;
 Instr 1625 @ 0x6590 (26000) - FSEL R23, R23, c[0x0][0x220], !P4 ;
 Instr 1626 @ 0x65a0 (26016) - FSEL R8, R8, c[0x0][0x210], P0 ;
 Instr 1627 @ 0x65b0 (26032) - FSEL R26, R25, c[0x0][0x220], !P3 ;
 Instr 1628 @ 0x65c0 (26048) - FSETP.GEU.AND P0, PT, R9.reuse, c[0x0][0x210], PT ;
 Instr 1629 @ 0x65d0 (26064) - F2F.F16.F32 R15, R23 ;
 Instr 1630 @ 0x65e0 (26080) - FSETP.GT.AND P3, PT, R8, c[0x0][0x220], PT ;
 Instr 1631 @ 0x65f0 (26096) - FSEL R24, R9, c[0x0][0x210], P0 ;
 Instr 1632 @ 0x6600 (26112) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 1633 @ 0x6610 (26128) - FSETP.GT.AND P4, PT, R22, c[0x0][0x220], PT ;
 Instr 1634 @ 0x6620 (26144) - FFMA R23, R10, R3.reuse, R16 ;
 Instr 1635 @ 0x6630 (26160) - FSEL R16, R8, c[0x0][0x220], !P3 ;
 Instr 1636 @ 0x6640 (26176) - F2F.F16.F32 R19, R26 ;
 Instr 1637 @ 0x6650 (26192) - LDS.U.128 R8, [R2.X16+0x1290] ;
 Instr 1638 @ 0x6660 (26208) - FSEL R22, R22, c[0x0][0x220], !P4 ;
 Instr 1639 @ 0x6670 (26224) - FFMA R5, R5, R3.reuse, R58 ;
 Instr 1640 @ 0x6680 (26240) - FSETP.GEU.AND P3, PT, R23, c[0x0][0x210], PT ;
 Instr 1641 @ 0x6690 (26256) - FSETP.GT.AND P4, PT, R24, c[0x0][0x220], PT ;
 Instr 1642 @ 0x66a0 (26272) - @P0 IMAD.HI.U32 R28, R21, c[0x0][0x3e8], RZ ;
 Instr 1643 @ 0x66b0 (26288) - FSEL R25, R23, c[0x0][0x210], P3 ;
 Instr 1644 @ 0x66c0 (26304) - F2F.F16.F32 R22, R22 ;
 Instr 1645 @ 0x66d0 (26320) - FSETP.GEU.AND P3, PT, R18, c[0x0][0x210], PT ;
 Instr 1646 @ 0x66e0 (26336) - FFMA R26, R4, R3.reuse, R12 ;
 Instr 1647 @ 0x66f0 (26352) - FSEL R23, R24, c[0x0][0x220], !P4 ;
 Instr 1648 @ 0x6700 (26368) - FFMA R4, R6, R3.reuse, R13 ;
 Instr 1649 @ 0x6710 (26384) - FSEL R18, R18, c[0x0][0x210], P3 ;
 Instr 1650 @ 0x6720 (26400) - FFMA R24, R7, R3, R14 ;
 Instr 1651 @ 0x6730 (26416) - FSETP.GEU.AND P3, PT, R26, c[0x0][0x210], PT ;
 Instr 1652 @ 0x6740 (26432) - F2F.F16.F32 R16, R16 ;
 Instr 1653 @ 0x6750 (26448) - FSETP.GT.AND P4, PT, R25, c[0x0][0x220], PT ;
 Instr 1654 @ 0x6760 (26464) - FSEL R6, R26, c[0x0][0x210], P3 ;
 Instr 1655 @ 0x6770 (26480) - @P0 IMAD.HI.U32 R26, R20, c[0x0][0x3e8], RZ ;
 Instr 1656 @ 0x6780 (26496) - FSEL R25, R25, c[0x0][0x220], !P4 ;
 Instr 1657 @ 0x6790 (26512) - FSETP.GT.AND P4, PT, R18, c[0x0][0x220], PT ;
 Instr 1658 @ 0x67a0 (26528) - F2F.F16.F32 R23, R23 ;
 Instr 1659 @ 0x67b0 (26544) - FSETP.GEU.AND P3, PT, R5, c[0x0][0x210], PT ;
 Instr 1660 @ 0x67c0 (26560) - @P0 SHF.R.U32.HI R28, RZ, c[0x0][0x3ec], R28 ;
 Instr 1661 @ 0x67d0 (26576) - @P0 SHF.R.U32.HI R26, RZ, c[0x0][0x3ec], R26 ;
 Instr 1662 @ 0x67e0 (26592) - FSEL R2, R18, c[0x0][0x220], !P4 ;
 Instr 1663 @ 0x67f0 (26608) - @P0 IMAD.MOV R18, RZ, RZ, -R28 ;
 Instr 1664 @ 0x6800 (26624) - FSEL R7, R5, c[0x0][0x210], P3 ;
 Instr 1665 @ 0x6810 (26640) - @P0 IMAD.MOV R5, RZ, RZ, -R26 ;
 Instr 1666 @ 0x6820 (26656) - FSETP.GEU.AND P3, PT, R4, c[0x0][0x210], PT ;
 Instr 1667 @ 0x6830 (26672) - @P0 IMAD R29, R18, c[0x0][0x1b4], R21 ;
 Instr 1668 @ 0x6840 (26688) - FSETP.GT.AND P4, PT, R6, c[0x0][0x220], PT ;
 Instr 1669 @ 0x6850 (26704) - @P0 IMAD R27, R5, c[0x0][0x1b4], R20 ;
 Instr 1670 @ 0x6860 (26720) - FSEL R4, R4, c[0x0][0x210], P3 ;
 Instr 1671 @ 0x6870 (26736) - FFMA R8, R8, R3.reuse, R12 ;
 Instr 1672 @ 0x6880 (26752) - FSETP.GEU.AND P3, PT, R24, c[0x0][0x210], PT ;
 Instr 1673 @ 0x6890 (26768) - @P0 IMAD.MOV.U32 R21, RZ, RZ, R28 ;
 Instr 1674 @ 0x68a0 (26784) - FSEL R6, R6, c[0x0][0x220], !P4 ;
 Instr 1675 @ 0x68b0 (26800) - @P0 IMAD.MOV.U32 R20, RZ, RZ, R26 ;
 Instr 1676 @ 0x68c0 (26816) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 1677 @ 0x68d0 (26832) - FFMA R58, R9, R3.reuse, R58 ;
 Instr 1678 @ 0x68e0 (26848) - FSEL R24, R24, c[0x0][0x210], P3 ;
 Instr 1679 @ 0x68f0 (26864) - FFMA R10, R10, R3.reuse, R13 ;
 Instr 1680 @ 0x6900 (26880) - FSEL R8, R8, c[0x0][0x210], P0 ;
 Instr 1681 @ 0x6910 (26896) - FFMA R11, R11, R3, R14 ;
 Instr 1682 @ 0x6920 (26912) - FSETP.GEU.AND P0, PT, R58, c[0x0][0x210], PT ;
 Instr 1683 @ 0x6930 (26928) - IMAD R100, R21, c[0x0][0x24c], R100 ;
 Instr 1684 @ 0x6940 (26944) - FSETP.GT.AND P3, PT, R24, c[0x0][0x220], PT ;
 Instr 1685 @ 0x6950 (26960) - IMAD R20, R20, c[0x0][0x24c], R17 ;
 Instr 1686 @ 0x6960 (26976) - FSEL R58, R58, c[0x0][0x210], P0 ;
 Instr 1687 @ 0x6970 (26992) - IMAD R29, R29, c[0x0][0x250], R100 ;
 Instr 1688 @ 0x6980 (27008) - FSETP.GEU.AND P0, PT, R10, c[0x0][0x210], PT ;
 Instr 1689 @ 0x6990 (27024) - IMAD R13, R27, c[0x0][0x250], R20 ;
 Instr 1690 @ 0x69a0 (27040) - FSEL R24, R24, c[0x0][0x220], !P3 ;
 Instr 1691 @ 0x69b0 (27056) - F2F.F16.F32 R6, R6 ;
 Instr 1692 @ 0x69c0 (27072) - FSETP.GT.AND P3, PT, R8, c[0x0][0x220], PT ;
 Instr 1693 @ 0x69d0 (27088) - FSEL R10, R10, c[0x0][0x210], P0 ;
 Instr 1694 @ 0x69e0 (27104) - FSETP.GEU.AND P0, PT, R11, c[0x0][0x210], PT ;
 Instr 1695 @ 0x69f0 (27120) - FSETP.GT.AND P4, PT, R7, c[0x0][0x220], PT ;
 Instr 1696 @ 0x6a00 (27136) - F2F.F16.F32 R24, R24 ;
 Instr 1697 @ 0x6a10 (27152) - FSEL R18, R8, c[0x0][0x220], !P3 ;
 Instr 1698 @ 0x6a20 (27168) - FSETP.GT.AND P3, PT, R58, c[0x0][0x220], PT ;
 Instr 1699 @ 0x6a30 (27184) - FSEL R3, R11, c[0x0][0x210], P0 ;
 Instr 1700 @ 0x6a40 (27200) - FSEL R7, R7, c[0x0][0x220], !P4 ;
 Instr 1701 @ 0x6a50 (27216) - F2F.F16.F32 R25, R25 ;
 Instr 1702 @ 0x6a60 (27232) - FSETP.GT.AND P4, PT, R4, c[0x0][0x220], PT ;
 Instr 1703 @ 0x6a70 (27248) - FSEL R58, R58, c[0x0][0x220], !P3 ;
 Instr 1704 @ 0x6a80 (27264) - SEL R29, R29, 0xffffffff, P2 ;
 Instr 1705 @ 0x6a90 (27280) - FSETP.GT.AND P3, PT, R10, c[0x0][0x220], PT ;
 Instr 1706 @ 0x6aa0 (27296) - F2F.F16.F32 R7, R7 ;
 Instr 1707 @ 0x6ab0 (27312) - FSETP.GT.AND P2, PT, R3, c[0x0][0x220], PT ;
 Instr 1708 @ 0x6ac0 (27328) - FSEL R4, R4, c[0x0][0x220], !P4 ;
 Instr 1709 @ 0x6ad0 (27344) - FSEL R8, R10, c[0x0][0x220], !P3 ;
 Instr 1710 @ 0x6ae0 (27360) - FSEL R3, R3, c[0x0][0x220], !P2 ;
 Instr 1711 @ 0x6af0 (27376) - F2F.F16.F32 R2, R2 ;
 Instr 1712 @ 0x6b00 (27392) - SEL R13, R13, 0xffffffff, P1 ;
 Instr 1713 @ 0x6b10 (27408) - ISETP.GE.AND P1, PT, R29, RZ, PT ;
 Instr 1714 @ 0x6b20 (27424) - ISETP.GE.AND P0, PT, R13, RZ, PT ;
 Instr 1715 @ 0x6b30 (27440) - PRMT R5, R22, 0x5410, R19 ;
 Instr 1716 @ 0x6b40 (27456) - F2F.F16.F32 R9, R4 ;
 Instr 1717 @ 0x6b50 (27472) - PRMT R6, R6, 0x5410, R7 ;
 Instr 1718 @ 0x6b60 (27488) - PRMT R16, R16, 0x5410, R23 ;
 Instr 1719 @ 0x6b70 (27504) - @P1 IMAD.MOV.U32 R20, RZ, RZ, 0x2 ;
 Instr 1720 @ 0x6b80 (27520) - F2F.F16.F32 R18, R18 ;
 Instr 1721 @ 0x6b90 (27536) - @P0 IMAD.MOV.U32 R10, RZ, RZ, 0x2 ;
 Instr 1722 @ 0x6ba0 (27552) - PRMT R4, R0, 0x5410, R15 ;
 Instr 1723 @ 0x6bb0 (27568) - @P1 IMAD.WIDE R20, R29, R20, c[0x0][0x170] ;
 Instr 1724 @ 0x6bc0 (27584) - PRMT R17, R25, 0x5410, R2 ;
 Instr 1725 @ 0x6bd0 (27600) - @P0 IMAD.WIDE R12, R13, R10, c[0x0][0x170] ;
 Instr 1726 @ 0x6be0 (27616) - F2F.F16.F32 R11, R58 ;
 Instr 1727 @ 0x6bf0 (27632) - PRMT R7, R9, 0x5410, R24 ;
 Instr 1728 @ 0x6c00 (27648) - F2F.F16.F32 R8, R8 ;
 Instr 1729 @ 0x6c10 (27664) - @P1 STG.E.128.SYS [R20], R4 ;
 Instr 1730 @ 0x6c20 (27680) - F2F.F16.F32 R3, R3 ;
 Instr 1731 @ 0x6c30 (27696) - PRMT R18, R18, 0x5410, R11 ;
 Instr 1732 @ 0x6c40 (27712) - PRMT R19, R8, 0x5410, R3 ;
 Instr 1733 @ 0x6c50 (27728) - @P0 STG.E.128.SYS [R12], R16 ;
Basic block id 74 - num instructions 2
 Instr 1734 @ 0x6c60 (27744) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
 Instr 1735 @ 0x6c70 (27760) - @P0 BRA 0x9bd0 ;
Basic block id 75 - num instructions 6
 Instr 1736 @ 0x6c80 (27776) - S2R R0, SR_TID.X ;
 Instr 1737 @ 0x6c90 (27792) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1738 @ 0x6ca0 (27808) - BSSY B0, 0x6df0 ;
 Instr 1739 @ 0x6cb0 (27824) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1740 @ 0x6cc0 (27840) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1741 @ 0x6cd0 (27856) - @P0 BRA 0x6de0 ;
Basic block id 76 - num instructions 2
 Instr 1742 @ 0x6ce0 (27872) - MEMBAR.SC.GPU ;
 Instr 1743 @ 0x6cf0 (27888) - ERRBAR;
Basic block id 77 - num instructions 2
 Instr 1744 @ 0x6d00 (27904) - CCTL.IVALL ;
 Instr 1745 @ 0x6d10 (27920) - @P6 BRA 0x6d80 ;
Basic block id 78 - num instructions 6
 Instr 1746 @ 0x6d20 (27936) - S2R R0, SR_LANEID ;
 Instr 1747 @ 0x6d30 (27952) - VOTEU.ANY UR5, UPT, PT ;
 Instr 1748 @ 0x6d40 (27968) - UFLO.U32 UR4, UR5 ;
 Instr 1749 @ 0x6d50 (27984) - POPC R3, UR5 ;
 Instr 1750 @ 0x6d60 (28000) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 1751 @ 0x6d70 (28016) - @P0 RED.E.ADD.STRONG.GPU [R68], R3 ;
Basic block id 79 - num instructions 6
 Instr 1752 @ 0x6d80 (28032) - S2R R0, SR_LANEID ;
 Instr 1753 @ 0x6d90 (28048) - VOTEU.ANY UR5, UPT, PT ;
 Instr 1754 @ 0x6da0 (28064) - UFLO.U32 UR4, UR5 ;
 Instr 1755 @ 0x6db0 (28080) - POPC R3, UR5 ;
 Instr 1756 @ 0x6dc0 (28096) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 1757 @ 0x6dd0 (28112) - @P0 RED.E.ADD.STRONG.GPU [R66], R3 ;
Basic block id 80 - num instructions 2
 Instr 1758 @ 0x6de0 (28128) - BSYNC B0 ;
 Instr 1759 @ 0x6df0 (28144) - BRA 0x9bd0 ;
Basic block id 81 - num instructions 7
 Instr 1760 @ 0x6e00 (28160) - ISETP.NE.AND P0, PT, R38, 0x1, PT ;
 Instr 1761 @ 0x6e10 (28176) - UMOV UR9, 0x1 ;
 Instr 1762 @ 0x6e20 (28192) - IMAD.MOV.U32 R66, RZ, RZ, RZ ;
 Instr 1763 @ 0x6e30 (28208) - MOV R68, RZ ;
 Instr 1764 @ 0x6e40 (28224) - CS2R R64, SRZ ;
 Instr 1765 @ 0x6e50 (28240) - CS2R R62, SRZ ;
 Instr 1766 @ 0x6e60 (28256) - @!P0 BRA 0x7440 ;
Basic block id 82 - num instructions 5
 Instr 1767 @ 0x6e70 (28272) - IMAD.MOV.U32 R40, RZ, RZ, 0x2 ;
 Instr 1768 @ 0x6e80 (28288) - ISETP.NE.AND P1, PT, R38, c[0x0][0x294], PT ;
 Instr 1769 @ 0x6e90 (28304) - IMAD.MOV.U32 R68, RZ, RZ, R36 ;
 Instr 1770 @ 0x6ea0 (28320) - ISETP.EQ.AND P0, PT, R40, c[0x0][0x298], PT ;
 Instr 1771 @ 0x6eb0 (28336) - @!P1 BRA P0, 0x7440 ;
Basic block id 83 - num instructions 5
 Instr 1772 @ 0x6ec0 (28352) - MOV R40, 0x1 ;
 Instr 1773 @ 0x6ed0 (28368) - MOV R38, 0x4 ;
 Instr 1774 @ 0x6ee0 (28384) - ISETP.EQ.AND P0, PT, R40, c[0x0][0x298], PT ;
 Instr 1775 @ 0x6ef0 (28400) - IMAD.WIDE R62, R53, R38, c[0x0][0x2c0] ;
 Instr 1776 @ 0x6f00 (28416) - @P6 BRA P0, 0x7280 ;
Basic block id 84 - num instructions 35
 Instr 1777 @ 0x6f10 (28432) - IABS R41, c[0x0][0x294] ;
 Instr 1778 @ 0x6f20 (28448) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 1779 @ 0x6f30 (28464) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1780 @ 0x6f40 (28480) - BSSY B0, 0x71f0 ;
 Instr 1781 @ 0x6f50 (28496) - I2F.RP R45, R41 ;
 Instr 1782 @ 0x6f60 (28512) - MUFU.RCP R44, R45 ;
 Instr 1783 @ 0x6f70 (28528) - IADD3 R44, R44, 0xffffffe, RZ ;
 Instr 1784 @ 0x6f80 (28544) - F2I.FTZ.U32.TRUNC.NTZ R43, R44 ;
 Instr 1785 @ 0x6f90 (28560) - IMAD.MOV R39, RZ, RZ, -R43.reuse ;
 Instr 1786 @ 0x6fa0 (28576) - IMAD R40, R39, R41, RZ ;
 Instr 1787 @ 0x6fb0 (28592) - IABS R39, R36 ;
 Instr 1788 @ 0x6fc0 (28608) - IMAD.HI.U32 R43, R43, R40, R42 ;
 Instr 1789 @ 0x6fd0 (28624) - IMAD.MOV.U32 R42, RZ, RZ, R39 ;
 Instr 1790 @ 0x6fe0 (28640) - IMAD.HI.U32 R39, R43, R42, RZ ;
 Instr 1791 @ 0x6ff0 (28656) - IMAD.MOV R40, RZ, RZ, -R39 ;
 Instr 1792 @ 0x7000 (28672) - IMAD R40, R41, R40, R42 ;
 Instr 1793 @ 0x7010 (28688) - ISETP.GT.U32.AND P0, PT, R41, R40, PT ;
 Instr 1794 @ 0x7020 (28704) - @!P0 IMAD.IADD R40, R40, 0x1, -R41 ;
 Instr 1795 @ 0x7030 (28720) - @!P0 IADD3 R39, R39, 0x1, RZ ;
 Instr 1796 @ 0x7040 (28736) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x294], PT ;
 Instr 1797 @ 0x7050 (28752) - ISETP.GE.U32.AND P2, PT, R40, R41, PT ;
 Instr 1798 @ 0x7060 (28768) - LOP3.LUT R40, R36, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 1799 @ 0x7070 (28784) - ISETP.GE.AND P1, PT, R40, RZ, PT ;
 Instr 1800 @ 0x7080 (28800) - @P2 IADD3 R39, R39, 0x1, RZ ;
 Instr 1801 @ 0x7090 (28816) - @!P1 IMAD.MOV R39, RZ, RZ, -R39 ;
 Instr 1802 @ 0x70a0 (28832) - @!P0 LOP3.LUT R39, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 1803 @ 0x70b0 (28848) - ISETP.NE.AND P0, PT, R37, RZ, PT ;
 Instr 1804 @ 0x70c0 (28864) - ISETP.NE.AND P1, PT, R39.reuse, RZ, PT ;
 Instr 1805 @ 0x70d0 (28880) - IMAD.MOV R41, RZ, RZ, -R39 ;
 Instr 1806 @ 0x70e0 (28896) - ISETP.EQ.OR P0, PT, R39, RZ, P0 ;
 Instr 1807 @ 0x70f0 (28912) - SEL R66, RZ, 0x1, !P1 ;
 Instr 1808 @ 0x7100 (28928) - IMAD R68, R41, c[0x0][0x294], R36 ;
 Instr 1809 @ 0x7110 (28944) - IMAD R65, R54, R68, R53 ;
 Instr 1810 @ 0x7120 (28960) - IMAD.WIDE R64, R65, R38, c[0x0][0x2b8] ;
 Instr 1811 @ 0x7130 (28976) - @P0 BRA 0x71e0 ;
Basic block id 85 - num instructions 4
 Instr 1812 @ 0x7140 (28992) - LDG.E.STRONG.GPU R36, [R64] ;
 Instr 1813 @ 0x7150 (29008) - ISETP.NE.AND P0, PT, R36, R39, PT ;
 Instr 1814 @ 0x7160 (29024) - CCTL.IVALL ;
 Instr 1815 @ 0x7170 (29040) - @!P0 BRA 0x71e0 ;
Basic block id 86 - num instructions 5
 Instr 1816 @ 0x7180 (29056) - VOTE.ANY R36, PT, PT ;
 Instr 1817 @ 0x7190 (29072) - YIELD ;
 Instr 1818 @ 0x71a0 (29088) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1819 @ 0x71b0 (29104) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 1820 @ 0x71c0 (29120) - @!P0 BRA.U 0x7140 ;
Basic block id 87 - num instructions 1
 Instr 1821 @ 0x71d0 (29136) - BRA 0x7180 ;
Basic block id 88 - num instructions 2
 Instr 1822 @ 0x71e0 (29152) - BSYNC B0 ;
 Instr 1823 @ 0x71f0 (29168) - BRA.CONV 0x7230 ;
Basic block id 89 - num instructions 3
 Instr 1824 @ 0x7200 (29184) - MOV R37, 0xffffffff ;
 Instr 1825 @ 0x7210 (29200) - MOV R36, 0x7230 ;
 Instr 1826 @ 0x7220 (29216) - CALL.REL.NOINC 0x9bf0 ;
Basic block id 90 - num instructions 5
 Instr 1827 @ 0x7230 (29232) - NOP ;
 Instr 1828 @ 0x7240 (29248) - WARPSYNC 0xffffffff ;
 Instr 1829 @ 0x7250 (29264) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1830 @ 0x7260 (29280) - UMOV UR9, URZ ;
 Instr 1831 @ 0x7270 (29296) - BRA 0x7440 ;
Basic block id 91 - num instructions 8
 Instr 1832 @ 0x7280 (29312) - ISETP.NE.AND P0, PT, R37, RZ, PT ;
 Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R66, RZ, RZ, 0x1 ;
 Instr 1834 @ 0x72a0 (29344) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1835 @ 0x72b0 (29360) - BSSY B0, 0x73b0 ;
 Instr 1836 @ 0x72c0 (29376) - ISETP.EQ.OR P0, PT, R39, RZ, P0 ;
 Instr 1837 @ 0x72d0 (29392) - IADD3 R66, -R66, c[0x0][0x294], RZ ;
 Instr 1838 @ 0x72e0 (29408) - @P1 IMAD.MOV R66, RZ, RZ, c[0x0][0x294] ;
 Instr 1839 @ 0x72f0 (29424) - @P0 BRA 0x73a0 ;
Basic block id 92 - num instructions 4
 Instr 1840 @ 0x7300 (29440) - LDG.E.STRONG.GPU R36, [R62] ;
 Instr 1841 @ 0x7310 (29456) - ISETP.NE.AND P0, PT, R36, R39, PT ;
 Instr 1842 @ 0x7320 (29472) - CCTL.IVALL ;
 Instr 1843 @ 0x7330 (29488) - @!P0 BRA 0x73a0 ;
Basic block id 93 - num instructions 5
 Instr 1844 @ 0x7340 (29504) - VOTE.ANY R36, PT, PT ;
 Instr 1845 @ 0x7350 (29520) - YIELD ;
 Instr 1846 @ 0x7360 (29536) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1847 @ 0x7370 (29552) - LOP3.LUT P0, RZ, R36, UR4, RZ, 0xc, !PT ;
 Instr 1848 @ 0x7380 (29568) - @!P0 BRA.U 0x7300 ;
Basic block id 94 - num instructions 1
 Instr 1849 @ 0x7390 (29584) - BRA 0x7340 ;
Basic block id 95 - num instructions 2
 Instr 1850 @ 0x73a0 (29600) - BSYNC B0 ;
 Instr 1851 @ 0x73b0 (29616) - BRA.CONV 0x73f0 ;
Basic block id 96 - num instructions 3
 Instr 1852 @ 0x73c0 (29632) - MOV R37, 0xffffffff ;
 Instr 1853 @ 0x73d0 (29648) - MOV R36, 0x73f0 ;
 Instr 1854 @ 0x73e0 (29664) - CALL.REL.NOINC 0x9bf0 ;
Basic block id 97 - num instructions 5
 Instr 1855 @ 0x73f0 (29680) - NOP ;
 Instr 1856 @ 0x7400 (29696) - WARPSYNC 0xffffffff ;
 Instr 1857 @ 0x7410 (29712) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1858 @ 0x7420 (29728) - MOV R68, RZ ;
 Instr 1859 @ 0x7430 (29744) - UMOV UR9, URZ ;
Basic block id 98 - num instructions 11
 Instr 1860 @ 0x7440 (29760) - MOV R60, 0x2 ;
 Instr 1861 @ 0x7450 (29776) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1862 @ 0x7460 (29792) - SHF.R.S32.HI R71, RZ, 0x1f, R68 ;
 Instr 1863 @ 0x7470 (29808) - ISETP.LE.AND P5, PT, R60, c[0x0][0x290], PT ;
 Instr 1864 @ 0x7480 (29824) - MOV R36, 0x1 ;
 Instr 1865 @ 0x7490 (29840) - IMAD R71, R71, c[0x0][0x2a0], RZ ;
 Instr 1866 @ 0x74a0 (29856) - ISETP.EQ.AND P4, PT, R36, c[0x0][0x298], P6 ;
 Instr 1867 @ 0x74b0 (29872) - IMAD R71, R68.reuse, c[0x0][0x2a4], R71 ;
 Instr 1868 @ 0x74c0 (29888) - IMAD.WIDE.U32 R68, R68, c[0x0][0x2a0], RZ ;
 Instr 1869 @ 0x74d0 (29904) - IADD3 R71, R69, R71, RZ ;
 Instr 1870 @ 0x74e0 (29920) - @!P5 BRA 0x7990 ;
Basic block id 99 - num instructions 6
 Instr 1871 @ 0x74f0 (29936) - S2R R72, SR_TID.X ;
 Instr 1872 @ 0x7500 (29952) - ISETP.GE.AND P0, PT, R66, 0x1, PT ;
 Instr 1873 @ 0x7510 (29968) - IMAD.SHL.U32 R73, R54, 0x80, RZ ;
 Instr 1874 @ 0x7520 (29984) - SHF.R.S32.HI R67, RZ, 0x1f, R73 ;
 Instr 1875 @ 0x7530 (30000) - IMAD R72, R53, 0x80, R72 ;
 Instr 1876 @ 0x7540 (30016) - @!P0 BRA 0x7870 ;
Basic block id 100 - num instructions 19
 Instr 1877 @ 0x7550 (30032) - IMAD.SHL.U32 R37, R72, 0x10, RZ ;
 Instr 1878 @ 0x7560 (30048) - LEA R74, P1, R73.reuse, R68.reuse, 0x4 ;
 Instr 1879 @ 0x7570 (30064) - IMAD.MOV.U32 R70, RZ, RZ, R68 ;
 Instr 1880 @ 0x7580 (30080) - LEA R76, P0, R73, R68, 0x5 ;
 Instr 1881 @ 0x7590 (30096) - IMAD R36, R67, 0x30, RZ ;
 Instr 1882 @ 0x75a0 (30112) - IADD3 R74, P3, P2, R74, c[0x0][0x2a8], R37 ;
 Instr 1883 @ 0x75b0 (30128) - IMAD.WIDE.U32 R78, R73.reuse, 0x30, R70 ;
 Instr 1884 @ 0x75c0 (30144) - LEA.HI.X R40, R73.reuse, R71.reuse, R67, 0x4, P1 ;
 Instr 1885 @ 0x75d0 (30160) - UMOV UR4, URZ ;
 Instr 1886 @ 0x75e0 (30176) - SHF.R.S32.HI R81, RZ, 0x1f, R37 ;
 Instr 1887 @ 0x75f0 (30192) - IMAD.IADD R36, R36, 0x1, R79 ;
 Instr 1888 @ 0x7600 (30208) - LEA.HI.X R38, R73, R71, R67, 0x5, P0 ;
 Instr 1889 @ 0x7610 (30224) - IADD3 R76, P1, P0, R76, c[0x0][0x2a8], R37 ;
 Instr 1890 @ 0x7620 (30240) - IADD3.X R75, R40, c[0x0][0x2ac], R81, P3, P2 ;
 Instr 1891 @ 0x7630 (30256) - IADD3 R78, P3, P2, R78, c[0x0][0x2a8], R37 ;
 Instr 1892 @ 0x7640 (30272) - IADD3.X R77, R38, c[0x0][0x2ac], R81, P1, P0 ;
 Instr 1893 @ 0x7650 (30288) - IADD3 R80, P1, P0, R68, c[0x0][0x2a8], R37 ;
 Instr 1894 @ 0x7660 (30304) - IADD3.X R79, R36, c[0x0][0x2ac], R81, P3, P2 ;
 Instr 1895 @ 0x7670 (30320) - IADD3.X R81, R71, c[0x0][0x2ac], R81, P1, P0 ;
Basic block id 101 - num instructions 31
 Instr 1896 @ 0x7680 (30336) - LDG.E.128.STRONG.GPU R48, [R80] ;
 Instr 1897 @ 0x7690 (30352) - LDG.E.128.STRONG.GPU R44, [R74] ;
 Instr 1898 @ 0x76a0 (30368) - LDG.E.128.STRONG.GPU R40, [R76] ;
 Instr 1899 @ 0x76b0 (30384) - LDG.E.128.STRONG.GPU R36, [R78] ;
 Instr 1900 @ 0x76c0 (30400) - UIADD3 UR4, UR4, 0x1, URZ ;
 Instr 1901 @ 0x76d0 (30416) - IADD3 R80, P0, R80, c[0x0][0x2a0], RZ ;
 Instr 1902 @ 0x76e0 (30432) - IADD3 R74, P2, R74, c[0x0][0x2a0], RZ ;
 Instr 1903 @ 0x76f0 (30448) - IADD3.X R81, R81, c[0x0][0x2a4], RZ, P0, !PT ;
 Instr 1904 @ 0x7700 (30464) - ISETP.LE.AND P3, PT, R66, UR4, PT ;
 Instr 1905 @ 0x7710 (30480) - IADD3 R76, P1, R76, c[0x0][0x2a0], RZ ;
 Instr 1906 @ 0x7720 (30496) - IADD3 R78, P0, R78, c[0x0][0x2a0], RZ ;
 Instr 1907 @ 0x7730 (30512) - IADD3.X R75, R75, c[0x0][0x2a4], RZ, P2, !PT ;
 Instr 1908 @ 0x7740 (30528) - IADD3.X R77, R77, c[0x0][0x2a4], RZ, P1, !PT ;
 Instr 1909 @ 0x7750 (30544) - IADD3.X R79, R79, c[0x0][0x2a4], RZ, P0, !PT ;
 Instr 1910 @ 0x7760 (30560) - FADD R4, R48, R4 ;
 Instr 1911 @ 0x7770 (30576) - FADD R5, R49, R5 ;
 Instr 1912 @ 0x7780 (30592) - FADD R6, R50, R6 ;
 Instr 1913 @ 0x7790 (30608) - FADD R7, R51, R7 ;
 Instr 1914 @ 0x77a0 (30624) - FADD R8, R44, R8 ;
 Instr 1915 @ 0x77b0 (30640) - FADD R9, R45, R9 ;
 Instr 1916 @ 0x77c0 (30656) - FADD R10, R46, R10 ;
 Instr 1917 @ 0x77d0 (30672) - FADD R11, R47, R11 ;
 Instr 1918 @ 0x77e0 (30688) - FADD R12, R40, R12 ;
 Instr 1919 @ 0x77f0 (30704) - FADD R13, R41, R13 ;
 Instr 1920 @ 0x7800 (30720) - FADD R14, R42, R14 ;
 Instr 1921 @ 0x7810 (30736) - FADD R15, R43, R15 ;
 Instr 1922 @ 0x7820 (30752) - FADD R16, R36, R16 ;
 Instr 1923 @ 0x7830 (30768) - FADD R17, R37, R17 ;
 Instr 1924 @ 0x7840 (30784) - FADD R18, R38, R18 ;
 Instr 1925 @ 0x7850 (30800) - FADD R19, R39, R19 ;
 Instr 1926 @ 0x7860 (30816) - @!P3 BRA 0x7680 ;
Basic block id 102 - num instructions 1
 Instr 1927 @ 0x7870 (30832) - @P4 BRA 0x7990 ;
Basic block id 103 - num instructions 17
 Instr 1928 @ 0x7880 (30848) - IMAD.MOV.U32 R38, RZ, RZ, R68 ;
 Instr 1929 @ 0x7890 (30864) - SHF.L.U64.HI R67, R73, 0x4, R67 ;
 Instr 1930 @ 0x78a0 (30880) - IMAD.MOV.U32 R39, RZ, RZ, R71 ;
 Instr 1931 @ 0x78b0 (30896) - IMAD.SHL.U32 R36, R73, 0x10, RZ ;
 Instr 1932 @ 0x78c0 (30912) - IMAD.WIDE R38, R72, 0x10, R38 ;
 Instr 1933 @ 0x78d0 (30928) - IADD3 R38, P1, R38, c[0x0][0x2a8], RZ ;
 Instr 1934 @ 0x78e0 (30944) - IADD3 R42, P0, R36.reuse, R38, RZ ;
 Instr 1935 @ 0x78f0 (30960) - IADD3.X R39, R39, c[0x0][0x2ac], RZ, P1, !PT ;
 Instr 1936 @ 0x7900 (30976) - IADD3 R40, P1, R36, R42, RZ ;
 Instr 1937 @ 0x7910 (30992) - IADD3.X R43, R67, R39, RZ, P0, !PT ;
 Instr 1938 @ 0x7920 (31008) - IADD3 R36, P0, R36, R40, RZ ;
 Instr 1939 @ 0x7930 (31024) - STG.E.128.SYS [R38], R4 ;
 Instr 1940 @ 0x7940 (31040) - IMAD.X R41, R67.reuse, 0x1, R43, P1 ;
 Instr 1941 @ 0x7950 (31056) - STG.E.128.SYS [R42], R8 ;
 Instr 1942 @ 0x7960 (31072) - IADD3.X R37, R67, R41, RZ, P0, !PT ;
 Instr 1943 @ 0x7970 (31088) - STG.E.128.SYS [R40], R12 ;
 Instr 1944 @ 0x7980 (31104) - STG.E.128.SYS [R36], R16 ;
Basic block id 104 - num instructions 1
 Instr 1945 @ 0x7990 (31120) - @!P4 BRA 0x87a0 ;
Basic block id 105 - num instructions 224
 Instr 1946 @ 0x79a0 (31136) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 1947 @ 0x79b0 (31152) - CS2R R42, SRZ ;
 Instr 1948 @ 0x79c0 (31168) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 1949 @ 0x79d0 (31184) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 1950 @ 0x79e0 (31200) - ISETP.GE.AND P3, PT, R0, UR15, PT ;
 Instr 1951 @ 0x79f0 (31216) - @P2 IMAD.HI.U32 R38, R88, c[0x0][0x3d8], RZ ;
 Instr 1952 @ 0x7a00 (31232) - @P2 SHF.R.U32.HI R38, RZ, c[0x0][0x3dc], R38 ;
 Instr 1953 @ 0x7a10 (31248) - @P2 IMAD.MOV R37, RZ, RZ, -R38 ;
 Instr 1954 @ 0x7a20 (31264) - @P2 IMAD R43, R37, c[0x0][0x3c8], R88 ;
 Instr 1955 @ 0x7a30 (31280) - @P2 IMAD.HI.U32 R37, R102, c[0x0][0x3d8], RZ ;
 Instr 1956 @ 0x7a40 (31296) - @P1 IMAD.HI.U32 R41, R43, c[0x0][0x3e0], RZ ;
 Instr 1957 @ 0x7a50 (31312) - @P2 SHF.R.U32.HI R37, RZ, c[0x0][0x3dc], R37 ;
 Instr 1958 @ 0x7a60 (31328) - @P2 IMAD.MOV.U32 R88, RZ, RZ, R38 ;
 Instr 1959 @ 0x7a70 (31344) - @P1 SHF.R.U32.HI R41, RZ, c[0x0][0x3e4], R41 ;
 Instr 1960 @ 0x7a80 (31360) - @P2 IMAD.MOV R39, RZ, RZ, -R37 ;
 Instr 1961 @ 0x7a90 (31376) - @P1 IMAD.MOV R36, RZ, RZ, -R41 ;
 Instr 1962 @ 0x7aa0 (31392) - @P1 IMAD R42, R36, c[0x0][0x3cc], R43 ;
 Instr 1963 @ 0x7ab0 (31408) - IMAD.MOV.U32 R36, RZ, RZ, RZ ;
 Instr 1964 @ 0x7ac0 (31424) - @P0 IMAD.HI.U32 R40, R42, c[0x0][0x3e8], RZ ;
 Instr 1965 @ 0x7ad0 (31440) - @P2 IMAD R36, R39, c[0x0][0x3c8], R102 ;
 Instr 1966 @ 0x7ae0 (31456) - @P0 SHF.R.U32.HI R40, RZ, c[0x0][0x3ec], R40 ;
 Instr 1967 @ 0x7af0 (31472) - IMAD R39, R0, c[0x0][0x254], RZ ;
 Instr 1968 @ 0x7b00 (31488) - @P1 IMAD.HI.U32 R38, R36, c[0x0][0x3e0], RZ ;
 Instr 1969 @ 0x7b10 (31504) - @P1 IMAD.MOV.U32 R43, RZ, RZ, R41 ;
 Instr 1970 @ 0x7b20 (31520) - @P1 SHF.R.U32.HI R38, RZ, c[0x0][0x3e4], R38 ;
 Instr 1971 @ 0x7b30 (31536) - IMAD.MOV.U32 R41, RZ, RZ, RZ ;
 Instr 1972 @ 0x7b40 (31552) - @P0 IMAD.MOV R45, RZ, RZ, -R40 ;
 Instr 1973 @ 0x7b50 (31568) - IMAD R44, R88, c[0x0][0x244], R39 ;
 Instr 1974 @ 0x7b60 (31584) - @P0 IMAD R41, R45, c[0x0][0x1b4], R42 ;
 Instr 1975 @ 0x7b70 (31600) - IMAD R43, R43, c[0x0][0x248], R44 ;
 Instr 1976 @ 0x7b80 (31616) - @P0 IMAD.MOV.U32 R42, RZ, RZ, R40 ;
 Instr 1977 @ 0x7b90 (31632) - IMAD.MOV.U32 R40, RZ, RZ, RZ ;
 Instr 1978 @ 0x7ba0 (31648) - @P1 IMAD.MOV R45, RZ, RZ, -R38 ;
 Instr 1979 @ 0x7bb0 (31664) - IMAD R42, R42, c[0x0][0x24c], R43 ;
 Instr 1980 @ 0x7bc0 (31680) - @P1 IMAD R40, R45, c[0x0][0x3cc], R36 ;
 Instr 1981 @ 0x7bd0 (31696) - @P2 IMAD.MOV.U32 R102, RZ, RZ, R37 ;
 Instr 1982 @ 0x7be0 (31712) - ISETP.LT.AND P2, PT, R55, c[0x0][0x3c4], !P3 ;
 Instr 1983 @ 0x7bf0 (31728) - IMAD R41, R41, c[0x0][0x250], R42 ;
 Instr 1984 @ 0x7c00 (31744) - @P0 IMAD.HI.U32 R37, R40, c[0x0][0x3e8], RZ ;
 Instr 1985 @ 0x7c10 (31760) - SEL R67, R41, 0xffffffff, P2 ;
 Instr 1986 @ 0x7c20 (31776) - @P1 IMAD.MOV.U32 R36, RZ, RZ, R38 ;
 Instr 1987 @ 0x7c30 (31792) - @P0 SHF.R.U32.HI R37, RZ, c[0x0][0x3ec], R37 ;
 Instr 1988 @ 0x7c40 (31808) - IMAD R43, R102, c[0x0][0x244], R39 ;
 Instr 1989 @ 0x7c50 (31824) - ISETP.GE.AND P1, PT, R67, RZ, PT ;
 Instr 1990 @ 0x7c60 (31840) - IMAD.MOV.U32 R41, RZ, RZ, RZ ;
 Instr 1991 @ 0x7c70 (31856) - @P0 IMAD.MOV R39, RZ, RZ, -R37 ;
 Instr 1992 @ 0x7c80 (31872) - IMAD R43, R36, c[0x0][0x248], R43 ;
 Instr 1993 @ 0x7c90 (31888) - @P0 IMAD R41, R39, c[0x0][0x1b4], R40 ;
 Instr 1994 @ 0x7ca0 (31904) - @P0 IMAD.MOV.U32 R40, RZ, RZ, R37 ;
 Instr 1995 @ 0x7cb0 (31920) - CS2R R38, SRZ ;
 Instr 1996 @ 0x7cc0 (31936) - CS2R R36, SRZ ;
 Instr 1997 @ 0x7cd0 (31952) - @P1 IMAD.WIDE R44, R67, R60, c[0x0][0x178] ;
 Instr 1998 @ 0x7ce0 (31968) - IMAD R40, R40, c[0x0][0x24c], R43 ;
 Instr 1999 @ 0x7cf0 (31984) - ISETP.LT.AND P3, PT, R92, c[0x0][0x3c4], !P3 ;
 Instr 2000 @ 0x7d00 (32000) - IMAD R40, R41, c[0x0][0x250], R40 ;
 Instr 2001 @ 0x7d10 (32016) - @P1 LDG.E.128.SYS R36, [R44] ;
 Instr 2002 @ 0x7d20 (32032) - IMAD.MOV.U32 R41, RZ, RZ, RZ ;
 Instr 2003 @ 0x7d30 (32048) - CS2R R42, SRZ ;
 Instr 2004 @ 0x7d40 (32064) - SEL R55, R40, 0xffffffff, P3 ;
 Instr 2005 @ 0x7d50 (32080) - IMAD.MOV.U32 R40, RZ, RZ, RZ ;
 Instr 2006 @ 0x7d60 (32096) - ISETP.GE.AND P0, PT, R55, RZ, PT ;
 Instr 2007 @ 0x7d70 (32112) - @P0 IMAD.WIDE R46, R55, R60, c[0x0][0x178] ;
 Instr 2008 @ 0x7d80 (32128) - @P0 LDG.E.128.SYS R40, [R46] ;
 Instr 2009 @ 0x7d90 (32144) - STS.64 [R52], R4 ;
 Instr 2010 @ 0x7da0 (32160) - STS.64 [R52+0x10], R8 ;
 Instr 2011 @ 0x7db0 (32176) - STS.64 [R52+0x900], R6 ;
 Instr 2012 @ 0x7dc0 (32192) - HADD2.F32 R5, R56.H0_H0, -RZ.H0_H0 ;
 Instr 2013 @ 0x7dd0 (32208) - STS.64 [R52+0x910], R10 ;
 Instr 2014 @ 0x7de0 (32224) - HADD2.F32 R4, R56.H1_H1, -RZ.H0_H0 ;
 Instr 2015 @ 0x7df0 (32240) - STS.64 [R52+0x40], R12 ;
 Instr 2016 @ 0x7e00 (32256) - HADD2.F32 R6, R57.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2017 @ 0x7e10 (32272) - STS.64 [R52+0x50], R16 ;
 Instr 2018 @ 0x7e20 (32288) - STS.64 [R52+0x940], R14 ;
 Instr 2019 @ 0x7e30 (32304) - HADD2.F32 R12, R57.H1_H1, -RZ.H0_H0 ;
 Instr 2020 @ 0x7e40 (32320) - STS.64 [R52+0x950], R18 ;
 Instr 2021 @ 0x7e50 (32336) - HADD2.F32 R13, R58.H0_H0, -RZ.H0_H0 ;
 Instr 2022 @ 0x7e60 (32352) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2023 @ 0x7e70 (32368) - LDS.U.128 R48, [R2.X16] ;
 Instr 2024 @ 0x7e80 (32384) - LDS.U.128 R44, [R2.X16+0x1200] ;
 Instr 2025 @ 0x7e90 (32400) - FFMA R11, R48, R3, R5 ;
 Instr 2026 @ 0x7ea0 (32416) - FFMA R49, R49, R3.reuse, R4 ;
 Instr 2027 @ 0x7eb0 (32432) - FFMA R9, R50, R3.reuse, R6 ;
 Instr 2028 @ 0x7ec0 (32448) - FFMA R51, R51, R3.reuse, R12 ;
 Instr 2029 @ 0x7ed0 (32464) - FFMA R44, R44, R3.reuse, R5 ;
 Instr 2030 @ 0x7ee0 (32480) - FFMA R18, R45, R3.reuse, R4 ;
 Instr 2031 @ 0x7ef0 (32496) - FFMA R46, R46, R3, R6 ;
 Instr 2032 @ 0x7f00 (32512) - LDS.U.128 R4, [R2.X16+0x90] ;
 Instr 2033 @ 0x7f10 (32528) - FFMA R12, R47, R3.reuse, R12 ;
 Instr 2034 @ 0x7f20 (32544) - FFMA R4, R4, R3, R13 ;
 Instr 2035 @ 0x7f30 (32560) - HADD2.F32 R8, R36.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2036 @ 0x7f40 (32576) - HADD2.F32 R10, R36.H1_H1, -RZ.H0_H0 ;
 Instr 2037 @ 0x7f50 (32592) - HADD2.F32 R14, R37.H0_H0, -RZ.H0_H0 ;
 Instr 2038 @ 0x7f60 (32608) - HADD2.F32 R36, R38.H0_H0, -RZ.H0_H0 ;
 Instr 2039 @ 0x7f70 (32624) - FFMA R11, R8, R61.reuse, R11 ;
 Instr 2040 @ 0x7f80 (32640) - HADD2.F32 R38, R38.H1_H1, -RZ.H0_H0 ;
 Instr 2041 @ 0x7f90 (32656) - FFMA R10, R10, R61.reuse, R49 ;
 Instr 2042 @ 0x7fa0 (32672) - HADD2.F32 R8, R37.H1_H1, -RZ.H0_H0 ;
 Instr 2043 @ 0x7fb0 (32688) - FFMA R9, R14, R61.reuse, R9 ;
 Instr 2044 @ 0x7fc0 (32704) - FSETP.GEU.AND P2, PT, R11.reuse, c[0x0][0x210], PT ;
 Instr 2045 @ 0x7fd0 (32720) - FFMA R36, R36, R61.reuse, R4 ;
 Instr 2046 @ 0x7fe0 (32736) - HADD2.F32 R4, R59.H0_H0, -RZ.H0_H0 ;
 Instr 2047 @ 0x7ff0 (32752) - FSEL R11, R11, c[0x0][0x210], P2 ;
 Instr 2048 @ 0x8000 (32768) - FSETP.GEU.AND P2, PT, R10, c[0x0][0x210], PT ;
 Instr 2049 @ 0x8010 (32784) - FFMA R8, R8, R61, R51 ;
 Instr 2050 @ 0x8020 (32800) - FSETP.GT.AND P3, PT, R11, c[0x0][0x220], PT ;
 Instr 2051 @ 0x8030 (32816) - FSEL R10, R10, c[0x0][0x210], P2 ;
 Instr 2052 @ 0x8040 (32832) - FFMA R6, R6, R3, R4 ;
 Instr 2053 @ 0x8050 (32848) - FSEL R16, R11, c[0x0][0x220], !P3 ;
 Instr 2054 @ 0x8060 (32864) - FSETP.GEU.AND P2, PT, R9.reuse, c[0x0][0x210], PT ;
 Instr 2055 @ 0x8070 (32880) - HADD2.F32 R11, R40.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2056 @ 0x8080 (32896) - FSETP.GT.AND P3, PT, R10, c[0x0][0x220], PT ;
 Instr 2057 @ 0x8090 (32912) - HADD2.F32 R40, R40.H1_H1, -RZ.H0_H0 ;
 Instr 2058 @ 0x80a0 (32928) - FSEL R9, R9, c[0x0][0x210], P2 ;
 Instr 2059 @ 0x80b0 (32944) - HADD2.F32 R17, R41.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2060 @ 0x80c0 (32960) - FSETP.GEU.AND P2, PT, R8, c[0x0][0x210], PT ;
 Instr 2061 @ 0x80d0 (32976) - HADD2.F32 R41, R41.H1_H1, -RZ.H0_H0 ;
 Instr 2062 @ 0x80e0 (32992) - FSEL R15, R10, c[0x0][0x220], !P3 ;
 Instr 2063 @ 0x80f0 (33008) - FFMA R44, R11, R61.reuse, R44 ;
 Instr 2064 @ 0x8100 (33024) - FSETP.GT.AND P3, PT, R9, c[0x0][0x220], PT ;
 Instr 2065 @ 0x8110 (33040) - FFMA R18, R40, R61.reuse, R18 ;
 Instr 2066 @ 0x8120 (33056) - FSEL R8, R8, c[0x0][0x210], P2 ;
 Instr 2067 @ 0x8130 (33072) - FFMA R17, R17, R61.reuse, R46 ;
 Instr 2068 @ 0x8140 (33088) - FSETP.GEU.AND P2, PT, R44, c[0x0][0x210], PT ;
 Instr 2069 @ 0x8150 (33104) - HADD2.F32 R40, R39.H0_H0, -RZ.H0_H0 ;
 Instr 2070 @ 0x8160 (33120) - FSEL R14, R9, c[0x0][0x220], !P3 ;
 Instr 2071 @ 0x8170 (33136) - FFMA R41, R41, R61.reuse, R12 ;
 Instr 2072 @ 0x8180 (33152) - FSETP.GT.AND P3, PT, R8, c[0x0][0x220], PT ;
 Instr 2073 @ 0x8190 (33168) - HADD2.F32 R46, R59.H1_H1, -RZ.H0_H0 ;
 Instr 2074 @ 0x81a0 (33184) - FSEL R19, R44, c[0x0][0x210], P2 ;
 Instr 2075 @ 0x81b0 (33200) - F2F.F16.F32 R16, R16 ;
 Instr 2076 @ 0x81c0 (33216) - FSETP.GEU.AND P2, PT, R18, c[0x0][0x210], PT ;
 Instr 2077 @ 0x81d0 (33232) - HADD2.F32 R44, R39.H1_H1, -RZ.H0_H0 ;
 Instr 2078 @ 0x81e0 (33248) - FSEL R37, R8, c[0x0][0x220], !P3 ;
 Instr 2079 @ 0x81f0 (33264) - FFMA R6, R40, R61, R6 ;
 Instr 2080 @ 0x8200 (33280) - LDS.U.128 R8, [R2.X16+0x1290] ;
 Instr 2081 @ 0x8210 (33296) - FSETP.GT.AND P3, PT, R19, c[0x0][0x220], PT ;
 Instr 2082 @ 0x8220 (33312) - FFMA R7, R7, R3, R46 ;
 Instr 2083 @ 0x8230 (33328) - FSEL R18, R18, c[0x0][0x210], P2 ;
 Instr 2084 @ 0x8240 (33344) - HADD2.F32 R40, R42.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2085 @ 0x8250 (33360) - FSEL R19, R19, c[0x0][0x220], !P3 ;
 Instr 2086 @ 0x8260 (33376) - FFMA R7, R44, R61, R7 ;
 Instr 2087 @ 0x8270 (33392) - FSETP.GEU.AND P2, PT, R17.reuse, c[0x0][0x210], PT ;
 Instr 2088 @ 0x8280 (33408) - HADD2.F32 R42, R42.H1_H1, -RZ.H0_H0 ;
 Instr 2089 @ 0x8290 (33424) - FSETP.GT.AND P3, PT, R18, c[0x0][0x220], PT ;
 Instr 2090 @ 0x82a0 (33440) - F2F.F16.F32 R15, R15 ;
 Instr 2091 @ 0x82b0 (33456) - FSEL R39, R17, c[0x0][0x210], P2 ;
 Instr 2092 @ 0x82c0 (33472) - FSEL R17, R18, c[0x0][0x220], !P3 ;
 Instr 2093 @ 0x82d0 (33488) - HADD2.F32 R18, R58.H1_H1, -RZ.H0_H0 ;
 Instr 2094 @ 0x82e0 (33504) - FSETP.GEU.AND P2, PT, R41, c[0x0][0x210], PT ;
 Instr 2095 @ 0x82f0 (33520) - FSETP.GT.AND P3, PT, R39, c[0x0][0x220], PT ;
 Instr 2096 @ 0x8300 (33536) - F2F.F16.F32 R12, R19 ;
 Instr 2097 @ 0x8310 (33552) - FSEL R41, R41, c[0x0][0x210], P2 ;
 Instr 2098 @ 0x8320 (33568) - FSETP.GEU.AND P2, PT, R36, c[0x0][0x210], PT ;
 Instr 2099 @ 0x8330 (33584) - FFMA R5, R5, R3, R18 ;
 Instr 2100 @ 0x8340 (33600) - FSEL R39, R39, c[0x0][0x220], !P3 ;
 Instr 2101 @ 0x8350 (33616) - FSETP.GT.AND P3, PT, R41.reuse, c[0x0][0x220], PT ;
 Instr 2102 @ 0x8360 (33632) - FFMA R38, R38, R61, R5 ;
 Instr 2103 @ 0x8370 (33648) - FSEL R5, R36, c[0x0][0x210], P2 ;
 Instr 2104 @ 0x8380 (33664) - F2F.F16.F32 R14, R14 ;
 Instr 2105 @ 0x8390 (33680) - FSEL R36, R41, c[0x0][0x220], !P3 ;
 Instr 2106 @ 0x83a0 (33696) - FSETP.GEU.AND P2, PT, R38.reuse, c[0x0][0x210], PT ;
 Instr 2107 @ 0x83b0 (33712) - FSETP.GT.AND P3, PT, R5, c[0x0][0x220], PT ;
 Instr 2108 @ 0x83c0 (33728) - FSEL R38, R38, c[0x0][0x210], P2 ;
 Instr 2109 @ 0x83d0 (33744) - F2F.F16.F32 R19, R39 ;
 Instr 2110 @ 0x83e0 (33760) - FSETP.GEU.AND P2, PT, R6, c[0x0][0x210], PT ;
 Instr 2111 @ 0x83f0 (33776) - FSEL R5, R5, c[0x0][0x220], !P3 ;
 Instr 2112 @ 0x8400 (33792) - FFMA R13, R8, R3.reuse, R13 ;
 Instr 2113 @ 0x8410 (33808) - FSETP.GT.AND P3, PT, R38, c[0x0][0x220], PT ;
 Instr 2114 @ 0x8420 (33824) - FFMA R18, R9, R3, R18 ;
 Instr 2115 @ 0x8430 (33840) - FSEL R6, R6, c[0x0][0x210], P2 ;
 Instr 2116 @ 0x8440 (33856) - FFMA R13, R40, R61.reuse, R13 ;
 Instr 2117 @ 0x8450 (33872) - FSEL R38, R38, c[0x0][0x220], !P3 ;
 Instr 2118 @ 0x8460 (33888) - FFMA R18, R42, R61, R18 ;
 Instr 2119 @ 0x8470 (33904) - FSETP.GEU.AND P2, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 2120 @ 0x8480 (33920) - FFMA R10, R10, R3.reuse, R4 ;
 Instr 2121 @ 0x8490 (33936) - FSETP.GT.AND P3, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 2122 @ 0x84a0 (33952) - HADD2.F32 R4, R43.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 2123 @ 0x84b0 (33968) - FSEL R39, R7, c[0x0][0x210], P2 ;
 Instr 2124 @ 0x84c0 (33984) - FFMA R11, R11, R3, R46 ;
 Instr 2125 @ 0x84d0 (34000) - FSEL R7, R6, c[0x0][0x220], !P3 ;
 Instr 2126 @ 0x84e0 (34016) - F2F.F16.F32 R8, R5 ;
 Instr 2127 @ 0x84f0 (34032) - HADD2.F32 R6, R43.H0_H0, -RZ.H0_H0 ;
 Instr 2128 @ 0x8500 (34048) - FSETP.GEU.AND P2, PT, R13, c[0x0][0x210], PT ;
 Instr 2129 @ 0x8510 (34064) - @P1 IMAD.WIDE R40, R67, R60, c[0x0][0x170] ;
 Instr 2130 @ 0x8520 (34080) - FSETP.GT.AND P3, PT, R39, c[0x0][0x220], PT ;
 Instr 2131 @ 0x8530 (34096) - FSEL R13, R13, c[0x0][0x210], P2 ;
 Instr 2132 @ 0x8540 (34112) - FFMA R4, R4, R61.reuse, R11 ;
 Instr 2133 @ 0x8550 (34128) - FSETP.GEU.AND P2, PT, R18, c[0x0][0x210], PT ;
 Instr 2134 @ 0x8560 (34144) - FFMA R6, R6, R61, R10 ;
 Instr 2135 @ 0x8570 (34160) - FSEL R39, R39, c[0x0][0x220], !P3 ;
 Instr 2136 @ 0x8580 (34176) - F2F.F16.F32 R9, R38 ;
 Instr 2137 @ 0x8590 (34192) - FSEL R5, R18, c[0x0][0x210], P2 ;
 Instr 2138 @ 0x85a0 (34208) - FSETP.GEU.AND P2, PT, R6, c[0x0][0x210], PT ;
 Instr 2139 @ 0x85b0 (34224) - FSETP.GT.AND P3, PT, R13, c[0x0][0x220], PT ;
 Instr 2140 @ 0x85c0 (34240) - FSEL R6, R6, c[0x0][0x210], P2 ;
 Instr 2141 @ 0x85d0 (34256) - F2F.F16.F32 R37, R37 ;
 Instr 2142 @ 0x85e0 (34272) - FSETP.GEU.AND P2, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 2143 @ 0x85f0 (34288) - FSEL R18, R13, c[0x0][0x220], !P3 ;
 Instr 2144 @ 0x8600 (34304) - FSETP.GT.AND P3, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 2145 @ 0x8610 (34320) - FSEL R4, R4, c[0x0][0x210], P2 ;
 Instr 2146 @ 0x8620 (34336) - F2F.F16.F32 R7, R7 ;
 Instr 2147 @ 0x8630 (34352) - FSEL R13, R5, c[0x0][0x220], !P3 ;
 Instr 2148 @ 0x8640 (34368) - FSETP.GT.AND P3, PT, R6, c[0x0][0x220], PT ;
 Instr 2149 @ 0x8650 (34384) - FSETP.GT.AND P2, PT, R4, c[0x0][0x220], PT ;
 Instr 2150 @ 0x8660 (34400) - FSEL R11, R6, c[0x0][0x220], !P3 ;
 Instr 2151 @ 0x8670 (34416) - F2F.F16.F32 R38, R39 ;
 Instr 2152 @ 0x8680 (34432) - FSEL R10, R4, c[0x0][0x220], !P2 ;
 Instr 2153 @ 0x8690 (34448) - PRMT R4, R16, 0x5410, R15 ;
 Instr 2154 @ 0x86a0 (34464) - PRMT R5, R14, 0x5410, R37 ;
 Instr 2155 @ 0x86b0 (34480) - @P0 IMAD.WIDE R14, R55, R60, c[0x0][0x170] ;
 Instr 2156 @ 0x86c0 (34496) - PRMT R6, R8, 0x5410, R9 ;
 Instr 2157 @ 0x86d0 (34512) - F2F.F16.F32 R17, R17 ;
 Instr 2158 @ 0x86e0 (34528) - F2F.F16.F32 R36, R36 ;
 Instr 2159 @ 0x86f0 (34544) - PRMT R7, R7, 0x5410, R38 ;
 Instr 2160 @ 0x8700 (34560) - F2F.F16.F32 R18, R18 ;
 Instr 2161 @ 0x8710 (34576) - @P1 STG.E.128.SYS [R40], R4 ;
 Instr 2162 @ 0x8720 (34592) - F2F.F16.F32 R13, R13 ;
 Instr 2163 @ 0x8730 (34608) - F2F.F16.F32 R11, R11 ;
 Instr 2164 @ 0x8740 (34624) - PRMT R4, R12, 0x5410, R17 ;
 Instr 2165 @ 0x8750 (34640) - PRMT R5, R19, 0x5410, R36 ;
 Instr 2166 @ 0x8760 (34656) - F2F.F16.F32 R10, R10 ;
 Instr 2167 @ 0x8770 (34672) - PRMT R6, R18, 0x5410, R13 ;
 Instr 2168 @ 0x8780 (34688) - PRMT R7, R11, 0x5410, R10 ;
 Instr 2169 @ 0x8790 (34704) - @P0 STG.E.128.SYS [R14], R4 ;
Basic block id 106 - num instructions 2
 Instr 2170 @ 0x87a0 (34720) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2171 @ 0x87b0 (34736) - @!P5 BRA 0x8c40 ;
Basic block id 107 - num instructions 6
 Instr 2172 @ 0x87c0 (34752) - S2R R4, SR_TID.X ;
 Instr 2173 @ 0x87d0 (34768) - ISETP.GE.AND P0, PT, R66, 0x1, PT ;
 Instr 2174 @ 0x87e0 (34784) - IMAD.SHL.U32 R37, R54, 0x80, RZ ;
 Instr 2175 @ 0x87f0 (34800) - SHF.R.S32.HI R36, RZ, 0x1f, R37 ;
 Instr 2176 @ 0x8800 (34816) - IMAD R53, R53, 0x80, R4 ;
 Instr 2177 @ 0x8810 (34832) - @!P0 BRA 0x8b20 ;
Basic block id 108 - num instructions 22
 Instr 2178 @ 0x8820 (34848) - IMAD.MOV.U32 R10, RZ, RZ, R68 ;
 Instr 2179 @ 0x8830 (34864) - LEA R45, P1, R37, R68, 0x6 ;
 Instr 2180 @ 0x8840 (34880) - IMAD.MOV.U32 R11, RZ, RZ, R71 ;
 Instr 2181 @ 0x8850 (34896) - UMOV UR8, URZ ;
 Instr 2182 @ 0x8860 (34912) - IMAD.SHL.U32 R42, R53, 0x10, RZ ;
 Instr 2183 @ 0x8870 (34928) - ULDC.64 UR6, c[0x0][0x2a8] ;
 Instr 2184 @ 0x8880 (34944) - IMAD.WIDE.U32 R8, R37.reuse, 0x70, R10.reuse ;
 Instr 2185 @ 0x8890 (34960) - IADD3 R44, P0, R42.reuse, R45, RZ ;
 Instr 2186 @ 0x88a0 (34976) - IMAD.WIDE.U32 R12, R37, 0x60, R10 ;
 Instr 2187 @ 0x88b0 (34992) - IADD3 R38, P2, R42, R8, RZ ;
 Instr 2188 @ 0x88c0 (35008) - SHF.R.S32.HI R7, RZ, 0x1f, R42 ;
 Instr 2189 @ 0x88d0 (35024) - IMAD.WIDE.U32 R10, R37.reuse, 0x50, R10 ;
 Instr 2190 @ 0x88e0 (35040) - IADD3 R40, P3, R42, R12, RZ ;
 Instr 2191 @ 0x88f0 (35056) - LEA.HI.X R8, R37, R71, R36, 0x6, P1 ;
 Instr 2192 @ 0x8900 (35072) - IMAD R6, R36, 0x60, RZ ;
 Instr 2193 @ 0x8910 (35088) - IADD3 R42, P1, R42, R10, RZ ;
 Instr 2194 @ 0x8920 (35104) - IMAD R5, R36.reuse, 0x70, RZ ;
 Instr 2195 @ 0x8930 (35120) - IMAD R4, R36, 0x50, RZ ;
 Instr 2196 @ 0x8940 (35136) - IADD3.X R41, R7.reuse, R6, R13, P3, !PT ;
 Instr 2197 @ 0x8950 (35152) - IMAD.X R45, R7.reuse, 0x1, R8, P0 ;
 Instr 2198 @ 0x8960 (35168) - IADD3.X R39, R7, R5, R9, P2, !PT ;
 Instr 2199 @ 0x8970 (35184) - IADD3.X R43, R7, R4, R11, P1, !PT ;
Basic block id 109 - num instructions 26
 Instr 2200 @ 0x8980 (35200) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
 Instr 2201 @ 0x8990 (35216) - LDG.E.128.STRONG.GPU R12, [R42.64+UR6] ;
 Instr 2202 @ 0x89a0 (35232) - LDG.E.128.STRONG.GPU R8, [R40.64+UR6] ;
 Instr 2203 @ 0x89b0 (35248) - LDG.E.128.STRONG.GPU R4, [R38.64+UR6] ;
 Instr 2204 @ 0x89c0 (35264) - UIADD3 UR8, UR8, 0x1, URZ ;
 Instr 2205 @ 0x89d0 (35280) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 2206 @ 0x89e0 (35296) - UIADD3 UR6, UP3, UR6, UR4, URZ ;
 Instr 2207 @ 0x89f0 (35312) - ISETP.LE.AND P0, PT, R66, UR8, PT ;
 Instr 2208 @ 0x8a00 (35328) - UIADD3.X UR7, UR7, UR5, URZ, UP3, !UPT ;
 Instr 2209 @ 0x8a10 (35344) - FADD R20, R16, R20 ;
 Instr 2210 @ 0x8a20 (35360) - FADD R21, R17, R21 ;
 Instr 2211 @ 0x8a30 (35376) - FADD R22, R18, R22 ;
 Instr 2212 @ 0x8a40 (35392) - FADD R23, R19, R23 ;
 Instr 2213 @ 0x8a50 (35408) - FADD R24, R12, R24 ;
 Instr 2214 @ 0x8a60 (35424) - FADD R25, R13, R25 ;
 Instr 2215 @ 0x8a70 (35440) - FADD R26, R14, R26 ;
 Instr 2216 @ 0x8a80 (35456) - FADD R27, R15, R27 ;
 Instr 2217 @ 0x8a90 (35472) - FADD R28, R8, R28 ;
 Instr 2218 @ 0x8aa0 (35488) - FADD R29, R9, R29 ;
 Instr 2219 @ 0x8ab0 (35504) - FADD R30, R10, R30 ;
 Instr 2220 @ 0x8ac0 (35520) - FADD R31, R11, R31 ;
 Instr 2221 @ 0x8ad0 (35536) - FADD R32, R4, R32 ;
 Instr 2222 @ 0x8ae0 (35552) - FADD R33, R5, R33 ;
 Instr 2223 @ 0x8af0 (35568) - FADD R34, R6, R34 ;
 Instr 2224 @ 0x8b00 (35584) - FADD R35, R7, R35 ;
 Instr 2225 @ 0x8b10 (35600) - @!P0 BRA 0x8980 ;
Basic block id 110 - num instructions 1
 Instr 2226 @ 0x8b20 (35616) - @P4 BRA 0x8c40 ;
Basic block id 111 - num instructions 17
 Instr 2227 @ 0x8b30 (35632) - LEA R68, P0, R37.reuse, R68, 0x6 ;
 Instr 2228 @ 0x8b40 (35648) - IMAD.SHL.U32 R4, R37.reuse, 0x10, RZ ;
 Instr 2229 @ 0x8b50 (35664) - SHF.L.U64.HI R5, R37.reuse, 0x4, R36.reuse ;
 Instr 2230 @ 0x8b60 (35680) - LEA.HI.X R69, R37, R71, R36, 0x6, P0 ;
 Instr 2231 @ 0x8b70 (35696) - IMAD.WIDE R68, R53, 0x10, R68 ;
 Instr 2232 @ 0x8b80 (35712) - IADD3 R10, P0, R68, c[0x0][0x2a8], RZ ;
 Instr 2233 @ 0x8b90 (35728) - IADD3.X R11, R69, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 2234 @ 0x8ba0 (35744) - LEA R6, P0, R37.reuse, R10.reuse, 0x5 ;
 Instr 2235 @ 0x8bb0 (35760) - IADD3 R8, P1, R4, R10, RZ ;
 Instr 2236 @ 0x8bc0 (35776) - LEA.HI.X R7, R37, R11, R36, 0x5, P0 ;
 Instr 2237 @ 0x8bd0 (35792) - IADD3 R4, P0, R4, R6, RZ ;
 Instr 2238 @ 0x8be0 (35808) - IMAD.X R9, R5.reuse, 0x1, R11, P1 ;
 Instr 2239 @ 0x8bf0 (35824) - STG.E.128.SYS [R10], R20 ;
 Instr 2240 @ 0x8c00 (35840) - IMAD.X R5, R5, 0x1, R7, P0 ;
 Instr 2241 @ 0x8c10 (35856) - STG.E.128.SYS [R8], R24 ;
 Instr 2242 @ 0x8c20 (35872) - STG.E.128.SYS [R6], R28 ;
 Instr 2243 @ 0x8c30 (35888) - STG.E.128.SYS [R4], R32 ;
Basic block id 112 - num instructions 1
 Instr 2244 @ 0x8c40 (35904) - @!P4 BRA 0x9a40 ;
Basic block id 113 - num instructions 223
 Instr 2245 @ 0x8c50 (35920) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 2246 @ 0x8c60 (35936) - CS2R R12, SRZ ;
 Instr 2247 @ 0x8c70 (35952) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 2248 @ 0x8c80 (35968) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2249 @ 0x8c90 (35984) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 2250 @ 0x8ca0 (36000) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2251 @ 0x8cb0 (36016) - ISETP.GE.AND P3, PT, R0, UR15, PT ;
 Instr 2252 @ 0x8cc0 (36032) - ISETP.LT.AND P4, PT, R91, c[0x0][0x3c4], !P3 ;
 Instr 2253 @ 0x8cd0 (36048) - @P2 IMAD.HI.U32 R5, R100, c[0x0][0x3d8], RZ ;
 Instr 2254 @ 0x8ce0 (36064) - @P2 IMAD.HI.U32 R4, R98, c[0x0][0x3d8], RZ ;
 Instr 2255 @ 0x8cf0 (36080) - @P2 SHF.R.U32.HI R5, RZ, c[0x0][0x3dc], R5 ;
 Instr 2256 @ 0x8d00 (36096) - @P2 SHF.R.U32.HI R4, RZ, c[0x0][0x3dc], R4 ;
 Instr 2257 @ 0x8d10 (36112) - @P2 IMAD.MOV R7, RZ, RZ, -R5 ;
 Instr 2258 @ 0x8d20 (36128) - @P2 IMAD R12, R7, c[0x0][0x3c8], R100 ;
 Instr 2259 @ 0x8d30 (36144) - @P2 IMAD.MOV.U32 R100, RZ, RZ, R5 ;
 Instr 2260 @ 0x8d40 (36160) - @P1 IMAD.HI.U32 R11, R12, c[0x0][0x3e0], RZ ;
 Instr 2261 @ 0x8d50 (36176) - IMAD R5, R0, c[0x0][0x254], RZ ;
 Instr 2262 @ 0x8d60 (36192) - @P1 SHF.R.U32.HI R11, RZ, c[0x0][0x3e4], R11 ;
 Instr 2263 @ 0x8d70 (36208) - IMAD.MOV.U32 R0, RZ, RZ, RZ ;
 Instr 2264 @ 0x8d80 (36224) - @P1 IMAD.MOV R7, RZ, RZ, -R11 ;
 Instr 2265 @ 0x8d90 (36240) - @P1 IMAD R13, R7, c[0x0][0x3cc], R12 ;
 Instr 2266 @ 0x8da0 (36256) - @P2 IMAD.MOV R7, RZ, RZ, -R4 ;
 Instr 2267 @ 0x8db0 (36272) - @P0 IMAD.HI.U32 R9, R13, c[0x0][0x3e8], RZ ;
 Instr 2268 @ 0x8dc0 (36288) - @P2 IMAD R8, R7, c[0x0][0x3c8], R98 ;
 Instr 2269 @ 0x8dd0 (36304) - @P0 SHF.R.U32.HI R9, RZ, c[0x0][0x3ec], R9 ;
 Instr 2270 @ 0x8de0 (36320) - @P1 IMAD.MOV.U32 R12, RZ, RZ, R11 ;
 Instr 2271 @ 0x8df0 (36336) - IMAD R7, R100, c[0x0][0x244], R5 ;
 Instr 2272 @ 0x8e00 (36352) - @P0 IMAD.MOV R6, RZ, RZ, -R9 ;
 Instr 2273 @ 0x8e10 (36368) - IMAD R12, R12, c[0x0][0x248], R7 ;
 Instr 2274 @ 0x8e20 (36384) - @P0 IMAD R10, R6, c[0x0][0x1b4], R13 ;
 Instr 2275 @ 0x8e30 (36400) - @P1 IMAD.HI.U32 R6, R8, c[0x0][0x3e0], RZ ;
 Instr 2276 @ 0x8e40 (36416) - @P0 IMAD.MOV.U32 R13, RZ, RZ, R9 ;
 Instr 2277 @ 0x8e50 (36432) - @P1 SHF.R.U32.HI R6, RZ, c[0x0][0x3e4], R6 ;
 Instr 2278 @ 0x8e60 (36448) - @P2 IMAD.MOV.U32 R98, RZ, RZ, R4 ;
 Instr 2279 @ 0x8e70 (36464) - IMAD R13, R13, c[0x0][0x24c], R12 ;
 Instr 2280 @ 0x8e80 (36480) - @P1 IMAD.MOV R7, RZ, RZ, -R6 ;
 Instr 2281 @ 0x8e90 (36496) - IMAD R10, R10, c[0x0][0x250], R13 ;
 Instr 2282 @ 0x8ea0 (36512) - @P1 IMAD R0, R7, c[0x0][0x3cc], R8 ;
 Instr 2283 @ 0x8eb0 (36528) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2284 @ 0x8ec0 (36544) - SEL R37, R10, 0xffffffff, P4 ;
 Instr 2285 @ 0x8ed0 (36560) - @P0 IMAD.HI.U32 R10, R0, c[0x0][0x3e8], RZ ;
 Instr 2286 @ 0x8ee0 (36576) - ISETP.GE.AND P2, PT, R37, RZ, PT ;
 Instr 2287 @ 0x8ef0 (36592) - IMAD R9, R98, c[0x0][0x244], R5 ;
 Instr 2288 @ 0x8f00 (36608) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3ec], R10 ;
 Instr 2289 @ 0x8f10 (36624) - @P1 IMAD.MOV.U32 R8, RZ, RZ, R6 ;
 Instr 2290 @ 0x8f20 (36640) - CS2R R4, SRZ ;
 Instr 2291 @ 0x8f30 (36656) - CS2R R6, SRZ ;
 Instr 2292 @ 0x8f40 (36672) - @P0 IMAD.MOV R11, RZ, RZ, -R10 ;
 Instr 2293 @ 0x8f50 (36688) - IMAD R9, R8, c[0x0][0x248], R9 ;
 Instr 2294 @ 0x8f60 (36704) - @P0 IMAD R12, R11, c[0x0][0x1b4], R0 ;
 Instr 2295 @ 0x8f70 (36720) - @P0 IMAD.MOV.U32 R0, RZ, RZ, R10 ;
 Instr 2296 @ 0x8f80 (36736) - ISETP.LT.AND P3, PT, R90, c[0x0][0x3c4], !P3 ;
 Instr 2297 @ 0x8f90 (36752) - @P2 IMAD.WIDE R14, R37, R60, c[0x0][0x178] ;
 Instr 2298 @ 0x8fa0 (36768) - IMAD R9, R0, c[0x0][0x24c], R9 ;
 Instr 2299 @ 0x8fb0 (36784) - IMAD R9, R12, c[0x0][0x250], R9 ;
 Instr 2300 @ 0x8fc0 (36800) - @P2 LDG.E.128.SYS R4, [R14] ;
 Instr 2301 @ 0x8fd0 (36816) - CS2R R10, SRZ ;
 Instr 2302 @ 0x8fe0 (36832) - SEL R39, R9, 0xffffffff, P3 ;
 Instr 2303 @ 0x8ff0 (36848) - CS2R R8, SRZ ;
 Instr 2304 @ 0x9000 (36864) - ISETP.GE.AND P0, PT, R39, RZ, PT ;
 Instr 2305 @ 0x9010 (36880) - @P0 IMAD.WIDE R12, R39, R60, c[0x0][0x178] ;
 Instr 2306 @ 0x9020 (36896) - @P0 LDG.E.128.SYS R8, [R12] ;
 Instr 2307 @ 0x9030 (36912) - HADD2.F32 R0, R56.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2308 @ 0x9040 (36928) - HADD2.F32 R56, R56.H1_H1, -RZ.H0_H0 ;
 Instr 2309 @ 0x9050 (36944) - STS.64 [R52], R20 ;
 Instr 2310 @ 0x9060 (36960) - STS.64 [R52+0x10], R24 ;
 Instr 2311 @ 0x9070 (36976) - STS.64 [R52+0x900], R22 ;
 Instr 2312 @ 0x9080 (36992) - HADD2.F32 R21, R57.H0_H0, -RZ.H0_H0 ;
 Instr 2313 @ 0x9090 (37008) - STS.64 [R52+0x910], R26 ;
 Instr 2314 @ 0x90a0 (37024) - HADD2.F32 R24, R59.H1_H1, -RZ.H0_H0 ;
 Instr 2315 @ 0x90b0 (37040) - STS.64 [R52+0x40], R28 ;
 Instr 2316 @ 0x90c0 (37056) - STS.64 [R52+0x50], R32 ;
 Instr 2317 @ 0x90d0 (37072) - HADD2.F32 R26, R57.H1_H1, -RZ.H0_H0 ;
 Instr 2318 @ 0x90e0 (37088) - STS.64 [R52+0x940], R30 ;
 Instr 2319 @ 0x90f0 (37104) - STS.64 [R52+0x950], R34 ;
 Instr 2320 @ 0x9100 (37120) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2321 @ 0x9110 (37136) - LDS.U.128 R16, [R2.X16] ;
 Instr 2322 @ 0x9120 (37152) - LDS.U.128 R12, [R2.X16+0x1200] ;
 Instr 2323 @ 0x9130 (37168) - FFMA R16, R16, R3, R0 ;
 Instr 2324 @ 0x9140 (37184) - FFMA R17, R17, R3.reuse, R56 ;
 Instr 2325 @ 0x9150 (37200) - FFMA R18, R18, R3.reuse, R21 ;
 Instr 2326 @ 0x9160 (37216) - FFMA R23, R19, R3.reuse, R26 ;
 Instr 2327 @ 0x9170 (37232) - FFMA R56, R13, R3.reuse, R56 ;
 Instr 2328 @ 0x9180 (37248) - FFMA R12, R12, R3.reuse, R0 ;
 Instr 2329 @ 0x9190 (37264) - FFMA R26, R15, R3, R26 ;
 Instr 2330 @ 0x91a0 (37280) - HADD2.F32 R20, R4.H0_H0, -RZ.H0_H0 ;
 Instr 2331 @ 0x91b0 (37296) - HADD2.F32 R22, R4.H1_H1, -RZ.H0_H0 ;
 Instr 2332 @ 0x91c0 (37312) - HADD2.F32 R30, R5.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2333 @ 0x91d0 (37328) - HADD2.F32 R28, R5.H1_H1, -RZ.H0_H0 ;
 Instr 2334 @ 0x91e0 (37344) - FFMA R16, R20, R61.reuse, R16 ;
 Instr 2335 @ 0x91f0 (37360) - HADD2.F32 R4, R58.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2336 @ 0x9200 (37376) - FFMA R22, R22, R61.reuse, R17 ;
 Instr 2337 @ 0x9210 (37392) - HADD2.F32 R58, R58.H1_H1, -RZ.H0_H0 ;
 Instr 2338 @ 0x9220 (37408) - FFMA R30, R30, R61.reuse, R18 ;
 Instr 2339 @ 0x9230 (37424) - FSETP.GEU.AND P1, PT, R16, c[0x0][0x210], PT ;
 Instr 2340 @ 0x9240 (37440) - FFMA R23, R28, R61, R23 ;
 Instr 2341 @ 0x9250 (37456) - HADD2.F32 R20, R59.H0_H0, -RZ.H0_H0 ;
 Instr 2342 @ 0x9260 (37472) - FSEL R5, R16, c[0x0][0x210], P1 ;
 Instr 2343 @ 0x9270 (37488) - HADD2.F32 R28, R6.H0_H0, -RZ.H0_H0 ;
 Instr 2344 @ 0x9280 (37504) - FSETP.GEU.AND P1, PT, R22.reuse, c[0x0][0x210], PT ;
 Instr 2345 @ 0x9290 (37520) - LDS.U.128 R16, [R2.X16+0x90] ;
 Instr 2346 @ 0x92a0 (37536) - FSETP.GT.AND P3, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 2347 @ 0x92b0 (37552) - FSEL R22, R22, c[0x0][0x210], P1 ;
 Instr 2348 @ 0x92c0 (37568) - FSETP.GEU.AND P1, PT, R30.reuse, c[0x0][0x210], PT ;
 Instr 2349 @ 0x92d0 (37584) - FSEL R5, R5, c[0x0][0x220], !P3 ;
 Instr 2350 @ 0x92e0 (37600) - HADD2.F32 R13, R8.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2351 @ 0x92f0 (37616) - FSEL R30, R30, c[0x0][0x210], P1 ;
 Instr 2352 @ 0x9300 (37632) - HADD2.F32 R8, R8.H1_H1, -RZ.H0_H0 ;
 Instr 2353 @ 0x9310 (37648) - FSETP.GEU.AND P1, PT, R23, c[0x0][0x210], PT ;
 Instr 2354 @ 0x9320 (37664) - FSETP.GT.AND P3, PT, R22.reuse, c[0x0][0x220], PT ;
 Instr 2355 @ 0x9330 (37680) - F2F.F16.F32 R0, R5 ;
 Instr 2356 @ 0x9340 (37696) - FSEL R23, R23, c[0x0][0x210], P1 ;
 Instr 2357 @ 0x9350 (37712) - FFMA R12, R13, R61, R12 ;
 Instr 2358 @ 0x9360 (37728) - FSEL R25, R22, c[0x0][0x220], !P3 ;
 Instr 2359 @ 0x9370 (37744) - FFMA R22, R14, R3, R21 ;
 Instr 2360 @ 0x9380 (37760) - FSETP.GT.AND P3, PT, R30, c[0x0][0x220], PT ;
 Instr 2361 @ 0x9390 (37776) - FFMA R56, R8, R61, R56 ;
 Instr 2362 @ 0x93a0 (37792) - FSETP.GEU.AND P1, PT, R12, c[0x0][0x210], PT ;
 Instr 2363 @ 0x93b0 (37808) - HADD2.F32 R8, R9.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2364 @ 0x93c0 (37824) - FSEL R30, R30, c[0x0][0x220], !P3 ;
 Instr 2365 @ 0x93d0 (37840) - HADD2.F32 R9, R9.H1_H1, -RZ.H0_H0 ;
 Instr 2366 @ 0x93e0 (37856) - FSEL R21, R12, c[0x0][0x210], P1 ;
 Instr 2367 @ 0x93f0 (37872) - F2F.F16.F32 R25, R25 ;
 Instr 2368 @ 0x9400 (37888) - LDS.U.128 R12, [R2.X16+0x1290] ;
 Instr 2369 @ 0x9410 (37904) - FSETP.GT.AND P3, PT, R23, c[0x0][0x220], PT ;
 Instr 2370 @ 0x9420 (37920) - FSETP.GEU.AND P1, PT, R56, c[0x0][0x210], PT ;
 Instr 2371 @ 0x9430 (37936) - FFMA R22, R8, R61.reuse, R22 ;
 Instr 2372 @ 0x9440 (37952) - FSEL R23, R23, c[0x0][0x220], !P3 ;
 Instr 2373 @ 0x9450 (37968) - FFMA R9, R9, R61, R26 ;
 Instr 2374 @ 0x9460 (37984) - FSETP.GT.AND P3, PT, R21.reuse, c[0x0][0x220], PT ;
 Instr 2375 @ 0x9470 (38000) - HADD2.F32 R26, R6.H1_H1, -RZ.H0_H0 ;
 Instr 2376 @ 0x9480 (38016) - FSEL R56, R56, c[0x0][0x210], P1 ;
 Instr 2377 @ 0x9490 (38032) - HADD2.F32 R6, R7.H0_H0, -RZ.H0_H0 ;
 Instr 2378 @ 0x94a0 (38048) - FSETP.GEU.AND P1, PT, R22, c[0x0][0x210], PT ;
 Instr 2379 @ 0x94b0 (38064) - F2F.F16.F32 R5, R30 ;
 Instr 2380 @ 0x94c0 (38080) - FSEL R21, R21, c[0x0][0x220], !P3 ;
 Instr 2381 @ 0x94d0 (38096) - FFMA R16, R16, R3.reuse, R4 ;
 Instr 2382 @ 0x94e0 (38112) - FSETP.GT.AND P3, PT, R56, c[0x0][0x220], PT ;
 Instr 2383 @ 0x94f0 (38128) - FFMA R17, R17, R3, R58 ;
 Instr 2384 @ 0x9500 (38144) - FSEL R22, R22, c[0x0][0x210], P1 ;
 Instr 2385 @ 0x9510 (38160) - FFMA R16, R28, R61.reuse, R16 ;
 Instr 2386 @ 0x9520 (38176) - FSETP.GEU.AND P1, PT, R9, c[0x0][0x210], PT ;
 Instr 2387 @ 0x9530 (38192) - FFMA R17, R26, R61, R17 ;
 Instr 2388 @ 0x9540 (38208) - FSEL R56, R56, c[0x0][0x220], !P3 ;
 Instr 2389 @ 0x9550 (38224) - FFMA R18, R18, R3.reuse, R20 ;
 Instr 2390 @ 0x9560 (38240) - FSETP.GT.AND P3, PT, R22, c[0x0][0x220], PT ;
 Instr 2391 @ 0x9570 (38256) - FFMA R19, R19, R3, R24 ;
 Instr 2392 @ 0x9580 (38272) - FSEL R27, R9, c[0x0][0x210], P1 ;
 Instr 2393 @ 0x9590 (38288) - FFMA R6, R6, R61, R18 ;
 Instr 2394 @ 0x95a0 (38304) - FSETP.GEU.AND P1, PT, R16, c[0x0][0x210], PT ;
 Instr 2395 @ 0x95b0 (38320) - HADD2.F32 R18, R11.H0_H0, -RZ.H0_H0 ;
 Instr 2396 @ 0x95c0 (38336) - FSEL R9, R22, c[0x0][0x220], !P3 ;
 Instr 2397 @ 0x95d0 (38352) - F2F.F16.F32 R8, R23 ;
 Instr 2398 @ 0x95e0 (38368) - HADD2.F32 R22, R7.H1_H1, -RZ.H0_H0 ;
 Instr 2399 @ 0x95f0 (38384) - FSEL R7, R16, c[0x0][0x210], P1 ;
 Instr 2400 @ 0x9600 (38400) - FSETP.GEU.AND P1, PT, R17, c[0x0][0x210], PT ;
 Instr 2401 @ 0x9610 (38416) - FSETP.GT.AND P3, PT, R27, c[0x0][0x220], PT ;
 Instr 2402 @ 0x9620 (38432) - FSEL R17, R17, c[0x0][0x210], P1 ;
 Instr 2403 @ 0x9630 (38448) - FFMA R19, R22, R61, R19 ;
 Instr 2404 @ 0x9640 (38464) - FSETP.GEU.AND P1, PT, R6, c[0x0][0x210], PT ;
 Instr 2405 @ 0x9650 (38480) - FFMA R12, R12, R3.reuse, R4 ;
 Instr 2406 @ 0x9660 (38496) - FSEL R16, R27, c[0x0][0x220], !P3 ;
 Instr 2407 @ 0x9670 (38512) - HADD2.F32 R4, R10.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2408 @ 0x9680 (38528) - FSETP.GT.AND P3, PT, R7, c[0x0][0x220], PT ;
 Instr 2409 @ 0x9690 (38544) - HADD2.F32 R10, R10.H1_H1, -RZ.H0_H0 ;
 Instr 2410 @ 0x96a0 (38560) - FSEL R6, R6, c[0x0][0x210], P1 ;
 Instr 2411 @ 0x96b0 (38576) - FFMA R58, R13, R3.reuse, R58 ;
 Instr 2412 @ 0x96c0 (38592) - FSETP.GEU.AND P1, PT, R19, c[0x0][0x210], PT ;
 Instr 2413 @ 0x96d0 (38608) - FFMA R13, R14, R3, R20 ;
 Instr 2414 @ 0x96e0 (38624) - FSEL R7, R7, c[0x0][0x220], !P3 ;
 Instr 2415 @ 0x96f0 (38640) - FFMA R4, R4, R61.reuse, R12 ;
 Instr 2416 @ 0x9700 (38656) - FSETP.GT.AND P3, PT, R17, c[0x0][0x220], PT ;
 Instr 2417 @ 0x9710 (38672) - FFMA R58, R10, R61.reuse, R58 ;
 Instr 2418 @ 0x9720 (38688) - FSEL R19, R19, c[0x0][0x210], P1 ;
 Instr 2419 @ 0x9730 (38704) - HADD2.F32 R14, R11.H1_H1, -RZ.H0_H0 ;
 Instr 2420 @ 0x9740 (38720) - FSETP.GEU.AND P1, PT, R4, c[0x0][0x210], PT ;
 Instr 2421 @ 0x9750 (38736) - FFMA R13, R18, R61, R13 ;
 Instr 2422 @ 0x9760 (38752) - FSEL R17, R17, c[0x0][0x220], !P3 ;
 Instr 2423 @ 0x9770 (38768) - FFMA R15, R15, R3, R24 ;
 Instr 2424 @ 0x9780 (38784) - FSETP.GT.AND P3, PT, R6, c[0x0][0x220], PT ;
 Instr 2425 @ 0x9790 (38800) - F2F.F16.F32 R7, R7 ;
 Instr 2426 @ 0x97a0 (38816) - FSEL R4, R4, c[0x0][0x210], P1 ;
 Instr 2427 @ 0x97b0 (38832) - FFMA R14, R14, R61, R15 ;
 Instr 2428 @ 0x97c0 (38848) - FSETP.GEU.AND P1, PT, R58, c[0x0][0x210], PT ;
 Instr 2429 @ 0x97d0 (38864) - FSEL R6, R6, c[0x0][0x220], !P3 ;
 Instr 2430 @ 0x97e0 (38880) - FSETP.GT.AND P3, PT, R19, c[0x0][0x220], PT ;
 Instr 2431 @ 0x97f0 (38896) - F2F.F16.F32 R12, R17 ;
 Instr 2432 @ 0x9800 (38912) - FSEL R58, R58, c[0x0][0x210], P1 ;
 Instr 2433 @ 0x9810 (38928) - FSETP.GEU.AND P1, PT, R13, c[0x0][0x210], PT ;
 Instr 2434 @ 0x9820 (38944) - FSEL R19, R19, c[0x0][0x220], !P3 ;
 Instr 2435 @ 0x9830 (38960) - FSETP.GT.AND P3, PT, R4, c[0x0][0x220], PT ;
 Instr 2436 @ 0x9840 (38976) - F2F.F16.F32 R10, R6 ;
 Instr 2437 @ 0x9850 (38992) - FSEL R3, R13, c[0x0][0x210], P1 ;
 Instr 2438 @ 0x9860 (39008) - FSETP.GEU.AND P1, PT, R14, c[0x0][0x210], PT ;
 Instr 2439 @ 0x9870 (39024) - FSEL R18, R4, c[0x0][0x220], !P3 ;
 Instr 2440 @ 0x9880 (39040) - FSETP.GT.AND P3, PT, R58, c[0x0][0x220], PT ;
 Instr 2441 @ 0x9890 (39056) - F2F.F16.F32 R11, R19 ;
 Instr 2442 @ 0x98a0 (39072) - FSEL R4, R14, c[0x0][0x210], P1 ;
 Instr 2443 @ 0x98b0 (39088) - FSEL R13, R58, c[0x0][0x220], !P3 ;
 Instr 2444 @ 0x98c0 (39104) - FSETP.GT.AND P3, PT, R3, c[0x0][0x220], PT ;
 Instr 2445 @ 0x98d0 (39120) - FSETP.GT.AND P1, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 2446 @ 0x98e0 (39136) - F2F.F16.F32 R2, R21 ;
 Instr 2447 @ 0x98f0 (39152) - FSEL R14, R3, c[0x0][0x220], !P3 ;
 Instr 2448 @ 0x9900 (39168) - FSEL R3, R4, c[0x0][0x220], !P1 ;
 Instr 2449 @ 0x9910 (39184) - PRMT R6, R7, 0x5410, R12 ;
 Instr 2450 @ 0x9920 (39200) - PRMT R4, R0, 0x5410, R25 ;
 Instr 2451 @ 0x9930 (39216) - F2F.F16.F32 R23, R56 ;
 Instr 2452 @ 0x9940 (39232) - @P2 IMAD.WIDE R20, R37, R60, c[0x0][0x170] ;
 Instr 2453 @ 0x9950 (39248) - PRMT R5, R5, 0x5410, R8 ;
 Instr 2454 @ 0x9960 (39264) - PRMT R7, R10, 0x5410, R11 ;
 Instr 2455 @ 0x9970 (39280) - @P0 IMAD.WIDE R60, R39, R60, c[0x0][0x170] ;
 Instr 2456 @ 0x9980 (39296) - F2F.F16.F32 R9, R9 ;
 Instr 2457 @ 0x9990 (39312) - @P2 STG.E.128.SYS [R20], R4 ;
 Instr 2458 @ 0x99a0 (39328) - F2F.F16.F32 R16, R16 ;
 Instr 2459 @ 0x99b0 (39344) - PRMT R8, R2, 0x5410, R23 ;
 Instr 2460 @ 0x99c0 (39360) - F2F.F16.F32 R18, R18 ;
 Instr 2461 @ 0x99d0 (39376) - F2F.F16.F32 R13, R13 ;
 Instr 2462 @ 0x99e0 (39392) - PRMT R9, R9, 0x5410, R16 ;
 Instr 2463 @ 0x99f0 (39408) - F2F.F16.F32 R14, R14 ;
 Instr 2464 @ 0x9a00 (39424) - F2F.F16.F32 R3, R3 ;
 Instr 2465 @ 0x9a10 (39440) - PRMT R10, R18, 0x5410, R13 ;
 Instr 2466 @ 0x9a20 (39456) - PRMT R11, R14, 0x5410, R3 ;
 Instr 2467 @ 0x9a30 (39472) - @P0 STG.E.128.SYS [R60], R8 ;
Basic block id 114 - num instructions 4
 Instr 2468 @ 0x9a40 (39488) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
 Instr 2469 @ 0x9a50 (39504) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2470 @ 0x9a60 (39520) - BSSY B0, 0x9bd0 ;
 Instr 2471 @ 0x9a70 (39536) - @P0 BRA 0x9bc0 ;
Basic block id 115 - num instructions 4
 Instr 2472 @ 0x9a80 (39552) - S2R R0, SR_TID.X ;
 Instr 2473 @ 0x9a90 (39568) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2474 @ 0x9aa0 (39584) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 2475 @ 0x9ab0 (39600) - @P0 BRA 0x9bc0 ;
Basic block id 116 - num instructions 4
 Instr 2476 @ 0x9ac0 (39616) - MEMBAR.SC.GPU ;
 Instr 2477 @ 0x9ad0 (39632) - ERRBAR;
 Instr 2478 @ 0x9ae0 (39648) - CCTL.IVALL ;
 Instr 2479 @ 0x9af0 (39664) - @P6 BRA 0x9b60 ;
Basic block id 117 - num instructions 6
 Instr 2480 @ 0x9b00 (39680) - S2R R0, SR_LANEID ;
 Instr 2481 @ 0x9b10 (39696) - VOTEU.ANY UR5, UPT, PT ;
 Instr 2482 @ 0x9b20 (39712) - UFLO.U32 UR4, UR5 ;
 Instr 2483 @ 0x9b30 (39728) - POPC R3, UR5 ;
 Instr 2484 @ 0x9b40 (39744) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 2485 @ 0x9b50 (39760) - @P0 RED.E.ADD.STRONG.GPU [R64], R3 ;
Basic block id 118 - num instructions 6
 Instr 2486 @ 0x9b60 (39776) - S2R R0, SR_LANEID ;
 Instr 2487 @ 0x9b70 (39792) - VOTEU.ANY UR5, UPT, PT ;
 Instr 2488 @ 0x9b80 (39808) - UFLO.U32 UR4, UR5 ;
 Instr 2489 @ 0x9b90 (39824) - POPC R3, UR5 ;
 Instr 2490 @ 0x9ba0 (39840) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 2491 @ 0x9bb0 (39856) - @P0 RED.E.ADD.STRONG.GPU [R62], R3 ;
Basic block id 119 - num instructions 1
 Instr 2492 @ 0x9bc0 (39872) - BSYNC B0 ;
Basic block id 120 - num instructions 2
 Instr 2493 @ 0x9bd0 (39888) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2494 @ 0x9be0 (39904) - EXIT ;
Basic block id 121 - num instructions 3
 Instr 2495 @ 0x9bf0 (39920) - WARPSYNC R37 ;
 Instr 2496 @ 0x9c00 (39936) - MOV R37, 0x0 ;
 Instr 2497 @ 0x9c10 (39952) - RET.REL.NODEC R36 0x0 ;
Basic block id 122 - num instructions 1
 Instr 2498 @ 0x9c20 (39968) - BRA 0x9c20;
inspecting sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - number basic blocks 123
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 8 @ 0x80 (128) - UMOV UR11, 0xffffffff ;
Inject count_instr before - Instr 23 @ 0x170 (368) - MOV R2, UR10 ;
Inject count_instr before - Instr 25 @ 0x190 (400) - IMAD.U32 R0, RZ, RZ, UR8 ;
Inject count_instr before - Instr 29 @ 0x1d0 (464) - UIADD3 UR8, UR8, -0x1, URZ ;
Inject count_instr before - Instr 40 @ 0x280 (640) - ULOP3.LUT UR9, UR11, UR6, URZ, 0xc0, !UPT ;
Inject count_instr before - Instr 45 @ 0x2d0 (720) - ULOP3.LUT UR8, UR11, UR6, URZ, 0xc0, !UPT ;
Inject count_instr before - Instr 52 @ 0x340 (832) - UISETP.NE.AND UP0, UPT, UR5, URZ, UPT ;
Inject count_instr before - Instr 55 @ 0x370 (880) - S2R R72, SR_TID.X ;
Inject count_instr before - Instr 302 @ 0x12e0 (4832) - IADD3 R43, R41, -0x2, RZ ;
Inject count_instr before - Instr 306 @ 0x1320 (4896) - IADD3 R44, R41, -0x1, RZ ;
Inject count_instr before - Instr 309 @ 0x1350 (4944) - IMAD.U32 R43, RZ, RZ, UR11 ;
Inject count_instr before - Instr 390 @ 0x1860 (6240) - IMAD.MOV.U32 R41, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 394 @ 0x18a0 (6304) - ULDC UR5, c[0x0][0x3a4] ;
Inject count_instr before - Instr 411 @ 0x19b0 (6576) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x620] ;
Inject count_instr before - Instr 435 @ 0x1b30 (6960) - MOV R57, c[0x0][0x1d0] ;
Inject count_instr before - Instr 438 @ 0x1b60 (7008) - IADD3 R2, R57.reuse, -0x2, RZ ;
Inject count_instr before - Instr 444 @ 0x1bc0 (7104) - IMAD R41, R73, R42, -c[0x0][0x264] ;
Inject count_instr before - Instr 451 @ 0x1c30 (7216) - IMAD.U32 R42, RZ, RZ, UR11 ;
Inject count_instr before - Instr 533 @ 0x2150 (8528) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 535 @ 0x2170 (8560) - ULDC UR5, c[0x0][0x3a8] ;
Inject count_instr before - Instr 551 @ 0x2270 (8816) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x624] ;
Inject count_instr before - Instr 575 @ 0x23f0 (9200) - MOV R0, c[0x0][0x1d4] ;
Inject count_instr before - Instr 578 @ 0x2420 (9248) - IADD3 R2, R0.reuse, -0x2, RZ ;
Inject count_instr before - Instr 584 @ 0x2480 (9344) - IADD3 R49, R0, -R53, RZ ;
Inject count_instr before - Instr 585 @ 0x2490 (9360) - IMAD R2, R50.reuse, c[0x0][0x288], R39 ;
Inject count_instr before - Instr 661 @ 0x2950 (10576) - ISETP.NE.AND P0, PT, R53, RZ, PT ;
Inject count_instr before - Instr 663 @ 0x2970 (10608) - IMAD R3, R50, c[0x0][0x288], RZ ;
Inject count_instr before - Instr 673 @ 0x2a10 (10768) - IMAD.MOV.U32 R37, RZ, RZ, c[0x0][0x628] ;
Inject count_instr before - Instr 696 @ 0x2b80 (11136) - ULDC.U8 UR4, c[0x0][0x28c] ;
Inject count_instr before - Instr 746 @ 0x2ea0 (11936) - UMOV UR5, 0x2 ;
Inject count_instr before - Instr 822 @ 0x3360 (13152) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 828 @ 0x33c0 (13248) - IMAD.WIDE R120, R120, 0x2, RZ ;
Inject count_instr before - Instr 839 @ 0x3470 (13424) - HMMA.1688.F32 R4, R2, R36, R4 ;
Inject count_instr before - Instr 1012 @ 0x3f40 (16192) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
Inject count_instr before - Instr 1049 @ 0x4190 (16784) - ISETP.GE.AND P0, PT, R0, c[0x0][0x320], PT ;
Inject count_instr before - Instr 1053 @ 0x41d0 (16848) - SHF.R.S32.HI R41, RZ, 0x1f, R0 ;
Inject count_instr before - Instr 1059 @ 0x4230 (16944) - CS2R R56, SRZ ;
Inject count_instr before - Instr 1061 @ 0x4250 (16976) - BSYNC B0 ;
Inject count_instr before - Instr 1066 @ 0x42a0 (17056) - S2R R36, SR_CTAID.Z ;
Inject count_instr before - Instr 1077 @ 0x4350 (17232) - S2R R36, SR_CTAID.Z ;
Inject count_instr before - Instr 1096 @ 0x4480 (17536) - ISETP.NE.AND P0, PT, R38, 0x1, PT ;
Inject count_instr before - Instr 1103 @ 0x44f0 (17648) - IMAD.MOV.U32 R40, RZ, RZ, c[0x0][0x298] ;
Inject count_instr before - Instr 1108 @ 0x4540 (17728) - ISETP.EQ.AND P0, PT, R40, 0x1, PT ;
Inject count_instr before - Instr 1112 @ 0x4580 (17792) - IABS R41, c[0x0][0x294] ;
Inject count_instr before - Instr 1147 @ 0x47b0 (18352) - LDG.E.STRONG.GPU R36, [R68] ;
Inject count_instr before - Instr 1151 @ 0x47f0 (18416) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 1156 @ 0x4840 (18496) - BRA 0x47f0 ;
Inject count_instr before - Instr 1157 @ 0x4850 (18512) - BSYNC B0 ;
Inject count_instr before - Instr 1159 @ 0x4870 (18544) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 1162 @ 0x48a0 (18592) - NOP ;
Inject count_instr before - Instr 1167 @ 0x48f0 (18672) - ISETP.NE.AND P0, PT, R37, RZ, PT ;
Inject count_instr before - Instr 1175 @ 0x4970 (18800) - LDG.E.STRONG.GPU R36, [R66] ;
Inject count_instr before - Instr 1179 @ 0x49b0 (18864) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 1184 @ 0x4a00 (18944) - BRA 0x49b0 ;
Inject count_instr before - Instr 1185 @ 0x4a10 (18960) - BSYNC B0 ;
Inject count_instr before - Instr 1187 @ 0x4a30 (18992) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 1190 @ 0x4a60 (19040) - NOP ;
Inject count_instr before - Instr 1195 @ 0x4ab0 (19120) - MOV R36, c[0x0][0x290] ;
Inject count_instr before - Instr 1206 @ 0x4b60 (19296) - S2R R78, SR_TID.X ;
Inject count_instr before - Instr 1212 @ 0x4bc0 (19392) - IMAD.SHL.U32 R37, R78, 0x10, RZ ;
Inject count_instr before - Instr 1231 @ 0x4cf0 (19696) - MOV R48, R76 ;
Inject count_instr before - Instr 1270 @ 0x4f60 (20320) - @P0 BRA 0x5080 ;
Inject count_instr before - Instr 1271 @ 0x4f70 (20336) - IMAD.MOV.U32 R38, RZ, RZ, R62 ;
Inject count_instr before - Instr 1288 @ 0x5080 (20608) - @!P0 BRA 0x5c20 ;
Inject count_instr before - Instr 1289 @ 0x5090 (20624) - STS.64 [R52], R4 ;
Inject count_instr before - Instr 1474 @ 0x5c20 (23584) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 1476 @ 0x5c40 (23616) - S2R R4, SR_TID.X ;
Inject count_instr before - Instr 1482 @ 0x5ca0 (23712) - IMAD.MOV.U32 R12, RZ, RZ, R62 ;
Inject count_instr before - Instr 1504 @ 0x5e00 (24064) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
Inject count_instr before - Instr 1530 @ 0x5fa0 (24480) - @P0 BRA 0x60c0 ;
Inject count_instr before - Instr 1531 @ 0x5fb0 (24496) - LEA R62, P1, R37.reuse, R62, 0x6 ;
Inject count_instr before - Instr 1548 @ 0x60c0 (24768) - @!P0 BRA 0x6c60 ;
Inject count_instr before - Instr 1549 @ 0x60d0 (24784) - STS.64 [R52], R20 ;
Inject count_instr before - Instr 1734 @ 0x6c60 (27744) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
Inject count_instr before - Instr 1736 @ 0x6c80 (27776) - S2R R0, SR_TID.X ;
Inject count_instr before - Instr 1742 @ 0x6ce0 (27872) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 1744 @ 0x6d00 (27904) - CCTL.IVALL ;
Inject count_instr before - Instr 1746 @ 0x6d20 (27936) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 1752 @ 0x6d80 (28032) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 1758 @ 0x6de0 (28128) - BSYNC B0 ;
Inject count_instr before - Instr 1760 @ 0x6e00 (28160) - ISETP.NE.AND P0, PT, R38, 0x1, PT ;
Inject count_instr before - Instr 1767 @ 0x6e70 (28272) - IMAD.MOV.U32 R40, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 1772 @ 0x6ec0 (28352) - MOV R40, 0x1 ;
Inject count_instr before - Instr 1777 @ 0x6f10 (28432) - IABS R41, c[0x0][0x294] ;
Inject count_instr before - Instr 1812 @ 0x7140 (28992) - LDG.E.STRONG.GPU R36, [R64] ;
Inject count_instr before - Instr 1816 @ 0x7180 (29056) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 1821 @ 0x71d0 (29136) - BRA 0x7180 ;
Inject count_instr before - Instr 1822 @ 0x71e0 (29152) - BSYNC B0 ;
Inject count_instr before - Instr 1824 @ 0x7200 (29184) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 1827 @ 0x7230 (29232) - NOP ;
Inject count_instr before - Instr 1832 @ 0x7280 (29312) - ISETP.NE.AND P0, PT, R37, RZ, PT ;
Inject count_instr before - Instr 1840 @ 0x7300 (29440) - LDG.E.STRONG.GPU R36, [R62] ;
Inject count_instr before - Instr 1844 @ 0x7340 (29504) - VOTE.ANY R36, PT, PT ;
Inject count_instr before - Instr 1849 @ 0x7390 (29584) - BRA 0x7340 ;
Inject count_instr before - Instr 1850 @ 0x73a0 (29600) - BSYNC B0 ;
Inject count_instr before - Instr 1852 @ 0x73c0 (29632) - MOV R37, 0xffffffff ;
Inject count_instr before - Instr 1855 @ 0x73f0 (29680) - NOP ;
Inject count_instr before - Instr 1860 @ 0x7440 (29760) - MOV R60, 0x2 ;
Inject count_instr before - Instr 1871 @ 0x74f0 (29936) - S2R R72, SR_TID.X ;
Inject count_instr before - Instr 1877 @ 0x7550 (30032) - IMAD.SHL.U32 R37, R72, 0x10, RZ ;
Inject count_instr before - Instr 1896 @ 0x7680 (30336) - LDG.E.128.STRONG.GPU R48, [R80] ;
Inject count_instr before - Instr 1927 @ 0x7870 (30832) - @P4 BRA 0x7990 ;
Inject count_instr before - Instr 1928 @ 0x7880 (30848) - IMAD.MOV.U32 R38, RZ, RZ, R68 ;
Inject count_instr before - Instr 1945 @ 0x7990 (31120) - @!P4 BRA 0x87a0 ;
Inject count_instr before - Instr 1946 @ 0x79a0 (31136) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 2170 @ 0x87a0 (34720) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 2172 @ 0x87c0 (34752) - S2R R4, SR_TID.X ;
Inject count_instr before - Instr 2178 @ 0x8820 (34848) - IMAD.MOV.U32 R10, RZ, RZ, R68 ;
Inject count_instr before - Instr 2200 @ 0x8980 (35200) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
Inject count_instr before - Instr 2226 @ 0x8b20 (35616) - @P4 BRA 0x8c40 ;
Inject count_instr before - Instr 2227 @ 0x8b30 (35632) - LEA R68, P0, R37.reuse, R68, 0x6 ;
Inject count_instr before - Instr 2244 @ 0x8c40 (35904) - @!P4 BRA 0x9a40 ;
Inject count_instr before - Instr 2245 @ 0x8c50 (35920) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 2468 @ 0x9a40 (39488) - ISETP.NE.AND P0, PT, RZ, UR9, PT ;
Inject count_instr before - Instr 2472 @ 0x9a80 (39552) - S2R R0, SR_TID.X ;
Inject count_instr before - Instr 2476 @ 0x9ac0 (39616) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 2480 @ 0x9b00 (39680) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 2486 @ 0x9b60 (39776) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 2492 @ 0x9bc0 (39872) - BSYNC B0 ;
Inject count_instr before - Instr 2493 @ 0x9bd0 (39888) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 2495 @ 0x9bf0 (39920) - WARPSYNC R37 ;
Inject count_instr before - Instr 2498 @ 0x9c20 (39968) - BRA 0x9c20;
kernel 196 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 32,  kernel instructions 521289, total instructions 25611887
kernel 197 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 44736, total instructions 25656623
kernel 198 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 432, total instructions 25657055
kernel 199 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 660, total instructions 25657715
kernel 200 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 256,  kernel instructions 64512, total instructions 25722227
kernel 201 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 100,  kernel instructions 76104, total instructions 25798331
kernel 202 - sm75_xmma_fprop_implicit_gemm_indexed_wo_smem_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x32x64_stage1_warpsize4x1x1_g1_tensor16x8x8_alignc8_execute_kernel__5x_cudnn - #thread-blocks 16,  kernel instructions 61680, total instructions 25860011
kernel 203 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 44736, total instructions 25904747
kernel 204 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 432, total instructions 25905179
kernel 205 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 660, total instructions 25905839
kernel 206 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 256,  kernel instructions 64512, total instructions 25970351
kernel 207 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 49,  kernel instructions 10584, total instructions 25980935
kernel 208 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 49,  kernel instructions 11760, total instructions 25992695
kernel 209 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 42488, total instructions 26035183
kernel 210 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 2048,  kernel instructions 2213888, total instructions 28249071
kernel 211 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 32,  kernel instructions 523488, total instructions 28772559
kernel 212 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 44736, total instructions 28817295
kernel 213 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 432, total instructions 28817727
kernel 214 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 660, total instructions 28818387
kernel 215 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 256,  kernel instructions 64512, total instructions 28882899
kernel 216 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 49,  kernel instructions 11760, total instructions 28894659
kernel 217 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 42488, total instructions 28937147
kernel 218 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 2048,  kernel instructions 2213888, total instructions 31151035
kernel 219 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 32,  kernel instructions 521262, total instructions 31672297
kernel 220 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 44736, total instructions 31717033
kernel 221 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 432, total instructions 31717465
kernel 222 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 660, total instructions 31718125
kernel 223 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 256,  kernel instructions 64512, total instructions 31782637
kernel 224 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 49,  kernel instructions 10584, total instructions 31793221
kernel 225 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 49,  kernel instructions 11760, total instructions 31804981
kernel 226 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 42488, total instructions 31847469
kernel 227 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 4096,  kernel instructions 4427776, total instructions 36275245
kernel 228 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x32x64_stage1_warpsize2x1x2_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 80,  kernel instructions 585622, total instructions 36860867
kernel 229 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 29184, total instructions 36890051
kernel 230 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 768, total instructions 36890819
kernel 231 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 708, total instructions 36891527
kernel 232 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 512,  kernel instructions 77824, total instructions 36969351
kernel 233 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 25,  kernel instructions 6220, total instructions 36975571
kernel 234 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 27920, total instructions 37003491
kernel 235 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 8192,  kernel instructions 8687616, total instructions 45691107
kernel 236 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 32,  kernel instructions 518126, total instructions 46209233
kernel 237 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 29184, total instructions 46238417
kernel 238 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 768, total instructions 46239185
kernel 239 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 708, total instructions 46239893
kernel 240 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 512,  kernel instructions 77824, total instructions 46317717
kernel 241 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 56,  kernel instructions 42488, total instructions 46360205
Function sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x128x32_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn
Basic block id 0 - num instructions 9
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2UR UR5, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x310], PT ;
 Instr 3 @ 0x30 (48) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x318], PT ;
 Instr 4 @ 0x40 (64) - S2UR UR4, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - S2R R2, SR_CTAID.Z ;
 Instr 6 @ 0x60 (96) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 7 @ 0x70 (112) - IMAD.U32 R200, RZ, RZ, UR4 ;
 Instr 8 @ 0x80 (128) - @!P0 BRA 0x330 ;
Basic block id 1 - num instructions 14
 Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R7, RZ, RZ, -0x1 ;
 Instr 10 @ 0xa0 (160) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x344] ;
 Instr 11 @ 0xb0 (176) - IMAD.MOV.U32 R9, RZ, RZ, 0x1 ;
 Instr 12 @ 0xc0 (192) - SHF.L.U32 R7, R7, c[0x0][0x648], RZ ;
 Instr 13 @ 0xd0 (208) - SEL R8, R4, c[0x0][0x340], !P1 ;
 Instr 14 @ 0xe0 (224) - LOP3.LUT R3, R200, R7, RZ, 0xf3, !PT ;
 Instr 15 @ 0xf0 (240) - SHF.L.U32 R9, R9, c[0x0][0x648], RZ ;
 Instr 16 @ 0x100 (256) - ISETP.GE.U32.AND P0, PT, R3, R8, PT ;
 Instr 17 @ 0x110 (272) - LOP3.LUT P2, RZ, R9, R200, RZ, 0xc0, !PT ;
 Instr 18 @ 0x120 (288) - IMAD.MOV.U32 R9, RZ, RZ, c[0x0][0x648] ;
 Instr 19 @ 0x130 (304) - SEL R4, R4, c[0x0][0x340], P1 ;
 Instr 20 @ 0x140 (320) - LOP3.LUT R7, RZ, R7, RZ, 0x33, !PT ;
 Instr 21 @ 0x150 (336) - SEL R6, RZ, 0x1, !P2 ;
 Instr 22 @ 0x160 (352) - @!P0 BRA 0x240 ;
Basic block id 2 - num instructions 1
 Instr 23 @ 0x170 (368) - MOV R0, 0x1 ;
Basic block id 3 - num instructions 3
 Instr 24 @ 0x180 (384) - ISETP.NE.AND P2, PT, R3, R8, PT ;
 Instr 25 @ 0x190 (400) - ISETP.EQ.AND P0, PT, R9, 0x2, PT ;
 Instr 26 @ 0x1a0 (416) - @!P2 BRA P0, 0x290 ;
Basic block id 4 - num instructions 9
 Instr 27 @ 0x1b0 (432) - IADD3 R9, R9, -0x1, RZ ;
 Instr 28 @ 0x1c0 (448) - SHF.R.U32.HI R7, RZ, 0x1, R7 ;
 Instr 29 @ 0x1d0 (464) - SHF.L.U32 R3, R0, R9, RZ ;
 Instr 30 @ 0x1e0 (480) - ISETP.NE.AND P2, PT, R6, RZ, PT ;
 Instr 31 @ 0x1f0 (496) - LOP3.LUT P3, RZ, R3, R200.reuse, RZ, 0xc0, !PT ;
 Instr 32 @ 0x200 (512) - LOP3.LUT R3, R7, R200, RZ, 0xfc, !PT ;
 Instr 33 @ 0x210 (528) - ISETP.GE.U32.AND P0, PT, R3, R8, PT ;
 Instr 34 @ 0x220 (544) - @P3 SEL R6, RZ, 0x1, P2 ;
 Instr 35 @ 0x230 (560) - @P0 BRA 0x180 ;
Basic block id 5 - num instructions 5
 Instr 36 @ 0x240 (576) - LOP3.LUT R0, R7, R200, RZ, 0xc0, !PT ;
 Instr 37 @ 0x250 (592) - IMAD R0, R0, R4, R5 ;
 Instr 38 @ 0x260 (608) - LOP3.LUT R200, R200, R7, R0.reuse, 0xb8, !PT ;
 Instr 39 @ 0x270 (624) - SHF.R.U32.HI R9, RZ, R9, R0 ;
 Instr 40 @ 0x280 (640) - BRA 0x2f0 ;
Basic block id 6 - num instructions 6
 Instr 41 @ 0x290 (656) - LOP3.LUT R0, R7, R200, RZ, 0xc0, !PT ;
 Instr 42 @ 0x2a0 (672) - LOP3.LUT R7, R200, R7, RZ, 0x30, !PT ;
 Instr 43 @ 0x2b0 (688) - IMAD R0, R0, R4, R5 ;
 Instr 44 @ 0x2c0 (704) - IMAD.WIDE.U32 R8, R0.reuse, 0x55555556, RZ ;
 Instr 45 @ 0x2d0 (720) - IADD3 R200, R0, R7, RZ ;
 Instr 46 @ 0x2e0 (736) - IMAD R200, R9, -0x3, R200 ;
Basic block id 7 - num instructions 4
 Instr 47 @ 0x2f0 (752) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 48 @ 0x300 (768) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 49 @ 0x310 (784) - LOP3.LUT R3, RZ, R5, RZ, 0x33, !PT ;
 Instr 50 @ 0x320 (800) - @P0 IMAD.IADD R5, R3, 0x1, R4 ;
Basic block id 8 - num instructions 291
 Instr 51 @ 0x330 (816) - S2R R0, SR_TID.X ;
 Instr 52 @ 0x340 (832) - UMOV UR12, 0x1 ;
 Instr 53 @ 0x350 (848) - SEL R201, R5, R200, !P1 ;
 Instr 54 @ 0x360 (864) - ULDC.64 UR4, c[0x0][0x3c8] ;
 Instr 55 @ 0x370 (880) - SEL R200, R200, R5, !P1 ;
 Instr 56 @ 0x380 (896) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 57 @ 0x390 (912) - IMAD.MOV.U32 R208, RZ, RZ, c[0x0][0x1c8] ;
 Instr 58 @ 0x3a0 (928) - MOV R135, RZ ;
 Instr 59 @ 0x3b0 (944) - IMAD.SHL.U32 R201, R201, 0x80, RZ ;
 Instr 60 @ 0x3c0 (960) - SHF.L.U32 R200, R200, 0x7, RZ ;
 Instr 61 @ 0x3d0 (976) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 62 @ 0x3e0 (992) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 63 @ 0x3f0 (1008) - UISETP.NE.AND UP0, UPT, UR12, UR5, UPT ;
 Instr 64 @ 0x400 (1024) - ISETP.GT.AND P1, PT, R208.reuse, 0x1, PT ;
 Instr 65 @ 0x410 (1040) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 66 @ 0x420 (1056) - ULDC UR4, c[0x0][0x1b4] ;
 Instr 67 @ 0x430 (1072) - IMAD R207, R208, c[0x0][0x1a8], RZ ;
 Instr 68 @ 0x440 (1088) - CS2R R24, SRZ ;
 Instr 69 @ 0x450 (1104) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 70 @ 0x460 (1120) - CS2R R26, SRZ ;
 Instr 71 @ 0x470 (1136) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 72 @ 0x480 (1152) - CS2R R28, SRZ ;
 Instr 73 @ 0x490 (1168) - IMAD.MOV.U32 R141, RZ, RZ, RZ ;
 Instr 74 @ 0x4a0 (1184) - CS2R R30, SRZ ;
 Instr 75 @ 0x4b0 (1200) - SHF.R.S32.HI R3, RZ, 0x1f, R0 ;
 Instr 76 @ 0x4c0 (1216) - IMAD.SHL.U32 R164, R0.reuse, 0x4, RZ ;
 Instr 77 @ 0x4d0 (1232) - LOP3.LUT R7, R0, 0x6, RZ, 0xc0, !PT ;
 Instr 78 @ 0x4e0 (1248) - IMAD.MOV.U32 R132, RZ, RZ, RZ ;
 Instr 79 @ 0x4f0 (1264) - LEA.HI R142, R3.reuse, R0.reuse, RZ, 0x2 ;
 Instr 80 @ 0x500 (1280) - IMAD.MOV.U32 R138, RZ, RZ, RZ ;
 Instr 81 @ 0x510 (1296) - LEA.HI R3, R3, R0, RZ, 0x3 ;
 Instr 82 @ 0x520 (1312) - IMAD.MOV.U32 R143, RZ, RZ, c[0x0][0x1cc] ;
 Instr 83 @ 0x530 (1328) - LEA.HI.SX32 R8, R142, R201, 0x1e ;
 Instr 84 @ 0x540 (1344) - CS2R R32, SRZ ;
 Instr 85 @ 0x550 (1360) - SHF.R.S32.HI R5, RZ, 0x3, R3.reuse ;
 Instr 86 @ 0x560 (1376) - CS2R R34, SRZ ;
 Instr 87 @ 0x570 (1392) - SHF.R.S32.HI R6, RZ, 0x1f, R3 ;
 Instr 88 @ 0x580 (1408) - @P0 IMAD.HI.U32 R4, R8, c[0x0][0x3d8], RZ ;
 Instr 89 @ 0x590 (1424) - LOP3.LUT R164, R164, 0x4, RZ, 0xc0, !PT ;
 Instr 90 @ 0x5a0 (1440) - CS2R R36, SRZ ;
 Instr 91 @ 0x5b0 (1456) - LEA.HI R6, R6, R5, RZ, 0x2 ;
 Instr 92 @ 0x5c0 (1472) - IMAD.MOV.U32 R10, RZ, RZ, R8 ;
 Instr 93 @ 0x5d0 (1488) - LOP3.LUT R3, R3, 0xffffff8, RZ, 0xc0, !PT ;
 Instr 94 @ 0x5e0 (1504) - CS2R R38, SRZ ;
 Instr 95 @ 0x5f0 (1520) - LOP3.LUT R6, R6, 0xffffffc, RZ, 0xc0, !PT ;
 Instr 96 @ 0x600 (1536) - CS2R R40, SRZ ;
 Instr 97 @ 0x610 (1552) - LEA.HI R164, R7, R164, RZ, 0x1f ;
 Instr 98 @ 0x620 (1568) - CS2R R42, SRZ ;
 Instr 99 @ 0x630 (1584) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3dc], R4 ;
 Instr 100 @ 0x640 (1600) - IMAD.IADD R9, R5, 0x1, -R6 ;
 Instr 101 @ 0x650 (1616) - LOP3.LUT R7, R142, 0x1ffffffc, RZ, 0xc0, !PT ;
 Instr 102 @ 0x660 (1632) - CS2R R44, SRZ ;
 Instr 103 @ 0x670 (1648) - IADD3 R202, -R3, R0, RZ ;
 Instr 104 @ 0x680 (1664) - @P0 IMAD.MOV R3, RZ, RZ, -R10 ;
 Instr 105 @ 0x690 (1680) - LOP3.LUT R4, R0.reuse, 0xe, RZ, 0xc0, !PT ;
 Instr 106 @ 0x6a0 (1696) - CS2R R46, SRZ ;
 Instr 107 @ 0x6b0 (1712) - LOP3.LUT R165, R0.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 108 @ 0x6c0 (1728) - @P0 IMAD R22, R3, c[0x0][0x3c8], R8 ;
 Instr 109 @ 0x6d0 (1744) - LOP3.LUT R163, R0.reuse, 0x40, RZ, 0xc0, !PT ;
 Instr 110 @ 0x6e0 (1760) - IMAD.IADD R0, R0, 0x1, -R7 ;
 Instr 111 @ 0x6f0 (1776) - LOP3.LUT R202, R9, R202, RZ, 0x3c, !PT ;
 Instr 112 @ 0x700 (1792) - IMAD R3, R2, c[0x0][0x3ac], RZ ;
 Instr 113 @ 0x710 (1808) - IADD3 R7, R8, 0x20, RZ ;
 Instr 114 @ 0x720 (1824) - CS2R R48, SRZ ;
 Instr 115 @ 0x730 (1840) - LEA R202, R5, R202, 0x3 ;
 Instr 116 @ 0x740 (1856) - IMAD R222, R0, 0x8, R3 ;
 Instr 117 @ 0x750 (1872) - SHF.R.U32.HI R4, RZ, 0x1, R4 ;
 Instr 118 @ 0x760 (1888) - @P0 IMAD.HI.U32 R11, R7, c[0x0][0x3d8], RZ ;
 Instr 119 @ 0x770 (1904) - SHF.R.U32.HI R163, RZ, 0x3, R163 ;
 Instr 120 @ 0x780 (1920) - CS2R R50, SRZ ;
 Instr 121 @ 0x790 (1936) - IADD3 R6, R8.reuse, 0x40, RZ ;
 Instr 122 @ 0x7a0 (1952) - CS2R R52, SRZ ;
 Instr 123 @ 0x7b0 (1968) - IADD3 R5, R8, 0x60, RZ ;
 Instr 124 @ 0x7c0 (1984) - CS2R R54, SRZ ;
 Instr 125 @ 0x7d0 (2000) - SEL R9, R200, RZ, P1 ;
 Instr 126 @ 0x7e0 (2016) - CS2R R56, SRZ ;
 Instr 127 @ 0x7f0 (2032) - LEA.HI R165, R165, R4.reuse, RZ, 0x1e ;
 Instr 128 @ 0x800 (2048) - @P0 IMAD.HI.U32 R3, R5, c[0x0][0x3d8], RZ ;
 Instr 129 @ 0x810 (2064) - LOP3.LUT R163, R163, R4, RZ, 0xfc, !PT ;
 Instr 130 @ 0x820 (2080) - CS2R R58, SRZ ;
 Instr 131 @ 0x830 (2096) - PLOP3.LUT P1, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 132 @ 0x840 (2112) - @P0 IMAD.HI.U32 R4, R6, c[0x0][0x3d8], RZ ;
 Instr 133 @ 0x850 (2128) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3dc], R11 ;
 Instr 134 @ 0x860 (2144) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 135 @ 0x870 (2160) - @P0 SHF.R.U32.HI R3, RZ, c[0x0][0x3dc], R3 ;
 Instr 136 @ 0x880 (2176) - IMAD.IADD R224, R222, 0x1, R9 ;
 Instr 137 @ 0x890 (2192) - @P0 SHF.R.U32.HI R4, RZ, c[0x0][0x3dc], R4 ;
 Instr 138 @ 0x8a0 (2208) - @P0 IMAD.MOV R18, RZ, RZ, -R11 ;
 Instr 139 @ 0x8b0 (2224) - CS2R R60, SRZ ;
 Instr 140 @ 0x8c0 (2240) - @P0 IMAD.MOV R12, RZ, RZ, -R3 ;
 Instr 141 @ 0x8d0 (2256) - @P0 IADD3 R9, -R4, RZ, RZ ;
 Instr 142 @ 0x8e0 (2272) - @P0 IMAD R20, R18, c[0x0][0x3c8], R7 ;
 Instr 143 @ 0x8f0 (2288) - ISETP.GE.AND P2, PT, R224, R207, PT ;
 Instr 144 @ 0x900 (2304) - @P1 IMAD.HI.U32 R18, R22, c[0x0][0x3e0], RZ ;
 Instr 145 @ 0x910 (2320) - CS2R R62, SRZ ;
 Instr 146 @ 0x920 (2336) - CS2R R64, SRZ ;
 Instr 147 @ 0x930 (2352) - ISETP.LT.AND P4, PT, R7, c[0x0][0x3c4], !P2 ;
 Instr 148 @ 0x940 (2368) - @P0 IMAD R16, R9, c[0x0][0x3c8], R6 ;
 Instr 149 @ 0x950 (2384) - @P1 SHF.R.U32.HI R18, RZ, c[0x0][0x3e4], R18 ;
 Instr 150 @ 0x960 (2400) - @P0 IMAD R14, R12, c[0x0][0x3c8], R5 ;
 Instr 151 @ 0x970 (2416) - ISETP.LT.AND P5, PT, R8, c[0x0][0x3c4], !P2 ;
 Instr 152 @ 0x980 (2432) - @P1 IMAD.HI.U32 R17, R20, c[0x0][0x3e0], RZ ;
 Instr 153 @ 0x990 (2448) - ISETP.LT.AND P3, PT, R6, c[0x0][0x3c4], !P2 ;
 Instr 154 @ 0x9a0 (2464) - CS2R R66, SRZ ;
 Instr 155 @ 0x9b0 (2480) - ISETP.LT.AND P2, PT, R5, c[0x0][0x3c4], !P2 ;
 Instr 156 @ 0x9c0 (2496) - @P1 IMAD.HI.U32 R13, R16, c[0x0][0x3e0], RZ ;
 Instr 157 @ 0x9d0 (2512) - @P1 SHF.R.U32.HI R17, RZ, c[0x0][0x3e4], R17 ;
 Instr 158 @ 0x9e0 (2528) - CS2R R68, SRZ ;
 Instr 159 @ 0x9f0 (2544) - CS2R R70, SRZ ;
 Instr 160 @ 0xa00 (2560) - @P1 IMAD.HI.U32 R12, R14, c[0x0][0x3e0], RZ ;
 Instr 161 @ 0xa10 (2576) - @P1 SHF.R.U32.HI R13, RZ, c[0x0][0x3e4], R13 ;
 Instr 162 @ 0xa20 (2592) - CS2R R72, SRZ ;
 Instr 163 @ 0xa30 (2608) - @P1 IADD3 R19, -R17, RZ, RZ ;
 Instr 164 @ 0xa40 (2624) - @P0 IMAD.MOV.U32 R7, RZ, RZ, R11 ;
 Instr 165 @ 0xa50 (2640) - MOV R11, RZ ;
 Instr 166 @ 0xa60 (2656) - @P1 IMAD.MOV R9, RZ, RZ, -R18 ;
 Instr 167 @ 0xa70 (2672) - @P1 SHF.R.U32.HI R12, RZ, c[0x0][0x3e4], R12 ;
 Instr 168 @ 0xa80 (2688) - @P0 IMAD.MOV.U32 R6, RZ, RZ, R4 ;
 Instr 169 @ 0xa90 (2704) - CS2R R74, SRZ ;
 Instr 170 @ 0xaa0 (2720) - @P0 IMAD.MOV.U32 R5, RZ, RZ, R3 ;
 Instr 171 @ 0xab0 (2736) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 172 @ 0xac0 (2752) - @P1 IMAD R11, R9, c[0x0][0x3cc], R22 ;
 Instr 173 @ 0xad0 (2768) - @P1 MOV R22, R18 ;
 Instr 174 @ 0xae0 (2784) - CS2R R8, SRZ ;
 Instr 175 @ 0xaf0 (2800) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 176 @ 0xb00 (2816) - CS2R R76, SRZ ;
 Instr 177 @ 0xb10 (2832) - @P1 IMAD.MOV R15, RZ, RZ, -R13 ;
 Instr 178 @ 0xb20 (2848) - CS2R R78, SRZ ;
 Instr 179 @ 0xb30 (2864) - @P1 IMAD.MOV R3, RZ, RZ, -R12 ;
 Instr 180 @ 0xb40 (2880) - CS2R R80, SRZ ;
 Instr 181 @ 0xb50 (2896) - @P1 IMAD R9, R19, c[0x0][0x3cc], R20 ;
 Instr 182 @ 0xb60 (2912) - CS2R R82, SRZ ;
 Instr 183 @ 0xb70 (2928) - @P1 IMAD R8, R15, c[0x0][0x3cc], R16 ;
 Instr 184 @ 0xb80 (2944) - CS2R R84, SRZ ;
 Instr 185 @ 0xb90 (2960) - @P1 IMAD R4, R3, c[0x0][0x3cc], R14 ;
 Instr 186 @ 0xba0 (2976) - @P1 MOV R14, R12 ;
 Instr 187 @ 0xbb0 (2992) - @P1 IMAD.MOV.U32 R20, RZ, RZ, R17 ;
 Instr 188 @ 0xbc0 (3008) - CS2R R86, SRZ ;
 Instr 189 @ 0xbd0 (3024) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x274] ;
 Instr 190 @ 0xbe0 (3040) - CS2R R88, SRZ ;
 Instr 191 @ 0xbf0 (3056) - @P1 IMAD.MOV.U32 R16, RZ, RZ, R13 ;
 Instr 192 @ 0xc00 (3072) - CS2R R90, SRZ ;
 Instr 193 @ 0xc10 (3088) - @P0 IMAD.HI.U32 R18, R11, c[0x0][0x3e8], RZ ;
 Instr 194 @ 0xc20 (3104) - CS2R R92, SRZ ;
 Instr 195 @ 0xc30 (3120) - CS2R R94, SRZ ;
 Instr 196 @ 0xc40 (3136) - CS2R R96, SRZ ;
 Instr 197 @ 0xc50 (3152) - IMAD R15, R22, R3.reuse, -c[0x0][0x25c] ;
 Instr 198 @ 0xc60 (3168) - @P0 SHF.R.U32.HI R18, RZ, c[0x0][0x3ec], R18 ;
 Instr 199 @ 0xc70 (3184) - IMAD R137, R20, R3.reuse, -c[0x0][0x25c] ;
 Instr 200 @ 0xc80 (3200) - CS2R R22, SRZ ;
 Instr 201 @ 0xc90 (3216) - IMAD R13, R16, R3.reuse, -c[0x0][0x25c] ;
 Instr 202 @ 0xca0 (3232) - CS2R R98, SRZ ;
 Instr 203 @ 0xcb0 (3248) - IMAD R3, R14, R3, -c[0x0][0x25c] ;
 Instr 204 @ 0xcc0 (3264) - CS2R R100, SRZ ;
 Instr 205 @ 0xcd0 (3280) - @P0 IMAD.HI.U32 R14, R4, c[0x0][0x3e8], RZ ;
 Instr 206 @ 0xce0 (3296) - CS2R R102, SRZ ;
 Instr 207 @ 0xcf0 (3312) - CS2R R104, SRZ ;
 Instr 208 @ 0xd00 (3328) - CS2R R106, SRZ ;
 Instr 209 @ 0xd10 (3344) - @P0 IMAD.HI.U32 R17, R9, c[0x0][0x3e8], RZ ;
 Instr 210 @ 0xd20 (3360) - @P0 SHF.R.U32.HI R14, RZ, c[0x0][0x3ec], R14 ;
 Instr 211 @ 0xd30 (3376) - CS2R R108, SRZ ;
 Instr 212 @ 0xd40 (3392) - CS2R R110, SRZ ;
 Instr 213 @ 0xd50 (3408) - IMAD R20, R2, c[0x0][0x3a4], RZ ;
 Instr 214 @ 0xd60 (3424) - @P0 SHF.R.U32.HI R17, RZ, c[0x0][0x3ec], R17 ;
 Instr 215 @ 0xd70 (3440) - @P0 IMAD.HI.U32 R16, R8, c[0x0][0x3e8], RZ ;
 Instr 216 @ 0xd80 (3456) - CS2R R112, SRZ ;
 Instr 217 @ 0xd90 (3472) - CS2R R114, SRZ ;
 Instr 218 @ 0xda0 (3488) - CS2R R116, SRZ ;
 Instr 219 @ 0xdb0 (3504) - @P0 IMAD.MOV R12, RZ, RZ, -R18 ;
 Instr 220 @ 0xdc0 (3520) - @P0 SHF.R.U32.HI R16, RZ, c[0x0][0x3ec], R16 ;
 Instr 221 @ 0xdd0 (3536) - IMAD R134, R20, c[0x0][0x280], R13 ;
 Instr 222 @ 0xde0 (3552) - @P0 IADD3 R13, -R14, RZ, RZ ;
 Instr 223 @ 0xdf0 (3568) - @P0 IMAD R141, R12, c[0x0][0x1b4], R11 ;
 Instr 224 @ 0xe00 (3584) - CS2R R118, SRZ ;
 Instr 225 @ 0xe10 (3600) - @P0 IMAD.MOV R12, RZ, RZ, -R17 ;
 Instr 226 @ 0xe20 (3616) - CS2R R120, SRZ ;
 Instr 227 @ 0xe30 (3632) - IMAD R140, R20, c[0x0][0x280], R15 ;
 Instr 228 @ 0xe40 (3648) - CS2R R122, SRZ ;
 Instr 229 @ 0xe50 (3664) - @P0 IMAD.MOV R15, RZ, RZ, -R16 ;
 Instr 230 @ 0xe60 (3680) - CS2R R124, SRZ ;
 Instr 231 @ 0xe70 (3696) - @P0 IMAD R132, R13, c[0x0][0x1b4], R4 ;
 Instr 232 @ 0xe80 (3712) - CS2R R126, SRZ ;
 Instr 233 @ 0xe90 (3728) - @P0 IMAD.MOV.U32 R11, RZ, RZ, R18 ;
 Instr 234 @ 0xea0 (3744) - CS2R R128, SRZ ;
 Instr 235 @ 0xeb0 (3760) - @P0 IMAD R138, R12, c[0x0][0x1b4], R9 ;
 Instr 236 @ 0xec0 (3776) - CS2R R18, SRZ ;
 Instr 237 @ 0xed0 (3792) - IMAD.MOV.U32 R13, RZ, RZ, c[0x0][0x278] ;
 Instr 238 @ 0xee0 (3808) - CS2R R130, SRZ ;
 Instr 239 @ 0xef0 (3824) - @P0 IMAD.MOV.U32 R9, RZ, RZ, R17 ;
 Instr 240 @ 0xf00 (3840) - SHF.L.U32 R163, R163, 0x7, RZ ;
 Instr 241 @ 0xf10 (3856) - @P0 IMAD R135, R15, c[0x0][0x1b4], R8 ;
 Instr 242 @ 0xf20 (3872) - @P0 MOV R8, R16 ;
 Instr 243 @ 0xf30 (3888) - IMAD R139, R11, R13.reuse, -c[0x0][0x264] ;
 Instr 244 @ 0xf40 (3904) - IADD3 R212, R222, c[0x0][0x638], RZ ;
 Instr 245 @ 0xf50 (3920) - @P0 IMAD.MOV.U32 R4, RZ, RZ, R14 ;
 Instr 246 @ 0xf60 (3936) - ISETP.GE.U32.AND P0, PT, R140, c[0x0][0x19c], PT ;
 Instr 247 @ 0xf70 (3952) - IMAD R11, R9, R13, -c[0x0][0x264] ;
 Instr 248 @ 0xf80 (3968) - LOP3.LUT R9, RZ, c[0x0][0x620], RZ, 0x33, !PT ;
 Instr 249 @ 0xf90 (3984) - IMAD R137, R20, c[0x0][0x280], R137 ;
 Instr 250 @ 0xfa0 (4000) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x27c] ;
 Instr 251 @ 0xfb0 (4016) - SEL R16, R9, 0xffffffff, P0 ;
 Instr 252 @ 0xfc0 (4032) - IMAD R2, R2, c[0x0][0x3a8], RZ ;
 Instr 253 @ 0xfd0 (4048) - ISETP.GE.U32.AND P1, PT, R137, c[0x0][0x19c], PT ;
 Instr 254 @ 0xfe0 (4064) - IMAD R133, R8, R13.reuse, -c[0x0][0x264] ;
 Instr 255 @ 0xff0 (4080) - ISETP.GE.U32.AND P0, PT, R134, c[0x0][0x19c], PT ;
 Instr 256 @ 0x1000 (4096) - IMAD R13, R4, R13, -c[0x0][0x264] ;
 Instr 257 @ 0x1010 (4112) - LOP3.LUT R8, RZ, c[0x0][0x628], RZ, 0x33, !PT ;
 Instr 258 @ 0x1020 (4128) - IMAD R138, R138, R12, -c[0x0][0x26c] ;
 Instr 259 @ 0x1030 (4144) - SEL R16, R16, RZ, P5 ;
 Instr 260 @ 0x1040 (4160) - IMAD R139, R2, c[0x0][0x284], R139 ;
 Instr 261 @ 0x1050 (4176) - IMAD R136, R2.reuse, c[0x0][0x284], R11 ;
 Instr 262 @ 0x1060 (4192) - LOP3.LUT R11, RZ, c[0x0][0x624], RZ, 0x33, !PT ;
 Instr 263 @ 0x1070 (4208) - IMAD R133, R2, c[0x0][0x284], R133 ;
 Instr 264 @ 0x1080 (4224) - IMAD R141, R141, R12.reuse, -c[0x0][0x26c] ;
 Instr 265 @ 0x1090 (4240) - IMAD R135, R135, R12.reuse, -c[0x0][0x26c] ;
 Instr 266 @ 0x10a0 (4256) - IMAD R132, R132, R12, -c[0x0][0x26c] ;
 Instr 267 @ 0x10b0 (4272) - SEL R12, R9.reuse, 0xffffffff, P0 ;
 Instr 268 @ 0x10c0 (4288) - IMAD R2, R2, c[0x0][0x284], R13 ;
 Instr 269 @ 0x10d0 (4304) - SEL R13, R9, 0xffffffff, P1 ;
 Instr 270 @ 0x10e0 (4320) - IMAD R3, R20, c[0x0][0x280], R3 ;
 Instr 271 @ 0x10f0 (4336) - ISETP.GE.U32.AND P1, PT, R138, c[0x0][0x1a4], PT ;
 Instr 272 @ 0x1100 (4352) - CS2R R20, SRZ ;
 Instr 273 @ 0x1110 (4368) - ISETP.GE.U32.AND P0, PT, R141, c[0x0][0x1a4], PT ;
 Instr 274 @ 0x1120 (4384) - IMAD.SHL.U32 R165, R165, 0x80, RZ ;
 Instr 275 @ 0x1130 (4400) - SEL R12, R12, RZ, P3 ;
 Instr 276 @ 0x1140 (4416) - IMAD.SHL.U32 R164, R164, 0x10, RZ ;
 Instr 277 @ 0x1150 (4432) - ISETP.GE.U32.AND P3, PT, R135, c[0x0][0x1a4], PT ;
 Instr 278 @ 0x1160 (4448) - SEL R205, R8, 0xffffffff, P1 ;
 Instr 279 @ 0x1170 (4464) - ISETP.GE.U32.AND P1, PT, R2, c[0x0][0x1a0], PT ;
 Instr 280 @ 0x1180 (4480) - SEL R13, R13, RZ, P4 ;
 Instr 281 @ 0x1190 (4496) - SEL R206, R8.reuse, 0xffffffff, P0 ;
 Instr 282 @ 0x11a0 (4512) - ISETP.GE.U32.AND P0, PT, R139, c[0x0][0x1a0], PT ;
 Instr 283 @ 0x11b0 (4528) - SEL R204, R8, 0xffffffff, P3 ;
 Instr 284 @ 0x11c0 (4544) - ISETP.GE.U32.AND P4, PT, R136, c[0x0][0x1a0], PT ;
 Instr 285 @ 0x11d0 (4560) - ISETP.GE.U32.AND P3, PT, R133, c[0x0][0x1a0], PT ;
 Instr 286 @ 0x11e0 (4576) - SEL R203, R11.reuse, 0xffffffff, P1 ;
 Instr 287 @ 0x11f0 (4592) - SEL R15, R11.reuse, 0xffffffff, P0 ;
 Instr 288 @ 0x1200 (4608) - SEL R14, R11.reuse, 0xffffffff, P4 ;
 Instr 289 @ 0x1210 (4624) - SEL R11, R11, 0xffffffff, P3 ;
 Instr 290 @ 0x1220 (4640) - LOP3.LUT R4, R203, 0x1, RZ, 0xc0, !PT ;
 Instr 291 @ 0x1230 (4656) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x19c], PT ;
 Instr 292 @ 0x1240 (4672) - LOP3.LUT R204, R204, R12, R11, 0x80, !PT ;
 Instr 293 @ 0x1250 (4688) - IMAD R12, R7, c[0x0][0x230], RZ ;
 Instr 294 @ 0x1260 (4704) - ISETP.NE.U32.AND P3, PT, R4, 0x1, PT ;
 Instr 295 @ 0x1270 (4720) - IMAD R4, R5, c[0x0][0x230], RZ ;
 Instr 296 @ 0x1280 (4736) - SEL R5, R9, 0xffffffff, P0 ;
 Instr 297 @ 0x1290 (4752) - IMAD R7, R6, c[0x0][0x230], RZ ;
 Instr 298 @ 0x12a0 (4768) - ISETP.GE.U32.AND P0, PT, R132, c[0x0][0x1a4], PT ;
 Instr 299 @ 0x12b0 (4784) - IMAD R11, R10, c[0x0][0x230], RZ ;
 Instr 300 @ 0x12c0 (4800) - SEL R5, R5, RZ, P2 ;
 Instr 301 @ 0x12d0 (4816) - IMAD R6, R134, c[0x0][0x234], R7 ;
 Instr 302 @ 0x12e0 (4832) - ISETP.GE.AND P4, PT, R143, 0x2, PT ;
 Instr 303 @ 0x12f0 (4848) - IMAD R10, R140, c[0x0][0x234], R11 ;
 Instr 304 @ 0x1300 (4864) - SEL R8, R8, 0xffffffff, P0 ;
 Instr 305 @ 0x1310 (4880) - IMAD R11, R137, c[0x0][0x234], R12 ;
 Instr 306 @ 0x1320 (4896) - LOP3.LUT R206, R206, R16, R15, 0x80, !PT ;
 Instr 307 @ 0x1330 (4912) - IMAD R7, R3, c[0x0][0x234], R4 ;
 Instr 308 @ 0x1340 (4928) - LOP3.LUT R4, R5, 0x1, RZ, 0xc0, !PT ;
 Instr 309 @ 0x1350 (4944) - IMAD R6, R133, c[0x0][0x238], R6 ;
 Instr 310 @ 0x1360 (4960) - LOP3.LUT R205, R205, R13, R14, 0x80, !PT ;
 Instr 311 @ 0x1370 (4976) - IMAD R10, R139, c[0x0][0x238], R10 ;
 Instr 312 @ 0x1380 (4992) - LOP3.LUT R203, R8, R5, R203, 0x80, !PT ;
 Instr 313 @ 0x1390 (5008) - IMAD R11, R136, c[0x0][0x238], R11 ;
 Instr 314 @ 0x13a0 (5024) - ISETP.EQ.U32.AND P3, PT, R4, 0x1, !P3 ;
 Instr 315 @ 0x13b0 (5040) - IMAD R7, R2, c[0x0][0x238], R7 ;
 Instr 316 @ 0x13c0 (5056) - LOP3.LUT R5, R205, 0x1, RZ, 0xc0, !PT ;
 Instr 317 @ 0x13d0 (5072) - IMAD R9, R135, c[0x0][0x23c], R6 ;
 Instr 318 @ 0x13e0 (5088) - LOP3.LUT R6, R206, 0x1, RZ, 0xc0, !PT ;
 Instr 319 @ 0x13f0 (5104) - IMAD R13, R141, c[0x0][0x23c], R10 ;
 Instr 320 @ 0x1400 (5120) - LOP3.LUT R4, R204, 0x1, RZ, 0xc0, !PT ;
 Instr 321 @ 0x1410 (5136) - IMAD R11, R138, c[0x0][0x23c], R11 ;
 Instr 322 @ 0x1420 (5152) - LOP3.LUT R8, R8, 0x1, RZ, 0xc0, !PT ;
 Instr 323 @ 0x1430 (5168) - IMAD R7, R132, c[0x0][0x23c], R7 ;
 Instr 324 @ 0x1440 (5184) - ISETP.EQ.U32.AND P0, PT, R6, 0x1, PT ;
 Instr 325 @ 0x1450 (5200) - IMAD R230, R224.reuse, c[0x0][0x240], R13 ;
 Instr 326 @ 0x1460 (5216) - ISETP.EQ.U32.AND P1, PT, R5, 0x1, PT ;
 Instr 327 @ 0x1470 (5232) - IMAD R228, R224, c[0x0][0x240], R11 ;
 Instr 328 @ 0x1480 (5248) - ISETP.EQ.U32.AND P2, PT, R4, 0x1, PT ;
 Instr 329 @ 0x1490 (5264) - IMAD R226, R224, c[0x0][0x240], R9 ;
 Instr 330 @ 0x14a0 (5280) - ISETP.EQ.U32.AND P3, PT, R8, 0x1, P3 ;
 Instr 331 @ 0x14b0 (5296) - IMAD R224, R224, c[0x0][0x240], R7 ;
 Instr 332 @ 0x14c0 (5312) - CS2R R4, SRZ ;
 Instr 333 @ 0x14d0 (5328) - CS2R R6, SRZ ;
 Instr 334 @ 0x14e0 (5344) - CS2R R8, SRZ ;
 Instr 335 @ 0x14f0 (5360) - MOV R10, RZ ;
 Instr 336 @ 0x1500 (5376) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 337 @ 0x1510 (5392) - CS2R R12, SRZ ;
 Instr 338 @ 0x1520 (5408) - CS2R R14, SRZ ;
 Instr 339 @ 0x1530 (5424) - CS2R R16, SRZ ;
 Instr 340 @ 0x1540 (5440) - P2R R214, PR, RZ, 0xf ;
 Instr 341 @ 0x1550 (5456) - @!P4 BRA 0x1c40 ;
Basic block id 9 - num instructions 6
 Instr 342 @ 0x1560 (5472) - IADD3 R144, R143.reuse, -0x2, RZ ;
 Instr 343 @ 0x1570 (5488) - IMAD.MOV.U32 R155, RZ, RZ, 0x1 ;
 Instr 344 @ 0x1580 (5504) - IADD3 R143, R143, -0x1, RZ ;
 Instr 345 @ 0x1590 (5520) - ISETP.GE.U32.AND P0, PT, R144, 0x3, PT ;
 Instr 346 @ 0x15a0 (5536) - LOP3.LUT R156, R143, 0x3, RZ, 0xc0, !PT ;
 Instr 347 @ 0x15b0 (5552) - @!P0 BRA 0x1aa0 ;
Basic block id 10 - num instructions 1
 Instr 348 @ 0x15c0 (5568) - IADD3 R154, R143, -R156, RZ ;
Basic block id 11 - num instructions 77
 Instr 349 @ 0x15d0 (5584) - IMAD.MOV.U32 R146, RZ, RZ, c[0x0][0x280] ;
 Instr 350 @ 0x15e0 (5600) - IADD3 R154, R154, -0x4, RZ ;
 Instr 351 @ 0x15f0 (5616) - IMAD R144, R155.reuse, c[0x0][0x280], R134 ;
 Instr 352 @ 0x1600 (5632) - IMAD R146, R155.reuse, R146, c[0x0][0x280] ;
 Instr 353 @ 0x1610 (5648) - IMAD R143, R155.reuse, c[0x0][0x280], R3 ;
 Instr 354 @ 0x1620 (5664) - ISETP.GE.U32.AND P0, PT, R144, c[0x0][0x19c], PT ;
 Instr 355 @ 0x1630 (5680) - IMAD.IADD R144, R140, 0x1, R146.reuse ;
 Instr 356 @ 0x1640 (5696) - IMAD R148, R155, c[0x0][0x61c], RZ ;
 Instr 357 @ 0x1650 (5712) - ISETP.GE.U32.AND P6, PT, R143, c[0x0][0x19c], PT ;
 Instr 358 @ 0x1660 (5728) - IMAD.MOV.U32 R143, RZ, RZ, c[0x0][0x620] ;
 Instr 359 @ 0x1670 (5744) - ISETP.GE.U32.AND P3, PT, R144, c[0x0][0x19c], PT ;
 Instr 360 @ 0x1680 (5760) - IMAD.IADD R144, R134, 0x1, R146 ;
 Instr 361 @ 0x1690 (5776) - IMAD R147, R155, c[0x0][0x280], R140 ;
 Instr 362 @ 0x16a0 (5792) - SHF.L.U32 R153, R143, R148, RZ ;
 Instr 363 @ 0x16b0 (5808) - IMAD R145, R155, c[0x0][0x280], R137 ;
 Instr 364 @ 0x16c0 (5824) - IADD3 R148, R148, c[0x0][0x61c], RZ ;
 Instr 365 @ 0x16d0 (5840) - ISETP.GE.U32.AND P5, PT, R144, c[0x0][0x19c], PT ;
 Instr 366 @ 0x16e0 (5856) - IMAD.IADD R144, R3, 0x1, R146 ;
 Instr 367 @ 0x16f0 (5872) - ISETP.GE.U32.AND P4, PT, R147, c[0x0][0x19c], PT ;
 Instr 368 @ 0x1700 (5888) - LOP3.LUT R153, RZ, R153, RZ, 0x33, !PT ;
 Instr 369 @ 0x1710 (5904) - SHF.L.U32 R150, R143, R148, RZ ;
 Instr 370 @ 0x1720 (5920) - ISETP.GE.U32.AND P2, PT, R145, c[0x0][0x19c], PT ;
 Instr 371 @ 0x1730 (5936) - IMAD.IADD R145, R137, 0x1, R146 ;
 Instr 372 @ 0x1740 (5952) - IADD3 R148, R148, c[0x0][0x61c], RZ ;
 Instr 373 @ 0x1750 (5968) - SEL R152, R153, 0xffffffff, P4 ;
 Instr 374 @ 0x1760 (5984) - IADD3 R146, R146, c[0x0][0x280], RZ ;
 Instr 375 @ 0x1770 (6000) - ISETP.GE.U32.AND P4, PT, R144, c[0x0][0x19c], PT ;
 Instr 376 @ 0x1780 (6016) - IADD3 R144, R148, c[0x0][0x61c], RZ ;
 Instr 377 @ 0x1790 (6032) - ISETP.GE.U32.AND P1, PT, R145, c[0x0][0x19c], PT ;
 Instr 378 @ 0x17a0 (6048) - IMAD.IADD R145, R140, 0x1, R146.reuse ;
 Instr 379 @ 0x17b0 (6064) - LOP3.LUT R150, RZ, R150, RZ, 0x33, !PT ;
 Instr 380 @ 0x17c0 (6080) - SHF.L.U32 R147, R143.reuse, R148, RZ ;
 Instr 381 @ 0x17d0 (6096) - SHF.L.U32 R143, R143, R144, RZ ;
 Instr 382 @ 0x17e0 (6112) - IMAD.IADD R144, R137, 0x1, R146.reuse ;
 Instr 383 @ 0x17f0 (6128) - SEL R149, R150, 0xffffffff, P3 ;
 Instr 384 @ 0x1800 (6144) - ISETP.GE.U32.AND P3, PT, R145, c[0x0][0x19c], PT ;
 Instr 385 @ 0x1810 (6160) - IMAD.IADD R145, R134, 0x1, R146 ;
 Instr 386 @ 0x1820 (6176) - SEL R151, R153, 0xffffffff, P2 ;
 Instr 387 @ 0x1830 (6192) - ISETP.GE.U32.AND P2, PT, R144, c[0x0][0x19c], PT ;
 Instr 388 @ 0x1840 (6208) - IMAD.IADD R144, R3, 0x1, R146 ;
 Instr 389 @ 0x1850 (6224) - SEL R148, R150, 0xffffffff, P1 ;
 Instr 390 @ 0x1860 (6240) - IADD3 R146, R146, c[0x0][0x280], RZ ;
 Instr 391 @ 0x1870 (6256) - ISETP.GE.U32.AND P1, PT, R145, c[0x0][0x19c], PT ;
 Instr 392 @ 0x1880 (6272) - SEL R145, R153, 0xffffffff, P0 ;
 Instr 393 @ 0x1890 (6288) - LOP3.LUT R149, R149, R206, R152, 0x80, !PT ;
 Instr 394 @ 0x18a0 (6304) - ISETP.GE.U32.AND P0, PT, R144, c[0x0][0x19c], PT ;
 Instr 395 @ 0x18b0 (6320) - SEL R152, R153, 0xffffffff, P6 ;
 Instr 396 @ 0x18c0 (6336) - SEL R144, R150.reuse, 0xffffffff, P5 ;
 Instr 397 @ 0x18d0 (6352) - SEL R153, R150, 0xffffffff, P4 ;
 Instr 398 @ 0x18e0 (6368) - IMAD.IADD R150, R140, 0x1, R146 ;
 Instr 399 @ 0x18f0 (6384) - LOP3.LUT R147, RZ, R147, RZ, 0x33, !PT ;
 Instr 400 @ 0x1900 (6400) - LOP3.LUT R152, R153, R203, R152, 0x80, !PT ;
 Instr 401 @ 0x1910 (6416) - LOP3.LUT R203, RZ, R143, RZ, 0x33, !PT ;
 Instr 402 @ 0x1920 (6432) - IMAD.IADD R143, R134, 0x1, R146.reuse ;
 Instr 403 @ 0x1930 (6448) - ISETP.GE.U32.AND P4, PT, R150, c[0x0][0x19c], PT ;
 Instr 404 @ 0x1940 (6464) - LOP3.LUT R144, R144, R204, R145, 0x80, !PT ;
 Instr 405 @ 0x1950 (6480) - IMAD.IADD R145, R137, 0x1, R146.reuse ;
 Instr 406 @ 0x1960 (6496) - SEL R206, R203, 0xffffffff, P4 ;
 Instr 407 @ 0x1970 (6512) - IMAD.IADD R146, R3, 0x1, R146 ;
 Instr 408 @ 0x1980 (6528) - ISETP.GE.U32.AND P4, PT, R143, c[0x0][0x19c], PT ;
 Instr 409 @ 0x1990 (6544) - SEL R143, R147, 0xffffffff, P0 ;
 Instr 410 @ 0x19a0 (6560) - ISETP.NE.AND P0, PT, R154, RZ, PT ;
 Instr 411 @ 0x19b0 (6576) - SEL R150, R147, 0xffffffff, P3 ;
 Instr 412 @ 0x19c0 (6592) - ISETP.GE.U32.AND P5, PT, R145, c[0x0][0x19c], PT ;
 Instr 413 @ 0x19d0 (6608) - ISETP.GE.U32.AND P3, PT, R146, c[0x0][0x19c], PT ;
 Instr 414 @ 0x19e0 (6624) - LOP3.LUT R148, R148, R205, R151, 0x80, !PT ;
 Instr 415 @ 0x19f0 (6640) - SEL R205, R203, 0xffffffff, P5 ;
 Instr 416 @ 0x1a00 (6656) - SEL R145, R203, 0xffffffff, P4 ;
 Instr 417 @ 0x1a10 (6672) - SEL R146, R147.reuse, 0xffffffff, P2 ;
 Instr 418 @ 0x1a20 (6688) - SEL R204, R147, 0xffffffff, P1 ;
 Instr 419 @ 0x1a30 (6704) - SEL R203, R203, 0xffffffff, P3 ;
 Instr 420 @ 0x1a40 (6720) - LOP3.LUT R206, R206, R149, R150, 0x80, !PT ;
 Instr 421 @ 0x1a50 (6736) - LOP3.LUT R205, R205, R148, R146, 0x80, !PT ;
 Instr 422 @ 0x1a60 (6752) - LOP3.LUT R204, R145, R144, R204, 0x80, !PT ;
 Instr 423 @ 0x1a70 (6768) - LOP3.LUT R203, R203, R152, R143, 0x80, !PT ;
 Instr 424 @ 0x1a80 (6784) - IADD3 R155, R155, 0x4, RZ ;
 Instr 425 @ 0x1a90 (6800) - @P0 BRA 0x15d0 ;
Basic block id 12 - num instructions 2
 Instr 426 @ 0x1aa0 (6816) - ISETP.NE.AND P0, PT, R156, RZ, PT ;
 Instr 427 @ 0x1ab0 (6832) - @!P0 BRA 0x1c40 ;
Basic block id 13 - num instructions 24
 Instr 428 @ 0x1ac0 (6848) - IMAD R145, R155.reuse, c[0x0][0x61c], RZ ;
 Instr 429 @ 0x1ad0 (6864) - IADD3 R156, R156, -0x1, RZ ;
 Instr 430 @ 0x1ae0 (6880) - IMAD.MOV.U32 R146, RZ, RZ, c[0x0][0x620] ;
 Instr 431 @ 0x1af0 (6896) - IMAD R143, R155.reuse, c[0x0][0x280], R140 ;
 Instr 432 @ 0x1b00 (6912) - IMAD R144, R155.reuse, c[0x0][0x280], R134 ;
 Instr 433 @ 0x1b10 (6928) - SHF.L.U32 R146, R146, R145, RZ ;
 Instr 434 @ 0x1b20 (6944) - IMAD R145, R155, c[0x0][0x280], R137 ;
 Instr 435 @ 0x1b30 (6960) - ISETP.GE.U32.AND P0, PT, R143, c[0x0][0x19c], PT ;
 Instr 436 @ 0x1b40 (6976) - IMAD R143, R155, c[0x0][0x280], R3 ;
 Instr 437 @ 0x1b50 (6992) - LOP3.LUT R146, RZ, R146, RZ, 0x33, !PT ;
 Instr 438 @ 0x1b60 (7008) - ISETP.GE.U32.AND P2, PT, R145, c[0x0][0x19c], PT ;
 Instr 439 @ 0x1b70 (7024) - SEL R147, R146, 0xffffffff, P0 ;
 Instr 440 @ 0x1b80 (7040) - ISETP.GE.U32.AND P1, PT, R144, c[0x0][0x19c], PT ;
 Instr 441 @ 0x1b90 (7056) - ISETP.GE.U32.AND P0, PT, R143, c[0x0][0x19c], PT ;
 Instr 442 @ 0x1ba0 (7072) - SEL R144, R146.reuse, 0xffffffff, P2 ;
 Instr 443 @ 0x1bb0 (7088) - SEL R143, R146, 0xffffffff, P1 ;
 Instr 444 @ 0x1bc0 (7104) - SEL R146, R146, 0xffffffff, P0 ;
 Instr 445 @ 0x1bd0 (7120) - ISETP.NE.AND P0, PT, R156, RZ, PT ;
 Instr 446 @ 0x1be0 (7136) - LOP3.LUT R206, R206, R147, RZ, 0xc0, !PT ;
 Instr 447 @ 0x1bf0 (7152) - LOP3.LUT R205, R205, R144, RZ, 0xc0, !PT ;
 Instr 448 @ 0x1c00 (7168) - LOP3.LUT R204, R204, R143, RZ, 0xc0, !PT ;
 Instr 449 @ 0x1c10 (7184) - LOP3.LUT R203, R203, R146, RZ, 0xc0, !PT ;
 Instr 450 @ 0x1c20 (7200) - IADD3 R155, R155, 0x1, RZ ;
 Instr 451 @ 0x1c30 (7216) - @P0 BRA 0x1ac0 ;
Basic block id 14 - num instructions 3
 Instr 452 @ 0x1c40 (7232) - MOV R3, c[0x0][0x1d0] ;
 Instr 453 @ 0x1c50 (7248) - ISETP.GE.AND P0, PT, R3, 0x2, PT ;
 Instr 454 @ 0x1c60 (7264) - @!P0 BRA 0x2350 ;
Basic block id 15 - num instructions 6
 Instr 455 @ 0x1c70 (7280) - IADD3 R134, R3.reuse, -0x2, RZ ;
 Instr 456 @ 0x1c80 (7296) - IMAD.MOV.U32 R151, RZ, RZ, 0x1 ;
 Instr 457 @ 0x1c90 (7312) - IADD3 R3, R3, -0x1, RZ ;
 Instr 458 @ 0x1ca0 (7328) - ISETP.GE.U32.AND P0, PT, R134, 0x3, PT ;
 Instr 459 @ 0x1cb0 (7344) - LOP3.LUT R152, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 460 @ 0x1cc0 (7360) - @!P0 BRA 0x21b0 ;
Basic block id 16 - num instructions 1
 Instr 461 @ 0x1cd0 (7376) - IADD3 R150, R3, -R152, RZ ;
Basic block id 17 - num instructions 77
 Instr 462 @ 0x1ce0 (7392) - IMAD.MOV.U32 R140, RZ, RZ, c[0x0][0x284] ;
 Instr 463 @ 0x1cf0 (7408) - IADD3 R150, R150, -0x4, RZ ;
 Instr 464 @ 0x1d00 (7424) - IMAD R134, R151.reuse, c[0x0][0x284], R133 ;
 Instr 465 @ 0x1d10 (7440) - IMAD R140, R151.reuse, R140, c[0x0][0x284] ;
 Instr 466 @ 0x1d20 (7456) - IMAD R3, R151, c[0x0][0x284], R2 ;
 Instr 467 @ 0x1d30 (7472) - ISETP.GE.U32.AND P0, PT, R134, c[0x0][0x1a0], PT ;
 Instr 468 @ 0x1d40 (7488) - IMAD.IADD R134, R139, 0x1, R140.reuse ;
 Instr 469 @ 0x1d50 (7504) - IMAD R144, R151, c[0x0][0x1d4], RZ ;
 Instr 470 @ 0x1d60 (7520) - ISETP.GE.U32.AND P6, PT, R3, c[0x0][0x1a0], PT ;
 Instr 471 @ 0x1d70 (7536) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x624] ;
 Instr 472 @ 0x1d80 (7552) - ISETP.GE.U32.AND P3, PT, R134, c[0x0][0x1a0], PT ;
 Instr 473 @ 0x1d90 (7568) - IMAD.IADD R134, R133, 0x1, R140 ;
 Instr 474 @ 0x1da0 (7584) - IMAD R143, R151, c[0x0][0x284], R139 ;
 Instr 475 @ 0x1db0 (7600) - SHF.L.U32 R149, R3, R144, RZ ;
 Instr 476 @ 0x1dc0 (7616) - IMAD R137, R151, c[0x0][0x284], R136 ;
 Instr 477 @ 0x1dd0 (7632) - IADD3 R144, R144, c[0x0][0x1d4], RZ ;
 Instr 478 @ 0x1de0 (7648) - ISETP.GE.U32.AND P5, PT, R134, c[0x0][0x1a0], PT ;
 Instr 479 @ 0x1df0 (7664) - IMAD.IADD R134, R2, 0x1, R140 ;
 Instr 480 @ 0x1e00 (7680) - ISETP.GE.U32.AND P4, PT, R143, c[0x0][0x1a0], PT ;
 Instr 481 @ 0x1e10 (7696) - LOP3.LUT R149, RZ, R149, RZ, 0x33, !PT ;
 Instr 482 @ 0x1e20 (7712) - SHF.L.U32 R146, R3, R144, RZ ;
 Instr 483 @ 0x1e30 (7728) - ISETP.GE.U32.AND P2, PT, R137, c[0x0][0x1a0], PT ;
 Instr 484 @ 0x1e40 (7744) - IMAD.IADD R137, R136, 0x1, R140 ;
 Instr 485 @ 0x1e50 (7760) - IADD3 R144, R144, c[0x0][0x1d4], RZ ;
 Instr 486 @ 0x1e60 (7776) - SEL R148, R149, 0xffffffff, P4 ;
 Instr 487 @ 0x1e70 (7792) - IADD3 R140, R140, c[0x0][0x284], RZ ;
 Instr 488 @ 0x1e80 (7808) - ISETP.GE.U32.AND P4, PT, R134, c[0x0][0x1a0], PT ;
 Instr 489 @ 0x1e90 (7824) - IADD3 R134, R144, c[0x0][0x1d4], RZ ;
 Instr 490 @ 0x1ea0 (7840) - ISETP.GE.U32.AND P1, PT, R137, c[0x0][0x1a0], PT ;
 Instr 491 @ 0x1eb0 (7856) - IMAD.IADD R137, R139, 0x1, R140.reuse ;
 Instr 492 @ 0x1ec0 (7872) - LOP3.LUT R146, RZ, R146, RZ, 0x33, !PT ;
 Instr 493 @ 0x1ed0 (7888) - SHF.L.U32 R143, R3.reuse, R144, RZ ;
 Instr 494 @ 0x1ee0 (7904) - SHF.L.U32 R3, R3, R134, RZ ;
 Instr 495 @ 0x1ef0 (7920) - IMAD.IADD R134, R136, 0x1, R140.reuse ;
 Instr 496 @ 0x1f00 (7936) - SEL R145, R146, 0xffffffff, P3 ;
 Instr 497 @ 0x1f10 (7952) - ISETP.GE.U32.AND P3, PT, R137, c[0x0][0x1a0], PT ;
 Instr 498 @ 0x1f20 (7968) - IMAD.IADD R137, R133, 0x1, R140 ;
 Instr 499 @ 0x1f30 (7984) - SEL R147, R149, 0xffffffff, P2 ;
 Instr 500 @ 0x1f40 (8000) - ISETP.GE.U32.AND P2, PT, R134, c[0x0][0x1a0], PT ;
 Instr 501 @ 0x1f50 (8016) - IMAD.IADD R134, R2, 0x1, R140 ;
 Instr 502 @ 0x1f60 (8032) - SEL R144, R146, 0xffffffff, P1 ;
 Instr 503 @ 0x1f70 (8048) - IADD3 R140, R140, c[0x0][0x284], RZ ;
 Instr 504 @ 0x1f80 (8064) - ISETP.GE.U32.AND P1, PT, R137, c[0x0][0x1a0], PT ;
 Instr 505 @ 0x1f90 (8080) - SEL R137, R149, 0xffffffff, P0 ;
 Instr 506 @ 0x1fa0 (8096) - LOP3.LUT R145, R145, R206, R148, 0x80, !PT ;
 Instr 507 @ 0x1fb0 (8112) - ISETP.GE.U32.AND P0, PT, R134, c[0x0][0x1a0], PT ;
 Instr 508 @ 0x1fc0 (8128) - SEL R148, R149, 0xffffffff, P6 ;
 Instr 509 @ 0x1fd0 (8144) - SEL R134, R146.reuse, 0xffffffff, P5 ;
 Instr 510 @ 0x1fe0 (8160) - SEL R149, R146, 0xffffffff, P4 ;
 Instr 511 @ 0x1ff0 (8176) - IMAD.IADD R146, R139, 0x1, R140 ;
 Instr 512 @ 0x2000 (8192) - LOP3.LUT R143, RZ, R143, RZ, 0x33, !PT ;
 Instr 513 @ 0x2010 (8208) - LOP3.LUT R148, R149, R203, R148, 0x80, !PT ;
 Instr 514 @ 0x2020 (8224) - LOP3.LUT R203, RZ, R3, RZ, 0x33, !PT ;
 Instr 515 @ 0x2030 (8240) - IMAD.IADD R3, R133, 0x1, R140.reuse ;
 Instr 516 @ 0x2040 (8256) - ISETP.GE.U32.AND P4, PT, R146, c[0x0][0x1a0], PT ;
 Instr 517 @ 0x2050 (8272) - LOP3.LUT R134, R134, R204, R137, 0x80, !PT ;
 Instr 518 @ 0x2060 (8288) - IMAD.IADD R137, R136, 0x1, R140.reuse ;
 Instr 519 @ 0x2070 (8304) - SEL R206, R203, 0xffffffff, P4 ;
 Instr 520 @ 0x2080 (8320) - IMAD.IADD R140, R2, 0x1, R140 ;
 Instr 521 @ 0x2090 (8336) - ISETP.GE.U32.AND P4, PT, R3, c[0x0][0x1a0], PT ;
 Instr 522 @ 0x20a0 (8352) - SEL R3, R143, 0xffffffff, P0 ;
 Instr 523 @ 0x20b0 (8368) - ISETP.NE.AND P0, PT, R150, RZ, PT ;
 Instr 524 @ 0x20c0 (8384) - SEL R146, R143, 0xffffffff, P3 ;
 Instr 525 @ 0x20d0 (8400) - ISETP.GE.U32.AND P5, PT, R137, c[0x0][0x1a0], PT ;
 Instr 526 @ 0x20e0 (8416) - ISETP.GE.U32.AND P3, PT, R140, c[0x0][0x1a0], PT ;
 Instr 527 @ 0x20f0 (8432) - LOP3.LUT R144, R144, R205, R147, 0x80, !PT ;
 Instr 528 @ 0x2100 (8448) - SEL R205, R203, 0xffffffff, P5 ;
 Instr 529 @ 0x2110 (8464) - SEL R137, R203, 0xffffffff, P4 ;
 Instr 530 @ 0x2120 (8480) - SEL R140, R143.reuse, 0xffffffff, P2 ;
 Instr 531 @ 0x2130 (8496) - SEL R204, R143, 0xffffffff, P1 ;
 Instr 532 @ 0x2140 (8512) - SEL R203, R203, 0xffffffff, P3 ;
 Instr 533 @ 0x2150 (8528) - LOP3.LUT R206, R206, R145, R146, 0x80, !PT ;
 Instr 534 @ 0x2160 (8544) - LOP3.LUT R205, R205, R144, R140, 0x80, !PT ;
 Instr 535 @ 0x2170 (8560) - LOP3.LUT R204, R137, R134, R204, 0x80, !PT ;
 Instr 536 @ 0x2180 (8576) - LOP3.LUT R203, R203, R148, R3, 0x80, !PT ;
 Instr 537 @ 0x2190 (8592) - IADD3 R151, R151, 0x4, RZ ;
 Instr 538 @ 0x21a0 (8608) - @P0 BRA 0x1ce0 ;
Basic block id 18 - num instructions 2
 Instr 539 @ 0x21b0 (8624) - ISETP.NE.AND P0, PT, R152, RZ, PT ;
 Instr 540 @ 0x21c0 (8640) - @!P0 BRA 0x2350 ;
Basic block id 19 - num instructions 24
 Instr 541 @ 0x21d0 (8656) - IMAD R137, R151.reuse, c[0x0][0x1d4], RZ ;
 Instr 542 @ 0x21e0 (8672) - IADD3 R152, R152, -0x1, RZ ;
 Instr 543 @ 0x21f0 (8688) - IMAD.MOV.U32 R140, RZ, RZ, c[0x0][0x624] ;
 Instr 544 @ 0x2200 (8704) - IMAD R3, R151.reuse, c[0x0][0x284], R139 ;
 Instr 545 @ 0x2210 (8720) - IMAD R134, R151.reuse, c[0x0][0x284], R133 ;
 Instr 546 @ 0x2220 (8736) - SHF.L.U32 R140, R140, R137, RZ ;
 Instr 547 @ 0x2230 (8752) - IMAD R137, R151, c[0x0][0x284], R136 ;
 Instr 548 @ 0x2240 (8768) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x1a0], PT ;
 Instr 549 @ 0x2250 (8784) - IMAD R3, R151, c[0x0][0x284], R2 ;
 Instr 550 @ 0x2260 (8800) - LOP3.LUT R140, RZ, R140, RZ, 0x33, !PT ;
 Instr 551 @ 0x2270 (8816) - ISETP.GE.U32.AND P2, PT, R137, c[0x0][0x1a0], PT ;
 Instr 552 @ 0x2280 (8832) - SEL R143, R140, 0xffffffff, P0 ;
 Instr 553 @ 0x2290 (8848) - ISETP.GE.U32.AND P1, PT, R134, c[0x0][0x1a0], PT ;
 Instr 554 @ 0x22a0 (8864) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x1a0], PT ;
 Instr 555 @ 0x22b0 (8880) - SEL R134, R140.reuse, 0xffffffff, P2 ;
 Instr 556 @ 0x22c0 (8896) - SEL R3, R140, 0xffffffff, P1 ;
 Instr 557 @ 0x22d0 (8912) - SEL R140, R140, 0xffffffff, P0 ;
 Instr 558 @ 0x22e0 (8928) - ISETP.NE.AND P0, PT, R152, RZ, PT ;
 Instr 559 @ 0x22f0 (8944) - LOP3.LUT R206, R206, R143, RZ, 0xc0, !PT ;
 Instr 560 @ 0x2300 (8960) - LOP3.LUT R205, R205, R134, RZ, 0xc0, !PT ;
 Instr 561 @ 0x2310 (8976) - LOP3.LUT R204, R204, R3, RZ, 0xc0, !PT ;
 Instr 562 @ 0x2320 (8992) - LOP3.LUT R203, R203, R140, RZ, 0xc0, !PT ;
 Instr 563 @ 0x2330 (9008) - IADD3 R151, R151, 0x1, RZ ;
 Instr 564 @ 0x2340 (9024) - @P0 BRA 0x21d0 ;
Basic block id 20 - num instructions 3
 Instr 565 @ 0x2350 (9040) - MOV R3, c[0x0][0x1d4] ;
 Instr 566 @ 0x2360 (9056) - ISETP.GE.AND P0, PT, R3, 0x2, PT ;
 Instr 567 @ 0x2370 (9072) - @!P0 BRA 0x2a40 ;
Basic block id 21 - num instructions 6
 Instr 568 @ 0x2380 (9088) - IADD3 R2, R3.reuse, -0x2, RZ ;
 Instr 569 @ 0x2390 (9104) - IMAD.MOV.U32 R147, RZ, RZ, 0x1 ;
 Instr 570 @ 0x23a0 (9120) - IADD3 R3, R3, -0x1, RZ ;
 Instr 571 @ 0x23b0 (9136) - ISETP.GE.U32.AND P0, PT, R2, 0x3, PT ;
 Instr 572 @ 0x23c0 (9152) - LOP3.LUT R148, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 573 @ 0x23d0 (9168) - @!P0 BRA 0x28b0 ;
Basic block id 22 - num instructions 1
 Instr 574 @ 0x23e0 (9184) - IADD3 R146, R3, -R148, RZ ;
Basic block id 23 - num instructions 76
 Instr 575 @ 0x23f0 (9200) - IMAD R2, R147.reuse, c[0x0][0x288], R135 ;
 Instr 576 @ 0x2400 (9216) - IADD3 R139, R147.reuse, 0x1, RZ ;
 Instr 577 @ 0x2410 (9232) - IMAD R133, R147.reuse, c[0x0][0x288], R141 ;
 Instr 578 @ 0x2420 (9248) - IADD3 R137, R147.reuse, 0x2, RZ ;
 Instr 579 @ 0x2430 (9264) - IMAD R3, R147, c[0x0][0x288], R138 ;
 Instr 580 @ 0x2440 (9280) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x1a4], PT ;
 Instr 581 @ 0x2450 (9296) - IMAD.MOV.U32 R136, RZ, RZ, c[0x0][0x288] ;
 Instr 582 @ 0x2460 (9312) - ISETP.GE.U32.AND P4, PT, R133, c[0x0][0x1a4], PT ;
 Instr 583 @ 0x2470 (9328) - IMAD.MOV.U32 R134, RZ, RZ, c[0x0][0x628] ;
 Instr 584 @ 0x2480 (9344) - ISETP.GE.U32.AND P2, PT, R3, c[0x0][0x1a4], PT ;
 Instr 585 @ 0x2490 (9360) - IMAD R2, R147.reuse, c[0x0][0x288], R132 ;
 Instr 586 @ 0x24a0 (9376) - IADD3 R133, R147.reuse, 0x3, RZ ;
 Instr 587 @ 0x24b0 (9392) - IMAD R3, R147, R136, c[0x0][0x288] ;
 Instr 588 @ 0x24c0 (9408) - SHF.L.U32 R145, R134, R147, RZ ;
 Instr 589 @ 0x24d0 (9424) - ISETP.GE.U32.AND P6, PT, R2, c[0x0][0x1a4], PT ;
 Instr 590 @ 0x24e0 (9440) - IMAD.IADD R140, R141, 0x1, R3.reuse ;
 Instr 591 @ 0x24f0 (9456) - SHF.L.U32 R2, R134.reuse, R133, RZ ;
 Instr 592 @ 0x2500 (9472) - IMAD.IADD R133, R135, 0x1, R3.reuse ;
 Instr 593 @ 0x2510 (9488) - SHF.L.U32 R139, R134.reuse, R139, RZ ;
 Instr 594 @ 0x2520 (9504) - SHF.L.U32 R136, R134, R137, RZ ;
 Instr 595 @ 0x2530 (9520) - IMAD.IADD R137, R138, 0x1, R3.reuse ;
 Instr 596 @ 0x2540 (9536) - IADD3 R134, R3, c[0x0][0x288], RZ ;
 Instr 597 @ 0x2550 (9552) - IMAD.IADD R3, R132, 0x1, R3 ;
 Instr 598 @ 0x2560 (9568) - LOP3.LUT R145, RZ, R145, RZ, 0x33, !PT ;
 Instr 599 @ 0x2570 (9584) - ISETP.GE.U32.AND P5, PT, R133, c[0x0][0x1a4], PT ;
 Instr 600 @ 0x2580 (9600) - IMAD.IADD R133, R141, 0x1, R134.reuse ;
 Instr 601 @ 0x2590 (9616) - ISETP.GE.U32.AND P3, PT, R140, c[0x0][0x1a4], PT ;
 Instr 602 @ 0x25a0 (9632) - LOP3.LUT R139, RZ, R139, RZ, 0x33, !PT ;
 Instr 603 @ 0x25b0 (9648) - SEL R144, R145, 0xffffffff, P4 ;
 Instr 604 @ 0x25c0 (9664) - ISETP.GE.U32.AND P4, PT, R3, c[0x0][0x1a4], PT ;
 Instr 605 @ 0x25d0 (9680) - IMAD.IADD R3, R138, 0x1, R134 ;
 Instr 606 @ 0x25e0 (9696) - ISETP.GE.U32.AND P1, PT, R137, c[0x0][0x1a4], PT ;
 Instr 607 @ 0x25f0 (9712) - SEL R137, R139, 0xffffffff, P3 ;
 Instr 608 @ 0x2600 (9728) - ISETP.GE.U32.AND P3, PT, R133, c[0x0][0x1a4], PT ;
 Instr 609 @ 0x2610 (9744) - IMAD.IADD R133, R135, 0x1, R134.reuse ;
 Instr 610 @ 0x2620 (9760) - SEL R143, R145, 0xffffffff, P2 ;
 Instr 611 @ 0x2630 (9776) - ISETP.GE.U32.AND P2, PT, R3, c[0x0][0x1a4], PT ;
 Instr 612 @ 0x2640 (9792) - IMAD.IADD R3, R132, 0x1, R134 ;
 Instr 613 @ 0x2650 (9808) - SEL R140, R139, 0xffffffff, P1 ;
 Instr 614 @ 0x2660 (9824) - IADD3 R134, R134, c[0x0][0x288], RZ ;
 Instr 615 @ 0x2670 (9840) - ISETP.GE.U32.AND P1, PT, R133, c[0x0][0x1a4], PT ;
 Instr 616 @ 0x2680 (9856) - SEL R133, R145, 0xffffffff, P0 ;
 Instr 617 @ 0x2690 (9872) - LOP3.LUT R137, R137, R206, R144, 0x80, !PT ;
 Instr 618 @ 0x26a0 (9888) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x1a4], PT ;
 Instr 619 @ 0x26b0 (9904) - SEL R144, R145, 0xffffffff, P6 ;
 Instr 620 @ 0x26c0 (9920) - SEL R3, R139, 0xffffffff, P5 ;
 Instr 621 @ 0x26d0 (9936) - SEL R145, R139, 0xffffffff, P4 ;
 Instr 622 @ 0x26e0 (9952) - IMAD.IADD R139, R141, 0x1, R134 ;
 Instr 623 @ 0x26f0 (9968) - LOP3.LUT R136, RZ, R136, RZ, 0x33, !PT ;
 Instr 624 @ 0x2700 (9984) - LOP3.LUT R144, R145, R203, R144, 0x80, !PT ;
 Instr 625 @ 0x2710 (10000) - LOP3.LUT R203, RZ, R2, RZ, 0x33, !PT ;
 Instr 626 @ 0x2720 (10016) - IMAD.IADD R2, R135, 0x1, R134 ;
 Instr 627 @ 0x2730 (10032) - ISETP.GE.U32.AND P4, PT, R139, c[0x0][0x1a4], PT ;
 Instr 628 @ 0x2740 (10048) - IADD3 R146, R146, -0x4, RZ ;
 Instr 629 @ 0x2750 (10064) - SEL R206, R203, 0xffffffff, P4 ;
 Instr 630 @ 0x2760 (10080) - ISETP.GE.U32.AND P4, PT, R2, c[0x0][0x1a4], PT ;
 Instr 631 @ 0x2770 (10096) - LOP3.LUT R3, R3, R204, R133, 0x80, !PT ;
 Instr 632 @ 0x2780 (10112) - IMAD.IADD R133, R138, 0x1, R134.reuse ;
 Instr 633 @ 0x2790 (10128) - SEL R2, R136, 0xffffffff, P0 ;
 Instr 634 @ 0x27a0 (10144) - IMAD.IADD R134, R132, 0x1, R134 ;
 Instr 635 @ 0x27b0 (10160) - ISETP.NE.AND P0, PT, R146, RZ, PT ;
 Instr 636 @ 0x27c0 (10176) - SEL R139, R136, 0xffffffff, P3 ;
 Instr 637 @ 0x27d0 (10192) - ISETP.GE.U32.AND P5, PT, R133, c[0x0][0x1a4], PT ;
 Instr 638 @ 0x27e0 (10208) - ISETP.GE.U32.AND P3, PT, R134, c[0x0][0x1a4], PT ;
 Instr 639 @ 0x27f0 (10224) - LOP3.LUT R140, R140, R205, R143, 0x80, !PT ;
 Instr 640 @ 0x2800 (10240) - SEL R205, R203.reuse, 0xffffffff, P5 ;
 Instr 641 @ 0x2810 (10256) - SEL R204, R203, 0xffffffff, P4 ;
 Instr 642 @ 0x2820 (10272) - SEL R134, R136, 0xffffffff, P2 ;
 Instr 643 @ 0x2830 (10288) - SEL R133, R136, 0xffffffff, P1 ;
 Instr 644 @ 0x2840 (10304) - SEL R203, R203, 0xffffffff, P3 ;
 Instr 645 @ 0x2850 (10320) - LOP3.LUT R206, R206, R137, R139, 0x80, !PT ;
 Instr 646 @ 0x2860 (10336) - LOP3.LUT R205, R205, R140, R134, 0x80, !PT ;
 Instr 647 @ 0x2870 (10352) - LOP3.LUT R204, R204, R3, R133, 0x80, !PT ;
 Instr 648 @ 0x2880 (10368) - LOP3.LUT R203, R203, R144, R2, 0x80, !PT ;
 Instr 649 @ 0x2890 (10384) - IADD3 R147, R147, 0x4, RZ ;
 Instr 650 @ 0x28a0 (10400) - @P0 BRA 0x23f0 ;
Basic block id 24 - num instructions 2
 Instr 651 @ 0x28b0 (10416) - ISETP.NE.AND P0, PT, R148, RZ, PT ;
 Instr 652 @ 0x28c0 (10432) - @!P0 BRA 0x2a40 ;
Basic block id 25 - num instructions 23
 Instr 653 @ 0x28d0 (10448) - IMAD.MOV.U32 R134, RZ, RZ, c[0x0][0x628] ;
 Instr 654 @ 0x28e0 (10464) - IADD3 R148, R148, -0x1, RZ ;
 Instr 655 @ 0x28f0 (10480) - IMAD R2, R147.reuse, c[0x0][0x288], R141 ;
 Instr 656 @ 0x2900 (10496) - IMAD R133, R147.reuse, c[0x0][0x288], R138 ;
 Instr 657 @ 0x2910 (10512) - SHF.L.U32 R134, R134, R147, RZ ;
 Instr 658 @ 0x2920 (10528) - IMAD R3, R147.reuse, c[0x0][0x288], R135 ;
 Instr 659 @ 0x2930 (10544) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x1a4], PT ;
 Instr 660 @ 0x2940 (10560) - IMAD R2, R147, c[0x0][0x288], R132 ;
 Instr 661 @ 0x2950 (10576) - LOP3.LUT R134, RZ, R134, RZ, 0x33, !PT ;
 Instr 662 @ 0x2960 (10592) - ISETP.GE.U32.AND P2, PT, R133, c[0x0][0x1a4], PT ;
 Instr 663 @ 0x2970 (10608) - SEL R137, R134, 0xffffffff, P0 ;
 Instr 664 @ 0x2980 (10624) - ISETP.GE.U32.AND P1, PT, R3, c[0x0][0x1a4], PT ;
 Instr 665 @ 0x2990 (10640) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x1a4], PT ;
 Instr 666 @ 0x29a0 (10656) - SEL R2, R134.reuse, 0xffffffff, P2 ;
 Instr 667 @ 0x29b0 (10672) - SEL R3, R134.reuse, 0xffffffff, P1 ;
 Instr 668 @ 0x29c0 (10688) - SEL R134, R134, 0xffffffff, P0 ;
 Instr 669 @ 0x29d0 (10704) - ISETP.NE.AND P0, PT, R148, RZ, PT ;
 Instr 670 @ 0x29e0 (10720) - LOP3.LUT R206, R206, R137, RZ, 0xc0, !PT ;
 Instr 671 @ 0x29f0 (10736) - LOP3.LUT R205, R205, R2, RZ, 0xc0, !PT ;
 Instr 672 @ 0x2a00 (10752) - LOP3.LUT R204, R204, R3, RZ, 0xc0, !PT ;
 Instr 673 @ 0x2a10 (10768) - LOP3.LUT R203, R203, R134, RZ, 0xc0, !PT ;
 Instr 674 @ 0x2a20 (10784) - IADD3 R147, R147, 0x1, RZ ;
 Instr 675 @ 0x2a30 (10800) - @P0 BRA 0x28d0 ;
Basic block id 26 - num instructions 53
 Instr 676 @ 0x2a40 (10816) - S2UR UR6, SR_CTAID.Z ;
 Instr 677 @ 0x2a50 (10832) - ULDC.U8 UR4, c[0x0][0x28c] ;
 Instr 678 @ 0x2a60 (10848) - LEA.HI.SX32 R133, R142, R200, 0x1e ;
 Instr 679 @ 0x2a70 (10864) - UISETP.NE.AND UP0, UPT, UR4, URZ, UPT ;
 Instr 680 @ 0x2a80 (10880) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x3d4] ;
 Instr 681 @ 0x2a90 (10896) - ULDC UR8, c[0x0][0x1bc] ;
 Instr 682 @ 0x2aa0 (10912) - IMAD R208, R208, c[0x0][0x1b8], RZ ;
 Instr 683 @ 0x2ab0 (10928) - ULDC.64 UR4, c[0x0][0x3b0] ;
 Instr 684 @ 0x2ac0 (10944) - ISETP.GE.AND P3, PT, R222, c[0x0][0x1a8], PT ;
 Instr 685 @ 0x2ad0 (10960) - ULDC UR14, c[0x0][0x618] ;
 Instr 686 @ 0x2ae0 (10976) - ISETP.LE.AND P5, PT, RZ, c[0x0][0x630], PT ;
 Instr 687 @ 0x2af0 (10992) - UIADD3 UR14, UR14, -0x1, URZ ;
 Instr 688 @ 0x2b00 (11008) - IADD3 R139, R133.reuse, 0x20, RZ ;
 Instr 689 @ 0x2b10 (11024) - IMAD.SHL.U32 R0, R0, 0x8, RZ ;
 Instr 690 @ 0x2b20 (11040) - @UP0 ULDC UR10, c[0x0][0x3b4] ;
 Instr 691 @ 0x2b30 (11056) - IADD3 R137, R133.reuse, 0x40, RZ ;
 Instr 692 @ 0x2b40 (11072) - @UP0 UIADD3 UR10, UR10, UR4, URZ ;
 Instr 693 @ 0x2b50 (11088) - IADD3 R135, R133, 0x60, RZ ;
 Instr 694 @ 0x2b60 (11104) - UMOV UR13, URZ ;
 Instr 695 @ 0x2b70 (11120) - ISETP.LT.AND P1, PT, R139, R208, !P3 ;
 Instr 696 @ 0x2b80 (11136) - ISETP.LT.AND P2, PT, R137, R208, !P3 ;
 Instr 697 @ 0x2b90 (11152) - @UP0 UMOV UR7, UR6 ;
 Instr 698 @ 0x2ba0 (11168) - @UP0 UIMAD UR10, UR10, UR7, URZ ;
 Instr 699 @ 0x2bb0 (11184) - @!UP0 UMOV UR7, UR6 ;
 Instr 700 @ 0x2bc0 (11200) - @!UP0 ULOP3.LUT UR9, URZ, UR7, URZ, 0x33, !UPT ;
 Instr 701 @ 0x2bd0 (11216) - ULDC UR6, c[0x0][0x1c0] ;
 Instr 702 @ 0x2be0 (11232) - @!UP0 UIADD3 UR8, UR9, UR8, URZ ;
 Instr 703 @ 0x2bf0 (11248) - @!UP0 UIADD3 UR6, UR9, UR6, URZ ;
 Instr 704 @ 0x2c00 (11264) - @!UP0 UIMAD UR8, UR8, UR4, URZ ;
 Instr 705 @ 0x2c10 (11280) - USEL UR4, UR14, URZ, !UP0 ;
 Instr 706 @ 0x2c20 (11296) - @!UP0 UIMAD UR10, UR6, UR5, UR8 ;
 Instr 707 @ 0x2c30 (11312) - UIADD3 UR10, UR4, UR10, URZ ;
 Instr 708 @ 0x2c40 (11328) - ULDC.U8 UR4, c[0x0][0x258] ;
 Instr 709 @ 0x2c50 (11344) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 710 @ 0x2c60 (11360) - IMAD.U32 R132, RZ, RZ, UR10 ;
 Instr 711 @ 0x2c70 (11376) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 712 @ 0x2c80 (11392) - SEL R2, R2, 0x1, P0 ;
 Instr 713 @ 0x2c90 (11408) - IMAD R3, R133.reuse, c[0x0][0x3d0], R132.reuse ;
 Instr 714 @ 0x2ca0 (11424) - IMAD R132, R133, c[0x0][0x3d4], R132 ;
 Instr 715 @ 0x2cb0 (11440) - @!P0 IMAD R3, R132, c[0x0][0x1a8], RZ ;
 Instr 716 @ 0x2cc0 (11456) - ISETP.LT.AND P0, PT, R133, R208.reuse, !P3 ;
 Instr 717 @ 0x2cd0 (11472) - IMAD.U32 R133, RZ, RZ, UR7 ;
 Instr 718 @ 0x2ce0 (11488) - ISETP.LT.AND P3, PT, R135, R208, !P3 ;
 Instr 719 @ 0x2cf0 (11504) - IMAD R222, R222, R2, R3 ;
 Instr 720 @ 0x2d00 (11520) - ULDC.64 UR6, c[0x0][0x160] ;
 Instr 721 @ 0x2d10 (11536) - IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x3d0] ;
 Instr 722 @ 0x2d20 (11552) - P2R R213, PR, RZ, 0xf ;
 Instr 723 @ 0x2d30 (11568) - IMAD R0, R133, c[0x0][0x3ac], R0 ;
 Instr 724 @ 0x2d40 (11584) - IMAD R220, R3, 0x20, R222 ;
 Instr 725 @ 0x2d50 (11600) - IADD3 R210, R0, c[0x0][0x638], RZ ;
 Instr 726 @ 0x2d60 (11616) - IMAD R218, R3, 0x20, R220 ;
 Instr 727 @ 0x2d70 (11632) - IMAD R216, R3, 0x20, R218 ;
 Instr 728 @ 0x2d80 (11648) - @!P5 BRA 0x31e0 ;
Basic block id 27 - num instructions 69
 Instr 729 @ 0x2d90 (11664) - R2P PR, R214, 0xf ;
 Instr 730 @ 0x2da0 (11680) - IMAD.MOV.U32 R3, RZ, RZ, 0x2 ;
 Instr 731 @ 0x2db0 (11696) - CS2R R156, SRZ ;
 Instr 732 @ 0x2dc0 (11712) - CS2R R158, SRZ ;
 Instr 733 @ 0x2dd0 (11728) - CS2R R168, SRZ ;
 Instr 734 @ 0x2de0 (11744) - CS2R R170, SRZ ;
 Instr 735 @ 0x2df0 (11760) - CS2R R148, SRZ ;
 Instr 736 @ 0x2e00 (11776) - CS2R R150, SRZ ;
 Instr 737 @ 0x2e10 (11792) - CS2R R152, SRZ ;
 Instr 738 @ 0x2e20 (11808) - CS2R R154, SRZ ;
 Instr 739 @ 0x2e30 (11824) - IMAD.WIDE R138, R230, R3.reuse, c[0x0][0x160] ;
 Instr 740 @ 0x2e40 (11840) - CS2R R140, SRZ ;
 Instr 741 @ 0x2e50 (11856) - CS2R R142, SRZ ;
 Instr 742 @ 0x2e60 (11872) - CS2R R144, SRZ ;
 Instr 743 @ 0x2e70 (11888) - IMAD.WIDE R132, R228, R3, c[0x0][0x160] ;
 Instr 744 @ 0x2e80 (11904) - CS2R R146, SRZ ;
 Instr 745 @ 0x2e90 (11920) - UMOV UR5, 0x2 ;
 Instr 746 @ 0x2ea0 (11936) - IMAD.WIDE R136, R226, R3.reuse, c[0x0][0x160] ;
 Instr 747 @ 0x2eb0 (11952) - @P0 LDG.E.128.SYS R156, [R138] ;
 Instr 748 @ 0x2ec0 (11968) - ULDC UR4, c[0x0][0x618] ;
 Instr 749 @ 0x2ed0 (11984) - IMAD.WIDE R134, R224, R3, c[0x0][0x160] ;
 Instr 750 @ 0x2ee0 (12000) - @P1 LDG.E.128.SYS R168, [R132] ;
 Instr 751 @ 0x2ef0 (12016) - ULDC.64 UR8, c[0x0][0x160] ;
 Instr 752 @ 0x2f00 (12032) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x630] ;
 Instr 753 @ 0x2f10 (12048) - @P2 LDG.E.128.SYS R148, [R136] ;
 Instr 754 @ 0x2f20 (12064) - ULDC.64 UR6, c[0x0][0x408] ;
 Instr 755 @ 0x2f30 (12080) - ULDC.64 UR10, c[0x0][0x168] ;
 Instr 756 @ 0x2f40 (12096) - @P3 LDG.E.128.SYS R152, [R134] ;
 Instr 757 @ 0x2f50 (12112) - R2P PR, R213, 0xf ;
 Instr 758 @ 0x2f60 (12128) - IMAD.WIDE R172, R222, R3.reuse, c[0x0][0x168] ;
 Instr 759 @ 0x2f70 (12144) - CS2R R132, SRZ ;
 Instr 760 @ 0x2f80 (12160) - CS2R R138, SRZ ;
 Instr 761 @ 0x2f90 (12176) - CS2R R136, SRZ ;
 Instr 762 @ 0x2fa0 (12192) - IMAD.WIDE R166, R220, R3, c[0x0][0x168] ;
 Instr 763 @ 0x2fb0 (12208) - CS2R R134, SRZ ;
 Instr 764 @ 0x2fc0 (12224) - IMAD.WIDE R160, R218, R3, c[0x0][0x168] ;
 Instr 765 @ 0x2fd0 (12240) - @P0 LDG.E.128.SYS R140, [R172] ;
 Instr 766 @ 0x2fe0 (12256) - IMAD.WIDE R2, R216, R3, c[0x0][0x168] ;
 Instr 767 @ 0x2ff0 (12272) - @P1 LDG.E.128.SYS R144, [R166] ;
 Instr 768 @ 0x3000 (12288) - @P2 LDG.E.128.SYS R132, [R160] ;
 Instr 769 @ 0x3010 (12304) - @P3 LDG.E.128.SYS R136, [R2] ;
 Instr 770 @ 0x3020 (12320) - UISETP.LE.AND UP0, UPT, UR5, UR4, UPT ;
 Instr 771 @ 0x3030 (12336) - UISETP.NE.AND UP1, UPT, UR12, UR4, UPT ;
 Instr 772 @ 0x3040 (12352) - ISETP.GE.AND P6, PT, R0, c[0x0][0x634], PT ;
 Instr 773 @ 0x3050 (12368) - ULDC.64 UR4, c[0x0][0x508] ;
 Instr 774 @ 0x3060 (12384) - PLOP3.LUT P4, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 775 @ 0x3070 (12400) - USEL UR13, URZ, 0x1, !UP1 ;
 Instr 776 @ 0x3080 (12416) - @UP0 USHF.L.U32 UR15, UR12, UR13, URZ ;
 Instr 777 @ 0x3090 (12432) - @P4 LOP3.LUT P0, RZ, R206, UR15, RZ, 0xc0, !PT ;
 Instr 778 @ 0x30a0 (12448) - @P4 LOP3.LUT P1, RZ, R205, UR15, RZ, 0xc0, !PT ;
 Instr 779 @ 0x30b0 (12464) - @P4 LOP3.LUT P2, RZ, R204, UR15, RZ, 0xc0, !PT ;
 Instr 780 @ 0x30c0 (12480) - @P4 LOP3.LUT P3, RZ, R203, UR15, RZ, 0xc0, !PT ;
 Instr 781 @ 0x30d0 (12496) - @P4 P2R R214, PR, RZ, 0xf ;
 Instr 782 @ 0x30e0 (12512) - @!P6 ISETP.GE.AND P0, PT, R212, R207.reuse, PT ;
 Instr 783 @ 0x30f0 (12528) - @!P6 ISETP.GE.AND P1, PT, R210, R207, PT ;
 Instr 784 @ 0x3100 (12544) - UIADD3 UR6, UP1, UR8, UR6, URZ ;
 Instr 785 @ 0x3110 (12560) - @!P6 SEL R214, R214, RZ, !P0 ;
 Instr 786 @ 0x3120 (12576) - UIADD3 UR4, UP0, UR10, UR4, URZ ;
 Instr 787 @ 0x3130 (12592) - @!P6 SEL R213, R213, RZ, !P1 ;
 Instr 788 @ 0x3140 (12608) - UIADD3.X UR7, UR9, UR7, URZ, UP1, !UPT ;
 Instr 789 @ 0x3150 (12624) - UIADD3.X UR5, UR11, UR5, URZ, UP0, !UPT ;
 Instr 790 @ 0x3160 (12640) - STS.128 [R202.X16], R156 ;
 Instr 791 @ 0x3170 (12656) - STS.128 [R202.X16+0x800], R168 ;
 Instr 792 @ 0x3180 (12672) - STS.128 [R202.X16+0x1000], R148 ;
 Instr 793 @ 0x3190 (12688) - STS.128 [R202.X16+0x1800], R152 ;
 Instr 794 @ 0x31a0 (12704) - STS.128 [R202.X16+0x2000], R140 ;
 Instr 795 @ 0x31b0 (12720) - STS.128 [R202.X16+0x2800], R144 ;
 Instr 796 @ 0x31c0 (12736) - STS.128 [R202.X16+0x3000], R132 ;
 Instr 797 @ 0x31d0 (12752) - STS.128 [R202.X16+0x3800], R136 ;
Basic block id 28 - num instructions 12
 Instr 798 @ 0x31e0 (12768) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 799 @ 0x31f0 (12784) - IADD3 R146, R165, R164, RZ ;
 Instr 800 @ 0x3200 (12800) - IADD3 R0, R164, R163, RZ ;
 Instr 801 @ 0x3210 (12816) - LDSM.16.M88.2 R2, [R146] ;
 Instr 802 @ 0x3220 (12832) - LDSM.16.M88.2 R140, [R146+0x800] ;
 Instr 803 @ 0x3230 (12848) - LDSM.16.M88.2 R142, [R146+0x1000] ;
 Instr 804 @ 0x3240 (12864) - LDSM.16.M88.2 R144, [R146+0x1800] ;
 Instr 805 @ 0x3250 (12880) - LDSM.16.M88.2 R132, [R0+0x2000] ;
 Instr 806 @ 0x3260 (12896) - LDSM.16.M88.2 R134, [R0+0x2800] ;
 Instr 807 @ 0x3270 (12912) - LDSM.16.M88.2 R136, [R0+0x3000] ;
 Instr 808 @ 0x3280 (12928) - LDSM.16.M88.2 R138, [R0+0x3800] ;
 Instr 809 @ 0x3290 (12944) - @!P5 BRA 0x41c0 ;
Basic block id 29 - num instructions 11
 Instr 810 @ 0x32a0 (12960) - IMAD.WIDE R230, R230, 0x2, RZ ;
 Instr 811 @ 0x32b0 (12976) - MOV R215, c[0x0][0x630] ;
 Instr 812 @ 0x32c0 (12992) - LOP3.LUT R162, R165, 0x10, R164.reuse, 0x36, !PT ;
 Instr 813 @ 0x32d0 (13008) - IMAD.WIDE R228, R228, 0x2, RZ ;
 Instr 814 @ 0x32e0 (13024) - LOP3.LUT R0, R163, 0x10, R164, 0x36, !PT ;
 Instr 815 @ 0x32f0 (13040) - IMAD.WIDE R226, R226, 0x2, RZ ;
 Instr 816 @ 0x3300 (13056) - IMAD.WIDE R224, R224, 0x2, RZ ;
 Instr 817 @ 0x3310 (13072) - IMAD.WIDE R222, R222, 0x2, RZ ;
 Instr 818 @ 0x3320 (13088) - IMAD.WIDE R220, R220, 0x2, RZ ;
 Instr 819 @ 0x3330 (13104) - IMAD.WIDE R218, R218, 0x2, RZ ;
 Instr 820 @ 0x3340 (13120) - IMAD.WIDE R216, R216, 0x2, RZ ;
Basic block id 30 - num instructions 231
 Instr 821 @ 0x3350 (13136) - HMMA.1688.F32 R4, R2, R132, R4 ;
 Instr 822 @ 0x3360 (13152) - LDSM.16.M88.2 R146, [R162] ;
 Instr 823 @ 0x3370 (13168) - CS2R R192, SRZ ;
 Instr 824 @ 0x3380 (13184) - CS2R R194, SRZ ;
 Instr 825 @ 0x3390 (13200) - LOP3.LUT R167, R163, 0x20, R164.reuse, 0x36, !PT ;
 Instr 826 @ 0x33a0 (13216) - CS2R R196, SRZ ;
 Instr 827 @ 0x33b0 (13232) - LOP3.LUT R166, R165, 0x20, R164.reuse, 0x36, !PT ;
 Instr 828 @ 0x33c0 (13248) - LDSM.16.M88.2 R148, [R0+0x2000] ;
 Instr 829 @ 0x33d0 (13264) - HMMA.1688.F32 R8, R2, R133, R8 ;
 Instr 830 @ 0x33e0 (13280) - CS2R R198, SRZ ;
 Instr 831 @ 0x33f0 (13296) - CS2R R184, SRZ ;
 Instr 832 @ 0x3400 (13312) - CS2R R186, SRZ ;
 Instr 833 @ 0x3410 (13328) - CS2R R188, SRZ ;
 Instr 834 @ 0x3420 (13344) - LDSM.16.M88.2 R150, [R0+0x2800] ;
 Instr 835 @ 0x3430 (13360) - CS2R R190, SRZ ;
 Instr 836 @ 0x3440 (13376) - ISETP.GT.AND P6, PT, R215, RZ, PT ;
 Instr 837 @ 0x3450 (13392) - HMMA.1688.F32 R12, R2, R134, R12 ;
 Instr 838 @ 0x3460 (13408) - CS2R R176, SRZ ;
 Instr 839 @ 0x3470 (13424) - CS2R R178, SRZ ;
 Instr 840 @ 0x3480 (13440) - LDSM.16.M88.2 R152, [R0+0x3000] ;
 Instr 841 @ 0x3490 (13456) - CS2R R180, SRZ ;
 Instr 842 @ 0x34a0 (13472) - CS2R R182, SRZ ;
 Instr 843 @ 0x34b0 (13488) - CS2R R168, SRZ ;
 Instr 844 @ 0x34c0 (13504) - UISETP.NE.AND UP0, UPT, UR14, UR13, UPT ;
 Instr 845 @ 0x34d0 (13520) - HMMA.1688.F32 R16, R2, R135, R16 ;
 Instr 846 @ 0x34e0 (13536) - LDSM.16.M88.2 R154, [R0+0x3800] ;
 Instr 847 @ 0x34f0 (13552) - CS2R R170, SRZ ;
 Instr 848 @ 0x3500 (13568) - CS2R R172, SRZ ;
 Instr 849 @ 0x3510 (13584) - CS2R R174, SRZ ;
 Instr 850 @ 0x3520 (13600) - LOP3.LUT R209, R165, R164.reuse, RZ, 0xfc, !PT ;
 Instr 851 @ 0x3530 (13616) - UIADD3 UR9, UR13, 0x1, URZ ;
 Instr 852 @ 0x3540 (13632) - LDSM.16.M88.2 R156, [R162+0x800] ;
 Instr 853 @ 0x3550 (13648) - HMMA.1688.F32 R20, R2, R136, R20 ;
 Instr 854 @ 0x3560 (13664) - USHF.L.U32 UR8, UR13, 0x3, URZ ;
 Instr 855 @ 0x3570 (13680) - LOP3.LUT R211, R163, R164, RZ, 0xfc, !PT ;
 Instr 856 @ 0x3580 (13696) - USEL UR13, UR9, URZ, UP0 ;
 Instr 857 @ 0x3590 (13712) - LDSM.16.M88.2 R158, [R162+0x1000] ;
 Instr 858 @ 0x35a0 (13728) - SEL R214, R214, RZ, P6 ;
 Instr 859 @ 0x35b0 (13744) - HMMA.1688.F32 R24, R2, R137, R24 ;
 Instr 860 @ 0x35c0 (13760) - R2P PR, R214, 0xf ;
 Instr 861 @ 0x35d0 (13776) - LDSM.16.M88.2 R160, [R162+0x1800] ;
 Instr 862 @ 0x35e0 (13792) - SEL R213, R213, RZ, P6 ;
 Instr 863 @ 0x35f0 (13808) - ULDC.64 UR10, c[0x0][UR8+0x408] ;
 Instr 864 @ 0x3600 (13824) - ULDC.64 UR8, c[0x0][UR8+0x508] ;
 Instr 865 @ 0x3610 (13840) - HMMA.1688.F32 R28, R2, R138, R28 ;
 Instr 866 @ 0x3620 (13856) - @P0 LDG.E.128.SYS R192, [R230.64+UR6] ;
 Instr 867 @ 0x3630 (13872) - HMMA.1688.F32 R32, R2, R139, R32 ;
 Instr 868 @ 0x3640 (13888) - LDSM.16.M88.2 R2, [R166] ;
 Instr 869 @ 0x3650 (13904) - HMMA.1688.F32 R36, R140, R132, R36 ;
 Instr 870 @ 0x3660 (13920) - @P1 LDG.E.128.SYS R196, [R228.64+UR6] ;
 Instr 871 @ 0x3670 (13936) - HMMA.1688.F32 R40, R140, R133, R40 ;
 Instr 872 @ 0x3680 (13952) - @P2 LDG.E.128.SYS R184, [R226.64+UR6] ;
 Instr 873 @ 0x3690 (13968) - HMMA.1688.F32 R44, R140, R134, R44 ;
 Instr 874 @ 0x36a0 (13984) - @P3 LDG.E.128.SYS R188, [R224.64+UR6] ;
 Instr 875 @ 0x36b0 (14000) - R2P PR, R213, 0xf ;
 Instr 876 @ 0x36c0 (14016) - UIADD3 UR6, UP1, UR10, UR6, URZ ;
 Instr 877 @ 0x36d0 (14032) - ISETP.GT.AND P5, PT, R215.reuse, c[0x0][0x634], PT ;
 Instr 878 @ 0x36e0 (14048) - HMMA.1688.F32 R48, R140, R135, R48 ;
 Instr 879 @ 0x36f0 (14064) - UIADD3.X UR7, UR11, UR7, URZ, UP1, !UPT ;
 Instr 880 @ 0x3700 (14080) - IADD3 R215, R215, -0x1, RZ ;
 Instr 881 @ 0x3710 (14096) - HMMA.1688.F32 R52, R140, R136, R52 ;
 Instr 882 @ 0x3720 (14112) - @P0 LDG.E.128.SYS R176, [R222.64+UR4] ;
 Instr 883 @ 0x3730 (14128) - HMMA.1688.F32 R56, R140, R137, R56 ;
 Instr 884 @ 0x3740 (14144) - @P1 LDG.E.128.SYS R180, [R220.64+UR4] ;
 Instr 885 @ 0x3750 (14160) - HMMA.1688.F32 R60, R140, R138, R60 ;
 Instr 886 @ 0x3760 (14176) - @P2 LDG.E.128.SYS R168, [R218.64+UR4] ;
 Instr 887 @ 0x3770 (14192) - HMMA.1688.F32 R64, R140, R139, R64 ;
 Instr 888 @ 0x3780 (14208) - @P3 LDG.E.128.SYS R172, [R216.64+UR4] ;
 Instr 889 @ 0x3790 (14224) - UIADD3 UR4, UP0, UR8, UR4, URZ ;
 Instr 890 @ 0x37a0 (14240) - UIADD3.X UR5, UR9, UR5, URZ, UP0, !UPT ;
 Instr 891 @ 0x37b0 (14256) - HMMA.1688.F32 R68, R142, R132, R68 ;
 Instr 892 @ 0x37c0 (14272) - LDSM.16.M88.2 R140, [R166+0x800] ;
 Instr 893 @ 0x37d0 (14288) - HMMA.1688.F32 R72, R142, R133, R72 ;
 Instr 894 @ 0x37e0 (14304) - HMMA.1688.F32 R76, R142, R134, R76 ;
 Instr 895 @ 0x37f0 (14320) - HMMA.1688.F32 R80, R142, R135, R80 ;
 Instr 896 @ 0x3800 (14336) - HMMA.1688.F32 R84, R142, R136, R84 ;
 Instr 897 @ 0x3810 (14352) - HMMA.1688.F32 R88, R142, R137, R88 ;
 Instr 898 @ 0x3820 (14368) - HMMA.1688.F32 R92, R142, R138, R92 ;
 Instr 899 @ 0x3830 (14384) - HMMA.1688.F32 R96, R142, R139, R96 ;
 Instr 900 @ 0x3840 (14400) - LDSM.16.M88.2 R142, [R166+0x1000] ;
 Instr 901 @ 0x3850 (14416) - HMMA.1688.F32 R100, R144, R132, R100 ;
 Instr 902 @ 0x3860 (14432) - HMMA.1688.F32 R104, R144, R133, R104 ;
 Instr 903 @ 0x3870 (14448) - LDSM.16.M88.2 R132, [R167+0x2000] ;
 Instr 904 @ 0x3880 (14464) - HMMA.1688.F32 R108, R144, R134, R108 ;
 Instr 905 @ 0x3890 (14480) - HMMA.1688.F32 R112, R144, R135, R112 ;
 Instr 906 @ 0x38a0 (14496) - LDSM.16.M88.2 R134, [R167+0x2800] ;
 Instr 907 @ 0x38b0 (14512) - HMMA.1688.F32 R116, R144, R136, R116 ;
 Instr 908 @ 0x38c0 (14528) - HMMA.1688.F32 R120, R144, R137, R120 ;
 Instr 909 @ 0x38d0 (14544) - LDSM.16.M88.2 R136, [R167+0x3000] ;
 Instr 910 @ 0x38e0 (14560) - HMMA.1688.F32 R124, R144, R138, R124 ;
 Instr 911 @ 0x38f0 (14576) - HMMA.1688.F32 R128, R144, R139, R128 ;
 Instr 912 @ 0x3900 (14592) - LDSM.16.M88.2 R138, [R167+0x3800] ;
 Instr 913 @ 0x3910 (14608) - HMMA.1688.F32 R4, R146, R148, R4 ;
 Instr 914 @ 0x3920 (14624) - LDSM.16.M88.2 R144, [R166+0x1800] ;
 Instr 915 @ 0x3930 (14640) - LOP3.LUT R167, R163, 0x30, R164.reuse, 0x36, !PT ;
 Instr 916 @ 0x3940 (14656) - HMMA.1688.F32 R8, R146, R149, R8 ;
 Instr 917 @ 0x3950 (14672) - LOP3.LUT R166, R165, 0x30, R164, 0x36, !PT ;
 Instr 918 @ 0x3960 (14688) - HMMA.1688.F32 R12, R146, R150, R12 ;
 Instr 919 @ 0x3970 (14704) - HMMA.1688.F32 R16, R146, R151, R16 ;
 Instr 920 @ 0x3980 (14720) - HMMA.1688.F32 R20, R146, R152, R20 ;
 Instr 921 @ 0x3990 (14736) - HMMA.1688.F32 R24, R146, R153, R24 ;
 Instr 922 @ 0x39a0 (14752) - HMMA.1688.F32 R28, R146, R154, R28 ;
 Instr 923 @ 0x39b0 (14768) - HMMA.1688.F32 R32, R146, R155, R32 ;
 Instr 924 @ 0x39c0 (14784) - LDSM.16.M88.2 R146, [R166] ;
 Instr 925 @ 0x39d0 (14800) - HMMA.1688.F32 R36, R156, R148, R36 ;
 Instr 926 @ 0x39e0 (14816) - HMMA.1688.F32 R40, R156, R149, R40 ;
 Instr 927 @ 0x39f0 (14832) - HMMA.1688.F32 R44, R156, R150, R44 ;
 Instr 928 @ 0x3a00 (14848) - HMMA.1688.F32 R48, R156, R151, R48 ;
 Instr 929 @ 0x3a10 (14864) - HMMA.1688.F32 R52, R156, R152, R52 ;
 Instr 930 @ 0x3a20 (14880) - HMMA.1688.F32 R56, R156, R153, R56 ;
 Instr 931 @ 0x3a30 (14896) - HMMA.1688.F32 R60, R156, R154, R60 ;
 Instr 932 @ 0x3a40 (14912) - HMMA.1688.F32 R64, R156, R155, R64 ;
 Instr 933 @ 0x3a50 (14928) - LDSM.16.M88.2 R156, [R166+0x800] ;
 Instr 934 @ 0x3a60 (14944) - HMMA.1688.F32 R68, R158, R148, R68 ;
 Instr 935 @ 0x3a70 (14960) - HMMA.1688.F32 R72, R158, R149, R72 ;
 Instr 936 @ 0x3a80 (14976) - HMMA.1688.F32 R76, R158, R150, R76 ;
 Instr 937 @ 0x3a90 (14992) - HMMA.1688.F32 R80, R158, R151, R80 ;
 Instr 938 @ 0x3aa0 (15008) - HMMA.1688.F32 R84, R158, R152, R84 ;
 Instr 939 @ 0x3ab0 (15024) - HMMA.1688.F32 R88, R158, R153, R88 ;
 Instr 940 @ 0x3ac0 (15040) - HMMA.1688.F32 R92, R158, R154, R92 ;
 Instr 941 @ 0x3ad0 (15056) - HMMA.1688.F32 R96, R158, R155, R96 ;
 Instr 942 @ 0x3ae0 (15072) - LDSM.16.M88.2 R158, [R166+0x1000] ;
 Instr 943 @ 0x3af0 (15088) - HMMA.1688.F32 R100, R160, R148, R100 ;
 Instr 944 @ 0x3b00 (15104) - HMMA.1688.F32 R104, R160, R149, R104 ;
 Instr 945 @ 0x3b10 (15120) - LDSM.16.M88.2 R148, [R167+0x2000] ;
 Instr 946 @ 0x3b20 (15136) - HMMA.1688.F32 R108, R160, R150, R108 ;
 Instr 947 @ 0x3b30 (15152) - HMMA.1688.F32 R112, R160, R151, R112 ;
 Instr 948 @ 0x3b40 (15168) - LDSM.16.M88.2 R150, [R167+0x2800] ;
 Instr 949 @ 0x3b50 (15184) - HMMA.1688.F32 R116, R160, R152, R116 ;
 Instr 950 @ 0x3b60 (15200) - HMMA.1688.F32 R120, R160, R153, R120 ;
 Instr 951 @ 0x3b70 (15216) - LDSM.16.M88.2 R152, [R167+0x3000] ;
 Instr 952 @ 0x3b80 (15232) - HMMA.1688.F32 R124, R160, R154, R124 ;
 Instr 953 @ 0x3b90 (15248) - HMMA.1688.F32 R128, R160, R155, R128 ;
 Instr 954 @ 0x3ba0 (15264) - LDSM.16.M88.2 R154, [R167+0x3800] ;
 Instr 955 @ 0x3bb0 (15280) - HMMA.1688.F32 R4, R2, R132, R4 ;
 Instr 956 @ 0x3bc0 (15296) - LDSM.16.M88.2 R160, [R166+0x1800] ;
 Instr 957 @ 0x3bd0 (15312) - HMMA.1688.F32 R8, R2, R133, R8 ;
 Instr 958 @ 0x3be0 (15328) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 959 @ 0x3bf0 (15344) - HMMA.1688.F32 R12, R2, R134, R12 ;
 Instr 960 @ 0x3c00 (15360) - HMMA.1688.F32 R16, R2, R135, R16 ;
 Instr 961 @ 0x3c10 (15376) - HMMA.1688.F32 R20, R2, R136, R20 ;
 Instr 962 @ 0x3c20 (15392) - HMMA.1688.F32 R24, R2, R137, R24 ;
 Instr 963 @ 0x3c30 (15408) - HMMA.1688.F32 R28, R2, R138, R28 ;
 Instr 964 @ 0x3c40 (15424) - HMMA.1688.F32 R32, R2, R139, R32 ;
 Instr 965 @ 0x3c50 (15440) - HMMA.1688.F32 R36, R140, R132, R36 ;
 Instr 966 @ 0x3c60 (15456) - HMMA.1688.F32 R40, R140, R133, R40 ;
 Instr 967 @ 0x3c70 (15472) - HMMA.1688.F32 R44, R140, R134, R44 ;
 Instr 968 @ 0x3c80 (15488) - HMMA.1688.F32 R48, R140, R135, R48 ;
 Instr 969 @ 0x3c90 (15504) - HMMA.1688.F32 R52, R140, R136, R52 ;
 Instr 970 @ 0x3ca0 (15520) - HMMA.1688.F32 R56, R140, R137, R56 ;
 Instr 971 @ 0x3cb0 (15536) - HMMA.1688.F32 R60, R140, R138, R60 ;
 Instr 972 @ 0x3cc0 (15552) - HMMA.1688.F32 R64, R140, R139, R64 ;
 Instr 973 @ 0x3cd0 (15568) - HMMA.1688.F32 R68, R142, R132, R68 ;
 Instr 974 @ 0x3ce0 (15584) - HMMA.1688.F32 R72, R142, R133, R72 ;
 Instr 975 @ 0x3cf0 (15600) - HMMA.1688.F32 R76, R142, R134, R76 ;
 Instr 976 @ 0x3d00 (15616) - HMMA.1688.F32 R80, R142, R135, R80 ;
 Instr 977 @ 0x3d10 (15632) - HMMA.1688.F32 R84, R142, R136, R84 ;
 Instr 978 @ 0x3d20 (15648) - HMMA.1688.F32 R88, R142, R137, R88 ;
 Instr 979 @ 0x3d30 (15664) - HMMA.1688.F32 R92, R142, R138, R92 ;
 Instr 980 @ 0x3d40 (15680) - HMMA.1688.F32 R96, R142, R139, R96 ;
 Instr 981 @ 0x3d50 (15696) - HMMA.1688.F32 R100, R144, R132, R100 ;
 Instr 982 @ 0x3d60 (15712) - HMMA.1688.F32 R104, R144, R133, R104 ;
 Instr 983 @ 0x3d70 (15728) - HMMA.1688.F32 R108, R144, R134, R108 ;
 Instr 984 @ 0x3d80 (15744) - HMMA.1688.F32 R112, R144, R135, R112 ;
 Instr 985 @ 0x3d90 (15760) - HMMA.1688.F32 R116, R144, R136, R116 ;
 Instr 986 @ 0x3da0 (15776) - HMMA.1688.F32 R120, R144, R137, R120 ;
 Instr 987 @ 0x3db0 (15792) - HMMA.1688.F32 R124, R144, R138, R124 ;
 Instr 988 @ 0x3dc0 (15808) - HMMA.1688.F32 R128, R144, R139, R128 ;
 Instr 989 @ 0x3dd0 (15824) - HMMA.1688.F32 R4, R146, R148, R4 ;
 Instr 990 @ 0x3de0 (15840) - HMMA.1688.F32 R8, R146, R149, R8 ;
 Instr 991 @ 0x3df0 (15856) - HMMA.1688.F32 R12, R146, R150, R12 ;
 Instr 992 @ 0x3e00 (15872) - HMMA.1688.F32 R16, R146, R151, R16 ;
 Instr 993 @ 0x3e10 (15888) - HMMA.1688.F32 R20, R146, R152, R20 ;
 Instr 994 @ 0x3e20 (15904) - STS.128 [R202.X16], R192 ;
 Instr 995 @ 0x3e30 (15920) - HMMA.1688.F32 R24, R146, R153, R24 ;
 Instr 996 @ 0x3e40 (15936) - STS.128 [R202.X16+0x800], R196 ;
 Instr 997 @ 0x3e50 (15952) - HMMA.1688.F32 R28, R146, R154, R28 ;
 Instr 998 @ 0x3e60 (15968) - STS.128 [R202.X16+0x1000], R184 ;
 Instr 999 @ 0x3e70 (15984) - HMMA.1688.F32 R32, R146, R155, R32 ;
 Instr 1000 @ 0x3e80 (16000) - STS.128 [R202.X16+0x1800], R188 ;
 Instr 1001 @ 0x3e90 (16016) - HMMA.1688.F32 R36, R156, R148, R36 ;
 Instr 1002 @ 0x3ea0 (16032) - STS.128 [R202.X16+0x2000], R176 ;
 Instr 1003 @ 0x3eb0 (16048) - HMMA.1688.F32 R40, R156, R149, R40 ;
 Instr 1004 @ 0x3ec0 (16064) - STS.128 [R202.X16+0x2800], R180 ;
 Instr 1005 @ 0x3ed0 (16080) - HMMA.1688.F32 R44, R156, R150, R44 ;
 Instr 1006 @ 0x3ee0 (16096) - STS.128 [R202.X16+0x3000], R168 ;
 Instr 1007 @ 0x3ef0 (16112) - HMMA.1688.F32 R48, R156, R151, R48 ;
 Instr 1008 @ 0x3f00 (16128) - STS.128 [R202.X16+0x3800], R172 ;
 Instr 1009 @ 0x3f10 (16144) - HMMA.1688.F32 R52, R156, R152, R52 ;
 Instr 1010 @ 0x3f20 (16160) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1011 @ 0x3f30 (16176) - IMAD.MOV.U32 R168, RZ, RZ, c[0x0][0x618] ;
 Instr 1012 @ 0x3f40 (16192) - ISETP.GE.AND P4, PT, R168, 0x2, PT ;
 Instr 1013 @ 0x3f50 (16208) - HMMA.1688.F32 R56, R156, R153, R56 ;
 Instr 1014 @ 0x3f60 (16224) - HMMA.1688.F32 R60, R156, R154, R60 ;
 Instr 1015 @ 0x3f70 (16240) - @P4 IMAD.MOV.U32 R168, RZ, RZ, 0x1 ;
 Instr 1016 @ 0x3f80 (16256) - HMMA.1688.F32 R64, R156, R155, R64 ;
 Instr 1017 @ 0x3f90 (16272) - @P4 SHF.L.U32 R168, R168, UR13, RZ ;
 Instr 1018 @ 0x3fa0 (16288) - @P4 LOP3.LUT P0, RZ, R206, R168.reuse, RZ, 0xc0, !PT ;
 Instr 1019 @ 0x3fb0 (16304) - HMMA.1688.F32 R68, R158, R148, R68 ;
 Instr 1020 @ 0x3fc0 (16320) - LDSM.16.M88.2 R2, [R209] ;
 Instr 1021 @ 0x3fd0 (16336) - @P4 LOP3.LUT P1, RZ, R205, R168.reuse, RZ, 0xc0, !PT ;
 Instr 1022 @ 0x3fe0 (16352) - @P4 LOP3.LUT P2, RZ, R204, R168.reuse, RZ, 0xc0, !PT ;
 Instr 1023 @ 0x3ff0 (16368) - LDSM.16.M88.2 R140, [R209+0x800] ;
 Instr 1024 @ 0x4000 (16384) - HMMA.1688.F32 R72, R158, R149, R72 ;
 Instr 1025 @ 0x4010 (16400) - @P4 LOP3.LUT P3, RZ, R203, R168, RZ, 0xc0, !PT ;
 Instr 1026 @ 0x4020 (16416) - LDSM.16.M88.2 R142, [R209+0x1000] ;
 Instr 1027 @ 0x4030 (16432) - @P4 P2R R214, PR, RZ, 0xf ;
 Instr 1028 @ 0x4040 (16448) - HMMA.1688.F32 R76, R158, R150, R76 ;
 Instr 1029 @ 0x4050 (16464) - LDSM.16.M88.2 R144, [R209+0x1800] ;
 Instr 1030 @ 0x4060 (16480) - ISETP.LT.OR P0, PT, R210, R207.reuse, P5 ;
 Instr 1031 @ 0x4070 (16496) - ISETP.LT.OR P5, PT, R212, R207, P5 ;
 Instr 1032 @ 0x4080 (16512) - HMMA.1688.F32 R80, R158, R151, R80 ;
 Instr 1033 @ 0x4090 (16528) - LDSM.16.M88.2 R132, [R211+0x2000] ;
 Instr 1034 @ 0x40a0 (16544) - SEL R213, R213, RZ, P0 ;
 Instr 1035 @ 0x40b0 (16560) - SEL R214, R214, RZ, P5 ;
 Instr 1036 @ 0x40c0 (16576) - LDSM.16.M88.2 R134, [R211+0x2800] ;
 Instr 1037 @ 0x40d0 (16592) - HMMA.1688.F32 R84, R158, R152, R84 ;
 Instr 1038 @ 0x40e0 (16608) - LDSM.16.M88.2 R136, [R211+0x3000] ;
 Instr 1039 @ 0x40f0 (16624) - HMMA.1688.F32 R88, R158, R153, R88 ;
 Instr 1040 @ 0x4100 (16640) - LDSM.16.M88.2 R138, [R211+0x3800] ;
 Instr 1041 @ 0x4110 (16656) - HMMA.1688.F32 R92, R158, R154, R92 ;
 Instr 1042 @ 0x4120 (16672) - HMMA.1688.F32 R96, R158, R155, R96 ;
 Instr 1043 @ 0x4130 (16688) - HMMA.1688.F32 R100, R160, R148, R100 ;
 Instr 1044 @ 0x4140 (16704) - HMMA.1688.F32 R104, R160, R149, R104 ;
 Instr 1045 @ 0x4150 (16720) - HMMA.1688.F32 R108, R160, R150, R108 ;
 Instr 1046 @ 0x4160 (16736) - HMMA.1688.F32 R112, R160, R151, R112 ;
 Instr 1047 @ 0x4170 (16752) - HMMA.1688.F32 R116, R160, R152, R116 ;
 Instr 1048 @ 0x4180 (16768) - HMMA.1688.F32 R120, R160, R153, R120 ;
 Instr 1049 @ 0x4190 (16784) - HMMA.1688.F32 R124, R160, R154, R124 ;
 Instr 1050 @ 0x41a0 (16800) - HMMA.1688.F32 R128, R160, R155, R128 ;
 Instr 1051 @ 0x41b0 (16816) - @P6 BRA 0x3350 ;
Basic block id 31 - num instructions 38
 Instr 1052 @ 0x41c0 (16832) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
 Instr 1053 @ 0x41d0 (16848) - @P1 IMAD.MOV.U32 R132, RZ, RZ, c[0x0][0x188] ;
 Instr 1054 @ 0x41e0 (16864) - @P1 IMAD.MOV.U32 R133, RZ, RZ, c[0x0][0x18c] ;
 Instr 1055 @ 0x41f0 (16880) - @P1 IMAD.MOV.U32 R140, RZ, RZ, c[0x0][0x190] ;
 Instr 1056 @ 0x4200 (16896) - @P1 IMAD.MOV.U32 R141, RZ, RZ, c[0x0][0x194] ;
 Instr 1057 @ 0x4210 (16912) - @P1 LDG.E.SYS R2, [R132] ;
 Instr 1058 @ 0x4220 (16928) - @P1 LDG.E.SYS R173, [R140] ;
 Instr 1059 @ 0x4230 (16944) - ULDC.U8 UR6, c[0x0][0x32c] ;
 Instr 1060 @ 0x4240 (16960) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1061 @ 0x4250 (16976) - ISETP.NE.AND P0, PT, RZ, UR6, PT ;
 Instr 1062 @ 0x4260 (16992) - S2R R0, SR_TID.X ;
 Instr 1063 @ 0x4270 (17008) - IMAD.MOV.U32 R132, RZ, RZ, c[0x0][0x180] ;
 Instr 1064 @ 0x4280 (17024) - BSSY B0, 0x44f0 ;
 Instr 1065 @ 0x4290 (17040) - IMAD.MOV.U32 R133, RZ, RZ, c[0x0][0x184] ;
 Instr 1066 @ 0x42a0 (17056) - @P0 S2R R137, SR_CTAID.Z ;
 Instr 1067 @ 0x42b0 (17072) - @P0 IMAD.MOV.U32 R136, RZ, RZ, 0x2 ;
 Instr 1068 @ 0x42c0 (17088) - SHF.R.S32.HI R135, RZ, 0x1f, R0 ;
 Instr 1069 @ 0x42d0 (17104) - LOP3.LUT R134, R0.reuse, 0x20, RZ, 0xc0, !PT ;
 Instr 1070 @ 0x42e0 (17120) - LOP3.LUT R3, R0.reuse, 0x1e, RZ, 0xc0, !PT ;
 Instr 1071 @ 0x42f0 (17136) - SHF.L.U32 R138, R0, 0x3, RZ ;
 Instr 1072 @ 0x4300 (17152) - LEA.HI R170, R135, R0, RZ, 0x4 ;
 Instr 1073 @ 0x4310 (17168) - LEA.HI R134, R3, R134, RZ, 0x1f ;
 Instr 1074 @ 0x4320 (17184) - @P0 IMAD R137, R137, c[0x0][0x33c], RZ ;
 Instr 1075 @ 0x4330 (17200) - LOP3.LUT R3, R0, 0x40, RZ, 0xc0, !PT ;
 Instr 1076 @ 0x4340 (17216) - LOP3.LUT R138, R138, 0x8, RZ, 0xc0, !PT ;
 Instr 1077 @ 0x4350 (17232) - @P0 IMAD.WIDE R132, R137, R136, c[0x0][0x180] ;
 Instr 1078 @ 0x4360 (17248) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x320], PT ;
 Instr 1079 @ 0x4370 (17264) - LOP3.LUT R135, R170, 0xfffffff0, RZ, 0xc0, !PT ;
 Instr 1080 @ 0x4380 (17280) - SHF.R.S32.HI R170, RZ, 0x4, R170 ;
 Instr 1081 @ 0x4390 (17296) - LEA.HI R3, R3, R138, RZ, 0x1f ;
 Instr 1082 @ 0x43a0 (17312) - IADD3 R135, -R135, R0, RZ ;
 Instr 1083 @ 0x43b0 (17328) - IMAD.IADD R168, R201, 0x1, R170 ;
 Instr 1084 @ 0x43c0 (17344) - IMAD R3, R134, 0x110, R3 ;
 Instr 1085 @ 0x43d0 (17360) - IMAD R169, R135, 0x8, R200 ;
 Instr 1086 @ 0x43e0 (17376) - IMAD R170, R170, 0x22, R135 ;
 Instr 1087 @ 0x43f0 (17392) - @!P1 MOV R2, c[0x0][0x1e0] ;
 Instr 1088 @ 0x4400 (17408) - @!P1 IMAD.MOV.U32 R173, RZ, RZ, c[0x0][0x1f0] ;
 Instr 1089 @ 0x4410 (17424) - @!P0 BRA 0x44c0 ;
Basic block id 32 - num instructions 4
 Instr 1090 @ 0x4420 (17440) - ISETP.GE.AND P0, PT, R169, c[0x0][0x320], PT ;
 Instr 1091 @ 0x4430 (17456) - CS2R R164, SRZ ;
 Instr 1092 @ 0x4440 (17472) - CS2R R166, SRZ ;
 Instr 1093 @ 0x4450 (17488) - @P0 BRA 0x44e0 ;
Basic block id 33 - num instructions 6
 Instr 1094 @ 0x4460 (17504) - SHF.R.S32.HI R134, RZ, 0x1f, R169 ;
 Instr 1095 @ 0x4470 (17520) - LEA.HI R135, R134, R169, RZ, 0x3 ;
 Instr 1096 @ 0x4480 (17536) - SHF.R.S32.HI R135, RZ, 0x3, R135 ;
 Instr 1097 @ 0x4490 (17552) - IMAD.WIDE R132, R135, 0x10, R132 ;
 Instr 1098 @ 0x44a0 (17568) - LDG.E.128.SYS R164, [R132] ;
 Instr 1099 @ 0x44b0 (17584) - BRA 0x44e0 ;
Basic block id 34 - num instructions 2
 Instr 1100 @ 0x44c0 (17600) - CS2R R164, SRZ ;
 Instr 1101 @ 0x44d0 (17616) - CS2R R166, SRZ ;
Basic block id 35 - num instructions 5
 Instr 1102 @ 0x44e0 (17632) - BSYNC B0 ;
 Instr 1103 @ 0x44f0 (17648) - IMAD.MOV.U32 R132, RZ, RZ, c[0x0][0x338] ;
 Instr 1104 @ 0x4500 (17664) - ISETP.GE.AND P0, PT, R132, 0x1, PT ;
 Instr 1105 @ 0x4510 (17680) - ISETP.EQ.OR P0, PT, RZ, UR6, !P0 ;
 Instr 1106 @ 0x4520 (17696) - @P0 BRA 0x45e0 ;
Basic block id 36 - num instructions 11
 Instr 1107 @ 0x4530 (17712) - S2R R133, SR_CTAID.Z ;
 Instr 1108 @ 0x4540 (17728) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 1109 @ 0x4550 (17744) - IMAD.MOV.U32 R134, RZ, RZ, 0x4 ;
 Instr 1110 @ 0x4560 (17760) - IMAD.MOV.U32 R173, RZ, RZ, RZ ;
 Instr 1111 @ 0x4570 (17776) - IMAD R133, R133, c[0x0][0x338], RZ ;
 Instr 1112 @ 0x4580 (17792) - IMAD.WIDE R134, R133.reuse, R134, c[0x0][0x188] ;
 Instr 1113 @ 0x4590 (17808) - SHF.R.S32.HI R2, RZ, 0x1f, R133 ;
 Instr 1114 @ 0x45a0 (17824) - @P1 LEA R132, P0, R133, c[0x0][0x190], 0x2 ;
 Instr 1115 @ 0x45b0 (17840) - @P1 LEA.HI.X R133, R133, c[0x0][0x194], R2, 0x2, P0 ;
 Instr 1116 @ 0x45c0 (17856) - LDG.E.SYS R2, [R134] ;
 Instr 1117 @ 0x45d0 (17872) - @P1 LDG.E.SYS R173, [R132] ;
Basic block id 37 - num instructions 21
 Instr 1118 @ 0x45e0 (17888) - S2R R132, SR_CTAID.Z ;
 Instr 1119 @ 0x45f0 (17904) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1120 @ 0x4600 (17920) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x3a0], PT ;
 Instr 1121 @ 0x4610 (17936) - IMAD.MOV.U32 R133, RZ, RZ, c[0x0][0x290] ;
 Instr 1122 @ 0x4620 (17952) - ISETP.NE.AND P1, PT, RZ, UR6, PT ;
 Instr 1123 @ 0x4630 (17968) - S2R R134, SR_CTAID.Y ;
 Instr 1124 @ 0x4640 (17984) - FSETP.NEU.OR P0, PT, R173, RZ, P0 ;
 Instr 1125 @ 0x4650 (18000) - ULDC.64 UR4, c[0x0][0x3c8] ;
 Instr 1126 @ 0x4660 (18016) - IADD3 R135, R133, -0x1, RZ ;
 Instr 1127 @ 0x4670 (18032) - S2R R171, SR_CTAID.X ;
 Instr 1128 @ 0x4680 (18048) - UISETP.NE.AND UP2, UPT, UR12, UR4, UPT ;
 Instr 1129 @ 0x4690 (18064) - UISETP.NE.AND UP1, UPT, UR12, UR5, UPT ;
 Instr 1130 @ 0x46a0 (18080) - ULDC UR4, c[0x0][0x1b4] ;
 Instr 1131 @ 0x46b0 (18096) - ULDC UR5, c[0x0][0x34c] ;
 Instr 1132 @ 0x46c0 (18112) - ULDC UR17, c[0x0][0x350] ;
 Instr 1133 @ 0x46d0 (18128) - ISETP.EQ.OR P2, PT, R132, R135, P1 ;
 Instr 1134 @ 0x46e0 (18144) - UISETP.NE.AND UP0, UPT, UR12, UR4, UPT ;
 Instr 1135 @ 0x46f0 (18160) - UIMAD UR17, UR5, UR17, URZ ;
 Instr 1136 @ 0x4700 (18176) - P2R R172, PR, RZ, 0x4 ;
 Instr 1137 @ 0x4710 (18192) - IMAD R171, R134, c[0x0][0x34c], R171 ;
 Instr 1138 @ 0x4720 (18208) - @P0 BRA 0xc870 ;
Basic block id 38 - num instructions 7
 Instr 1139 @ 0x4730 (18224) - ISETP.NE.AND P0, PT, R133, 0x1, PT ;
 Instr 1140 @ 0x4740 (18240) - UMOV UR16, 0x1 ;
 Instr 1141 @ 0x4750 (18256) - MOV R173, RZ ;
 Instr 1142 @ 0x4760 (18272) - UMOV UR7, URZ ;
 Instr 1143 @ 0x4770 (18288) - CS2R R176, SRZ ;
 Instr 1144 @ 0x4780 (18304) - CS2R R174, SRZ ;
 Instr 1145 @ 0x4790 (18320) - @!P0 BRA 0x4d70 ;
Basic block id 39 - num instructions 5
 Instr 1146 @ 0x47a0 (18336) - IMAD.MOV.U32 R134, RZ, RZ, c[0x0][0x298] ;
 Instr 1147 @ 0x47b0 (18352) - ISETP.NE.AND P1, PT, R133, c[0x0][0x294], PT ;
 Instr 1148 @ 0x47c0 (18368) - S2UR UR7, SR_CTAID.Z ;
 Instr 1149 @ 0x47d0 (18384) - ISETP.EQ.AND P0, PT, R134, 0x2, PT ;
 Instr 1150 @ 0x47e0 (18400) - @!P1 BRA P0, 0x4d70 ;
Basic block id 40 - num instructions 4
 Instr 1151 @ 0x47f0 (18416) - ISETP.EQ.AND P0, PT, R134, 0x1, PT ;
 Instr 1152 @ 0x4800 (18432) - MOV R136, 0x4 ;
 Instr 1153 @ 0x4810 (18448) - IMAD.WIDE R174, R171, R136, c[0x0][0x2c0] ;
 Instr 1154 @ 0x4820 (18464) - @P2 BRA P0, 0x4bb0 ;
Basic block id 41 - num instructions 14
 Instr 1155 @ 0x4830 (18480) - IABS R135, c[0x0][0x294] ;
 Instr 1156 @ 0x4840 (18496) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1157 @ 0x4850 (18512) - BSSY B0, 0x4b20 ;
 Instr 1158 @ 0x4860 (18528) - I2F.RP R140, R135 ;
 Instr 1159 @ 0x4870 (18544) - MUFU.RCP R138, R140 ;
 Instr 1160 @ 0x4880 (18560) - IADD3 R138, R138, 0xffffffe, RZ ;
 Instr 1161 @ 0x4890 (18576) - F2I.FTZ.U32.TRUNC.NTZ R139, R138 ;
 Instr 1162 @ 0x48a0 (18592) - IMAD.MOV.U32 R138, RZ, RZ, RZ ;
 Instr 1163 @ 0x48b0 (18608) - IMAD.MOV R133, RZ, RZ, -R139.reuse ;
 Instr 1164 @ 0x48c0 (18624) - IMAD R134, R133, R135, RZ ;
 Instr 1165 @ 0x48d0 (18640) - IABS R133, R132 ;
 Instr 1166 @ 0x48e0 (18656) - IMAD.HI.U32 R134, R139, R134, R138 ;
 Instr 1167 @ 0x48f0 (18672) - IMAD.HI.U32 R137, R134, R133, RZ ;
 Instr 1168 @ 0x4900 (18688) - IMAD.MOV R134, RZ, RZ, -R137 ;
Basic block id 42 - num instructions 22
 Instr 1169 @ 0x4910 (18704) - IMAD R134, R135.reuse, R134, R133 ;
 Instr 1170 @ 0x4920 (18720) - LOP3.LUT R133, R132, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 1171 @ 0x4930 (18736) - ISETP.GT.U32.AND P1, PT, R135, R134, PT ;
 Instr 1172 @ 0x4940 (18752) - ISETP.GE.AND P0, PT, R133, RZ, PT ;
 Instr 1173 @ 0x4950 (18768) - @!P1 IMAD.IADD R134, R134, 0x1, -R135 ;
 Instr 1174 @ 0x4960 (18784) - @!P1 IADD3 R137, R137, 0x1, RZ ;
 Instr 1175 @ 0x4970 (18800) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x294], PT ;
 Instr 1176 @ 0x4980 (18816) - ISETP.GE.U32.AND P2, PT, R134, R135, PT ;
 Instr 1177 @ 0x4990 (18832) - @P2 IADD3 R137, R137, 0x1, RZ ;
 Instr 1178 @ 0x49a0 (18848) - IMAD.MOV.U32 R133, RZ, RZ, R137 ;
 Instr 1179 @ 0x49b0 (18864) - @!P0 IMAD.MOV R133, RZ, RZ, -R133 ;
 Instr 1180 @ 0x49c0 (18880) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1181 @ 0x49d0 (18896) - @!P1 LOP3.LUT R133, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 1182 @ 0x49e0 (18912) - ISETP.EQ.OR P0, PT, R133.reuse, RZ, P0 ;
 Instr 1183 @ 0x49f0 (18928) - IMAD.MOV R135, RZ, RZ, -R133 ;
 Instr 1184 @ 0x4a00 (18944) - ISETP.NE.AND P1, PT, R133, RZ, PT ;
 Instr 1185 @ 0x4a10 (18960) - IMAD R132, R135, c[0x0][0x294], R132 ;
 Instr 1186 @ 0x4a20 (18976) - SEL R173, RZ, 0x1, !P1 ;
 Instr 1187 @ 0x4a30 (18992) - IMAD R177, R132, UR17, R171 ;
 Instr 1188 @ 0x4a40 (19008) - R2UR UR7, R132 ;
 Instr 1189 @ 0x4a50 (19024) - IMAD.WIDE R176, R177, R136, c[0x0][0x2b8] ;
 Instr 1190 @ 0x4a60 (19040) - @P0 BRA 0x4b10 ;
Basic block id 43 - num instructions 4
 Instr 1191 @ 0x4a70 (19056) - LDG.E.STRONG.GPU R132, [R176] ;
 Instr 1192 @ 0x4a80 (19072) - ISETP.NE.AND P0, PT, R132, R133, PT ;
 Instr 1193 @ 0x4a90 (19088) - CCTL.IVALL ;
 Instr 1194 @ 0x4aa0 (19104) - @!P0 BRA 0x4b10 ;
Basic block id 44 - num instructions 5
 Instr 1195 @ 0x4ab0 (19120) - VOTE.ANY R132, PT, PT ;
 Instr 1196 @ 0x4ac0 (19136) - YIELD ;
 Instr 1197 @ 0x4ad0 (19152) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1198 @ 0x4ae0 (19168) - LOP3.LUT P0, RZ, R132, UR4, RZ, 0xc, !PT ;
 Instr 1199 @ 0x4af0 (19184) - @!P0 BRA.U 0x4a70 ;
Basic block id 45 - num instructions 1
 Instr 1200 @ 0x4b00 (19200) - BRA 0x4ab0 ;
Basic block id 46 - num instructions 2
 Instr 1201 @ 0x4b10 (19216) - BSYNC B0 ;
 Instr 1202 @ 0x4b20 (19232) - BRA.CONV 0x4b60 ;
Basic block id 47 - num instructions 3
 Instr 1203 @ 0x4b30 (19248) - MOV R133, 0xffffffff ;
 Instr 1204 @ 0x4b40 (19264) - MOV R132, 0x4b60 ;
 Instr 1205 @ 0x4b50 (19280) - CALL.REL.NOINC 0x15f50 ;
Basic block id 48 - num instructions 5
 Instr 1206 @ 0x4b60 (19296) - NOP ;
 Instr 1207 @ 0x4b70 (19312) - WARPSYNC 0xffffffff ;
 Instr 1208 @ 0x4b80 (19328) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1209 @ 0x4b90 (19344) - UMOV UR16, URZ ;
 Instr 1210 @ 0x4ba0 (19360) - BRA 0x4d70 ;
Basic block id 49 - num instructions 8
 Instr 1211 @ 0x4bb0 (19376) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1212 @ 0x4bc0 (19392) - IMAD.MOV.U32 R173, RZ, RZ, c[0x0][0x294] ;
 Instr 1213 @ 0x4bd0 (19408) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1214 @ 0x4be0 (19424) - BSSY B0, 0x4ce0 ;
 Instr 1215 @ 0x4bf0 (19440) - ISETP.EQ.OR P0, PT, R135, RZ, P0 ;
 Instr 1216 @ 0x4c00 (19456) - IADD3 R173, R173, -0x1, RZ ;
 Instr 1217 @ 0x4c10 (19472) - @P1 IMAD.MOV R173, RZ, RZ, c[0x0][0x294] ;
 Instr 1218 @ 0x4c20 (19488) - @P0 BRA 0x4cd0 ;
Basic block id 50 - num instructions 4
 Instr 1219 @ 0x4c30 (19504) - LDG.E.STRONG.GPU R132, [R174] ;
 Instr 1220 @ 0x4c40 (19520) - ISETP.NE.AND P0, PT, R132, R135, PT ;
 Instr 1221 @ 0x4c50 (19536) - CCTL.IVALL ;
 Instr 1222 @ 0x4c60 (19552) - @!P0 BRA 0x4cd0 ;
Basic block id 51 - num instructions 5
 Instr 1223 @ 0x4c70 (19568) - VOTE.ANY R132, PT, PT ;
 Instr 1224 @ 0x4c80 (19584) - YIELD ;
 Instr 1225 @ 0x4c90 (19600) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1226 @ 0x4ca0 (19616) - LOP3.LUT P0, RZ, R132, UR4, RZ, 0xc, !PT ;
 Instr 1227 @ 0x4cb0 (19632) - @!P0 BRA.U 0x4c30 ;
Basic block id 52 - num instructions 1
 Instr 1228 @ 0x4cc0 (19648) - BRA 0x4c70 ;
Basic block id 53 - num instructions 2
 Instr 1229 @ 0x4cd0 (19664) - BSYNC B0 ;
 Instr 1230 @ 0x4ce0 (19680) - BRA.CONV 0x4d20 ;
Basic block id 54 - num instructions 3
 Instr 1231 @ 0x4cf0 (19696) - MOV R133, 0xffffffff ;
 Instr 1232 @ 0x4d00 (19712) - MOV R132, 0x4d20 ;
 Instr 1233 @ 0x4d10 (19728) - CALL.REL.NOINC 0x15f50 ;
Basic block id 55 - num instructions 5
 Instr 1234 @ 0x4d20 (19744) - NOP ;
 Instr 1235 @ 0x4d30 (19760) - WARPSYNC 0xffffffff ;
 Instr 1236 @ 0x4d40 (19776) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1237 @ 0x4d50 (19792) - UMOV UR16, URZ ;
 Instr 1238 @ 0x4d60 (19808) - UMOV UR7, URZ ;
Basic block id 56 - num instructions 13
 Instr 1239 @ 0x4d70 (19824) - IMAD.MOV.U32 R132, RZ, RZ, c[0x0][0x290] ;
 Instr 1240 @ 0x4d80 (19840) - USHF.R.S32.HI UR6, URZ, 0x1f, UR7 ;
 Instr 1241 @ 0x4d90 (19856) - IMAD.MOV.U32 R133, RZ, RZ, c[0x0][0x298] ;
 Instr 1242 @ 0x4da0 (19872) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 1243 @ 0x4db0 (19888) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1244 @ 0x4dc0 (19904) - ISETP.GE.AND P6, PT, R132, 0x2, PT ;
 Instr 1245 @ 0x4dd0 (19920) - UIMAD UR6, UR6, UR4, URZ ;
 Instr 1246 @ 0x4de0 (19936) - ISETP.NE.AND P0, PT, R172, RZ, PT ;
 Instr 1247 @ 0x4df0 (19952) - UIMAD.WIDE.U32 UR18, UR7, UR4, URZ ;
 Instr 1248 @ 0x4e00 (19968) - UIMAD UR7, UR7, UR5, UR6 ;
 Instr 1249 @ 0x4e10 (19984) - ISETP.EQ.AND P1, PT, R133, 0x1, P0 ;
 Instr 1250 @ 0x4e20 (20000) - UIADD3 UR7, UR19, UR7, URZ ;
 Instr 1251 @ 0x4e30 (20016) - @!P6 BRA 0x5520 ;
Basic block id 57 - num instructions 5
 Instr 1252 @ 0x4e40 (20032) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
 Instr 1253 @ 0x4e50 (20048) - USHF.L.U32 UR10, UR17, 0x7, URZ ;
 Instr 1254 @ 0x4e60 (20064) - LEA R181, R171, R0, 0x7 ;
 Instr 1255 @ 0x4e70 (20080) - USHF.R.S32.HI UR9, URZ, 0x1f, UR10 ;
 Instr 1256 @ 0x4e80 (20096) - @!P0 BRA 0x5340 ;
Basic block id 58 - num instructions 7
 Instr 1257 @ 0x4e90 (20112) - IMAD.SHL.U32 R179, R181, 0x10, RZ ;
 Instr 1258 @ 0x4ea0 (20128) - MOV R180, RZ ;
 Instr 1259 @ 0x4eb0 (20144) - USHF.L.U64.HI UR5, UR10, 0x4, UR9 ;
 Instr 1260 @ 0x4ec0 (20160) - USHF.L.U32 UR4, UR10, 0x4, URZ ;
 Instr 1261 @ 0x4ed0 (20176) - SHF.R.S32.HI R178, RZ, 0x1f, R179 ;
 Instr 1262 @ 0x4ee0 (20192) - USHF.L.U64.HI UR6, UR10, 0x5, UR9 ;
 Instr 1263 @ 0x4ef0 (20208) - USHF.L.U32 UR8, UR10, 0x5, URZ ;
Basic block id 59 - num instructions 68
 Instr 1264 @ 0x4f00 (20224) - SHF.R.S32.HI R133, RZ, 0x1f, R180 ;
 Instr 1265 @ 0x4f10 (20240) - MOV R134, UR18 ;
 Instr 1266 @ 0x4f20 (20256) - MOV R137, UR7 ;
 Instr 1267 @ 0x4f30 (20272) - IMAD R133, R133, c[0x0][0x2a0], RZ ;
 Instr 1268 @ 0x4f40 (20288) - MOV R136, R134 ;
 Instr 1269 @ 0x4f50 (20304) - MOV R135, UR19 ;
 Instr 1270 @ 0x4f60 (20320) - IMAD R133, R180.reuse, c[0x0][0x2a4], R133 ;
 Instr 1271 @ 0x4f70 (20336) - IMAD.WIDE.U32 R136, R180, c[0x0][0x2a0], R136 ;
 Instr 1272 @ 0x4f80 (20352) - IADD3 R133, R137, R133, RZ ;
 Instr 1273 @ 0x4f90 (20368) - IADD3 R160, P2, P0, R136, c[0x0][0x2a8], R179 ;
 Instr 1274 @ 0x4fa0 (20384) - IADD3.X R161, R133, c[0x0][0x2ac], R178, P2, P0 ;
 Instr 1275 @ 0x4fb0 (20400) - IADD3 R156, P0, R160, UR4, RZ ;
 Instr 1276 @ 0x4fc0 (20416) - IADD3.X R157, R161, UR5, RZ, P0, !PT ;
 Instr 1277 @ 0x4fd0 (20432) - IADD3 R132, P0, R156, UR4, RZ ;
 Instr 1278 @ 0x4fe0 (20448) - LDG.E.128.STRONG.GPU R160, [R160] ;
 Instr 1279 @ 0x4ff0 (20464) - IADD3.X R133, R157, UR5, RZ, P0, !PT ;
 Instr 1280 @ 0x5000 (20480) - IADD3 R184, P0, R132, UR8, RZ ;
 Instr 1281 @ 0x5010 (20496) - LDG.E.128.STRONG.GPU R156, [R156] ;
 Instr 1282 @ 0x5020 (20512) - IADD3.X R185, R133, UR6, RZ, P0, !PT ;
 Instr 1283 @ 0x5030 (20528) - IADD3 R182, P0, R184, UR8, RZ ;
 Instr 1284 @ 0x5040 (20544) - LDG.E.128.STRONG.GPU R152, [R132] ;
 Instr 1285 @ 0x5050 (20560) - MOV R148, R132 ;
 Instr 1286 @ 0x5060 (20576) - IADD3.X R183, R185, UR6, RZ, P0, !PT ;
 Instr 1287 @ 0x5070 (20592) - MOV R149, R133 ;
 Instr 1288 @ 0x5080 (20608) - LDG.E.128.STRONG.GPU R144, [R184] ;
 Instr 1289 @ 0x5090 (20624) - MOV R140, R184 ;
 Instr 1290 @ 0x50a0 (20640) - MOV R141, R185 ;
 Instr 1291 @ 0x50b0 (20656) - MOV R132, R182 ;
 Instr 1292 @ 0x50c0 (20672) - LDG.E.128.STRONG.GPU R136, [R182] ;
 Instr 1293 @ 0x50d0 (20688) - MOV R133, R183 ;
 Instr 1294 @ 0x50e0 (20704) - LDG.E.128.STRONG.GPU R148, [R148.64+UR4] ;
 Instr 1295 @ 0x50f0 (20720) - LDG.E.128.STRONG.GPU R140, [R140.64+UR4] ;
 Instr 1296 @ 0x5100 (20736) - LDG.E.128.STRONG.GPU R132, [R132.64+UR4] ;
 Instr 1297 @ 0x5110 (20752) - IADD3 R180, R180, 0x1, RZ ;
 Instr 1298 @ 0x5120 (20768) - ISETP.GE.AND P0, PT, R180, R173, PT ;
 Instr 1299 @ 0x5130 (20784) - FADD R4, R160, R4 ;
 Instr 1300 @ 0x5140 (20800) - FADD R5, R161, R5 ;
 Instr 1301 @ 0x5150 (20816) - FADD R6, R162, R6 ;
 Instr 1302 @ 0x5160 (20832) - FADD R7, R163, R7 ;
 Instr 1303 @ 0x5170 (20848) - FADD R8, R156, R8 ;
 Instr 1304 @ 0x5180 (20864) - FADD R9, R157, R9 ;
 Instr 1305 @ 0x5190 (20880) - FADD R10, R158, R10 ;
 Instr 1306 @ 0x51a0 (20896) - FADD R11, R159, R11 ;
 Instr 1307 @ 0x51b0 (20912) - FADD R12, R152, R12 ;
 Instr 1308 @ 0x51c0 (20928) - FADD R13, R153, R13 ;
 Instr 1309 @ 0x51d0 (20944) - FADD R14, R154, R14 ;
 Instr 1310 @ 0x51e0 (20960) - FADD R15, R155, R15 ;
 Instr 1311 @ 0x51f0 (20976) - FADD R20, R144, R20 ;
 Instr 1312 @ 0x5200 (20992) - FADD R21, R145, R21 ;
 Instr 1313 @ 0x5210 (21008) - FADD R16, R148, R16 ;
 Instr 1314 @ 0x5220 (21024) - FADD R17, R149, R17 ;
 Instr 1315 @ 0x5230 (21040) - FADD R18, R150, R18 ;
 Instr 1316 @ 0x5240 (21056) - FADD R19, R151, R19 ;
 Instr 1317 @ 0x5250 (21072) - FADD R22, R146, R22 ;
 Instr 1318 @ 0x5260 (21088) - FADD R23, R147, R23 ;
 Instr 1319 @ 0x5270 (21104) - FADD R24, R140, R24 ;
 Instr 1320 @ 0x5280 (21120) - FADD R25, R141, R25 ;
 Instr 1321 @ 0x5290 (21136) - FADD R26, R142, R26 ;
 Instr 1322 @ 0x52a0 (21152) - FADD R27, R143, R27 ;
 Instr 1323 @ 0x52b0 (21168) - FADD R28, R136, R28 ;
 Instr 1324 @ 0x52c0 (21184) - FADD R29, R137, R29 ;
 Instr 1325 @ 0x52d0 (21200) - FADD R30, R138, R30 ;
 Instr 1326 @ 0x52e0 (21216) - FADD R31, R139, R31 ;
 Instr 1327 @ 0x52f0 (21232) - FADD R32, R132, R32 ;
 Instr 1328 @ 0x5300 (21248) - FADD R33, R133, R33 ;
 Instr 1329 @ 0x5310 (21264) - FADD R34, R134, R34 ;
 Instr 1330 @ 0x5320 (21280) - FADD R35, R135, R35 ;
 Instr 1331 @ 0x5330 (21296) - @!P0 BRA 0x4f00 ;
Basic block id 60 - num instructions 1
 Instr 1332 @ 0x5340 (21312) - @P1 BRA 0x5520 ;
Basic block id 61 - num instructions 29
 Instr 1333 @ 0x5350 (21328) - IMAD.U32 R132, RZ, RZ, UR18 ;
 Instr 1334 @ 0x5360 (21344) - USHF.L.U32 UR12, UR10, 0x4, URZ ;
 Instr 1335 @ 0x5370 (21360) - IMAD.U32 R135, RZ, RZ, UR7 ;
 Instr 1336 @ 0x5380 (21376) - USHF.L.U64.HI UR13, UR10, 0x4, UR9 ;
 Instr 1337 @ 0x5390 (21392) - IMAD.MOV.U32 R134, RZ, RZ, R132 ;
 Instr 1338 @ 0x53a0 (21408) - USHF.L.U32 UR4, UR10, 0x5, URZ ;
 Instr 1339 @ 0x53b0 (21424) - IMAD.U32 R133, RZ, RZ, UR19 ;
 Instr 1340 @ 0x53c0 (21440) - USHF.L.U64.HI UR9, UR10, 0x5, UR9 ;
 Instr 1341 @ 0x53d0 (21456) - IMAD.WIDE R134, R181, 0x10, R134 ;
 Instr 1342 @ 0x53e0 (21472) - IADD3 R138, P0, R134, c[0x0][0x2a8], RZ ;
 Instr 1343 @ 0x53f0 (21488) - IADD3.X R139, R135, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 1344 @ 0x5400 (21504) - IADD3 R136, P0, R138, UR12, RZ ;
 Instr 1345 @ 0x5410 (21520) - IADD3.X R137, R139, UR13, RZ, P0, !PT ;
 Instr 1346 @ 0x5420 (21536) - IADD3 R134, P0, R136, UR12, RZ ;
 Instr 1347 @ 0x5430 (21552) - STG.E.128.SYS [R138], R4 ;
 Instr 1348 @ 0x5440 (21568) - IADD3.X R135, R137, UR13, RZ, P0, !PT ;
 Instr 1349 @ 0x5450 (21584) - IADD3 R132, P0, R134, UR4, RZ ;
 Instr 1350 @ 0x5460 (21600) - STG.E.128.SYS [R136], R8 ;
 Instr 1351 @ 0x5470 (21616) - IADD3.X R133, R135, UR9, RZ, P0, !PT ;
 Instr 1352 @ 0x5480 (21632) - IADD3 R140, P0, R132, UR4, RZ ;
 Instr 1353 @ 0x5490 (21648) - STG.E.128.SYS [R134], R12 ;
 Instr 1354 @ 0x54a0 (21664) - IADD3.X R141, R133, UR9, RZ, P0, !PT ;
 Instr 1355 @ 0x54b0 (21680) - STG.E.128.SYS [R134.64+UR12], R16 ;
 Instr 1356 @ 0x54c0 (21696) - STG.E.128.SYS [R132], R20 ;
 Instr 1357 @ 0x54d0 (21712) - STG.E.128.SYS [R132.64+UR12], R24 ;
 Instr 1358 @ 0x54e0 (21728) - STG.E.128.SYS [R140], R28 ;
 Instr 1359 @ 0x54f0 (21744) - IMAD.MOV.U32 R134, RZ, RZ, R140 ;
 Instr 1360 @ 0x5500 (21760) - IMAD.MOV.U32 R135, RZ, RZ, R141 ;
 Instr 1361 @ 0x5510 (21776) - STG.E.128.SYS [R134.64+UR12], R32 ;
Basic block id 62 - num instructions 1
 Instr 1362 @ 0x5520 (21792) - @!P1 BRA 0x6bb0 ;
Basic block id 63 - num instructions 360
 Instr 1363 @ 0x5530 (21808) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 1364 @ 0x5540 (21824) - IMAD.MOV.U32 R142, RZ, RZ, R168 ;
 Instr 1365 @ 0x5550 (21840) - IADD3 R144, R168.reuse, 0x8, RZ ;
 Instr 1366 @ 0x5560 (21856) - STS.64 [R3], R4 ;
 Instr 1367 @ 0x5570 (21872) - IADD3 R140, R168.reuse, 0x10, RZ ;
 Instr 1368 @ 0x5580 (21888) - IMAD.MOV.U32 R143, RZ, RZ, RZ ;
 Instr 1369 @ 0x5590 (21904) - IADD3 R136, R168.reuse, 0x18, RZ ;
 Instr 1370 @ 0x55a0 (21920) - STS.64 [R3+0x10], R8 ;
 Instr 1371 @ 0x55b0 (21936) - IMAD.MOV.U32 R137, RZ, RZ, RZ ;
 Instr 1372 @ 0x55c0 (21952) - ISETP.GE.AND P5, PT, R169, R208, PT ;
 Instr 1373 @ 0x55d0 (21968) - IMAD.MOV.U32 R135, RZ, RZ, RZ ;
 Instr 1374 @ 0x55e0 (21984) - STS.64 [R3+0x1100], R6 ;
 Instr 1375 @ 0x55f0 (22000) - @P0 IMAD.HI.U32 R132, R168, c[0x0][0x3d8], RZ ;
 Instr 1376 @ 0x5600 (22016) - ISETP.LT.AND P4, PT, R144, c[0x0][0x3c4], !P5 ;
 Instr 1377 @ 0x5610 (22032) - STS.64 [R3+0x1110], R10 ;
 Instr 1378 @ 0x5620 (22048) - @P0 IMAD.HI.U32 R138, R144, c[0x0][0x3d8], RZ ;
 Instr 1379 @ 0x5630 (22064) - @P0 SHF.R.U32.HI R142, RZ, c[0x0][0x3dc], R132 ;
 Instr 1380 @ 0x5640 (22080) - STS.64 [R3+0x40], R12 ;
 Instr 1381 @ 0x5650 (22096) - @P0 IMAD.HI.U32 R134, R140, c[0x0][0x3d8], RZ ;
 Instr 1382 @ 0x5660 (22112) - @P0 SHF.R.U32.HI R138, RZ, c[0x0][0x3dc], R138 ;
 Instr 1383 @ 0x5670 (22128) - STS.64 [R3+0x50], R16 ;
 Instr 1384 @ 0x5680 (22144) - @P0 IMAD.HI.U32 R132, R136, c[0x0][0x3d8], RZ ;
 Instr 1385 @ 0x5690 (22160) - @P0 SHF.R.U32.HI R134, RZ, c[0x0][0x3dc], R134 ;
 Instr 1386 @ 0x56a0 (22176) - STS.64 [R3+0x1140], R14 ;
 Instr 1387 @ 0x56b0 (22192) - @P0 IMAD.MOV R145, RZ, RZ, -R138 ;
 Instr 1388 @ 0x56c0 (22208) - @P0 SHF.R.U32.HI R132, RZ, c[0x0][0x3dc], R132 ;
 Instr 1389 @ 0x56d0 (22224) - @P0 IMAD.MOV R141, RZ, RZ, -R134 ;
 Instr 1390 @ 0x56e0 (22240) - STS.64 [R3+0x1150], R18 ;
 Instr 1391 @ 0x56f0 (22256) - IMAD.MOV.U32 R139, RZ, RZ, RZ ;
 Instr 1392 @ 0x5700 (22272) - ISETP.LT.AND P3, PT, R140, c[0x0][0x3c4], !P5 ;
 Instr 1393 @ 0x5710 (22288) - @P0 IMAD.MOV R133, RZ, RZ, -R132 ;
 Instr 1394 @ 0x5720 (22304) - STS.64 [R3+0x80], R20 ;
 Instr 1395 @ 0x5730 (22320) - @P0 IMAD.MOV R147, RZ, RZ, -R142 ;
 Instr 1396 @ 0x5740 (22336) - ISETP.LT.AND P2, PT, R136, c[0x0][0x3c4], !P5 ;
 Instr 1397 @ 0x5750 (22352) - @P0 IMAD R143, R145, c[0x0][0x3c8], R144 ;
 Instr 1398 @ 0x5760 (22368) - STS.64 [R3+0x90], R24 ;
 Instr 1399 @ 0x5770 (22384) - @P0 IMAD R137, R141, c[0x0][0x3c8], R140 ;
 Instr 1400 @ 0x5780 (22400) - CS2R R16, SRZ ;
 Instr 1401 @ 0x5790 (22416) - @P0 IMAD R135, R133, c[0x0][0x3c8], R136 ;
 Instr 1402 @ 0x57a0 (22432) - STS.64 [R3+0x1180], R22 ;
 Instr 1403 @ 0x57b0 (22448) - @P0 IMAD R139, R147, c[0x0][0x3c8], R168 ;
 Instr 1404 @ 0x57c0 (22464) - ISETP.LT.AND P5, PT, R168, c[0x0][0x3c4], !P5 ;
 Instr 1405 @ 0x57d0 (22480) - @P0 IMAD.MOV.U32 R144, RZ, RZ, R138 ;
 Instr 1406 @ 0x57e0 (22496) - STS.64 [R3+0x1190], R26 ;
 Instr 1407 @ 0x57f0 (22512) - @P0 IMAD.MOV.U32 R140, RZ, RZ, R134 ;
 Instr 1408 @ 0x5800 (22528) - HADD2.F32 R21, R164.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1409 @ 0x5810 (22544) - @P0 IMAD.MOV.U32 R136, RZ, RZ, R132 ;
 Instr 1410 @ 0x5820 (22560) - STS.64 [R3+0xc0], R28 ;
 Instr 1411 @ 0x5830 (22576) - PLOP3.LUT P0, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 1412 @ 0x5840 (22592) - IMAD.MOV.U32 R141, RZ, RZ, RZ ;
 Instr 1413 @ 0x5850 (22608) - HADD2.F32 R20, R164.H1_H1, -RZ.H0_H0 ;
 Instr 1414 @ 0x5860 (22624) - STS.64 [R3+0xd0], R32 ;
 Instr 1415 @ 0x5870 (22640) - IMAD.MOV.U32 R132, RZ, RZ, RZ ;
 Instr 1416 @ 0x5880 (22656) - IMAD.MOV.U32 R138, RZ, RZ, RZ ;
 Instr 1417 @ 0x5890 (22672) - STS.64 [R3+0x11c0], R30 ;
 Instr 1418 @ 0x58a0 (22688) - IMAD.MOV.U32 R134, RZ, RZ, RZ ;
 Instr 1419 @ 0x58b0 (22704) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1420 @ 0x58c0 (22720) - STS.64 [R3+0x11d0], R34 ;
 Instr 1421 @ 0x58d0 (22736) - @P0 IMAD.HI.U32 R149, R139, c[0x0][0x3e0], RZ ;
 Instr 1422 @ 0x58e0 (22752) - HADD2.F32 R33, R165.H0_H0, -RZ.H0_H0 ;
 Instr 1423 @ 0x58f0 (22768) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1424 @ 0x5900 (22784) - @P0 IMAD.HI.U32 R147, R143, c[0x0][0x3e0], RZ ;
 Instr 1425 @ 0x5910 (22800) - @P0 SHF.R.U32.HI R149, RZ, c[0x0][0x3e4], R149 ;
 Instr 1426 @ 0x5920 (22816) - @P0 IMAD.HI.U32 R145, R137, c[0x0][0x3e0], RZ ;
 Instr 1427 @ 0x5930 (22832) - @P0 SHF.R.U32.HI R147, RZ, c[0x0][0x3e4], R147 ;
 Instr 1428 @ 0x5940 (22848) - HADD2.F32 R35, R166.H0_H0, -RZ.H0_H0 ;
 Instr 1429 @ 0x5950 (22864) - @P0 IMAD.HI.U32 R133, R135, c[0x0][0x3e0], RZ ;
 Instr 1430 @ 0x5960 (22880) - @P0 SHF.R.U32.HI R145, RZ, c[0x0][0x3e4], R145 ;
 Instr 1431 @ 0x5970 (22896) - HADD2.F32 R34, R167.H1_H1, -RZ.H0_H0 ;
 Instr 1432 @ 0x5980 (22912) - @P0 IMAD.MOV R152, RZ, RZ, -R149 ;
 Instr 1433 @ 0x5990 (22928) - @P0 SHF.R.U32.HI R133, RZ, c[0x0][0x3e4], R133 ;
 Instr 1434 @ 0x59a0 (22944) - @P0 IMAD.MOV R150, RZ, RZ, -R147 ;
 Instr 1435 @ 0x59b0 (22960) - @P0 IMAD.MOV R148, RZ, RZ, -R145 ;
 Instr 1436 @ 0x59c0 (22976) - @P0 IMAD.MOV R146, RZ, RZ, -R133 ;
 Instr 1437 @ 0x59d0 (22992) - @P0 IMAD R141, R152, c[0x0][0x3cc], R139 ;
 Instr 1438 @ 0x59e0 (23008) - @P0 IMAD R132, R150, c[0x0][0x3cc], R143 ;
 Instr 1439 @ 0x59f0 (23024) - LDS.U.128 R8, [R170.X16] ;
 Instr 1440 @ 0x5a00 (23040) - @P0 IMAD R138, R148, c[0x0][0x3cc], R137 ;
 Instr 1441 @ 0x5a10 (23056) - @P0 IMAD R134, R146, c[0x0][0x3cc], R135 ;
 Instr 1442 @ 0x5a20 (23072) - @P0 IMAD.MOV.U32 R139, RZ, RZ, R149 ;
 Instr 1443 @ 0x5a30 (23088) - @P0 IMAD.MOV.U32 R143, RZ, RZ, R147 ;
 Instr 1444 @ 0x5a40 (23104) - LDS.U.128 R4, [R170.X16+0x1100] ;
 Instr 1445 @ 0x5a50 (23120) - @P0 IMAD.MOV.U32 R137, RZ, RZ, R145 ;
 Instr 1446 @ 0x5a60 (23136) - @P0 IMAD.MOV.U32 R135, RZ, RZ, R133 ;
 Instr 1447 @ 0x5a70 (23152) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 1448 @ 0x5a80 (23168) - IMAD.MOV.U32 R147, RZ, RZ, RZ ;
 Instr 1449 @ 0x5a90 (23184) - IMAD R133, R169, c[0x0][0x254], RZ ;
 Instr 1450 @ 0x5aa0 (23200) - IMAD R144, R144, c[0x0][0x244], R133.reuse ;
 Instr 1451 @ 0x5ab0 (23216) - IMAD R142, R142, c[0x0][0x244], R133 ;
 Instr 1452 @ 0x5ac0 (23232) - IMAD R143, R143, c[0x0][0x248], R144 ;
 Instr 1453 @ 0x5ad0 (23248) - @P0 IMAD.HI.U32 R146, R132, c[0x0][0x3e8], RZ ;
 Instr 1454 @ 0x5ae0 (23264) - @P0 IMAD.HI.U32 R12, R141, c[0x0][0x3e8], RZ ;
 Instr 1455 @ 0x5af0 (23280) - @P0 SHF.R.U32.HI R146, RZ, c[0x0][0x3ec], R146 ;
 Instr 1456 @ 0x5b00 (23296) - @P0 IMAD.HI.U32 R19, R138, c[0x0][0x3e8], RZ ;
 Instr 1457 @ 0x5b10 (23312) - @P0 SHF.R.U32.HI R22, RZ, c[0x0][0x3ec], R12 ;
 Instr 1458 @ 0x5b20 (23328) - @P0 IMAD.HI.U32 R14, R134, c[0x0][0x3e8], RZ ;
 Instr 1459 @ 0x5b30 (23344) - @P0 SHF.R.U32.HI R19, RZ, c[0x0][0x3ec], R19 ;
 Instr 1460 @ 0x5b40 (23360) - @P0 IMAD.MOV R145, RZ, RZ, -R146 ;
 Instr 1461 @ 0x5b50 (23376) - @P0 SHF.R.U32.HI R14, RZ, c[0x0][0x3ec], R14 ;
 Instr 1462 @ 0x5b60 (23392) - @P0 IMAD.MOV R12, RZ, RZ, -R22 ;
 Instr 1463 @ 0x5b70 (23408) - @P0 IMAD.MOV R15, RZ, RZ, -R19 ;
 Instr 1464 @ 0x5b80 (23424) - @P0 IMAD.MOV R13, RZ, RZ, -R14 ;
 Instr 1465 @ 0x5b90 (23440) - FFMA R8, R8, R2, R21 ;
 Instr 1466 @ 0x5ba0 (23456) - @P0 IMAD R147, R145, c[0x0][0x1b4], R132 ;
 Instr 1467 @ 0x5bb0 (23472) - @P0 IMAD R18, R12, c[0x0][0x1b4], R141 ;
 Instr 1468 @ 0x5bc0 (23488) - @P0 IMAD R17, R15, c[0x0][0x1b4], R138 ;
 Instr 1469 @ 0x5bd0 (23504) - @P0 IMAD R16, R13, c[0x0][0x1b4], R134 ;
 Instr 1470 @ 0x5be0 (23520) - @P0 IMAD.MOV.U32 R132, RZ, RZ, R146 ;
 Instr 1471 @ 0x5bf0 (23536) - @P0 IMAD.MOV.U32 R141, RZ, RZ, R22 ;
 Instr 1472 @ 0x5c00 (23552) - @P0 IMAD.MOV.U32 R138, RZ, RZ, R19 ;
 Instr 1473 @ 0x5c10 (23568) - @P0 IMAD.MOV.U32 R134, RZ, RZ, R14 ;
 Instr 1474 @ 0x5c20 (23584) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 1475 @ 0x5c30 (23600) - FFMA R9, R9, R2.reuse, R20.reuse ;
 Instr 1476 @ 0x5c40 (23616) - HADD2.F32 R19, R165.H1_H1, -RZ.H0_H0 ;
 Instr 1477 @ 0x5c50 (23632) - FFMA R4, R4, R2.reuse, R21 ;
 Instr 1478 @ 0x5c60 (23648) - FSEL R8, R8, c[0x0][0x210], P0 ;
 Instr 1479 @ 0x5c70 (23664) - FFMA R5, R5, R2.reuse, R20 ;
 Instr 1480 @ 0x5c80 (23680) - FSETP.GEU.AND P0, PT, R9, c[0x0][0x210], PT ;
 Instr 1481 @ 0x5c90 (23696) - LDS.U.128 R12, [R170.X16+0x2200] ;
 Instr 1482 @ 0x5ca0 (23712) - FFMA R10, R10, R2, R33 ;
 Instr 1483 @ 0x5cb0 (23728) - FSEL R32, R9, c[0x0][0x210], P0 ;
 Instr 1484 @ 0x5cc0 (23744) - FFMA R11, R11, R2.reuse, R19 ;
 Instr 1485 @ 0x5cd0 (23760) - FSETP.GT.AND P0, PT, R8, c[0x0][0x220], PT ;
 Instr 1486 @ 0x5ce0 (23776) - FFMA R6, R6, R2.reuse, R33 ;
 Instr 1487 @ 0x5cf0 (23792) - FFMA R7, R7, R2, R19 ;
 Instr 1488 @ 0x5d00 (23808) - FSEL R29, R8, c[0x0][0x220], !P0 ;
 Instr 1489 @ 0x5d10 (23824) - IMAD R132, R132, c[0x0][0x24c], R143 ;
 Instr 1490 @ 0x5d20 (23840) - FSETP.GT.AND P0, PT, R32, c[0x0][0x220], PT ;
 Instr 1491 @ 0x5d30 (23856) - HADD2.F32 R143, R167.H0_H0, -RZ.H0_H0 ;
 Instr 1492 @ 0x5d40 (23872) - IMAD R142, R139, c[0x0][0x248], R142 ;
 Instr 1493 @ 0x5d50 (23888) - FSEL R32, R32, c[0x0][0x220], !P0 ;
 Instr 1494 @ 0x5d60 (23904) - IMAD R132, R147, c[0x0][0x250], R132 ;
 Instr 1495 @ 0x5d70 (23920) - FSETP.GEU.AND P0, PT, R4, c[0x0][0x210], PT ;
 Instr 1496 @ 0x5d80 (23936) - IMAD R141, R141, c[0x0][0x24c], R142 ;
 Instr 1497 @ 0x5d90 (23952) - F2F.F16.F32 R29, R29 ;
 Instr 1498 @ 0x5da0 (23968) - IMAD R140, R140, c[0x0][0x244], R133 ;
 Instr 1499 @ 0x5db0 (23984) - FSEL R26, R4, c[0x0][0x210], P0 ;
 Instr 1500 @ 0x5dc0 (24000) - IMAD R18, R18, c[0x0][0x250], R141 ;
 Instr 1501 @ 0x5dd0 (24016) - FSETP.GEU.AND P0, PT, R5, c[0x0][0x210], PT ;
 Instr 1502 @ 0x5de0 (24032) - IMAD R136, R136, c[0x0][0x244], R133 ;
 Instr 1503 @ 0x5df0 (24048) - SEL R132, R132, 0xffffffff, P4 ;
 Instr 1504 @ 0x5e00 (24064) - IMAD R137, R137, c[0x0][0x248], R140 ;
 Instr 1505 @ 0x5e10 (24080) - FSEL R27, R5, c[0x0][0x210], P0 ;
 Instr 1506 @ 0x5e20 (24096) - F2F.F16.F32 R32, R32 ;
 Instr 1507 @ 0x5e30 (24112) - FSETP.GT.AND P0, PT, R26, c[0x0][0x220], PT ;
 Instr 1508 @ 0x5e40 (24128) - IMAD R135, R135, c[0x0][0x248], R136 ;
 Instr 1509 @ 0x5e50 (24144) - IMAD R138, R138, c[0x0][0x24c], R137 ;
 Instr 1510 @ 0x5e60 (24160) - FSEL R26, R26, c[0x0][0x220], !P0 ;
 Instr 1511 @ 0x5e70 (24176) - IMAD R135, R134, c[0x0][0x24c], R135 ;
 Instr 1512 @ 0x5e80 (24192) - FSETP.GT.AND P0, PT, R27, c[0x0][0x220], PT ;
 Instr 1513 @ 0x5e90 (24208) - IMAD R17, R17, c[0x0][0x250], R138 ;
 Instr 1514 @ 0x5ea0 (24224) - IMAD R16, R16, c[0x0][0x250], R135 ;
 Instr 1515 @ 0x5eb0 (24240) - FSEL R27, R27, c[0x0][0x220], !P0 ;
 Instr 1516 @ 0x5ec0 (24256) - FFMA R12, R12, R2.reuse, R21 ;
 Instr 1517 @ 0x5ed0 (24272) - FSETP.GEU.AND P0, PT, R10, c[0x0][0x210], PT ;
 Instr 1518 @ 0x5ee0 (24288) - FFMA R13, R13, R2.reuse, R20 ;
 Instr 1519 @ 0x5ef0 (24304) - F2F.F16.F32 R26, R26 ;
 Instr 1520 @ 0x5f00 (24320) - FFMA R14, R14, R2.reuse, R33 ;
 Instr 1521 @ 0x5f10 (24336) - FSEL R31, R10, c[0x0][0x210], P0 ;
 Instr 1522 @ 0x5f20 (24352) - FFMA R15, R15, R2, R19 ;
 Instr 1523 @ 0x5f30 (24368) - FSETP.GEU.AND P0, PT, R11, c[0x0][0x210], PT ;
 Instr 1524 @ 0x5f40 (24384) - FSEL R30, R11, c[0x0][0x210], P0 ;
 Instr 1525 @ 0x5f50 (24400) - F2F.F16.F32 R27, R27 ;
 Instr 1526 @ 0x5f60 (24416) - FSETP.GT.AND P0, PT, R31.reuse, c[0x0][0x220], PT ;
 Instr 1527 @ 0x5f70 (24432) - LDS.U.128 R8, [R170.X16+0x110] ;
 Instr 1528 @ 0x5f80 (24448) - FSEL R31, R31, c[0x0][0x220], !P0 ;
 Instr 1529 @ 0x5f90 (24464) - FSETP.GT.AND P0, PT, R30.reuse, c[0x0][0x220], PT ;
 Instr 1530 @ 0x5fa0 (24480) - FSEL R30, R30, c[0x0][0x220], !P0 ;
 Instr 1531 @ 0x5fb0 (24496) - F2F.F16.F32 R31, R31 ;
 Instr 1532 @ 0x5fc0 (24512) - FSETP.GEU.AND P0, PT, R6, c[0x0][0x210], PT ;
 Instr 1533 @ 0x5fd0 (24528) - FSEL R25, R6, c[0x0][0x210], P0 ;
 Instr 1534 @ 0x5fe0 (24544) - FSETP.GEU.AND P0, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 1535 @ 0x5ff0 (24560) - F2F.F16.F32 R30, R30 ;
 Instr 1536 @ 0x6000 (24576) - FSEL R28, R7, c[0x0][0x210], P0 ;
 Instr 1537 @ 0x6010 (24592) - FSETP.GT.AND P0, PT, R25.reuse, c[0x0][0x220], PT ;
 Instr 1538 @ 0x6020 (24608) - LDS.U.128 R4, [R170.X16+0x3300] ;
 Instr 1539 @ 0x6030 (24624) - FSEL R25, R25, c[0x0][0x220], !P0 ;
 Instr 1540 @ 0x6040 (24640) - FSETP.GT.AND P0, PT, R28.reuse, c[0x0][0x220], PT ;
 Instr 1541 @ 0x6050 (24656) - FSEL R28, R28, c[0x0][0x220], !P0 ;
 Instr 1542 @ 0x6060 (24672) - F2F.F16.F32 R25, R25 ;
 Instr 1543 @ 0x6070 (24688) - FSETP.GEU.AND P0, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 1544 @ 0x6080 (24704) - FSEL R23, R12, c[0x0][0x210], P0 ;
 Instr 1545 @ 0x6090 (24720) - FFMA R10, R10, R2.reuse, R143 ;
 Instr 1546 @ 0x60a0 (24736) - FSETP.GEU.AND P0, PT, R13, c[0x0][0x210], PT ;
 Instr 1547 @ 0x60b0 (24752) - FFMA R11, R11, R2, R34 ;
 Instr 1548 @ 0x60c0 (24768) - F2F.F16.F32 R28, R28 ;
 Instr 1549 @ 0x60d0 (24784) - FSEL R22, R13, c[0x0][0x210], P0 ;
 Instr 1550 @ 0x60e0 (24800) - FSETP.GT.AND P0, PT, R23.reuse, c[0x0][0x220], PT ;
 Instr 1551 @ 0x60f0 (24816) - FSEL R23, R23, c[0x0][0x220], !P0 ;
 Instr 1552 @ 0x6100 (24832) - FSETP.GT.AND P0, PT, R22.reuse, c[0x0][0x220], PT ;
 Instr 1553 @ 0x6110 (24848) - FSEL R22, R22, c[0x0][0x220], !P0 ;
 Instr 1554 @ 0x6120 (24864) - F2F.F16.F32 R23, R23 ;
 Instr 1555 @ 0x6130 (24880) - FSETP.GEU.AND P0, PT, R14, c[0x0][0x210], PT ;
 Instr 1556 @ 0x6140 (24896) - FSEL R12, R14, c[0x0][0x210], P0 ;
 Instr 1557 @ 0x6150 (24912) - FFMA R4, R4, R2.reuse, R21 ;
 Instr 1558 @ 0x6160 (24928) - FSETP.GEU.AND P0, PT, R15, c[0x0][0x210], PT ;
 Instr 1559 @ 0x6170 (24944) - FFMA R5, R5, R2.reuse, R20 ;
 Instr 1560 @ 0x6180 (24960) - F2F.F16.F32 R22, R22 ;
 Instr 1561 @ 0x6190 (24976) - FFMA R6, R6, R2.reuse, R33 ;
 Instr 1562 @ 0x61a0 (24992) - FSEL R24, R15, c[0x0][0x210], P0 ;
 Instr 1563 @ 0x61b0 (25008) - FFMA R7, R7, R2, R19 ;
 Instr 1564 @ 0x61c0 (25024) - FSETP.GT.AND P0, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 1565 @ 0x61d0 (25040) - HADD2.F32 R33, R166.H1_H1, -RZ.H0_H0 ;
 Instr 1566 @ 0x61e0 (25056) - FSEL R21, R12, c[0x0][0x220], !P0 ;
 Instr 1567 @ 0x61f0 (25072) - FSETP.GT.AND P0, PT, R24.reuse, c[0x0][0x220], PT ;
 Instr 1568 @ 0x6200 (25088) - LDS.U.128 R12, [R170.X16+0x1210] ;
 Instr 1569 @ 0x6210 (25104) - FFMA R9, R9, R2, R33 ;
 Instr 1570 @ 0x6220 (25120) - FSEL R24, R24, c[0x0][0x220], !P0 ;
 Instr 1571 @ 0x6230 (25136) - F2F.F16.F32 R21, R21 ;
 Instr 1572 @ 0x6240 (25152) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1573 @ 0x6250 (25168) - FSEL R145, R4, c[0x0][0x210], P0 ;
 Instr 1574 @ 0x6260 (25184) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 1575 @ 0x6270 (25200) - F2F.F16.F32 R24, R24 ;
 Instr 1576 @ 0x6280 (25216) - FSEL R4, R5, c[0x0][0x210], P0 ;
 Instr 1577 @ 0x6290 (25232) - FFMA R5, R8, R2, R35 ;
 Instr 1578 @ 0x62a0 (25248) - FSETP.GT.AND P0, PT, R145.reuse, c[0x0][0x220], PT ;
 Instr 1579 @ 0x62b0 (25264) - FSEL R145, R145, c[0x0][0x220], !P0 ;
 Instr 1580 @ 0x62c0 (25280) - FSETP.GT.AND P0, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 1581 @ 0x62d0 (25296) - FSEL R19, R4, c[0x0][0x220], !P0 ;
 Instr 1582 @ 0x62e0 (25312) - FSETP.GEU.AND P0, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 1583 @ 0x62f0 (25328) - FSEL R20, R6, c[0x0][0x210], P0 ;
 Instr 1584 @ 0x6300 (25344) - F2F.F16.F32 R19, R19 ;
 Instr 1585 @ 0x6310 (25360) - FSETP.GEU.AND P0, PT, R7, c[0x0][0x210], PT ;
 Instr 1586 @ 0x6320 (25376) - FSEL R4, R7, c[0x0][0x210], P0 ;
 Instr 1587 @ 0x6330 (25392) - FFMA R12, R12, R2.reuse, R35 ;
 Instr 1588 @ 0x6340 (25408) - FSETP.GT.AND P0, PT, R20, c[0x0][0x220], PT ;
 Instr 1589 @ 0x6350 (25424) - FFMA R13, R13, R2.reuse, R33 ;
 Instr 1590 @ 0x6360 (25440) - FFMA R14, R14, R2.reuse, R143 ;
 Instr 1591 @ 0x6370 (25456) - FSEL R20, R20, c[0x0][0x220], !P0 ;
 Instr 1592 @ 0x6380 (25472) - FFMA R15, R15, R2, R34 ;
 Instr 1593 @ 0x6390 (25488) - FSETP.GT.AND P0, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 1594 @ 0x63a0 (25504) - FSEL R8, R4, c[0x0][0x220], !P0 ;
 Instr 1595 @ 0x63b0 (25520) - F2F.F16.F32 R20, R20 ;
 Instr 1596 @ 0x63c0 (25536) - FSETP.GEU.AND P0, PT, R5, c[0x0][0x210], PT ;
 Instr 1597 @ 0x63d0 (25552) - FSEL R5, R5, c[0x0][0x210], P0 ;
 Instr 1598 @ 0x63e0 (25568) - FSETP.GEU.AND P0, PT, R9.reuse, c[0x0][0x210], PT ;
 Instr 1599 @ 0x63f0 (25584) - FSEL R148, R9, c[0x0][0x210], P0 ;
 Instr 1600 @ 0x6400 (25600) - FSETP.GT.AND P0, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 1601 @ 0x6410 (25616) - FSEL R147, R5, c[0x0][0x220], !P0 ;
 Instr 1602 @ 0x6420 (25632) - FSETP.GT.AND P0, PT, R148.reuse, c[0x0][0x220], PT ;
 Instr 1603 @ 0x6430 (25648) - LDS.U.128 R4, [R170.X16+0x2310] ;
 Instr 1604 @ 0x6440 (25664) - FSEL R148, R148, c[0x0][0x220], !P0 ;
 Instr 1605 @ 0x6450 (25680) - F2F.F16.F32 R147, R147 ;
 Instr 1606 @ 0x6460 (25696) - FSETP.GEU.AND P0, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 1607 @ 0x6470 (25712) - FSEL R144, R12, c[0x0][0x210], P0 ;
 Instr 1608 @ 0x6480 (25728) - FSETP.GEU.AND P0, PT, R13.reuse, c[0x0][0x210], PT ;
 Instr 1609 @ 0x6490 (25744) - F2F.F16.F32 R12, R145 ;
 Instr 1610 @ 0x64a0 (25760) - FSEL R150, R13, c[0x0][0x210], P0 ;
 Instr 1611 @ 0x64b0 (25776) - FSETP.GT.AND P0, PT, R144.reuse, c[0x0][0x220], PT ;
 Instr 1612 @ 0x64c0 (25792) - F2F.F16.F32 R13, R8 ;
 Instr 1613 @ 0x64d0 (25808) - FSEL R144, R144, c[0x0][0x220], !P0 ;
 Instr 1614 @ 0x64e0 (25824) - FSETP.GT.AND P0, PT, R150.reuse, c[0x0][0x220], PT ;
 Instr 1615 @ 0x64f0 (25840) - FSEL R150, R150, c[0x0][0x220], !P0 ;
 Instr 1616 @ 0x6500 (25856) - F2F.F16.F32 R148, R148 ;
 Instr 1617 @ 0x6510 (25872) - FSETP.GEU.AND P0, PT, R10.reuse, c[0x0][0x210], PT ;
 Instr 1618 @ 0x6520 (25888) - FSEL R10, R10, c[0x0][0x210], P0 ;
 Instr 1619 @ 0x6530 (25904) - FSETP.GEU.AND P0, PT, R11.reuse, c[0x0][0x210], PT ;
 Instr 1620 @ 0x6540 (25920) - FSEL R149, R11, c[0x0][0x210], P0 ;
 Instr 1621 @ 0x6550 (25936) - FFMA R151, R4, R2.reuse, R35 ;
 Instr 1622 @ 0x6560 (25952) - FSETP.GT.AND P0, PT, R10, c[0x0][0x220], PT ;
 Instr 1623 @ 0x6570 (25968) - FFMA R5, R5, R2.reuse, R33 ;
 Instr 1624 @ 0x6580 (25984) - FFMA R6, R6, R2.reuse, R143 ;
 Instr 1625 @ 0x6590 (26000) - FSEL R146, R10, c[0x0][0x220], !P0 ;
 Instr 1626 @ 0x65a0 (26016) - FFMA R7, R7, R2, R34 ;
 Instr 1627 @ 0x65b0 (26032) - FSETP.GT.AND P0, PT, R149.reuse, c[0x0][0x220], PT ;
 Instr 1628 @ 0x65c0 (26048) - LDS.U.128 R8, [R170.X16+0x3410] ;
 Instr 1629 @ 0x65d0 (26064) - FSEL R149, R149, c[0x0][0x220], !P0 ;
 Instr 1630 @ 0x65e0 (26080) - F2F.F16.F32 R146, R146 ;
 Instr 1631 @ 0x65f0 (26096) - FSETP.GEU.AND P0, PT, R14, c[0x0][0x210], PT ;
 Instr 1632 @ 0x6600 (26112) - FSEL R145, R14, c[0x0][0x210], P0 ;
 Instr 1633 @ 0x6610 (26128) - FSETP.GEU.AND P0, PT, R15.reuse, c[0x0][0x210], PT ;
 Instr 1634 @ 0x6620 (26144) - F2F.F16.F32 R149, R149 ;
 Instr 1635 @ 0x6630 (26160) - FSEL R14, R15, c[0x0][0x210], P0 ;
 Instr 1636 @ 0x6640 (26176) - FSETP.GT.AND P0, PT, R145.reuse, c[0x0][0x220], PT ;
 Instr 1637 @ 0x6650 (26192) - F2F.F16.F32 R15, R144 ;
 Instr 1638 @ 0x6660 (26208) - FSEL R145, R145, c[0x0][0x220], !P0 ;
 Instr 1639 @ 0x6670 (26224) - FSETP.GT.AND P0, PT, R14.reuse, c[0x0][0x220], PT ;
 Instr 1640 @ 0x6680 (26240) - FSEL R4, R14, c[0x0][0x220], !P0 ;
 Instr 1641 @ 0x6690 (26256) - F2F.F16.F32 R145, R145 ;
 Instr 1642 @ 0x66a0 (26272) - FSETP.GEU.AND P0, PT, R151.reuse, c[0x0][0x210], PT ;
 Instr 1643 @ 0x66b0 (26288) - FSEL R151, R151, c[0x0][0x210], P0 ;
 Instr 1644 @ 0x66c0 (26304) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 1645 @ 0x66d0 (26320) - F2F.F16.F32 R144, R4 ;
 Instr 1646 @ 0x66e0 (26336) - FSEL R5, R5, c[0x0][0x210], P0 ;
 Instr 1647 @ 0x66f0 (26352) - FFMA R35, R8, R2.reuse, R35 ;
 Instr 1648 @ 0x6700 (26368) - FSETP.GT.AND P0, PT, R151, c[0x0][0x220], PT ;
 Instr 1649 @ 0x6710 (26384) - FFMA R33, R9, R2.reuse, R33 ;
 Instr 1650 @ 0x6720 (26400) - FFMA R10, R10, R2.reuse, R143 ;
 Instr 1651 @ 0x6730 (26416) - FSEL R151, R151, c[0x0][0x220], !P0 ;
 Instr 1652 @ 0x6740 (26432) - FFMA R11, R11, R2, R34 ;
 Instr 1653 @ 0x6750 (26448) - FSETP.GT.AND P0, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 1654 @ 0x6760 (26464) - F2F.F16.F32 R14, R150 ;
 Instr 1655 @ 0x6770 (26480) - FSEL R5, R5, c[0x0][0x220], !P0 ;
 Instr 1656 @ 0x6780 (26496) - FSETP.GEU.AND P0, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 1657 @ 0x6790 (26512) - F2F.F16.F32 R151, R151 ;
 Instr 1658 @ 0x67a0 (26528) - FSEL R6, R6, c[0x0][0x210], P0 ;
 Instr 1659 @ 0x67b0 (26544) - FSETP.GEU.AND P0, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 1660 @ 0x67c0 (26560) - FSEL R7, R7, c[0x0][0x210], P0 ;
 Instr 1661 @ 0x67d0 (26576) - F2F.F16.F32 R8, R5 ;
 Instr 1662 @ 0x67e0 (26592) - FSETP.GT.AND P0, PT, R6, c[0x0][0x220], PT ;
 Instr 1663 @ 0x67f0 (26608) - FSEL R6, R6, c[0x0][0x220], !P0 ;
 Instr 1664 @ 0x6800 (26624) - FSETP.GT.AND P0, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 1665 @ 0x6810 (26640) - FSEL R7, R7, c[0x0][0x220], !P0 ;
 Instr 1666 @ 0x6820 (26656) - F2F.F16.F32 R9, R6 ;
 Instr 1667 @ 0x6830 (26672) - FSETP.GEU.AND P0, PT, R35.reuse, c[0x0][0x210], PT ;
 Instr 1668 @ 0x6840 (26688) - FSEL R35, R35, c[0x0][0x210], P0 ;
 Instr 1669 @ 0x6850 (26704) - FSETP.GEU.AND P0, PT, R33, c[0x0][0x210], PT ;
 Instr 1670 @ 0x6860 (26720) - FSETP.GT.AND P4, PT, R35, c[0x0][0x220], PT ;
 Instr 1671 @ 0x6870 (26736) - FSEL R4, R33, c[0x0][0x210], P0 ;
 Instr 1672 @ 0x6880 (26752) - SEL R33, R18, 0xffffffff, P5 ;
 Instr 1673 @ 0x6890 (26768) - FSETP.GT.AND P0, PT, R4, c[0x0][0x220], PT ;
 Instr 1674 @ 0x68a0 (26784) - F2F.F16.F32 R18, R7 ;
 Instr 1675 @ 0x68b0 (26800) - FSEL R35, R35, c[0x0][0x220], !P4 ;
 Instr 1676 @ 0x68c0 (26816) - FSETP.GEU.AND P4, PT, R10, c[0x0][0x210], PT ;
 Instr 1677 @ 0x68d0 (26832) - FSEL R5, R4, c[0x0][0x220], !P0 ;
 Instr 1678 @ 0x68e0 (26848) - ISETP.GE.AND P0, PT, R33, RZ, PT ;
 Instr 1679 @ 0x68f0 (26864) - FSEL R6, R10, c[0x0][0x210], P4 ;
 Instr 1680 @ 0x6900 (26880) - FSETP.GEU.AND P4, PT, R11, c[0x0][0x210], PT ;
 Instr 1681 @ 0x6910 (26896) - F2F.F16.F32 R10, R35 ;
 Instr 1682 @ 0x6920 (26912) - PRMT R4, R29, 0x5410, R32 ;
 Instr 1683 @ 0x6930 (26928) - FSEL R32, R11, c[0x0][0x210], P4 ;
 Instr 1684 @ 0x6940 (26944) - ISETP.GE.AND P4, PT, R132, RZ, PT ;
 Instr 1685 @ 0x6950 (26960) - SEL R29, R17, 0xffffffff, P3 ;
 Instr 1686 @ 0x6960 (26976) - @P0 IMAD.MOV.U32 R34, RZ, RZ, 0x2 ;
 Instr 1687 @ 0x6970 (26992) - FSETP.GT.AND P3, PT, R6, c[0x0][0x220], PT ;
 Instr 1688 @ 0x6980 (27008) - F2F.F16.F32 R11, R5 ;
 Instr 1689 @ 0x6990 (27024) - SEL R17, R16, 0xffffffff, P2 ;
 Instr 1690 @ 0x69a0 (27040) - @P0 IMAD.WIDE R34, R33, R34, c[0x0][0x170] ;
 Instr 1691 @ 0x69b0 (27056) - FSEL R16, R6, c[0x0][0x220], !P3 ;
 Instr 1692 @ 0x69c0 (27072) - PRMT R6, R147, 0x5410, R148 ;
 Instr 1693 @ 0x69d0 (27088) - PRMT R7, R146, 0x5410, R149 ;
 Instr 1694 @ 0x69e0 (27104) - PRMT R5, R31, 0x5410, R30 ;
 Instr 1695 @ 0x69f0 (27120) - @P4 IMAD.MOV.U32 R31, RZ, RZ, 0x2 ;
 Instr 1696 @ 0x6a00 (27136) - FSETP.GT.AND P2, PT, R32, c[0x0][0x220], PT ;
 Instr 1697 @ 0x6a10 (27152) - F2F.F16.F32 R16, R16 ;
 Instr 1698 @ 0x6a20 (27168) - ISETP.GE.AND P3, PT, R29, RZ, PT ;
 Instr 1699 @ 0x6a30 (27184) - @P4 IMAD.WIDE R132, R132, R31, c[0x0][0x170] ;
 Instr 1700 @ 0x6a40 (27200) - FSEL R32, R32, c[0x0][0x220], !P2 ;
 Instr 1701 @ 0x6a50 (27216) - @P0 STG.E.128.SYS [R34], R4 ;
 Instr 1702 @ 0x6a60 (27232) - ISETP.GE.AND P2, PT, R17, RZ, PT ;
 Instr 1703 @ 0x6a70 (27248) - PRMT R4, R26, 0x5410, R27 ;
 Instr 1704 @ 0x6a80 (27264) - @P3 IMAD.MOV.U32 R26, RZ, RZ, 0x2 ;
 Instr 1705 @ 0x6a90 (27280) - PRMT R5, R25, 0x5410, R28 ;
 Instr 1706 @ 0x6aa0 (27296) - F2F.F16.F32 R27, R32 ;
 Instr 1707 @ 0x6ab0 (27312) - PRMT R6, R15, 0x5410, R14 ;
 Instr 1708 @ 0x6ac0 (27328) - @P3 IMAD.WIDE R28, R29, R26, c[0x0][0x170] ;
 Instr 1709 @ 0x6ad0 (27344) - PRMT R7, R145, 0x5410, R144 ;
 Instr 1710 @ 0x6ae0 (27360) - @P2 IMAD.MOV.U32 R14, RZ, RZ, 0x2 ;
 Instr 1711 @ 0x6af0 (27376) - @P2 IMAD.WIDE R14, R17, R14, c[0x0][0x170] ;
 Instr 1712 @ 0x6b00 (27392) - @P4 STG.E.128.SYS [R132], R4 ;
 Instr 1713 @ 0x6b10 (27408) - PRMT R4, R23, 0x5410, R22 ;
 Instr 1714 @ 0x6b20 (27424) - PRMT R5, R21, 0x5410, R24 ;
 Instr 1715 @ 0x6b30 (27440) - PRMT R6, R151, 0x5410, R8 ;
 Instr 1716 @ 0x6b40 (27456) - PRMT R7, R9, 0x5410, R18 ;
 Instr 1717 @ 0x6b50 (27472) - @P3 STG.E.128.SYS [R28], R4 ;
 Instr 1718 @ 0x6b60 (27488) - PRMT R4, R12, 0x5410, R19 ;
 Instr 1719 @ 0x6b70 (27504) - PRMT R5, R20, 0x5410, R13 ;
 Instr 1720 @ 0x6b80 (27520) - PRMT R6, R10, 0x5410, R11 ;
 Instr 1721 @ 0x6b90 (27536) - PRMT R7, R16, 0x5410, R27 ;
 Instr 1722 @ 0x6ba0 (27552) - @P2 STG.E.128.SYS [R14], R4 ;
Basic block id 64 - num instructions 2
 Instr 1723 @ 0x6bb0 (27568) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1724 @ 0x6bc0 (27584) - @!P6 BRA 0x7310 ;
Basic block id 65 - num instructions 5
 Instr 1725 @ 0x6bd0 (27600) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
 Instr 1726 @ 0x6be0 (27616) - USHF.L.U32 UR10, UR17, 0x7, URZ ;
 Instr 1727 @ 0x6bf0 (27632) - LEA R134, R171, R0, 0x7 ;
 Instr 1728 @ 0x6c00 (27648) - USHF.R.S32.HI UR8, URZ, 0x1f, UR10 ;
 Instr 1729 @ 0x6c10 (27664) - @!P0 BRA 0x7130 ;
Basic block id 66 - num instructions 7
 Instr 1730 @ 0x6c20 (27680) - IMAD.SHL.U32 R133, R134, 0x10, RZ ;
 Instr 1731 @ 0x6c30 (27696) - MOV R136, RZ ;
 Instr 1732 @ 0x6c40 (27712) - USHF.L.U64.HI UR9, UR10, 0x4, UR8 ;
 Instr 1733 @ 0x6c50 (27728) - USHF.L.U32 UR6, UR10, 0x4, URZ ;
 Instr 1734 @ 0x6c60 (27744) - SHF.R.S32.HI R132, RZ, 0x1f, R133 ;
 Instr 1735 @ 0x6c70 (27760) - USHF.L.U64.HI UR11, UR10, 0x7, UR8 ;
 Instr 1736 @ 0x6c80 (27776) - USHF.L.U32 UR12, UR10, 0x7, URZ ;
Basic block id 67 - num instructions 74
 Instr 1737 @ 0x6c90 (27792) - SHF.R.S32.HI R5, RZ, 0x1f, R136 ;
 Instr 1738 @ 0x6ca0 (27808) - USHF.L.U32 UR4, UR10, 0x5, URZ ;
 Instr 1739 @ 0x6cb0 (27824) - MOV R6, UR18 ;
 Instr 1740 @ 0x6cc0 (27840) - USHF.L.U64.HI UR5, UR10, 0x5, UR8 ;
 Instr 1741 @ 0x6cd0 (27856) - MOV R9, UR7 ;
 Instr 1742 @ 0x6ce0 (27872) - IMAD R5, R5, c[0x0][0x2a0], RZ ;
 Instr 1743 @ 0x6cf0 (27888) - MOV R7, UR19 ;
 Instr 1744 @ 0x6d00 (27904) - MOV R8, R6 ;
 Instr 1745 @ 0x6d10 (27920) - IMAD R5, R136.reuse, c[0x0][0x2a4], R5 ;
 Instr 1746 @ 0x6d20 (27936) - IMAD.WIDE.U32 R6, R136, c[0x0][0x2a0], R8 ;
 Instr 1747 @ 0x6d30 (27952) - IADD3 R5, R7, R5, RZ ;
 Instr 1748 @ 0x6d40 (27968) - IADD3 R6, P2, P0, R133, UR12, R6 ;
 Instr 1749 @ 0x6d50 (27984) - IADD3.X R4, R132, UR11, R5, P2, P0 ;
 Instr 1750 @ 0x6d60 (28000) - IADD3 R6, P0, R6, c[0x0][0x2a8], RZ ;
 Instr 1751 @ 0x6d70 (28016) - IADD3.X R7, R4, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 1752 @ 0x6d80 (28032) - IADD3 R4, P0, R6, UR4, RZ ;
 Instr 1753 @ 0x6d90 (28048) - IADD3.X R5, R7, UR5, RZ, P0, !PT ;
 Instr 1754 @ 0x6da0 (28064) - IADD3 R140, P0, R4, UR4, RZ ;
 Instr 1755 @ 0x6db0 (28080) - UMOV UR14, UR6 ;
 Instr 1756 @ 0x6dc0 (28096) - MOV R28, R6 ;
 Instr 1757 @ 0x6dd0 (28112) - UMOV UR15, UR9 ;
 Instr 1758 @ 0x6de0 (28128) - IADD3.X R141, R5, UR5, RZ, P0, !PT ;
 Instr 1759 @ 0x6df0 (28144) - LDG.E.128.STRONG.GPU R32, [R6] ;
 Instr 1760 @ 0x6e00 (28160) - IADD3 R138, P0, R140, UR4, RZ ;
 Instr 1761 @ 0x6e10 (28176) - MOV R20, R4 ;
 Instr 1762 @ 0x6e20 (28192) - LDG.E.128.STRONG.GPU R24, [R4] ;
 Instr 1763 @ 0x6e30 (28208) - IADD3.X R139, R141, UR5, RZ, P0, !PT ;
 Instr 1764 @ 0x6e40 (28224) - MOV R21, R5 ;
 Instr 1765 @ 0x6e50 (28240) - LDG.E.128.STRONG.GPU R16, [R140] ;
 Instr 1766 @ 0x6e60 (28256) - MOV R29, R7 ;
 Instr 1767 @ 0x6e70 (28272) - MOV R12, R140 ;
 Instr 1768 @ 0x6e80 (28288) - MOV R13, R141 ;
 Instr 1769 @ 0x6e90 (28304) - LDG.E.128.STRONG.GPU R8, [R138] ;
 Instr 1770 @ 0x6ea0 (28320) - MOV R4, R138 ;
 Instr 1771 @ 0x6eb0 (28336) - MOV R5, R139 ;
 Instr 1772 @ 0x6ec0 (28352) - LDG.E.128.STRONG.GPU R28, [R28.64+UR14] ;
 Instr 1773 @ 0x6ed0 (28368) - LDG.E.128.STRONG.GPU R20, [R20.64+UR14] ;
 Instr 1774 @ 0x6ee0 (28384) - LDG.E.128.STRONG.GPU R12, [R12.64+UR14] ;
 Instr 1775 @ 0x6ef0 (28400) - LDG.E.128.STRONG.GPU R4, [R4.64+UR14] ;
 Instr 1776 @ 0x6f00 (28416) - IADD3 R136, R136, 0x1, RZ ;
 Instr 1777 @ 0x6f10 (28432) - ISETP.GE.AND P0, PT, R136, R173, PT ;
 Instr 1778 @ 0x6f20 (28448) - FADD R36, R32, R36 ;
 Instr 1779 @ 0x6f30 (28464) - FADD R37, R33, R37 ;
 Instr 1780 @ 0x6f40 (28480) - FADD R38, R34, R38 ;
 Instr 1781 @ 0x6f50 (28496) - FADD R39, R35, R39 ;
 Instr 1782 @ 0x6f60 (28512) - FADD R44, R24, R44 ;
 Instr 1783 @ 0x6f70 (28528) - FADD R45, R25, R45 ;
 Instr 1784 @ 0x6f80 (28544) - FADD R46, R26, R46 ;
 Instr 1785 @ 0x6f90 (28560) - FADD R47, R27, R47 ;
 Instr 1786 @ 0x6fa0 (28576) - FADD R52, R16, R52 ;
 Instr 1787 @ 0x6fb0 (28592) - FADD R40, R28, R40 ;
 Instr 1788 @ 0x6fc0 (28608) - FADD R41, R29, R41 ;
 Instr 1789 @ 0x6fd0 (28624) - FADD R42, R30, R42 ;
 Instr 1790 @ 0x6fe0 (28640) - FADD R43, R31, R43 ;
 Instr 1791 @ 0x6ff0 (28656) - FADD R48, R20, R48 ;
 Instr 1792 @ 0x7000 (28672) - FADD R49, R21, R49 ;
 Instr 1793 @ 0x7010 (28688) - FADD R50, R22, R50 ;
 Instr 1794 @ 0x7020 (28704) - FADD R51, R23, R51 ;
 Instr 1795 @ 0x7030 (28720) - FADD R53, R17, R53 ;
 Instr 1796 @ 0x7040 (28736) - FADD R54, R18, R54 ;
 Instr 1797 @ 0x7050 (28752) - FADD R55, R19, R55 ;
 Instr 1798 @ 0x7060 (28768) - FADD R56, R12, R56 ;
 Instr 1799 @ 0x7070 (28784) - FADD R57, R13, R57 ;
 Instr 1800 @ 0x7080 (28800) - FADD R58, R14, R58 ;
 Instr 1801 @ 0x7090 (28816) - FADD R59, R15, R59 ;
 Instr 1802 @ 0x70a0 (28832) - FADD R60, R8, R60 ;
 Instr 1803 @ 0x70b0 (28848) - FADD R61, R9, R61 ;
 Instr 1804 @ 0x70c0 (28864) - FADD R62, R10, R62 ;
 Instr 1805 @ 0x70d0 (28880) - FADD R63, R11, R63 ;
 Instr 1806 @ 0x70e0 (28896) - FADD R64, R4, R64 ;
 Instr 1807 @ 0x70f0 (28912) - FADD R65, R5, R65 ;
 Instr 1808 @ 0x7100 (28928) - FADD R66, R6, R66 ;
 Instr 1809 @ 0x7110 (28944) - FADD R67, R7, R67 ;
 Instr 1810 @ 0x7120 (28960) - @!P0 BRA 0x6c90 ;
Basic block id 68 - num instructions 1
 Instr 1811 @ 0x7130 (28976) - @P1 BRA 0x7310 ;
Basic block id 69 - num instructions 29
 Instr 1812 @ 0x7140 (28992) - ULEA UR5, UP3, UR10, UR18, 0x7 ;
 Instr 1813 @ 0x7150 (29008) - USHF.L.U64.HI UR9, UR10, 0x4, UR8 ;
 Instr 1814 @ 0x7160 (29024) - ULEA.HI.X UR4, UR10, UR7, UR8, 0x7, UP3 ;
 Instr 1815 @ 0x7170 (29040) - IMAD.U32 R4, RZ, RZ, UR5 ;
 Instr 1816 @ 0x7180 (29056) - USHF.L.U64.HI UR5, UR10, 0x5, UR8 ;
 Instr 1817 @ 0x7190 (29072) - USHF.L.U32 UR8, UR10, 0x4, URZ ;
 Instr 1818 @ 0x71a0 (29088) - IMAD.U32 R5, RZ, RZ, UR4 ;
 Instr 1819 @ 0x71b0 (29104) - USHF.L.U32 UR4, UR10, 0x5, URZ ;
 Instr 1820 @ 0x71c0 (29120) - IMAD.WIDE R4, R134, 0x10, R4 ;
 Instr 1821 @ 0x71d0 (29136) - IADD3 R4, P0, R4, c[0x0][0x2a8], RZ ;
 Instr 1822 @ 0x71e0 (29152) - IADD3.X R5, R5, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 1823 @ 0x71f0 (29168) - IADD3 R10, P0, R4, UR4, RZ ;
 Instr 1824 @ 0x7200 (29184) - IADD3.X R11, R5, UR5, RZ, P0, !PT ;
 Instr 1825 @ 0x7210 (29200) - STG.E.128.SYS [R4], R36 ;
 Instr 1826 @ 0x7220 (29216) - IADD3 R8, P0, R10, UR4, RZ ;
 Instr 1827 @ 0x7230 (29232) - STG.E.128.SYS [R4.64+UR8], R40 ;
 Instr 1828 @ 0x7240 (29248) - IADD3.X R9, R11, UR5, RZ, P0, !PT ;
 Instr 1829 @ 0x7250 (29264) - IADD3 R6, P0, R8, UR4, RZ ;
 Instr 1830 @ 0x7260 (29280) - STG.E.128.SYS [R10], R44 ;
 Instr 1831 @ 0x7270 (29296) - IADD3.X R7, R9, UR5, RZ, P0, !PT ;
 Instr 1832 @ 0x7280 (29312) - IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 1834 @ 0x72a0 (29344) - STG.E.128.SYS [R4.64+UR8], R48 ;
 Instr 1835 @ 0x72b0 (29360) - STG.E.128.SYS [R8], R52 ;
 Instr 1836 @ 0x72c0 (29376) - IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 1837 @ 0x72d0 (29392) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 1838 @ 0x72e0 (29408) - STG.E.128.SYS [R4.64+UR8], R56 ;
 Instr 1839 @ 0x72f0 (29424) - STG.E.128.SYS [R6], R60 ;
 Instr 1840 @ 0x7300 (29440) - STG.E.128.SYS [R6.64+UR8], R64 ;
Basic block id 70 - num instructions 1
 Instr 1841 @ 0x7310 (29456) - @!P1 BRA 0x8990 ;
Basic block id 71 - num instructions 359
 Instr 1842 @ 0x7320 (29472) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 1843 @ 0x7330 (29488) - CS2R R22, SRZ ;
 Instr 1844 @ 0x7340 (29504) - IADD3 R6, R168.reuse, 0x28, RZ ;
 Instr 1845 @ 0x7350 (29520) - CS2R R18, SRZ ;
 Instr 1846 @ 0x7360 (29536) - IADD3 R24, R168.reuse, 0x30, RZ ;
 Instr 1847 @ 0x7370 (29552) - IMAD.MOV.U32 R5, RZ, RZ, RZ ;
 Instr 1848 @ 0x7380 (29568) - IADD3 R26, R168.reuse, 0x20, RZ ;
 Instr 1849 @ 0x7390 (29584) - IMAD.MOV.U32 R21, RZ, RZ, RZ ;
 Instr 1850 @ 0x73a0 (29600) - IADD3 R20, R168, 0x38, RZ ;
 Instr 1851 @ 0x73b0 (29616) - IMAD.MOV.U32 R25, RZ, RZ, RZ ;
 Instr 1852 @ 0x73c0 (29632) - ISETP.GE.AND P2, PT, R169, R208, PT ;
 Instr 1853 @ 0x73d0 (29648) - STS.64 [R3], R36 ;
 Instr 1854 @ 0x73e0 (29664) - @P0 IMAD.HI.U32 R10, R6.reuse, c[0x0][0x3d8], RZ ;
 Instr 1855 @ 0x73f0 (29680) - HADD2.F32 R33, R164.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1856 @ 0x7400 (29696) - ISETP.LT.AND P4, PT, R6, c[0x0][0x3c4], !P2 ;
 Instr 1857 @ 0x7410 (29712) - STS.64 [R3+0x10], R40 ;
 Instr 1858 @ 0x7420 (29728) - @P0 IMAD.HI.U32 R8, R24.reuse, c[0x0][0x3d8], RZ ;
 Instr 1859 @ 0x7430 (29744) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3dc], R10 ;
 Instr 1860 @ 0x7440 (29760) - CS2R R28, SRZ ;
 Instr 1861 @ 0x7450 (29776) - ISETP.LT.AND P3, PT, R24, c[0x0][0x3c4], !P2 ;
 Instr 1862 @ 0x7460 (29792) - @P0 IMAD.HI.U32 R12, R26.reuse, c[0x0][0x3d8], RZ ;
 Instr 1863 @ 0x7470 (29808) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x3dc], R8 ;
 Instr 1864 @ 0x7480 (29824) - STS.64 [R3+0x1100], R38 ;
 Instr 1865 @ 0x7490 (29840) - ISETP.LT.AND P5, PT, R26, c[0x0][0x3c4], !P2 ;
 Instr 1866 @ 0x74a0 (29856) - @P0 IMAD.HI.U32 R4, R20.reuse, c[0x0][0x3d8], RZ ;
 Instr 1867 @ 0x74b0 (29872) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x3dc], R12 ;
 Instr 1868 @ 0x74c0 (29888) - STS.64 [R3+0x1110], R42 ;
 Instr 1869 @ 0x74d0 (29904) - ISETP.LT.AND P2, PT, R20, c[0x0][0x3c4], !P2 ;
 Instr 1870 @ 0x74e0 (29920) - @P0 IMAD.MOV R11, RZ, RZ, -R10 ;
 Instr 1871 @ 0x74f0 (29936) - @P0 SHF.R.U32.HI R4, RZ, c[0x0][0x3dc], R4 ;
 Instr 1872 @ 0x7500 (29952) - @P0 IMAD.MOV R9, RZ, RZ, -R8 ;
 Instr 1873 @ 0x7510 (29968) - STS.64 [R3+0x40], R44 ;
 Instr 1874 @ 0x7520 (29984) - @P0 IMAD.MOV R13, RZ, RZ, -R12 ;
 Instr 1875 @ 0x7530 (30000) - HADD2.F32 R31, R164.H1_H1, -RZ.H0_H0 ;
 Instr 1876 @ 0x7540 (30016) - @P0 IMAD.MOV R7, RZ, RZ, -R4 ;
 Instr 1877 @ 0x7550 (30032) - STS.64 [R3+0x50], R48 ;
 Instr 1878 @ 0x7560 (30048) - @P0 IMAD R5, R11, c[0x0][0x3c8], R6 ;
 Instr 1879 @ 0x7570 (30064) - @P0 IMAD R21, R9, c[0x0][0x3c8], R24 ;
 Instr 1880 @ 0x7580 (30080) - STS.64 [R3+0x1140], R46 ;
 Instr 1881 @ 0x7590 (30096) - @P0 IMAD R23, R13, c[0x0][0x3c8], R26 ;
 Instr 1882 @ 0x75a0 (30112) - @P0 IMAD R19, R7, c[0x0][0x3c8], R20 ;
 Instr 1883 @ 0x75b0 (30128) - STS.64 [R3+0x1150], R50 ;
 Instr 1884 @ 0x75c0 (30144) - @P0 IMAD.MOV.U32 R6, RZ, RZ, R10 ;
 Instr 1885 @ 0x75d0 (30160) - HADD2.F32 R45, R165.H0_H0, -RZ.H0_H0 ;
 Instr 1886 @ 0x75e0 (30176) - @P0 IMAD.MOV.U32 R24, RZ, RZ, R8 ;
 Instr 1887 @ 0x75f0 (30192) - STS.64 [R3+0x80], R52 ;
 Instr 1888 @ 0x7600 (30208) - @P0 IMAD.MOV.U32 R26, RZ, RZ, R12 ;
 Instr 1889 @ 0x7610 (30224) - HADD2.F32 R44, R166.H1_H1, -RZ.H0_H0 ;
 Instr 1890 @ 0x7620 (30240) - @P0 IMAD.MOV.U32 R20, RZ, RZ, R4 ;
 Instr 1891 @ 0x7630 (30256) - PLOP3.LUT P0, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 1892 @ 0x7640 (30272) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1893 @ 0x7650 (30288) - STS.64 [R3+0x90], R56 ;
 Instr 1894 @ 0x7660 (30304) - IMAD R17, R169, c[0x0][0x254], RZ ;
 Instr 1895 @ 0x7670 (30320) - HADD2.F32 R47, R167.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 1896 @ 0x7680 (30336) - IMAD.MOV.U32 R27, RZ, RZ, RZ ;
 Instr 1897 @ 0x7690 (30352) - STS.64 [R3+0x1180], R54 ;
 Instr 1898 @ 0x76a0 (30368) - IMAD R6, R6, c[0x0][0x244], R17.reuse ;
 Instr 1899 @ 0x76b0 (30384) - HADD2.F32 R46, R167.H1_H1, -RZ.H0_H0 ;
 Instr 1900 @ 0x76c0 (30400) - IMAD R26, R26, c[0x0][0x244], R17.reuse ;
 Instr 1901 @ 0x76d0 (30416) - STS.64 [R3+0x1190], R58 ;
 Instr 1902 @ 0x76e0 (30432) - IMAD R24, R24, c[0x0][0x244], R17 ;
 Instr 1903 @ 0x76f0 (30448) - @P0 IMAD.HI.U32 R11, R5, c[0x0][0x3e0], RZ ;
 Instr 1904 @ 0x7700 (30464) - STS.64 [R3+0xc0], R60 ;
 Instr 1905 @ 0x7710 (30480) - @P0 IMAD.HI.U32 R9, R21, c[0x0][0x3e0], RZ ;
 Instr 1906 @ 0x7720 (30496) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3e4], R11 ;
 Instr 1907 @ 0x7730 (30512) - STS.64 [R3+0xd0], R64 ;
 Instr 1908 @ 0x7740 (30528) - @P0 IMAD.HI.U32 R13, R23, c[0x0][0x3e0], RZ ;
 Instr 1909 @ 0x7750 (30544) - @P0 SHF.R.U32.HI R9, RZ, c[0x0][0x3e4], R9 ;
 Instr 1910 @ 0x7760 (30560) - STS.64 [R3+0x11c0], R62 ;
 Instr 1911 @ 0x7770 (30576) - @P0 IMAD.HI.U32 R7, R19, c[0x0][0x3e0], RZ ;
 Instr 1912 @ 0x7780 (30592) - @P0 SHF.R.U32.HI R13, RZ, c[0x0][0x3e4], R13 ;
 Instr 1913 @ 0x7790 (30608) - STS.64 [R3+0x11d0], R66 ;
 Instr 1914 @ 0x77a0 (30624) - @P0 IMAD.MOV R12, RZ, RZ, -R11 ;
 Instr 1915 @ 0x77b0 (30640) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3e4], R7 ;
 Instr 1916 @ 0x77c0 (30656) - @P0 IMAD.MOV R10, RZ, RZ, -R9 ;
 Instr 1917 @ 0x77d0 (30672) - @P0 IMAD.MOV R14, RZ, RZ, -R13 ;
 Instr 1918 @ 0x77e0 (30688) - @P0 IMAD.MOV R8, RZ, RZ, -R7 ;
 Instr 1919 @ 0x77f0 (30704) - @P0 IMAD R4, R12, c[0x0][0x3cc], R5 ;
 Instr 1920 @ 0x7800 (30720) - @P0 IMAD R22, R10, c[0x0][0x3cc], R21 ;
 Instr 1921 @ 0x7810 (30736) - @P0 IMAD R25, R14, c[0x0][0x3cc], R23 ;
 Instr 1922 @ 0x7820 (30752) - @P0 IMAD R18, R8, c[0x0][0x3cc], R19 ;
 Instr 1923 @ 0x7830 (30768) - @P0 IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 1924 @ 0x7840 (30784) - @P0 IMAD.MOV.U32 R21, RZ, RZ, R9 ;
 Instr 1925 @ 0x7850 (30800) - @P0 IMAD.MOV.U32 R23, RZ, RZ, R13 ;
 Instr 1926 @ 0x7860 (30816) - @P0 IMAD.MOV.U32 R19, RZ, RZ, R7 ;
 Instr 1927 @ 0x7870 (30832) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 1928 @ 0x7880 (30848) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 1929 @ 0x7890 (30864) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 1930 @ 0x78a0 (30880) - IMAD R5, R5, c[0x0][0x248], R6 ;
 Instr 1931 @ 0x78b0 (30896) - IMAD R26, R23, c[0x0][0x248], R26 ;
 Instr 1932 @ 0x78c0 (30912) - IMAD R20, R20, c[0x0][0x244], R17 ;
 Instr 1933 @ 0x78d0 (30928) - IMAD R21, R21, c[0x0][0x248], R24 ;
 Instr 1934 @ 0x78e0 (30944) - IMAD R19, R19, c[0x0][0x248], R20 ;
 Instr 1935 @ 0x78f0 (30960) - @P0 IMAD.HI.U32 R8, R4, c[0x0][0x3e8], RZ ;
 Instr 1936 @ 0x7900 (30976) - @P0 IMAD.HI.U32 R30, R22, c[0x0][0x3e8], RZ ;
 Instr 1937 @ 0x7910 (30992) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x3ec], R8 ;
 Instr 1938 @ 0x7920 (31008) - @P0 IMAD.HI.U32 R32, R25, c[0x0][0x3e8], RZ ;
 Instr 1939 @ 0x7930 (31024) - @P0 SHF.R.U32.HI R30, RZ, c[0x0][0x3ec], R30 ;
 Instr 1940 @ 0x7940 (31040) - @P0 IMAD.MOV R7, RZ, RZ, -R8 ;
 Instr 1941 @ 0x7950 (31056) - @P0 SHF.R.U32.HI R32, RZ, c[0x0][0x3ec], R32 ;
 Instr 1942 @ 0x7960 (31072) - @P0 IMAD.HI.U32 R14, R18, c[0x0][0x3e8], RZ ;
 Instr 1943 @ 0x7970 (31088) - @P0 IMAD R9, R7, c[0x0][0x1b4], R4 ;
 Instr 1944 @ 0x7980 (31104) - @P0 SHF.R.U32.HI R14, RZ, c[0x0][0x3ec], R14 ;
 Instr 1945 @ 0x7990 (31120) - @P0 IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 1946 @ 0x79a0 (31136) - @P0 IMAD.MOV R15, RZ, RZ, -R30 ;
 Instr 1947 @ 0x79b0 (31152) - IMAD R4, R4, c[0x0][0x24c], R5 ;
 Instr 1948 @ 0x79c0 (31168) - @P0 IMAD.MOV R12, RZ, RZ, -R32 ;
 Instr 1949 @ 0x79d0 (31184) - IMAD R4, R9, c[0x0][0x250], R4 ;
 Instr 1950 @ 0x79e0 (31200) - LDS.U.128 R8, [R170.X16] ;
 Instr 1951 @ 0x79f0 (31216) - @P0 IMAD.MOV R13, RZ, RZ, -R14 ;
 Instr 1952 @ 0x7a00 (31232) - SEL R16, R4, 0xffffffff, P4 ;
 Instr 1953 @ 0x7a10 (31248) - @P0 IMAD R28, R15, c[0x0][0x1b4], R22 ;
 Instr 1954 @ 0x7a20 (31264) - @P0 IMAD R29, R12, c[0x0][0x1b4], R25 ;
 Instr 1955 @ 0x7a30 (31280) - LDS.U.128 R4, [R170.X16+0x1100] ;
 Instr 1956 @ 0x7a40 (31296) - @P0 IMAD R27, R13, c[0x0][0x1b4], R18 ;
 Instr 1957 @ 0x7a50 (31312) - @P0 IMAD.MOV.U32 R22, RZ, RZ, R30 ;
 Instr 1958 @ 0x7a60 (31328) - @P0 IMAD.MOV.U32 R25, RZ, RZ, R32 ;
 Instr 1959 @ 0x7a70 (31344) - HADD2.F32 R30, R165.H1_H1, -RZ.H0_H0 ;
 Instr 1960 @ 0x7a80 (31360) - @P0 IMAD.MOV.U32 R18, RZ, RZ, R14 ;
 Instr 1961 @ 0x7a90 (31376) - LDS.U.128 R12, [R170.X16+0x2200] ;
 Instr 1962 @ 0x7aa0 (31392) - IMAD R26, R25, c[0x0][0x24c], R26 ;
 Instr 1963 @ 0x7ab0 (31408) - IMAD R21, R22, c[0x0][0x24c], R21 ;
 Instr 1964 @ 0x7ac0 (31424) - IMAD R26, R29, c[0x0][0x250], R26 ;
 Instr 1965 @ 0x7ad0 (31440) - IMAD R18, R18, c[0x0][0x24c], R19 ;
 Instr 1966 @ 0x7ae0 (31456) - IMAD R20, R28, c[0x0][0x250], R21 ;
 Instr 1967 @ 0x7af0 (31472) - SEL R26, R26, 0xffffffff, P5 ;
 Instr 1968 @ 0x7b00 (31488) - IMAD R18, R27, c[0x0][0x250], R18 ;
 Instr 1969 @ 0x7b10 (31504) - SEL R20, R20, 0xffffffff, P3 ;
 Instr 1970 @ 0x7b20 (31520) - SEL R19, R18, 0xffffffff, P2 ;
 Instr 1971 @ 0x7b30 (31536) - FFMA R8, R8, R2.reuse, R33 ;
 Instr 1972 @ 0x7b40 (31552) - FFMA R9, R9, R2.reuse, R31 ;
 Instr 1973 @ 0x7b50 (31568) - FFMA R10, R10, R2.reuse, R45 ;
 Instr 1974 @ 0x7b60 (31584) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 1975 @ 0x7b70 (31600) - FFMA R11, R11, R2.reuse, R30 ;
 Instr 1976 @ 0x7b80 (31616) - FFMA R4, R4, R2.reuse, R33 ;
 Instr 1977 @ 0x7b90 (31632) - FSEL R8, R8, c[0x0][0x210], P0 ;
 Instr 1978 @ 0x7ba0 (31648) - FFMA R5, R5, R2.reuse, R31 ;
 Instr 1979 @ 0x7bb0 (31664) - FSETP.GEU.AND P0, PT, R9, c[0x0][0x210], PT ;
 Instr 1980 @ 0x7bc0 (31680) - FFMA R6, R6, R2, R45 ;
 Instr 1981 @ 0x7bd0 (31696) - FFMA R7, R7, R2.reuse, R30.reuse ;
 Instr 1982 @ 0x7be0 (31712) - FSEL R42, R9, c[0x0][0x210], P0 ;
 Instr 1983 @ 0x7bf0 (31728) - FSETP.GT.AND P0, PT, R8, c[0x0][0x220], PT ;
 Instr 1984 @ 0x7c00 (31744) - FFMA R12, R12, R2.reuse, R33 ;
 Instr 1985 @ 0x7c10 (31760) - FFMA R13, R13, R2.reuse, R31 ;
 Instr 1986 @ 0x7c20 (31776) - FSEL R41, R8, c[0x0][0x220], !P0 ;
 Instr 1987 @ 0x7c30 (31792) - FFMA R14, R14, R2.reuse, R45 ;
 Instr 1988 @ 0x7c40 (31808) - FSETP.GT.AND P0, PT, R42, c[0x0][0x220], PT ;
 Instr 1989 @ 0x7c50 (31824) - FFMA R15, R15, R2, R30 ;
 Instr 1990 @ 0x7c60 (31840) - FSEL R42, R42, c[0x0][0x220], !P0 ;
 Instr 1991 @ 0x7c70 (31856) - F2F.F16.F32 R41, R41 ;
 Instr 1992 @ 0x7c80 (31872) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 1993 @ 0x7c90 (31888) - FSEL R38, R4, c[0x0][0x210], P0 ;
 Instr 1994 @ 0x7ca0 (31904) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 1995 @ 0x7cb0 (31920) - F2F.F16.F32 R42, R42 ;
 Instr 1996 @ 0x7cc0 (31936) - FSEL R37, R5, c[0x0][0x210], P0 ;
 Instr 1997 @ 0x7cd0 (31952) - FSETP.GT.AND P0, PT, R38.reuse, c[0x0][0x220], PT ;
 Instr 1998 @ 0x7ce0 (31968) - FSEL R38, R38, c[0x0][0x220], !P0 ;
 Instr 1999 @ 0x7cf0 (31984) - FSETP.GT.AND P0, PT, R37.reuse, c[0x0][0x220], PT ;
 Instr 2000 @ 0x7d00 (32000) - FSEL R37, R37, c[0x0][0x220], !P0 ;
 Instr 2001 @ 0x7d10 (32016) - F2F.F16.F32 R38, R38 ;
 Instr 2002 @ 0x7d20 (32032) - FSETP.GEU.AND P0, PT, R10, c[0x0][0x210], PT ;
 Instr 2003 @ 0x7d30 (32048) - FSEL R40, R10, c[0x0][0x210], P0 ;
 Instr 2004 @ 0x7d40 (32064) - FSETP.GEU.AND P0, PT, R11.reuse, c[0x0][0x210], PT ;
 Instr 2005 @ 0x7d50 (32080) - F2F.F16.F32 R37, R37 ;
 Instr 2006 @ 0x7d60 (32096) - FSEL R43, R11, c[0x0][0x210], P0 ;
 Instr 2007 @ 0x7d70 (32112) - FSETP.GT.AND P0, PT, R40.reuse, c[0x0][0x220], PT ;
 Instr 2008 @ 0x7d80 (32128) - LDS.U.128 R8, [R170.X16+0x110] ;
 Instr 2009 @ 0x7d90 (32144) - FSEL R40, R40, c[0x0][0x220], !P0 ;
 Instr 2010 @ 0x7da0 (32160) - FSETP.GT.AND P0, PT, R43.reuse, c[0x0][0x220], PT ;
 Instr 2011 @ 0x7db0 (32176) - FSEL R43, R43, c[0x0][0x220], !P0 ;
 Instr 2012 @ 0x7dc0 (32192) - F2F.F16.F32 R40, R40 ;
 Instr 2013 @ 0x7dd0 (32208) - FSETP.GEU.AND P0, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 2014 @ 0x7de0 (32224) - FSEL R36, R6, c[0x0][0x210], P0 ;
 Instr 2015 @ 0x7df0 (32240) - FSETP.GEU.AND P0, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 2016 @ 0x7e00 (32256) - F2F.F16.F32 R43, R43 ;
 Instr 2017 @ 0x7e10 (32272) - FSEL R39, R7, c[0x0][0x210], P0 ;
 Instr 2018 @ 0x7e20 (32288) - FSETP.GT.AND P0, PT, R36.reuse, c[0x0][0x220], PT ;
 Instr 2019 @ 0x7e30 (32304) - LDS.U.128 R4, [R170.X16+0x3300] ;
 Instr 2020 @ 0x7e40 (32320) - FSEL R36, R36, c[0x0][0x220], !P0 ;
 Instr 2021 @ 0x7e50 (32336) - FSETP.GT.AND P0, PT, R39.reuse, c[0x0][0x220], PT ;
 Instr 2022 @ 0x7e60 (32352) - FSEL R39, R39, c[0x0][0x220], !P0 ;
 Instr 2023 @ 0x7e70 (32368) - F2F.F16.F32 R36, R36 ;
 Instr 2024 @ 0x7e80 (32384) - FSETP.GEU.AND P0, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 2025 @ 0x7e90 (32400) - FSEL R32, R12, c[0x0][0x210], P0 ;
 Instr 2026 @ 0x7ea0 (32416) - FFMA R9, R9, R2.reuse, R44 ;
 Instr 2027 @ 0x7eb0 (32432) - FSETP.GEU.AND P0, PT, R13, c[0x0][0x210], PT ;
 Instr 2028 @ 0x7ec0 (32448) - FFMA R10, R10, R2.reuse, R47 ;
 Instr 2029 @ 0x7ed0 (32464) - F2F.F16.F32 R39, R39 ;
 Instr 2030 @ 0x7ee0 (32480) - FFMA R11, R11, R2, R46 ;
 Instr 2031 @ 0x7ef0 (32496) - FSEL R35, R13, c[0x0][0x210], P0 ;
 Instr 2032 @ 0x7f00 (32512) - FSETP.GT.AND P0, PT, R32.reuse, c[0x0][0x220], PT ;
 Instr 2033 @ 0x7f10 (32528) - FSEL R32, R32, c[0x0][0x220], !P0 ;
 Instr 2034 @ 0x7f20 (32544) - FSETP.GT.AND P0, PT, R35.reuse, c[0x0][0x220], PT ;
 Instr 2035 @ 0x7f30 (32560) - FSEL R35, R35, c[0x0][0x220], !P0 ;
 Instr 2036 @ 0x7f40 (32576) - F2F.F16.F32 R32, R32 ;
 Instr 2037 @ 0x7f50 (32592) - FSETP.GEU.AND P0, PT, R14, c[0x0][0x210], PT ;
 Instr 2038 @ 0x7f60 (32608) - FSEL R34, R14, c[0x0][0x210], P0 ;
 Instr 2039 @ 0x7f70 (32624) - FFMA R4, R4, R2.reuse, R33 ;
 Instr 2040 @ 0x7f80 (32640) - FSETP.GEU.AND P0, PT, R15, c[0x0][0x210], PT ;
 Instr 2041 @ 0x7f90 (32656) - FFMA R5, R5, R2.reuse, R31 ;
 Instr 2042 @ 0x7fa0 (32672) - F2F.F16.F32 R35, R35 ;
 Instr 2043 @ 0x7fb0 (32688) - FFMA R6, R6, R2.reuse, R45 ;
 Instr 2044 @ 0x7fc0 (32704) - FSEL R12, R15, c[0x0][0x210], P0 ;
 Instr 2045 @ 0x7fd0 (32720) - FFMA R7, R7, R2, R30 ;
 Instr 2046 @ 0x7fe0 (32736) - FSETP.GT.AND P0, PT, R34.reuse, c[0x0][0x220], PT ;
 Instr 2047 @ 0x7ff0 (32752) - HADD2.F32 R45, R166.H0_H0, -RZ.H0_H0 ;
 Instr 2048 @ 0x8000 (32768) - FSEL R34, R34, c[0x0][0x220], !P0 ;
 Instr 2049 @ 0x8010 (32784) - FSETP.GT.AND P0, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 2050 @ 0x8020 (32800) - FSEL R33, R12, c[0x0][0x220], !P0 ;
 Instr 2051 @ 0x8030 (32816) - F2F.F16.F32 R34, R34 ;
 Instr 2052 @ 0x8040 (32832) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 2053 @ 0x8050 (32848) - LDS.U.128 R12, [R170.X16+0x1210] ;
 Instr 2054 @ 0x8060 (32864) - FSEL R50, R4, c[0x0][0x210], P0 ;
 Instr 2055 @ 0x8070 (32880) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 2056 @ 0x8080 (32896) - F2F.F16.F32 R33, R33 ;
 Instr 2057 @ 0x8090 (32912) - FSEL R4, R5, c[0x0][0x210], P0 ;
 Instr 2058 @ 0x80a0 (32928) - FSETP.GT.AND P0, PT, R50.reuse, c[0x0][0x220], PT ;
 Instr 2059 @ 0x80b0 (32944) - FSEL R50, R50, c[0x0][0x220], !P0 ;
 Instr 2060 @ 0x80c0 (32960) - FSETP.GT.AND P0, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 2061 @ 0x80d0 (32976) - FSEL R30, R4, c[0x0][0x220], !P0 ;
 Instr 2062 @ 0x80e0 (32992) - FFMA R4, R8, R2, R45 ;
 Instr 2063 @ 0x80f0 (33008) - FSETP.GEU.AND P0, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 2064 @ 0x8100 (33024) - FSEL R5, R6, c[0x0][0x210], P0 ;
 Instr 2065 @ 0x8110 (33040) - F2F.F16.F32 R30, R30 ;
 Instr 2066 @ 0x8120 (33056) - FSETP.GEU.AND P0, PT, R7, c[0x0][0x210], PT ;
 Instr 2067 @ 0x8130 (33072) - FSEL R31, R7, c[0x0][0x210], P0 ;
 Instr 2068 @ 0x8140 (33088) - FSETP.GT.AND P0, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 2069 @ 0x8150 (33104) - FSEL R8, R5, c[0x0][0x220], !P0 ;
 Instr 2070 @ 0x8160 (33120) - FFMA R12, R12, R2.reuse, R45 ;
 Instr 2071 @ 0x8170 (33136) - FSETP.GT.AND P0, PT, R31, c[0x0][0x220], PT ;
 Instr 2072 @ 0x8180 (33152) - FFMA R13, R13, R2.reuse, R44 ;
 Instr 2073 @ 0x8190 (33168) - FFMA R14, R14, R2.reuse, R47 ;
 Instr 2074 @ 0x81a0 (33184) - FSEL R31, R31, c[0x0][0x220], !P0 ;
 Instr 2075 @ 0x81b0 (33200) - FFMA R15, R15, R2, R46 ;
 Instr 2076 @ 0x81c0 (33216) - FSETP.GEU.AND P0, PT, R4, c[0x0][0x210], PT ;
 Instr 2077 @ 0x81d0 (33232) - FSEL R4, R4, c[0x0][0x210], P0 ;
 Instr 2078 @ 0x81e0 (33248) - F2F.F16.F32 R31, R31 ;
 Instr 2079 @ 0x81f0 (33264) - FSETP.GEU.AND P0, PT, R9.reuse, c[0x0][0x210], PT ;
 Instr 2080 @ 0x8200 (33280) - FSEL R51, R9, c[0x0][0x210], P0 ;
 Instr 2081 @ 0x8210 (33296) - FSETP.GT.AND P0, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 2082 @ 0x8220 (33312) - FSEL R52, R4, c[0x0][0x220], !P0 ;
 Instr 2083 @ 0x8230 (33328) - FSETP.GT.AND P0, PT, R51.reuse, c[0x0][0x220], PT ;
 Instr 2084 @ 0x8240 (33344) - LDS.U.128 R4, [R170.X16+0x2310] ;
 Instr 2085 @ 0x8250 (33360) - FSEL R51, R51, c[0x0][0x220], !P0 ;
 Instr 2086 @ 0x8260 (33376) - F2F.F16.F32 R52, R52 ;
 Instr 2087 @ 0x8270 (33392) - FSETP.GEU.AND P0, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 2088 @ 0x8280 (33408) - FSEL R49, R12, c[0x0][0x210], P0 ;
 Instr 2089 @ 0x8290 (33424) - FSETP.GEU.AND P0, PT, R13.reuse, c[0x0][0x210], PT ;
 Instr 2090 @ 0x82a0 (33440) - F2F.F16.F32 R12, R8 ;
 Instr 2091 @ 0x82b0 (33456) - FSEL R48, R13, c[0x0][0x210], P0 ;
 Instr 2092 @ 0x82c0 (33472) - FSETP.GT.AND P0, PT, R49.reuse, c[0x0][0x220], PT ;
 Instr 2093 @ 0x82d0 (33488) - F2F.F16.F32 R13, R50 ;
 Instr 2094 @ 0x82e0 (33504) - FSEL R49, R49, c[0x0][0x220], !P0 ;
 Instr 2095 @ 0x82f0 (33520) - FSETP.GT.AND P0, PT, R48.reuse, c[0x0][0x220], PT ;
 Instr 2096 @ 0x8300 (33536) - FSEL R48, R48, c[0x0][0x220], !P0 ;
 Instr 2097 @ 0x8310 (33552) - F2F.F16.F32 R51, R51 ;
 Instr 2098 @ 0x8320 (33568) - FSETP.GEU.AND P0, PT, R10.reuse, c[0x0][0x210], PT ;
 Instr 2099 @ 0x8330 (33584) - FSEL R10, R10, c[0x0][0x210], P0 ;
 Instr 2100 @ 0x8340 (33600) - FSETP.GEU.AND P0, PT, R11.reuse, c[0x0][0x210], PT ;
 Instr 2101 @ 0x8350 (33616) - F2F.F16.F32 R48, R48 ;
 Instr 2102 @ 0x8360 (33632) - FSEL R53, R11, c[0x0][0x210], P0 ;
 Instr 2103 @ 0x8370 (33648) - FFMA R55, R4, R2.reuse, R45 ;
 Instr 2104 @ 0x8380 (33664) - FSETP.GT.AND P0, PT, R10, c[0x0][0x220], PT ;
 Instr 2105 @ 0x8390 (33680) - FFMA R5, R5, R2.reuse, R44 ;
 Instr 2106 @ 0x83a0 (33696) - FFMA R54, R6, R2.reuse, R47 ;
 Instr 2107 @ 0x83b0 (33712) - FSEL R50, R10, c[0x0][0x220], !P0 ;
 Instr 2108 @ 0x83c0 (33728) - FFMA R7, R7, R2, R46 ;
 Instr 2109 @ 0x83d0 (33744) - FSETP.GT.AND P0, PT, R53.reuse, c[0x0][0x220], PT ;
 Instr 2110 @ 0x83e0 (33760) - LDS.U.128 R8, [R170.X16+0x3410] ;
 Instr 2111 @ 0x83f0 (33776) - FSEL R53, R53, c[0x0][0x220], !P0 ;
 Instr 2112 @ 0x8400 (33792) - F2F.F16.F32 R50, R50 ;
 Instr 2113 @ 0x8410 (33808) - FSETP.GEU.AND P0, PT, R14, c[0x0][0x210], PT ;
 Instr 2114 @ 0x8420 (33824) - FSEL R14, R14, c[0x0][0x210], P0 ;
 Instr 2115 @ 0x8430 (33840) - FSETP.GEU.AND P0, PT, R15.reuse, c[0x0][0x210], PT ;
 Instr 2116 @ 0x8440 (33856) - F2F.F16.F32 R53, R53 ;
 Instr 2117 @ 0x8450 (33872) - FSEL R15, R15, c[0x0][0x210], P0 ;
 Instr 2118 @ 0x8460 (33888) - FSETP.GT.AND P0, PT, R14.reuse, c[0x0][0x220], PT ;
 Instr 2119 @ 0x8470 (33904) - FSEL R14, R14, c[0x0][0x220], !P0 ;
 Instr 2120 @ 0x8480 (33920) - FSETP.GT.AND P0, PT, R15.reuse, c[0x0][0x220], PT ;
 Instr 2121 @ 0x8490 (33936) - FSEL R4, R15, c[0x0][0x220], !P0 ;
 Instr 2122 @ 0x84a0 (33952) - F2F.F16.F32 R14, R14 ;
 Instr 2123 @ 0x84b0 (33968) - FSETP.GEU.AND P0, PT, R55.reuse, c[0x0][0x210], PT ;
 Instr 2124 @ 0x84c0 (33984) - FSEL R55, R55, c[0x0][0x210], P0 ;
 Instr 2125 @ 0x84d0 (34000) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 2126 @ 0x84e0 (34016) - F2F.F16.F32 R15, R49 ;
 Instr 2127 @ 0x84f0 (34032) - FSEL R5, R5, c[0x0][0x210], P0 ;
 Instr 2128 @ 0x8500 (34048) - FFMA R45, R8, R2.reuse, R45 ;
 Instr 2129 @ 0x8510 (34064) - FSETP.GT.AND P0, PT, R55, c[0x0][0x220], PT ;
 Instr 2130 @ 0x8520 (34080) - FFMA R44, R9, R2.reuse, R44 ;
 Instr 2131 @ 0x8530 (34096) - FFMA R10, R10, R2.reuse, R47 ;
 Instr 2132 @ 0x8540 (34112) - FSEL R6, R55, c[0x0][0x220], !P0 ;
 Instr 2133 @ 0x8550 (34128) - FFMA R46, R11, R2, R46 ;
 Instr 2134 @ 0x8560 (34144) - FSETP.GT.AND P0, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 2135 @ 0x8570 (34160) - F2F.F16.F32 R49, R4 ;
 Instr 2136 @ 0x8580 (34176) - FSEL R5, R5, c[0x0][0x220], !P0 ;
 Instr 2137 @ 0x8590 (34192) - FSETP.GEU.AND P0, PT, R54.reuse, c[0x0][0x210], PT ;
 Instr 2138 @ 0x85a0 (34208) - F2F.F16.F32 R8, R6 ;
 Instr 2139 @ 0x85b0 (34224) - FSEL R54, R54, c[0x0][0x210], P0 ;
 Instr 2140 @ 0x85c0 (34240) - FSETP.GEU.AND P0, PT, R7, c[0x0][0x210], PT ;
 Instr 2141 @ 0x85d0 (34256) - PRMT R4, R41, 0x5410, R42 ;
 Instr 2142 @ 0x85e0 (34272) - FSEL R7, R7, c[0x0][0x210], P0 ;
 Instr 2143 @ 0x85f0 (34288) - F2F.F16.F32 R9, R5 ;
 Instr 2144 @ 0x8600 (34304) - FSETP.GT.AND P0, PT, R54, c[0x0][0x220], PT ;
 Instr 2145 @ 0x8610 (34320) - PRMT R6, R52, 0x5410, R51 ;
 Instr 2146 @ 0x8620 (34336) - FSEL R54, R54, c[0x0][0x220], !P0 ;
 Instr 2147 @ 0x8630 (34352) - FSETP.GT.AND P0, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 2148 @ 0x8640 (34368) - FSEL R7, R7, c[0x0][0x220], !P0 ;
 Instr 2149 @ 0x8650 (34384) - F2F.F16.F32 R54, R54 ;
 Instr 2150 @ 0x8660 (34400) - FSETP.GEU.AND P0, PT, R45, c[0x0][0x210], PT ;
 Instr 2151 @ 0x8670 (34416) - FSEL R45, R45, c[0x0][0x210], P0 ;
 Instr 2152 @ 0x8680 (34432) - FSETP.GEU.AND P0, PT, R44.reuse, c[0x0][0x210], PT ;
 Instr 2153 @ 0x8690 (34448) - F2F.F16.F32 R11, R7 ;
 Instr 2154 @ 0x86a0 (34464) - FSETP.GT.AND P4, PT, R45.reuse, c[0x0][0x220], PT ;
 Instr 2155 @ 0x86b0 (34480) - FSEL R44, R44, c[0x0][0x210], P0 ;
 Instr 2156 @ 0x86c0 (34496) - FSEL R45, R45, c[0x0][0x220], !P4 ;
 Instr 2157 @ 0x86d0 (34512) - FSETP.GT.AND P0, PT, R44, c[0x0][0x220], PT ;
 Instr 2158 @ 0x86e0 (34528) - FSETP.GEU.AND P4, PT, R10, c[0x0][0x210], PT ;
 Instr 2159 @ 0x86f0 (34544) - FSEL R17, R44, c[0x0][0x220], !P0 ;
 Instr 2160 @ 0x8700 (34560) - ISETP.GE.AND P0, PT, R26, RZ, PT ;
 Instr 2161 @ 0x8710 (34576) - FSEL R5, R10, c[0x0][0x210], P4 ;
 Instr 2162 @ 0x8720 (34592) - FSETP.GEU.AND P4, PT, R46, c[0x0][0x210], PT ;
 Instr 2163 @ 0x8730 (34608) - F2F.F16.F32 R10, R45 ;
 Instr 2164 @ 0x8740 (34624) - FSETP.GT.AND P3, PT, R5, c[0x0][0x220], PT ;
 Instr 2165 @ 0x8750 (34640) - FSEL R46, R46, c[0x0][0x210], P4 ;
 Instr 2166 @ 0x8760 (34656) - ISETP.GE.AND P4, PT, R16, RZ, PT ;
 Instr 2167 @ 0x8770 (34672) - @P0 IMAD.MOV.U32 R27, RZ, RZ, 0x2 ;
 Instr 2168 @ 0x8780 (34688) - FSEL R18, R5, c[0x0][0x220], !P3 ;
 Instr 2169 @ 0x8790 (34704) - F2F.F16.F32 R17, R17 ;
 Instr 2170 @ 0x87a0 (34720) - PRMT R5, R40, 0x5410, R43 ;
 Instr 2171 @ 0x87b0 (34736) - @P0 IMAD.WIDE R26, R26, R27, c[0x0][0x170] ;
 Instr 2172 @ 0x87c0 (34752) - PRMT R7, R50, 0x5410, R53 ;
 Instr 2173 @ 0x87d0 (34768) - FSETP.GT.AND P2, PT, R46, c[0x0][0x220], PT ;
 Instr 2174 @ 0x87e0 (34784) - ISETP.GE.AND P3, PT, R20, RZ, PT ;
 Instr 2175 @ 0x87f0 (34800) - @P4 IMAD.MOV.U32 R21, RZ, RZ, 0x2 ;
 Instr 2176 @ 0x8800 (34816) - FSEL R46, R46, c[0x0][0x220], !P2 ;
 Instr 2177 @ 0x8810 (34832) - F2F.F16.F32 R18, R18 ;
 Instr 2178 @ 0x8820 (34848) - @P0 STG.E.128.SYS [R26], R4 ;
 Instr 2179 @ 0x8830 (34864) - @P4 IMAD.WIDE R24, R16, R21, c[0x0][0x170] ;
 Instr 2180 @ 0x8840 (34880) - ISETP.GE.AND P2, PT, R19, RZ, PT ;
 Instr 2181 @ 0x8850 (34896) - F2F.F16.F32 R21, R46 ;
 Instr 2182 @ 0x8860 (34912) - @P3 IMAD.MOV.U32 R23, RZ, RZ, 0x2 ;
 Instr 2183 @ 0x8870 (34928) - @P3 IMAD.WIDE R22, R20, R23, c[0x0][0x170] ;
 Instr 2184 @ 0x8880 (34944) - @P2 IMAD.MOV.U32 R16, RZ, RZ, 0x2 ;
 Instr 2185 @ 0x8890 (34960) - PRMT R4, R38, 0x5410, R37 ;
 Instr 2186 @ 0x88a0 (34976) - PRMT R5, R36, 0x5410, R39 ;
 Instr 2187 @ 0x88b0 (34992) - PRMT R6, R15, 0x5410, R48 ;
 Instr 2188 @ 0x88c0 (35008) - PRMT R7, R14, 0x5410, R49 ;
 Instr 2189 @ 0x88d0 (35024) - @P2 IMAD.WIDE R14, R19, R16, c[0x0][0x170] ;
 Instr 2190 @ 0x88e0 (35040) - @P4 STG.E.128.SYS [R24], R4 ;
 Instr 2191 @ 0x88f0 (35056) - PRMT R4, R32, 0x5410, R35 ;
 Instr 2192 @ 0x8900 (35072) - PRMT R5, R34, 0x5410, R33 ;
 Instr 2193 @ 0x8910 (35088) - PRMT R6, R8, 0x5410, R9 ;
 Instr 2194 @ 0x8920 (35104) - PRMT R7, R54, 0x5410, R11 ;
 Instr 2195 @ 0x8930 (35120) - @P3 STG.E.128.SYS [R22], R4 ;
 Instr 2196 @ 0x8940 (35136) - PRMT R4, R13, 0x5410, R30 ;
 Instr 2197 @ 0x8950 (35152) - PRMT R5, R12, 0x5410, R31 ;
 Instr 2198 @ 0x8960 (35168) - PRMT R6, R10, 0x5410, R17 ;
 Instr 2199 @ 0x8970 (35184) - PRMT R7, R18, 0x5410, R21 ;
 Instr 2200 @ 0x8980 (35200) - @P2 STG.E.128.SYS [R14], R4 ;
Basic block id 72 - num instructions 2
 Instr 2201 @ 0x8990 (35216) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2202 @ 0x89a0 (35232) - @!P6 BRA 0x9190 ;
Basic block id 73 - num instructions 5
 Instr 2203 @ 0x89b0 (35248) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
 Instr 2204 @ 0x89c0 (35264) - USHF.L.U32 UR5, UR17, 0x7, URZ ;
 Instr 2205 @ 0x89d0 (35280) - LEA R36, R171, R0, 0x7 ;
 Instr 2206 @ 0x89e0 (35296) - USHF.R.S32.HI UR4, URZ, 0x1f, UR5 ;
 Instr 2207 @ 0x89f0 (35312) - @!P0 BRA 0x8fb0 ;
Basic block id 74 - num instructions 45
 Instr 2208 @ 0x8a00 (35328) - UMOV UR20, UR18 ;
 Instr 2209 @ 0x8a10 (35344) - IMAD.SHL.U32 R52, R36, 0x10, RZ ;
 Instr 2210 @ 0x8a20 (35360) - UMOV UR21, UR7 ;
 Instr 2211 @ 0x8a30 (35376) - UIMAD UR13, UR4, 0x120, URZ ;
 Instr 2212 @ 0x8a40 (35392) - UIMAD UR12, UR4, 0x130, URZ ;
 Instr 2213 @ 0x8a50 (35408) - SHF.R.S32.HI R7, RZ, 0x1f, R52 ;
 Instr 2214 @ 0x8a60 (35424) - UIMAD UR11, UR4, 0x140, URZ ;
 Instr 2215 @ 0x8a70 (35440) - UIMAD UR10, UR4, 0x150, URZ ;
 Instr 2216 @ 0x8a80 (35456) - IMAD.U32 R14, RZ, RZ, UR13 ;
 Instr 2217 @ 0x8a90 (35472) - UIMAD.WIDE.U32 UR32, UR5, 0x120, UR20 ;
 Instr 2218 @ 0x8aa0 (35488) - IMAD.U32 R12, RZ, RZ, UR12 ;
 Instr 2219 @ 0x8ab0 (35504) - UIMAD.WIDE.U32 UR30, UR5, 0x130, UR20 ;
 Instr 2220 @ 0x8ac0 (35520) - IMAD.U32 R10, RZ, RZ, UR11 ;
 Instr 2221 @ 0x8ad0 (35536) - UIMAD.WIDE.U32 UR28, UR5, 0x140, UR20 ;
 Instr 2222 @ 0x8ae0 (35552) - IMAD.U32 R8, RZ, RZ, UR10 ;
 Instr 2223 @ 0x8af0 (35568) - UIMAD.WIDE.U32 UR26, UR5, 0x150, UR20 ;
 Instr 2224 @ 0x8b00 (35584) - IADD3 R48, P4, R52.reuse, UR32, RZ ;
 Instr 2225 @ 0x8b10 (35600) - UIMAD.WIDE.U32 UR24, UR5, 0x160, UR20 ;
 Instr 2226 @ 0x8b20 (35616) - IADD3 R46, P3, R52.reuse, UR30, RZ ;
 Instr 2227 @ 0x8b30 (35632) - UIMAD.WIDE.U32 UR22, UR5, 0x170, UR20 ;
 Instr 2228 @ 0x8b40 (35648) - IADD3 R44, P2, R52.reuse, UR28, RZ ;
 Instr 2229 @ 0x8b50 (35664) - UIMAD UR9, UR4, 0x160, URZ ;
 Instr 2230 @ 0x8b60 (35680) - IADD3 R42, P0, R52.reuse, UR26, RZ ;
 Instr 2231 @ 0x8b70 (35696) - UIMAD UR8, UR4, 0x170, URZ ;
 Instr 2232 @ 0x8b80 (35712) - IADD3.X R49, R7.reuse, UR33, R14, P4, !PT ;
 Instr 2233 @ 0x8b90 (35728) - UIMAD UR6, UR4, 0x110, URZ ;
 Instr 2234 @ 0x8ba0 (35744) - IADD3.X R47, R7.reuse, UR31, R12, P3, !PT ;
 Instr 2235 @ 0x8bb0 (35760) - UIMAD.WIDE.U32 UR20, UR5, 0x110, UR20 ;
 Instr 2236 @ 0x8bc0 (35776) - IADD3.X R45, R7.reuse, UR29, R10, P2, !PT ;
 Instr 2237 @ 0x8bd0 (35792) - ULEA UR15, UP3, UR5, UR18, 0x8 ;
 Instr 2238 @ 0x8be0 (35808) - IMAD.U32 R6, RZ, RZ, UR9 ;
 Instr 2239 @ 0x8bf0 (35824) - IADD3 R40, P4, R52.reuse, UR24, RZ ;
 Instr 2240 @ 0x8c00 (35840) - IMAD.U32 R5, RZ, RZ, UR8 ;
 Instr 2241 @ 0x8c10 (35856) - ULEA.HI.X UR14, UR5, UR7, UR4, 0x8, UP3 ;
 Instr 2242 @ 0x8c20 (35872) - IMAD.U32 R4, RZ, RZ, UR6 ;
 Instr 2243 @ 0x8c30 (35888) - IADD3 R38, P3, R52.reuse, UR22, RZ ;
 Instr 2244 @ 0x8c40 (35904) - UMOV UR6, URZ ;
 Instr 2245 @ 0x8c50 (35920) - IADD3 R50, P2, R52, UR20, RZ ;
 Instr 2246 @ 0x8c60 (35936) - ULDC.64 UR10, c[0x0][0x2a8] ;
 Instr 2247 @ 0x8c70 (35952) - IADD3.X R43, R7, UR27, R8, P0, !PT ;
 Instr 2248 @ 0x8c80 (35968) - IADD3 R52, P0, R52, UR15, RZ ;
 Instr 2249 @ 0x8c90 (35984) - IADD3.X R41, R7.reuse, UR25, R6, P4, !PT ;
 Instr 2250 @ 0x8ca0 (36000) - IADD3.X R39, R7.reuse, UR23, R5, P3, !PT ;
 Instr 2251 @ 0x8cb0 (36016) - IADD3.X R51, R7.reuse, UR21, R4, P2, !PT ;
 Instr 2252 @ 0x8cc0 (36032) - IADD3.X R53, R7, UR14, RZ, P0, !PT ;
Basic block id 75 - num instructions 46
 Instr 2253 @ 0x8cd0 (36048) - LDG.E.128.STRONG.GPU R32, [R52.64+UR10] ;
 Instr 2254 @ 0x8ce0 (36064) - LDG.E.128.STRONG.GPU R28, [R50.64+UR10] ;
 Instr 2255 @ 0x8cf0 (36080) - LDG.E.128.STRONG.GPU R24, [R48.64+UR10] ;
 Instr 2256 @ 0x8d00 (36096) - LDG.E.128.STRONG.GPU R20, [R46.64+UR10] ;
 Instr 2257 @ 0x8d10 (36112) - LDG.E.128.STRONG.GPU R16, [R44.64+UR10] ;
 Instr 2258 @ 0x8d20 (36128) - LDG.E.128.STRONG.GPU R12, [R42.64+UR10] ;
 Instr 2259 @ 0x8d30 (36144) - LDG.E.128.STRONG.GPU R8, [R40.64+UR10] ;
 Instr 2260 @ 0x8d40 (36160) - LDG.E.128.STRONG.GPU R4, [R38.64+UR10] ;
 Instr 2261 @ 0x8d50 (36176) - UIADD3 UR6, UR6, 0x1, URZ ;
 Instr 2262 @ 0x8d60 (36192) - ULDC.64 UR8, c[0x0][0x2a0] ;
 Instr 2263 @ 0x8d70 (36208) - UIADD3 UR10, UP3, UR10, UR8, URZ ;
 Instr 2264 @ 0x8d80 (36224) - ISETP.LE.AND P0, PT, R173, UR6, PT ;
 Instr 2265 @ 0x8d90 (36240) - UIADD3.X UR11, UR11, UR9, URZ, UP3, !UPT ;
 Instr 2266 @ 0x8da0 (36256) - FADD R68, R32, R68 ;
 Instr 2267 @ 0x8db0 (36272) - FADD R69, R33, R69 ;
 Instr 2268 @ 0x8dc0 (36288) - FADD R70, R34, R70 ;
 Instr 2269 @ 0x8dd0 (36304) - FADD R71, R35, R71 ;
 Instr 2270 @ 0x8de0 (36320) - FADD R72, R28, R72 ;
 Instr 2271 @ 0x8df0 (36336) - FADD R73, R29, R73 ;
 Instr 2272 @ 0x8e00 (36352) - FADD R74, R30, R74 ;
 Instr 2273 @ 0x8e10 (36368) - FADD R75, R31, R75 ;
 Instr 2274 @ 0x8e20 (36384) - FADD R76, R24, R76 ;
 Instr 2275 @ 0x8e30 (36400) - FADD R77, R25, R77 ;
 Instr 2276 @ 0x8e40 (36416) - FADD R78, R26, R78 ;
 Instr 2277 @ 0x8e50 (36432) - FADD R79, R27, R79 ;
 Instr 2278 @ 0x8e60 (36448) - FADD R80, R20, R80 ;
 Instr 2279 @ 0x8e70 (36464) - FADD R81, R21, R81 ;
 Instr 2280 @ 0x8e80 (36480) - FADD R82, R22, R82 ;
 Instr 2281 @ 0x8e90 (36496) - FADD R83, R23, R83 ;
 Instr 2282 @ 0x8ea0 (36512) - FADD R84, R16, R84 ;
 Instr 2283 @ 0x8eb0 (36528) - FADD R85, R17, R85 ;
 Instr 2284 @ 0x8ec0 (36544) - FADD R86, R18, R86 ;
 Instr 2285 @ 0x8ed0 (36560) - FADD R87, R19, R87 ;
 Instr 2286 @ 0x8ee0 (36576) - FADD R88, R12, R88 ;
 Instr 2287 @ 0x8ef0 (36592) - FADD R89, R13, R89 ;
 Instr 2288 @ 0x8f00 (36608) - FADD R90, R14, R90 ;
 Instr 2289 @ 0x8f10 (36624) - FADD R91, R15, R91 ;
 Instr 2290 @ 0x8f20 (36640) - FADD R92, R8, R92 ;
 Instr 2291 @ 0x8f30 (36656) - FADD R93, R9, R93 ;
 Instr 2292 @ 0x8f40 (36672) - FADD R94, R10, R94 ;
 Instr 2293 @ 0x8f50 (36688) - FADD R95, R11, R95 ;
 Instr 2294 @ 0x8f60 (36704) - FADD R96, R4, R96 ;
 Instr 2295 @ 0x8f70 (36720) - FADD R97, R5, R97 ;
 Instr 2296 @ 0x8f80 (36736) - FADD R98, R6, R98 ;
 Instr 2297 @ 0x8f90 (36752) - FADD R99, R7, R99 ;
 Instr 2298 @ 0x8fa0 (36768) - @!P0 BRA 0x8cd0 ;
Basic block id 76 - num instructions 1
 Instr 2299 @ 0x8fb0 (36784) - @P1 BRA 0x9190 ;
Basic block id 77 - num instructions 29
 Instr 2300 @ 0x8fc0 (36800) - ULEA UR8, UP3, UR5, UR18, 0x8 ;
 Instr 2301 @ 0x8fd0 (36816) - USHF.L.U64.HI UR11, UR5, 0x4, UR4 ;
 Instr 2302 @ 0x8fe0 (36832) - ULEA.HI.X UR6, UR5, UR7, UR4, 0x8, UP3 ;
 Instr 2303 @ 0x8ff0 (36848) - IMAD.U32 R4, RZ, RZ, UR8 ;
 Instr 2304 @ 0x9000 (36864) - USHF.L.U64.HI UR8, UR5, 0x5, UR4 ;
 Instr 2305 @ 0x9010 (36880) - USHF.L.U32 UR10, UR5, 0x4, URZ ;
 Instr 2306 @ 0x9020 (36896) - IMAD.U32 R5, RZ, RZ, UR6 ;
 Instr 2307 @ 0x9030 (36912) - USHF.L.U32 UR6, UR5, 0x5, URZ ;
 Instr 2308 @ 0x9040 (36928) - IMAD.WIDE R4, R36, 0x10, R4 ;
 Instr 2309 @ 0x9050 (36944) - IADD3 R4, P0, R4, c[0x0][0x2a8], RZ ;
 Instr 2310 @ 0x9060 (36960) - IADD3.X R5, R5, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 2311 @ 0x9070 (36976) - IADD3 R10, P0, R4, UR6, RZ ;
 Instr 2312 @ 0x9080 (36992) - IADD3.X R11, R5, UR8, RZ, P0, !PT ;
 Instr 2313 @ 0x9090 (37008) - STG.E.128.SYS [R4], R68 ;
 Instr 2314 @ 0x90a0 (37024) - IADD3 R8, P0, R10, UR6, RZ ;
 Instr 2315 @ 0x90b0 (37040) - STG.E.128.SYS [R4.64+UR10], R72 ;
 Instr 2316 @ 0x90c0 (37056) - IADD3.X R9, R11, UR8, RZ, P0, !PT ;
 Instr 2317 @ 0x90d0 (37072) - IADD3 R6, P0, R8, UR6, RZ ;
 Instr 2318 @ 0x90e0 (37088) - STG.E.128.SYS [R10], R76 ;
 Instr 2319 @ 0x90f0 (37104) - IADD3.X R7, R9, UR8, RZ, P0, !PT ;
 Instr 2320 @ 0x9100 (37120) - IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 2321 @ 0x9110 (37136) - IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 2322 @ 0x9120 (37152) - STG.E.128.SYS [R4.64+UR10], R80 ;
 Instr 2323 @ 0x9130 (37168) - STG.E.128.SYS [R8], R84 ;
 Instr 2324 @ 0x9140 (37184) - IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 2325 @ 0x9150 (37200) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 2326 @ 0x9160 (37216) - STG.E.128.SYS [R4.64+UR10], R88 ;
 Instr 2327 @ 0x9170 (37232) - STG.E.128.SYS [R6], R92 ;
 Instr 2328 @ 0x9180 (37248) - STG.E.128.SYS [R6.64+UR10], R96 ;
Basic block id 78 - num instructions 1
 Instr 2329 @ 0x9190 (37264) - @!P1 BRA 0xa810 ;
Basic block id 79 - num instructions 359
 Instr 2330 @ 0x91a0 (37280) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 2331 @ 0x91b0 (37296) - CS2R R22, SRZ ;
 Instr 2332 @ 0x91c0 (37312) - IADD3 R6, R168.reuse, 0x48, RZ ;
 Instr 2333 @ 0x91d0 (37328) - CS2R R18, SRZ ;
 Instr 2334 @ 0x91e0 (37344) - IADD3 R24, R168.reuse, 0x50, RZ ;
 Instr 2335 @ 0x91f0 (37360) - IMAD.MOV.U32 R5, RZ, RZ, RZ ;
 Instr 2336 @ 0x9200 (37376) - IADD3 R26, R168.reuse, 0x40, RZ ;
 Instr 2337 @ 0x9210 (37392) - IMAD.MOV.U32 R21, RZ, RZ, RZ ;
 Instr 2338 @ 0x9220 (37408) - IADD3 R20, R168, 0x58, RZ ;
 Instr 2339 @ 0x9230 (37424) - IMAD.MOV.U32 R25, RZ, RZ, RZ ;
 Instr 2340 @ 0x9240 (37440) - ISETP.GE.AND P2, PT, R169, R208, PT ;
 Instr 2341 @ 0x9250 (37456) - STS.64 [R3], R68 ;
 Instr 2342 @ 0x9260 (37472) - @P0 IMAD.HI.U32 R10, R6.reuse, c[0x0][0x3d8], RZ ;
 Instr 2343 @ 0x9270 (37488) - HADD2.F32 R33, R164.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2344 @ 0x9280 (37504) - ISETP.LT.AND P4, PT, R6, c[0x0][0x3c4], !P2 ;
 Instr 2345 @ 0x9290 (37520) - STS.64 [R3+0x10], R72 ;
 Instr 2346 @ 0x92a0 (37536) - @P0 IMAD.HI.U32 R8, R24.reuse, c[0x0][0x3d8], RZ ;
 Instr 2347 @ 0x92b0 (37552) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3dc], R10 ;
 Instr 2348 @ 0x92c0 (37568) - CS2R R28, SRZ ;
 Instr 2349 @ 0x92d0 (37584) - ISETP.LT.AND P3, PT, R24, c[0x0][0x3c4], !P2 ;
 Instr 2350 @ 0x92e0 (37600) - @P0 IMAD.HI.U32 R12, R26.reuse, c[0x0][0x3d8], RZ ;
 Instr 2351 @ 0x92f0 (37616) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x3dc], R8 ;
 Instr 2352 @ 0x9300 (37632) - STS.64 [R3+0x1100], R70 ;
 Instr 2353 @ 0x9310 (37648) - ISETP.LT.AND P5, PT, R26, c[0x0][0x3c4], !P2 ;
 Instr 2354 @ 0x9320 (37664) - @P0 IMAD.HI.U32 R4, R20.reuse, c[0x0][0x3d8], RZ ;
 Instr 2355 @ 0x9330 (37680) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x3dc], R12 ;
 Instr 2356 @ 0x9340 (37696) - STS.64 [R3+0x1110], R74 ;
 Instr 2357 @ 0x9350 (37712) - ISETP.LT.AND P2, PT, R20, c[0x0][0x3c4], !P2 ;
 Instr 2358 @ 0x9360 (37728) - @P0 IMAD.MOV R11, RZ, RZ, -R10 ;
 Instr 2359 @ 0x9370 (37744) - @P0 SHF.R.U32.HI R4, RZ, c[0x0][0x3dc], R4 ;
 Instr 2360 @ 0x9380 (37760) - @P0 IMAD.MOV R9, RZ, RZ, -R8 ;
 Instr 2361 @ 0x9390 (37776) - STS.64 [R3+0x40], R76 ;
 Instr 2362 @ 0x93a0 (37792) - @P0 IMAD.MOV R13, RZ, RZ, -R12 ;
 Instr 2363 @ 0x93b0 (37808) - HADD2.F32 R31, R164.H1_H1, -RZ.H0_H0 ;
 Instr 2364 @ 0x93c0 (37824) - @P0 IMAD.MOV R7, RZ, RZ, -R4 ;
 Instr 2365 @ 0x93d0 (37840) - STS.64 [R3+0x50], R80 ;
 Instr 2366 @ 0x93e0 (37856) - @P0 IMAD R5, R11, c[0x0][0x3c8], R6 ;
 Instr 2367 @ 0x93f0 (37872) - HADD2.F32 R45, R165.H0_H0, -RZ.H0_H0 ;
 Instr 2368 @ 0x9400 (37888) - @P0 IMAD R21, R9, c[0x0][0x3c8], R24 ;
 Instr 2369 @ 0x9410 (37904) - STS.64 [R3+0x1140], R78 ;
 Instr 2370 @ 0x9420 (37920) - @P0 IMAD R23, R13, c[0x0][0x3c8], R26 ;
 Instr 2371 @ 0x9430 (37936) - HADD2.F32 R44, R166.H1_H1, -RZ.H0_H0 ;
 Instr 2372 @ 0x9440 (37952) - @P0 IMAD R19, R7, c[0x0][0x3c8], R20 ;
 Instr 2373 @ 0x9450 (37968) - STS.64 [R3+0x1150], R82 ;
 Instr 2374 @ 0x9460 (37984) - @P0 IMAD.MOV.U32 R6, RZ, RZ, R10 ;
 Instr 2375 @ 0x9470 (38000) - HADD2.F32 R47, R167.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2376 @ 0x9480 (38016) - @P0 IMAD.MOV.U32 R24, RZ, RZ, R8 ;
 Instr 2377 @ 0x9490 (38032) - STS.64 [R3+0x80], R84 ;
 Instr 2378 @ 0x94a0 (38048) - @P0 IMAD.MOV.U32 R26, RZ, RZ, R12 ;
 Instr 2379 @ 0x94b0 (38064) - HADD2.F32 R46, R167.H1_H1, -RZ.H0_H0 ;
 Instr 2380 @ 0x94c0 (38080) - @P0 IMAD.MOV.U32 R20, RZ, RZ, R4 ;
 Instr 2381 @ 0x94d0 (38096) - PLOP3.LUT P0, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 2382 @ 0x94e0 (38112) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2383 @ 0x94f0 (38128) - STS.64 [R3+0x90], R88 ;
 Instr 2384 @ 0x9500 (38144) - IMAD R17, R169, c[0x0][0x254], RZ ;
 Instr 2385 @ 0x9510 (38160) - IMAD.MOV.U32 R27, RZ, RZ, RZ ;
 Instr 2386 @ 0x9520 (38176) - STS.64 [R3+0x1180], R86 ;
 Instr 2387 @ 0x9530 (38192) - IMAD R6, R6, c[0x0][0x244], R17.reuse ;
 Instr 2388 @ 0x9540 (38208) - IMAD R26, R26, c[0x0][0x244], R17.reuse ;
 Instr 2389 @ 0x9550 (38224) - STS.64 [R3+0x1190], R90 ;
 Instr 2390 @ 0x9560 (38240) - IMAD R24, R24, c[0x0][0x244], R17 ;
 Instr 2391 @ 0x9570 (38256) - @P0 IMAD.HI.U32 R11, R5, c[0x0][0x3e0], RZ ;
 Instr 2392 @ 0x9580 (38272) - STS.64 [R3+0xc0], R92 ;
 Instr 2393 @ 0x9590 (38288) - @P0 IMAD.HI.U32 R9, R21, c[0x0][0x3e0], RZ ;
 Instr 2394 @ 0x95a0 (38304) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3e4], R11 ;
 Instr 2395 @ 0x95b0 (38320) - STS.64 [R3+0xd0], R96 ;
 Instr 2396 @ 0x95c0 (38336) - @P0 IMAD.HI.U32 R13, R23, c[0x0][0x3e0], RZ ;
 Instr 2397 @ 0x95d0 (38352) - @P0 SHF.R.U32.HI R9, RZ, c[0x0][0x3e4], R9 ;
 Instr 2398 @ 0x95e0 (38368) - STS.64 [R3+0x11c0], R94 ;
 Instr 2399 @ 0x95f0 (38384) - @P0 IMAD.HI.U32 R7, R19, c[0x0][0x3e0], RZ ;
 Instr 2400 @ 0x9600 (38400) - @P0 SHF.R.U32.HI R13, RZ, c[0x0][0x3e4], R13 ;
 Instr 2401 @ 0x9610 (38416) - STS.64 [R3+0x11d0], R98 ;
 Instr 2402 @ 0x9620 (38432) - @P0 IMAD.MOV R12, RZ, RZ, -R11 ;
 Instr 2403 @ 0x9630 (38448) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3e4], R7 ;
 Instr 2404 @ 0x9640 (38464) - @P0 IMAD.MOV R10, RZ, RZ, -R9 ;
 Instr 2405 @ 0x9650 (38480) - @P0 IMAD.MOV R14, RZ, RZ, -R13 ;
 Instr 2406 @ 0x9660 (38496) - @P0 IMAD.MOV R8, RZ, RZ, -R7 ;
 Instr 2407 @ 0x9670 (38512) - @P0 IMAD R4, R12, c[0x0][0x3cc], R5 ;
 Instr 2408 @ 0x9680 (38528) - @P0 IMAD R22, R10, c[0x0][0x3cc], R21 ;
 Instr 2409 @ 0x9690 (38544) - @P0 IMAD R25, R14, c[0x0][0x3cc], R23 ;
 Instr 2410 @ 0x96a0 (38560) - @P0 IMAD R18, R8, c[0x0][0x3cc], R19 ;
 Instr 2411 @ 0x96b0 (38576) - @P0 IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 2412 @ 0x96c0 (38592) - @P0 IMAD.MOV.U32 R21, RZ, RZ, R9 ;
 Instr 2413 @ 0x96d0 (38608) - @P0 IMAD.MOV.U32 R23, RZ, RZ, R13 ;
 Instr 2414 @ 0x96e0 (38624) - @P0 IMAD.MOV.U32 R19, RZ, RZ, R7 ;
 Instr 2415 @ 0x96f0 (38640) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2416 @ 0x9700 (38656) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 2417 @ 0x9710 (38672) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 2418 @ 0x9720 (38688) - IMAD R5, R5, c[0x0][0x248], R6 ;
 Instr 2419 @ 0x9730 (38704) - IMAD R26, R23, c[0x0][0x248], R26 ;
 Instr 2420 @ 0x9740 (38720) - IMAD R20, R20, c[0x0][0x244], R17 ;
 Instr 2421 @ 0x9750 (38736) - IMAD R21, R21, c[0x0][0x248], R24 ;
 Instr 2422 @ 0x9760 (38752) - IMAD R19, R19, c[0x0][0x248], R20 ;
 Instr 2423 @ 0x9770 (38768) - @P0 IMAD.HI.U32 R8, R4, c[0x0][0x3e8], RZ ;
 Instr 2424 @ 0x9780 (38784) - @P0 IMAD.HI.U32 R30, R22, c[0x0][0x3e8], RZ ;
 Instr 2425 @ 0x9790 (38800) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x3ec], R8 ;
 Instr 2426 @ 0x97a0 (38816) - @P0 IMAD.HI.U32 R32, R25, c[0x0][0x3e8], RZ ;
 Instr 2427 @ 0x97b0 (38832) - @P0 SHF.R.U32.HI R30, RZ, c[0x0][0x3ec], R30 ;
 Instr 2428 @ 0x97c0 (38848) - @P0 IMAD.MOV R7, RZ, RZ, -R8 ;
 Instr 2429 @ 0x97d0 (38864) - @P0 SHF.R.U32.HI R32, RZ, c[0x0][0x3ec], R32 ;
 Instr 2430 @ 0x97e0 (38880) - @P0 IMAD.HI.U32 R14, R18, c[0x0][0x3e8], RZ ;
 Instr 2431 @ 0x97f0 (38896) - @P0 IMAD R9, R7, c[0x0][0x1b4], R4 ;
 Instr 2432 @ 0x9800 (38912) - @P0 SHF.R.U32.HI R14, RZ, c[0x0][0x3ec], R14 ;
 Instr 2433 @ 0x9810 (38928) - @P0 IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 2434 @ 0x9820 (38944) - @P0 IMAD.MOV R15, RZ, RZ, -R30 ;
 Instr 2435 @ 0x9830 (38960) - IMAD R4, R4, c[0x0][0x24c], R5 ;
 Instr 2436 @ 0x9840 (38976) - @P0 IMAD.MOV R12, RZ, RZ, -R32 ;
 Instr 2437 @ 0x9850 (38992) - IMAD R4, R9, c[0x0][0x250], R4 ;
 Instr 2438 @ 0x9860 (39008) - LDS.U.128 R8, [R170.X16] ;
 Instr 2439 @ 0x9870 (39024) - @P0 IMAD.MOV R13, RZ, RZ, -R14 ;
 Instr 2440 @ 0x9880 (39040) - SEL R16, R4, 0xffffffff, P4 ;
 Instr 2441 @ 0x9890 (39056) - @P0 IMAD R28, R15, c[0x0][0x1b4], R22 ;
 Instr 2442 @ 0x98a0 (39072) - @P0 IMAD R29, R12, c[0x0][0x1b4], R25 ;
 Instr 2443 @ 0x98b0 (39088) - LDS.U.128 R4, [R170.X16+0x1100] ;
 Instr 2444 @ 0x98c0 (39104) - @P0 IMAD R27, R13, c[0x0][0x1b4], R18 ;
 Instr 2445 @ 0x98d0 (39120) - @P0 IMAD.MOV.U32 R22, RZ, RZ, R30 ;
 Instr 2446 @ 0x98e0 (39136) - @P0 IMAD.MOV.U32 R25, RZ, RZ, R32 ;
 Instr 2447 @ 0x98f0 (39152) - HADD2.F32 R30, R165.H1_H1, -RZ.H0_H0 ;
 Instr 2448 @ 0x9900 (39168) - @P0 IMAD.MOV.U32 R18, RZ, RZ, R14 ;
 Instr 2449 @ 0x9910 (39184) - LDS.U.128 R12, [R170.X16+0x2200] ;
 Instr 2450 @ 0x9920 (39200) - IMAD R26, R25, c[0x0][0x24c], R26 ;
 Instr 2451 @ 0x9930 (39216) - IMAD R21, R22, c[0x0][0x24c], R21 ;
 Instr 2452 @ 0x9940 (39232) - IMAD R26, R29, c[0x0][0x250], R26 ;
 Instr 2453 @ 0x9950 (39248) - IMAD R18, R18, c[0x0][0x24c], R19 ;
 Instr 2454 @ 0x9960 (39264) - IMAD R20, R28, c[0x0][0x250], R21 ;
 Instr 2455 @ 0x9970 (39280) - SEL R26, R26, 0xffffffff, P5 ;
 Instr 2456 @ 0x9980 (39296) - IMAD R18, R27, c[0x0][0x250], R18 ;
 Instr 2457 @ 0x9990 (39312) - SEL R20, R20, 0xffffffff, P3 ;
 Instr 2458 @ 0x99a0 (39328) - SEL R19, R18, 0xffffffff, P2 ;
 Instr 2459 @ 0x99b0 (39344) - FFMA R8, R8, R2.reuse, R33 ;
 Instr 2460 @ 0x99c0 (39360) - FFMA R9, R9, R2.reuse, R31 ;
 Instr 2461 @ 0x99d0 (39376) - FFMA R10, R10, R2.reuse, R45 ;
 Instr 2462 @ 0x99e0 (39392) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 2463 @ 0x99f0 (39408) - FFMA R11, R11, R2.reuse, R30 ;
 Instr 2464 @ 0x9a00 (39424) - FFMA R4, R4, R2.reuse, R33 ;
 Instr 2465 @ 0x9a10 (39440) - FSEL R8, R8, c[0x0][0x210], P0 ;
 Instr 2466 @ 0x9a20 (39456) - FFMA R5, R5, R2.reuse, R31 ;
 Instr 2467 @ 0x9a30 (39472) - FSETP.GEU.AND P0, PT, R9, c[0x0][0x210], PT ;
 Instr 2468 @ 0x9a40 (39488) - FFMA R6, R6, R2, R45 ;
 Instr 2469 @ 0x9a50 (39504) - FFMA R7, R7, R2.reuse, R30.reuse ;
 Instr 2470 @ 0x9a60 (39520) - FSEL R42, R9, c[0x0][0x210], P0 ;
 Instr 2471 @ 0x9a70 (39536) - FSETP.GT.AND P0, PT, R8, c[0x0][0x220], PT ;
 Instr 2472 @ 0x9a80 (39552) - FFMA R12, R12, R2.reuse, R33 ;
 Instr 2473 @ 0x9a90 (39568) - FFMA R13, R13, R2.reuse, R31 ;
 Instr 2474 @ 0x9aa0 (39584) - FSEL R41, R8, c[0x0][0x220], !P0 ;
 Instr 2475 @ 0x9ab0 (39600) - FFMA R14, R14, R2.reuse, R45 ;
 Instr 2476 @ 0x9ac0 (39616) - FSETP.GT.AND P0, PT, R42, c[0x0][0x220], PT ;
 Instr 2477 @ 0x9ad0 (39632) - FFMA R15, R15, R2, R30 ;
 Instr 2478 @ 0x9ae0 (39648) - FSEL R42, R42, c[0x0][0x220], !P0 ;
 Instr 2479 @ 0x9af0 (39664) - F2F.F16.F32 R41, R41 ;
 Instr 2480 @ 0x9b00 (39680) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 2481 @ 0x9b10 (39696) - FSEL R38, R4, c[0x0][0x210], P0 ;
 Instr 2482 @ 0x9b20 (39712) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 2483 @ 0x9b30 (39728) - F2F.F16.F32 R42, R42 ;
 Instr 2484 @ 0x9b40 (39744) - FSEL R37, R5, c[0x0][0x210], P0 ;
 Instr 2485 @ 0x9b50 (39760) - FSETP.GT.AND P0, PT, R38.reuse, c[0x0][0x220], PT ;
 Instr 2486 @ 0x9b60 (39776) - FSEL R38, R38, c[0x0][0x220], !P0 ;
 Instr 2487 @ 0x9b70 (39792) - FSETP.GT.AND P0, PT, R37.reuse, c[0x0][0x220], PT ;
 Instr 2488 @ 0x9b80 (39808) - FSEL R37, R37, c[0x0][0x220], !P0 ;
 Instr 2489 @ 0x9b90 (39824) - F2F.F16.F32 R38, R38 ;
 Instr 2490 @ 0x9ba0 (39840) - FSETP.GEU.AND P0, PT, R10, c[0x0][0x210], PT ;
 Instr 2491 @ 0x9bb0 (39856) - FSEL R40, R10, c[0x0][0x210], P0 ;
 Instr 2492 @ 0x9bc0 (39872) - FSETP.GEU.AND P0, PT, R11.reuse, c[0x0][0x210], PT ;
 Instr 2493 @ 0x9bd0 (39888) - F2F.F16.F32 R37, R37 ;
 Instr 2494 @ 0x9be0 (39904) - FSEL R43, R11, c[0x0][0x210], P0 ;
 Instr 2495 @ 0x9bf0 (39920) - FSETP.GT.AND P0, PT, R40.reuse, c[0x0][0x220], PT ;
 Instr 2496 @ 0x9c00 (39936) - LDS.U.128 R8, [R170.X16+0x110] ;
 Instr 2497 @ 0x9c10 (39952) - FSEL R40, R40, c[0x0][0x220], !P0 ;
 Instr 2498 @ 0x9c20 (39968) - FSETP.GT.AND P0, PT, R43.reuse, c[0x0][0x220], PT ;
 Instr 2499 @ 0x9c30 (39984) - FSEL R43, R43, c[0x0][0x220], !P0 ;
 Instr 2500 @ 0x9c40 (40000) - F2F.F16.F32 R40, R40 ;
 Instr 2501 @ 0x9c50 (40016) - FSETP.GEU.AND P0, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 2502 @ 0x9c60 (40032) - FSEL R36, R6, c[0x0][0x210], P0 ;
 Instr 2503 @ 0x9c70 (40048) - FSETP.GEU.AND P0, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 2504 @ 0x9c80 (40064) - F2F.F16.F32 R43, R43 ;
 Instr 2505 @ 0x9c90 (40080) - FSEL R39, R7, c[0x0][0x210], P0 ;
 Instr 2506 @ 0x9ca0 (40096) - FSETP.GT.AND P0, PT, R36.reuse, c[0x0][0x220], PT ;
 Instr 2507 @ 0x9cb0 (40112) - LDS.U.128 R4, [R170.X16+0x3300] ;
 Instr 2508 @ 0x9cc0 (40128) - FSEL R36, R36, c[0x0][0x220], !P0 ;
 Instr 2509 @ 0x9cd0 (40144) - FSETP.GT.AND P0, PT, R39.reuse, c[0x0][0x220], PT ;
 Instr 2510 @ 0x9ce0 (40160) - FSEL R39, R39, c[0x0][0x220], !P0 ;
 Instr 2511 @ 0x9cf0 (40176) - F2F.F16.F32 R36, R36 ;
 Instr 2512 @ 0x9d00 (40192) - FSETP.GEU.AND P0, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 2513 @ 0x9d10 (40208) - FSEL R32, R12, c[0x0][0x210], P0 ;
 Instr 2514 @ 0x9d20 (40224) - FFMA R9, R9, R2.reuse, R44 ;
 Instr 2515 @ 0x9d30 (40240) - FSETP.GEU.AND P0, PT, R13, c[0x0][0x210], PT ;
 Instr 2516 @ 0x9d40 (40256) - FFMA R10, R10, R2.reuse, R47 ;
 Instr 2517 @ 0x9d50 (40272) - F2F.F16.F32 R39, R39 ;
 Instr 2518 @ 0x9d60 (40288) - FFMA R11, R11, R2, R46 ;
 Instr 2519 @ 0x9d70 (40304) - FSEL R35, R13, c[0x0][0x210], P0 ;
 Instr 2520 @ 0x9d80 (40320) - FSETP.GT.AND P0, PT, R32.reuse, c[0x0][0x220], PT ;
 Instr 2521 @ 0x9d90 (40336) - FSEL R32, R32, c[0x0][0x220], !P0 ;
 Instr 2522 @ 0x9da0 (40352) - FSETP.GT.AND P0, PT, R35.reuse, c[0x0][0x220], PT ;
 Instr 2523 @ 0x9db0 (40368) - FSEL R35, R35, c[0x0][0x220], !P0 ;
 Instr 2524 @ 0x9dc0 (40384) - F2F.F16.F32 R32, R32 ;
 Instr 2525 @ 0x9dd0 (40400) - FSETP.GEU.AND P0, PT, R14, c[0x0][0x210], PT ;
 Instr 2526 @ 0x9de0 (40416) - FSEL R34, R14, c[0x0][0x210], P0 ;
 Instr 2527 @ 0x9df0 (40432) - FFMA R4, R4, R2.reuse, R33 ;
 Instr 2528 @ 0x9e00 (40448) - FSETP.GEU.AND P0, PT, R15, c[0x0][0x210], PT ;
 Instr 2529 @ 0x9e10 (40464) - FFMA R5, R5, R2.reuse, R31 ;
 Instr 2530 @ 0x9e20 (40480) - F2F.F16.F32 R35, R35 ;
 Instr 2531 @ 0x9e30 (40496) - FFMA R6, R6, R2.reuse, R45 ;
 Instr 2532 @ 0x9e40 (40512) - FSEL R12, R15, c[0x0][0x210], P0 ;
 Instr 2533 @ 0x9e50 (40528) - FFMA R7, R7, R2, R30 ;
 Instr 2534 @ 0x9e60 (40544) - FSETP.GT.AND P0, PT, R34.reuse, c[0x0][0x220], PT ;
 Instr 2535 @ 0x9e70 (40560) - HADD2.F32 R45, R166.H0_H0, -RZ.H0_H0 ;
 Instr 2536 @ 0x9e80 (40576) - FSEL R34, R34, c[0x0][0x220], !P0 ;
 Instr 2537 @ 0x9e90 (40592) - FSETP.GT.AND P0, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 2538 @ 0x9ea0 (40608) - FSEL R33, R12, c[0x0][0x220], !P0 ;
 Instr 2539 @ 0x9eb0 (40624) - F2F.F16.F32 R34, R34 ;
 Instr 2540 @ 0x9ec0 (40640) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 2541 @ 0x9ed0 (40656) - LDS.U.128 R12, [R170.X16+0x1210] ;
 Instr 2542 @ 0x9ee0 (40672) - FSEL R50, R4, c[0x0][0x210], P0 ;
 Instr 2543 @ 0x9ef0 (40688) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 2544 @ 0x9f00 (40704) - F2F.F16.F32 R33, R33 ;
 Instr 2545 @ 0x9f10 (40720) - FSEL R4, R5, c[0x0][0x210], P0 ;
 Instr 2546 @ 0x9f20 (40736) - FSETP.GT.AND P0, PT, R50.reuse, c[0x0][0x220], PT ;
 Instr 2547 @ 0x9f30 (40752) - FSEL R50, R50, c[0x0][0x220], !P0 ;
 Instr 2548 @ 0x9f40 (40768) - FSETP.GT.AND P0, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 2549 @ 0x9f50 (40784) - FSEL R30, R4, c[0x0][0x220], !P0 ;
 Instr 2550 @ 0x9f60 (40800) - FFMA R4, R8, R2, R45 ;
 Instr 2551 @ 0x9f70 (40816) - FSETP.GEU.AND P0, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 2552 @ 0x9f80 (40832) - FSEL R5, R6, c[0x0][0x210], P0 ;
 Instr 2553 @ 0x9f90 (40848) - F2F.F16.F32 R30, R30 ;
 Instr 2554 @ 0x9fa0 (40864) - FSETP.GEU.AND P0, PT, R7, c[0x0][0x210], PT ;
 Instr 2555 @ 0x9fb0 (40880) - FSEL R31, R7, c[0x0][0x210], P0 ;
 Instr 2556 @ 0x9fc0 (40896) - FSETP.GT.AND P0, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 2557 @ 0x9fd0 (40912) - FSEL R8, R5, c[0x0][0x220], !P0 ;
 Instr 2558 @ 0x9fe0 (40928) - FFMA R12, R12, R2.reuse, R45 ;
 Instr 2559 @ 0x9ff0 (40944) - FSETP.GT.AND P0, PT, R31, c[0x0][0x220], PT ;
 Instr 2560 @ 0xa000 (40960) - FFMA R13, R13, R2.reuse, R44 ;
 Instr 2561 @ 0xa010 (40976) - FFMA R14, R14, R2.reuse, R47 ;
 Instr 2562 @ 0xa020 (40992) - FSEL R31, R31, c[0x0][0x220], !P0 ;
 Instr 2563 @ 0xa030 (41008) - FFMA R15, R15, R2, R46 ;
 Instr 2564 @ 0xa040 (41024) - FSETP.GEU.AND P0, PT, R4, c[0x0][0x210], PT ;
 Instr 2565 @ 0xa050 (41040) - FSEL R4, R4, c[0x0][0x210], P0 ;
 Instr 2566 @ 0xa060 (41056) - F2F.F16.F32 R31, R31 ;
 Instr 2567 @ 0xa070 (41072) - FSETP.GEU.AND P0, PT, R9.reuse, c[0x0][0x210], PT ;
 Instr 2568 @ 0xa080 (41088) - FSEL R51, R9, c[0x0][0x210], P0 ;
 Instr 2569 @ 0xa090 (41104) - FSETP.GT.AND P0, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 2570 @ 0xa0a0 (41120) - FSEL R52, R4, c[0x0][0x220], !P0 ;
 Instr 2571 @ 0xa0b0 (41136) - FSETP.GT.AND P0, PT, R51.reuse, c[0x0][0x220], PT ;
 Instr 2572 @ 0xa0c0 (41152) - LDS.U.128 R4, [R170.X16+0x2310] ;
 Instr 2573 @ 0xa0d0 (41168) - FSEL R51, R51, c[0x0][0x220], !P0 ;
 Instr 2574 @ 0xa0e0 (41184) - F2F.F16.F32 R52, R52 ;
 Instr 2575 @ 0xa0f0 (41200) - FSETP.GEU.AND P0, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 2576 @ 0xa100 (41216) - FSEL R49, R12, c[0x0][0x210], P0 ;
 Instr 2577 @ 0xa110 (41232) - FSETP.GEU.AND P0, PT, R13.reuse, c[0x0][0x210], PT ;
 Instr 2578 @ 0xa120 (41248) - F2F.F16.F32 R12, R8 ;
 Instr 2579 @ 0xa130 (41264) - FSEL R48, R13, c[0x0][0x210], P0 ;
 Instr 2580 @ 0xa140 (41280) - FSETP.GT.AND P0, PT, R49.reuse, c[0x0][0x220], PT ;
 Instr 2581 @ 0xa150 (41296) - F2F.F16.F32 R13, R50 ;
 Instr 2582 @ 0xa160 (41312) - FSEL R49, R49, c[0x0][0x220], !P0 ;
 Instr 2583 @ 0xa170 (41328) - FSETP.GT.AND P0, PT, R48.reuse, c[0x0][0x220], PT ;
 Instr 2584 @ 0xa180 (41344) - FSEL R48, R48, c[0x0][0x220], !P0 ;
 Instr 2585 @ 0xa190 (41360) - F2F.F16.F32 R51, R51 ;
 Instr 2586 @ 0xa1a0 (41376) - FSETP.GEU.AND P0, PT, R10.reuse, c[0x0][0x210], PT ;
 Instr 2587 @ 0xa1b0 (41392) - FSEL R10, R10, c[0x0][0x210], P0 ;
 Instr 2588 @ 0xa1c0 (41408) - FSETP.GEU.AND P0, PT, R11.reuse, c[0x0][0x210], PT ;
 Instr 2589 @ 0xa1d0 (41424) - F2F.F16.F32 R48, R48 ;
 Instr 2590 @ 0xa1e0 (41440) - FSEL R53, R11, c[0x0][0x210], P0 ;
 Instr 2591 @ 0xa1f0 (41456) - FFMA R55, R4, R2.reuse, R45 ;
 Instr 2592 @ 0xa200 (41472) - FSETP.GT.AND P0, PT, R10, c[0x0][0x220], PT ;
 Instr 2593 @ 0xa210 (41488) - FFMA R5, R5, R2.reuse, R44 ;
 Instr 2594 @ 0xa220 (41504) - FFMA R54, R6, R2.reuse, R47 ;
 Instr 2595 @ 0xa230 (41520) - FSEL R50, R10, c[0x0][0x220], !P0 ;
 Instr 2596 @ 0xa240 (41536) - FFMA R7, R7, R2, R46 ;
 Instr 2597 @ 0xa250 (41552) - FSETP.GT.AND P0, PT, R53.reuse, c[0x0][0x220], PT ;
 Instr 2598 @ 0xa260 (41568) - LDS.U.128 R8, [R170.X16+0x3410] ;
 Instr 2599 @ 0xa270 (41584) - FSEL R53, R53, c[0x0][0x220], !P0 ;
 Instr 2600 @ 0xa280 (41600) - F2F.F16.F32 R50, R50 ;
 Instr 2601 @ 0xa290 (41616) - FSETP.GEU.AND P0, PT, R14, c[0x0][0x210], PT ;
 Instr 2602 @ 0xa2a0 (41632) - FSEL R14, R14, c[0x0][0x210], P0 ;
 Instr 2603 @ 0xa2b0 (41648) - FSETP.GEU.AND P0, PT, R15.reuse, c[0x0][0x210], PT ;
 Instr 2604 @ 0xa2c0 (41664) - F2F.F16.F32 R53, R53 ;
 Instr 2605 @ 0xa2d0 (41680) - FSEL R15, R15, c[0x0][0x210], P0 ;
 Instr 2606 @ 0xa2e0 (41696) - FSETP.GT.AND P0, PT, R14.reuse, c[0x0][0x220], PT ;
 Instr 2607 @ 0xa2f0 (41712) - FSEL R14, R14, c[0x0][0x220], !P0 ;
 Instr 2608 @ 0xa300 (41728) - FSETP.GT.AND P0, PT, R15.reuse, c[0x0][0x220], PT ;
 Instr 2609 @ 0xa310 (41744) - FSEL R4, R15, c[0x0][0x220], !P0 ;
 Instr 2610 @ 0xa320 (41760) - F2F.F16.F32 R14, R14 ;
 Instr 2611 @ 0xa330 (41776) - FSETP.GEU.AND P0, PT, R55.reuse, c[0x0][0x210], PT ;
 Instr 2612 @ 0xa340 (41792) - FSEL R55, R55, c[0x0][0x210], P0 ;
 Instr 2613 @ 0xa350 (41808) - FSETP.GEU.AND P0, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 2614 @ 0xa360 (41824) - F2F.F16.F32 R15, R49 ;
 Instr 2615 @ 0xa370 (41840) - FSEL R5, R5, c[0x0][0x210], P0 ;
 Instr 2616 @ 0xa380 (41856) - FFMA R45, R8, R2.reuse, R45 ;
 Instr 2617 @ 0xa390 (41872) - FSETP.GT.AND P0, PT, R55, c[0x0][0x220], PT ;
 Instr 2618 @ 0xa3a0 (41888) - FFMA R44, R9, R2.reuse, R44 ;
 Instr 2619 @ 0xa3b0 (41904) - FFMA R10, R10, R2.reuse, R47 ;
 Instr 2620 @ 0xa3c0 (41920) - FSEL R6, R55, c[0x0][0x220], !P0 ;
 Instr 2621 @ 0xa3d0 (41936) - FFMA R46, R11, R2, R46 ;
 Instr 2622 @ 0xa3e0 (41952) - FSETP.GT.AND P0, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 2623 @ 0xa3f0 (41968) - F2F.F16.F32 R49, R4 ;
 Instr 2624 @ 0xa400 (41984) - FSEL R5, R5, c[0x0][0x220], !P0 ;
 Instr 2625 @ 0xa410 (42000) - FSETP.GEU.AND P0, PT, R54.reuse, c[0x0][0x210], PT ;
 Instr 2626 @ 0xa420 (42016) - F2F.F16.F32 R8, R6 ;
 Instr 2627 @ 0xa430 (42032) - FSEL R54, R54, c[0x0][0x210], P0 ;
 Instr 2628 @ 0xa440 (42048) - FSETP.GEU.AND P0, PT, R7, c[0x0][0x210], PT ;
 Instr 2629 @ 0xa450 (42064) - PRMT R4, R41, 0x5410, R42 ;
 Instr 2630 @ 0xa460 (42080) - FSEL R7, R7, c[0x0][0x210], P0 ;
 Instr 2631 @ 0xa470 (42096) - F2F.F16.F32 R9, R5 ;
 Instr 2632 @ 0xa480 (42112) - FSETP.GT.AND P0, PT, R54, c[0x0][0x220], PT ;
 Instr 2633 @ 0xa490 (42128) - PRMT R6, R52, 0x5410, R51 ;
 Instr 2634 @ 0xa4a0 (42144) - FSEL R54, R54, c[0x0][0x220], !P0 ;
 Instr 2635 @ 0xa4b0 (42160) - FSETP.GT.AND P0, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 2636 @ 0xa4c0 (42176) - FSEL R7, R7, c[0x0][0x220], !P0 ;
 Instr 2637 @ 0xa4d0 (42192) - F2F.F16.F32 R54, R54 ;
 Instr 2638 @ 0xa4e0 (42208) - FSETP.GEU.AND P0, PT, R45, c[0x0][0x210], PT ;
 Instr 2639 @ 0xa4f0 (42224) - FSEL R45, R45, c[0x0][0x210], P0 ;
 Instr 2640 @ 0xa500 (42240) - FSETP.GEU.AND P0, PT, R44.reuse, c[0x0][0x210], PT ;
 Instr 2641 @ 0xa510 (42256) - F2F.F16.F32 R11, R7 ;
 Instr 2642 @ 0xa520 (42272) - FSETP.GT.AND P4, PT, R45.reuse, c[0x0][0x220], PT ;
 Instr 2643 @ 0xa530 (42288) - FSEL R44, R44, c[0x0][0x210], P0 ;
 Instr 2644 @ 0xa540 (42304) - FSEL R45, R45, c[0x0][0x220], !P4 ;
 Instr 2645 @ 0xa550 (42320) - FSETP.GT.AND P0, PT, R44, c[0x0][0x220], PT ;
 Instr 2646 @ 0xa560 (42336) - FSETP.GEU.AND P4, PT, R10, c[0x0][0x210], PT ;
 Instr 2647 @ 0xa570 (42352) - FSEL R17, R44, c[0x0][0x220], !P0 ;
 Instr 2648 @ 0xa580 (42368) - ISETP.GE.AND P0, PT, R26, RZ, PT ;
 Instr 2649 @ 0xa590 (42384) - FSEL R5, R10, c[0x0][0x210], P4 ;
 Instr 2650 @ 0xa5a0 (42400) - FSETP.GEU.AND P4, PT, R46, c[0x0][0x210], PT ;
 Instr 2651 @ 0xa5b0 (42416) - F2F.F16.F32 R10, R45 ;
 Instr 2652 @ 0xa5c0 (42432) - FSETP.GT.AND P3, PT, R5, c[0x0][0x220], PT ;
 Instr 2653 @ 0xa5d0 (42448) - FSEL R46, R46, c[0x0][0x210], P4 ;
 Instr 2654 @ 0xa5e0 (42464) - ISETP.GE.AND P4, PT, R16, RZ, PT ;
 Instr 2655 @ 0xa5f0 (42480) - @P0 IMAD.MOV.U32 R27, RZ, RZ, 0x2 ;
 Instr 2656 @ 0xa600 (42496) - FSEL R18, R5, c[0x0][0x220], !P3 ;
 Instr 2657 @ 0xa610 (42512) - F2F.F16.F32 R17, R17 ;
 Instr 2658 @ 0xa620 (42528) - PRMT R5, R40, 0x5410, R43 ;
 Instr 2659 @ 0xa630 (42544) - @P0 IMAD.WIDE R26, R26, R27, c[0x0][0x170] ;
 Instr 2660 @ 0xa640 (42560) - PRMT R7, R50, 0x5410, R53 ;
 Instr 2661 @ 0xa650 (42576) - FSETP.GT.AND P2, PT, R46, c[0x0][0x220], PT ;
 Instr 2662 @ 0xa660 (42592) - ISETP.GE.AND P3, PT, R20, RZ, PT ;
 Instr 2663 @ 0xa670 (42608) - @P4 IMAD.MOV.U32 R21, RZ, RZ, 0x2 ;
 Instr 2664 @ 0xa680 (42624) - FSEL R46, R46, c[0x0][0x220], !P2 ;
 Instr 2665 @ 0xa690 (42640) - F2F.F16.F32 R18, R18 ;
 Instr 2666 @ 0xa6a0 (42656) - @P0 STG.E.128.SYS [R26], R4 ;
 Instr 2667 @ 0xa6b0 (42672) - @P4 IMAD.WIDE R24, R16, R21, c[0x0][0x170] ;
 Instr 2668 @ 0xa6c0 (42688) - ISETP.GE.AND P2, PT, R19, RZ, PT ;
 Instr 2669 @ 0xa6d0 (42704) - F2F.F16.F32 R21, R46 ;
 Instr 2670 @ 0xa6e0 (42720) - @P3 IMAD.MOV.U32 R23, RZ, RZ, 0x2 ;
 Instr 2671 @ 0xa6f0 (42736) - @P3 IMAD.WIDE R22, R20, R23, c[0x0][0x170] ;
 Instr 2672 @ 0xa700 (42752) - @P2 IMAD.MOV.U32 R16, RZ, RZ, 0x2 ;
 Instr 2673 @ 0xa710 (42768) - PRMT R4, R38, 0x5410, R37 ;
 Instr 2674 @ 0xa720 (42784) - PRMT R5, R36, 0x5410, R39 ;
 Instr 2675 @ 0xa730 (42800) - PRMT R6, R15, 0x5410, R48 ;
 Instr 2676 @ 0xa740 (42816) - PRMT R7, R14, 0x5410, R49 ;
 Instr 2677 @ 0xa750 (42832) - @P2 IMAD.WIDE R14, R19, R16, c[0x0][0x170] ;
 Instr 2678 @ 0xa760 (42848) - @P4 STG.E.128.SYS [R24], R4 ;
 Instr 2679 @ 0xa770 (42864) - PRMT R4, R32, 0x5410, R35 ;
 Instr 2680 @ 0xa780 (42880) - PRMT R5, R34, 0x5410, R33 ;
 Instr 2681 @ 0xa790 (42896) - PRMT R6, R8, 0x5410, R9 ;
 Instr 2682 @ 0xa7a0 (42912) - PRMT R7, R54, 0x5410, R11 ;
 Instr 2683 @ 0xa7b0 (42928) - @P3 STG.E.128.SYS [R22], R4 ;
 Instr 2684 @ 0xa7c0 (42944) - PRMT R4, R13, 0x5410, R30 ;
 Instr 2685 @ 0xa7d0 (42960) - PRMT R5, R12, 0x5410, R31 ;
 Instr 2686 @ 0xa7e0 (42976) - PRMT R6, R10, 0x5410, R17 ;
 Instr 2687 @ 0xa7f0 (42992) - PRMT R7, R18, 0x5410, R21 ;
 Instr 2688 @ 0xa800 (43008) - @P2 STG.E.128.SYS [R14], R4 ;
Basic block id 80 - num instructions 2
 Instr 2689 @ 0xa810 (43024) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2690 @ 0xa820 (43040) - @!P6 BRA 0xb050 ;
Basic block id 81 - num instructions 5
 Instr 2691 @ 0xa830 (43056) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
 Instr 2692 @ 0xa840 (43072) - USHF.L.U32 UR17, UR17, 0x7, URZ ;
 Instr 2693 @ 0xa850 (43088) - LEA R171, R171, R0, 0x7 ;
 Instr 2694 @ 0xa860 (43104) - USHF.R.S32.HI UR4, URZ, 0x1f, UR17 ;
 Instr 2695 @ 0xa870 (43120) - @!P0 BRA 0xae40 ;
Basic block id 82 - num instructions 46
 Instr 2696 @ 0xa880 (43136) - UMOV UR14, UR18 ;
 Instr 2697 @ 0xa890 (43152) - IMAD.SHL.U32 R50, R171, 0x10, RZ ;
 Instr 2698 @ 0xa8a0 (43168) - UMOV UR15, UR7 ;
 Instr 2699 @ 0xa8b0 (43184) - UIMAD UR13, UR4, 0x1a0, URZ ;
 Instr 2700 @ 0xa8c0 (43200) - UIMAD UR12, UR4, 0x1b0, URZ ;
 Instr 2701 @ 0xa8d0 (43216) - SHF.R.S32.HI R9, RZ, 0x1f, R50 ;
 Instr 2702 @ 0xa8e0 (43232) - UIMAD UR11, UR4, 0x1c0, URZ ;
 Instr 2703 @ 0xa8f0 (43248) - UIMAD.WIDE.U32 UR32, UR17, 0x1a0, UR14 ;
 Instr 2704 @ 0xa900 (43264) - IMAD.U32 R14, RZ, RZ, UR13 ;
 Instr 2705 @ 0xa910 (43280) - UIMAD.WIDE.U32 UR30, UR17, 0x1b0, UR14 ;
 Instr 2706 @ 0xa920 (43296) - IMAD.U32 R12, RZ, RZ, UR12 ;
 Instr 2707 @ 0xa930 (43312) - UIMAD.WIDE.U32 UR28, UR17, 0x1c0, UR14 ;
 Instr 2708 @ 0xa940 (43328) - IMAD.U32 R10, RZ, RZ, UR11 ;
 Instr 2709 @ 0xa950 (43344) - UIMAD UR10, UR4, 0x1d0, URZ ;
 Instr 2710 @ 0xa960 (43360) - IADD3 R46, P3, R50.reuse, UR32, RZ ;
 Instr 2711 @ 0xa970 (43376) - UIMAD UR9, UR4, 0x1e0, URZ ;
 Instr 2712 @ 0xa980 (43392) - IADD3 R44, P2, R50.reuse, UR30, RZ ;
 Instr 2713 @ 0xa990 (43408) - UIMAD UR8, UR4, 0x1f0, URZ ;
 Instr 2714 @ 0xa9a0 (43424) - IADD3 R42, P0, R50.reuse, UR28, RZ ;
 Instr 2715 @ 0xa9b0 (43440) - UIMAD UR6, UR4, 0x190, URZ ;
 Instr 2716 @ 0xa9c0 (43456) - IADD3.X R47, R9.reuse, UR33, R14, P3, !PT ;
 Instr 2717 @ 0xa9d0 (43472) - UIMAD UR5, UR4, 0x180, URZ ;
 Instr 2718 @ 0xa9e0 (43488) - IADD3.X R45, R9, UR31, R12, P2, !PT ;
 Instr 2719 @ 0xa9f0 (43504) - UIMAD.WIDE.U32 UR26, UR17, 0x1d0, UR14 ;
 Instr 2720 @ 0xaa00 (43520) - IMAD.U32 R8, RZ, RZ, UR10 ;
 Instr 2721 @ 0xaa10 (43536) - UIMAD.WIDE.U32 UR24, UR17, 0x1e0, UR14 ;
 Instr 2722 @ 0xaa20 (43552) - IMAD.U32 R7, RZ, RZ, UR9 ;
 Instr 2723 @ 0xaa30 (43568) - UIMAD.WIDE.U32 UR22, UR17, 0x1f0, UR14 ;
 Instr 2724 @ 0xaa40 (43584) - IMAD.U32 R6, RZ, RZ, UR8 ;
 Instr 2725 @ 0xaa50 (43600) - UIMAD.WIDE.U32 UR20, UR17, 0x190, UR14 ;
 Instr 2726 @ 0xaa60 (43616) - IMAD.U32 R5, RZ, RZ, UR6 ;
 Instr 2727 @ 0xaa70 (43632) - UIMAD.WIDE.U32 UR14, UR17, 0x180, UR14 ;
 Instr 2728 @ 0xaa80 (43648) - IMAD.U32 R4, RZ, RZ, UR5 ;
 Instr 2729 @ 0xaa90 (43664) - IADD3 R40, P5, R50.reuse, UR26, RZ ;
 Instr 2730 @ 0xaaa0 (43680) - UMOV UR5, URZ ;
 Instr 2731 @ 0xaab0 (43696) - IADD3 R38, P4, R50.reuse, UR24, RZ ;
 Instr 2732 @ 0xaac0 (43712) - ULDC.64 UR10, c[0x0][0x2a8] ;
 Instr 2733 @ 0xaad0 (43728) - IADD3 R36, P3, R50, UR22, RZ ;
 Instr 2734 @ 0xaae0 (43744) - IADD3 R48, P2, R50.reuse, UR20, RZ ;
 Instr 2735 @ 0xaaf0 (43760) - IADD3.X R43, R9.reuse, UR29, R10, P0, !PT ;
 Instr 2736 @ 0xab00 (43776) - IADD3 R50, P0, R50, UR14, RZ ;
 Instr 2737 @ 0xab10 (43792) - IADD3.X R41, R9.reuse, UR27, R8, P5, !PT ;
 Instr 2738 @ 0xab20 (43808) - IADD3.X R39, R9.reuse, UR25, R7, P4, !PT ;
 Instr 2739 @ 0xab30 (43824) - IADD3.X R37, R9, UR23, R6, P3, !PT ;
 Instr 2740 @ 0xab40 (43840) - IADD3.X R49, R9.reuse, UR21, R5, P2, !PT ;
 Instr 2741 @ 0xab50 (43856) - IADD3.X R51, R9, UR15, R4, P0, !PT ;
Basic block id 83 - num instructions 46
 Instr 2742 @ 0xab60 (43872) - LDG.E.128.STRONG.GPU R32, [R50.64+UR10] ;
 Instr 2743 @ 0xab70 (43888) - LDG.E.128.STRONG.GPU R28, [R48.64+UR10] ;
 Instr 2744 @ 0xab80 (43904) - LDG.E.128.STRONG.GPU R24, [R46.64+UR10] ;
 Instr 2745 @ 0xab90 (43920) - LDG.E.128.STRONG.GPU R20, [R44.64+UR10] ;
 Instr 2746 @ 0xaba0 (43936) - LDG.E.128.STRONG.GPU R16, [R42.64+UR10] ;
 Instr 2747 @ 0xabb0 (43952) - LDG.E.128.STRONG.GPU R12, [R40.64+UR10] ;
 Instr 2748 @ 0xabc0 (43968) - LDG.E.128.STRONG.GPU R8, [R38.64+UR10] ;
 Instr 2749 @ 0xabd0 (43984) - LDG.E.128.STRONG.GPU R4, [R36.64+UR10] ;
 Instr 2750 @ 0xabe0 (44000) - UIADD3 UR5, UR5, 0x1, URZ ;
 Instr 2751 @ 0xabf0 (44016) - ULDC.64 UR8, c[0x0][0x2a0] ;
 Instr 2752 @ 0xac00 (44032) - UIADD3 UR10, UP3, UR10, UR8, URZ ;
 Instr 2753 @ 0xac10 (44048) - ISETP.LE.AND P0, PT, R173, UR5, PT ;
 Instr 2754 @ 0xac20 (44064) - UIADD3.X UR11, UR11, UR9, URZ, UP3, !UPT ;
 Instr 2755 @ 0xac30 (44080) - FADD R100, R32, R100 ;
 Instr 2756 @ 0xac40 (44096) - FADD R101, R33, R101 ;
 Instr 2757 @ 0xac50 (44112) - FADD R102, R34, R102 ;
 Instr 2758 @ 0xac60 (44128) - FADD R103, R35, R103 ;
 Instr 2759 @ 0xac70 (44144) - FADD R104, R28, R104 ;
 Instr 2760 @ 0xac80 (44160) - FADD R105, R29, R105 ;
 Instr 2761 @ 0xac90 (44176) - FADD R106, R30, R106 ;
 Instr 2762 @ 0xaca0 (44192) - FADD R107, R31, R107 ;
 Instr 2763 @ 0xacb0 (44208) - FADD R108, R24, R108 ;
 Instr 2764 @ 0xacc0 (44224) - FADD R109, R25, R109 ;
 Instr 2765 @ 0xacd0 (44240) - FADD R110, R26, R110 ;
 Instr 2766 @ 0xace0 (44256) - FADD R111, R27, R111 ;
 Instr 2767 @ 0xacf0 (44272) - FADD R112, R20, R112 ;
 Instr 2768 @ 0xad00 (44288) - FADD R113, R21, R113 ;
 Instr 2769 @ 0xad10 (44304) - FADD R114, R22, R114 ;
 Instr 2770 @ 0xad20 (44320) - FADD R115, R23, R115 ;
 Instr 2771 @ 0xad30 (44336) - FADD R116, R16, R116 ;
 Instr 2772 @ 0xad40 (44352) - FADD R117, R17, R117 ;
 Instr 2773 @ 0xad50 (44368) - FADD R118, R18, R118 ;
 Instr 2774 @ 0xad60 (44384) - FADD R119, R19, R119 ;
 Instr 2775 @ 0xad70 (44400) - FADD R120, R12, R120 ;
 Instr 2776 @ 0xad80 (44416) - FADD R121, R13, R121 ;
 Instr 2777 @ 0xad90 (44432) - FADD R122, R14, R122 ;
 Instr 2778 @ 0xada0 (44448) - FADD R123, R15, R123 ;
 Instr 2779 @ 0xadb0 (44464) - FADD R124, R8, R124 ;
 Instr 2780 @ 0xadc0 (44480) - FADD R125, R9, R125 ;
 Instr 2781 @ 0xadd0 (44496) - FADD R126, R10, R126 ;
 Instr 2782 @ 0xade0 (44512) - FADD R127, R11, R127 ;
 Instr 2783 @ 0xadf0 (44528) - FADD R128, R4, R128 ;
 Instr 2784 @ 0xae00 (44544) - FADD R129, R5, R129 ;
 Instr 2785 @ 0xae10 (44560) - FADD R130, R6, R130 ;
 Instr 2786 @ 0xae20 (44576) - FADD R131, R7, R131 ;
 Instr 2787 @ 0xae30 (44592) - @!P0 BRA 0xab60 ;
Basic block id 84 - num instructions 1
 Instr 2788 @ 0xae40 (44608) - @P1 BRA 0xb050 ;
Basic block id 85 - num instructions 32
 Instr 2789 @ 0xae50 (44624) - UMOV UR6, UR18 ;
 Instr 2790 @ 0xae60 (44640) - UIMAD UR5, UR4, 0x180, URZ ;
 Instr 2791 @ 0xae70 (44656) - UIMAD.WIDE.U32 UR6, UR17, 0x180, UR6 ;
 Instr 2792 @ 0xae80 (44672) - USHF.L.U64.HI UR9, UR17, 0x4, UR4 ;
 Instr 2793 @ 0xae90 (44688) - UIADD3 UR5, UR7, UR5, URZ ;
 Instr 2794 @ 0xaea0 (44704) - IMAD.U32 R5, RZ, RZ, UR7 ;
 Instr 2795 @ 0xaeb0 (44720) - USHF.L.U32 UR8, UR17, 0x4, URZ ;
 Instr 2796 @ 0xaec0 (44736) - IMAD.U32 R4, RZ, RZ, UR6 ;
 Instr 2797 @ 0xaed0 (44752) - USHF.L.U64.HI UR6, UR17, 0x5, UR4 ;
 Instr 2798 @ 0xaee0 (44768) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2799 @ 0xaef0 (44784) - USHF.L.U32 UR5, UR17, 0x5, URZ ;
 Instr 2800 @ 0xaf00 (44800) - IMAD.WIDE R4, R171, 0x10, R4 ;
 Instr 2801 @ 0xaf10 (44816) - IADD3 R4, P0, R4, c[0x0][0x2a8], RZ ;
 Instr 2802 @ 0xaf20 (44832) - IADD3.X R5, R5, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 2803 @ 0xaf30 (44848) - IADD3 R10, P0, R4, UR5, RZ ;
 Instr 2804 @ 0xaf40 (44864) - IADD3.X R11, R5, UR6, RZ, P0, !PT ;
 Instr 2805 @ 0xaf50 (44880) - STG.E.128.SYS [R4], R100 ;
 Instr 2806 @ 0xaf60 (44896) - IADD3 R8, P0, R10, UR5, RZ ;
 Instr 2807 @ 0xaf70 (44912) - STG.E.128.SYS [R4.64+UR8], R104 ;
 Instr 2808 @ 0xaf80 (44928) - IADD3.X R9, R11, UR6, RZ, P0, !PT ;
 Instr 2809 @ 0xaf90 (44944) - IADD3 R6, P0, R8, UR5, RZ ;
 Instr 2810 @ 0xafa0 (44960) - STG.E.128.SYS [R10], R108 ;
 Instr 2811 @ 0xafb0 (44976) - IADD3.X R7, R9, UR6, RZ, P0, !PT ;
 Instr 2812 @ 0xafc0 (44992) - IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 2813 @ 0xafd0 (45008) - IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 2814 @ 0xafe0 (45024) - STG.E.128.SYS [R4.64+UR8], R112 ;
 Instr 2815 @ 0xaff0 (45040) - STG.E.128.SYS [R8], R116 ;
 Instr 2816 @ 0xb000 (45056) - IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 2817 @ 0xb010 (45072) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 2818 @ 0xb020 (45088) - STG.E.128.SYS [R4.64+UR8], R120 ;
 Instr 2819 @ 0xb030 (45104) - STG.E.128.SYS [R6], R124 ;
 Instr 2820 @ 0xb040 (45120) - STG.E.128.SYS [R6.64+UR8], R128 ;
Basic block id 86 - num instructions 1
 Instr 2821 @ 0xb050 (45136) - @!P1 BRA 0xc6d0 ;
Basic block id 87 - num instructions 359
 Instr 2822 @ 0xb060 (45152) - STS.64 [R3], R100 ;
 Instr 2823 @ 0xb070 (45168) - PLOP3.LUT P1, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 2824 @ 0xb080 (45184) - CS2R R24, SRZ ;
 Instr 2825 @ 0xb090 (45200) - IADD3 R22, R168.reuse, 0x60, RZ ;
 Instr 2826 @ 0xb0a0 (45216) - STS.64 [R3+0x10], R104 ;
 Instr 2827 @ 0xb0b0 (45232) - IADD3 R21, R168.reuse, 0x68, RZ ;
 Instr 2828 @ 0xb0c0 (45248) - CS2R R18, SRZ ;
 Instr 2829 @ 0xb0d0 (45264) - IADD3 R20, R168.reuse, 0x70, RZ ;
 Instr 2830 @ 0xb0e0 (45280) - STS.64 [R3+0x1100], R102 ;
 Instr 2831 @ 0xb0f0 (45296) - IADD3 R168, R168, 0x78, RZ ;
 Instr 2832 @ 0xb100 (45312) - IMAD.MOV.U32 R23, RZ, RZ, RZ ;
 Instr 2833 @ 0xb110 (45328) - ISETP.GE.AND P2, PT, R169, R208, PT ;
 Instr 2834 @ 0xb120 (45344) - STS.64 [R3+0x1110], R106 ;
 Instr 2835 @ 0xb130 (45360) - @P1 IMAD.HI.U32 R13, R21.reuse, c[0x0][0x3d8], RZ ;
 Instr 2836 @ 0xb140 (45376) - PLOP3.LUT P0, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 2837 @ 0xb150 (45392) - HADD2.F32 R33, R164.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2838 @ 0xb160 (45408) - STS.64 [R3+0x40], R108 ;
 Instr 2839 @ 0xb170 (45424) - @P1 IMAD.HI.U32 R12, R168, c[0x0][0x3d8], RZ ;
 Instr 2840 @ 0xb180 (45440) - @P1 SHF.R.U32.HI R13, RZ, c[0x0][0x3dc], R13 ;
 Instr 2841 @ 0xb190 (45456) - CS2R R16, SRZ ;
 Instr 2842 @ 0xb1a0 (45472) - STS.64 [R3+0x50], R112 ;
 Instr 2843 @ 0xb1b0 (45488) - @P1 IMAD.HI.U32 R10, R22.reuse, c[0x0][0x3d8], RZ ;
 Instr 2844 @ 0xb1c0 (45504) - @P1 SHF.R.U32.HI R12, RZ, c[0x0][0x3dc], R12 ;
 Instr 2845 @ 0xb1d0 (45520) - HADD2.F32 R164, R164.H1_H1, -RZ.H0_H0 ;
 Instr 2846 @ 0xb1e0 (45536) - STS.64 [R3+0x1140], R110 ;
 Instr 2847 @ 0xb1f0 (45552) - @P1 IMAD.MOV R8, RZ, RZ, -R13 ;
 Instr 2848 @ 0xb200 (45568) - @P1 SHF.R.U32.HI R10, RZ, c[0x0][0x3dc], R10 ;
 Instr 2849 @ 0xb210 (45584) - @P1 IMAD.MOV R9, RZ, RZ, -R12 ;
 Instr 2850 @ 0xb220 (45600) - STS.64 [R3+0x1150], R114 ;
 Instr 2851 @ 0xb230 (45616) - ISETP.LT.AND P5, PT, R22, c[0x0][0x3c4], !P2 ;
 Instr 2852 @ 0xb240 (45632) - @P1 IMAD R24, R8, c[0x0][0x3c8], R21 ;
 Instr 2853 @ 0xb250 (45648) - ISETP.LT.AND P4, PT, R21, c[0x0][0x3c4], !P2 ;
 Instr 2854 @ 0xb260 (45664) - STS.64 [R3+0x80], R116 ;
 Instr 2855 @ 0xb270 (45680) - @P1 IMAD.MOV R15, RZ, RZ, -R10 ;
 Instr 2856 @ 0xb280 (45696) - ISETP.LT.AND P3, PT, R20, c[0x0][0x3c4], !P2 ;
 Instr 2857 @ 0xb290 (45712) - @P1 IMAD R19, R9, c[0x0][0x3c8], R168 ;
 Instr 2858 @ 0xb2a0 (45728) - STS.64 [R3+0x90], R120 ;
 Instr 2859 @ 0xb2b0 (45744) - @P1 IMAD R25, R15, c[0x0][0x3c8], R22 ;
 Instr 2860 @ 0xb2c0 (45760) - ISETP.LT.AND P2, PT, R168, c[0x0][0x3c4], !P2 ;
 Instr 2861 @ 0xb2d0 (45776) - @P1 IMAD.MOV.U32 R22, RZ, RZ, R10 ;
 Instr 2862 @ 0xb2e0 (45792) - STS.64 [R3+0x1180], R118 ;
 Instr 2863 @ 0xb2f0 (45808) - @P1 IMAD.MOV.U32 R21, RZ, RZ, R13 ;
 Instr 2864 @ 0xb300 (45824) - HADD2.F32 R35, R165.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2865 @ 0xb310 (45840) - @P0 IMAD.HI.U32 R15, R25, c[0x0][0x3e0], RZ ;
 Instr 2866 @ 0xb320 (45856) - STS.64 [R3+0x1190], R122 ;
 Instr 2867 @ 0xb330 (45872) - HADD2.F32 R165, R165.H1_H1, -RZ.H0_H0 ;
 Instr 2868 @ 0xb340 (45888) - @P0 IMAD.HI.U32 R14, R24, c[0x0][0x3e0], RZ ;
 Instr 2869 @ 0xb350 (45904) - STS.64 [R3+0xc0], R124 ;
 Instr 2870 @ 0xb360 (45920) - @P0 SHF.R.U32.HI R15, RZ, c[0x0][0x3e4], R15 ;
 Instr 2871 @ 0xb370 (45936) - @P0 IMAD.HI.U32 R26, R19, c[0x0][0x3e0], RZ ;
 Instr 2872 @ 0xb380 (45952) - STS.64 [R3+0xd0], R128 ;
 Instr 2873 @ 0xb390 (45968) - @P0 SHF.R.U32.HI R14, RZ, c[0x0][0x3e4], R14 ;
 Instr 2874 @ 0xb3a0 (45984) - @P0 IMAD.MOV R32, RZ, RZ, -R15 ;
 Instr 2875 @ 0xb3b0 (46000) - STS.64 [R3+0x11c0], R126 ;
 Instr 2876 @ 0xb3c0 (46016) - @P0 SHF.R.U32.HI R26, RZ, c[0x0][0x3e4], R26 ;
 Instr 2877 @ 0xb3d0 (46032) - @P0 IMAD.MOV R27, RZ, RZ, -R14 ;
 Instr 2878 @ 0xb3e0 (46048) - STS.64 [R3+0x11d0], R130 ;
 Instr 2879 @ 0xb3f0 (46064) - @P1 IMAD.MOV.U32 R168, RZ, RZ, R12 ;
 Instr 2880 @ 0xb400 (46080) - @P0 IMAD R18, R32, c[0x0][0x3cc], R25 ;
 Instr 2881 @ 0xb410 (46096) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 2882 @ 0xb420 (46112) - @P0 IMAD R17, R27, c[0x0][0x3cc], R24 ;
 Instr 2883 @ 0xb430 (46128) - @P0 IMAD.MOV.U32 R25, RZ, RZ, R15 ;
 Instr 2884 @ 0xb440 (46144) - @P0 IMAD.MOV.U32 R24, RZ, RZ, R14 ;
 Instr 2885 @ 0xb450 (46160) - @P1 IMAD.HI.U32 R3, R20, c[0x0][0x3d8], RZ ;
 Instr 2886 @ 0xb460 (46176) - @P0 IMAD.MOV R28, RZ, RZ, -R26 ;
 Instr 2887 @ 0xb470 (46192) - @P1 SHF.R.U32.HI R3, RZ, c[0x0][0x3dc], R3 ;
 Instr 2888 @ 0xb480 (46208) - IMAD R169, R169, c[0x0][0x254], RZ ;
 Instr 2889 @ 0xb490 (46224) - @P1 IMAD.MOV R11, RZ, RZ, -R3 ;
 Instr 2890 @ 0xb4a0 (46240) - IMAD R21, R21, c[0x0][0x244], R169 ;
 Instr 2891 @ 0xb4b0 (46256) - @P1 IMAD R23, R11, c[0x0][0x3c8], R20 ;
 Instr 2892 @ 0xb4c0 (46272) - @P1 IMAD.MOV.U32 R20, RZ, RZ, R3 ;
 Instr 2893 @ 0xb4d0 (46288) - LDS.U.128 R4, [R170.X16] ;
 Instr 2894 @ 0xb4e0 (46304) - @P0 IMAD.HI.U32 R13, R23, c[0x0][0x3e0], RZ ;
 Instr 2895 @ 0xb4f0 (46320) - IMAD.MOV.U32 R3, RZ, RZ, RZ ;
 Instr 2896 @ 0xb500 (46336) - @P0 SHF.R.U32.HI R13, RZ, c[0x0][0x3e4], R13 ;
 Instr 2897 @ 0xb510 (46352) - IMAD R24, R24, c[0x0][0x248], R21 ;
 Instr 2898 @ 0xb520 (46368) - LDS.U.128 R8, [R170.X16+0x1100] ;
 Instr 2899 @ 0xb530 (46384) - @P0 IMAD R3, R28, c[0x0][0x3cc], R19 ;
 Instr 2900 @ 0xb540 (46400) - @P0 IMAD.MOV R30, RZ, RZ, -R13 ;
 Instr 2901 @ 0xb550 (46416) - @P0 IMAD.MOV.U32 R19, RZ, RZ, R26 ;
 Instr 2902 @ 0xb560 (46432) - @P0 IMAD R16, R30, c[0x0][0x3cc], R23 ;
 Instr 2903 @ 0xb570 (46448) - @P0 IMAD.MOV.U32 R23, RZ, RZ, R13 ;
 Instr 2904 @ 0xb580 (46464) - LDS.U.128 R12, [R170.X16+0x2200] ;
 Instr 2905 @ 0xb590 (46480) - FFMA R4, R4, R2.reuse, R33 ;
 Instr 2906 @ 0xb5a0 (46496) - FFMA R5, R5, R2, R164 ;
 Instr 2907 @ 0xb5b0 (46512) - FFMA R6, R6, R2.reuse, R35 ;
 Instr 2908 @ 0xb5c0 (46528) - FSETP.GEU.AND P1, PT, R4, c[0x0][0x210], PT ;
 Instr 2909 @ 0xb5d0 (46544) - FFMA R29, R7, R2.reuse, R165 ;
 Instr 2910 @ 0xb5e0 (46560) - FFMA R8, R8, R2.reuse, R33 ;
 Instr 2911 @ 0xb5f0 (46576) - FSEL R4, R4, c[0x0][0x210], P1 ;
 Instr 2912 @ 0xb600 (46592) - FFMA R9, R9, R2.reuse, R164 ;
 Instr 2913 @ 0xb610 (46608) - FSETP.GEU.AND P1, PT, R5, c[0x0][0x210], PT ;
 Instr 2914 @ 0xb620 (46624) - FFMA R10, R10, R2.reuse, R35 ;
 Instr 2915 @ 0xb630 (46640) - FSETP.GT.AND P0, PT, R4, c[0x0][0x220], PT ;
 Instr 2916 @ 0xb640 (46656) - FFMA R11, R11, R2, R165 ;
 Instr 2917 @ 0xb650 (46672) - FSEL R5, R5, c[0x0][0x210], P1 ;
 Instr 2918 @ 0xb660 (46688) - FSEL R27, R4, c[0x0][0x220], !P0 ;
 Instr 2919 @ 0xb670 (46704) - FSETP.GEU.AND P1, PT, R8, c[0x0][0x210], PT ;
 Instr 2920 @ 0xb680 (46720) - FFMA R12, R12, R2.reuse, R33 ;
 Instr 2921 @ 0xb690 (46736) - FSETP.GEU.AND P0, PT, R9, c[0x0][0x210], PT ;
 Instr 2922 @ 0xb6a0 (46752) - FFMA R13, R13, R2.reuse, R164 ;
 Instr 2923 @ 0xb6b0 (46768) - FSEL R30, R8, c[0x0][0x210], P1 ;
 Instr 2924 @ 0xb6c0 (46784) - FFMA R14, R14, R2.reuse, R35 ;
 Instr 2925 @ 0xb6d0 (46800) - FSEL R31, R9, c[0x0][0x210], P0 ;
 Instr 2926 @ 0xb6e0 (46816) - FFMA R37, R15, R2, R165 ;
 Instr 2927 @ 0xb6f0 (46832) - FSETP.GEU.AND P1, PT, R6, c[0x0][0x210], PT ;
 Instr 2928 @ 0xb700 (46848) - F2F.F16.F32 R27, R27 ;
 Instr 2929 @ 0xb710 (46864) - FSETP.GT.AND P0, PT, R5, c[0x0][0x220], PT ;
 Instr 2930 @ 0xb720 (46880) - FSEL R28, R6, c[0x0][0x210], P1 ;
 Instr 2931 @ 0xb730 (46896) - FSEL R26, R5, c[0x0][0x220], !P0 ;
 Instr 2932 @ 0xb740 (46912) - LDS.U.128 R4, [R170.X16+0x3300] ;
 Instr 2933 @ 0xb750 (46928) - FSETP.GEU.AND P0, PT, R29.reuse, c[0x0][0x210], PT ;
 Instr 2934 @ 0xb760 (46944) - FSETP.GT.AND P1, PT, R28, c[0x0][0x220], PT ;
 Instr 2935 @ 0xb770 (46960) - F2F.F16.F32 R26, R26 ;
 Instr 2936 @ 0xb780 (46976) - FSEL R29, R29, c[0x0][0x210], P0 ;
 Instr 2937 @ 0xb790 (46992) - FSETP.GT.AND P0, PT, R30, c[0x0][0x220], PT ;
 Instr 2938 @ 0xb7a0 (47008) - FSEL R28, R28, c[0x0][0x220], !P1 ;
 Instr 2939 @ 0xb7b0 (47024) - FSETP.GT.AND P1, PT, R29.reuse, c[0x0][0x220], PT ;
 Instr 2940 @ 0xb7c0 (47040) - FSEL R30, R30, c[0x0][0x220], !P0 ;
 Instr 2941 @ 0xb7d0 (47056) - FSETP.GEU.AND P0, PT, R10, c[0x0][0x210], PT ;
 Instr 2942 @ 0xb7e0 (47072) - F2F.F16.F32 R28, R28 ;
 Instr 2943 @ 0xb7f0 (47088) - FSEL R29, R29, c[0x0][0x220], !P1 ;
 Instr 2944 @ 0xb800 (47104) - FSETP.GT.AND P1, PT, R31, c[0x0][0x220], PT ;
 Instr 2945 @ 0xb810 (47120) - FSEL R32, R10, c[0x0][0x210], P0 ;
 Instr 2946 @ 0xb820 (47136) - FSETP.GEU.AND P0, PT, R11, c[0x0][0x210], PT ;
 Instr 2947 @ 0xb830 (47152) - F2F.F16.F32 R29, R29 ;
 Instr 2948 @ 0xb840 (47168) - FSEL R31, R31, c[0x0][0x220], !P1 ;
 Instr 2949 @ 0xb850 (47184) - FSETP.GT.AND P1, PT, R32, c[0x0][0x220], PT ;
 Instr 2950 @ 0xb860 (47200) - FSEL R39, R11, c[0x0][0x210], P0 ;
 Instr 2951 @ 0xb870 (47216) - FSETP.GEU.AND P0, PT, R12, c[0x0][0x210], PT ;
 Instr 2952 @ 0xb880 (47232) - LDS.U.128 R8, [R170.X16+0x110] ;
 Instr 2953 @ 0xb890 (47248) - FSEL R32, R32, c[0x0][0x220], !P1 ;
 Instr 2954 @ 0xb8a0 (47264) - F2F.F16.F32 R30, R30 ;
 Instr 2955 @ 0xb8b0 (47280) - FSETP.GT.AND P1, PT, R39, c[0x0][0x220], PT ;
 Instr 2956 @ 0xb8c0 (47296) - FSEL R34, R12, c[0x0][0x210], P0 ;
 Instr 2957 @ 0xb8d0 (47312) - FSETP.GEU.AND P0, PT, R13, c[0x0][0x210], PT ;
 Instr 2958 @ 0xb8e0 (47328) - FFMA R36, R4, R2.reuse, R33 ;
 Instr 2959 @ 0xb8f0 (47344) - FSEL R39, R39, c[0x0][0x220], !P1 ;
 Instr 2960 @ 0xb900 (47360) - FFMA R5, R5, R2.reuse, R164 ;
 Instr 2961 @ 0xb910 (47376) - FSETP.GT.AND P1, PT, R34, c[0x0][0x220], PT ;
 Instr 2962 @ 0xb920 (47392) - FFMA R43, R7, R2.reuse, R165 ;
 Instr 2963 @ 0xb930 (47408) - FSEL R12, R13, c[0x0][0x210], P0 ;
 Instr 2964 @ 0xb940 (47424) - FFMA R6, R6, R2, R35 ;
 Instr 2965 @ 0xb950 (47440) - FSEL R34, R34, c[0x0][0x220], !P1 ;
 Instr 2966 @ 0xb960 (47456) - F2F.F16.F32 R33, R39 ;
 Instr 2967 @ 0xb970 (47472) - FSETP.GEU.AND P0, PT, R14, c[0x0][0x210], PT ;
 Instr 2968 @ 0xb980 (47488) - FSETP.GT.AND P1, PT, R12, c[0x0][0x220], PT ;
 Instr 2969 @ 0xb990 (47504) - FSEL R38, R14, c[0x0][0x210], P0 ;
 Instr 2970 @ 0xb9a0 (47520) - FSEL R4, R12, c[0x0][0x220], !P1 ;
 Instr 2971 @ 0xb9b0 (47536) - HADD2.F32 R39, R167.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2972 @ 0xb9c0 (47552) - LDS.U.128 R12, [R170.X16+0x1210] ;
 Instr 2973 @ 0xb9d0 (47568) - FSETP.GEU.AND P0, PT, R37.reuse, c[0x0][0x210], PT ;
 Instr 2974 @ 0xb9e0 (47584) - HADD2.F32 R167, R167.H1_H1, -RZ.H0_H0 ;
 Instr 2975 @ 0xb9f0 (47600) - FSETP.GT.AND P1, PT, R38, c[0x0][0x220], PT ;
 Instr 2976 @ 0xba00 (47616) - F2F.F16.F32 R35, R4 ;
 Instr 2977 @ 0xba10 (47632) - FSEL R37, R37, c[0x0][0x210], P0 ;
 Instr 2978 @ 0xba20 (47648) - FSETP.GEU.AND P0, PT, R36, c[0x0][0x210], PT ;
 Instr 2979 @ 0xba30 (47664) - FSEL R38, R38, c[0x0][0x220], !P1 ;
 Instr 2980 @ 0xba40 (47680) - FSETP.GT.AND P1, PT, R37, c[0x0][0x220], PT ;
 Instr 2981 @ 0xba50 (47696) - F2F.F16.F32 R31, R31 ;
 Instr 2982 @ 0xba60 (47712) - FSEL R7, R36, c[0x0][0x210], P0 ;
 Instr 2983 @ 0xba70 (47728) - FSETP.GEU.AND P0, PT, R5, c[0x0][0x210], PT ;
 Instr 2984 @ 0xba80 (47744) - FFMA R42, R10, R2.reuse, R39 ;
 Instr 2985 @ 0xba90 (47760) - FSEL R36, R37, c[0x0][0x220], !P1 ;
 Instr 2986 @ 0xbaa0 (47776) - FFMA R49, R11, R2, R167 ;
 Instr 2987 @ 0xbab0 (47792) - FSETP.GT.AND P1, PT, R7, c[0x0][0x220], PT ;
 Instr 2988 @ 0xbac0 (47808) - HADD2.F32 R37, R166.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 2989 @ 0xbad0 (47824) - FSEL R5, R5, c[0x0][0x210], P0 ;
 Instr 2990 @ 0xbae0 (47840) - HADD2.F32 R166, R166.H1_H1, -RZ.H0_H0 ;
 Instr 2991 @ 0xbaf0 (47856) - FSETP.GEU.AND P0, PT, R6, c[0x0][0x210], PT ;
 Instr 2992 @ 0xbb00 (47872) - F2F.F16.F32 R32, R32 ;
 Instr 2993 @ 0xbb10 (47888) - FSEL R7, R7, c[0x0][0x220], !P1 ;
 Instr 2994 @ 0xbb20 (47904) - FSETP.GT.AND P1, PT, R5, c[0x0][0x220], PT ;
 Instr 2995 @ 0xbb30 (47920) - FFMA R8, R8, R2.reuse, R37 ;
 Instr 2996 @ 0xbb40 (47936) - FSEL R6, R6, c[0x0][0x210], P0 ;
 Instr 2997 @ 0xbb50 (47952) - FFMA R41, R9, R2, R166 ;
 Instr 2998 @ 0xbb60 (47968) - FSEL R5, R5, c[0x0][0x220], !P1 ;
 Instr 2999 @ 0xbb70 (47984) - F2F.F16.F32 R9, R38 ;
 Instr 3000 @ 0xbb80 (48000) - FSETP.GT.AND P1, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 3001 @ 0xbb90 (48016) - FSETP.GEU.AND P0, PT, R43, c[0x0][0x210], PT ;
 Instr 3002 @ 0xbba0 (48032) - FSEL R4, R6, c[0x0][0x220], !P1 ;
 Instr 3003 @ 0xbbb0 (48048) - FSETP.GEU.AND P1, PT, R41, c[0x0][0x210], PT ;
 Instr 3004 @ 0xbbc0 (48064) - FFMA R6, R12, R2.reuse, R37 ;
 Instr 3005 @ 0xbbd0 (48080) - FSEL R43, R43, c[0x0][0x210], P0 ;
 Instr 3006 @ 0xbbe0 (48096) - FFMA R48, R13, R2, R166 ;
 Instr 3007 @ 0xbbf0 (48112) - FSEL R41, R41, c[0x0][0x210], P1 ;
 Instr 3008 @ 0xbc00 (48128) - F2F.F16.F32 R12, R7 ;
 Instr 3009 @ 0xbc10 (48144) - FSETP.GEU.AND P0, PT, R8, c[0x0][0x210], PT ;
 Instr 3010 @ 0xbc20 (48160) - IMAD R38, R168, c[0x0][0x244], R169 ;
 Instr 3011 @ 0xbc30 (48176) - FSETP.GT.AND P1, PT, R41, c[0x0][0x220], PT ;
 Instr 3012 @ 0xbc40 (48192) - FSEL R40, R8, c[0x0][0x210], P0 ;
 Instr 3013 @ 0xbc50 (48208) - IMAD R38, R19, c[0x0][0x248], R38 ;
 Instr 3014 @ 0xbc60 (48224) - FSEL R41, R41, c[0x0][0x220], !P1 ;
 Instr 3015 @ 0xbc70 (48240) - F2F.F16.F32 R8, R36 ;
 Instr 3016 @ 0xbc80 (48256) - FSETP.GEU.AND P1, PT, R6, c[0x0][0x210], PT ;
 Instr 3017 @ 0xbc90 (48272) - FSETP.GT.AND P0, PT, R43.reuse, c[0x0][0x220], PT ;
 Instr 3018 @ 0xbca0 (48288) - FSEL R6, R6, c[0x0][0x210], P1 ;
 Instr 3019 @ 0xbcb0 (48304) - FSETP.GEU.AND P1, PT, R48, c[0x0][0x210], PT ;
 Instr 3020 @ 0xbcc0 (48320) - IMAD R36, R22, c[0x0][0x244], R169.reuse ;
 Instr 3021 @ 0xbcd0 (48336) - FSEL R43, R43, c[0x0][0x220], !P0 ;
 Instr 3022 @ 0xbce0 (48352) - IMAD R22, R20, c[0x0][0x244], R169 ;
 Instr 3023 @ 0xbcf0 (48368) - FSETP.GT.AND P0, PT, R40, c[0x0][0x220], PT ;
 Instr 3024 @ 0xbd00 (48384) - F2F.F16.F32 R13, R5 ;
 Instr 3025 @ 0xbd10 (48400) - FSEL R48, R48, c[0x0][0x210], P1 ;
 Instr 3026 @ 0xbd20 (48416) - IMAD R25, R25, c[0x0][0x248], R36 ;
 Instr 3027 @ 0xbd30 (48432) - FSETP.GT.AND P1, PT, R6, c[0x0][0x220], PT ;
 Instr 3028 @ 0xbd40 (48448) - IMAD.MOV.U32 R36, RZ, RZ, RZ ;
 Instr 3029 @ 0xbd50 (48464) - FSEL R40, R40, c[0x0][0x220], !P0 ;
 Instr 3030 @ 0xbd60 (48480) - IMAD R23, R23, c[0x0][0x248], R22 ;
 Instr 3031 @ 0xbd70 (48496) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 3032 @ 0xbd80 (48512) - F2F.F16.F32 R20, R4 ;
 Instr 3033 @ 0xbd90 (48528) - FSEL R10, R6, c[0x0][0x220], !P1 ;
 Instr 3034 @ 0xbda0 (48544) - FSETP.GEU.AND P1, PT, R42.reuse, c[0x0][0x210], PT ;
 Instr 3035 @ 0xbdb0 (48560) - FSEL R42, R42, c[0x0][0x210], P1 ;
 Instr 3036 @ 0xbdc0 (48576) - LDS.U.128 R4, [R170.X16+0x2310] ;
 Instr 3037 @ 0xbdd0 (48592) - FSETP.GEU.AND P1, PT, R49.reuse, c[0x0][0x210], PT ;
 Instr 3038 @ 0xbde0 (48608) - F2F.F16.F32 R21, R40 ;
 Instr 3039 @ 0xbdf0 (48624) - @P0 IMAD.HI.U32 R47, R18, c[0x0][0x3e8], RZ ;
 Instr 3040 @ 0xbe00 (48640) - PRMT R12, R12, 0x5410, R13 ;
 Instr 3041 @ 0xbe10 (48656) - FSEL R49, R49, c[0x0][0x210], P1 ;
 Instr 3042 @ 0xbe20 (48672) - @P0 IMAD.HI.U32 R44, R17, c[0x0][0x3e8], RZ ;
 Instr 3043 @ 0xbe30 (48688) - @P0 SHF.R.U32.HI R47, RZ, c[0x0][0x3ec], R47 ;
 Instr 3044 @ 0xbe40 (48704) - LDS.U.128 R168, [R170.X16+0x3410] ;
 Instr 3045 @ 0xbe50 (48720) - FSETP.GT.AND P1, PT, R42, c[0x0][0x220], PT ;
 Instr 3046 @ 0xbe60 (48736) - @P0 IMAD.HI.U32 R46, R16, c[0x0][0x3e8], RZ ;
 Instr 3047 @ 0xbe70 (48752) - @P0 SHF.R.U32.HI R44, RZ, c[0x0][0x3ec], R44 ;
 Instr 3048 @ 0xbe80 (48768) - F2F.F16.F32 R11, R43 ;
 Instr 3049 @ 0xbe90 (48784) - FSEL R19, R42, c[0x0][0x220], !P1 ;
 Instr 3050 @ 0xbea0 (48800) - @P0 IMAD.MOV R45, RZ, RZ, -R47 ;
 Instr 3051 @ 0xbeb0 (48816) - @P0 SHF.R.U32.HI R42, RZ, c[0x0][0x3ec], R46 ;
 Instr 3052 @ 0xbec0 (48832) - @P0 IMAD.HI.U32 R40, R3, c[0x0][0x3e8], RZ ;
 Instr 3053 @ 0xbed0 (48848) - FSETP.GT.AND P1, PT, R49, c[0x0][0x220], PT ;
 Instr 3054 @ 0xbee0 (48864) - @P0 IMAD R36, R45, c[0x0][0x1b4], R18 ;
 Instr 3055 @ 0xbef0 (48880) - @P0 SHF.R.U32.HI R40, RZ, c[0x0][0x3ec], R40 ;
 Instr 3056 @ 0xbf00 (48896) - IMAD.MOV.U32 R45, RZ, RZ, RZ ;
 Instr 3057 @ 0xbf10 (48912) - FSEL R49, R49, c[0x0][0x220], !P1 ;
 Instr 3058 @ 0xbf20 (48928) - @P0 IMAD.MOV R46, RZ, RZ, -R44 ;
 Instr 3059 @ 0xbf30 (48944) - FSETP.GT.AND P1, PT, R48, c[0x0][0x220], PT ;
 Instr 3060 @ 0xbf40 (48960) - @P0 IMAD.MOV.U32 R18, RZ, RZ, R47 ;
 Instr 3061 @ 0xbf50 (48976) - F2F.F16.F32 R22, R41 ;
 Instr 3062 @ 0xbf60 (48992) - @P0 IMAD R45, R46, c[0x0][0x1b4], R17 ;
 Instr 3063 @ 0xbf70 (49008) - PRMT R13, R20, 0x5410, R11 ;
 Instr 3064 @ 0xbf80 (49024) - FFMA R46, R14, R2, R39 ;
 Instr 3065 @ 0xbf90 (49040) - FFMA R47, R15, R2, R167 ;
 Instr 3066 @ 0xbfa0 (49056) - FSEL R15, R48, c[0x0][0x220], !P1 ;
 Instr 3067 @ 0xbfb0 (49072) - IMAD.MOV.U32 R43, RZ, RZ, RZ ;
 Instr 3068 @ 0xbfc0 (49088) - FSETP.GEU.AND P1, PT, R46.reuse, c[0x0][0x210], PT ;
 Instr 3069 @ 0xbfd0 (49104) - @P0 IMAD.MOV R51, RZ, RZ, -R42 ;
 Instr 3070 @ 0xbfe0 (49120) - F2F.F16.F32 R19, R19 ;
 Instr 3071 @ 0xbff0 (49136) - IMAD.MOV.U32 R41, RZ, RZ, RZ ;
 Instr 3072 @ 0xc000 (49152) - FSEL R46, R46, c[0x0][0x210], P1 ;
 Instr 3073 @ 0xc010 (49168) - @P0 IMAD.MOV R50, RZ, RZ, -R40 ;
 Instr 3074 @ 0xc020 (49184) - @P0 IMAD R43, R51, c[0x0][0x1b4], R16 ;
 Instr 3075 @ 0xc030 (49200) - FSETP.GT.AND P1, PT, R46, c[0x0][0x220], PT ;
 Instr 3076 @ 0xc040 (49216) - @P0 IMAD R41, R50, c[0x0][0x1b4], R3 ;
 Instr 3077 @ 0xc050 (49232) - F2F.F16.F32 R14, R49 ;
 Instr 3078 @ 0xc060 (49248) - @P0 IMAD.MOV.U32 R17, RZ, RZ, R44 ;
 Instr 3079 @ 0xc070 (49264) - FSEL R46, R46, c[0x0][0x220], !P1 ;
 Instr 3080 @ 0xc080 (49280) - @P0 IMAD.MOV.U32 R16, RZ, RZ, R42 ;
 Instr 3081 @ 0xc090 (49296) - @P0 IMAD.MOV.U32 R3, RZ, RZ, R40 ;
 Instr 3082 @ 0xc0a0 (49312) - FSETP.GEU.AND P0, PT, R47, c[0x0][0x210], PT ;
 Instr 3083 @ 0xc0b0 (49328) - FFMA R4, R4, R2.reuse, R37 ;
 Instr 3084 @ 0xc0c0 (49344) - F2F.F16.F32 R10, R10 ;
 Instr 3085 @ 0xc0d0 (49360) - FFMA R5, R5, R2.reuse, R166 ;
 Instr 3086 @ 0xc0e0 (49376) - FSEL R47, R47, c[0x0][0x210], P0 ;
 Instr 3087 @ 0xc0f0 (49392) - FFMA R6, R6, R2.reuse, R39 ;
 Instr 3088 @ 0xc100 (49408) - FSETP.GEU.AND P0, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 3089 @ 0xc110 (49424) - FFMA R7, R7, R2.reuse, R167 ;
 Instr 3090 @ 0xc120 (49440) - FSETP.GT.AND P1, PT, R47, c[0x0][0x220], PT ;
 Instr 3091 @ 0xc130 (49456) - IMAD R38, R3, c[0x0][0x24c], R38 ;
 Instr 3092 @ 0xc140 (49472) - FSEL R4, R4, c[0x0][0x210], P0 ;
 Instr 3093 @ 0xc150 (49488) - FFMA R168, R168, R2.reuse, R37 ;
 Instr 3094 @ 0xc160 (49504) - FSETP.GEU.AND P0, PT, R5, c[0x0][0x210], PT ;
 Instr 3095 @ 0xc170 (49520) - IMAD R25, R18, c[0x0][0x24c], R25 ;
 Instr 3096 @ 0xc180 (49536) - FSEL R47, R47, c[0x0][0x220], !P1 ;
 Instr 3097 @ 0xc190 (49552) - IMAD R24, R17, c[0x0][0x24c], R24 ;
 Instr 3098 @ 0xc1a0 (49568) - FSETP.GT.AND P1, PT, R4, c[0x0][0x220], PT ;
 Instr 3099 @ 0xc1b0 (49584) - FFMA R169, R169, R2.reuse, R166 ;
 Instr 3100 @ 0xc1c0 (49600) - FSEL R5, R5, c[0x0][0x210], P0 ;
 Instr 3101 @ 0xc1d0 (49616) - IMAD R25, R36, c[0x0][0x250], R25 ;
 Instr 3102 @ 0xc1e0 (49632) - FSETP.GEU.AND P0, PT, R6, c[0x0][0x210], PT ;
 Instr 3103 @ 0xc1f0 (49648) - FFMA R170, R170, R2.reuse, R39 ;
 Instr 3104 @ 0xc200 (49664) - FSEL R3, R4, c[0x0][0x220], !P1 ;
 Instr 3105 @ 0xc210 (49680) - IMAD R24, R45, c[0x0][0x250], R24 ;
 Instr 3106 @ 0xc220 (49696) - FSETP.GT.AND P1, PT, R5, c[0x0][0x220], PT ;
 Instr 3107 @ 0xc230 (49712) - FFMA R171, R171, R2, R167 ;
 Instr 3108 @ 0xc240 (49728) - FSEL R6, R6, c[0x0][0x210], P0 ;
 Instr 3109 @ 0xc250 (49744) - IMAD R18, R16, c[0x0][0x24c], R23 ;
 Instr 3110 @ 0xc260 (49760) - FSETP.GEU.AND P0, PT, R7, c[0x0][0x210], PT ;
 Instr 3111 @ 0xc270 (49776) - F2F.F16.F32 R15, R15 ;
 Instr 3112 @ 0xc280 (49792) - FSEL R5, R5, c[0x0][0x220], !P1 ;
 Instr 3113 @ 0xc290 (49808) - IMAD R43, R43, c[0x0][0x250], R18 ;
 Instr 3114 @ 0xc2a0 (49824) - FSETP.GT.AND P1, PT, R6, c[0x0][0x220], PT ;
 Instr 3115 @ 0xc2b0 (49840) - IMAD R38, R41, c[0x0][0x250], R38 ;
 Instr 3116 @ 0xc2c0 (49856) - FSEL R7, R7, c[0x0][0x210], P0 ;
 Instr 3117 @ 0xc2d0 (49872) - FSEL R6, R6, c[0x0][0x220], !P1 ;
 Instr 3118 @ 0xc2e0 (49888) - F2F.F16.F32 R17, R46 ;
 Instr 3119 @ 0xc2f0 (49904) - FSETP.GEU.AND P0, PT, R168.reuse, c[0x0][0x210], PT ;
 Instr 3120 @ 0xc300 (49920) - FSETP.GT.AND P1, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 3121 @ 0xc310 (49936) - FSEL R168, R168, c[0x0][0x210], P0 ;
 Instr 3122 @ 0xc320 (49952) - FSEL R36, R7, c[0x0][0x220], !P1 ;
 Instr 3123 @ 0xc330 (49968) - F2F.F16.F32 R16, R47 ;
 Instr 3124 @ 0xc340 (49984) - FSETP.GEU.AND P0, PT, R169, c[0x0][0x210], PT ;
 Instr 3125 @ 0xc350 (50000) - SEL R7, R25, 0xffffffff, P5 ;
 Instr 3126 @ 0xc360 (50016) - FSETP.GEU.AND P1, PT, R170, c[0x0][0x210], PT ;
 Instr 3127 @ 0xc370 (50032) - PRMT R4, R27, 0x5410, R26 ;
 Instr 3128 @ 0xc380 (50048) - F2F.F16.F32 R2, R6 ;
 Instr 3129 @ 0xc390 (50064) - FSEL R169, R169, c[0x0][0x210], P0 ;
 Instr 3130 @ 0xc3a0 (50080) - SEL R26, R24, 0xffffffff, P4 ;
 Instr 3131 @ 0xc3b0 (50096) - ISETP.GE.AND P0, PT, R7, RZ, PT ;
 Instr 3132 @ 0xc3c0 (50112) - FSETP.GEU.AND P4, PT, R171.reuse, c[0x0][0x210], PT ;
 Instr 3133 @ 0xc3d0 (50128) - F2F.F16.F32 R18, R5 ;
 Instr 3134 @ 0xc3e0 (50144) - FSEL R170, R170, c[0x0][0x210], P1 ;
 Instr 3135 @ 0xc3f0 (50160) - FSEL R171, R171, c[0x0][0x210], P4 ;
 Instr 3136 @ 0xc400 (50176) - FSETP.GT.AND P5, PT, R168, c[0x0][0x220], PT ;
 Instr 3137 @ 0xc410 (50192) - FSETP.GT.AND P4, PT, R170, c[0x0][0x220], PT ;
 Instr 3138 @ 0xc420 (50208) - F2F.F16.F32 R34, R34 ;
 Instr 3139 @ 0xc430 (50224) - FSEL R23, R168, c[0x0][0x220], !P5 ;
 Instr 3140 @ 0xc440 (50240) - @P0 IMAD.MOV.U32 R6, RZ, RZ, 0x2 ;
 Instr 3141 @ 0xc450 (50256) - FSEL R170, R170, c[0x0][0x220], !P4 ;
 Instr 3142 @ 0xc460 (50272) - FSETP.GT.AND P5, PT, R169, c[0x0][0x220], PT ;
 Instr 3143 @ 0xc470 (50288) - ISETP.GE.AND P1, PT, R26, RZ, PT ;
 Instr 3144 @ 0xc480 (50304) - F2F.F16.F32 R3, R3 ;
 Instr 3145 @ 0xc490 (50320) - FSETP.GT.AND P4, PT, R171, c[0x0][0x220], PT ;
 Instr 3146 @ 0xc4a0 (50336) - FSEL R24, R169, c[0x0][0x220], !P5 ;
 Instr 3147 @ 0xc4b0 (50352) - FSEL R171, R171, c[0x0][0x220], !P4 ;
 Instr 3148 @ 0xc4c0 (50368) - PRMT R5, R28, 0x5410, R29 ;
 Instr 3149 @ 0xc4d0 (50384) - @P0 IMAD.WIDE R28, R7, R6, c[0x0][0x170] ;
 Instr 3150 @ 0xc4e0 (50400) - SEL R43, R43, 0xffffffff, P3 ;
 Instr 3151 @ 0xc4f0 (50416) - F2F.F16.F32 R25, R36 ;
 Instr 3152 @ 0xc500 (50432) - SEL R38, R38, 0xffffffff, P2 ;
 Instr 3153 @ 0xc510 (50448) - @P1 IMAD.MOV.U32 R27, RZ, RZ, 0x2 ;
 Instr 3154 @ 0xc520 (50464) - PRMT R6, R21, 0x5410, R22 ;
 Instr 3155 @ 0xc530 (50480) - PRMT R7, R19, 0x5410, R14 ;
 Instr 3156 @ 0xc540 (50496) - @P1 IMAD.WIDE R26, R26, R27, c[0x0][0x170] ;
 Instr 3157 @ 0xc550 (50512) - ISETP.GE.AND P3, PT, R43, RZ, PT ;
 Instr 3158 @ 0xc560 (50528) - F2F.F16.F32 R23, R23 ;
 Instr 3159 @ 0xc570 (50544) - ISETP.GE.AND P2, PT, R38, RZ, PT ;
 Instr 3160 @ 0xc580 (50560) - @P0 STG.E.128.SYS [R28], R4 ;
 Instr 3161 @ 0xc590 (50576) - F2F.F16.F32 R24, R24 ;
 Instr 3162 @ 0xc5a0 (50592) - @P3 IMAD.MOV.U32 R14, RZ, RZ, 0x2 ;
 Instr 3163 @ 0xc5b0 (50608) - F2F.F16.F32 R21, R170 ;
 Instr 3164 @ 0xc5c0 (50624) - PRMT R4, R30, 0x5410, R31 ;
 Instr 3165 @ 0xc5d0 (50640) - @P3 IMAD.WIDE R30, R43, R14, c[0x0][0x170] ;
 Instr 3166 @ 0xc5e0 (50656) - F2F.F16.F32 R22, R171 ;
 Instr 3167 @ 0xc5f0 (50672) - PRMT R5, R32, 0x5410, R33 ;
 Instr 3168 @ 0xc600 (50688) - PRMT R6, R10, 0x5410, R15 ;
 Instr 3169 @ 0xc610 (50704) - @P2 IMAD.MOV.U32 R15, RZ, RZ, 0x2 ;
 Instr 3170 @ 0xc620 (50720) - PRMT R7, R17, 0x5410, R16 ;
 Instr 3171 @ 0xc630 (50736) - PRMT R14, R23, 0x5410, R24 ;
 Instr 3172 @ 0xc640 (50752) - @P2 IMAD.WIDE R38, R38, R15, c[0x0][0x170] ;
 Instr 3173 @ 0xc650 (50768) - @P1 STG.E.128.SYS [R26], R4 ;
 Instr 3174 @ 0xc660 (50784) - PRMT R15, R21, 0x5410, R22 ;
 Instr 3175 @ 0xc670 (50800) - PRMT R4, R34, 0x5410, R35 ;
 Instr 3176 @ 0xc680 (50816) - PRMT R5, R9, 0x5410, R8 ;
 Instr 3177 @ 0xc690 (50832) - PRMT R6, R3, 0x5410, R18 ;
 Instr 3178 @ 0xc6a0 (50848) - PRMT R7, R2, 0x5410, R25 ;
 Instr 3179 @ 0xc6b0 (50864) - @P3 STG.E.128.SYS [R30], R4 ;
 Instr 3180 @ 0xc6c0 (50880) - @P2 STG.E.128.SYS [R38], R12 ;
Basic block id 88 - num instructions 2
 Instr 3181 @ 0xc6d0 (50896) - ISETP.NE.AND P0, PT, RZ, UR16, PT ;
 Instr 3182 @ 0xc6e0 (50912) - @P0 BRA 0x15f30 ;
Basic block id 89 - num instructions 5
 Instr 3183 @ 0xc6f0 (50928) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 3184 @ 0xc700 (50944) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 3185 @ 0xc710 (50960) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3186 @ 0xc720 (50976) - BSSY B0, 0xc860 ;
 Instr 3187 @ 0xc730 (50992) - @P0 BRA 0xc850 ;
Basic block id 90 - num instructions 5
 Instr 3188 @ 0xc740 (51008) - MEMBAR.SC.GPU ;
 Instr 3189 @ 0xc750 (51024) - ISETP.NE.AND P1, PT, R172, RZ, PT ;
 Instr 3190 @ 0xc760 (51040) - ERRBAR;
 Instr 3191 @ 0xc770 (51056) - CCTL.IVALL ;
 Instr 3192 @ 0xc780 (51072) - @P1 BRA 0xc7f0 ;
Basic block id 91 - num instructions 6
 Instr 3193 @ 0xc790 (51088) - S2R R0, SR_LANEID ;
 Instr 3194 @ 0xc7a0 (51104) - VOTEU.ANY UR5, UPT, PT ;
 Instr 3195 @ 0xc7b0 (51120) - UFLO.U32 UR4, UR5 ;
 Instr 3196 @ 0xc7c0 (51136) - POPC R3, UR5 ;
 Instr 3197 @ 0xc7d0 (51152) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 3198 @ 0xc7e0 (51168) - @P0 RED.E.ADD.STRONG.GPU [R176], R3 ;
Basic block id 92 - num instructions 6
 Instr 3199 @ 0xc7f0 (51184) - S2R R0, SR_LANEID ;
 Instr 3200 @ 0xc800 (51200) - VOTEU.ANY UR5, UPT, PT ;
 Instr 3201 @ 0xc810 (51216) - UFLO.U32 UR4, UR5 ;
 Instr 3202 @ 0xc820 (51232) - POPC R3, UR5 ;
 Instr 3203 @ 0xc830 (51248) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 3204 @ 0xc840 (51264) - @P0 RED.E.ADD.STRONG.GPU [R174], R3 ;
Basic block id 93 - num instructions 2
 Instr 3205 @ 0xc850 (51280) - BSYNC B0 ;
 Instr 3206 @ 0xc860 (51296) - BRA 0x15f30 ;
Basic block id 94 - num instructions 7
 Instr 3207 @ 0xc870 (51312) - ISETP.NE.AND P0, PT, R133, 0x1, PT ;
 Instr 3208 @ 0xc880 (51328) - UMOV UR10, 0x1 ;
 Instr 3209 @ 0xc890 (51344) - MOV R175, RZ ;
 Instr 3210 @ 0xc8a0 (51360) - UMOV UR7, URZ ;
 Instr 3211 @ 0xc8b0 (51376) - CS2R R178, SRZ ;
 Instr 3212 @ 0xc8c0 (51392) - CS2R R176, SRZ ;
 Instr 3213 @ 0xc8d0 (51408) - @!P0 BRA 0xced0 ;
Basic block id 95 - num instructions 5
 Instr 3214 @ 0xc8e0 (51424) - IMAD.MOV.U32 R134, RZ, RZ, 0x2 ;
 Instr 3215 @ 0xc8f0 (51440) - ISETP.NE.AND P1, PT, R133, c[0x0][0x294], PT ;
 Instr 3216 @ 0xc900 (51456) - S2UR UR7, SR_CTAID.Z ;
 Instr 3217 @ 0xc910 (51472) - ISETP.EQ.AND P0, PT, R134, c[0x0][0x298], PT ;
 Instr 3218 @ 0xc920 (51488) - @!P1 BRA P0, 0xced0 ;
Basic block id 96 - num instructions 6
 Instr 3219 @ 0xc930 (51504) - MOV R133, 0x1 ;
 Instr 3220 @ 0xc940 (51520) - IMAD.MOV.U32 R134, RZ, RZ, 0x4 ;
 Instr 3221 @ 0xc950 (51536) - ISETP.NE.AND P2, PT, R172, RZ, PT ;
 Instr 3222 @ 0xc960 (51552) - ISETP.EQ.AND P0, PT, R133, c[0x0][0x298], PT ;
 Instr 3223 @ 0xc970 (51568) - IMAD.WIDE R176, R171, R134, c[0x0][0x2c0] ;
 Instr 3224 @ 0xc980 (51584) - @P2 BRA P0, 0xcd10 ;
Basic block id 97 - num instructions 36
 Instr 3225 @ 0xc990 (51600) - IABS R136, c[0x0][0x294] ;
 Instr 3226 @ 0xc9a0 (51616) - IMAD.MOV.U32 R138, RZ, RZ, RZ ;
 Instr 3227 @ 0xc9b0 (51632) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3228 @ 0xc9c0 (51648) - BSSY B0, 0xcc80 ;
 Instr 3229 @ 0xc9d0 (51664) - I2F.RP R140, R136 ;
 Instr 3230 @ 0xc9e0 (51680) - MUFU.RCP R139, R140 ;
 Instr 3231 @ 0xc9f0 (51696) - IADD3 R139, R139, 0xffffffe, RZ ;
 Instr 3232 @ 0xca00 (51712) - F2I.FTZ.U32.TRUNC.NTZ R139, R139 ;
 Instr 3233 @ 0xca10 (51728) - IMAD.MOV R133, RZ, RZ, -R139.reuse ;
 Instr 3234 @ 0xca20 (51744) - IMAD R135, R133, R136, RZ ;
 Instr 3235 @ 0xca30 (51760) - IABS R133, R132 ;
 Instr 3236 @ 0xca40 (51776) - IMAD.HI.U32 R138, R139, R135, R138 ;
 Instr 3237 @ 0xca50 (51792) - IMAD.MOV.U32 R137, RZ, RZ, R133 ;
 Instr 3238 @ 0xca60 (51808) - IMAD.HI.U32 R135, R138, R137, RZ ;
 Instr 3239 @ 0xca70 (51824) - IMAD.MOV R133, RZ, RZ, -R135 ;
 Instr 3240 @ 0xca80 (51840) - IMAD R133, R136, R133, R137 ;
 Instr 3241 @ 0xca90 (51856) - ISETP.GT.U32.AND P0, PT, R136, R133, PT ;
 Instr 3242 @ 0xcaa0 (51872) - @!P0 IMAD.IADD R133, R133, 0x1, -R136 ;
 Instr 3243 @ 0xcab0 (51888) - @!P0 IADD3 R135, R135, 0x1, RZ ;
 Instr 3244 @ 0xcac0 (51904) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x294], PT ;
 Instr 3245 @ 0xcad0 (51920) - ISETP.GE.U32.AND P2, PT, R133, R136, PT ;
 Instr 3246 @ 0xcae0 (51936) - LOP3.LUT R133, R132, c[0x0][0x294], RZ, 0x3c, !PT ;
 Instr 3247 @ 0xcaf0 (51952) - ISETP.GE.AND P1, PT, R133, RZ, PT ;
 Instr 3248 @ 0xcb00 (51968) - @P2 IADD3 R135, R135, 0x1, RZ ;
 Instr 3249 @ 0xcb10 (51984) - @!P1 IMAD.MOV R135, RZ, RZ, -R135 ;
 Instr 3250 @ 0xcb20 (52000) - @!P0 LOP3.LUT R135, RZ, c[0x0][0x294], RZ, 0x33, !PT ;
 Instr 3251 @ 0xcb30 (52016) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 3252 @ 0xcb40 (52032) - ISETP.NE.AND P1, PT, R135.reuse, RZ, PT ;
 Instr 3253 @ 0xcb50 (52048) - IMAD.MOV R133, RZ, RZ, -R135 ;
 Instr 3254 @ 0xcb60 (52064) - ISETP.EQ.OR P0, PT, R135, RZ, P0 ;
 Instr 3255 @ 0xcb70 (52080) - SEL R175, RZ, 0x1, !P1 ;
 Instr 3256 @ 0xcb80 (52096) - IMAD R132, R133, c[0x0][0x294], R132 ;
 Instr 3257 @ 0xcb90 (52112) - IMAD R179, R132, UR17, R171 ;
 Instr 3258 @ 0xcba0 (52128) - R2UR UR7, R132 ;
 Instr 3259 @ 0xcbb0 (52144) - IMAD.WIDE R178, R179, R134, c[0x0][0x2b8] ;
 Instr 3260 @ 0xcbc0 (52160) - @P0 BRA 0xcc70 ;
Basic block id 98 - num instructions 4
 Instr 3261 @ 0xcbd0 (52176) - LDG.E.STRONG.GPU R132, [R178] ;
 Instr 3262 @ 0xcbe0 (52192) - ISETP.NE.AND P0, PT, R132, R135, PT ;
 Instr 3263 @ 0xcbf0 (52208) - CCTL.IVALL ;
 Instr 3264 @ 0xcc00 (52224) - @!P0 BRA 0xcc70 ;
Basic block id 99 - num instructions 5
 Instr 3265 @ 0xcc10 (52240) - VOTE.ANY R132, PT, PT ;
 Instr 3266 @ 0xcc20 (52256) - YIELD ;
 Instr 3267 @ 0xcc30 (52272) - VOTEU.ANY UR4, UPT, PT ;
 Instr 3268 @ 0xcc40 (52288) - LOP3.LUT P0, RZ, R132, UR4, RZ, 0xc, !PT ;
 Instr 3269 @ 0xcc50 (52304) - @!P0 BRA.U 0xcbd0 ;
Basic block id 100 - num instructions 1
 Instr 3270 @ 0xcc60 (52320) - BRA 0xcc10 ;
Basic block id 101 - num instructions 2
 Instr 3271 @ 0xcc70 (52336) - BSYNC B0 ;
 Instr 3272 @ 0xcc80 (52352) - BRA.CONV 0xccc0 ;
Basic block id 102 - num instructions 3
 Instr 3273 @ 0xcc90 (52368) - MOV R133, 0xffffffff ;
 Instr 3274 @ 0xcca0 (52384) - MOV R132, 0xccc0 ;
 Instr 3275 @ 0xccb0 (52400) - CALL.REL.NOINC 0x15f50 ;
Basic block id 103 - num instructions 5
 Instr 3276 @ 0xccc0 (52416) - NOP ;
 Instr 3277 @ 0xccd0 (52432) - WARPSYNC 0xffffffff ;
 Instr 3278 @ 0xcce0 (52448) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 3279 @ 0xccf0 (52464) - UMOV UR10, URZ ;
 Instr 3280 @ 0xcd00 (52480) - BRA 0xced0 ;
Basic block id 104 - num instructions 8
 Instr 3281 @ 0xcd10 (52496) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 3282 @ 0xcd20 (52512) - IMAD.MOV.U32 R175, RZ, RZ, 0x1 ;
 Instr 3283 @ 0xcd30 (52528) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3284 @ 0xcd40 (52544) - BSSY B0, 0xce40 ;
 Instr 3285 @ 0xcd50 (52560) - ISETP.EQ.OR P0, PT, R135, RZ, P0 ;
 Instr 3286 @ 0xcd60 (52576) - IADD3 R175, -R175, c[0x0][0x294], RZ ;
 Instr 3287 @ 0xcd70 (52592) - @P1 IMAD.MOV R175, RZ, RZ, c[0x0][0x294] ;
 Instr 3288 @ 0xcd80 (52608) - @P0 BRA 0xce30 ;
Basic block id 105 - num instructions 4
 Instr 3289 @ 0xcd90 (52624) - LDG.E.STRONG.GPU R132, [R176] ;
 Instr 3290 @ 0xcda0 (52640) - ISETP.NE.AND P0, PT, R132, R135, PT ;
 Instr 3291 @ 0xcdb0 (52656) - CCTL.IVALL ;
 Instr 3292 @ 0xcdc0 (52672) - @!P0 BRA 0xce30 ;
Basic block id 106 - num instructions 5
 Instr 3293 @ 0xcdd0 (52688) - VOTE.ANY R132, PT, PT ;
 Instr 3294 @ 0xcde0 (52704) - YIELD ;
 Instr 3295 @ 0xcdf0 (52720) - VOTEU.ANY UR4, UPT, PT ;
 Instr 3296 @ 0xce00 (52736) - LOP3.LUT P0, RZ, R132, UR4, RZ, 0xc, !PT ;
 Instr 3297 @ 0xce10 (52752) - @!P0 BRA.U 0xcd90 ;
Basic block id 107 - num instructions 1
 Instr 3298 @ 0xce20 (52768) - BRA 0xcdd0 ;
Basic block id 108 - num instructions 2
 Instr 3299 @ 0xce30 (52784) - BSYNC B0 ;
 Instr 3300 @ 0xce40 (52800) - BRA.CONV 0xce80 ;
Basic block id 109 - num instructions 3
 Instr 3301 @ 0xce50 (52816) - MOV R133, 0xffffffff ;
 Instr 3302 @ 0xce60 (52832) - MOV R132, 0xce80 ;
 Instr 3303 @ 0xce70 (52848) - CALL.REL.NOINC 0x15f50 ;
Basic block id 110 - num instructions 5
 Instr 3304 @ 0xce80 (52864) - NOP ;
 Instr 3305 @ 0xce90 (52880) - WARPSYNC 0xffffffff ;
 Instr 3306 @ 0xcea0 (52896) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 3307 @ 0xceb0 (52912) - UMOV UR10, URZ ;
 Instr 3308 @ 0xcec0 (52928) - UMOV UR7, URZ ;
Basic block id 111 - num instructions 14
 Instr 3309 @ 0xced0 (52944) - IMAD.MOV.U32 R132, RZ, RZ, 0x1 ;
 Instr 3310 @ 0xcee0 (52960) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 3311 @ 0xcef0 (52976) - ISETP.NE.AND P0, PT, R172, RZ, PT ;
 Instr 3312 @ 0xcf00 (52992) - IMAD.MOV.U32 R174, RZ, RZ, 0x2 ;
 Instr 3313 @ 0xcf10 (53008) - USHF.R.S32.HI UR6, URZ, 0x1f, UR7 ;
 Instr 3314 @ 0xcf20 (53024) - ISETP.EQ.AND P2, PT, R132, c[0x0][0x298], P0 ;
 Instr 3315 @ 0xcf30 (53040) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 3316 @ 0xcf40 (53056) - ISETP.LE.AND P0, PT, R174, c[0x0][0x290], PT ;
 Instr 3317 @ 0xcf50 (53072) - UIMAD UR6, UR6, UR4, URZ ;
 Instr 3318 @ 0xcf60 (53088) - UIMAD.WIDE.U32 UR12, UR7, UR4, URZ ;
 Instr 3319 @ 0xcf70 (53104) - P2R R132, PR, RZ, 0x1 ;
 Instr 3320 @ 0xcf80 (53120) - UIMAD UR5, UR7, UR5, UR6 ;
 Instr 3321 @ 0xcf90 (53136) - UIADD3 UR11, UR13, UR5, URZ ;
 Instr 3322 @ 0xcfa0 (53152) - @!P0 BRA 0xd6f0 ;
Basic block id 112 - num instructions 5
 Instr 3323 @ 0xcfb0 (53168) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
 Instr 3324 @ 0xcfc0 (53184) - USHF.L.U32 UR9, UR17, 0x7, URZ ;
 Instr 3325 @ 0xcfd0 (53200) - LEA R182, R171, R0, 0x7 ;
 Instr 3326 @ 0xcfe0 (53216) - USHF.R.S32.HI UR8, URZ, 0x1f, UR9 ;
 Instr 3327 @ 0xcff0 (53232) - @!P0 BRA 0xd510 ;
Basic block id 113 - num instructions 7
 Instr 3328 @ 0xd000 (53248) - IMAD.SHL.U32 R181, R182, 0x10, RZ ;
 Instr 3329 @ 0xd010 (53264) - MOV R184, RZ ;
 Instr 3330 @ 0xd020 (53280) - USHF.L.U64.HI UR7, UR9, 0x4, UR8 ;
 Instr 3331 @ 0xd030 (53296) - USHF.L.U32 UR6, UR9, 0x4, URZ ;
 Instr 3332 @ 0xd040 (53312) - SHF.R.S32.HI R180, RZ, 0x1f, R181 ;
 Instr 3333 @ 0xd050 (53328) - USHF.L.U64.HI UR5, UR9, 0x5, UR8 ;
 Instr 3334 @ 0xd060 (53344) - USHF.L.U32 UR4, UR9, 0x5, URZ ;
Basic block id 114 - num instructions 74
 Instr 3335 @ 0xd070 (53360) - SHF.R.S32.HI R133, RZ, 0x1f, R184 ;
 Instr 3336 @ 0xd080 (53376) - MOV R134, UR12 ;
 Instr 3337 @ 0xd090 (53392) - MOV R189, UR11 ;
 Instr 3338 @ 0xd0a0 (53408) - IMAD R133, R133, c[0x0][0x2a0], RZ ;
 Instr 3339 @ 0xd0b0 (53424) - MOV R188, R134 ;
 Instr 3340 @ 0xd0c0 (53440) - MOV R135, UR13 ;
 Instr 3341 @ 0xd0d0 (53456) - IMAD R133, R184.reuse, c[0x0][0x2a4], R133 ;
 Instr 3342 @ 0xd0e0 (53472) - IMAD.WIDE.U32 R188, R184, c[0x0][0x2a0], R188 ;
 Instr 3343 @ 0xd0f0 (53488) - IADD3 R133, R189, R133, RZ ;
 Instr 3344 @ 0xd100 (53504) - IADD3 R160, P3, P1, R188.reuse, c[0x0][0x2a8], R181.reuse ;
 Instr 3345 @ 0xd110 (53520) - IADD3 R188, P0, R188, UR6, RZ ;
 Instr 3346 @ 0xd120 (53536) - IADD3.X R161, R133.reuse, c[0x0][0x2ac], R180, P3, P1 ;
 Instr 3347 @ 0xd130 (53552) - IADD3.X R133, R133, UR7, RZ, P0, !PT ;
 Instr 3348 @ 0xd140 (53568) - IADD3 R156, P3, P1, R188, c[0x0][0x2a8], R181 ;
 Instr 3349 @ 0xd150 (53584) - IADD3 R188, P0, R188, UR6, RZ ;
 Instr 3350 @ 0xd160 (53600) - IADD3.X R157, R133.reuse, c[0x0][0x2ac], R180, P3, P1 ;
 Instr 3351 @ 0xd170 (53616) - LDG.E.128.STRONG.GPU R160, [R160] ;
 Instr 3352 @ 0xd180 (53632) - IADD3.X R133, R133, UR7, RZ, P0, !PT ;
 Instr 3353 @ 0xd190 (53648) - IADD3 R134, P4, P3, R188, c[0x0][0x2a8], R181 ;
 Instr 3354 @ 0xd1a0 (53664) - IADD3 R188, P1, P0, R181, UR4, R188 ;
 Instr 3355 @ 0xd1b0 (53680) - LDG.E.128.STRONG.GPU R156, [R156] ;
 Instr 3356 @ 0xd1c0 (53696) - IADD3.X R132, R180, UR5, R133, P1, P0 ;
 Instr 3357 @ 0xd1d0 (53712) - IADD3 R188, P0, R188, c[0x0][0x2a8], RZ ;
 Instr 3358 @ 0xd1e0 (53728) - IADD3.X R189, R132, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 3359 @ 0xd1f0 (53744) - IADD3 R186, P0, R188, UR4, RZ ;
 Instr 3360 @ 0xd200 (53760) - IADD3.X R135, R133, c[0x0][0x2ac], R180, P4, P3 ;
 Instr 3361 @ 0xd210 (53776) - IADD3.X R187, R189, UR5, RZ, P0, !PT ;
 Instr 3362 @ 0xd220 (53792) - MOV R148, R134 ;
 Instr 3363 @ 0xd230 (53808) - LDG.E.128.STRONG.GPU R144, [R188] ;
 Instr 3364 @ 0xd240 (53824) - MOV R149, R135 ;
 Instr 3365 @ 0xd250 (53840) - MOV R140, R188 ;
 Instr 3366 @ 0xd260 (53856) - LDG.E.128.STRONG.GPU R152, [R134] ;
 Instr 3367 @ 0xd270 (53872) - MOV R141, R189 ;
 Instr 3368 @ 0xd280 (53888) - MOV R132, R186 ;
 Instr 3369 @ 0xd290 (53904) - LDG.E.128.STRONG.GPU R136, [R186] ;
 Instr 3370 @ 0xd2a0 (53920) - MOV R133, R187 ;
 Instr 3371 @ 0xd2b0 (53936) - LDG.E.128.STRONG.GPU R148, [R148.64+UR6] ;
 Instr 3372 @ 0xd2c0 (53952) - LDG.E.128.STRONG.GPU R140, [R140.64+UR6] ;
 Instr 3373 @ 0xd2d0 (53968) - LDG.E.128.STRONG.GPU R132, [R132.64+UR6] ;
 Instr 3374 @ 0xd2e0 (53984) - IADD3 R184, R184, 0x1, RZ ;
 Instr 3375 @ 0xd2f0 (54000) - ISETP.GE.AND P0, PT, R184, R175, PT ;
 Instr 3376 @ 0xd300 (54016) - FADD R4, R160, R4 ;
 Instr 3377 @ 0xd310 (54032) - FADD R5, R161, R5 ;
 Instr 3378 @ 0xd320 (54048) - FADD R6, R162, R6 ;
 Instr 3379 @ 0xd330 (54064) - FADD R7, R163, R7 ;
 Instr 3380 @ 0xd340 (54080) - FADD R8, R156, R8 ;
 Instr 3381 @ 0xd350 (54096) - FADD R9, R157, R9 ;
 Instr 3382 @ 0xd360 (54112) - FADD R10, R158, R10 ;
 Instr 3383 @ 0xd370 (54128) - FADD R11, R159, R11 ;
 Instr 3384 @ 0xd380 (54144) - FADD R20, R144, R20 ;
 Instr 3385 @ 0xd390 (54160) - FADD R21, R145, R21 ;
 Instr 3386 @ 0xd3a0 (54176) - FADD R12, R152, R12 ;
 Instr 3387 @ 0xd3b0 (54192) - FADD R13, R153, R13 ;
 Instr 3388 @ 0xd3c0 (54208) - FADD R14, R154, R14 ;
 Instr 3389 @ 0xd3d0 (54224) - FADD R15, R155, R15 ;
 Instr 3390 @ 0xd3e0 (54240) - FADD R16, R148, R16 ;
 Instr 3391 @ 0xd3f0 (54256) - FADD R17, R149, R17 ;
 Instr 3392 @ 0xd400 (54272) - FADD R18, R150, R18 ;
 Instr 3393 @ 0xd410 (54288) - FADD R19, R151, R19 ;
 Instr 3394 @ 0xd420 (54304) - FADD R22, R146, R22 ;
 Instr 3395 @ 0xd430 (54320) - FADD R23, R147, R23 ;
 Instr 3396 @ 0xd440 (54336) - FADD R24, R140, R24 ;
 Instr 3397 @ 0xd450 (54352) - FADD R25, R141, R25 ;
 Instr 3398 @ 0xd460 (54368) - FADD R26, R142, R26 ;
 Instr 3399 @ 0xd470 (54384) - FADD R27, R143, R27 ;
 Instr 3400 @ 0xd480 (54400) - FADD R28, R136, R28 ;
 Instr 3401 @ 0xd490 (54416) - FADD R29, R137, R29 ;
 Instr 3402 @ 0xd4a0 (54432) - FADD R30, R138, R30 ;
 Instr 3403 @ 0xd4b0 (54448) - FADD R31, R139, R31 ;
 Instr 3404 @ 0xd4c0 (54464) - FADD R32, R132, R32 ;
 Instr 3405 @ 0xd4d0 (54480) - FADD R33, R133, R33 ;
 Instr 3406 @ 0xd4e0 (54496) - FADD R34, R134, R34 ;
 Instr 3407 @ 0xd4f0 (54512) - FADD R35, R135, R35 ;
 Instr 3408 @ 0xd500 (54528) - @!P0 BRA 0xd070 ;
Basic block id 115 - num instructions 1
 Instr 3409 @ 0xd510 (54544) - @P2 BRA 0xd6f0 ;
Basic block id 116 - num instructions 29
 Instr 3410 @ 0xd520 (54560) - IMAD.U32 R132, RZ, RZ, UR12 ;
 Instr 3411 @ 0xd530 (54576) - USHF.L.U32 UR6, UR9, 0x4, URZ ;
 Instr 3412 @ 0xd540 (54592) - IMAD.U32 R135, RZ, RZ, UR11 ;
 Instr 3413 @ 0xd550 (54608) - USHF.L.U64.HI UR7, UR9, 0x4, UR8 ;
 Instr 3414 @ 0xd560 (54624) - IMAD.MOV.U32 R134, RZ, RZ, R132 ;
 Instr 3415 @ 0xd570 (54640) - USHF.L.U32 UR4, UR9, 0x5, URZ ;
 Instr 3416 @ 0xd580 (54656) - IMAD.U32 R133, RZ, RZ, UR13 ;
 Instr 3417 @ 0xd590 (54672) - USHF.L.U64.HI UR8, UR9, 0x5, UR8 ;
 Instr 3418 @ 0xd5a0 (54688) - IMAD.WIDE R134, R182, 0x10, R134 ;
 Instr 3419 @ 0xd5b0 (54704) - IADD3 R138, P0, R134, c[0x0][0x2a8], RZ ;
 Instr 3420 @ 0xd5c0 (54720) - IADD3.X R139, R135, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 3421 @ 0xd5d0 (54736) - IADD3 R136, P0, R138, UR6, RZ ;
 Instr 3422 @ 0xd5e0 (54752) - IADD3.X R137, R139, UR7, RZ, P0, !PT ;
 Instr 3423 @ 0xd5f0 (54768) - IADD3 R134, P0, R136, UR6, RZ ;
 Instr 3424 @ 0xd600 (54784) - STG.E.128.SYS [R138], R4 ;
 Instr 3425 @ 0xd610 (54800) - IADD3.X R135, R137, UR7, RZ, P0, !PT ;
 Instr 3426 @ 0xd620 (54816) - IADD3 R132, P0, R134, UR4, RZ ;
 Instr 3427 @ 0xd630 (54832) - STG.E.128.SYS [R136], R8 ;
 Instr 3428 @ 0xd640 (54848) - IADD3.X R133, R135, UR8, RZ, P0, !PT ;
 Instr 3429 @ 0xd650 (54864) - IADD3 R140, P0, R132, UR4, RZ ;
 Instr 3430 @ 0xd660 (54880) - STG.E.128.SYS [R134], R12 ;
 Instr 3431 @ 0xd670 (54896) - IADD3.X R141, R133, UR8, RZ, P0, !PT ;
 Instr 3432 @ 0xd680 (54912) - STG.E.128.SYS [R134.64+UR6], R16 ;
 Instr 3433 @ 0xd690 (54928) - STG.E.128.SYS [R132], R20 ;
 Instr 3434 @ 0xd6a0 (54944) - STG.E.128.SYS [R132.64+UR6], R24 ;
 Instr 3435 @ 0xd6b0 (54960) - STG.E.128.SYS [R140], R28 ;
 Instr 3436 @ 0xd6c0 (54976) - IMAD.MOV.U32 R134, RZ, RZ, R140 ;
 Instr 3437 @ 0xd6d0 (54992) - IMAD.MOV.U32 R135, RZ, RZ, R141 ;
 Instr 3438 @ 0xd6e0 (55008) - STG.E.128.SYS [R134.64+UR6], R32 ;
Basic block id 117 - num instructions 1
 Instr 3439 @ 0xd6f0 (55024) - @!P2 BRA 0xf230 ;
Basic block id 118 - num instructions 435
 Instr 3440 @ 0xd700 (55040) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 3441 @ 0xd710 (55056) - IMAD.MOV.U32 R133, RZ, RZ, R168 ;
 Instr 3442 @ 0xd720 (55072) - IADD3 R135, R168.reuse, 0x8, RZ ;
 Instr 3443 @ 0xd730 (55088) - IMAD.MOV.U32 R134, RZ, RZ, RZ ;
 Instr 3444 @ 0xd740 (55104) - IADD3 R137, R168.reuse, 0x10, RZ ;
 Instr 3445 @ 0xd750 (55120) - CS2R R148, SRZ ;
 Instr 3446 @ 0xd760 (55136) - IADD3 R145, R168, 0x18, RZ ;
 Instr 3447 @ 0xd770 (55152) - IMAD.MOV.U32 R151, RZ, RZ, RZ ;
 Instr 3448 @ 0xd780 (55168) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 3449 @ 0xd790 (55184) - ISETP.GE.AND P3, PT, R169, R208, PT ;
 Instr 3450 @ 0xd7a0 (55200) - @P0 IMAD.HI.U32 R143, R135.reuse, c[0x0][0x3d8], RZ ;
 Instr 3451 @ 0xd7b0 (55216) - ISETP.LT.AND P6, PT, R135, c[0x0][0x3c4], !P3 ;
 Instr 3452 @ 0xd7c0 (55232) - @P0 IMAD.HI.U32 R142, R137.reuse, c[0x0][0x3d8], RZ ;
 Instr 3453 @ 0xd7d0 (55248) - @P0 SHF.R.U32.HI R143, RZ, c[0x0][0x3dc], R143 ;
 Instr 3454 @ 0xd7e0 (55264) - ISETP.LT.AND P5, PT, R137, c[0x0][0x3c4], !P3 ;
 Instr 3455 @ 0xd7f0 (55280) - @P0 IMAD.HI.U32 R141, R145.reuse, c[0x0][0x3d8], RZ ;
 Instr 3456 @ 0xd800 (55296) - @P0 SHF.R.U32.HI R142, RZ, c[0x0][0x3dc], R142 ;
 Instr 3457 @ 0xd810 (55312) - ISETP.LT.AND P4, PT, R145, c[0x0][0x3c4], !P3 ;
 Instr 3458 @ 0xd820 (55328) - @P0 IMAD.HI.U32 R132, R168, c[0x0][0x3d8], RZ ;
 Instr 3459 @ 0xd830 (55344) - @P0 SHF.R.U32.HI R141, RZ, c[0x0][0x3dc], R141 ;
 Instr 3460 @ 0xd840 (55360) - ISETP.LT.AND P3, PT, R168, c[0x0][0x3c4], !P3 ;
 Instr 3461 @ 0xd850 (55376) - @P0 IMAD.MOV R140, RZ, RZ, -R143 ;
 Instr 3462 @ 0xd860 (55392) - @P0 SHF.R.U32.HI R133, RZ, c[0x0][0x3dc], R132 ;
 Instr 3463 @ 0xd870 (55408) - @P0 IMAD.MOV R138, RZ, RZ, -R142 ;
 Instr 3464 @ 0xd880 (55424) - @P0 IMAD R134, R140, c[0x0][0x3c8], R135 ;
 Instr 3465 @ 0xd890 (55440) - @P0 IMAD.MOV R136, RZ, RZ, -R141 ;
 Instr 3466 @ 0xd8a0 (55456) - @P1 IMAD.HI.U32 R140, R134, c[0x0][0x3e0], RZ ;
 Instr 3467 @ 0xd8b0 (55472) - IMAD.MOV.U32 R132, RZ, RZ, RZ ;
 Instr 3468 @ 0xd8c0 (55488) - @P1 SHF.R.U32.HI R140, RZ, c[0x0][0x3e4], R140 ;
 Instr 3469 @ 0xd8d0 (55504) - @P0 IMAD.MOV R139, RZ, RZ, -R133 ;
 Instr 3470 @ 0xd8e0 (55520) - @P0 IMAD R149, R138, c[0x0][0x3c8], R137 ;
 Instr 3471 @ 0xd8f0 (55536) - @P0 IMAD R148, R136, c[0x0][0x3c8], R145 ;
 Instr 3472 @ 0xd900 (55552) - @P0 IMAD R132, R139, c[0x0][0x3c8], R168 ;
 Instr 3473 @ 0xd910 (55568) - @P0 IMAD.MOV.U32 R135, RZ, RZ, R143 ;
 Instr 3474 @ 0xd920 (55584) - @P0 IMAD.MOV.U32 R137, RZ, RZ, R142 ;
 Instr 3475 @ 0xd930 (55600) - @P0 IMAD.MOV.U32 R145, RZ, RZ, R141 ;
 Instr 3476 @ 0xd940 (55616) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 3477 @ 0xd950 (55632) - IMAD.MOV.U32 R141, RZ, RZ, RZ ;
 Instr 3478 @ 0xd960 (55648) - CS2R R142, SRZ ;
 Instr 3479 @ 0xd970 (55664) - @P1 IMAD.MOV R139, RZ, RZ, -R140 ;
 Instr 3480 @ 0xd980 (55680) - IMAD R136, R169, c[0x0][0x254], RZ ;
 Instr 3481 @ 0xd990 (55696) - @P1 IMAD R141, R139, c[0x0][0x3cc], R134 ;
 Instr 3482 @ 0xd9a0 (55712) - @P1 IMAD.MOV.U32 R134, RZ, RZ, R140 ;
 Instr 3483 @ 0xd9b0 (55728) - IMAD R135, R135, c[0x0][0x244], R136.reuse ;
 Instr 3484 @ 0xd9c0 (55744) - @P0 IMAD.HI.U32 R139, R141, c[0x0][0x3e8], RZ ;
 Instr 3485 @ 0xd9d0 (55760) - IMAD R134, R134, c[0x0][0x248], R135 ;
 Instr 3486 @ 0xd9e0 (55776) - @P0 SHF.R.U32.HI R139, RZ, c[0x0][0x3ec], R139 ;
 Instr 3487 @ 0xd9f0 (55792) - IMAD R133, R133, c[0x0][0x244], R136 ;
 Instr 3488 @ 0xda00 (55808) - @P0 IMAD.MOV R138, RZ, RZ, -R139 ;
 Instr 3489 @ 0xda10 (55824) - @P0 IMAD R142, R138, c[0x0][0x1b4], R141 ;
 Instr 3490 @ 0xda20 (55840) - @P0 IMAD.MOV.U32 R141, RZ, RZ, R139 ;
 Instr 3491 @ 0xda30 (55856) - @P1 IMAD.HI.U32 R139, R132, c[0x0][0x3e0], RZ ;
 Instr 3492 @ 0xda40 (55872) - IMAD R141, R141, c[0x0][0x24c], R134 ;
 Instr 3493 @ 0xda50 (55888) - @P1 SHF.R.U32.HI R139, RZ, c[0x0][0x3e4], R139 ;
 Instr 3494 @ 0xda60 (55904) - IMAD.MOV.U32 R138, RZ, RZ, RZ ;
 Instr 3495 @ 0xda70 (55920) - IMAD R141, R142, c[0x0][0x250], R141 ;
 Instr 3496 @ 0xda80 (55936) - @P1 IMAD.MOV R135, RZ, RZ, -R139.reuse ;
 Instr 3497 @ 0xda90 (55952) - IMAD.MOV.U32 R142, RZ, RZ, RZ ;
 Instr 3498 @ 0xdaa0 (55968) - SEL R141, R141, 0xffffffff, P6 ;
 Instr 3499 @ 0xdab0 (55984) - @P1 IMAD R143, R135, c[0x0][0x3cc], R132 ;
 Instr 3500 @ 0xdac0 (56000) - @P1 IMAD.MOV.U32 R132, RZ, RZ, R139 ;
 Instr 3501 @ 0xdad0 (56016) - @P0 IMAD.HI.U32 R135, R143, c[0x0][0x3e8], RZ ;
 Instr 3502 @ 0xdae0 (56032) - IMAD R132, R132, c[0x0][0x248], R133 ;
 Instr 3503 @ 0xdaf0 (56048) - @P0 SHF.R.U32.HI R135, RZ, c[0x0][0x3ec], R135 ;
 Instr 3504 @ 0xdb00 (56064) - @P0 IMAD.MOV R134, RZ, RZ, -R135 ;
 Instr 3505 @ 0xdb10 (56080) - @P0 IMAD R138, R134, c[0x0][0x1b4], R143 ;
 Instr 3506 @ 0xdb20 (56096) - @P0 IMAD.MOV.U32 R143, RZ, RZ, R135 ;
 Instr 3507 @ 0xdb30 (56112) - @P1 IMAD.HI.U32 R135, R149, c[0x0][0x3e0], RZ ;
 Instr 3508 @ 0xdb40 (56128) - @P1 IMAD.HI.U32 R134, R148, c[0x0][0x3e0], RZ ;
 Instr 3509 @ 0xdb50 (56144) - @P1 SHF.R.U32.HI R135, RZ, c[0x0][0x3e4], R135 ;
 Instr 3510 @ 0xdb60 (56160) - IMAD R143, R143, c[0x0][0x24c], R132 ;
 Instr 3511 @ 0xdb70 (56176) - @P1 SHF.R.U32.HI R134, RZ, c[0x0][0x3e4], R134 ;
 Instr 3512 @ 0xdb80 (56192) - @P1 IMAD.MOV R132, RZ, RZ, -R135 ;
 Instr 3513 @ 0xdb90 (56208) - IMAD R143, R138, c[0x0][0x250], R143 ;
 Instr 3514 @ 0xdba0 (56224) - @P1 IMAD.MOV R133, RZ, RZ, -R134 ;
 Instr 3515 @ 0xdbb0 (56240) - @P1 IMAD R151, R132, c[0x0][0x3cc], R149 ;
 Instr 3516 @ 0xdbc0 (56256) - SEL R143, R143, 0xffffffff, P3 ;
 Instr 3517 @ 0xdbd0 (56272) - @P1 IMAD R142, R133, c[0x0][0x3cc], R148 ;
 Instr 3518 @ 0xdbe0 (56288) - @P1 IMAD.MOV.U32 R149, RZ, RZ, R135 ;
 Instr 3519 @ 0xdbf0 (56304) - CS2R R132, SRZ ;
 Instr 3520 @ 0xdc00 (56320) - @P1 IMAD.MOV.U32 R148, RZ, RZ, R134 ;
 Instr 3521 @ 0xdc10 (56336) - ISETP.GE.AND P1, PT, R143, RZ, PT ;
 Instr 3522 @ 0xdc20 (56352) - CS2R R134, SRZ ;
 Instr 3523 @ 0xdc30 (56368) - @P1 IMAD.WIDE R152, R143, R174, c[0x0][0x178] ;
 Instr 3524 @ 0xdc40 (56384) - @P1 LDG.E.128.SYS R132, [R152] ;
 Instr 3525 @ 0xdc50 (56400) - @P0 IMAD.HI.U32 R146, R151, c[0x0][0x3e8], RZ ;
 Instr 3526 @ 0xdc60 (56416) - STS.64 [R3], R4 ;
 Instr 3527 @ 0xdc70 (56432) - @P0 IMAD.HI.U32 R139, R142, c[0x0][0x3e8], RZ ;
 Instr 3528 @ 0xdc80 (56448) - @P0 SHF.R.U32.HI R146, RZ, c[0x0][0x3ec], R146 ;
 Instr 3529 @ 0xdc90 (56464) - STS.64 [R3+0x10], R8 ;
 Instr 3530 @ 0xdca0 (56480) - IMAD R144, R137, c[0x0][0x244], R136 ;
 Instr 3531 @ 0xdcb0 (56496) - @P0 SHF.R.U32.HI R139, RZ, c[0x0][0x3ec], R139 ;
 Instr 3532 @ 0xdcc0 (56512) - IMAD.MOV.U32 R147, RZ, RZ, RZ ;
 Instr 3533 @ 0xdcd0 (56528) - STS.64 [R3+0x1100], R6 ;
 Instr 3534 @ 0xdce0 (56544) - IMAD.MOV.U32 R140, RZ, RZ, RZ ;
 Instr 3535 @ 0xdcf0 (56560) - @P0 IMAD.MOV R138, RZ, RZ, -R146 ;
 Instr 3536 @ 0xdd00 (56576) - STS.64 [R3+0x1110], R10 ;
 Instr 3537 @ 0xdd10 (56592) - @P0 IMAD.MOV R137, RZ, RZ, -R139 ;
 Instr 3538 @ 0xdd20 (56608) - @P0 IMAD R147, R138, c[0x0][0x1b4], R151 ;
 Instr 3539 @ 0xdd30 (56624) - STS.64 [R3+0x40], R12 ;
 Instr 3540 @ 0xdd40 (56640) - @P0 IMAD R140, R137, c[0x0][0x1b4], R142 ;
 Instr 3541 @ 0xdd50 (56656) - @P0 IMAD.MOV.U32 R151, RZ, RZ, R146 ;
 Instr 3542 @ 0xdd60 (56672) - STS.64 [R3+0x50], R16 ;
 Instr 3543 @ 0xdd70 (56688) - @P0 IMAD.MOV.U32 R142, RZ, RZ, R139 ;
 Instr 3544 @ 0xdd80 (56704) - ISETP.GE.AND P0, PT, R141, RZ, PT ;
 Instr 3545 @ 0xdd90 (56720) - IMAD R145, R145, c[0x0][0x244], R136 ;
 Instr 3546 @ 0xdda0 (56736) - CS2R R138, SRZ ;
 Instr 3547 @ 0xddb0 (56752) - IMAD R144, R149, c[0x0][0x248], R144 ;
 Instr 3548 @ 0xddc0 (56768) - CS2R R136, SRZ ;
 Instr 3549 @ 0xddd0 (56784) - IMAD R145, R148, c[0x0][0x248], R145 ;
 Instr 3550 @ 0xdde0 (56800) - STS.64 [R3+0x1140], R14 ;
 Instr 3551 @ 0xddf0 (56816) - IMAD R144, R151, c[0x0][0x24c], R144 ;
 Instr 3552 @ 0xde00 (56832) - IMAD R145, R142, c[0x0][0x24c], R145 ;
 Instr 3553 @ 0xde10 (56848) - STS.64 [R3+0x1150], R18 ;
 Instr 3554 @ 0xde20 (56864) - IMAD R147, R147, c[0x0][0x250], R144 ;
 Instr 3555 @ 0xde30 (56880) - @P0 IMAD.WIDE R148, R141, R174, c[0x0][0x178] ;
 Instr 3556 @ 0xde40 (56896) - SEL R147, R147, 0xffffffff, P5 ;
 Instr 3557 @ 0xde50 (56912) - IMAD R145, R140, c[0x0][0x250], R145 ;
 Instr 3558 @ 0xde60 (56928) - @P0 LDG.E.128.SYS R136, [R148] ;
 Instr 3559 @ 0xde70 (56944) - SEL R145, R145, 0xffffffff, P4 ;
 Instr 3560 @ 0xde80 (56960) - ISETP.GE.AND P4, PT, R147, RZ, PT ;
 Instr 3561 @ 0xde90 (56976) - ISETP.GE.AND P3, PT, R145, RZ, PT ;
 Instr 3562 @ 0xdea0 (56992) - CS2R R8, SRZ ;
 Instr 3563 @ 0xdeb0 (57008) - CS2R R10, SRZ ;
 Instr 3564 @ 0xdec0 (57024) - CS2R R4, SRZ ;
 Instr 3565 @ 0xded0 (57040) - CS2R R6, SRZ ;
 Instr 3566 @ 0xdee0 (57056) - @P4 IMAD.WIDE R150, R147, R174.reuse, c[0x0][0x178] ;
 Instr 3567 @ 0xdef0 (57072) - @P3 IMAD.WIDE R148, R145, R174, c[0x0][0x178] ;
 Instr 3568 @ 0xdf00 (57088) - STS.64 [R3+0x80], R20 ;
 Instr 3569 @ 0xdf10 (57104) - STS.64 [R3+0x90], R24 ;
 Instr 3570 @ 0xdf20 (57120) - STS.64 [R3+0x1180], R22 ;
 Instr 3571 @ 0xdf30 (57136) - STS.64 [R3+0x1190], R26 ;
 Instr 3572 @ 0xdf40 (57152) - STS.64 [R3+0xc0], R28 ;
 Instr 3573 @ 0xdf50 (57168) - STS.64 [R3+0xd0], R32 ;
 Instr 3574 @ 0xdf60 (57184) - STS.64 [R3+0x11c0], R30 ;
 Instr 3575 @ 0xdf70 (57200) - STS.64 [R3+0x11d0], R34 ;
 Instr 3576 @ 0xdf80 (57216) - @P4 LDG.E.128.SYS R8, [R150] ;
 Instr 3577 @ 0xdf90 (57232) - @P3 LDG.E.128.SYS R4, [R148] ;
 Instr 3578 @ 0xdfa0 (57248) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 3579 @ 0xdfb0 (57264) - LDS.U.128 R12, [R170.X16] ;
 Instr 3580 @ 0xdfc0 (57280) - HADD2.F32 R19, R164.H0_H0, -RZ.H0_H0 ;
 Instr 3581 @ 0xdfd0 (57296) - HADD2.F32 R20, R164.H1_H1, -RZ.H0_H0 ;
 Instr 3582 @ 0xdfe0 (57312) - HADD2.F32 R25, R165.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3583 @ 0xdff0 (57328) - HADD2.F32 R26, R165.H1_H1, -RZ.H0_H0 ;
 Instr 3584 @ 0xe000 (57344) - FFMA R12, R12, R2.reuse, R19 ;
 Instr 3585 @ 0xe010 (57360) - FFMA R13, R13, R2.reuse, R20 ;
 Instr 3586 @ 0xe020 (57376) - FFMA R14, R14, R2, R25 ;
 Instr 3587 @ 0xe030 (57392) - FFMA R15, R15, R2, R26 ;
 Instr 3588 @ 0xe040 (57408) - HADD2.F32 R21, R166.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3589 @ 0xe050 (57424) - HADD2.F32 R23, R166.H1_H1, -RZ.H0_H0 ;
 Instr 3590 @ 0xe060 (57440) - HADD2.F32 R27, R167.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3591 @ 0xe070 (57456) - HADD2.F32 R29, R167.H1_H1, -RZ.H0_H0 ;
 Instr 3592 @ 0xe080 (57472) - HADD2.F32 R16, R132.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3593 @ 0xe090 (57488) - HADD2.F32 R132, R132.H1_H1, -RZ.H0_H0 ;
 Instr 3594 @ 0xe0a0 (57504) - FFMA R16, R16, R173.reuse, R12 ;
 Instr 3595 @ 0xe0b0 (57520) - HADD2.F32 R12, R133.H0_H0, -RZ.H0_H0 ;
 Instr 3596 @ 0xe0c0 (57536) - FFMA R13, R132, R173.reuse, R13 ;
 Instr 3597 @ 0xe0d0 (57552) - FSETP.GEU.AND P5, PT, R16.reuse, c[0x0][0x210], PT ;
 Instr 3598 @ 0xe0e0 (57568) - FSEL R16, R16, c[0x0][0x210], P5 ;
 Instr 3599 @ 0xe0f0 (57584) - FFMA R12, R12, R173, R14 ;
 Instr 3600 @ 0xe100 (57600) - FSETP.GEU.AND P5, PT, R13, c[0x0][0x210], PT ;
 Instr 3601 @ 0xe110 (57616) - FSEL R17, R13, c[0x0][0x210], P5 ;
 Instr 3602 @ 0xe120 (57632) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3603 @ 0xe130 (57648) - FSEL R18, R12, c[0x0][0x210], P5 ;
 Instr 3604 @ 0xe140 (57664) - HADD2.F32 R12, R133.H1_H1, -RZ.H0_H0 ;
 Instr 3605 @ 0xe150 (57680) - FFMA R12, R12, R173, R15 ;
 Instr 3606 @ 0xe160 (57696) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3607 @ 0xe170 (57712) - FSEL R22, R12, c[0x0][0x210], P5 ;
 Instr 3608 @ 0xe180 (57728) - LDS.U.128 R12, [R170.X16+0x110] ;
 Instr 3609 @ 0xe190 (57744) - HADD2.F32 R24, R134.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3610 @ 0xe1a0 (57760) - HADD2.F32 R134, R134.H1_H1, -RZ.H0_H0 ;
 Instr 3611 @ 0xe1b0 (57776) - FFMA R12, R12, R2, R21 ;
 Instr 3612 @ 0xe1c0 (57792) - FFMA R13, R13, R2.reuse, R23 ;
 Instr 3613 @ 0xe1d0 (57808) - FFMA R24, R24, R173.reuse, R12 ;
 Instr 3614 @ 0xe1e0 (57824) - HADD2.F32 R12, R135.H0_H0, -RZ.H0_H0 ;
 Instr 3615 @ 0xe1f0 (57840) - FFMA R13, R134, R173.reuse, R13 ;
 Instr 3616 @ 0xe200 (57856) - FSETP.GEU.AND P5, PT, R24, c[0x0][0x210], PT ;
 Instr 3617 @ 0xe210 (57872) - FFMA R14, R14, R2, R27 ;
 Instr 3618 @ 0xe220 (57888) - FSEL R24, R24, c[0x0][0x210], P5 ;
 Instr 3619 @ 0xe230 (57904) - FFMA R12, R12, R173, R14 ;
 Instr 3620 @ 0xe240 (57920) - FSETP.GEU.AND P5, PT, R13, c[0x0][0x210], PT ;
 Instr 3621 @ 0xe250 (57936) - FSEL R28, R13, c[0x0][0x210], P5 ;
 Instr 3622 @ 0xe260 (57952) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3623 @ 0xe270 (57968) - FSEL R30, R12, c[0x0][0x210], P5 ;
 Instr 3624 @ 0xe280 (57984) - HADD2.F32 R12, R135.H1_H1, -RZ.H0_H0 ;
 Instr 3625 @ 0xe290 (58000) - FFMA R15, R15, R2, R29 ;
 Instr 3626 @ 0xe2a0 (58016) - FFMA R12, R12, R173, R15 ;
 Instr 3627 @ 0xe2b0 (58032) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3628 @ 0xe2c0 (58048) - FSEL R31, R12, c[0x0][0x210], P5 ;
 Instr 3629 @ 0xe2d0 (58064) - LDS.U.128 R12, [R170.X16+0x1100] ;
 Instr 3630 @ 0xe2e0 (58080) - HADD2.F32 R32, R136.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3631 @ 0xe2f0 (58096) - HADD2.F32 R136, R136.H1_H1, -RZ.H0_H0 ;
 Instr 3632 @ 0xe300 (58112) - FFMA R12, R12, R2, R19 ;
 Instr 3633 @ 0xe310 (58128) - FFMA R13, R13, R2.reuse, R20 ;
 Instr 3634 @ 0xe320 (58144) - FFMA R32, R32, R173.reuse, R12 ;
 Instr 3635 @ 0xe330 (58160) - HADD2.F32 R12, R137.H0_H0, -RZ.H0_H0 ;
 Instr 3636 @ 0xe340 (58176) - FFMA R13, R136, R173.reuse, R13 ;
 Instr 3637 @ 0xe350 (58192) - FSETP.GEU.AND P5, PT, R32, c[0x0][0x210], PT ;
 Instr 3638 @ 0xe360 (58208) - FFMA R14, R14, R2, R25 ;
 Instr 3639 @ 0xe370 (58224) - FSEL R32, R32, c[0x0][0x210], P5 ;
 Instr 3640 @ 0xe380 (58240) - FFMA R12, R12, R173, R14 ;
 Instr 3641 @ 0xe390 (58256) - FSETP.GEU.AND P5, PT, R13, c[0x0][0x210], PT ;
 Instr 3642 @ 0xe3a0 (58272) - FSEL R33, R13, c[0x0][0x210], P5 ;
 Instr 3643 @ 0xe3b0 (58288) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3644 @ 0xe3c0 (58304) - FSEL R34, R12, c[0x0][0x210], P5 ;
 Instr 3645 @ 0xe3d0 (58320) - HADD2.F32 R12, R137.H1_H1, -RZ.H0_H0 ;
 Instr 3646 @ 0xe3e0 (58336) - FFMA R15, R15, R2, R26 ;
 Instr 3647 @ 0xe3f0 (58352) - FFMA R12, R12, R173, R15 ;
 Instr 3648 @ 0xe400 (58368) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3649 @ 0xe410 (58384) - FSEL R35, R12, c[0x0][0x210], P5 ;
 Instr 3650 @ 0xe420 (58400) - LDS.U.128 R12, [R170.X16+0x1210] ;
 Instr 3651 @ 0xe430 (58416) - HADD2.F32 R132, R138.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3652 @ 0xe440 (58432) - HADD2.F32 R138, R138.H1_H1, -RZ.H0_H0 ;
 Instr 3653 @ 0xe450 (58448) - FFMA R12, R12, R2, R21 ;
 Instr 3654 @ 0xe460 (58464) - FFMA R13, R13, R2.reuse, R23 ;
 Instr 3655 @ 0xe470 (58480) - FFMA R132, R132, R173.reuse, R12 ;
 Instr 3656 @ 0xe480 (58496) - HADD2.F32 R12, R139.H0_H0, -RZ.H0_H0 ;
 Instr 3657 @ 0xe490 (58512) - FFMA R13, R138, R173.reuse, R13 ;
 Instr 3658 @ 0xe4a0 (58528) - FSETP.GEU.AND P5, PT, R132, c[0x0][0x210], PT ;
 Instr 3659 @ 0xe4b0 (58544) - FFMA R14, R14, R2, R27 ;
 Instr 3660 @ 0xe4c0 (58560) - FSEL R132, R132, c[0x0][0x210], P5 ;
 Instr 3661 @ 0xe4d0 (58576) - FFMA R12, R12, R173, R14 ;
 Instr 3662 @ 0xe4e0 (58592) - FSETP.GEU.AND P5, PT, R13, c[0x0][0x210], PT ;
 Instr 3663 @ 0xe4f0 (58608) - FSEL R133, R13, c[0x0][0x210], P5 ;
 Instr 3664 @ 0xe500 (58624) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3665 @ 0xe510 (58640) - FSEL R134, R12, c[0x0][0x210], P5 ;
 Instr 3666 @ 0xe520 (58656) - HADD2.F32 R12, R139.H1_H1, -RZ.H0_H0 ;
 Instr 3667 @ 0xe530 (58672) - FFMA R15, R15, R2, R29 ;
 Instr 3668 @ 0xe540 (58688) - FFMA R12, R12, R173, R15 ;
 Instr 3669 @ 0xe550 (58704) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3670 @ 0xe560 (58720) - FSEL R135, R12, c[0x0][0x210], P5 ;
 Instr 3671 @ 0xe570 (58736) - LDS.U.128 R12, [R170.X16+0x2200] ;
 Instr 3672 @ 0xe580 (58752) - HADD2.F32 R136, R8.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3673 @ 0xe590 (58768) - HADD2.F32 R8, R8.H1_H1, -RZ.H0_H0 ;
 Instr 3674 @ 0xe5a0 (58784) - FFMA R12, R12, R2, R19 ;
 Instr 3675 @ 0xe5b0 (58800) - FFMA R13, R13, R2, R20 ;
 Instr 3676 @ 0xe5c0 (58816) - FFMA R136, R136, R173.reuse, R12 ;
 Instr 3677 @ 0xe5d0 (58832) - FFMA R8, R8, R173, R13 ;
 Instr 3678 @ 0xe5e0 (58848) - FSETP.GEU.AND P5, PT, R136.reuse, c[0x0][0x210], PT ;
 Instr 3679 @ 0xe5f0 (58864) - FSEL R136, R136, c[0x0][0x210], P5 ;
 Instr 3680 @ 0xe600 (58880) - FSETP.GEU.AND P5, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 3681 @ 0xe610 (58896) - FSEL R137, R8, c[0x0][0x210], P5 ;
 Instr 3682 @ 0xe620 (58912) - HADD2.F32 R8, R9.H0_H0, -RZ.H0_H0 ;
 Instr 3683 @ 0xe630 (58928) - FFMA R14, R14, R2, R25 ;
 Instr 3684 @ 0xe640 (58944) - FFMA R8, R8, R173, R14 ;
 Instr 3685 @ 0xe650 (58960) - FSETP.GEU.AND P5, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 3686 @ 0xe660 (58976) - FFMA R15, R15, R2, R26 ;
 Instr 3687 @ 0xe670 (58992) - FSEL R138, R8, c[0x0][0x210], P5 ;
 Instr 3688 @ 0xe680 (59008) - HADD2.F32 R8, R9.H1_H1, -RZ.H0_H0 ;
 Instr 3689 @ 0xe690 (59024) - FFMA R8, R8, R173, R15 ;
 Instr 3690 @ 0xe6a0 (59040) - LDS.U.128 R12, [R170.X16+0x2310] ;
 Instr 3691 @ 0xe6b0 (59056) - FSETP.GEU.AND P5, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 3692 @ 0xe6c0 (59072) - FSEL R139, R8, c[0x0][0x210], P5 ;
 Instr 3693 @ 0xe6d0 (59088) - HADD2.F32 R8, R10.H0_H0, -RZ.H0_H0 ;
 Instr 3694 @ 0xe6e0 (59104) - HADD2.F32 R10, R10.H1_H1, -RZ.H0_H0 ;
 Instr 3695 @ 0xe6f0 (59120) - FFMA R12, R12, R2, R21 ;
 Instr 3696 @ 0xe700 (59136) - FFMA R12, R8, R173, R12 ;
 Instr 3697 @ 0xe710 (59152) - HADD2.F32 R8, R11.H0_H0, -RZ.H0_H0 ;
 Instr 3698 @ 0xe720 (59168) - FFMA R14, R14, R2.reuse, R27 ;
 Instr 3699 @ 0xe730 (59184) - FFMA R13, R13, R2, R23 ;
 Instr 3700 @ 0xe740 (59200) - FFMA R14, R8, R173.reuse, R14 ;
 Instr 3701 @ 0xe750 (59216) - HADD2.F32 R8, R11.H1_H1, -RZ.H0_H0 ;
 Instr 3702 @ 0xe760 (59232) - FFMA R15, R15, R2, R29 ;
 Instr 3703 @ 0xe770 (59248) - FFMA R13, R10, R173, R13 ;
 Instr 3704 @ 0xe780 (59264) - FFMA R15, R8, R173, R15 ;
 Instr 3705 @ 0xe790 (59280) - LDS.U.128 R8, [R170.X16+0x3300] ;
 Instr 3706 @ 0xe7a0 (59296) - FSETP.GEU.AND P5, PT, R12.reuse, c[0x0][0x210], PT ;
 Instr 3707 @ 0xe7b0 (59312) - HADD2.F32 R140, R4.H0_H0, -RZ.H0_H0 ;
 Instr 3708 @ 0xe7c0 (59328) - FSEL R12, R12, c[0x0][0x210], P5 ;
 Instr 3709 @ 0xe7d0 (59344) - FSETP.GEU.AND P5, PT, R13.reuse, c[0x0][0x210], PT ;
 Instr 3710 @ 0xe7e0 (59360) - FSEL R13, R13, c[0x0][0x210], P5 ;
 Instr 3711 @ 0xe7f0 (59376) - FSETP.GEU.AND P5, PT, R14.reuse, c[0x0][0x210], PT ;
 Instr 3712 @ 0xe800 (59392) - FSEL R14, R14, c[0x0][0x210], P5 ;
 Instr 3713 @ 0xe810 (59408) - FSETP.GEU.AND P5, PT, R15.reuse, c[0x0][0x210], PT ;
 Instr 3714 @ 0xe820 (59424) - HADD2.F32 R4, R4.H1_H1, -RZ.H0_H0 ;
 Instr 3715 @ 0xe830 (59440) - FSEL R15, R15, c[0x0][0x210], P5 ;
 Instr 3716 @ 0xe840 (59456) - FFMA R8, R8, R2, R19 ;
 Instr 3717 @ 0xe850 (59472) - FFMA R8, R140, R173, R8 ;
 Instr 3718 @ 0xe860 (59488) - FSETP.GEU.AND P5, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 3719 @ 0xe870 (59504) - FFMA R9, R9, R2.reuse, R20 ;
 Instr 3720 @ 0xe880 (59520) - FSEL R19, R8, c[0x0][0x210], P5 ;
 Instr 3721 @ 0xe890 (59536) - HADD2.F32 R8, R5.H0_H0, -RZ.H0_H0 ;
 Instr 3722 @ 0xe8a0 (59552) - FFMA R4, R4, R173, R9 ;
 Instr 3723 @ 0xe8b0 (59568) - FFMA R10, R10, R2, R25 ;
 Instr 3724 @ 0xe8c0 (59584) - FSETP.GEU.AND P5, PT, R4, c[0x0][0x210], PT ;
 Instr 3725 @ 0xe8d0 (59600) - FFMA R8, R8, R173, R10 ;
 Instr 3726 @ 0xe8e0 (59616) - FSEL R4, R4, c[0x0][0x210], P5 ;
 Instr 3727 @ 0xe8f0 (59632) - FSETP.GEU.AND P5, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 3728 @ 0xe900 (59648) - FSEL R20, R8, c[0x0][0x210], P5 ;
 Instr 3729 @ 0xe910 (59664) - HADD2.F32 R8, R5.H1_H1, -RZ.H0_H0 ;
 Instr 3730 @ 0xe920 (59680) - FFMA R11, R11, R2, R26 ;
 Instr 3731 @ 0xe930 (59696) - FFMA R8, R8, R173, R11 ;
 Instr 3732 @ 0xe940 (59712) - FSETP.GEU.AND P5, PT, R8.reuse, c[0x0][0x210], PT ;
 Instr 3733 @ 0xe950 (59728) - FSEL R5, R8, c[0x0][0x210], P5 ;
 Instr 3734 @ 0xe960 (59744) - LDS.U.128 R8, [R170.X16+0x3410] ;
 Instr 3735 @ 0xe970 (59760) - HADD2.F32 R26, R6.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 3736 @ 0xe980 (59776) - HADD2.F32 R6, R6.H1_H1, -RZ.H0_H0 ;
 Instr 3737 @ 0xe990 (59792) - FFMA R8, R8, R2, R21 ;
 Instr 3738 @ 0xe9a0 (59808) - FFMA R9, R9, R2.reuse, R23 ;
 Instr 3739 @ 0xe9b0 (59824) - FFMA R8, R26, R173.reuse, R8 ;
 Instr 3740 @ 0xe9c0 (59840) - HADD2.F32 R26, R7.H0_H0, -RZ.H0_H0 ;
 Instr 3741 @ 0xe9d0 (59856) - FFMA R6, R6, R173.reuse, R9 ;
 Instr 3742 @ 0xe9e0 (59872) - FSETP.GEU.AND P5, PT, R8, c[0x0][0x210], PT ;
 Instr 3743 @ 0xe9f0 (59888) - FFMA R10, R10, R2, R27 ;
 Instr 3744 @ 0xea00 (59904) - FSEL R8, R8, c[0x0][0x210], P5 ;
 Instr 3745 @ 0xea10 (59920) - FFMA R10, R26, R173, R10 ;
 Instr 3746 @ 0xea20 (59936) - FSETP.GEU.AND P5, PT, R6, c[0x0][0x210], PT ;
 Instr 3747 @ 0xea30 (59952) - FSEL R6, R6, c[0x0][0x210], P5 ;
 Instr 3748 @ 0xea40 (59968) - FSETP.GEU.AND P5, PT, R10.reuse, c[0x0][0x210], PT ;
 Instr 3749 @ 0xea50 (59984) - FSEL R9, R10, c[0x0][0x210], P5 ;
 Instr 3750 @ 0xea60 (60000) - HADD2.F32 R10, R7.H1_H1, -RZ.H0_H0 ;
 Instr 3751 @ 0xea70 (60016) - FFMA R11, R11, R2, R29 ;
 Instr 3752 @ 0xea80 (60032) - FFMA R10, R10, R173, R11 ;
 Instr 3753 @ 0xea90 (60048) - FSETP.GEU.AND P5, PT, R10.reuse, c[0x0][0x210], PT ;
 Instr 3754 @ 0xeaa0 (60064) - FSEL R7, R10, c[0x0][0x210], P5 ;
 Instr 3755 @ 0xeab0 (60080) - FSETP.GT.AND P5, PT, R16.reuse, c[0x0][0x220], PT ;
 Instr 3756 @ 0xeac0 (60096) - FSEL R16, R16, c[0x0][0x220], !P5 ;
 Instr 3757 @ 0xead0 (60112) - FSETP.GT.AND P5, PT, R17.reuse, c[0x0][0x220], PT ;
 Instr 3758 @ 0xeae0 (60128) - FSEL R17, R17, c[0x0][0x220], !P5 ;
 Instr 3759 @ 0xeaf0 (60144) - FSETP.GT.AND P5, PT, R18.reuse, c[0x0][0x220], PT ;
 Instr 3760 @ 0xeb00 (60160) - FSEL R18, R18, c[0x0][0x220], !P5 ;
 Instr 3761 @ 0xeb10 (60176) - FSETP.GT.AND P5, PT, R22.reuse, c[0x0][0x220], PT ;
 Instr 3762 @ 0xeb20 (60192) - FSEL R22, R22, c[0x0][0x220], !P5 ;
 Instr 3763 @ 0xeb30 (60208) - FSETP.GT.AND P5, PT, R24.reuse, c[0x0][0x220], PT ;
 Instr 3764 @ 0xeb40 (60224) - FSEL R24, R24, c[0x0][0x220], !P5 ;
 Instr 3765 @ 0xeb50 (60240) - FSETP.GT.AND P5, PT, R28.reuse, c[0x0][0x220], PT ;
 Instr 3766 @ 0xeb60 (60256) - FSEL R28, R28, c[0x0][0x220], !P5 ;
 Instr 3767 @ 0xeb70 (60272) - FSETP.GT.AND P5, PT, R30.reuse, c[0x0][0x220], PT ;
 Instr 3768 @ 0xeb80 (60288) - FSEL R30, R30, c[0x0][0x220], !P5 ;
 Instr 3769 @ 0xeb90 (60304) - FSETP.GT.AND P5, PT, R31.reuse, c[0x0][0x220], PT ;
 Instr 3770 @ 0xeba0 (60320) - FSEL R31, R31, c[0x0][0x220], !P5 ;
 Instr 3771 @ 0xebb0 (60336) - FSETP.GT.AND P5, PT, R32.reuse, c[0x0][0x220], PT ;
 Instr 3772 @ 0xebc0 (60352) - FSEL R32, R32, c[0x0][0x220], !P5 ;
 Instr 3773 @ 0xebd0 (60368) - FSETP.GT.AND P5, PT, R33.reuse, c[0x0][0x220], PT ;
 Instr 3774 @ 0xebe0 (60384) - FSEL R33, R33, c[0x0][0x220], !P5 ;
 Instr 3775 @ 0xebf0 (60400) - FSETP.GT.AND P5, PT, R34.reuse, c[0x0][0x220], PT ;
 Instr 3776 @ 0xec00 (60416) - FSEL R34, R34, c[0x0][0x220], !P5 ;
 Instr 3777 @ 0xec10 (60432) - FSETP.GT.AND P5, PT, R35.reuse, c[0x0][0x220], PT ;
 Instr 3778 @ 0xec20 (60448) - FSEL R35, R35, c[0x0][0x220], !P5 ;
 Instr 3779 @ 0xec30 (60464) - FSETP.GT.AND P5, PT, R132.reuse, c[0x0][0x220], PT ;
 Instr 3780 @ 0xec40 (60480) - FSEL R132, R132, c[0x0][0x220], !P5 ;
 Instr 3781 @ 0xec50 (60496) - FSETP.GT.AND P5, PT, R133.reuse, c[0x0][0x220], PT ;
 Instr 3782 @ 0xec60 (60512) - FSEL R133, R133, c[0x0][0x220], !P5 ;
 Instr 3783 @ 0xec70 (60528) - FSETP.GT.AND P5, PT, R134.reuse, c[0x0][0x220], PT ;
 Instr 3784 @ 0xec80 (60544) - FSEL R134, R134, c[0x0][0x220], !P5 ;
 Instr 3785 @ 0xec90 (60560) - FSETP.GT.AND P5, PT, R135.reuse, c[0x0][0x220], PT ;
 Instr 3786 @ 0xeca0 (60576) - FSEL R135, R135, c[0x0][0x220], !P5 ;
 Instr 3787 @ 0xecb0 (60592) - FSETP.GT.AND P5, PT, R136.reuse, c[0x0][0x220], PT ;
 Instr 3788 @ 0xecc0 (60608) - FSEL R136, R136, c[0x0][0x220], !P5 ;
 Instr 3789 @ 0xecd0 (60624) - FSETP.GT.AND P5, PT, R137.reuse, c[0x0][0x220], PT ;
 Instr 3790 @ 0xece0 (60640) - FSEL R137, R137, c[0x0][0x220], !P5 ;
 Instr 3791 @ 0xecf0 (60656) - FSETP.GT.AND P5, PT, R138.reuse, c[0x0][0x220], PT ;
 Instr 3792 @ 0xed00 (60672) - FSEL R138, R138, c[0x0][0x220], !P5 ;
 Instr 3793 @ 0xed10 (60688) - FSETP.GT.AND P5, PT, R139.reuse, c[0x0][0x220], PT ;
 Instr 3794 @ 0xed20 (60704) - FSEL R139, R139, c[0x0][0x220], !P5 ;
 Instr 3795 @ 0xed30 (60720) - FSETP.GT.AND P5, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 3796 @ 0xed40 (60736) - FSEL R12, R12, c[0x0][0x220], !P5 ;
 Instr 3797 @ 0xed50 (60752) - FSETP.GT.AND P5, PT, R13.reuse, c[0x0][0x220], PT ;
 Instr 3798 @ 0xed60 (60768) - FSEL R13, R13, c[0x0][0x220], !P5 ;
 Instr 3799 @ 0xed70 (60784) - FSETP.GT.AND P5, PT, R14.reuse, c[0x0][0x220], PT ;
 Instr 3800 @ 0xed80 (60800) - FSEL R14, R14, c[0x0][0x220], !P5 ;
 Instr 3801 @ 0xed90 (60816) - FSETP.GT.AND P5, PT, R15.reuse, c[0x0][0x220], PT ;
 Instr 3802 @ 0xeda0 (60832) - FSEL R15, R15, c[0x0][0x220], !P5 ;
 Instr 3803 @ 0xedb0 (60848) - FSETP.GT.AND P5, PT, R19.reuse, c[0x0][0x220], PT ;
 Instr 3804 @ 0xedc0 (60864) - FSEL R19, R19, c[0x0][0x220], !P5 ;
 Instr 3805 @ 0xedd0 (60880) - FSETP.GT.AND P5, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 3806 @ 0xede0 (60896) - FSEL R4, R4, c[0x0][0x220], !P5 ;
 Instr 3807 @ 0xedf0 (60912) - FSETP.GT.AND P5, PT, R20.reuse, c[0x0][0x220], PT ;
 Instr 3808 @ 0xee00 (60928) - FSEL R20, R20, c[0x0][0x220], !P5 ;
 Instr 3809 @ 0xee10 (60944) - FSETP.GT.AND P5, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 3810 @ 0xee20 (60960) - FSEL R5, R5, c[0x0][0x220], !P5 ;
 Instr 3811 @ 0xee30 (60976) - FSETP.GT.AND P5, PT, R8.reuse, c[0x0][0x220], PT ;
 Instr 3812 @ 0xee40 (60992) - FSEL R10, R8, c[0x0][0x220], !P5 ;
 Instr 3813 @ 0xee50 (61008) - FSETP.GT.AND P5, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 3814 @ 0xee60 (61024) - FSEL R6, R6, c[0x0][0x220], !P5 ;
 Instr 3815 @ 0xee70 (61040) - FSETP.GT.AND P5, PT, R9.reuse, c[0x0][0x220], PT ;
 Instr 3816 @ 0xee80 (61056) - FSEL R9, R9, c[0x0][0x220], !P5 ;
 Instr 3817 @ 0xee90 (61072) - FSETP.GT.AND P5, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 3818 @ 0xeea0 (61088) - F2F.F16.F32 R18, R18 ;
 Instr 3819 @ 0xeeb0 (61104) - FSEL R8, R7, c[0x0][0x220], !P5 ;
 Instr 3820 @ 0xeec0 (61120) - F2F.F16.F32 R7, R22 ;
 Instr 3821 @ 0xeed0 (61136) - F2F.F16.F32 R16, R16 ;
 Instr 3822 @ 0xeee0 (61152) - F2F.F16.F32 R17, R17 ;
 Instr 3823 @ 0xeef0 (61168) - F2F.F16.F32 R24, R24 ;
 Instr 3824 @ 0xef00 (61184) - F2F.F16.F32 R11, R28 ;
 Instr 3825 @ 0xef10 (61200) - F2F.F16.F32 R30, R30 ;
 Instr 3826 @ 0xef20 (61216) - F2F.F16.F32 R31, R31 ;
 Instr 3827 @ 0xef30 (61232) - @P1 IMAD.WIDE R26, R143, R174, c[0x0][0x170] ;
 Instr 3828 @ 0xef40 (61248) - F2F.F16.F32 R32, R32 ;
 Instr 3829 @ 0xef50 (61264) - F2F.F16.F32 R33, R33 ;
 Instr 3830 @ 0xef60 (61280) - F2F.F16.F32 R34, R34 ;
 Instr 3831 @ 0xef70 (61296) - F2F.F16.F32 R35, R35 ;
 Instr 3832 @ 0xef80 (61312) - F2F.F16.F32 R132, R132 ;
 Instr 3833 @ 0xef90 (61328) - F2F.F16.F32 R133, R133 ;
 Instr 3834 @ 0xefa0 (61344) - F2F.F16.F32 R134, R134 ;
 Instr 3835 @ 0xefb0 (61360) - F2F.F16.F32 R135, R135 ;
 Instr 3836 @ 0xefc0 (61376) - F2F.F16.F32 R21, R5 ;
 Instr 3837 @ 0xefd0 (61392) - F2F.F16.F32 R22, R4 ;
 Instr 3838 @ 0xefe0 (61408) - PRMT R5, R18, 0x5410, R7 ;
 Instr 3839 @ 0xeff0 (61424) - PRMT R7, R30, 0x5410, R31 ;
 Instr 3840 @ 0xf000 (61440) - F2F.F16.F32 R23, R6 ;
 Instr 3841 @ 0xf010 (61456) - PRMT R4, R16, 0x5410, R17 ;
 Instr 3842 @ 0xf020 (61472) - PRMT R6, R24, 0x5410, R11 ;
 Instr 3843 @ 0xf030 (61488) - F2F.F16.F32 R136, R136 ;
 Instr 3844 @ 0xf040 (61504) - @P0 IMAD.WIDE R16, R141, R174, c[0x0][0x170] ;
 Instr 3845 @ 0xf050 (61520) - F2F.F16.F32 R137, R137 ;
 Instr 3846 @ 0xf060 (61536) - @P1 STG.E.128.SYS [R26], R4 ;
 Instr 3847 @ 0xf070 (61552) - F2F.F16.F32 R138, R138 ;
 Instr 3848 @ 0xf080 (61568) - F2F.F16.F32 R139, R139 ;
 Instr 3849 @ 0xf090 (61584) - F2F.F16.F32 R12, R12 ;
 Instr 3850 @ 0xf0a0 (61600) - PRMT R4, R32, 0x5410, R33 ;
 Instr 3851 @ 0xf0b0 (61616) - F2F.F16.F32 R13, R13 ;
 Instr 3852 @ 0xf0c0 (61632) - PRMT R5, R34, 0x5410, R35 ;
 Instr 3853 @ 0xf0d0 (61648) - F2F.F16.F32 R14, R14 ;
 Instr 3854 @ 0xf0e0 (61664) - PRMT R6, R132, 0x5410, R133 ;
 Instr 3855 @ 0xf0f0 (61680) - F2F.F16.F32 R15, R15 ;
 Instr 3856 @ 0xf100 (61696) - PRMT R7, R134, 0x5410, R135 ;
 Instr 3857 @ 0xf110 (61712) - F2F.F16.F32 R19, R19 ;
 Instr 3858 @ 0xf120 (61728) - @P0 STG.E.128.SYS [R16], R4 ;
 Instr 3859 @ 0xf130 (61744) - F2F.F16.F32 R20, R20 ;
 Instr 3860 @ 0xf140 (61760) - @P4 IMAD.WIDE R24, R147, R174, c[0x0][0x170] ;
 Instr 3861 @ 0xf150 (61776) - F2F.F16.F32 R10, R10 ;
 Instr 3862 @ 0xf160 (61792) - F2F.F16.F32 R9, R9 ;
 Instr 3863 @ 0xf170 (61808) - PRMT R4, R136, 0x5410, R137 ;
 Instr 3864 @ 0xf180 (61824) - F2F.F16.F32 R8, R8 ;
 Instr 3865 @ 0xf190 (61840) - PRMT R5, R138, 0x5410, R139 ;
 Instr 3866 @ 0xf1a0 (61856) - PRMT R6, R12, 0x5410, R13 ;
 Instr 3867 @ 0xf1b0 (61872) - PRMT R7, R14, 0x5410, R15 ;
 Instr 3868 @ 0xf1c0 (61888) - @P3 IMAD.WIDE R28, R145, R174, c[0x0][0x170] ;
 Instr 3869 @ 0xf1d0 (61904) - @P4 STG.E.128.SYS [R24], R4 ;
 Instr 3870 @ 0xf1e0 (61920) - PRMT R4, R19, 0x5410, R22 ;
 Instr 3871 @ 0xf1f0 (61936) - PRMT R5, R20, 0x5410, R21 ;
 Instr 3872 @ 0xf200 (61952) - PRMT R6, R10, 0x5410, R23 ;
 Instr 3873 @ 0xf210 (61968) - PRMT R7, R9, 0x5410, R8 ;
 Instr 3874 @ 0xf220 (61984) - @P3 STG.E.128.SYS [R28], R4 ;
Basic block id 119 - num instructions 3
 Instr 3875 @ 0xf230 (62000) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 3876 @ 0xf240 (62016) - ISETP.LE.AND P0, PT, R174, c[0x0][0x290], PT ;
 Instr 3877 @ 0xf250 (62032) - @!P0 BRA 0xf980 ;
Basic block id 120 - num instructions 5
 Instr 3878 @ 0xf260 (62048) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
 Instr 3879 @ 0xf270 (62064) - USHF.L.U32 UR15, UR17, 0x7, URZ ;
 Instr 3880 @ 0xf280 (62080) - LEA R134, R171, R0, 0x7 ;
 Instr 3881 @ 0xf290 (62096) - USHF.R.S32.HI UR14, URZ, 0x1f, UR15 ;
 Instr 3882 @ 0xf2a0 (62112) - @!P0 BRA 0xf7a0 ;
Basic block id 121 - num instructions 7
 Instr 3883 @ 0xf2b0 (62128) - IMAD.SHL.U32 R133, R134, 0x10, RZ ;
 Instr 3884 @ 0xf2c0 (62144) - MOV R136, RZ ;
 Instr 3885 @ 0xf2d0 (62160) - USHF.L.U64.HI UR9, UR15, 0x4, UR14 ;
 Instr 3886 @ 0xf2e0 (62176) - USHF.L.U32 UR8, UR15, 0x4, URZ ;
 Instr 3887 @ 0xf2f0 (62192) - SHF.R.S32.HI R132, RZ, 0x1f, R133 ;
 Instr 3888 @ 0xf300 (62208) - USHF.L.U64.HI UR7, UR15, 0x7, UR14 ;
 Instr 3889 @ 0xf310 (62224) - USHF.L.U32 UR6, UR15, 0x7, URZ ;
Basic block id 122 - num instructions 72
 Instr 3890 @ 0xf320 (62240) - SHF.R.S32.HI R5, RZ, 0x1f, R136 ;
 Instr 3891 @ 0xf330 (62256) - USHF.L.U32 UR4, UR15, 0x5, URZ ;
 Instr 3892 @ 0xf340 (62272) - MOV R6, UR12 ;
 Instr 3893 @ 0xf350 (62288) - USHF.L.U64.HI UR5, UR15, 0x5, UR14 ;
 Instr 3894 @ 0xf360 (62304) - MOV R9, UR11 ;
 Instr 3895 @ 0xf370 (62320) - IMAD R5, R5, c[0x0][0x2a0], RZ ;
 Instr 3896 @ 0xf380 (62336) - MOV R7, UR13 ;
 Instr 3897 @ 0xf390 (62352) - MOV R8, R6 ;
 Instr 3898 @ 0xf3a0 (62368) - IMAD R5, R136.reuse, c[0x0][0x2a4], R5 ;
 Instr 3899 @ 0xf3b0 (62384) - IMAD.WIDE.U32 R6, R136, c[0x0][0x2a0], R8 ;
 Instr 3900 @ 0xf3c0 (62400) - IADD3 R5, R7, R5, RZ ;
 Instr 3901 @ 0xf3d0 (62416) - IADD3 R6, P1, P0, R133, UR6, R6 ;
 Instr 3902 @ 0xf3e0 (62432) - IADD3.X R4, R132, UR7, R5, P1, P0 ;
 Instr 3903 @ 0xf3f0 (62448) - IADD3 R6, P0, R6, c[0x0][0x2a8], RZ ;
 Instr 3904 @ 0xf400 (62464) - IADD3.X R7, R4, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 3905 @ 0xf410 (62480) - IADD3 R4, P0, R6, UR4, RZ ;
 Instr 3906 @ 0xf420 (62496) - IADD3.X R5, R7, UR5, RZ, P0, !PT ;
 Instr 3907 @ 0xf430 (62512) - IADD3 R140, P0, R4, UR4, RZ ;
 Instr 3908 @ 0xf440 (62528) - LDG.E.128.STRONG.GPU R32, [R6] ;
 Instr 3909 @ 0xf450 (62544) - MOV R28, R6 ;
 Instr 3910 @ 0xf460 (62560) - IADD3.X R141, R5, UR5, RZ, P0, !PT ;
 Instr 3911 @ 0xf470 (62576) - IADD3 R138, P0, R140, UR4, RZ ;
 Instr 3912 @ 0xf480 (62592) - LDG.E.128.STRONG.GPU R24, [R4] ;
 Instr 3913 @ 0xf490 (62608) - MOV R29, R7 ;
 Instr 3914 @ 0xf4a0 (62624) - IADD3.X R139, R141, UR5, RZ, P0, !PT ;
 Instr 3915 @ 0xf4b0 (62640) - MOV R20, R4 ;
 Instr 3916 @ 0xf4c0 (62656) - LDG.E.128.STRONG.GPU R16, [R140] ;
 Instr 3917 @ 0xf4d0 (62672) - MOV R21, R5 ;
 Instr 3918 @ 0xf4e0 (62688) - MOV R12, R140 ;
 Instr 3919 @ 0xf4f0 (62704) - LDG.E.128.STRONG.GPU R28, [R28.64+UR8] ;
 Instr 3920 @ 0xf500 (62720) - MOV R13, R141 ;
 Instr 3921 @ 0xf510 (62736) - MOV R4, R138 ;
 Instr 3922 @ 0xf520 (62752) - LDG.E.128.STRONG.GPU R8, [R138] ;
 Instr 3923 @ 0xf530 (62768) - MOV R5, R139 ;
 Instr 3924 @ 0xf540 (62784) - LDG.E.128.STRONG.GPU R20, [R20.64+UR8] ;
 Instr 3925 @ 0xf550 (62800) - LDG.E.128.STRONG.GPU R12, [R12.64+UR8] ;
 Instr 3926 @ 0xf560 (62816) - LDG.E.128.STRONG.GPU R4, [R4.64+UR8] ;
 Instr 3927 @ 0xf570 (62832) - IADD3 R136, R136, 0x1, RZ ;
 Instr 3928 @ 0xf580 (62848) - ISETP.GE.AND P0, PT, R136, R175, PT ;
 Instr 3929 @ 0xf590 (62864) - FADD R36, R32, R36 ;
 Instr 3930 @ 0xf5a0 (62880) - FADD R37, R33, R37 ;
 Instr 3931 @ 0xf5b0 (62896) - FADD R38, R34, R38 ;
 Instr 3932 @ 0xf5c0 (62912) - FADD R39, R35, R39 ;
 Instr 3933 @ 0xf5d0 (62928) - FADD R44, R24, R44 ;
 Instr 3934 @ 0xf5e0 (62944) - FADD R45, R25, R45 ;
 Instr 3935 @ 0xf5f0 (62960) - FADD R46, R26, R46 ;
 Instr 3936 @ 0xf600 (62976) - FADD R47, R27, R47 ;
 Instr 3937 @ 0xf610 (62992) - FADD R40, R28, R40 ;
 Instr 3938 @ 0xf620 (63008) - FADD R41, R29, R41 ;
 Instr 3939 @ 0xf630 (63024) - FADD R42, R30, R42 ;
 Instr 3940 @ 0xf640 (63040) - FADD R43, R31, R43 ;
 Instr 3941 @ 0xf650 (63056) - FADD R48, R20, R48 ;
 Instr 3942 @ 0xf660 (63072) - FADD R49, R21, R49 ;
 Instr 3943 @ 0xf670 (63088) - FADD R50, R22, R50 ;
 Instr 3944 @ 0xf680 (63104) - FADD R51, R23, R51 ;
 Instr 3945 @ 0xf690 (63120) - FADD R52, R16, R52 ;
 Instr 3946 @ 0xf6a0 (63136) - FADD R53, R17, R53 ;
 Instr 3947 @ 0xf6b0 (63152) - FADD R54, R18, R54 ;
 Instr 3948 @ 0xf6c0 (63168) - FADD R55, R19, R55 ;
 Instr 3949 @ 0xf6d0 (63184) - FADD R56, R12, R56 ;
 Instr 3950 @ 0xf6e0 (63200) - FADD R57, R13, R57 ;
 Instr 3951 @ 0xf6f0 (63216) - FADD R58, R14, R58 ;
 Instr 3952 @ 0xf700 (63232) - FADD R59, R15, R59 ;
 Instr 3953 @ 0xf710 (63248) - FADD R60, R8, R60 ;
 Instr 3954 @ 0xf720 (63264) - FADD R61, R9, R61 ;
 Instr 3955 @ 0xf730 (63280) - FADD R62, R10, R62 ;
 Instr 3956 @ 0xf740 (63296) - FADD R63, R11, R63 ;
 Instr 3957 @ 0xf750 (63312) - FADD R64, R4, R64 ;
 Instr 3958 @ 0xf760 (63328) - FADD R65, R5, R65 ;
 Instr 3959 @ 0xf770 (63344) - FADD R66, R6, R66 ;
 Instr 3960 @ 0xf780 (63360) - FADD R67, R7, R67 ;
 Instr 3961 @ 0xf790 (63376) - @!P0 BRA 0xf320 ;
Basic block id 123 - num instructions 1
 Instr 3962 @ 0xf7a0 (63392) - @P2 BRA 0xf980 ;
Basic block id 124 - num instructions 29
 Instr 3963 @ 0xf7b0 (63408) - ULEA UR5, UP3, UR15, UR12, 0x7 ;
 Instr 3964 @ 0xf7c0 (63424) - USHF.L.U64.HI UR7, UR15, 0x4, UR14 ;
 Instr 3965 @ 0xf7d0 (63440) - ULEA.HI.X UR4, UR15, UR11, UR14, 0x7, UP3 ;
 Instr 3966 @ 0xf7e0 (63456) - IMAD.U32 R4, RZ, RZ, UR5 ;
 Instr 3967 @ 0xf7f0 (63472) - USHF.L.U64.HI UR5, UR15, 0x5, UR14 ;
 Instr 3968 @ 0xf800 (63488) - USHF.L.U32 UR6, UR15, 0x4, URZ ;
 Instr 3969 @ 0xf810 (63504) - IMAD.U32 R5, RZ, RZ, UR4 ;
 Instr 3970 @ 0xf820 (63520) - USHF.L.U32 UR4, UR15, 0x5, URZ ;
 Instr 3971 @ 0xf830 (63536) - IMAD.WIDE R4, R134, 0x10, R4 ;
 Instr 3972 @ 0xf840 (63552) - IADD3 R4, P0, R4, c[0x0][0x2a8], RZ ;
 Instr 3973 @ 0xf850 (63568) - IADD3.X R5, R5, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 3974 @ 0xf860 (63584) - IADD3 R10, P0, R4, UR4, RZ ;
 Instr 3975 @ 0xf870 (63600) - IADD3.X R11, R5, UR5, RZ, P0, !PT ;
 Instr 3976 @ 0xf880 (63616) - STG.E.128.SYS [R4], R36 ;
 Instr 3977 @ 0xf890 (63632) - IADD3 R8, P0, R10, UR4, RZ ;
 Instr 3978 @ 0xf8a0 (63648) - STG.E.128.SYS [R4.64+UR6], R40 ;
 Instr 3979 @ 0xf8b0 (63664) - IADD3.X R9, R11, UR5, RZ, P0, !PT ;
 Instr 3980 @ 0xf8c0 (63680) - IADD3 R6, P0, R8, UR4, RZ ;
 Instr 3981 @ 0xf8d0 (63696) - STG.E.128.SYS [R10], R44 ;
 Instr 3982 @ 0xf8e0 (63712) - IADD3.X R7, R9, UR5, RZ, P0, !PT ;
 Instr 3983 @ 0xf8f0 (63728) - IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 3984 @ 0xf900 (63744) - IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 3985 @ 0xf910 (63760) - STG.E.128.SYS [R4.64+UR6], R48 ;
 Instr 3986 @ 0xf920 (63776) - STG.E.128.SYS [R8], R52 ;
 Instr 3987 @ 0xf930 (63792) - IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 3988 @ 0xf940 (63808) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 3989 @ 0xf950 (63824) - STG.E.128.SYS [R4.64+UR6], R56 ;
 Instr 3990 @ 0xf960 (63840) - STG.E.128.SYS [R6], R60 ;
 Instr 3991 @ 0xf970 (63856) - STG.E.128.SYS [R6.64+UR6], R64 ;
Basic block id 125 - num instructions 1
 Instr 3992 @ 0xf980 (63872) - @!P2 BRA 0x11510 ;
Basic block id 126 - num instructions 440
 Instr 3993 @ 0xf990 (63888) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 3994 @ 0xf9a0 (63904) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 3995 @ 0xf9b0 (63920) - IADD3 R7, R168.reuse, 0x28, RZ ;
 Instr 3996 @ 0xf9c0 (63936) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 3997 @ 0xf9d0 (63952) - IADD3 R15, R168.reuse, 0x30, RZ ;
 Instr 3998 @ 0xf9e0 (63968) - CS2R R18, SRZ ;
 Instr 3999 @ 0xf9f0 (63984) - IADD3 R5, R168.reuse, 0x20, RZ ;
 Instr 4000 @ 0xfa00 (64000) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 4001 @ 0xfa10 (64016) - IADD3 R13, R168, 0x38, RZ ;
 Instr 4002 @ 0xfa20 (64032) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 4003 @ 0xfa30 (64048) - @P0 IMAD.HI.U32 R16, R7, c[0x0][0x3d8], RZ ;
 Instr 4004 @ 0xfa40 (64064) - ISETP.GE.AND P3, PT, R169, R208, PT ;
 Instr 4005 @ 0xfa50 (64080) - @P0 IMAD.HI.U32 R11, R15.reuse, c[0x0][0x3d8], RZ ;
 Instr 4006 @ 0xfa60 (64096) - @P0 SHF.R.U32.HI R16, RZ, c[0x0][0x3dc], R16 ;
 Instr 4007 @ 0xfa70 (64112) - ISETP.LT.AND P4, PT, R15, c[0x0][0x3c4], !P3 ;
 Instr 4008 @ 0xfa80 (64128) - @P0 IMAD.HI.U32 R17, R5, c[0x0][0x3d8], RZ ;
 Instr 4009 @ 0xfa90 (64144) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3dc], R11 ;
 Instr 4010 @ 0xfaa0 (64160) - ISETP.LT.AND P5, PT, R7, c[0x0][0x3c4], !P3 ;
 Instr 4011 @ 0xfab0 (64176) - @P0 IMAD.HI.U32 R9, R13, c[0x0][0x3d8], RZ ;
 Instr 4012 @ 0xfac0 (64192) - @P0 SHF.R.U32.HI R17, RZ, c[0x0][0x3dc], R17 ;
 Instr 4013 @ 0xfad0 (64208) - ISETP.LT.AND P6, PT, R5, c[0x0][0x3c4], !P3 ;
 Instr 4014 @ 0xfae0 (64224) - @P0 IMAD.MOV R12, RZ, RZ, -R16 ;
 Instr 4015 @ 0xfaf0 (64240) - @P0 SHF.R.U32.HI R9, RZ, c[0x0][0x3dc], R9 ;
 Instr 4016 @ 0xfb00 (64256) - @P0 IMAD.MOV R10, RZ, RZ, -R11 ;
 Instr 4017 @ 0xfb10 (64272) - ISETP.LT.AND P3, PT, R13, c[0x0][0x3c4], !P3 ;
 Instr 4018 @ 0xfb20 (64288) - @P0 IMAD R6, R12, c[0x0][0x3c8], R7 ;
 Instr 4019 @ 0xfb30 (64304) - @P0 IMAD R20, R10, c[0x0][0x3c8], R15 ;
 Instr 4020 @ 0xfb40 (64320) - @P0 IMAD.MOV.U32 R15, RZ, RZ, R11 ;
 Instr 4021 @ 0xfb50 (64336) - @P0 IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 4022 @ 0xfb60 (64352) - @P0 IMAD.MOV R8, RZ, RZ, -R9 ;
 Instr 4023 @ 0xfb70 (64368) - @P1 IMAD.HI.U32 R11, R6, c[0x0][0x3e0], RZ ;
 Instr 4024 @ 0xfb80 (64384) - @P0 IMAD R4, R14, c[0x0][0x3c8], R5 ;
 Instr 4025 @ 0xfb90 (64400) - @P1 SHF.R.U32.HI R11, RZ, c[0x0][0x3e4], R11 ;
 Instr 4026 @ 0xfba0 (64416) - @P0 IMAD R18, R8, c[0x0][0x3c8], R13 ;
 Instr 4027 @ 0xfbb0 (64432) - @P0 IMAD.MOV.U32 R7, RZ, RZ, R16 ;
 Instr 4028 @ 0xfbc0 (64448) - @P0 IMAD.MOV.U32 R5, RZ, RZ, R17 ;
 Instr 4029 @ 0xfbd0 (64464) - @P0 IMAD.MOV.U32 R13, RZ, RZ, R9 ;
 Instr 4030 @ 0xfbe0 (64480) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 4031 @ 0xfbf0 (64496) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 4032 @ 0xfc00 (64512) - @P1 IMAD.MOV R9, RZ, RZ, -R11 ;
 Instr 4033 @ 0xfc10 (64528) - IMAD R8, R169, c[0x0][0x254], RZ ;
 Instr 4034 @ 0xfc20 (64544) - @P1 IMAD R12, R9, c[0x0][0x3cc], R6 ;
 Instr 4035 @ 0xfc30 (64560) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 4036 @ 0xfc40 (64576) - @P1 IMAD.MOV.U32 R6, RZ, RZ, R11 ;
 Instr 4037 @ 0xfc50 (64592) - @P0 IMAD.HI.U32 R10, R12, c[0x0][0x3e8], RZ ;
 Instr 4038 @ 0xfc60 (64608) - IMAD R7, R7, c[0x0][0x244], R8 ;
 Instr 4039 @ 0xfc70 (64624) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3ec], R10 ;
 Instr 4040 @ 0xfc80 (64640) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 4041 @ 0xfc90 (64656) - IMAD R7, R6, c[0x0][0x248], R7 ;
 Instr 4042 @ 0xfca0 (64672) - @P0 IMAD.MOV R9, RZ, RZ, -R10 ;
 Instr 4043 @ 0xfcb0 (64688) - IMAD R5, R5, c[0x0][0x244], R8 ;
 Instr 4044 @ 0xfcc0 (64704) - @P0 IMAD R14, R9, c[0x0][0x1b4], R12 ;
 Instr 4045 @ 0xfcd0 (64720) - @P0 IMAD.MOV.U32 R12, RZ, RZ, R10 ;
 Instr 4046 @ 0xfce0 (64736) - @P1 IMAD.HI.U32 R10, R4, c[0x0][0x3e0], RZ ;
 Instr 4047 @ 0xfcf0 (64752) - IMAD R7, R12, c[0x0][0x24c], R7 ;
 Instr 4048 @ 0xfd00 (64768) - @P1 SHF.R.U32.HI R10, RZ, c[0x0][0x3e4], R10 ;
 Instr 4049 @ 0xfd10 (64784) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 4050 @ 0xfd20 (64800) - IMAD R7, R14, c[0x0][0x250], R7 ;
 Instr 4051 @ 0xfd30 (64816) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 4052 @ 0xfd40 (64832) - SEL R25, R7, 0xffffffff, P5 ;
 Instr 4053 @ 0xfd50 (64848) - @P1 IMAD.MOV R7, RZ, RZ, -R10 ;
 Instr 4054 @ 0xfd60 (64864) - @P1 IMAD R11, R7, c[0x0][0x3cc], R4 ;
 Instr 4055 @ 0xfd70 (64880) - @P1 IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 4056 @ 0xfd80 (64896) - @P0 IMAD.HI.U32 R7, R11, c[0x0][0x3e8], RZ ;
 Instr 4057 @ 0xfd90 (64912) - IMAD R4, R4, c[0x0][0x248], R5 ;
 Instr 4058 @ 0xfda0 (64928) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3ec], R7 ;
 Instr 4059 @ 0xfdb0 (64944) - @P0 IMAD.MOV R6, RZ, RZ, -R7 ;
 Instr 4060 @ 0xfdc0 (64960) - @P0 IMAD R9, R6, c[0x0][0x1b4], R11 ;
 Instr 4061 @ 0xfdd0 (64976) - @P0 IMAD.MOV.U32 R11, RZ, RZ, R7 ;
 Instr 4062 @ 0xfde0 (64992) - @P1 IMAD.HI.U32 R6, R20, c[0x0][0x3e0], RZ ;
 Instr 4063 @ 0xfdf0 (65008) - IMAD R4, R11, c[0x0][0x24c], R4 ;
 Instr 4064 @ 0xfe00 (65024) - @P1 SHF.R.U32.HI R6, RZ, c[0x0][0x3e4], R6 ;
 Instr 4065 @ 0xfe10 (65040) - IMAD R4, R9, c[0x0][0x250], R4 ;
 Instr 4066 @ 0xfe20 (65056) - @P1 IMAD.MOV R7, RZ, RZ, -R6 ;
 Instr 4067 @ 0xfe30 (65072) - SEL R27, R4, 0xffffffff, P6 ;
 Instr 4068 @ 0xfe40 (65088) - @P1 IMAD.HI.U32 R4, R18, c[0x0][0x3e0], RZ ;
 Instr 4069 @ 0xfe50 (65104) - @P1 IMAD R19, R7, c[0x0][0x3cc], R20 ;
 Instr 4070 @ 0xfe60 (65120) - @P1 SHF.R.U32.HI R4, RZ, c[0x0][0x3e4], R4 ;
 Instr 4071 @ 0xfe70 (65136) - @P1 IMAD.MOV.U32 R20, RZ, RZ, R6 ;
 Instr 4072 @ 0xfe80 (65152) - CS2R R6, SRZ ;
 Instr 4073 @ 0xfe90 (65168) - @P1 IMAD.MOV R5, RZ, RZ, -R4 ;
 Instr 4074 @ 0xfea0 (65184) - @P1 IMAD R14, R5, c[0x0][0x3cc], R18 ;
 Instr 4075 @ 0xfeb0 (65200) - @P1 IMAD.MOV.U32 R18, RZ, RZ, R4 ;
 Instr 4076 @ 0xfec0 (65216) - ISETP.GE.AND P1, PT, R27, RZ, PT ;
 Instr 4077 @ 0xfed0 (65232) - CS2R R4, SRZ ;
 Instr 4078 @ 0xfee0 (65248) - @P1 IMAD.WIDE R22, R27, R174, c[0x0][0x178] ;
 Instr 4079 @ 0xfef0 (65264) - @P1 LDG.E.128.SYS R4, [R22] ;
 Instr 4080 @ 0xff00 (65280) - @P0 IMAD.HI.U32 R16, R19, c[0x0][0x3e8], RZ ;
 Instr 4081 @ 0xff10 (65296) - STS.64 [R3], R36 ;
 Instr 4082 @ 0xff20 (65312) - @P0 IMAD.HI.U32 R11, R14, c[0x0][0x3e8], RZ ;
 Instr 4083 @ 0xff30 (65328) - @P0 SHF.R.U32.HI R16, RZ, c[0x0][0x3ec], R16 ;
 Instr 4084 @ 0xff40 (65344) - STS.64 [R3+0x10], R40 ;
 Instr 4085 @ 0xff50 (65360) - IMAD.MOV.U32 R17, RZ, RZ, RZ ;
 Instr 4086 @ 0xff60 (65376) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3ec], R11 ;
 Instr 4087 @ 0xff70 (65392) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 4088 @ 0xff80 (65408) - STS.64 [R3+0x1100], R38 ;
 Instr 4089 @ 0xff90 (65424) - @P0 IMAD.MOV R10, RZ, RZ, -R16 ;
 Instr 4090 @ 0xffa0 (65440) - @P0 IMAD.MOV R9, RZ, RZ, -R11 ;
 Instr 4091 @ 0xffb0 (65456) - STS.64 [R3+0x1110], R42 ;
 Instr 4092 @ 0xffc0 (65472) - @P0 IMAD R17, R10, c[0x0][0x1b4], R19 ;
 Instr 4093 @ 0xffd0 (65488) - @P0 IMAD R12, R9, c[0x0][0x1b4], R14 ;
 Instr 4094 @ 0xffe0 (65504) - STS.64 [R3+0x40], R44 ;
 Instr 4095 @ 0xfff0 (65520) - @P0 IMAD.MOV.U32 R19, RZ, RZ, R16 ;
 Instr 4096 @ 0x10000 (65536) - @P0 IMAD.MOV.U32 R14, RZ, RZ, R11 ;
 Instr 4097 @ 0x10010 (65552) - ISETP.GE.AND P0, PT, R25, RZ, PT ;
 Instr 4098 @ 0x10020 (65568) - IMAD R13, R13, c[0x0][0x244], R8.reuse ;
 Instr 4099 @ 0x10030 (65584) - STS.64 [R3+0x50], R48 ;
 Instr 4100 @ 0x10040 (65600) - IMAD R15, R15, c[0x0][0x244], R8 ;
 Instr 4101 @ 0x10050 (65616) - IMAD R13, R18, c[0x0][0x248], R13 ;
 Instr 4102 @ 0x10060 (65632) - STS.64 [R3+0x1140], R46 ;
 Instr 4103 @ 0x10070 (65648) - IMAD R20, R20, c[0x0][0x248], R15 ;
 Instr 4104 @ 0x10080 (65664) - IMAD R13, R14, c[0x0][0x24c], R13 ;
 Instr 4105 @ 0x10090 (65680) - STS.64 [R3+0x1150], R50 ;
 Instr 4106 @ 0x100a0 (65696) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 4107 @ 0x100b0 (65712) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 4108 @ 0x100c0 (65728) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 4109 @ 0x100d0 (65744) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 4110 @ 0x100e0 (65760) - @P0 IMAD.WIDE R14, R25, R174, c[0x0][0x178] ;
 Instr 4111 @ 0x100f0 (65776) - IMAD R20, R19, c[0x0][0x24c], R20 ;
 Instr 4112 @ 0x10100 (65792) - IMAD R12, R12, c[0x0][0x250], R13 ;
 Instr 4113 @ 0x10110 (65808) - @P0 LDG.E.128.SYS R8, [R14] ;
 Instr 4114 @ 0x10120 (65824) - IMAD R17, R17, c[0x0][0x250], R20 ;
 Instr 4115 @ 0x10130 (65840) - SEL R29, R12, 0xffffffff, P3 ;
 Instr 4116 @ 0x10140 (65856) - SEL R31, R17, 0xffffffff, P4 ;
 Instr 4117 @ 0x10150 (65872) - ISETP.GE.AND P3, PT, R29, RZ, PT ;
 Instr 4118 @ 0x10160 (65888) - ISETP.GE.AND P4, PT, R31, RZ, PT ;
 Instr 4119 @ 0x10170 (65904) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 4120 @ 0x10180 (65920) - CS2R R18, SRZ ;
 Instr 4121 @ 0x10190 (65936) - IMAD.MOV.U32 R17, RZ, RZ, RZ ;
 Instr 4122 @ 0x101a0 (65952) - CS2R R12, SRZ ;
 Instr 4123 @ 0x101b0 (65968) - CS2R R14, SRZ ;
 Instr 4124 @ 0x101c0 (65984) - @P3 IMAD.WIDE R34, R29, R174.reuse, c[0x0][0x178] ;
 Instr 4125 @ 0x101d0 (66000) - @P4 IMAD.WIDE R36, R31, R174, c[0x0][0x178] ;
 Instr 4126 @ 0x101e0 (66016) - STS.64 [R3+0x80], R52 ;
 Instr 4127 @ 0x101f0 (66032) - STS.64 [R3+0x90], R56 ;
 Instr 4128 @ 0x10200 (66048) - STS.64 [R3+0x1180], R54 ;
 Instr 4129 @ 0x10210 (66064) - STS.64 [R3+0x1190], R58 ;
 Instr 4130 @ 0x10220 (66080) - STS.64 [R3+0xc0], R60 ;
 Instr 4131 @ 0x10230 (66096) - STS.64 [R3+0xd0], R64 ;
 Instr 4132 @ 0x10240 (66112) - STS.64 [R3+0x11c0], R62 ;
 Instr 4133 @ 0x10250 (66128) - STS.64 [R3+0x11d0], R66 ;
 Instr 4134 @ 0x10260 (66144) - @P4 LDG.E.128.SYS R16, [R36] ;
 Instr 4135 @ 0x10270 (66160) - @P3 LDG.E.128.SYS R12, [R34] ;
 Instr 4136 @ 0x10280 (66176) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 4137 @ 0x10290 (66192) - LDS.U.128 R20, [R170.X16] ;
 Instr 4138 @ 0x102a0 (66208) - HADD2.F32 R33, R164.H0_H0, -RZ.H0_H0 ;
 Instr 4139 @ 0x102b0 (66224) - HADD2.F32 R30, R164.H1_H1, -RZ.H0_H0 ;
 Instr 4140 @ 0x102c0 (66240) - HADD2.F32 R37, R165.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4141 @ 0x102d0 (66256) - HADD2.F32 R36, R165.H1_H1, -RZ.H0_H0 ;
 Instr 4142 @ 0x102e0 (66272) - FFMA R20, R20, R2.reuse, R33 ;
 Instr 4143 @ 0x102f0 (66288) - FFMA R21, R21, R2.reuse, R30 ;
 Instr 4144 @ 0x10300 (66304) - FFMA R22, R22, R2, R37 ;
 Instr 4145 @ 0x10310 (66320) - FFMA R23, R23, R2, R36 ;
 Instr 4146 @ 0x10320 (66336) - HADD2.F32 R35, R166.H0_H0, -RZ.H0_H0 ;
 Instr 4147 @ 0x10330 (66352) - HADD2.F32 R24, R4.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4148 @ 0x10340 (66368) - HADD2.F32 R4, R4.H1_H1, -RZ.H0_H0 ;
 Instr 4149 @ 0x10350 (66384) - FFMA R24, R24, R173.reuse, R20 ;
 Instr 4150 @ 0x10360 (66400) - FFMA R4, R4, R173, R21 ;
 Instr 4151 @ 0x10370 (66416) - FSETP.GEU.AND P5, PT, R24.reuse, c[0x0][0x210], PT ;
 Instr 4152 @ 0x10380 (66432) - FSEL R24, R24, c[0x0][0x210], P5 ;
 Instr 4153 @ 0x10390 (66448) - FSETP.GEU.AND P5, PT, R4, c[0x0][0x210], PT ;
 Instr 4154 @ 0x103a0 (66464) - FSEL R26, R4, c[0x0][0x210], P5 ;
 Instr 4155 @ 0x103b0 (66480) - HADD2.F32 R4, R5.H0_H0, -RZ.H0_H0 ;
 Instr 4156 @ 0x103c0 (66496) - FFMA R4, R4, R173, R22 ;
 Instr 4157 @ 0x103d0 (66512) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4158 @ 0x103e0 (66528) - FSEL R28, R4, c[0x0][0x210], P5 ;
 Instr 4159 @ 0x103f0 (66544) - HADD2.F32 R4, R5.H1_H1, -RZ.H0_H0 ;
 Instr 4160 @ 0x10400 (66560) - FFMA R4, R4, R173, R23 ;
 Instr 4161 @ 0x10410 (66576) - LDS.U.128 R20, [R170.X16+0x110] ;
 Instr 4162 @ 0x10420 (66592) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4163 @ 0x10430 (66608) - FSEL R32, R4, c[0x0][0x210], P5 ;
 Instr 4164 @ 0x10440 (66624) - HADD2.F32 R4, R6.H0_H0, -RZ.H0_H0 ;
 Instr 4165 @ 0x10450 (66640) - HADD2.F32 R6, R6.H1_H1, -RZ.H0_H0 ;
 Instr 4166 @ 0x10460 (66656) - FFMA R20, R20, R2, R35 ;
 Instr 4167 @ 0x10470 (66672) - FFMA R4, R4, R173, R20 ;
 Instr 4168 @ 0x10480 (66688) - HADD2.F32 R20, R166.H1_H1, -RZ.H0_H0 ;
 Instr 4169 @ 0x10490 (66704) - FSETP.GEU.AND P5, PT, R4, c[0x0][0x210], PT ;
 Instr 4170 @ 0x104a0 (66720) - FFMA R21, R21, R2, R20 ;
 Instr 4171 @ 0x104b0 (66736) - FFMA R6, R6, R173, R21 ;
 Instr 4172 @ 0x104c0 (66752) - HADD2.F32 R21, R167.H0_H0, -RZ.H0_H0 ;
 Instr 4173 @ 0x104d0 (66768) - FSEL R34, R4, c[0x0][0x210], P5 ;
 Instr 4174 @ 0x104e0 (66784) - HADD2.F32 R4, R7.H0_H0, -RZ.H0_H0 ;
 Instr 4175 @ 0x104f0 (66800) - FSETP.GEU.AND P5, PT, R6, c[0x0][0x210], PT ;
 Instr 4176 @ 0x10500 (66816) - FFMA R22, R22, R2, R21 ;
 Instr 4177 @ 0x10510 (66832) - FFMA R4, R4, R173, R22 ;
 Instr 4178 @ 0x10520 (66848) - FSEL R38, R6, c[0x0][0x210], P5 ;
 Instr 4179 @ 0x10530 (66864) - HADD2.F32 R22, R167.H1_H1, -RZ.H0_H0 ;
 Instr 4180 @ 0x10540 (66880) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4181 @ 0x10550 (66896) - FSEL R39, R4, c[0x0][0x210], P5 ;
 Instr 4182 @ 0x10560 (66912) - HADD2.F32 R4, R7.H1_H1, -RZ.H0_H0 ;
 Instr 4183 @ 0x10570 (66928) - FFMA R23, R23, R2, R22 ;
 Instr 4184 @ 0x10580 (66944) - FFMA R23, R4, R173, R23 ;
 Instr 4185 @ 0x10590 (66960) - LDS.U.128 R4, [R170.X16+0x1100] ;
 Instr 4186 @ 0x105a0 (66976) - HADD2.F32 R40, R8.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4187 @ 0x105b0 (66992) - HADD2.F32 R8, R8.H1_H1, -RZ.H0_H0 ;
 Instr 4188 @ 0x105c0 (67008) - FSETP.GEU.AND P5, PT, R23.reuse, c[0x0][0x210], PT ;
 Instr 4189 @ 0x105d0 (67024) - FSEL R23, R23, c[0x0][0x210], P5 ;
 Instr 4190 @ 0x105e0 (67040) - FFMA R4, R4, R2, R33 ;
 Instr 4191 @ 0x105f0 (67056) - FFMA R5, R5, R2.reuse, R30 ;
 Instr 4192 @ 0x10600 (67072) - FFMA R40, R40, R173.reuse, R4 ;
 Instr 4193 @ 0x10610 (67088) - HADD2.F32 R4, R9.H0_H0, -RZ.H0_H0 ;
 Instr 4194 @ 0x10620 (67104) - FFMA R8, R8, R173.reuse, R5 ;
 Instr 4195 @ 0x10630 (67120) - FSETP.GEU.AND P5, PT, R40, c[0x0][0x210], PT ;
 Instr 4196 @ 0x10640 (67136) - FFMA R6, R6, R2, R37 ;
 Instr 4197 @ 0x10650 (67152) - FSEL R40, R40, c[0x0][0x210], P5 ;
 Instr 4198 @ 0x10660 (67168) - FFMA R4, R4, R173, R6 ;
 Instr 4199 @ 0x10670 (67184) - FSETP.GEU.AND P5, PT, R8, c[0x0][0x210], PT ;
 Instr 4200 @ 0x10680 (67200) - FSEL R8, R8, c[0x0][0x210], P5 ;
 Instr 4201 @ 0x10690 (67216) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4202 @ 0x106a0 (67232) - FSEL R41, R4, c[0x0][0x210], P5 ;
 Instr 4203 @ 0x106b0 (67248) - HADD2.F32 R4, R9.H1_H1, -RZ.H0_H0 ;
 Instr 4204 @ 0x106c0 (67264) - FFMA R7, R7, R2, R36 ;
 Instr 4205 @ 0x106d0 (67280) - FFMA R4, R4, R173, R7 ;
 Instr 4206 @ 0x106e0 (67296) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4207 @ 0x106f0 (67312) - FSEL R9, R4, c[0x0][0x210], P5 ;
 Instr 4208 @ 0x10700 (67328) - LDS.U.128 R4, [R170.X16+0x1210] ;
 Instr 4209 @ 0x10710 (67344) - HADD2.F32 R42, R10.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4210 @ 0x10720 (67360) - HADD2.F32 R10, R10.H1_H1, -RZ.H0_H0 ;
 Instr 4211 @ 0x10730 (67376) - FFMA R4, R4, R2, R35 ;
 Instr 4212 @ 0x10740 (67392) - FFMA R5, R5, R2.reuse, R20 ;
 Instr 4213 @ 0x10750 (67408) - FFMA R42, R42, R173.reuse, R4 ;
 Instr 4214 @ 0x10760 (67424) - HADD2.F32 R4, R11.H0_H0, -RZ.H0_H0 ;
 Instr 4215 @ 0x10770 (67440) - FFMA R10, R10, R173.reuse, R5 ;
 Instr 4216 @ 0x10780 (67456) - FSETP.GEU.AND P5, PT, R42, c[0x0][0x210], PT ;
 Instr 4217 @ 0x10790 (67472) - FFMA R6, R6, R2, R21 ;
 Instr 4218 @ 0x107a0 (67488) - FSEL R42, R42, c[0x0][0x210], P5 ;
 Instr 4219 @ 0x107b0 (67504) - FFMA R4, R4, R173, R6 ;
 Instr 4220 @ 0x107c0 (67520) - FSETP.GEU.AND P5, PT, R10, c[0x0][0x210], PT ;
 Instr 4221 @ 0x107d0 (67536) - FSEL R10, R10, c[0x0][0x210], P5 ;
 Instr 4222 @ 0x107e0 (67552) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4223 @ 0x107f0 (67568) - FSEL R43, R4, c[0x0][0x210], P5 ;
 Instr 4224 @ 0x10800 (67584) - HADD2.F32 R4, R11.H1_H1, -RZ.H0_H0 ;
 Instr 4225 @ 0x10810 (67600) - FFMA R7, R7, R2, R22 ;
 Instr 4226 @ 0x10820 (67616) - FFMA R4, R4, R173, R7 ;
 Instr 4227 @ 0x10830 (67632) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4228 @ 0x10840 (67648) - FSEL R11, R4, c[0x0][0x210], P5 ;
 Instr 4229 @ 0x10850 (67664) - LDS.U.128 R4, [R170.X16+0x2200] ;
 Instr 4230 @ 0x10860 (67680) - HADD2.F32 R44, R16.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4231 @ 0x10870 (67696) - HADD2.F32 R16, R16.H1_H1, -RZ.H0_H0 ;
 Instr 4232 @ 0x10880 (67712) - FFMA R4, R4, R2, R33 ;
 Instr 4233 @ 0x10890 (67728) - FFMA R5, R5, R2.reuse, R30 ;
 Instr 4234 @ 0x108a0 (67744) - FFMA R44, R44, R173.reuse, R4 ;
 Instr 4235 @ 0x108b0 (67760) - HADD2.F32 R4, R17.H0_H0, -RZ.H0_H0 ;
 Instr 4236 @ 0x108c0 (67776) - FFMA R16, R16, R173.reuse, R5 ;
 Instr 4237 @ 0x108d0 (67792) - FSETP.GEU.AND P5, PT, R44, c[0x0][0x210], PT ;
 Instr 4238 @ 0x108e0 (67808) - FFMA R6, R6, R2, R37 ;
 Instr 4239 @ 0x108f0 (67824) - FSEL R44, R44, c[0x0][0x210], P5 ;
 Instr 4240 @ 0x10900 (67840) - FFMA R4, R4, R173, R6 ;
 Instr 4241 @ 0x10910 (67856) - FSETP.GEU.AND P5, PT, R16, c[0x0][0x210], PT ;
 Instr 4242 @ 0x10920 (67872) - FSEL R16, R16, c[0x0][0x210], P5 ;
 Instr 4243 @ 0x10930 (67888) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4244 @ 0x10940 (67904) - FSEL R45, R4, c[0x0][0x210], P5 ;
 Instr 4245 @ 0x10950 (67920) - HADD2.F32 R4, R17.H1_H1, -RZ.H0_H0 ;
 Instr 4246 @ 0x10960 (67936) - FFMA R7, R7, R2, R36 ;
 Instr 4247 @ 0x10970 (67952) - FFMA R4, R4, R173, R7 ;
 Instr 4248 @ 0x10980 (67968) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4249 @ 0x10990 (67984) - FSEL R17, R4, c[0x0][0x210], P5 ;
 Instr 4250 @ 0x109a0 (68000) - LDS.U.128 R4, [R170.X16+0x2310] ;
 Instr 4251 @ 0x109b0 (68016) - HADD2.F32 R46, R18.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4252 @ 0x109c0 (68032) - HADD2.F32 R18, R18.H1_H1, -RZ.H0_H0 ;
 Instr 4253 @ 0x109d0 (68048) - FFMA R4, R4, R2, R35 ;
 Instr 4254 @ 0x109e0 (68064) - FFMA R5, R5, R2.reuse, R20 ;
 Instr 4255 @ 0x109f0 (68080) - FFMA R46, R46, R173.reuse, R4 ;
 Instr 4256 @ 0x10a00 (68096) - HADD2.F32 R4, R19.H0_H0, -RZ.H0_H0 ;
 Instr 4257 @ 0x10a10 (68112) - FFMA R18, R18, R173.reuse, R5 ;
 Instr 4258 @ 0x10a20 (68128) - FSETP.GEU.AND P5, PT, R46, c[0x0][0x210], PT ;
 Instr 4259 @ 0x10a30 (68144) - FFMA R6, R6, R2, R21 ;
 Instr 4260 @ 0x10a40 (68160) - FSEL R46, R46, c[0x0][0x210], P5 ;
 Instr 4261 @ 0x10a50 (68176) - FFMA R4, R4, R173, R6 ;
 Instr 4262 @ 0x10a60 (68192) - FSETP.GEU.AND P5, PT, R18, c[0x0][0x210], PT ;
 Instr 4263 @ 0x10a70 (68208) - FSEL R18, R18, c[0x0][0x210], P5 ;
 Instr 4264 @ 0x10a80 (68224) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4265 @ 0x10a90 (68240) - FSEL R47, R4, c[0x0][0x210], P5 ;
 Instr 4266 @ 0x10aa0 (68256) - HADD2.F32 R4, R19.H1_H1, -RZ.H0_H0 ;
 Instr 4267 @ 0x10ab0 (68272) - FFMA R7, R7, R2, R22 ;
 Instr 4268 @ 0x10ac0 (68288) - FFMA R4, R4, R173, R7 ;
 Instr 4269 @ 0x10ad0 (68304) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4270 @ 0x10ae0 (68320) - FSEL R19, R4, c[0x0][0x210], P5 ;
 Instr 4271 @ 0x10af0 (68336) - LDS.U.128 R4, [R170.X16+0x3300] ;
 Instr 4272 @ 0x10b00 (68352) - HADD2.F32 R48, R12.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4273 @ 0x10b10 (68368) - HADD2.F32 R12, R12.H1_H1, -RZ.H0_H0 ;
 Instr 4274 @ 0x10b20 (68384) - FFMA R4, R4, R2, R33 ;
 Instr 4275 @ 0x10b30 (68400) - FFMA R4, R48, R173, R4 ;
 Instr 4276 @ 0x10b40 (68416) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4277 @ 0x10b50 (68432) - FFMA R5, R5, R2.reuse, R30 ;
 Instr 4278 @ 0x10b60 (68448) - FSEL R33, R4, c[0x0][0x210], P5 ;
 Instr 4279 @ 0x10b70 (68464) - HADD2.F32 R4, R13.H0_H0, -RZ.H0_H0 ;
 Instr 4280 @ 0x10b80 (68480) - FFMA R12, R12, R173, R5 ;
 Instr 4281 @ 0x10b90 (68496) - FFMA R6, R6, R2, R37 ;
 Instr 4282 @ 0x10ba0 (68512) - FSETP.GEU.AND P5, PT, R12, c[0x0][0x210], PT ;
 Instr 4283 @ 0x10bb0 (68528) - FFMA R4, R4, R173, R6 ;
 Instr 4284 @ 0x10bc0 (68544) - FSEL R12, R12, c[0x0][0x210], P5 ;
 Instr 4285 @ 0x10bd0 (68560) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4286 @ 0x10be0 (68576) - FSEL R30, R4, c[0x0][0x210], P5 ;
 Instr 4287 @ 0x10bf0 (68592) - HADD2.F32 R4, R13.H1_H1, -RZ.H0_H0 ;
 Instr 4288 @ 0x10c00 (68608) - FFMA R7, R7, R2, R36 ;
 Instr 4289 @ 0x10c10 (68624) - FFMA R4, R4, R173, R7 ;
 Instr 4290 @ 0x10c20 (68640) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4291 @ 0x10c30 (68656) - FSEL R13, R4, c[0x0][0x210], P5 ;
 Instr 4292 @ 0x10c40 (68672) - LDS.U.128 R4, [R170.X16+0x3410] ;
 Instr 4293 @ 0x10c50 (68688) - HADD2.F32 R36, R14.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4294 @ 0x10c60 (68704) - HADD2.F32 R14, R14.H1_H1, -RZ.H0_H0 ;
 Instr 4295 @ 0x10c70 (68720) - FFMA R5, R5, R2, R20 ;
 Instr 4296 @ 0x10c80 (68736) - FFMA R4, R4, R2, R35 ;
 Instr 4297 @ 0x10c90 (68752) - FFMA R5, R14, R173.reuse, R5 ;
 Instr 4298 @ 0x10ca0 (68768) - HADD2.F32 R14, R15.H0_H0, -RZ.H0_H0 ;
 Instr 4299 @ 0x10cb0 (68784) - FFMA R4, R36, R173.reuse, R4 ;
 Instr 4300 @ 0x10cc0 (68800) - FFMA R6, R6, R2, R21 ;
 Instr 4301 @ 0x10cd0 (68816) - FSETP.GEU.AND P5, PT, R4, c[0x0][0x210], PT ;
 Instr 4302 @ 0x10ce0 (68832) - FFMA R6, R14, R173, R6 ;
 Instr 4303 @ 0x10cf0 (68848) - HADD2.F32 R14, R15.H1_H1, -RZ.H0_H0 ;
 Instr 4304 @ 0x10d00 (68864) - FSEL R4, R4, c[0x0][0x210], P5 ;
 Instr 4305 @ 0x10d10 (68880) - FFMA R7, R7, R2, R22 ;
 Instr 4306 @ 0x10d20 (68896) - FSETP.GEU.AND P5, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 4307 @ 0x10d30 (68912) - FSEL R5, R5, c[0x0][0x210], P5 ;
 Instr 4308 @ 0x10d40 (68928) - FFMA R7, R14, R173, R7 ;
 Instr 4309 @ 0x10d50 (68944) - FSETP.GEU.AND P5, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 4310 @ 0x10d60 (68960) - FSEL R6, R6, c[0x0][0x210], P5 ;
 Instr 4311 @ 0x10d70 (68976) - FSETP.GEU.AND P5, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 4312 @ 0x10d80 (68992) - FSEL R7, R7, c[0x0][0x210], P5 ;
 Instr 4313 @ 0x10d90 (69008) - FSETP.GT.AND P5, PT, R24.reuse, c[0x0][0x220], PT ;
 Instr 4314 @ 0x10da0 (69024) - FSEL R24, R24, c[0x0][0x220], !P5 ;
 Instr 4315 @ 0x10db0 (69040) - FSETP.GT.AND P5, PT, R26.reuse, c[0x0][0x220], PT ;
 Instr 4316 @ 0x10dc0 (69056) - FSEL R26, R26, c[0x0][0x220], !P5 ;
 Instr 4317 @ 0x10dd0 (69072) - FSETP.GT.AND P5, PT, R28.reuse, c[0x0][0x220], PT ;
 Instr 4318 @ 0x10de0 (69088) - FSEL R28, R28, c[0x0][0x220], !P5 ;
 Instr 4319 @ 0x10df0 (69104) - FSETP.GT.AND P5, PT, R32.reuse, c[0x0][0x220], PT ;
 Instr 4320 @ 0x10e00 (69120) - FSEL R32, R32, c[0x0][0x220], !P5 ;
 Instr 4321 @ 0x10e10 (69136) - FSETP.GT.AND P5, PT, R34.reuse, c[0x0][0x220], PT ;
 Instr 4322 @ 0x10e20 (69152) - FSEL R34, R34, c[0x0][0x220], !P5 ;
 Instr 4323 @ 0x10e30 (69168) - FSETP.GT.AND P5, PT, R38.reuse, c[0x0][0x220], PT ;
 Instr 4324 @ 0x10e40 (69184) - FSEL R38, R38, c[0x0][0x220], !P5 ;
 Instr 4325 @ 0x10e50 (69200) - FSETP.GT.AND P5, PT, R39.reuse, c[0x0][0x220], PT ;
 Instr 4326 @ 0x10e60 (69216) - FSEL R39, R39, c[0x0][0x220], !P5 ;
 Instr 4327 @ 0x10e70 (69232) - FSETP.GT.AND P5, PT, R23.reuse, c[0x0][0x220], PT ;
 Instr 4328 @ 0x10e80 (69248) - FSEL R23, R23, c[0x0][0x220], !P5 ;
 Instr 4329 @ 0x10e90 (69264) - FSETP.GT.AND P5, PT, R40.reuse, c[0x0][0x220], PT ;
 Instr 4330 @ 0x10ea0 (69280) - FSEL R40, R40, c[0x0][0x220], !P5 ;
 Instr 4331 @ 0x10eb0 (69296) - FSETP.GT.AND P5, PT, R8.reuse, c[0x0][0x220], PT ;
 Instr 4332 @ 0x10ec0 (69312) - FSEL R8, R8, c[0x0][0x220], !P5 ;
 Instr 4333 @ 0x10ed0 (69328) - FSETP.GT.AND P5, PT, R41.reuse, c[0x0][0x220], PT ;
 Instr 4334 @ 0x10ee0 (69344) - FSEL R41, R41, c[0x0][0x220], !P5 ;
 Instr 4335 @ 0x10ef0 (69360) - FSETP.GT.AND P5, PT, R9.reuse, c[0x0][0x220], PT ;
 Instr 4336 @ 0x10f00 (69376) - FSEL R9, R9, c[0x0][0x220], !P5 ;
 Instr 4337 @ 0x10f10 (69392) - FSETP.GT.AND P5, PT, R42.reuse, c[0x0][0x220], PT ;
 Instr 4338 @ 0x10f20 (69408) - FSEL R42, R42, c[0x0][0x220], !P5 ;
 Instr 4339 @ 0x10f30 (69424) - FSETP.GT.AND P5, PT, R10.reuse, c[0x0][0x220], PT ;
 Instr 4340 @ 0x10f40 (69440) - FSEL R10, R10, c[0x0][0x220], !P5 ;
 Instr 4341 @ 0x10f50 (69456) - FSETP.GT.AND P5, PT, R43.reuse, c[0x0][0x220], PT ;
 Instr 4342 @ 0x10f60 (69472) - FSEL R43, R43, c[0x0][0x220], !P5 ;
 Instr 4343 @ 0x10f70 (69488) - FSETP.GT.AND P5, PT, R11.reuse, c[0x0][0x220], PT ;
 Instr 4344 @ 0x10f80 (69504) - FSEL R11, R11, c[0x0][0x220], !P5 ;
 Instr 4345 @ 0x10f90 (69520) - FSETP.GT.AND P5, PT, R44.reuse, c[0x0][0x220], PT ;
 Instr 4346 @ 0x10fa0 (69536) - FSEL R44, R44, c[0x0][0x220], !P5 ;
 Instr 4347 @ 0x10fb0 (69552) - FSETP.GT.AND P5, PT, R16.reuse, c[0x0][0x220], PT ;
 Instr 4348 @ 0x10fc0 (69568) - FSEL R16, R16, c[0x0][0x220], !P5 ;
 Instr 4349 @ 0x10fd0 (69584) - FSETP.GT.AND P5, PT, R45.reuse, c[0x0][0x220], PT ;
 Instr 4350 @ 0x10fe0 (69600) - FSEL R45, R45, c[0x0][0x220], !P5 ;
 Instr 4351 @ 0x10ff0 (69616) - FSETP.GT.AND P5, PT, R17.reuse, c[0x0][0x220], PT ;
 Instr 4352 @ 0x11000 (69632) - FSEL R17, R17, c[0x0][0x220], !P5 ;
 Instr 4353 @ 0x11010 (69648) - FSETP.GT.AND P5, PT, R46.reuse, c[0x0][0x220], PT ;
 Instr 4354 @ 0x11020 (69664) - FSEL R46, R46, c[0x0][0x220], !P5 ;
 Instr 4355 @ 0x11030 (69680) - FSETP.GT.AND P5, PT, R18.reuse, c[0x0][0x220], PT ;
 Instr 4356 @ 0x11040 (69696) - FSEL R18, R18, c[0x0][0x220], !P5 ;
 Instr 4357 @ 0x11050 (69712) - FSETP.GT.AND P5, PT, R47.reuse, c[0x0][0x220], PT ;
 Instr 4358 @ 0x11060 (69728) - FSEL R47, R47, c[0x0][0x220], !P5 ;
 Instr 4359 @ 0x11070 (69744) - FSETP.GT.AND P5, PT, R19.reuse, c[0x0][0x220], PT ;
 Instr 4360 @ 0x11080 (69760) - FSEL R19, R19, c[0x0][0x220], !P5 ;
 Instr 4361 @ 0x11090 (69776) - FSETP.GT.AND P5, PT, R33.reuse, c[0x0][0x220], PT ;
 Instr 4362 @ 0x110a0 (69792) - FSEL R33, R33, c[0x0][0x220], !P5 ;
 Instr 4363 @ 0x110b0 (69808) - FSETP.GT.AND P5, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 4364 @ 0x110c0 (69824) - FSEL R12, R12, c[0x0][0x220], !P5 ;
 Instr 4365 @ 0x110d0 (69840) - FSETP.GT.AND P5, PT, R30.reuse, c[0x0][0x220], PT ;
 Instr 4366 @ 0x110e0 (69856) - FSEL R30, R30, c[0x0][0x220], !P5 ;
 Instr 4367 @ 0x110f0 (69872) - FSETP.GT.AND P5, PT, R13.reuse, c[0x0][0x220], PT ;
 Instr 4368 @ 0x11100 (69888) - FSEL R14, R13, c[0x0][0x220], !P5 ;
 Instr 4369 @ 0x11110 (69904) - FSETP.GT.AND P5, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 4370 @ 0x11120 (69920) - FSEL R4, R4, c[0x0][0x220], !P5 ;
 Instr 4371 @ 0x11130 (69936) - FSETP.GT.AND P5, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 4372 @ 0x11140 (69952) - FSEL R5, R5, c[0x0][0x220], !P5 ;
 Instr 4373 @ 0x11150 (69968) - FSETP.GT.AND P5, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 4374 @ 0x11160 (69984) - FSEL R6, R6, c[0x0][0x220], !P5 ;
 Instr 4375 @ 0x11170 (70000) - FSETP.GT.AND P5, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 4376 @ 0x11180 (70016) - F2F.F16.F32 R24, R24 ;
 Instr 4377 @ 0x11190 (70032) - FSEL R13, R7, c[0x0][0x220], !P5 ;
 Instr 4378 @ 0x111a0 (70048) - F2F.F16.F32 R7, R26 ;
 Instr 4379 @ 0x111b0 (70064) - F2F.F16.F32 R28, R28 ;
 Instr 4380 @ 0x111c0 (70080) - F2F.F16.F32 R15, R32 ;
 Instr 4381 @ 0x111d0 (70096) - F2F.F16.F32 R34, R34 ;
 Instr 4382 @ 0x111e0 (70112) - F2F.F16.F32 R21, R38 ;
 Instr 4383 @ 0x111f0 (70128) - F2F.F16.F32 R39, R39 ;
 Instr 4384 @ 0x11200 (70144) - F2F.F16.F32 R20, R23 ;
 Instr 4385 @ 0x11210 (70160) - @P1 IMAD.WIDE R50, R27, R174, c[0x0][0x170] ;
 Instr 4386 @ 0x11220 (70176) - F2F.F16.F32 R40, R40 ;
 Instr 4387 @ 0x11230 (70192) - F2F.F16.F32 R35, R8 ;
 Instr 4388 @ 0x11240 (70208) - F2F.F16.F32 R41, R41 ;
 Instr 4389 @ 0x11250 (70224) - F2F.F16.F32 R22, R9 ;
 Instr 4390 @ 0x11260 (70240) - F2F.F16.F32 R42, R42 ;
 Instr 4391 @ 0x11270 (70256) - F2F.F16.F32 R37, R10 ;
 Instr 4392 @ 0x11280 (70272) - F2F.F16.F32 R43, R43 ;
 Instr 4393 @ 0x11290 (70288) - F2F.F16.F32 R26, R11 ;
 Instr 4394 @ 0x112a0 (70304) - F2F.F16.F32 R49, R16 ;
 Instr 4395 @ 0x112b0 (70320) - F2F.F16.F32 R9, R4 ;
 Instr 4396 @ 0x112c0 (70336) - F2F.F16.F32 R10, R5 ;
 Instr 4397 @ 0x112d0 (70352) - PRMT R4, R24, 0x5410, R7 ;
 Instr 4398 @ 0x112e0 (70368) - PRMT R7, R39, 0x5410, R20 ;
 Instr 4399 @ 0x112f0 (70384) - F2F.F16.F32 R16, R6 ;
 Instr 4400 @ 0x11300 (70400) - PRMT R5, R28, 0x5410, R15 ;
 Instr 4401 @ 0x11310 (70416) - PRMT R6, R34, 0x5410, R21 ;
 Instr 4402 @ 0x11320 (70432) - F2F.F16.F32 R44, R44 ;
 Instr 4403 @ 0x11330 (70448) - F2F.F16.F32 R45, R45 ;
 Instr 4404 @ 0x11340 (70464) - @P1 STG.E.128.SYS [R50], R4 ;
 Instr 4405 @ 0x11350 (70480) - F2F.F16.F32 R32, R17 ;
 Instr 4406 @ 0x11360 (70496) - F2F.F16.F32 R46, R46 ;
 Instr 4407 @ 0x11370 (70512) - F2F.F16.F32 R23, R18 ;
 Instr 4408 @ 0x11380 (70528) - PRMT R4, R40, 0x5410, R35 ;
 Instr 4409 @ 0x11390 (70544) - F2F.F16.F32 R47, R47 ;
 Instr 4410 @ 0x113a0 (70560) - PRMT R5, R41, 0x5410, R22 ;
 Instr 4411 @ 0x113b0 (70576) - F2F.F16.F32 R8, R19 ;
 Instr 4412 @ 0x113c0 (70592) - PRMT R6, R42, 0x5410, R37 ;
 Instr 4413 @ 0x113d0 (70608) - PRMT R7, R43, 0x5410, R26 ;
 Instr 4414 @ 0x113e0 (70624) - @P0 IMAD.WIDE R18, R25, R174.reuse, c[0x0][0x170] ;
 Instr 4415 @ 0x113f0 (70640) - F2F.F16.F32 R33, R33 ;
 Instr 4416 @ 0x11400 (70656) - F2F.F16.F32 R12, R12 ;
 Instr 4417 @ 0x11410 (70672) - @P0 STG.E.128.SYS [R18], R4 ;
 Instr 4418 @ 0x11420 (70688) - F2F.F16.F32 R30, R30 ;
 Instr 4419 @ 0x11430 (70704) - F2F.F16.F32 R11, R14 ;
 Instr 4420 @ 0x11440 (70720) - F2F.F16.F32 R13, R13 ;
 Instr 4421 @ 0x11450 (70736) - @P4 IMAD.WIDE R14, R31, R174, c[0x0][0x170] ;
 Instr 4422 @ 0x11460 (70752) - PRMT R4, R44, 0x5410, R49 ;
 Instr 4423 @ 0x11470 (70768) - PRMT R5, R45, 0x5410, R32 ;
 Instr 4424 @ 0x11480 (70784) - PRMT R6, R46, 0x5410, R23 ;
 Instr 4425 @ 0x11490 (70800) - PRMT R7, R47, 0x5410, R8 ;
 Instr 4426 @ 0x114a0 (70816) - @P3 IMAD.WIDE R20, R29, R174, c[0x0][0x170] ;
 Instr 4427 @ 0x114b0 (70832) - @P4 STG.E.128.SYS [R14], R4 ;
 Instr 4428 @ 0x114c0 (70848) - PRMT R4, R33, 0x5410, R12 ;
 Instr 4429 @ 0x114d0 (70864) - PRMT R5, R30, 0x5410, R11 ;
 Instr 4430 @ 0x114e0 (70880) - PRMT R6, R9, 0x5410, R10 ;
 Instr 4431 @ 0x114f0 (70896) - PRMT R7, R16, 0x5410, R13 ;
 Instr 4432 @ 0x11500 (70912) - @P3 STG.E.128.SYS [R20], R4 ;
Basic block id 127 - num instructions 3
 Instr 4433 @ 0x11510 (70928) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 4434 @ 0x11520 (70944) - ISETP.LE.AND P0, PT, R174, c[0x0][0x290], PT ;
 Instr 4435 @ 0x11530 (70960) - @!P0 BRA 0x11d90 ;
Basic block id 128 - num instructions 5
 Instr 4436 @ 0x11540 (70976) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
 Instr 4437 @ 0x11550 (70992) - USHF.L.U32 UR9, UR17, 0x7, URZ ;
 Instr 4438 @ 0x11560 (71008) - LEA R36, R171, R0, 0x7 ;
 Instr 4439 @ 0x11570 (71024) - USHF.R.S32.HI UR8, URZ, 0x1f, UR9 ;
 Instr 4440 @ 0x11580 (71040) - @!P0 BRA 0x11bb0 ;
Basic block id 129 - num instructions 52
 Instr 4441 @ 0x11590 (71056) - UMOV UR18, UR12 ;
 Instr 4442 @ 0x115a0 (71072) - IMAD.SHL.U32 R52, R36, 0x10, RZ ;
 Instr 4443 @ 0x115b0 (71088) - UMOV UR19, UR11 ;
 Instr 4444 @ 0x115c0 (71104) - UIMAD.WIDE.U32 UR24, UR9, 0x120, UR18 ;
 Instr 4445 @ 0x115d0 (71120) - UIMAD.WIDE.U32 UR22, UR9, 0x130, UR18 ;
 Instr 4446 @ 0x115e0 (71136) - SHF.R.S32.HI R4, RZ, 0x1f, R52 ;
 Instr 4447 @ 0x115f0 (71152) - UIMAD UR15, UR8, 0x120, URZ ;
 Instr 4448 @ 0x11600 (71168) - UIMAD UR14, UR8, 0x130, URZ ;
 Instr 4449 @ 0x11610 (71184) - IMAD.U32 R9, RZ, RZ, UR25 ;
 Instr 4450 @ 0x11620 (71200) - UIMAD.WIDE.U32 UR20, UR9, 0x140, UR18 ;
 Instr 4451 @ 0x11630 (71216) - IADD3 R46, P0, R52.reuse, UR22, RZ ;
 Instr 4452 @ 0x11640 (71232) - IMAD.U32 R6, RZ, RZ, UR22 ;
 Instr 4453 @ 0x11650 (71248) - IADD3 R48, P1, R52, UR24, RZ ;
 Instr 4454 @ 0x11660 (71264) - IMAD.U32 R7, RZ, RZ, UR23 ;
 Instr 4455 @ 0x11670 (71280) - UIMAD.WIDE.U32 UR22, UR9, 0x150, UR18 ;
 Instr 4456 @ 0x11680 (71296) - IMAD.U32 R8, RZ, RZ, UR24 ;
 Instr 4457 @ 0x11690 (71312) - UIMAD UR7, UR8, 0x140, URZ ;
 Instr 4458 @ 0x116a0 (71328) - IADD3.X R49, R4.reuse, UR15, R9, P1, !PT ;
 Instr 4459 @ 0x116b0 (71344) - UIMAD UR6, UR8, 0x150, URZ ;
 Instr 4460 @ 0x116c0 (71360) - IADD3.X R47, R4, UR14, R7, P0, !PT ;
 Instr 4461 @ 0x116d0 (71376) - UIMAD.WIDE.U32 UR24, UR9, 0x160, UR18 ;
 Instr 4462 @ 0x116e0 (71392) - IMAD.U32 R9, RZ, RZ, UR21 ;
 Instr 4463 @ 0x116f0 (71408) - UIMAD.WIDE.U32 UR14, UR9, 0x170, UR18 ;
 Instr 4464 @ 0x11700 (71424) - IADD3 R44, P1, R52.reuse, UR20, RZ ;
 Instr 4465 @ 0x11710 (71440) - IMAD.U32 R7, RZ, RZ, UR23 ;
 Instr 4466 @ 0x11720 (71456) - IADD3 R42, P0, R52, UR22, RZ ;
 Instr 4467 @ 0x11730 (71472) - UIMAD.WIDE.U32 UR18, UR9, 0x110, UR18 ;
 Instr 4468 @ 0x11740 (71488) - IADD3.X R45, R4.reuse, UR7, R9, P1, !PT ;
 Instr 4469 @ 0x11750 (71504) - ULEA UR16, UP3, UR9, UR12, 0x8 ;
 Instr 4470 @ 0x11760 (71520) - IADD3.X R43, R4, UR6, R7, P0, !PT ;
 Instr 4471 @ 0x11770 (71536) - UIMAD UR5, UR8, 0x160, URZ ;
 Instr 4472 @ 0x11780 (71552) - IMAD.U32 R11, RZ, RZ, UR25 ;
 Instr 4473 @ 0x11790 (71568) - UIMAD UR4, UR8, 0x170, URZ ;
 Instr 4474 @ 0x117a0 (71584) - IMAD.U32 R9, RZ, RZ, UR15 ;
 Instr 4475 @ 0x117b0 (71600) - UIMAD UR7, UR8, 0x110, URZ ;
 Instr 4476 @ 0x117c0 (71616) - IMAD.U32 R6, RZ, RZ, UR22 ;
 Instr 4477 @ 0x117d0 (71632) - ULEA.HI.X UR6, UR9, UR11, UR8, 0x8, UP3 ;
 Instr 4478 @ 0x117e0 (71648) - IADD3 R40, P4, R52.reuse, UR24, RZ ;
 Instr 4479 @ 0x117f0 (71664) - IMAD.U32 R7, RZ, RZ, UR19 ;
 Instr 4480 @ 0x11800 (71680) - IADD3 R38, P3, R52.reuse, UR14, RZ ;
 Instr 4481 @ 0x11810 (71696) - IMAD.U32 R8, RZ, RZ, UR20 ;
 Instr 4482 @ 0x11820 (71712) - IADD3 R50, P1, R52.reuse, UR18, RZ ;
 Instr 4483 @ 0x11830 (71728) - IMAD.U32 R10, RZ, RZ, UR24 ;
 Instr 4484 @ 0x11840 (71744) - IADD3 R52, P0, R52, UR16, RZ ;
 Instr 4485 @ 0x11850 (71760) - IMAD.U32 R6, RZ, RZ, UR18 ;
 Instr 4486 @ 0x11860 (71776) - IADD3.X R41, R4.reuse, UR5, R11, P4, !PT ;
 Instr 4487 @ 0x11870 (71792) - IMAD.U32 R8, RZ, RZ, UR14 ;
 Instr 4488 @ 0x11880 (71808) - IADD3.X R39, R4.reuse, UR4, R9, P3, !PT ;
 Instr 4489 @ 0x11890 (71824) - UMOV UR14, URZ ;
 Instr 4490 @ 0x118a0 (71840) - IADD3.X R51, R4, UR7, R7, P1, !PT ;
 Instr 4491 @ 0x118b0 (71856) - IADD3.X R53, R4, UR6, RZ, P0, !PT ;
 Instr 4492 @ 0x118c0 (71872) - ULDC.64 UR6, c[0x0][0x2a8] ;
Basic block id 130 - num instructions 46
 Instr 4493 @ 0x118d0 (71888) - LDG.E.128.STRONG.GPU R32, [R52.64+UR6] ;
 Instr 4494 @ 0x118e0 (71904) - LDG.E.128.STRONG.GPU R28, [R50.64+UR6] ;
 Instr 4495 @ 0x118f0 (71920) - LDG.E.128.STRONG.GPU R24, [R48.64+UR6] ;
 Instr 4496 @ 0x11900 (71936) - LDG.E.128.STRONG.GPU R20, [R46.64+UR6] ;
 Instr 4497 @ 0x11910 (71952) - LDG.E.128.STRONG.GPU R16, [R44.64+UR6] ;
 Instr 4498 @ 0x11920 (71968) - LDG.E.128.STRONG.GPU R12, [R42.64+UR6] ;
 Instr 4499 @ 0x11930 (71984) - LDG.E.128.STRONG.GPU R8, [R40.64+UR6] ;
 Instr 4500 @ 0x11940 (72000) - LDG.E.128.STRONG.GPU R4, [R38.64+UR6] ;
 Instr 4501 @ 0x11950 (72016) - UIADD3 UR14, UR14, 0x1, URZ ;
 Instr 4502 @ 0x11960 (72032) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 4503 @ 0x11970 (72048) - UIADD3 UR6, UP3, UR6, UR4, URZ ;
 Instr 4504 @ 0x11980 (72064) - ISETP.LE.AND P0, PT, R175, UR14, PT ;
 Instr 4505 @ 0x11990 (72080) - UIADD3.X UR7, UR7, UR5, URZ, UP3, !UPT ;
 Instr 4506 @ 0x119a0 (72096) - FADD R68, R32, R68 ;
 Instr 4507 @ 0x119b0 (72112) - FADD R69, R33, R69 ;
 Instr 4508 @ 0x119c0 (72128) - FADD R70, R34, R70 ;
 Instr 4509 @ 0x119d0 (72144) - FADD R71, R35, R71 ;
 Instr 4510 @ 0x119e0 (72160) - FADD R72, R28, R72 ;
 Instr 4511 @ 0x119f0 (72176) - FADD R73, R29, R73 ;
 Instr 4512 @ 0x11a00 (72192) - FADD R74, R30, R74 ;
 Instr 4513 @ 0x11a10 (72208) - FADD R75, R31, R75 ;
 Instr 4514 @ 0x11a20 (72224) - FADD R76, R24, R76 ;
 Instr 4515 @ 0x11a30 (72240) - FADD R77, R25, R77 ;
 Instr 4516 @ 0x11a40 (72256) - FADD R78, R26, R78 ;
 Instr 4517 @ 0x11a50 (72272) - FADD R79, R27, R79 ;
 Instr 4518 @ 0x11a60 (72288) - FADD R80, R20, R80 ;
 Instr 4519 @ 0x11a70 (72304) - FADD R81, R21, R81 ;
 Instr 4520 @ 0x11a80 (72320) - FADD R82, R22, R82 ;
 Instr 4521 @ 0x11a90 (72336) - FADD R83, R23, R83 ;
 Instr 4522 @ 0x11aa0 (72352) - FADD R84, R16, R84 ;
 Instr 4523 @ 0x11ab0 (72368) - FADD R85, R17, R85 ;
 Instr 4524 @ 0x11ac0 (72384) - FADD R86, R18, R86 ;
 Instr 4525 @ 0x11ad0 (72400) - FADD R87, R19, R87 ;
 Instr 4526 @ 0x11ae0 (72416) - FADD R88, R12, R88 ;
 Instr 4527 @ 0x11af0 (72432) - FADD R89, R13, R89 ;
 Instr 4528 @ 0x11b00 (72448) - FADD R90, R14, R90 ;
 Instr 4529 @ 0x11b10 (72464) - FADD R91, R15, R91 ;
 Instr 4530 @ 0x11b20 (72480) - FADD R92, R8, R92 ;
 Instr 4531 @ 0x11b30 (72496) - FADD R93, R9, R93 ;
 Instr 4532 @ 0x11b40 (72512) - FADD R94, R10, R94 ;
 Instr 4533 @ 0x11b50 (72528) - FADD R95, R11, R95 ;
 Instr 4534 @ 0x11b60 (72544) - FADD R96, R4, R96 ;
 Instr 4535 @ 0x11b70 (72560) - FADD R97, R5, R97 ;
 Instr 4536 @ 0x11b80 (72576) - FADD R98, R6, R98 ;
 Instr 4537 @ 0x11b90 (72592) - FADD R99, R7, R99 ;
 Instr 4538 @ 0x11ba0 (72608) - @!P0 BRA 0x118d0 ;
Basic block id 131 - num instructions 1
 Instr 4539 @ 0x11bb0 (72624) - @P2 BRA 0x11d90 ;
Basic block id 132 - num instructions 29
 Instr 4540 @ 0x11bc0 (72640) - ULEA UR5, UP3, UR9, UR12, 0x8 ;
 Instr 4541 @ 0x11bd0 (72656) - USHF.L.U64.HI UR7, UR9, 0x4, UR8 ;
 Instr 4542 @ 0x11be0 (72672) - ULEA.HI.X UR4, UR9, UR11, UR8, 0x8, UP3 ;
 Instr 4543 @ 0x11bf0 (72688) - IMAD.U32 R4, RZ, RZ, UR5 ;
 Instr 4544 @ 0x11c00 (72704) - USHF.L.U64.HI UR5, UR9, 0x5, UR8 ;
 Instr 4545 @ 0x11c10 (72720) - USHF.L.U32 UR6, UR9, 0x4, URZ ;
 Instr 4546 @ 0x11c20 (72736) - IMAD.U32 R5, RZ, RZ, UR4 ;
 Instr 4547 @ 0x11c30 (72752) - USHF.L.U32 UR4, UR9, 0x5, URZ ;
 Instr 4548 @ 0x11c40 (72768) - IMAD.WIDE R4, R36, 0x10, R4 ;
 Instr 4549 @ 0x11c50 (72784) - IADD3 R4, P0, R4, c[0x0][0x2a8], RZ ;
 Instr 4550 @ 0x11c60 (72800) - IADD3.X R5, R5, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 4551 @ 0x11c70 (72816) - IADD3 R10, P0, R4, UR4, RZ ;
 Instr 4552 @ 0x11c80 (72832) - IADD3.X R11, R5, UR5, RZ, P0, !PT ;
 Instr 4553 @ 0x11c90 (72848) - STG.E.128.SYS [R4], R68 ;
 Instr 4554 @ 0x11ca0 (72864) - IADD3 R8, P0, R10, UR4, RZ ;
 Instr 4555 @ 0x11cb0 (72880) - STG.E.128.SYS [R4.64+UR6], R72 ;
 Instr 4556 @ 0x11cc0 (72896) - IADD3.X R9, R11, UR5, RZ, P0, !PT ;
 Instr 4557 @ 0x11cd0 (72912) - IADD3 R6, P0, R8, UR4, RZ ;
 Instr 4558 @ 0x11ce0 (72928) - STG.E.128.SYS [R10], R76 ;
 Instr 4559 @ 0x11cf0 (72944) - IADD3.X R7, R9, UR5, RZ, P0, !PT ;
 Instr 4560 @ 0x11d00 (72960) - IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 4561 @ 0x11d10 (72976) - IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 4562 @ 0x11d20 (72992) - STG.E.128.SYS [R4.64+UR6], R80 ;
 Instr 4563 @ 0x11d30 (73008) - STG.E.128.SYS [R8], R84 ;
 Instr 4564 @ 0x11d40 (73024) - IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 4565 @ 0x11d50 (73040) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 4566 @ 0x11d60 (73056) - STG.E.128.SYS [R4.64+UR6], R88 ;
 Instr 4567 @ 0x11d70 (73072) - STG.E.128.SYS [R6], R92 ;
 Instr 4568 @ 0x11d80 (73088) - STG.E.128.SYS [R6.64+UR6], R96 ;
Basic block id 133 - num instructions 1
 Instr 4569 @ 0x11d90 (73104) - @!P2 BRA 0x13920 ;
Basic block id 134 - num instructions 440
 Instr 4570 @ 0x11da0 (73120) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 4571 @ 0x11db0 (73136) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 4572 @ 0x11dc0 (73152) - IADD3 R7, R168.reuse, 0x48, RZ ;
 Instr 4573 @ 0x11dd0 (73168) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 4574 @ 0x11de0 (73184) - IADD3 R15, R168.reuse, 0x50, RZ ;
 Instr 4575 @ 0x11df0 (73200) - CS2R R18, SRZ ;
 Instr 4576 @ 0x11e00 (73216) - IADD3 R5, R168.reuse, 0x40, RZ ;
 Instr 4577 @ 0x11e10 (73232) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 4578 @ 0x11e20 (73248) - IADD3 R13, R168, 0x58, RZ ;
 Instr 4579 @ 0x11e30 (73264) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 4580 @ 0x11e40 (73280) - @P0 IMAD.HI.U32 R16, R7, c[0x0][0x3d8], RZ ;
 Instr 4581 @ 0x11e50 (73296) - ISETP.GE.AND P3, PT, R169, R208, PT ;
 Instr 4582 @ 0x11e60 (73312) - @P0 IMAD.HI.U32 R11, R15.reuse, c[0x0][0x3d8], RZ ;
 Instr 4583 @ 0x11e70 (73328) - @P0 SHF.R.U32.HI R16, RZ, c[0x0][0x3dc], R16 ;
 Instr 4584 @ 0x11e80 (73344) - ISETP.LT.AND P4, PT, R15, c[0x0][0x3c4], !P3 ;
 Instr 4585 @ 0x11e90 (73360) - @P0 IMAD.HI.U32 R17, R5, c[0x0][0x3d8], RZ ;
 Instr 4586 @ 0x11ea0 (73376) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3dc], R11 ;
 Instr 4587 @ 0x11eb0 (73392) - ISETP.LT.AND P5, PT, R7, c[0x0][0x3c4], !P3 ;
 Instr 4588 @ 0x11ec0 (73408) - @P0 IMAD.HI.U32 R9, R13, c[0x0][0x3d8], RZ ;
 Instr 4589 @ 0x11ed0 (73424) - @P0 SHF.R.U32.HI R17, RZ, c[0x0][0x3dc], R17 ;
 Instr 4590 @ 0x11ee0 (73440) - ISETP.LT.AND P6, PT, R5, c[0x0][0x3c4], !P3 ;
 Instr 4591 @ 0x11ef0 (73456) - @P0 IMAD.MOV R12, RZ, RZ, -R16 ;
 Instr 4592 @ 0x11f00 (73472) - @P0 SHF.R.U32.HI R9, RZ, c[0x0][0x3dc], R9 ;
 Instr 4593 @ 0x11f10 (73488) - @P0 IMAD.MOV R10, RZ, RZ, -R11 ;
 Instr 4594 @ 0x11f20 (73504) - ISETP.LT.AND P3, PT, R13, c[0x0][0x3c4], !P3 ;
 Instr 4595 @ 0x11f30 (73520) - @P0 IMAD R6, R12, c[0x0][0x3c8], R7 ;
 Instr 4596 @ 0x11f40 (73536) - @P0 IMAD R20, R10, c[0x0][0x3c8], R15 ;
 Instr 4597 @ 0x11f50 (73552) - @P0 IMAD.MOV.U32 R15, RZ, RZ, R11 ;
 Instr 4598 @ 0x11f60 (73568) - @P0 IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 4599 @ 0x11f70 (73584) - @P0 IMAD.MOV R8, RZ, RZ, -R9 ;
 Instr 4600 @ 0x11f80 (73600) - @P1 IMAD.HI.U32 R11, R6, c[0x0][0x3e0], RZ ;
 Instr 4601 @ 0x11f90 (73616) - @P0 IMAD R4, R14, c[0x0][0x3c8], R5 ;
 Instr 4602 @ 0x11fa0 (73632) - @P1 SHF.R.U32.HI R11, RZ, c[0x0][0x3e4], R11 ;
 Instr 4603 @ 0x11fb0 (73648) - @P0 IMAD R18, R8, c[0x0][0x3c8], R13 ;
 Instr 4604 @ 0x11fc0 (73664) - @P0 IMAD.MOV.U32 R7, RZ, RZ, R16 ;
 Instr 4605 @ 0x11fd0 (73680) - @P0 IMAD.MOV.U32 R5, RZ, RZ, R17 ;
 Instr 4606 @ 0x11fe0 (73696) - @P0 IMAD.MOV.U32 R13, RZ, RZ, R9 ;
 Instr 4607 @ 0x11ff0 (73712) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 4608 @ 0x12000 (73728) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 4609 @ 0x12010 (73744) - @P1 IMAD.MOV R9, RZ, RZ, -R11 ;
 Instr 4610 @ 0x12020 (73760) - IMAD R8, R169, c[0x0][0x254], RZ ;
 Instr 4611 @ 0x12030 (73776) - @P1 IMAD R12, R9, c[0x0][0x3cc], R6 ;
 Instr 4612 @ 0x12040 (73792) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 4613 @ 0x12050 (73808) - @P1 IMAD.MOV.U32 R6, RZ, RZ, R11 ;
 Instr 4614 @ 0x12060 (73824) - @P0 IMAD.HI.U32 R10, R12, c[0x0][0x3e8], RZ ;
 Instr 4615 @ 0x12070 (73840) - IMAD R7, R7, c[0x0][0x244], R8 ;
 Instr 4616 @ 0x12080 (73856) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x3ec], R10 ;
 Instr 4617 @ 0x12090 (73872) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 4618 @ 0x120a0 (73888) - IMAD R7, R6, c[0x0][0x248], R7 ;
 Instr 4619 @ 0x120b0 (73904) - @P0 IMAD.MOV R9, RZ, RZ, -R10 ;
 Instr 4620 @ 0x120c0 (73920) - IMAD R5, R5, c[0x0][0x244], R8 ;
 Instr 4621 @ 0x120d0 (73936) - @P0 IMAD R14, R9, c[0x0][0x1b4], R12 ;
 Instr 4622 @ 0x120e0 (73952) - @P0 IMAD.MOV.U32 R12, RZ, RZ, R10 ;
 Instr 4623 @ 0x120f0 (73968) - @P1 IMAD.HI.U32 R10, R4, c[0x0][0x3e0], RZ ;
 Instr 4624 @ 0x12100 (73984) - IMAD R7, R12, c[0x0][0x24c], R7 ;
 Instr 4625 @ 0x12110 (74000) - @P1 SHF.R.U32.HI R10, RZ, c[0x0][0x3e4], R10 ;
 Instr 4626 @ 0x12120 (74016) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 4627 @ 0x12130 (74032) - IMAD R7, R14, c[0x0][0x250], R7 ;
 Instr 4628 @ 0x12140 (74048) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 4629 @ 0x12150 (74064) - SEL R25, R7, 0xffffffff, P5 ;
 Instr 4630 @ 0x12160 (74080) - @P1 IMAD.MOV R7, RZ, RZ, -R10 ;
 Instr 4631 @ 0x12170 (74096) - @P1 IMAD R11, R7, c[0x0][0x3cc], R4 ;
 Instr 4632 @ 0x12180 (74112) - @P1 IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 4633 @ 0x12190 (74128) - @P0 IMAD.HI.U32 R7, R11, c[0x0][0x3e8], RZ ;
 Instr 4634 @ 0x121a0 (74144) - IMAD R4, R4, c[0x0][0x248], R5 ;
 Instr 4635 @ 0x121b0 (74160) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3ec], R7 ;
 Instr 4636 @ 0x121c0 (74176) - @P0 IMAD.MOV R6, RZ, RZ, -R7 ;
 Instr 4637 @ 0x121d0 (74192) - @P0 IMAD R9, R6, c[0x0][0x1b4], R11 ;
 Instr 4638 @ 0x121e0 (74208) - @P0 IMAD.MOV.U32 R11, RZ, RZ, R7 ;
 Instr 4639 @ 0x121f0 (74224) - @P1 IMAD.HI.U32 R6, R20, c[0x0][0x3e0], RZ ;
 Instr 4640 @ 0x12200 (74240) - IMAD R4, R11, c[0x0][0x24c], R4 ;
 Instr 4641 @ 0x12210 (74256) - @P1 SHF.R.U32.HI R6, RZ, c[0x0][0x3e4], R6 ;
 Instr 4642 @ 0x12220 (74272) - IMAD R4, R9, c[0x0][0x250], R4 ;
 Instr 4643 @ 0x12230 (74288) - @P1 IMAD.MOV R7, RZ, RZ, -R6 ;
 Instr 4644 @ 0x12240 (74304) - SEL R27, R4, 0xffffffff, P6 ;
 Instr 4645 @ 0x12250 (74320) - @P1 IMAD.HI.U32 R4, R18, c[0x0][0x3e0], RZ ;
 Instr 4646 @ 0x12260 (74336) - @P1 IMAD R19, R7, c[0x0][0x3cc], R20 ;
 Instr 4647 @ 0x12270 (74352) - @P1 SHF.R.U32.HI R4, RZ, c[0x0][0x3e4], R4 ;
 Instr 4648 @ 0x12280 (74368) - @P1 IMAD.MOV.U32 R20, RZ, RZ, R6 ;
 Instr 4649 @ 0x12290 (74384) - CS2R R6, SRZ ;
 Instr 4650 @ 0x122a0 (74400) - @P1 IMAD.MOV R5, RZ, RZ, -R4 ;
 Instr 4651 @ 0x122b0 (74416) - @P1 IMAD R14, R5, c[0x0][0x3cc], R18 ;
 Instr 4652 @ 0x122c0 (74432) - @P1 IMAD.MOV.U32 R18, RZ, RZ, R4 ;
 Instr 4653 @ 0x122d0 (74448) - ISETP.GE.AND P1, PT, R27, RZ, PT ;
 Instr 4654 @ 0x122e0 (74464) - CS2R R4, SRZ ;
 Instr 4655 @ 0x122f0 (74480) - @P1 IMAD.WIDE R22, R27, R174, c[0x0][0x178] ;
 Instr 4656 @ 0x12300 (74496) - @P1 LDG.E.128.SYS R4, [R22] ;
 Instr 4657 @ 0x12310 (74512) - @P0 IMAD.HI.U32 R16, R19, c[0x0][0x3e8], RZ ;
 Instr 4658 @ 0x12320 (74528) - STS.64 [R3], R68 ;
 Instr 4659 @ 0x12330 (74544) - @P0 IMAD.HI.U32 R11, R14, c[0x0][0x3e8], RZ ;
 Instr 4660 @ 0x12340 (74560) - @P0 SHF.R.U32.HI R16, RZ, c[0x0][0x3ec], R16 ;
 Instr 4661 @ 0x12350 (74576) - STS.64 [R3+0x10], R72 ;
 Instr 4662 @ 0x12360 (74592) - IMAD.MOV.U32 R17, RZ, RZ, RZ ;
 Instr 4663 @ 0x12370 (74608) - @P0 SHF.R.U32.HI R11, RZ, c[0x0][0x3ec], R11 ;
 Instr 4664 @ 0x12380 (74624) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 4665 @ 0x12390 (74640) - STS.64 [R3+0x1100], R70 ;
 Instr 4666 @ 0x123a0 (74656) - @P0 IMAD.MOV R10, RZ, RZ, -R16 ;
 Instr 4667 @ 0x123b0 (74672) - @P0 IMAD.MOV R9, RZ, RZ, -R11 ;
 Instr 4668 @ 0x123c0 (74688) - STS.64 [R3+0x1110], R74 ;
 Instr 4669 @ 0x123d0 (74704) - @P0 IMAD R17, R10, c[0x0][0x1b4], R19 ;
 Instr 4670 @ 0x123e0 (74720) - @P0 IMAD R12, R9, c[0x0][0x1b4], R14 ;
 Instr 4671 @ 0x123f0 (74736) - STS.64 [R3+0x40], R76 ;
 Instr 4672 @ 0x12400 (74752) - @P0 IMAD.MOV.U32 R19, RZ, RZ, R16 ;
 Instr 4673 @ 0x12410 (74768) - @P0 IMAD.MOV.U32 R14, RZ, RZ, R11 ;
 Instr 4674 @ 0x12420 (74784) - ISETP.GE.AND P0, PT, R25, RZ, PT ;
 Instr 4675 @ 0x12430 (74800) - IMAD R13, R13, c[0x0][0x244], R8.reuse ;
 Instr 4676 @ 0x12440 (74816) - STS.64 [R3+0x50], R80 ;
 Instr 4677 @ 0x12450 (74832) - IMAD R15, R15, c[0x0][0x244], R8 ;
 Instr 4678 @ 0x12460 (74848) - IMAD R13, R18, c[0x0][0x248], R13 ;
 Instr 4679 @ 0x12470 (74864) - STS.64 [R3+0x1140], R78 ;
 Instr 4680 @ 0x12480 (74880) - IMAD R20, R20, c[0x0][0x248], R15 ;
 Instr 4681 @ 0x12490 (74896) - IMAD R13, R14, c[0x0][0x24c], R13 ;
 Instr 4682 @ 0x124a0 (74912) - STS.64 [R3+0x1150], R82 ;
 Instr 4683 @ 0x124b0 (74928) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 4684 @ 0x124c0 (74944) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 4685 @ 0x124d0 (74960) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 4686 @ 0x124e0 (74976) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 4687 @ 0x124f0 (74992) - @P0 IMAD.WIDE R14, R25, R174, c[0x0][0x178] ;
 Instr 4688 @ 0x12500 (75008) - IMAD R20, R19, c[0x0][0x24c], R20 ;
 Instr 4689 @ 0x12510 (75024) - IMAD R12, R12, c[0x0][0x250], R13 ;
 Instr 4690 @ 0x12520 (75040) - @P0 LDG.E.128.SYS R8, [R14] ;
 Instr 4691 @ 0x12530 (75056) - IMAD R17, R17, c[0x0][0x250], R20 ;
 Instr 4692 @ 0x12540 (75072) - SEL R29, R12, 0xffffffff, P3 ;
 Instr 4693 @ 0x12550 (75088) - SEL R31, R17, 0xffffffff, P4 ;
 Instr 4694 @ 0x12560 (75104) - ISETP.GE.AND P3, PT, R29, RZ, PT ;
 Instr 4695 @ 0x12570 (75120) - ISETP.GE.AND P4, PT, R31, RZ, PT ;
 Instr 4696 @ 0x12580 (75136) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 4697 @ 0x12590 (75152) - CS2R R18, SRZ ;
 Instr 4698 @ 0x125a0 (75168) - IMAD.MOV.U32 R17, RZ, RZ, RZ ;
 Instr 4699 @ 0x125b0 (75184) - CS2R R12, SRZ ;
 Instr 4700 @ 0x125c0 (75200) - CS2R R14, SRZ ;
 Instr 4701 @ 0x125d0 (75216) - @P3 IMAD.WIDE R34, R29, R174.reuse, c[0x0][0x178] ;
 Instr 4702 @ 0x125e0 (75232) - @P4 IMAD.WIDE R36, R31, R174, c[0x0][0x178] ;
 Instr 4703 @ 0x125f0 (75248) - STS.64 [R3+0x80], R84 ;
 Instr 4704 @ 0x12600 (75264) - STS.64 [R3+0x90], R88 ;
 Instr 4705 @ 0x12610 (75280) - STS.64 [R3+0x1180], R86 ;
 Instr 4706 @ 0x12620 (75296) - STS.64 [R3+0x1190], R90 ;
 Instr 4707 @ 0x12630 (75312) - STS.64 [R3+0xc0], R92 ;
 Instr 4708 @ 0x12640 (75328) - STS.64 [R3+0xd0], R96 ;
 Instr 4709 @ 0x12650 (75344) - STS.64 [R3+0x11c0], R94 ;
 Instr 4710 @ 0x12660 (75360) - STS.64 [R3+0x11d0], R98 ;
 Instr 4711 @ 0x12670 (75376) - @P4 LDG.E.128.SYS R16, [R36] ;
 Instr 4712 @ 0x12680 (75392) - @P3 LDG.E.128.SYS R12, [R34] ;
 Instr 4713 @ 0x12690 (75408) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 4714 @ 0x126a0 (75424) - LDS.U.128 R20, [R170.X16] ;
 Instr 4715 @ 0x126b0 (75440) - HADD2.F32 R33, R164.H0_H0, -RZ.H0_H0 ;
 Instr 4716 @ 0x126c0 (75456) - HADD2.F32 R30, R164.H1_H1, -RZ.H0_H0 ;
 Instr 4717 @ 0x126d0 (75472) - HADD2.F32 R37, R165.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4718 @ 0x126e0 (75488) - HADD2.F32 R36, R165.H1_H1, -RZ.H0_H0 ;
 Instr 4719 @ 0x126f0 (75504) - FFMA R20, R20, R2.reuse, R33 ;
 Instr 4720 @ 0x12700 (75520) - FFMA R21, R21, R2.reuse, R30 ;
 Instr 4721 @ 0x12710 (75536) - FFMA R22, R22, R2, R37 ;
 Instr 4722 @ 0x12720 (75552) - FFMA R23, R23, R2, R36 ;
 Instr 4723 @ 0x12730 (75568) - HADD2.F32 R35, R166.H0_H0, -RZ.H0_H0 ;
 Instr 4724 @ 0x12740 (75584) - HADD2.F32 R24, R4.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4725 @ 0x12750 (75600) - HADD2.F32 R4, R4.H1_H1, -RZ.H0_H0 ;
 Instr 4726 @ 0x12760 (75616) - FFMA R24, R24, R173.reuse, R20 ;
 Instr 4727 @ 0x12770 (75632) - FFMA R4, R4, R173, R21 ;
 Instr 4728 @ 0x12780 (75648) - FSETP.GEU.AND P5, PT, R24.reuse, c[0x0][0x210], PT ;
 Instr 4729 @ 0x12790 (75664) - FSEL R24, R24, c[0x0][0x210], P5 ;
 Instr 4730 @ 0x127a0 (75680) - FSETP.GEU.AND P5, PT, R4, c[0x0][0x210], PT ;
 Instr 4731 @ 0x127b0 (75696) - FSEL R26, R4, c[0x0][0x210], P5 ;
 Instr 4732 @ 0x127c0 (75712) - HADD2.F32 R4, R5.H0_H0, -RZ.H0_H0 ;
 Instr 4733 @ 0x127d0 (75728) - FFMA R4, R4, R173, R22 ;
 Instr 4734 @ 0x127e0 (75744) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4735 @ 0x127f0 (75760) - FSEL R28, R4, c[0x0][0x210], P5 ;
 Instr 4736 @ 0x12800 (75776) - HADD2.F32 R4, R5.H1_H1, -RZ.H0_H0 ;
 Instr 4737 @ 0x12810 (75792) - FFMA R4, R4, R173, R23 ;
 Instr 4738 @ 0x12820 (75808) - LDS.U.128 R20, [R170.X16+0x110] ;
 Instr 4739 @ 0x12830 (75824) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4740 @ 0x12840 (75840) - FSEL R32, R4, c[0x0][0x210], P5 ;
 Instr 4741 @ 0x12850 (75856) - HADD2.F32 R4, R6.H0_H0, -RZ.H0_H0 ;
 Instr 4742 @ 0x12860 (75872) - HADD2.F32 R6, R6.H1_H1, -RZ.H0_H0 ;
 Instr 4743 @ 0x12870 (75888) - FFMA R20, R20, R2, R35 ;
 Instr 4744 @ 0x12880 (75904) - FFMA R4, R4, R173, R20 ;
 Instr 4745 @ 0x12890 (75920) - HADD2.F32 R20, R166.H1_H1, -RZ.H0_H0 ;
 Instr 4746 @ 0x128a0 (75936) - FSETP.GEU.AND P5, PT, R4, c[0x0][0x210], PT ;
 Instr 4747 @ 0x128b0 (75952) - FFMA R21, R21, R2, R20 ;
 Instr 4748 @ 0x128c0 (75968) - FFMA R6, R6, R173, R21 ;
 Instr 4749 @ 0x128d0 (75984) - HADD2.F32 R21, R167.H0_H0, -RZ.H0_H0 ;
 Instr 4750 @ 0x128e0 (76000) - FSEL R34, R4, c[0x0][0x210], P5 ;
 Instr 4751 @ 0x128f0 (76016) - HADD2.F32 R4, R7.H0_H0, -RZ.H0_H0 ;
 Instr 4752 @ 0x12900 (76032) - FSETP.GEU.AND P5, PT, R6, c[0x0][0x210], PT ;
 Instr 4753 @ 0x12910 (76048) - FFMA R22, R22, R2, R21 ;
 Instr 4754 @ 0x12920 (76064) - FFMA R4, R4, R173, R22 ;
 Instr 4755 @ 0x12930 (76080) - FSEL R38, R6, c[0x0][0x210], P5 ;
 Instr 4756 @ 0x12940 (76096) - HADD2.F32 R22, R167.H1_H1, -RZ.H0_H0 ;
 Instr 4757 @ 0x12950 (76112) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4758 @ 0x12960 (76128) - FSEL R39, R4, c[0x0][0x210], P5 ;
 Instr 4759 @ 0x12970 (76144) - HADD2.F32 R4, R7.H1_H1, -RZ.H0_H0 ;
 Instr 4760 @ 0x12980 (76160) - FFMA R23, R23, R2, R22 ;
 Instr 4761 @ 0x12990 (76176) - FFMA R23, R4, R173, R23 ;
 Instr 4762 @ 0x129a0 (76192) - LDS.U.128 R4, [R170.X16+0x1100] ;
 Instr 4763 @ 0x129b0 (76208) - HADD2.F32 R40, R8.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4764 @ 0x129c0 (76224) - HADD2.F32 R8, R8.H1_H1, -RZ.H0_H0 ;
 Instr 4765 @ 0x129d0 (76240) - FSETP.GEU.AND P5, PT, R23.reuse, c[0x0][0x210], PT ;
 Instr 4766 @ 0x129e0 (76256) - FSEL R23, R23, c[0x0][0x210], P5 ;
 Instr 4767 @ 0x129f0 (76272) - FFMA R4, R4, R2, R33 ;
 Instr 4768 @ 0x12a00 (76288) - FFMA R5, R5, R2.reuse, R30 ;
 Instr 4769 @ 0x12a10 (76304) - FFMA R40, R40, R173.reuse, R4 ;
 Instr 4770 @ 0x12a20 (76320) - HADD2.F32 R4, R9.H0_H0, -RZ.H0_H0 ;
 Instr 4771 @ 0x12a30 (76336) - FFMA R8, R8, R173.reuse, R5 ;
 Instr 4772 @ 0x12a40 (76352) - FSETP.GEU.AND P5, PT, R40, c[0x0][0x210], PT ;
 Instr 4773 @ 0x12a50 (76368) - FFMA R6, R6, R2, R37 ;
 Instr 4774 @ 0x12a60 (76384) - FSEL R40, R40, c[0x0][0x210], P5 ;
 Instr 4775 @ 0x12a70 (76400) - FFMA R4, R4, R173, R6 ;
 Instr 4776 @ 0x12a80 (76416) - FSETP.GEU.AND P5, PT, R8, c[0x0][0x210], PT ;
 Instr 4777 @ 0x12a90 (76432) - FSEL R8, R8, c[0x0][0x210], P5 ;
 Instr 4778 @ 0x12aa0 (76448) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4779 @ 0x12ab0 (76464) - FSEL R41, R4, c[0x0][0x210], P5 ;
 Instr 4780 @ 0x12ac0 (76480) - HADD2.F32 R4, R9.H1_H1, -RZ.H0_H0 ;
 Instr 4781 @ 0x12ad0 (76496) - FFMA R7, R7, R2, R36 ;
 Instr 4782 @ 0x12ae0 (76512) - FFMA R4, R4, R173, R7 ;
 Instr 4783 @ 0x12af0 (76528) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4784 @ 0x12b00 (76544) - FSEL R9, R4, c[0x0][0x210], P5 ;
 Instr 4785 @ 0x12b10 (76560) - LDS.U.128 R4, [R170.X16+0x1210] ;
 Instr 4786 @ 0x12b20 (76576) - HADD2.F32 R42, R10.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4787 @ 0x12b30 (76592) - HADD2.F32 R10, R10.H1_H1, -RZ.H0_H0 ;
 Instr 4788 @ 0x12b40 (76608) - FFMA R4, R4, R2, R35 ;
 Instr 4789 @ 0x12b50 (76624) - FFMA R5, R5, R2.reuse, R20 ;
 Instr 4790 @ 0x12b60 (76640) - FFMA R42, R42, R173.reuse, R4 ;
 Instr 4791 @ 0x12b70 (76656) - HADD2.F32 R4, R11.H0_H0, -RZ.H0_H0 ;
 Instr 4792 @ 0x12b80 (76672) - FFMA R10, R10, R173.reuse, R5 ;
 Instr 4793 @ 0x12b90 (76688) - FSETP.GEU.AND P5, PT, R42, c[0x0][0x210], PT ;
 Instr 4794 @ 0x12ba0 (76704) - FFMA R6, R6, R2, R21 ;
 Instr 4795 @ 0x12bb0 (76720) - FSEL R42, R42, c[0x0][0x210], P5 ;
 Instr 4796 @ 0x12bc0 (76736) - FFMA R4, R4, R173, R6 ;
 Instr 4797 @ 0x12bd0 (76752) - FSETP.GEU.AND P5, PT, R10, c[0x0][0x210], PT ;
 Instr 4798 @ 0x12be0 (76768) - FSEL R10, R10, c[0x0][0x210], P5 ;
 Instr 4799 @ 0x12bf0 (76784) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4800 @ 0x12c00 (76800) - FSEL R43, R4, c[0x0][0x210], P5 ;
 Instr 4801 @ 0x12c10 (76816) - HADD2.F32 R4, R11.H1_H1, -RZ.H0_H0 ;
 Instr 4802 @ 0x12c20 (76832) - FFMA R7, R7, R2, R22 ;
 Instr 4803 @ 0x12c30 (76848) - FFMA R4, R4, R173, R7 ;
 Instr 4804 @ 0x12c40 (76864) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4805 @ 0x12c50 (76880) - FSEL R11, R4, c[0x0][0x210], P5 ;
 Instr 4806 @ 0x12c60 (76896) - LDS.U.128 R4, [R170.X16+0x2200] ;
 Instr 4807 @ 0x12c70 (76912) - HADD2.F32 R44, R16.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4808 @ 0x12c80 (76928) - HADD2.F32 R16, R16.H1_H1, -RZ.H0_H0 ;
 Instr 4809 @ 0x12c90 (76944) - FFMA R4, R4, R2, R33 ;
 Instr 4810 @ 0x12ca0 (76960) - FFMA R5, R5, R2.reuse, R30 ;
 Instr 4811 @ 0x12cb0 (76976) - FFMA R44, R44, R173.reuse, R4 ;
 Instr 4812 @ 0x12cc0 (76992) - HADD2.F32 R4, R17.H0_H0, -RZ.H0_H0 ;
 Instr 4813 @ 0x12cd0 (77008) - FFMA R16, R16, R173.reuse, R5 ;
 Instr 4814 @ 0x12ce0 (77024) - FSETP.GEU.AND P5, PT, R44, c[0x0][0x210], PT ;
 Instr 4815 @ 0x12cf0 (77040) - FFMA R6, R6, R2, R37 ;
 Instr 4816 @ 0x12d00 (77056) - FSEL R44, R44, c[0x0][0x210], P5 ;
 Instr 4817 @ 0x12d10 (77072) - FFMA R4, R4, R173, R6 ;
 Instr 4818 @ 0x12d20 (77088) - FSETP.GEU.AND P5, PT, R16, c[0x0][0x210], PT ;
 Instr 4819 @ 0x12d30 (77104) - FSEL R16, R16, c[0x0][0x210], P5 ;
 Instr 4820 @ 0x12d40 (77120) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4821 @ 0x12d50 (77136) - FSEL R45, R4, c[0x0][0x210], P5 ;
 Instr 4822 @ 0x12d60 (77152) - HADD2.F32 R4, R17.H1_H1, -RZ.H0_H0 ;
 Instr 4823 @ 0x12d70 (77168) - FFMA R7, R7, R2, R36 ;
 Instr 4824 @ 0x12d80 (77184) - FFMA R4, R4, R173, R7 ;
 Instr 4825 @ 0x12d90 (77200) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4826 @ 0x12da0 (77216) - FSEL R17, R4, c[0x0][0x210], P5 ;
 Instr 4827 @ 0x12db0 (77232) - LDS.U.128 R4, [R170.X16+0x2310] ;
 Instr 4828 @ 0x12dc0 (77248) - HADD2.F32 R46, R18.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4829 @ 0x12dd0 (77264) - HADD2.F32 R18, R18.H1_H1, -RZ.H0_H0 ;
 Instr 4830 @ 0x12de0 (77280) - FFMA R4, R4, R2, R35 ;
 Instr 4831 @ 0x12df0 (77296) - FFMA R5, R5, R2.reuse, R20 ;
 Instr 4832 @ 0x12e00 (77312) - FFMA R46, R46, R173.reuse, R4 ;
 Instr 4833 @ 0x12e10 (77328) - HADD2.F32 R4, R19.H0_H0, -RZ.H0_H0 ;
 Instr 4834 @ 0x12e20 (77344) - FFMA R18, R18, R173.reuse, R5 ;
 Instr 4835 @ 0x12e30 (77360) - FSETP.GEU.AND P5, PT, R46, c[0x0][0x210], PT ;
 Instr 4836 @ 0x12e40 (77376) - FFMA R6, R6, R2, R21 ;
 Instr 4837 @ 0x12e50 (77392) - FSEL R46, R46, c[0x0][0x210], P5 ;
 Instr 4838 @ 0x12e60 (77408) - FFMA R4, R4, R173, R6 ;
 Instr 4839 @ 0x12e70 (77424) - FSETP.GEU.AND P5, PT, R18, c[0x0][0x210], PT ;
 Instr 4840 @ 0x12e80 (77440) - FSEL R18, R18, c[0x0][0x210], P5 ;
 Instr 4841 @ 0x12e90 (77456) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4842 @ 0x12ea0 (77472) - FSEL R47, R4, c[0x0][0x210], P5 ;
 Instr 4843 @ 0x12eb0 (77488) - HADD2.F32 R4, R19.H1_H1, -RZ.H0_H0 ;
 Instr 4844 @ 0x12ec0 (77504) - FFMA R7, R7, R2, R22 ;
 Instr 4845 @ 0x12ed0 (77520) - FFMA R4, R4, R173, R7 ;
 Instr 4846 @ 0x12ee0 (77536) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4847 @ 0x12ef0 (77552) - FSEL R19, R4, c[0x0][0x210], P5 ;
 Instr 4848 @ 0x12f00 (77568) - LDS.U.128 R4, [R170.X16+0x3300] ;
 Instr 4849 @ 0x12f10 (77584) - HADD2.F32 R48, R12.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4850 @ 0x12f20 (77600) - HADD2.F32 R12, R12.H1_H1, -RZ.H0_H0 ;
 Instr 4851 @ 0x12f30 (77616) - FFMA R4, R4, R2, R33 ;
 Instr 4852 @ 0x12f40 (77632) - FFMA R4, R48, R173, R4 ;
 Instr 4853 @ 0x12f50 (77648) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4854 @ 0x12f60 (77664) - FFMA R5, R5, R2.reuse, R30 ;
 Instr 4855 @ 0x12f70 (77680) - FSEL R33, R4, c[0x0][0x210], P5 ;
 Instr 4856 @ 0x12f80 (77696) - HADD2.F32 R4, R13.H0_H0, -RZ.H0_H0 ;
 Instr 4857 @ 0x12f90 (77712) - FFMA R12, R12, R173, R5 ;
 Instr 4858 @ 0x12fa0 (77728) - FFMA R6, R6, R2, R37 ;
 Instr 4859 @ 0x12fb0 (77744) - FSETP.GEU.AND P5, PT, R12, c[0x0][0x210], PT ;
 Instr 4860 @ 0x12fc0 (77760) - FFMA R4, R4, R173, R6 ;
 Instr 4861 @ 0x12fd0 (77776) - FSEL R12, R12, c[0x0][0x210], P5 ;
 Instr 4862 @ 0x12fe0 (77792) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4863 @ 0x12ff0 (77808) - FSEL R30, R4, c[0x0][0x210], P5 ;
 Instr 4864 @ 0x13000 (77824) - HADD2.F32 R4, R13.H1_H1, -RZ.H0_H0 ;
 Instr 4865 @ 0x13010 (77840) - FFMA R7, R7, R2, R36 ;
 Instr 4866 @ 0x13020 (77856) - FFMA R4, R4, R173, R7 ;
 Instr 4867 @ 0x13030 (77872) - FSETP.GEU.AND P5, PT, R4.reuse, c[0x0][0x210], PT ;
 Instr 4868 @ 0x13040 (77888) - FSEL R13, R4, c[0x0][0x210], P5 ;
 Instr 4869 @ 0x13050 (77904) - LDS.U.128 R4, [R170.X16+0x3410] ;
 Instr 4870 @ 0x13060 (77920) - HADD2.F32 R36, R14.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 4871 @ 0x13070 (77936) - HADD2.F32 R14, R14.H1_H1, -RZ.H0_H0 ;
 Instr 4872 @ 0x13080 (77952) - FFMA R5, R5, R2, R20 ;
 Instr 4873 @ 0x13090 (77968) - FFMA R4, R4, R2, R35 ;
 Instr 4874 @ 0x130a0 (77984) - FFMA R5, R14, R173.reuse, R5 ;
 Instr 4875 @ 0x130b0 (78000) - HADD2.F32 R14, R15.H0_H0, -RZ.H0_H0 ;
 Instr 4876 @ 0x130c0 (78016) - FFMA R4, R36, R173.reuse, R4 ;
 Instr 4877 @ 0x130d0 (78032) - FFMA R6, R6, R2, R21 ;
 Instr 4878 @ 0x130e0 (78048) - FSETP.GEU.AND P5, PT, R4, c[0x0][0x210], PT ;
 Instr 4879 @ 0x130f0 (78064) - FFMA R6, R14, R173, R6 ;
 Instr 4880 @ 0x13100 (78080) - HADD2.F32 R14, R15.H1_H1, -RZ.H0_H0 ;
 Instr 4881 @ 0x13110 (78096) - FSEL R4, R4, c[0x0][0x210], P5 ;
 Instr 4882 @ 0x13120 (78112) - FFMA R7, R7, R2, R22 ;
 Instr 4883 @ 0x13130 (78128) - FSETP.GEU.AND P5, PT, R5.reuse, c[0x0][0x210], PT ;
 Instr 4884 @ 0x13140 (78144) - FSEL R5, R5, c[0x0][0x210], P5 ;
 Instr 4885 @ 0x13150 (78160) - FFMA R7, R14, R173, R7 ;
 Instr 4886 @ 0x13160 (78176) - FSETP.GEU.AND P5, PT, R6.reuse, c[0x0][0x210], PT ;
 Instr 4887 @ 0x13170 (78192) - FSEL R6, R6, c[0x0][0x210], P5 ;
 Instr 4888 @ 0x13180 (78208) - FSETP.GEU.AND P5, PT, R7.reuse, c[0x0][0x210], PT ;
 Instr 4889 @ 0x13190 (78224) - FSEL R7, R7, c[0x0][0x210], P5 ;
 Instr 4890 @ 0x131a0 (78240) - FSETP.GT.AND P5, PT, R24.reuse, c[0x0][0x220], PT ;
 Instr 4891 @ 0x131b0 (78256) - FSEL R24, R24, c[0x0][0x220], !P5 ;
 Instr 4892 @ 0x131c0 (78272) - FSETP.GT.AND P5, PT, R26.reuse, c[0x0][0x220], PT ;
 Instr 4893 @ 0x131d0 (78288) - FSEL R26, R26, c[0x0][0x220], !P5 ;
 Instr 4894 @ 0x131e0 (78304) - FSETP.GT.AND P5, PT, R28.reuse, c[0x0][0x220], PT ;
 Instr 4895 @ 0x131f0 (78320) - FSEL R28, R28, c[0x0][0x220], !P5 ;
 Instr 4896 @ 0x13200 (78336) - FSETP.GT.AND P5, PT, R32.reuse, c[0x0][0x220], PT ;
 Instr 4897 @ 0x13210 (78352) - FSEL R32, R32, c[0x0][0x220], !P5 ;
 Instr 4898 @ 0x13220 (78368) - FSETP.GT.AND P5, PT, R34.reuse, c[0x0][0x220], PT ;
 Instr 4899 @ 0x13230 (78384) - FSEL R34, R34, c[0x0][0x220], !P5 ;
 Instr 4900 @ 0x13240 (78400) - FSETP.GT.AND P5, PT, R38.reuse, c[0x0][0x220], PT ;
 Instr 4901 @ 0x13250 (78416) - FSEL R38, R38, c[0x0][0x220], !P5 ;
 Instr 4902 @ 0x13260 (78432) - FSETP.GT.AND P5, PT, R39.reuse, c[0x0][0x220], PT ;
 Instr 4903 @ 0x13270 (78448) - FSEL R39, R39, c[0x0][0x220], !P5 ;
 Instr 4904 @ 0x13280 (78464) - FSETP.GT.AND P5, PT, R23.reuse, c[0x0][0x220], PT ;
 Instr 4905 @ 0x13290 (78480) - FSEL R23, R23, c[0x0][0x220], !P5 ;
 Instr 4906 @ 0x132a0 (78496) - FSETP.GT.AND P5, PT, R40.reuse, c[0x0][0x220], PT ;
 Instr 4907 @ 0x132b0 (78512) - FSEL R40, R40, c[0x0][0x220], !P5 ;
 Instr 4908 @ 0x132c0 (78528) - FSETP.GT.AND P5, PT, R8.reuse, c[0x0][0x220], PT ;
 Instr 4909 @ 0x132d0 (78544) - FSEL R8, R8, c[0x0][0x220], !P5 ;
 Instr 4910 @ 0x132e0 (78560) - FSETP.GT.AND P5, PT, R41.reuse, c[0x0][0x220], PT ;
 Instr 4911 @ 0x132f0 (78576) - FSEL R41, R41, c[0x0][0x220], !P5 ;
 Instr 4912 @ 0x13300 (78592) - FSETP.GT.AND P5, PT, R9.reuse, c[0x0][0x220], PT ;
 Instr 4913 @ 0x13310 (78608) - FSEL R9, R9, c[0x0][0x220], !P5 ;
 Instr 4914 @ 0x13320 (78624) - FSETP.GT.AND P5, PT, R42.reuse, c[0x0][0x220], PT ;
 Instr 4915 @ 0x13330 (78640) - FSEL R42, R42, c[0x0][0x220], !P5 ;
 Instr 4916 @ 0x13340 (78656) - FSETP.GT.AND P5, PT, R10.reuse, c[0x0][0x220], PT ;
 Instr 4917 @ 0x13350 (78672) - FSEL R10, R10, c[0x0][0x220], !P5 ;
 Instr 4918 @ 0x13360 (78688) - FSETP.GT.AND P5, PT, R43.reuse, c[0x0][0x220], PT ;
 Instr 4919 @ 0x13370 (78704) - FSEL R43, R43, c[0x0][0x220], !P5 ;
 Instr 4920 @ 0x13380 (78720) - FSETP.GT.AND P5, PT, R11.reuse, c[0x0][0x220], PT ;
 Instr 4921 @ 0x13390 (78736) - FSEL R11, R11, c[0x0][0x220], !P5 ;
 Instr 4922 @ 0x133a0 (78752) - FSETP.GT.AND P5, PT, R44.reuse, c[0x0][0x220], PT ;
 Instr 4923 @ 0x133b0 (78768) - FSEL R44, R44, c[0x0][0x220], !P5 ;
 Instr 4924 @ 0x133c0 (78784) - FSETP.GT.AND P5, PT, R16.reuse, c[0x0][0x220], PT ;
 Instr 4925 @ 0x133d0 (78800) - FSEL R16, R16, c[0x0][0x220], !P5 ;
 Instr 4926 @ 0x133e0 (78816) - FSETP.GT.AND P5, PT, R45.reuse, c[0x0][0x220], PT ;
 Instr 4927 @ 0x133f0 (78832) - FSEL R45, R45, c[0x0][0x220], !P5 ;
 Instr 4928 @ 0x13400 (78848) - FSETP.GT.AND P5, PT, R17.reuse, c[0x0][0x220], PT ;
 Instr 4929 @ 0x13410 (78864) - FSEL R17, R17, c[0x0][0x220], !P5 ;
 Instr 4930 @ 0x13420 (78880) - FSETP.GT.AND P5, PT, R46.reuse, c[0x0][0x220], PT ;
 Instr 4931 @ 0x13430 (78896) - FSEL R46, R46, c[0x0][0x220], !P5 ;
 Instr 4932 @ 0x13440 (78912) - FSETP.GT.AND P5, PT, R18.reuse, c[0x0][0x220], PT ;
 Instr 4933 @ 0x13450 (78928) - FSEL R18, R18, c[0x0][0x220], !P5 ;
 Instr 4934 @ 0x13460 (78944) - FSETP.GT.AND P5, PT, R47.reuse, c[0x0][0x220], PT ;
 Instr 4935 @ 0x13470 (78960) - FSEL R47, R47, c[0x0][0x220], !P5 ;
 Instr 4936 @ 0x13480 (78976) - FSETP.GT.AND P5, PT, R19.reuse, c[0x0][0x220], PT ;
 Instr 4937 @ 0x13490 (78992) - FSEL R19, R19, c[0x0][0x220], !P5 ;
 Instr 4938 @ 0x134a0 (79008) - FSETP.GT.AND P5, PT, R33.reuse, c[0x0][0x220], PT ;
 Instr 4939 @ 0x134b0 (79024) - FSEL R33, R33, c[0x0][0x220], !P5 ;
 Instr 4940 @ 0x134c0 (79040) - FSETP.GT.AND P5, PT, R12.reuse, c[0x0][0x220], PT ;
 Instr 4941 @ 0x134d0 (79056) - FSEL R12, R12, c[0x0][0x220], !P5 ;
 Instr 4942 @ 0x134e0 (79072) - FSETP.GT.AND P5, PT, R30.reuse, c[0x0][0x220], PT ;
 Instr 4943 @ 0x134f0 (79088) - FSEL R30, R30, c[0x0][0x220], !P5 ;
 Instr 4944 @ 0x13500 (79104) - FSETP.GT.AND P5, PT, R13.reuse, c[0x0][0x220], PT ;
 Instr 4945 @ 0x13510 (79120) - FSEL R14, R13, c[0x0][0x220], !P5 ;
 Instr 4946 @ 0x13520 (79136) - FSETP.GT.AND P5, PT, R4.reuse, c[0x0][0x220], PT ;
 Instr 4947 @ 0x13530 (79152) - FSEL R4, R4, c[0x0][0x220], !P5 ;
 Instr 4948 @ 0x13540 (79168) - FSETP.GT.AND P5, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 4949 @ 0x13550 (79184) - FSEL R5, R5, c[0x0][0x220], !P5 ;
 Instr 4950 @ 0x13560 (79200) - FSETP.GT.AND P5, PT, R6.reuse, c[0x0][0x220], PT ;
 Instr 4951 @ 0x13570 (79216) - FSEL R6, R6, c[0x0][0x220], !P5 ;
 Instr 4952 @ 0x13580 (79232) - FSETP.GT.AND P5, PT, R7.reuse, c[0x0][0x220], PT ;
 Instr 4953 @ 0x13590 (79248) - F2F.F16.F32 R24, R24 ;
 Instr 4954 @ 0x135a0 (79264) - FSEL R13, R7, c[0x0][0x220], !P5 ;
 Instr 4955 @ 0x135b0 (79280) - F2F.F16.F32 R7, R26 ;
 Instr 4956 @ 0x135c0 (79296) - F2F.F16.F32 R28, R28 ;
 Instr 4957 @ 0x135d0 (79312) - F2F.F16.F32 R15, R32 ;
 Instr 4958 @ 0x135e0 (79328) - F2F.F16.F32 R34, R34 ;
 Instr 4959 @ 0x135f0 (79344) - F2F.F16.F32 R21, R38 ;
 Instr 4960 @ 0x13600 (79360) - F2F.F16.F32 R39, R39 ;
 Instr 4961 @ 0x13610 (79376) - F2F.F16.F32 R20, R23 ;
 Instr 4962 @ 0x13620 (79392) - @P1 IMAD.WIDE R50, R27, R174, c[0x0][0x170] ;
 Instr 4963 @ 0x13630 (79408) - F2F.F16.F32 R40, R40 ;
 Instr 4964 @ 0x13640 (79424) - F2F.F16.F32 R35, R8 ;
 Instr 4965 @ 0x13650 (79440) - F2F.F16.F32 R41, R41 ;
 Instr 4966 @ 0x13660 (79456) - F2F.F16.F32 R22, R9 ;
 Instr 4967 @ 0x13670 (79472) - F2F.F16.F32 R42, R42 ;
 Instr 4968 @ 0x13680 (79488) - F2F.F16.F32 R37, R10 ;
 Instr 4969 @ 0x13690 (79504) - F2F.F16.F32 R43, R43 ;
 Instr 4970 @ 0x136a0 (79520) - F2F.F16.F32 R26, R11 ;
 Instr 4971 @ 0x136b0 (79536) - F2F.F16.F32 R49, R16 ;
 Instr 4972 @ 0x136c0 (79552) - F2F.F16.F32 R9, R4 ;
 Instr 4973 @ 0x136d0 (79568) - F2F.F16.F32 R10, R5 ;
 Instr 4974 @ 0x136e0 (79584) - PRMT R4, R24, 0x5410, R7 ;
 Instr 4975 @ 0x136f0 (79600) - PRMT R7, R39, 0x5410, R20 ;
 Instr 4976 @ 0x13700 (79616) - F2F.F16.F32 R16, R6 ;
 Instr 4977 @ 0x13710 (79632) - PRMT R5, R28, 0x5410, R15 ;
 Instr 4978 @ 0x13720 (79648) - PRMT R6, R34, 0x5410, R21 ;
 Instr 4979 @ 0x13730 (79664) - F2F.F16.F32 R44, R44 ;
 Instr 4980 @ 0x13740 (79680) - F2F.F16.F32 R45, R45 ;
 Instr 4981 @ 0x13750 (79696) - @P1 STG.E.128.SYS [R50], R4 ;
 Instr 4982 @ 0x13760 (79712) - F2F.F16.F32 R32, R17 ;
 Instr 4983 @ 0x13770 (79728) - F2F.F16.F32 R46, R46 ;
 Instr 4984 @ 0x13780 (79744) - F2F.F16.F32 R23, R18 ;
 Instr 4985 @ 0x13790 (79760) - PRMT R4, R40, 0x5410, R35 ;
 Instr 4986 @ 0x137a0 (79776) - F2F.F16.F32 R47, R47 ;
 Instr 4987 @ 0x137b0 (79792) - PRMT R5, R41, 0x5410, R22 ;
 Instr 4988 @ 0x137c0 (79808) - F2F.F16.F32 R8, R19 ;
 Instr 4989 @ 0x137d0 (79824) - PRMT R6, R42, 0x5410, R37 ;
 Instr 4990 @ 0x137e0 (79840) - PRMT R7, R43, 0x5410, R26 ;
 Instr 4991 @ 0x137f0 (79856) - @P0 IMAD.WIDE R18, R25, R174.reuse, c[0x0][0x170] ;
 Instr 4992 @ 0x13800 (79872) - F2F.F16.F32 R33, R33 ;
 Instr 4993 @ 0x13810 (79888) - F2F.F16.F32 R12, R12 ;
 Instr 4994 @ 0x13820 (79904) - @P0 STG.E.128.SYS [R18], R4 ;
 Instr 4995 @ 0x13830 (79920) - F2F.F16.F32 R30, R30 ;
 Instr 4996 @ 0x13840 (79936) - F2F.F16.F32 R11, R14 ;
 Instr 4997 @ 0x13850 (79952) - F2F.F16.F32 R13, R13 ;
 Instr 4998 @ 0x13860 (79968) - @P4 IMAD.WIDE R14, R31, R174, c[0x0][0x170] ;
 Instr 4999 @ 0x13870 (79984) - PRMT R4, R44, 0x5410, R49 ;
 Instr 5000 @ 0x13880 (80000) - PRMT R5, R45, 0x5410, R32 ;
 Instr 5001 @ 0x13890 (80016) - PRMT R6, R46, 0x5410, R23 ;
 Instr 5002 @ 0x138a0 (80032) - PRMT R7, R47, 0x5410, R8 ;
 Instr 5003 @ 0x138b0 (80048) - @P3 IMAD.WIDE R20, R29, R174, c[0x0][0x170] ;
 Instr 5004 @ 0x138c0 (80064) - @P4 STG.E.128.SYS [R14], R4 ;
 Instr 5005 @ 0x138d0 (80080) - PRMT R4, R33, 0x5410, R12 ;
 Instr 5006 @ 0x138e0 (80096) - PRMT R5, R30, 0x5410, R11 ;
 Instr 5007 @ 0x138f0 (80112) - PRMT R6, R9, 0x5410, R10 ;
 Instr 5008 @ 0x13900 (80128) - PRMT R7, R16, 0x5410, R13 ;
 Instr 5009 @ 0x13910 (80144) - @P3 STG.E.128.SYS [R20], R4 ;
Basic block id 135 - num instructions 3
 Instr 5010 @ 0x13920 (80160) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 5011 @ 0x13930 (80176) - ISETP.LE.AND P0, PT, R174, c[0x0][0x290], PT ;
 Instr 5012 @ 0x13940 (80192) - @!P0 BRA 0x14200 ;
Basic block id 136 - num instructions 5
 Instr 5013 @ 0x13950 (80208) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
 Instr 5014 @ 0x13960 (80224) - USHF.L.U32 UR17, UR17, 0x7, URZ ;
 Instr 5015 @ 0x13970 (80240) - LEA R171, R171, R0, 0x7 ;
 Instr 5016 @ 0x13980 (80256) - USHF.R.S32.HI UR8, URZ, 0x1f, UR17 ;
 Instr 5017 @ 0x13990 (80272) - @!P0 BRA 0x13fe0 ;
Basic block id 137 - num instructions 54
 Instr 5018 @ 0x139a0 (80288) - UMOV UR18, UR12 ;
 Instr 5019 @ 0x139b0 (80304) - IMAD.SHL.U32 R50, R171, 0x10, RZ ;
 Instr 5020 @ 0x139c0 (80320) - UMOV UR19, UR11 ;
 Instr 5021 @ 0x139d0 (80336) - UIMAD.WIDE.U32 UR24, UR17, 0x1a0, UR18 ;
 Instr 5022 @ 0x139e0 (80352) - UIMAD.WIDE.U32 UR22, UR17, 0x1b0, UR18 ;
 Instr 5023 @ 0x139f0 (80368) - SHF.R.S32.HI R4, RZ, 0x1f, R50 ;
 Instr 5024 @ 0x13a00 (80384) - UIMAD UR15, UR8, 0x1a0, URZ ;
 Instr 5025 @ 0x13a10 (80400) - UIMAD UR14, UR8, 0x1b0, URZ ;
 Instr 5026 @ 0x13a20 (80416) - IMAD.U32 R9, RZ, RZ, UR25 ;
 Instr 5027 @ 0x13a30 (80432) - UIMAD.WIDE.U32 UR20, UR17, 0x1c0, UR18 ;
 Instr 5028 @ 0x13a40 (80448) - IADD3 R46, P1, R50.reuse, UR24, RZ ;
 Instr 5029 @ 0x13a50 (80464) - IMAD.U32 R6, RZ, RZ, UR22 ;
 Instr 5030 @ 0x13a60 (80480) - IADD3 R44, P0, R50, UR22, RZ ;
 Instr 5031 @ 0x13a70 (80496) - IMAD.U32 R7, RZ, RZ, UR23 ;
 Instr 5032 @ 0x13a80 (80512) - UIMAD.WIDE.U32 UR22, UR17, 0x1d0, UR18 ;
 Instr 5033 @ 0x13a90 (80528) - IMAD.U32 R8, RZ, RZ, UR24 ;
 Instr 5034 @ 0x13aa0 (80544) - IADD3.X R47, R4.reuse, UR15, R9, P1, !PT ;
 Instr 5035 @ 0x13ab0 (80560) - UIMAD UR9, UR8, 0x1c0, URZ ;
 Instr 5036 @ 0x13ac0 (80576) - IADD3.X R45, R4, UR14, R7, P0, !PT ;
 Instr 5037 @ 0x13ad0 (80592) - IMAD.U32 R8, RZ, RZ, UR20 ;
 Instr 5038 @ 0x13ae0 (80608) - IADD3 R42, P1, R50.reuse, UR20, RZ ;
 Instr 5039 @ 0x13af0 (80624) - IMAD.U32 R9, RZ, RZ, UR21 ;
 Instr 5040 @ 0x13b00 (80640) - UIMAD UR7, UR8, 0x1d0, URZ ;
 Instr 5041 @ 0x13b10 (80656) - IMAD.U32 R7, RZ, RZ, UR23 ;
 Instr 5042 @ 0x13b20 (80672) - UIMAD.WIDE.U32 UR14, UR17, 0x1f0, UR18 ;
 Instr 5043 @ 0x13b30 (80688) - IADD3 R40, P0, R50, UR22, RZ ;
 Instr 5044 @ 0x13b40 (80704) - UIMAD.WIDE.U32 UR20, UR17, 0x190, UR18 ;
 Instr 5045 @ 0x13b50 (80720) - IADD3.X R43, R4.reuse, UR9, R9, P1, !PT ;
 Instr 5046 @ 0x13b60 (80736) - UIMAD.WIDE.U32 UR24, UR17, 0x1e0, UR18 ;
 Instr 5047 @ 0x13b70 (80752) - IADD3.X R41, R4, UR7, R7, P0, !PT ;
 Instr 5048 @ 0x13b80 (80768) - UIMAD.WIDE.U32 UR18, UR17, 0x180, UR18 ;
 Instr 5049 @ 0x13b90 (80784) - IMAD.U32 R11, RZ, RZ, UR15 ;
 Instr 5050 @ 0x13ba0 (80800) - UIMAD UR5, UR8, 0x1f0, URZ ;
 Instr 5051 @ 0x13bb0 (80816) - IMAD.U32 R9, RZ, RZ, UR21 ;
 Instr 5052 @ 0x13bc0 (80832) - UIMAD UR4, UR8, 0x190, URZ ;
 Instr 5053 @ 0x13bd0 (80848) - IMAD.U32 R6, RZ, RZ, UR22 ;
 Instr 5054 @ 0x13be0 (80864) - UIMAD UR6, UR8, 0x1e0, URZ ;
 Instr 5055 @ 0x13bf0 (80880) - IADD3 R36, P3, R50.reuse, UR14, RZ ;
 Instr 5056 @ 0x13c00 (80896) - UIMAD UR7, UR8, 0x180, URZ ;
 Instr 5057 @ 0x13c10 (80912) - IADD3 R48, P1, R50.reuse, UR20, RZ ;
 Instr 5058 @ 0x13c20 (80928) - IMAD.U32 R13, RZ, RZ, UR25 ;
 Instr 5059 @ 0x13c30 (80944) - IADD3 R38, P4, R50.reuse, UR24, RZ ;
 Instr 5060 @ 0x13c40 (80960) - IMAD.U32 R7, RZ, RZ, UR19 ;
 Instr 5061 @ 0x13c50 (80976) - IADD3 R50, P0, R50, UR18, RZ ;
 Instr 5062 @ 0x13c60 (80992) - IMAD.U32 R12, RZ, RZ, UR24 ;
 Instr 5063 @ 0x13c70 (81008) - IADD3.X R37, R4.reuse, UR5, R11, P3, !PT ;
 Instr 5064 @ 0x13c80 (81024) - IMAD.U32 R10, RZ, RZ, UR14 ;
 Instr 5065 @ 0x13c90 (81040) - IADD3.X R49, R4.reuse, UR4, R9, P1, !PT ;
 Instr 5066 @ 0x13ca0 (81056) - IMAD.U32 R8, RZ, RZ, UR20 ;
 Instr 5067 @ 0x13cb0 (81072) - IADD3.X R39, R4.reuse, UR6, R13, P4, !PT ;
 Instr 5068 @ 0x13cc0 (81088) - IMAD.U32 R6, RZ, RZ, UR18 ;
 Instr 5069 @ 0x13cd0 (81104) - IADD3.X R51, R4, UR7, R7, P0, !PT ;
 Instr 5070 @ 0x13ce0 (81120) - UMOV UR9, URZ ;
 Instr 5071 @ 0x13cf0 (81136) - ULDC.64 UR6, c[0x0][0x2a8] ;
Basic block id 138 - num instructions 46
 Instr 5072 @ 0x13d00 (81152) - LDG.E.128.STRONG.GPU R32, [R50.64+UR6] ;
 Instr 5073 @ 0x13d10 (81168) - LDG.E.128.STRONG.GPU R28, [R48.64+UR6] ;
 Instr 5074 @ 0x13d20 (81184) - LDG.E.128.STRONG.GPU R24, [R46.64+UR6] ;
 Instr 5075 @ 0x13d30 (81200) - LDG.E.128.STRONG.GPU R20, [R44.64+UR6] ;
 Instr 5076 @ 0x13d40 (81216) - LDG.E.128.STRONG.GPU R16, [R42.64+UR6] ;
 Instr 5077 @ 0x13d50 (81232) - LDG.E.128.STRONG.GPU R12, [R40.64+UR6] ;
 Instr 5078 @ 0x13d60 (81248) - LDG.E.128.STRONG.GPU R8, [R38.64+UR6] ;
 Instr 5079 @ 0x13d70 (81264) - LDG.E.128.STRONG.GPU R4, [R36.64+UR6] ;
 Instr 5080 @ 0x13d80 (81280) - UIADD3 UR9, UR9, 0x1, URZ ;
 Instr 5081 @ 0x13d90 (81296) - ULDC.64 UR4, c[0x0][0x2a0] ;
 Instr 5082 @ 0x13da0 (81312) - UIADD3 UR6, UP3, UR6, UR4, URZ ;
 Instr 5083 @ 0x13db0 (81328) - ISETP.LE.AND P0, PT, R175, UR9, PT ;
 Instr 5084 @ 0x13dc0 (81344) - UIADD3.X UR7, UR7, UR5, URZ, UP3, !UPT ;
 Instr 5085 @ 0x13dd0 (81360) - FADD R100, R32, R100 ;
 Instr 5086 @ 0x13de0 (81376) - FADD R101, R33, R101 ;
 Instr 5087 @ 0x13df0 (81392) - FADD R102, R34, R102 ;
 Instr 5088 @ 0x13e00 (81408) - FADD R103, R35, R103 ;
 Instr 5089 @ 0x13e10 (81424) - FADD R104, R28, R104 ;
 Instr 5090 @ 0x13e20 (81440) - FADD R105, R29, R105 ;
 Instr 5091 @ 0x13e30 (81456) - FADD R106, R30, R106 ;
 Instr 5092 @ 0x13e40 (81472) - FADD R107, R31, R107 ;
 Instr 5093 @ 0x13e50 (81488) - FADD R108, R24, R108 ;
 Instr 5094 @ 0x13e60 (81504) - FADD R109, R25, R109 ;
 Instr 5095 @ 0x13e70 (81520) - FADD R110, R26, R110 ;
 Instr 5096 @ 0x13e80 (81536) - FADD R111, R27, R111 ;
 Instr 5097 @ 0x13e90 (81552) - FADD R112, R20, R112 ;
 Instr 5098 @ 0x13ea0 (81568) - FADD R113, R21, R113 ;
 Instr 5099 @ 0x13eb0 (81584) - FADD R114, R22, R114 ;
 Instr 5100 @ 0x13ec0 (81600) - FADD R115, R23, R115 ;
 Instr 5101 @ 0x13ed0 (81616) - FADD R116, R16, R116 ;
 Instr 5102 @ 0x13ee0 (81632) - FADD R117, R17, R117 ;
 Instr 5103 @ 0x13ef0 (81648) - FADD R118, R18, R118 ;
 Instr 5104 @ 0x13f00 (81664) - FADD R119, R19, R119 ;
 Instr 5105 @ 0x13f10 (81680) - FADD R120, R12, R120 ;
 Instr 5106 @ 0x13f20 (81696) - FADD R121, R13, R121 ;
 Instr 5107 @ 0x13f30 (81712) - FADD R122, R14, R122 ;
 Instr 5108 @ 0x13f40 (81728) - FADD R123, R15, R123 ;
 Instr 5109 @ 0x13f50 (81744) - FADD R124, R8, R124 ;
 Instr 5110 @ 0x13f60 (81760) - FADD R125, R9, R125 ;
 Instr 5111 @ 0x13f70 (81776) - FADD R126, R10, R126 ;
 Instr 5112 @ 0x13f80 (81792) - FADD R127, R11, R127 ;
 Instr 5113 @ 0x13f90 (81808) - FADD R128, R4, R128 ;
 Instr 5114 @ 0x13fa0 (81824) - FADD R129, R5, R129 ;
 Instr 5115 @ 0x13fb0 (81840) - FADD R130, R6, R130 ;
 Instr 5116 @ 0x13fc0 (81856) - FADD R131, R7, R131 ;
 Instr 5117 @ 0x13fd0 (81872) - @!P0 BRA 0x13d00 ;
Basic block id 139 - num instructions 1
 Instr 5118 @ 0x13fe0 (81888) - @P2 BRA 0x14200 ;
Basic block id 140 - num instructions 33
 Instr 5119 @ 0x13ff0 (81904) - UMOV UR6, UR12 ;
 Instr 5120 @ 0x14000 (81920) - UMOV UR7, UR11 ;
 Instr 5121 @ 0x14010 (81936) - UIMAD UR4, UR8, 0x180, URZ ;
 Instr 5122 @ 0x14020 (81952) - UIMAD.WIDE.U32 UR6, UR17, 0x180, UR6 ;
 Instr 5123 @ 0x14030 (81968) - USHF.L.U64.HI UR5, UR17, 0x5, UR8 ;
 Instr 5124 @ 0x14040 (81984) - UIADD3 UR4, UR4, UR7, URZ ;
 Instr 5125 @ 0x14050 (82000) - IMAD.U32 R5, RZ, RZ, UR7 ;
 Instr 5126 @ 0x14060 (82016) - USHF.L.U64.HI UR9, UR17, 0x4, UR8 ;
 Instr 5127 @ 0x14070 (82032) - IMAD.U32 R4, RZ, RZ, UR6 ;
 Instr 5128 @ 0x14080 (82048) - USHF.L.U32 UR8, UR17, 0x4, URZ ;
 Instr 5129 @ 0x14090 (82064) - IMAD.U32 R5, RZ, RZ, UR4 ;
 Instr 5130 @ 0x140a0 (82080) - USHF.L.U32 UR4, UR17, 0x5, URZ ;
 Instr 5131 @ 0x140b0 (82096) - IMAD.WIDE R4, R171, 0x10, R4 ;
 Instr 5132 @ 0x140c0 (82112) - IADD3 R4, P0, R4, c[0x0][0x2a8], RZ ;
 Instr 5133 @ 0x140d0 (82128) - IADD3.X R5, R5, c[0x0][0x2ac], RZ, P0, !PT ;
 Instr 5134 @ 0x140e0 (82144) - IADD3 R10, P0, R4, UR4, RZ ;
 Instr 5135 @ 0x140f0 (82160) - IADD3.X R11, R5, UR5, RZ, P0, !PT ;
 Instr 5136 @ 0x14100 (82176) - STG.E.128.SYS [R4], R100 ;
 Instr 5137 @ 0x14110 (82192) - IADD3 R8, P0, R10, UR4, RZ ;
 Instr 5138 @ 0x14120 (82208) - STG.E.128.SYS [R4.64+UR8], R104 ;
 Instr 5139 @ 0x14130 (82224) - IADD3.X R9, R11, UR5, RZ, P0, !PT ;
 Instr 5140 @ 0x14140 (82240) - IADD3 R6, P0, R8, UR4, RZ ;
 Instr 5141 @ 0x14150 (82256) - STG.E.128.SYS [R10], R108 ;
 Instr 5142 @ 0x14160 (82272) - IADD3.X R7, R9, UR5, RZ, P0, !PT ;
 Instr 5143 @ 0x14170 (82288) - IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 5144 @ 0x14180 (82304) - IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 5145 @ 0x14190 (82320) - STG.E.128.SYS [R4.64+UR8], R112 ;
 Instr 5146 @ 0x141a0 (82336) - STG.E.128.SYS [R8], R116 ;
 Instr 5147 @ 0x141b0 (82352) - IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 5148 @ 0x141c0 (82368) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 5149 @ 0x141d0 (82384) - STG.E.128.SYS [R4.64+UR8], R120 ;
 Instr 5150 @ 0x141e0 (82400) - STG.E.128.SYS [R6], R124 ;
 Instr 5151 @ 0x141f0 (82416) - STG.E.128.SYS [R6.64+UR8], R128 ;
Basic block id 141 - num instructions 1
 Instr 5152 @ 0x14200 (82432) - @!P2 BRA 0x15da0 ;
Basic block id 142 - num instructions 441
 Instr 5153 @ 0x14210 (82448) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
 Instr 5154 @ 0x14220 (82464) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 5155 @ 0x14230 (82480) - IADD3 R12, R168.reuse, 0x60, RZ ;
 Instr 5156 @ 0x14240 (82496) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 5157 @ 0x14250 (82512) - IADD3 R8, R168.reuse, 0x68, RZ ;
 Instr 5158 @ 0x14260 (82528) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 5159 @ 0x14270 (82544) - PLOP3.LUT P1, PT, PT, PT, UP1, 0x80, 0x0 ;
 Instr 5160 @ 0x14280 (82560) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 5161 @ 0x14290 (82576) - IADD3 R6, R168, 0x70, RZ ;
 Instr 5162 @ 0x142a0 (82592) - PLOP3.LUT P0, PT, PT, PT, UP0, 0x80, 0x0 ;
 Instr 5163 @ 0x142b0 (82608) - @P2 IMAD.HI.U32 R17, R12, c[0x0][0x3d8], RZ ;
 Instr 5164 @ 0x142c0 (82624) - ISETP.GE.AND P3, PT, R169.reuse, R208, PT ;
 Instr 5165 @ 0x142d0 (82640) - @P2 IMAD.HI.U32 R15, R8.reuse, c[0x0][0x3d8], RZ ;
 Instr 5166 @ 0x142e0 (82656) - @P2 SHF.R.U32.HI R17, RZ, c[0x0][0x3dc], R17 ;
 Instr 5167 @ 0x142f0 (82672) - ISETP.LT.AND P5, PT, R8, c[0x0][0x3c4], !P3 ;
 Instr 5168 @ 0x14300 (82688) - IMAD R169, R169, c[0x0][0x254], RZ ;
 Instr 5169 @ 0x14310 (82704) - @P2 SHF.R.U32.HI R15, RZ, c[0x0][0x3dc], R15 ;
 Instr 5170 @ 0x14320 (82720) - @P2 IMAD.MOV R5, RZ, RZ, -R17 ;
 Instr 5171 @ 0x14330 (82736) - ISETP.LT.AND P4, PT, R12, c[0x0][0x3c4], !P3 ;
 Instr 5172 @ 0x14340 (82752) - @P2 IMAD R9, R5, c[0x0][0x3c8], R12 ;
 Instr 5173 @ 0x14350 (82768) - @P2 IMAD.MOV R11, RZ, RZ, -R15 ;
 Instr 5174 @ 0x14360 (82784) - @P1 IMAD.HI.U32 R16, R9, c[0x0][0x3e0], RZ ;
 Instr 5175 @ 0x14370 (82800) - @P2 IMAD R7, R11, c[0x0][0x3c8], R8 ;
 Instr 5176 @ 0x14380 (82816) - @P1 SHF.R.U32.HI R16, RZ, c[0x0][0x3e4], R16 ;
 Instr 5177 @ 0x14390 (82832) - @P2 IMAD.HI.U32 R5, R6, c[0x0][0x3d8], RZ ;
 Instr 5178 @ 0x143a0 (82848) - @P1 IMAD.HI.U32 R13, R7, c[0x0][0x3e0], RZ ;
 Instr 5179 @ 0x143b0 (82864) - @P2 SHF.R.U32.HI R5, RZ, c[0x0][0x3dc], R5 ;
 Instr 5180 @ 0x143c0 (82880) - @P1 IMAD.MOV R4, RZ, RZ, -R16 ;
 Instr 5181 @ 0x143d0 (82896) - @P1 SHF.R.U32.HI R13, RZ, c[0x0][0x3e4], R13 ;
 Instr 5182 @ 0x143e0 (82912) - @P2 IMAD.MOV R11, RZ, RZ, -R5 ;
 Instr 5183 @ 0x143f0 (82928) - @P1 IMAD R10, R4, c[0x0][0x3cc], R9 ;
 Instr 5184 @ 0x14400 (82944) - @P1 IMAD.MOV R18, RZ, RZ, -R13 ;
 Instr 5185 @ 0x14410 (82960) - @P0 IMAD.HI.U32 R19, R10, c[0x0][0x3e8], RZ ;
 Instr 5186 @ 0x14420 (82976) - @P1 IMAD R14, R18, c[0x0][0x3cc], R7 ;
 Instr 5187 @ 0x14430 (82992) - @P0 SHF.R.U32.HI R19, RZ, c[0x0][0x3ec], R19 ;
 Instr 5188 @ 0x14440 (83008) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 5189 @ 0x14450 (83024) - @P2 IMAD.MOV.U32 R8, RZ, RZ, R15 ;
 Instr 5190 @ 0x14460 (83040) - @P0 IMAD.HI.U32 R15, R14, c[0x0][0x3e8], RZ ;
 Instr 5191 @ 0x14470 (83056) - @P2 IMAD R4, R11, c[0x0][0x3c8], R6 ;
 Instr 5192 @ 0x14480 (83072) - @P2 IMAD.MOV.U32 R12, RZ, RZ, R17 ;
 Instr 5193 @ 0x14490 (83088) - @P1 IMAD.MOV.U32 R9, RZ, RZ, R16 ;
 Instr 5194 @ 0x144a0 (83104) - @P0 SHF.R.U32.HI R16, RZ, c[0x0][0x3ec], R15 ;
 Instr 5195 @ 0x144b0 (83120) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 5196 @ 0x144c0 (83136) - @P0 IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 5197 @ 0x144d0 (83152) - @P1 IMAD.HI.U32 R15, R4, c[0x0][0x3e0], RZ ;
 Instr 5198 @ 0x144e0 (83168) - IMAD R12, R12, c[0x0][0x244], R169 ;
 Instr 5199 @ 0x144f0 (83184) - @P1 SHF.R.U32.HI R15, RZ, c[0x0][0x3e4], R15 ;
 Instr 5200 @ 0x14500 (83200) - @P0 IMAD R11, R17, c[0x0][0x1b4], R10 ;
 Instr 5201 @ 0x14510 (83216) - @P1 IMAD.MOV.U32 R7, RZ, RZ, R13 ;
 Instr 5202 @ 0x14520 (83232) - IMAD R8, R8, c[0x0][0x244], R169 ;
 Instr 5203 @ 0x14530 (83248) - @P0 IMAD.MOV.U32 R10, RZ, RZ, R19 ;
 Instr 5204 @ 0x14540 (83264) - IMAD R9, R9, c[0x0][0x248], R12 ;
 Instr 5205 @ 0x14550 (83280) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 5206 @ 0x14560 (83296) - @P0 IMAD.MOV R17, RZ, RZ, -R16 ;
 Instr 5207 @ 0x14570 (83312) - IMAD R7, R7, c[0x0][0x248], R8 ;
 Instr 5208 @ 0x14580 (83328) - IMAD R10, R10, c[0x0][0x24c], R9 ;
 Instr 5209 @ 0x14590 (83344) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 5210 @ 0x145a0 (83360) - @P1 IMAD.MOV R9, RZ, RZ, -R15 ;
 Instr 5211 @ 0x145b0 (83376) - @P0 IMAD R13, R17, c[0x0][0x1b4], R14 ;
 Instr 5212 @ 0x145c0 (83392) - @P0 IMAD.MOV.U32 R14, RZ, RZ, R16 ;
 Instr 5213 @ 0x145d0 (83408) - @P1 IMAD R8, R9, c[0x0][0x3cc], R4 ;
 Instr 5214 @ 0x145e0 (83424) - IMAD R14, R14, c[0x0][0x24c], R7 ;
 Instr 5215 @ 0x145f0 (83440) - IMAD R10, R11, c[0x0][0x250], R10 ;
 Instr 5216 @ 0x14600 (83456) - @P0 IMAD.HI.U32 R7, R8, c[0x0][0x3e8], RZ ;
 Instr 5217 @ 0x14610 (83472) - SEL R35, R10, 0xffffffff, P4 ;
 Instr 5218 @ 0x14620 (83488) - IMAD R13, R13, c[0x0][0x250], R14 ;
 Instr 5219 @ 0x14630 (83504) - @P0 SHF.R.U32.HI R7, RZ, c[0x0][0x3ec], R7 ;
 Instr 5220 @ 0x14640 (83520) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 5221 @ 0x14650 (83536) - ISETP.LT.AND P4, PT, R6, c[0x0][0x3c4], !P3 ;
 Instr 5222 @ 0x14660 (83552) - @P2 IMAD.MOV.U32 R6, RZ, RZ, R5 ;
 Instr 5223 @ 0x14670 (83568) - SEL R33, R13, 0xffffffff, P5 ;
 Instr 5224 @ 0x14680 (83584) - @P0 IMAD.MOV R5, RZ, RZ, -R7 ;
 Instr 5225 @ 0x14690 (83600) - ISETP.GE.AND P5, PT, R35, RZ, PT ;
 Instr 5226 @ 0x146a0 (83616) - @P1 IMAD.MOV.U32 R4, RZ, RZ, R15 ;
 Instr 5227 @ 0x146b0 (83632) - IMAD R11, R6, c[0x0][0x244], R169 ;
 Instr 5228 @ 0x146c0 (83648) - @P0 IMAD R9, R5, c[0x0][0x1b4], R8 ;
 Instr 5229 @ 0x146d0 (83664) - IMAD R11, R4, c[0x0][0x248], R11 ;
 Instr 5230 @ 0x146e0 (83680) - @P0 IMAD.MOV.U32 R8, RZ, RZ, R7 ;
 Instr 5231 @ 0x146f0 (83696) - IADD3 R168, R168, 0x78, RZ ;
 Instr 5232 @ 0x14700 (83712) - CS2R R4, SRZ ;
 Instr 5233 @ 0x14710 (83728) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 5234 @ 0x14720 (83744) - IMAD R8, R8, c[0x0][0x24c], R11 ;
 Instr 5235 @ 0x14730 (83760) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 5236 @ 0x14740 (83776) - IMAD R9, R9, c[0x0][0x250], R8 ;
 Instr 5237 @ 0x14750 (83792) - @P2 IMAD.HI.U32 R8, R168, c[0x0][0x3d8], RZ ;
 Instr 5238 @ 0x14760 (83808) - @P5 IMAD.WIDE R12, R35, R174, c[0x0][0x178] ;
 Instr 5239 @ 0x14770 (83824) - @P2 SHF.R.U32.HI R8, RZ, c[0x0][0x3dc], R8 ;
 Instr 5240 @ 0x14780 (83840) - SEL R39, R9, 0xffffffff, P4 ;
 Instr 5241 @ 0x14790 (83856) - CS2R R20, SRZ ;
 Instr 5242 @ 0x147a0 (83872) - ISETP.GE.AND P4, PT, R33, RZ, PT ;
 Instr 5243 @ 0x147b0 (83888) - @P2 IMAD.MOV R9, RZ, RZ, -R8 ;
 Instr 5244 @ 0x147c0 (83904) - @P5 LDG.E.128.SYS R4, [R12] ;
 Instr 5245 @ 0x147d0 (83920) - CS2R R16, SRZ ;
 Instr 5246 @ 0x147e0 (83936) - @P2 IMAD R21, R9, c[0x0][0x3c8], R168 ;
 Instr 5247 @ 0x147f0 (83952) - CS2R R18, SRZ ;
 Instr 5248 @ 0x14800 (83968) - @P1 IMAD.HI.U32 R10, R21, c[0x0][0x3e0], RZ ;
 Instr 5249 @ 0x14810 (83984) - @P4 IMAD.WIDE R14, R33, R174, c[0x0][0x178] ;
 Instr 5250 @ 0x14820 (84000) - @P1 SHF.R.U32.HI R10, RZ, c[0x0][0x3e4], R10 ;
 Instr 5251 @ 0x14830 (84016) - ISETP.LT.AND P3, PT, R168, c[0x0][0x3c4], !P3 ;
 Instr 5252 @ 0x14840 (84032) - @P2 IMAD.MOV.U32 R168, RZ, RZ, R8 ;
 Instr 5253 @ 0x14850 (84048) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 5254 @ 0x14860 (84064) - @P4 LDG.E.128.SYS R16, [R14] ;
 Instr 5255 @ 0x14870 (84080) - @P1 IMAD.MOV R8, RZ, RZ, -R10 ;
 Instr 5256 @ 0x14880 (84096) - ISETP.GE.AND P2, PT, R39, RZ, PT ;
 Instr 5257 @ 0x14890 (84112) - IMAD R168, R168, c[0x0][0x244], R169 ;
 Instr 5258 @ 0x148a0 (84128) - @P1 IMAD R11, R8, c[0x0][0x3cc], R21 ;
 Instr 5259 @ 0x148b0 (84144) - @P1 IMAD.MOV.U32 R21, RZ, RZ, R10 ;
 Instr 5260 @ 0x148c0 (84160) - @P0 IMAD.HI.U32 R9, R11, c[0x0][0x3e8], RZ ;
 Instr 5261 @ 0x148d0 (84176) - CS2R R14, SRZ ;
 Instr 5262 @ 0x148e0 (84192) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 5263 @ 0x148f0 (84208) - @P0 SHF.R.U32.HI R9, RZ, c[0x0][0x3ec], R9 ;
 Instr 5264 @ 0x14900 (84224) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 5265 @ 0x14910 (84240) - @P2 IMAD.WIDE R22, R39, R174, c[0x0][0x178] ;
 Instr 5266 @ 0x14920 (84256) - @P0 IMAD.MOV R8, RZ, RZ, -R9 ;
 Instr 5267 @ 0x14930 (84272) - IMAD R168, R21, c[0x0][0x248], R168 ;
 Instr 5268 @ 0x14940 (84288) - @P0 IMAD R20, R8, c[0x0][0x1b4], R11 ;
 Instr 5269 @ 0x14950 (84304) - @P2 LDG.E.128.SYS R12, [R22] ;
 Instr 5270 @ 0x14960 (84320) - @P0 IMAD.MOV.U32 R11, RZ, RZ, R9 ;
 Instr 5271 @ 0x14970 (84336) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 5272 @ 0x14980 (84352) - IMAD R11, R11, c[0x0][0x24c], R168 ;
 Instr 5273 @ 0x14990 (84368) - IMAD.MOV.U32 R9, RZ, RZ, RZ ;
 Instr 5274 @ 0x149a0 (84384) - IMAD R11, R20, c[0x0][0x250], R11 ;
 Instr 5275 @ 0x149b0 (84400) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 5276 @ 0x149c0 (84416) - SEL R37, R11, 0xffffffff, P3 ;
 Instr 5277 @ 0x149d0 (84432) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 5278 @ 0x149e0 (84448) - ISETP.GE.AND P0, PT, R37, RZ, PT ;
 Instr 5279 @ 0x149f0 (84464) - @P0 IMAD.WIDE R20, R37, R174, c[0x0][0x178] ;
 Instr 5280 @ 0x14a00 (84480) - @P0 LDG.E.128.SYS R8, [R20] ;
 Instr 5281 @ 0x14a10 (84496) - HADD2.F32 R45, R164.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5282 @ 0x14a20 (84512) - HADD2.F32 R164, R164.H1_H1, -RZ.H0_H0 ;
 Instr 5283 @ 0x14a30 (84528) - STS.64 [R3], R100 ;
 Instr 5284 @ 0x14a40 (84544) - HADD2.F32 R43, R165.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5285 @ 0x14a50 (84560) - HADD2.F32 R165, R165.H1_H1, -RZ.H0_H0 ;
 Instr 5286 @ 0x14a60 (84576) - STS.64 [R3+0x10], R104 ;
 Instr 5287 @ 0x14a70 (84592) - HADD2.F32 R41, R166.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5288 @ 0x14a80 (84608) - HADD2.F32 R166, R166.H1_H1, -RZ.H0_H0 ;
 Instr 5289 @ 0x14a90 (84624) - STS.64 [R3+0x1100], R102 ;
 Instr 5290 @ 0x14aa0 (84640) - STS.64 [R3+0x1110], R106 ;
 Instr 5291 @ 0x14ab0 (84656) - STS.64 [R3+0x40], R108 ;
 Instr 5292 @ 0x14ac0 (84672) - STS.64 [R3+0x50], R112 ;
 Instr 5293 @ 0x14ad0 (84688) - STS.64 [R3+0x1140], R110 ;
 Instr 5294 @ 0x14ae0 (84704) - STS.64 [R3+0x1150], R114 ;
 Instr 5295 @ 0x14af0 (84720) - STS.64 [R3+0x80], R116 ;
 Instr 5296 @ 0x14b00 (84736) - STS.64 [R3+0x90], R120 ;
 Instr 5297 @ 0x14b10 (84752) - STS.64 [R3+0x1180], R118 ;
 Instr 5298 @ 0x14b20 (84768) - STS.64 [R3+0x1190], R122 ;
 Instr 5299 @ 0x14b30 (84784) - STS.64 [R3+0xc0], R124 ;
 Instr 5300 @ 0x14b40 (84800) - STS.64 [R3+0xd0], R128 ;
 Instr 5301 @ 0x14b50 (84816) - STS.64 [R3+0x11c0], R126 ;
 Instr 5302 @ 0x14b60 (84832) - STS.64 [R3+0x11d0], R130 ;
 Instr 5303 @ 0x14b70 (84848) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 5304 @ 0x14b80 (84864) - HADD2.F32 R3, R167.H0_H0, -RZ.H0_H0 ;
 Instr 5305 @ 0x14b90 (84880) - HADD2.F32 R167, R167.H1_H1, -RZ.H0_H0 ;
 Instr 5306 @ 0x14ba0 (84896) - LDS.U.128 R24, [R170.X16] ;
 Instr 5307 @ 0x14bb0 (84912) - LDS.U.128 R20, [R170.X16+0x1100] ;
 Instr 5308 @ 0x14bc0 (84928) - FFMA R24, R24, R2, R45 ;
 Instr 5309 @ 0x14bd0 (84944) - FFMA R25, R25, R2.reuse, R164 ;
 Instr 5310 @ 0x14be0 (84960) - FFMA R27, R27, R2.reuse, R165 ;
 Instr 5311 @ 0x14bf0 (84976) - FFMA R20, R20, R2.reuse, R45 ;
 Instr 5312 @ 0x14c00 (84992) - HADD2.F32 R28, R4.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5313 @ 0x14c10 (85008) - HADD2.F32 R4, R4.H1_H1, -RZ.H0_H0 ;
 Instr 5314 @ 0x14c20 (85024) - HADD2.F32 R34, R5.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5315 @ 0x14c30 (85040) - HADD2.F32 R32, R5.H1_H1, -RZ.H0_H0 ;
 Instr 5316 @ 0x14c40 (85056) - FFMA R5, R26, R2, R43 ;
 Instr 5317 @ 0x14c50 (85072) - HADD2.F32 R44, R6.H1_H1, -RZ.H0_H0 ;
 Instr 5318 @ 0x14c60 (85088) - FFMA R24, R28, R173, R24 ;
 Instr 5319 @ 0x14c70 (85104) - LDS.U.128 R28, [R170.X16+0x2200] ;
 Instr 5320 @ 0x14c80 (85120) - FFMA R4, R4, R173.reuse, R25 ;
 Instr 5321 @ 0x14c90 (85136) - FSETP.GEU.AND P1, PT, R24, c[0x0][0x210], PT ;
 Instr 5322 @ 0x14ca0 (85152) - FFMA R5, R34, R173.reuse, R5 ;
 Instr 5323 @ 0x14cb0 (85168) - FFMA R25, R21, R2.reuse, R164 ;
 Instr 5324 @ 0x14cc0 (85184) - FSEL R24, R24, c[0x0][0x210], P1 ;
 Instr 5325 @ 0x14cd0 (85200) - HADD2.F32 R26, R16.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5326 @ 0x14ce0 (85216) - FSETP.GEU.AND P1, PT, R4, c[0x0][0x210], PT ;
 Instr 5327 @ 0x14cf0 (85232) - HADD2.F32 R34, R16.H1_H1, -RZ.H0_H0 ;
 Instr 5328 @ 0x14d00 (85248) - FSETP.GT.AND P3, PT, R24, c[0x0][0x220], PT ;
 Instr 5329 @ 0x14d10 (85264) - FFMA R32, R32, R173.reuse, R27 ;
 Instr 5330 @ 0x14d20 (85280) - FSEL R21, R4, c[0x0][0x210], P1 ;
 Instr 5331 @ 0x14d30 (85296) - HADD2.F32 R27, R17.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 5332 @ 0x14d40 (85312) - FSETP.GEU.AND P1, PT, R5, c[0x0][0x210], PT ;
 Instr 5333 @ 0x14d50 (85328) - FFMA R26, R26, R173.reuse, R20 ;
 Instr 5334 @ 0x14d60 (85344) - FSEL R16, R24, c[0x0][0x220], !P3 ;
 Instr 5335 @ 0x14d70 (85360) - FFMA R24, R22, R2.reuse, R43 ;
 Instr 5336 @ 0x14d80 (85376) - FSETP.GT.AND P3, PT, R21, c[0x0][0x220], PT ;
 Instr 5337 @ 0x14d90 (85392) - FFMA R4, R23, R2, R165 ;
 Instr 5338 @ 0x14da0 (85408) - FSEL R20, R5, c[0x0][0x210], P1 ;
 Instr 5339 @ 0x14db0 (85424) - FFMA R25, R34, R173.reuse, R25 ;
 Instr 5340 @ 0x14dc0 (85440) - FSEL R47, R21, c[0x0][0x220], !P3 ;
 Instr 5341 @ 0x14dd0 (85456) - HADD2.F32 R5, R17.H0_H0, -RZ.H0_H0 ;
 Instr 5342 @ 0x14de0 (85472) - FSETP.GT.AND P3, PT, R20, c[0x0][0x220], PT ;
 Instr 5343 @ 0x14df0 (85488) - FFMA R4, R27, R173, R4 ;
 Instr 5344 @ 0x14e00 (85504) - FSETP.GEU.AND P1, PT, R32, c[0x0][0x210], PT ;
 Instr 5345 @ 0x14e10 (85520) - F2F.F16.F32 R16, R16 ;
 Instr 5346 @ 0x14e20 (85536) - FSEL R17, R20, c[0x0][0x220], !P3 ;
 Instr 5347 @ 0x14e30 (85552) - LDS.U.128 R20, [R170.X16+0x3300] ;
 Instr 5348 @ 0x14e40 (85568) - FSEL R32, R32, c[0x0][0x210], P1 ;
 Instr 5349 @ 0x14e50 (85584) - FFMA R5, R5, R173.reuse, R24 ;
 Instr 5350 @ 0x14e60 (85600) - FSETP.GEU.AND P1, PT, R26, c[0x0][0x210], PT ;
 Instr 5351 @ 0x14e70 (85616) - HADD2.F32 R24, R12.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5352 @ 0x14e80 (85632) - FSETP.GT.AND P3, PT, R32, c[0x0][0x220], PT ;
 Instr 5353 @ 0x14e90 (85648) - F2F.F16.F32 R47, R47 ;
 Instr 5354 @ 0x14ea0 (85664) - FSEL R26, R26, c[0x0][0x210], P1 ;
 Instr 5355 @ 0x14eb0 (85680) - FSETP.GEU.AND P1, PT, R25, c[0x0][0x210], PT ;
 Instr 5356 @ 0x14ec0 (85696) - FFMA R27, R28, R2.reuse, R45 ;
 Instr 5357 @ 0x14ed0 (85712) - FSEL R32, R32, c[0x0][0x220], !P3 ;
 Instr 5358 @ 0x14ee0 (85728) - FFMA R36, R29, R2.reuse, R164 ;
 Instr 5359 @ 0x14ef0 (85744) - FSETP.GT.AND P3, PT, R26, c[0x0][0x220], PT ;
 Instr 5360 @ 0x14f00 (85760) - FFMA R24, R24, R173, R27 ;
 Instr 5361 @ 0x14f10 (85776) - FSEL R25, R25, c[0x0][0x210], P1 ;
 Instr 5362 @ 0x14f20 (85792) - HADD2.F32 R27, R13.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 5363 @ 0x14f30 (85808) - FSETP.GEU.AND P1, PT, R5, c[0x0][0x210], PT ;
 Instr 5364 @ 0x14f40 (85824) - FFMA R34, R30, R2.reuse, R43 ;
 Instr 5365 @ 0x14f50 (85840) - FSEL R28, R26, c[0x0][0x220], !P3 ;
 Instr 5366 @ 0x14f60 (85856) - FFMA R26, R31, R2, R165 ;
 Instr 5367 @ 0x14f70 (85872) - FSETP.GT.AND P3, PT, R25, c[0x0][0x220], PT ;
 Instr 5368 @ 0x14f80 (85888) - HADD2.F32 R30, R12.H1_H1, -RZ.H0_H0 ;
 Instr 5369 @ 0x14f90 (85904) - FSEL R29, R5, c[0x0][0x210], P1 ;
 Instr 5370 @ 0x14fa0 (85920) - F2F.F16.F32 R17, R17 ;
 Instr 5371 @ 0x14fb0 (85936) - FSETP.GEU.AND P1, PT, R4, c[0x0][0x210], PT ;
 Instr 5372 @ 0x14fc0 (85952) - HADD2.F32 R5, R13.H0_H0, -RZ.H0_H0 ;
 Instr 5373 @ 0x14fd0 (85968) - FSEL R38, R25, c[0x0][0x220], !P3 ;
 Instr 5374 @ 0x14fe0 (85984) - FSETP.GT.AND P3, PT, R29, c[0x0][0x220], PT ;
 Instr 5375 @ 0x14ff0 (86000) - FFMA R30, R30, R173.reuse, R36 ;
 Instr 5376 @ 0x15000 (86016) - FSEL R25, R4, c[0x0][0x210], P1 ;
 Instr 5377 @ 0x15010 (86032) - FFMA R4, R27, R173.reuse, R26 ;
 Instr 5378 @ 0x15020 (86048) - FSEL R12, R29, c[0x0][0x220], !P3 ;
 Instr 5379 @ 0x15030 (86064) - FFMA R5, R5, R173.reuse, R34 ;
 Instr 5380 @ 0x15040 (86080) - FSETP.GEU.AND P1, PT, R24.reuse, c[0x0][0x210], PT ;
 Instr 5381 @ 0x15050 (86096) - F2F.F16.F32 R13, R38 ;
 Instr 5382 @ 0x15060 (86112) - FSETP.GT.AND P3, PT, R25, c[0x0][0x220], PT ;
 Instr 5383 @ 0x15070 (86128) - FSEL R31, R24, c[0x0][0x210], P1 ;
 Instr 5384 @ 0x15080 (86144) - FFMA R164, R21, R2.reuse, R164 ;
 Instr 5385 @ 0x15090 (86160) - FSEL R29, R25, c[0x0][0x220], !P3 ;
 Instr 5386 @ 0x150a0 (86176) - FFMA R20, R20, R2.reuse, R45 ;
 Instr 5387 @ 0x150b0 (86192) - LDS.U.128 R24, [R170.X16+0x110] ;
 Instr 5388 @ 0x150c0 (86208) - FSETP.GEU.AND P1, PT, R30, c[0x0][0x210], PT ;
 Instr 5389 @ 0x150d0 (86224) - HADD2.F32 R40, R9.H0_H0, -RZ.H0_H0 ;
 Instr 5390 @ 0x150e0 (86240) - FSETP.GT.AND P3, PT, R31, c[0x0][0x220], PT ;
 Instr 5391 @ 0x150f0 (86256) - FFMA R22, R22, R2.reuse, R43 ;
 Instr 5392 @ 0x15100 (86272) - FSEL R21, R30, c[0x0][0x210], P1 ;
 Instr 5393 @ 0x15110 (86288) - FFMA R34, R23, R2, R165 ;
 Instr 5394 @ 0x15120 (86304) - FSEL R30, R31, c[0x0][0x220], !P3 ;
 Instr 5395 @ 0x15130 (86320) - F2F.F16.F32 R32, R32 ;
 Instr 5396 @ 0x15140 (86336) - HADD2.F32 R31, R8.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5397 @ 0x15150 (86352) - FSETP.GEU.AND P1, PT, R5, c[0x0][0x210], PT ;
 Instr 5398 @ 0x15160 (86368) - HADD2.F32 R8, R8.H1_H1, -RZ.H0_H0 ;
 Instr 5399 @ 0x15170 (86384) - FSETP.GT.AND P3, PT, R21, c[0x0][0x220], PT ;
 Instr 5400 @ 0x15180 (86400) - FFMA R40, R40, R173, R22 ;
 Instr 5401 @ 0x15190 (86416) - FSEL R5, R5, c[0x0][0x210], P1 ;
 Instr 5402 @ 0x151a0 (86432) - FSETP.GEU.AND P1, PT, R4, c[0x0][0x210], PT ;
 Instr 5403 @ 0x151b0 (86448) - FFMA R20, R31, R173.reuse, R20 ;
 Instr 5404 @ 0x151c0 (86464) - FSEL R21, R21, c[0x0][0x220], !P3 ;
 Instr 5405 @ 0x151d0 (86480) - FFMA R164, R8, R173, R164 ;
 Instr 5406 @ 0x151e0 (86496) - FSETP.GT.AND P3, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 5407 @ 0x151f0 (86512) - F2F.F16.F32 R28, R28 ;
 Instr 5408 @ 0x15200 (86528) - FSEL R4, R4, c[0x0][0x210], P1 ;
 Instr 5409 @ 0x15210 (86544) - FSETP.GEU.AND P1, PT, R20, c[0x0][0x210], PT ;
 Instr 5410 @ 0x15220 (86560) - FSEL R42, R5, c[0x0][0x220], !P3 ;
 Instr 5411 @ 0x15230 (86576) - HADD2.F32 R5, R9.H1_H1, -RZ.H0_H0 ;
 Instr 5412 @ 0x15240 (86592) - FSETP.GT.AND P3, PT, R4, c[0x0][0x220], PT ;
 Instr 5413 @ 0x15250 (86608) - F2F.F16.F32 R31, R21 ;
 Instr 5414 @ 0x15260 (86624) - FSEL R36, R20, c[0x0][0x210], P1 ;
 Instr 5415 @ 0x15270 (86640) - FSETP.GEU.AND P1, PT, R164, c[0x0][0x210], PT ;
 Instr 5416 @ 0x15280 (86656) - FSEL R8, R4, c[0x0][0x220], !P3 ;
 Instr 5417 @ 0x15290 (86672) - FFMA R5, R5, R173.reuse, R34 ;
 Instr 5418 @ 0x152a0 (86688) - FSETP.GT.AND P3, PT, R36, c[0x0][0x220], PT ;
 Instr 5419 @ 0x152b0 (86704) - LDS.U.128 R20, [R170.X16+0x1210] ;
 Instr 5420 @ 0x152c0 (86720) - FSEL R38, R164, c[0x0][0x210], P1 ;
 Instr 5421 @ 0x152d0 (86736) - HADD2.F32 R34, R6.H0_H0, -RZ.H0_H0 ;
 Instr 5422 @ 0x152e0 (86752) - FSETP.GEU.AND P1, PT, R40, c[0x0][0x210], PT ;
 Instr 5423 @ 0x152f0 (86768) - FFMA R6, R24, R2.reuse, R41 ;
 Instr 5424 @ 0x15300 (86784) - FSEL R36, R36, c[0x0][0x220], !P3 ;
 Instr 5425 @ 0x15310 (86800) - HADD2.F32 R4, R7.H0_H0, -RZ.H0_H0 ;
 Instr 5426 @ 0x15320 (86816) - FSETP.GT.AND P3, PT, R38, c[0x0][0x220], PT ;
 Instr 5427 @ 0x15330 (86832) - FFMA R43, R26, R2.reuse, R3 ;
 Instr 5428 @ 0x15340 (86848) - FSEL R40, R40, c[0x0][0x210], P1 ;
 Instr 5429 @ 0x15350 (86864) - FFMA R34, R34, R173.reuse, R6 ;
 Instr 5430 @ 0x15360 (86880) - FSETP.GEU.AND P1, PT, R5, c[0x0][0x210], PT ;
 Instr 5431 @ 0x15370 (86896) - FFMA R6, R25, R2, R166 ;
 Instr 5432 @ 0x15380 (86912) - FSEL R38, R38, c[0x0][0x220], !P3 ;
 Instr 5433 @ 0x15390 (86928) - F2F.F16.F32 R9, R42 ;
 Instr 5434 @ 0x153a0 (86944) - FSETP.GT.AND P3, PT, R40, c[0x0][0x220], PT ;
 Instr 5435 @ 0x153b0 (86960) - FFMA R44, R44, R173.reuse, R6 ;
 Instr 5436 @ 0x153c0 (86976) - FSEL R5, R5, c[0x0][0x210], P1 ;
 Instr 5437 @ 0x153d0 (86992) - FFMA R43, R4, R173, R43 ;
 Instr 5438 @ 0x153e0 (87008) - FSEL R40, R40, c[0x0][0x220], !P3 ;
 Instr 5439 @ 0x153f0 (87024) - FSETP.GT.AND P3, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 5440 @ 0x15400 (87040) - HADD2.F32 R42, R7.H1_H1, -RZ.H0_H0 ;
 Instr 5441 @ 0x15410 (87056) - FSETP.GEU.AND P1, PT, R34.reuse, c[0x0][0x210], PT ;
 Instr 5442 @ 0x15420 (87072) - F2F.F16.F32 R24, R36 ;
 Instr 5443 @ 0x15430 (87088) - FSEL R26, R5, c[0x0][0x220], !P3 ;
 Instr 5444 @ 0x15440 (87104) - LDS.U.128 R4, [R170.X16+0x2310] ;
 Instr 5445 @ 0x15450 (87120) - FSEL R34, R34, c[0x0][0x210], P1 ;
 Instr 5446 @ 0x15460 (87136) - FSETP.GEU.AND P1, PT, R44, c[0x0][0x210], PT ;
 Instr 5447 @ 0x15470 (87152) - F2F.F16.F32 R25, R38 ;
 Instr 5448 @ 0x15480 (87168) - FFMA R36, R27, R2.reuse, R167 ;
 Instr 5449 @ 0x15490 (87184) - FSETP.GT.AND P3, PT, R34, c[0x0][0x220], PT ;
 Instr 5450 @ 0x154a0 (87200) - LDS.U.128 R168, [R170.X16+0x3410] ;
 Instr 5451 @ 0x154b0 (87216) - FSEL R44, R44, c[0x0][0x210], P1 ;
 Instr 5452 @ 0x154c0 (87232) - FFMA R42, R42, R173.reuse, R36 ;
 Instr 5453 @ 0x154d0 (87248) - FSETP.GEU.AND P1, PT, R43.reuse, c[0x0][0x210], PT ;
 Instr 5454 @ 0x154e0 (87264) - HADD2.F32 R36, R18.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 5455 @ 0x154f0 (87280) - FFMA R20, R20, R2.reuse, R41 ;
 Instr 5456 @ 0x15500 (87296) - HADD2.F32 R38, R18.H0_H0, -RZ.H0_H0 ;
 Instr 5457 @ 0x15510 (87312) - FSEL R34, R34, c[0x0][0x220], !P3 ;
 Instr 5458 @ 0x15520 (87328) - F2F.F16.F32 R27, R40 ;
 Instr 5459 @ 0x15530 (87344) - FSETP.GT.AND P3, PT, R44, c[0x0][0x220], PT ;
 Instr 5460 @ 0x15540 (87360) - HADD2.F32 R18, R19.H0_H0, -RZ.H0_H0 ;
 Instr 5461 @ 0x15550 (87376) - FSEL R43, R43, c[0x0][0x210], P1 ;
 Instr 5462 @ 0x15560 (87392) - FFMA R23, R23, R2.reuse, R167 ;
 Instr 5463 @ 0x15570 (87408) - FSETP.GEU.AND P1, PT, R42, c[0x0][0x210], PT ;
 Instr 5464 @ 0x15580 (87424) - FFMA R38, R38, R173.reuse, R20 ;
 Instr 5465 @ 0x15590 (87440) - FSEL R44, R44, c[0x0][0x220], !P3 ;
 Instr 5466 @ 0x155a0 (87456) - FFMA R40, R21, R2.reuse, R166 ;
 Instr 5467 @ 0x155b0 (87472) - FSETP.GT.AND P3, PT, R43.reuse, c[0x0][0x220], PT ;
 Instr 5468 @ 0x155c0 (87488) - F2F.F16.F32 R20, R34 ;
 Instr 5469 @ 0x155d0 (87504) - FSEL R42, R42, c[0x0][0x210], P1 ;
 Instr 5470 @ 0x155e0 (87520) - FFMA R36, R36, R173, R40 ;
 Instr 5471 @ 0x155f0 (87536) - FSETP.GEU.AND P1, PT, R38, c[0x0][0x210], PT ;
 Instr 5472 @ 0x15600 (87552) - FFMA R40, R22, R2, R3 ;
 Instr 5473 @ 0x15610 (87568) - FSEL R43, R43, c[0x0][0x220], !P3 ;
 Instr 5474 @ 0x15620 (87584) - FSETP.GT.AND P3, PT, R42, c[0x0][0x220], PT ;
 Instr 5475 @ 0x15630 (87600) - HADD2.F32 R34, R19.H1_H1, -RZ.H0_H0 ;
 Instr 5476 @ 0x15640 (87616) - FSEL R22, R38, c[0x0][0x210], P1 ;
 Instr 5477 @ 0x15650 (87632) - FFMA R18, R18, R173.reuse, R40 ;
 Instr 5478 @ 0x15660 (87648) - FSETP.GEU.AND P1, PT, R36, c[0x0][0x210], PT ;
 Instr 5479 @ 0x15670 (87664) - HADD2.F32 R40, R14.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5480 @ 0x15680 (87680) - FSEL R38, R42, c[0x0][0x220], !P3 ;
 Instr 5481 @ 0x15690 (87696) - FFMA R4, R4, R2.reuse, R41 ;
 Instr 5482 @ 0x156a0 (87712) - FSETP.GT.AND P3, PT, R22, c[0x0][0x220], PT ;
 Instr 5483 @ 0x156b0 (87728) - FFMA R34, R34, R173.reuse, R23 ;
 Instr 5484 @ 0x156c0 (87744) - FSEL R36, R36, c[0x0][0x210], P1 ;
 Instr 5485 @ 0x156d0 (87760) - HADD2.F32 R14, R14.H1_H1, -RZ.H0_H0 ;
 Instr 5486 @ 0x156e0 (87776) - FSETP.GEU.AND P1, PT, R18, c[0x0][0x210], PT ;
 Instr 5487 @ 0x156f0 (87792) - FFMA R4, R40, R173.reuse, R4 ;
 Instr 5488 @ 0x15700 (87808) - FSEL R22, R22, c[0x0][0x220], !P3 ;
 Instr 5489 @ 0x15710 (87824) - FFMA R5, R5, R2.reuse, R166.reuse ;
 Instr 5490 @ 0x15720 (87840) - FSETP.GT.AND P3, PT, R36, c[0x0][0x220], PT ;
 Instr 5491 @ 0x15730 (87856) - HADD2.F32 R40, R15.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 5492 @ 0x15740 (87872) - FSEL R18, R18, c[0x0][0x210], P1 ;
 Instr 5493 @ 0x15750 (87888) - FFMA R5, R14, R173.reuse, R5 ;
 Instr 5494 @ 0x15760 (87904) - FSETP.GEU.AND P1, PT, R34, c[0x0][0x210], PT ;
 Instr 5495 @ 0x15770 (87920) - FFMA R168, R168, R2.reuse, R41 ;
 Instr 5496 @ 0x15780 (87936) - FSEL R23, R36, c[0x0][0x220], !P3 ;
 Instr 5497 @ 0x15790 (87952) - FFMA R166, R169, R2.reuse, R166 ;
 Instr 5498 @ 0x157a0 (87968) - FSETP.GT.AND P3, PT, R18, c[0x0][0x220], PT ;
 Instr 5499 @ 0x157b0 (87984) - HADD2.F32 R36, R15.H0_H0, -RZ.H0_H0 ;
 Instr 5500 @ 0x157c0 (88000) - FSEL R34, R34, c[0x0][0x210], P1 ;
 Instr 5501 @ 0x157d0 (88016) - FFMA R15, R6, R2.reuse, R3 ;
 Instr 5502 @ 0x157e0 (88032) - FSETP.GEU.AND P1, PT, R4, c[0x0][0x210], PT ;
 Instr 5503 @ 0x157f0 (88048) - FFMA R6, R7, R2.reuse, R167.reuse ;
 Instr 5504 @ 0x15800 (88064) - FSEL R18, R18, c[0x0][0x220], !P3 ;
 Instr 5505 @ 0x15810 (88080) - FFMA R171, R171, R2.reuse, R167 ;
 Instr 5506 @ 0x15820 (88096) - FSETP.GT.AND P3, PT, R34, c[0x0][0x220], PT ;
 Instr 5507 @ 0x15830 (88112) - FFMA R36, R36, R173.reuse, R15 ;
 Instr 5508 @ 0x15840 (88128) - FSEL R4, R4, c[0x0][0x210], P1 ;
 Instr 5509 @ 0x15850 (88144) - FFMA R6, R40, R173, R6 ;
 Instr 5510 @ 0x15860 (88160) - FSEL R34, R34, c[0x0][0x220], !P3 ;
 Instr 5511 @ 0x15870 (88176) - F2F.F16.F32 R14, R18 ;
 Instr 5512 @ 0x15880 (88192) - FSETP.GT.AND P3, PT, R4, c[0x0][0x220], PT ;
 Instr 5513 @ 0x15890 (88208) - HADD2.F32 R40, R11.H0_H0, -RZ.H0_H0 ;
 Instr 5514 @ 0x158a0 (88224) - FSETP.GEU.AND P1, PT, R5, c[0x0][0x210], PT ;
 Instr 5515 @ 0x158b0 (88240) - FFMA R170, R170, R2, R3 ;
 Instr 5516 @ 0x158c0 (88256) - FSEL R15, R4, c[0x0][0x220], !P3 ;
 Instr 5517 @ 0x158d0 (88272) - HADD2.F32 R4, R10.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 5518 @ 0x158e0 (88288) - FSEL R5, R5, c[0x0][0x210], P1 ;
 Instr 5519 @ 0x158f0 (88304) - HADD2.F32 R10, R10.H1_H1, -RZ.H0_H0 ;
 Instr 5520 @ 0x15900 (88320) - FSETP.GEU.AND P1, PT, R36, c[0x0][0x210], PT ;
 Instr 5521 @ 0x15910 (88336) - HADD2.F32 R18, R11.H1_H1, -RZ.H0_H0 ;
 Instr 5522 @ 0x15920 (88352) - FSETP.GT.AND P3, PT, R5.reuse, c[0x0][0x220], PT ;
 Instr 5523 @ 0x15930 (88368) - FFMA R40, R40, R173.reuse, R170 ;
 Instr 5524 @ 0x15940 (88384) - FSEL R36, R36, c[0x0][0x210], P1 ;
 Instr 5525 @ 0x15950 (88400) - FFMA R4, R4, R173.reuse, R168 ;
 Instr 5526 @ 0x15960 (88416) - FSETP.GEU.AND P1, PT, R6, c[0x0][0x210], PT ;
 Instr 5527 @ 0x15970 (88432) - FFMA R166, R10, R173.reuse, R166 ;
 Instr 5528 @ 0x15980 (88448) - FSEL R5, R5, c[0x0][0x220], !P3 ;
 Instr 5529 @ 0x15990 (88464) - FFMA R18, R18, R173, R171 ;
 Instr 5530 @ 0x159a0 (88480) - FSEL R6, R6, c[0x0][0x210], P1 ;
 Instr 5531 @ 0x159b0 (88496) - F2F.F16.F32 R21, R44 ;
 Instr 5532 @ 0x159c0 (88512) - FSETP.GEU.AND P1, PT, R4, c[0x0][0x210], PT ;
 Instr 5533 @ 0x159d0 (88528) - FSETP.GT.AND P3, PT, R36, c[0x0][0x220], PT ;
 Instr 5534 @ 0x159e0 (88544) - FSEL R4, R4, c[0x0][0x210], P1 ;
 Instr 5535 @ 0x159f0 (88560) - FSETP.GEU.AND P1, PT, R166, c[0x0][0x210], PT ;
 Instr 5536 @ 0x15a00 (88576) - F2F.F16.F32 R7, R34 ;
 Instr 5537 @ 0x15a10 (88592) - FSEL R36, R36, c[0x0][0x220], !P3 ;
 Instr 5538 @ 0x15a20 (88608) - FSETP.GT.AND P3, PT, R6, c[0x0][0x220], PT ;
 Instr 5539 @ 0x15a30 (88624) - FSEL R166, R166, c[0x0][0x210], P1 ;
 Instr 5540 @ 0x15a40 (88640) - FSETP.GEU.AND P1, PT, R18, c[0x0][0x210], PT ;
 Instr 5541 @ 0x15a50 (88656) - F2F.F16.F32 R34, R5 ;
 Instr 5542 @ 0x15a60 (88672) - FSEL R6, R6, c[0x0][0x220], !P3 ;
 Instr 5543 @ 0x15a70 (88688) - FSETP.GT.AND P3, PT, R4, c[0x0][0x220], PT ;
 Instr 5544 @ 0x15a80 (88704) - FSEL R18, R18, c[0x0][0x210], P1 ;
 Instr 5545 @ 0x15a90 (88720) - FSETP.GEU.AND P1, PT, R40, c[0x0][0x210], PT ;
 Instr 5546 @ 0x15aa0 (88736) - F2F.F16.F32 R19, R43 ;
 Instr 5547 @ 0x15ab0 (88752) - FSEL R4, R4, c[0x0][0x220], !P3 ;
 Instr 5548 @ 0x15ac0 (88768) - FSETP.GT.AND P3, PT, R166, c[0x0][0x220], PT ;
 Instr 5549 @ 0x15ad0 (88784) - FSEL R5, R40, c[0x0][0x210], P1 ;
 Instr 5550 @ 0x15ae0 (88800) - @P5 IMAD.WIDE R40, R35, R174, c[0x0][0x170] ;
 Instr 5551 @ 0x15af0 (88816) - FSEL R2, R166, c[0x0][0x220], !P3 ;
 Instr 5552 @ 0x15b00 (88832) - F2F.F16.F32 R38, R38 ;
 Instr 5553 @ 0x15b10 (88848) - FSETP.GT.AND P3, PT, R18, c[0x0][0x220], PT ;
 Instr 5554 @ 0x15b20 (88864) - FSETP.GT.AND P1, PT, R5, c[0x0][0x220], PT ;
 Instr 5555 @ 0x15b30 (88880) - PRMT R16, R16, 0x5410, R47 ;
 Instr 5556 @ 0x15b40 (88896) - PRMT R17, R17, 0x5410, R32 ;
 Instr 5557 @ 0x15b50 (88912) - F2F.F16.F32 R12, R12 ;
 Instr 5558 @ 0x15b60 (88928) - @P4 IMAD.WIDE R32, R33, R174, c[0x0][0x170] ;
 Instr 5559 @ 0x15b70 (88944) - PRMT R7, R14, 0x5410, R7 ;
 Instr 5560 @ 0x15b80 (88960) - PRMT R24, R24, 0x5410, R25 ;
 Instr 5561 @ 0x15b90 (88976) - F2F.F16.F32 R29, R29 ;
 Instr 5562 @ 0x15ba0 (88992) - PRMT R19, R19, 0x5410, R38 ;
 Instr 5563 @ 0x15bb0 (89008) - F2F.F16.F32 R22, R22 ;
 Instr 5564 @ 0x15bc0 (89024) - F2F.F16.F32 R23, R23 ;
 Instr 5565 @ 0x15bd0 (89040) - F2F.F16.F32 R11, R6 ;
 Instr 5566 @ 0x15be0 (89056) - F2F.F16.F32 R3, R4 ;
 Instr 5567 @ 0x15bf0 (89072) - FSEL R6, R18, c[0x0][0x220], !P3 ;
 Instr 5568 @ 0x15c00 (89088) - PRMT R18, R20, 0x5410, R21 ;
 Instr 5569 @ 0x15c10 (89104) - FSEL R4, R5, c[0x0][0x220], !P1 ;
 Instr 5570 @ 0x15c20 (89120) - F2F.F16.F32 R30, R30 ;
 Instr 5571 @ 0x15c30 (89136) - PRMT R5, R12, 0x5410, R29 ;
 Instr 5572 @ 0x15c40 (89152) - @P5 STG.E.128.SYS [R40], R16 ;
 Instr 5573 @ 0x15c50 (89168) - F2F.F16.F32 R8, R8 ;
 Instr 5574 @ 0x15c60 (89184) - F2F.F16.F32 R26, R26 ;
 Instr 5575 @ 0x15c70 (89200) - F2F.F16.F32 R15, R15 ;
 Instr 5576 @ 0x15c80 (89216) - F2F.F16.F32 R10, R36 ;
 Instr 5577 @ 0x15c90 (89232) - PRMT R25, R27, 0x5410, R26 ;
 Instr 5578 @ 0x15ca0 (89248) - F2F.F16.F32 R2, R2 ;
 Instr 5579 @ 0x15cb0 (89264) - F2F.F16.F32 R35, R6 ;
 Instr 5580 @ 0x15cc0 (89280) - F2F.F16.F32 R20, R4 ;
 Instr 5581 @ 0x15cd0 (89296) - PRMT R6, R22, 0x5410, R23 ;
 Instr 5582 @ 0x15ce0 (89312) - PRMT R26, R3, 0x5410, R2 ;
 Instr 5583 @ 0x15cf0 (89328) - PRMT R4, R28, 0x5410, R13 ;
 Instr 5584 @ 0x15d00 (89344) - @P2 IMAD.WIDE R12, R39, R174.reuse, c[0x0][0x170] ;
 Instr 5585 @ 0x15d10 (89360) - @P0 IMAD.WIDE R174, R37, R174, c[0x0][0x170] ;
 Instr 5586 @ 0x15d20 (89376) - @P4 STG.E.128.SYS [R32], R4 ;
 Instr 5587 @ 0x15d30 (89392) - PRMT R27, R20, 0x5410, R35 ;
 Instr 5588 @ 0x15d40 (89408) - PRMT R4, R30, 0x5410, R31 ;
 Instr 5589 @ 0x15d50 (89424) - PRMT R5, R9, 0x5410, R8 ;
 Instr 5590 @ 0x15d60 (89440) - PRMT R6, R15, 0x5410, R34 ;
 Instr 5591 @ 0x15d70 (89456) - PRMT R7, R10, 0x5410, R11 ;
 Instr 5592 @ 0x15d80 (89472) - @P2 STG.E.128.SYS [R12], R4 ;
 Instr 5593 @ 0x15d90 (89488) - @P0 STG.E.128.SYS [R174], R24 ;
Basic block id 143 - num instructions 4
 Instr 5594 @ 0x15da0 (89504) - ISETP.NE.AND P0, PT, RZ, UR10, PT ;
 Instr 5595 @ 0x15db0 (89520) - BMOV.32.CLEAR RZ, B0 ;
 Instr 5596 @ 0x15dc0 (89536) - BSSY B0, 0x15f30 ;
 Instr 5597 @ 0x15dd0 (89552) - @P0 BRA 0x15f20 ;
Basic block id 144 - num instructions 3
 Instr 5598 @ 0x15de0 (89568) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 5599 @ 0x15df0 (89584) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 5600 @ 0x15e00 (89600) - @P0 BRA 0x15f20 ;
Basic block id 145 - num instructions 5
 Instr 5601 @ 0x15e10 (89616) - MEMBAR.SC.GPU ;
 Instr 5602 @ 0x15e20 (89632) - ISETP.NE.AND P1, PT, R172, RZ, PT ;
 Instr 5603 @ 0x15e30 (89648) - ERRBAR;
 Instr 5604 @ 0x15e40 (89664) - CCTL.IVALL ;
 Instr 5605 @ 0x15e50 (89680) - @P1 BRA 0x15ec0 ;
Basic block id 146 - num instructions 6
 Instr 5606 @ 0x15e60 (89696) - S2R R0, SR_LANEID ;
 Instr 5607 @ 0x15e70 (89712) - VOTEU.ANY UR5, UPT, PT ;
 Instr 5608 @ 0x15e80 (89728) - UFLO.U32 UR4, UR5 ;
 Instr 5609 @ 0x15e90 (89744) - POPC R3, UR5 ;
 Instr 5610 @ 0x15ea0 (89760) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 5611 @ 0x15eb0 (89776) - @P0 RED.E.ADD.STRONG.GPU [R178], R3 ;
Basic block id 147 - num instructions 6
 Instr 5612 @ 0x15ec0 (89792) - S2R R0, SR_LANEID ;
 Instr 5613 @ 0x15ed0 (89808) - VOTEU.ANY UR5, UPT, PT ;
 Instr 5614 @ 0x15ee0 (89824) - UFLO.U32 UR4, UR5 ;
 Instr 5615 @ 0x15ef0 (89840) - POPC R3, UR5 ;
 Instr 5616 @ 0x15f00 (89856) - ISETP.EQ.U32.AND P0, PT, R0, UR4, PT ;
 Instr 5617 @ 0x15f10 (89872) - @P0 RED.E.ADD.STRONG.GPU [R176], R3 ;
Basic block id 148 - num instructions 1
 Instr 5618 @ 0x15f20 (89888) - BSYNC B0 ;
Basic block id 149 - num instructions 2
 Instr 5619 @ 0x15f30 (89904) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
 Instr 5620 @ 0x15f40 (89920) - EXIT ;
Basic block id 150 - num instructions 3
 Instr 5621 @ 0x15f50 (89936) - WARPSYNC R133 ;
 Instr 5622 @ 0x15f60 (89952) - MOV R133, 0x0 ;
 Instr 5623 @ 0x15f70 (89968) - RET.REL.NODEC R132 0x0 ;
Basic block id 151 - num instructions 1
 Instr 5624 @ 0x15f80 (89984) - BRA 0x15f80;
inspecting sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x128x32_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - number basic blocks 152
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 9 @ 0x90 (144) - IMAD.MOV.U32 R7, RZ, RZ, -0x1 ;
Inject count_instr before - Instr 23 @ 0x170 (368) - MOV R0, 0x1 ;
Inject count_instr before - Instr 24 @ 0x180 (384) - ISETP.NE.AND P2, PT, R3, R8, PT ;
Inject count_instr before - Instr 27 @ 0x1b0 (432) - IADD3 R9, R9, -0x1, RZ ;
Inject count_instr before - Instr 36 @ 0x240 (576) - LOP3.LUT R0, R7, R200, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 41 @ 0x290 (656) - LOP3.LUT R0, R7, R200, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 47 @ 0x2f0 (752) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
Inject count_instr before - Instr 51 @ 0x330 (816) - S2R R0, SR_TID.X ;
Inject count_instr before - Instr 342 @ 0x1560 (5472) - IADD3 R144, R143.reuse, -0x2, RZ ;
Inject count_instr before - Instr 348 @ 0x15c0 (5568) - IADD3 R154, R143, -R156, RZ ;
Inject count_instr before - Instr 349 @ 0x15d0 (5584) - IMAD.MOV.U32 R146, RZ, RZ, c[0x0][0x280] ;
Inject count_instr before - Instr 426 @ 0x1aa0 (6816) - ISETP.NE.AND P0, PT, R156, RZ, PT ;
Inject count_instr before - Instr 428 @ 0x1ac0 (6848) - IMAD R145, R155.reuse, c[0x0][0x61c], RZ ;
Inject count_instr before - Instr 452 @ 0x1c40 (7232) - MOV R3, c[0x0][0x1d0] ;
Inject count_instr before - Instr 455 @ 0x1c70 (7280) - IADD3 R134, R3.reuse, -0x2, RZ ;
Inject count_instr before - Instr 461 @ 0x1cd0 (7376) - IADD3 R150, R3, -R152, RZ ;
Inject count_instr before - Instr 462 @ 0x1ce0 (7392) - IMAD.MOV.U32 R140, RZ, RZ, c[0x0][0x284] ;
Inject count_instr before - Instr 539 @ 0x21b0 (8624) - ISETP.NE.AND P0, PT, R152, RZ, PT ;
Inject count_instr before - Instr 541 @ 0x21d0 (8656) - IMAD R137, R151.reuse, c[0x0][0x1d4], RZ ;
Inject count_instr before - Instr 565 @ 0x2350 (9040) - MOV R3, c[0x0][0x1d4] ;
Inject count_instr before - Instr 568 @ 0x2380 (9088) - IADD3 R2, R3.reuse, -0x2, RZ ;
Inject count_instr before - Instr 574 @ 0x23e0 (9184) - IADD3 R146, R3, -R148, RZ ;
Inject count_instr before - Instr 575 @ 0x23f0 (9200) - IMAD R2, R147.reuse, c[0x0][0x288], R135 ;
Inject count_instr before - Instr 651 @ 0x28b0 (10416) - ISETP.NE.AND P0, PT, R148, RZ, PT ;
Inject count_instr before - Instr 653 @ 0x28d0 (10448) - IMAD.MOV.U32 R134, RZ, RZ, c[0x0][0x628] ;
Inject count_instr before - Instr 676 @ 0x2a40 (10816) - S2UR UR6, SR_CTAID.Z ;
Inject count_instr before - Instr 729 @ 0x2d90 (11664) - R2P PR, R214, 0xf ;
Inject count_instr before - Instr 798 @ 0x31e0 (12768) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 810 @ 0x32a0 (12960) - IMAD.WIDE R230, R230, 0x2, RZ ;
Inject count_instr before - Instr 821 @ 0x3350 (13136) - HMMA.1688.F32 R4, R2, R132, R4 ;
Inject count_instr before - Instr 1052 @ 0x41c0 (16832) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x328], PT ;
Inject count_instr before - Instr 1090 @ 0x4420 (17440) - ISETP.GE.AND P0, PT, R169, c[0x0][0x320], PT ;
Inject count_instr before - Instr 1094 @ 0x4460 (17504) - SHF.R.S32.HI R134, RZ, 0x1f, R169 ;
Inject count_instr before - Instr 1100 @ 0x44c0 (17600) - CS2R R164, SRZ ;
Inject count_instr before - Instr 1102 @ 0x44e0 (17632) - BSYNC B0 ;
Inject count_instr before - Instr 1107 @ 0x4530 (17712) - S2R R133, SR_CTAID.Z ;
Inject count_instr before - Instr 1118 @ 0x45e0 (17888) - S2R R132, SR_CTAID.Z ;
Inject count_instr before - Instr 1139 @ 0x4730 (18224) - ISETP.NE.AND P0, PT, R133, 0x1, PT ;
Inject count_instr before - Instr 1146 @ 0x47a0 (18336) - IMAD.MOV.U32 R134, RZ, RZ, c[0x0][0x298] ;
Inject count_instr before - Instr 1151 @ 0x47f0 (18416) - ISETP.EQ.AND P0, PT, R134, 0x1, PT ;
Inject count_instr before - Instr 1155 @ 0x4830 (18480) - IABS R135, c[0x0][0x294] ;
Inject count_instr before - Instr 1169 @ 0x4910 (18704) - IMAD R134, R135.reuse, R134, R133 ;
Inject count_instr before - Instr 1191 @ 0x4a70 (19056) - LDG.E.STRONG.GPU R132, [R176] ;
Inject count_instr before - Instr 1195 @ 0x4ab0 (19120) - VOTE.ANY R132, PT, PT ;
Inject count_instr before - Instr 1200 @ 0x4b00 (19200) - BRA 0x4ab0 ;
Inject count_instr before - Instr 1201 @ 0x4b10 (19216) - BSYNC B0 ;
Inject count_instr before - Instr 1203 @ 0x4b30 (19248) - MOV R133, 0xffffffff ;
Inject count_instr before - Instr 1206 @ 0x4b60 (19296) - NOP ;
Inject count_instr before - Instr 1211 @ 0x4bb0 (19376) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
Inject count_instr before - Instr 1219 @ 0x4c30 (19504) - LDG.E.STRONG.GPU R132, [R174] ;
Inject count_instr before - Instr 1223 @ 0x4c70 (19568) - VOTE.ANY R132, PT, PT ;
Inject count_instr before - Instr 1228 @ 0x4cc0 (19648) - BRA 0x4c70 ;
Inject count_instr before - Instr 1229 @ 0x4cd0 (19664) - BSYNC B0 ;
Inject count_instr before - Instr 1231 @ 0x4cf0 (19696) - MOV R133, 0xffffffff ;
Inject count_instr before - Instr 1234 @ 0x4d20 (19744) - NOP ;
Inject count_instr before - Instr 1239 @ 0x4d70 (19824) - IMAD.MOV.U32 R132, RZ, RZ, c[0x0][0x290] ;
Inject count_instr before - Instr 1252 @ 0x4e40 (20032) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
Inject count_instr before - Instr 1257 @ 0x4e90 (20112) - IMAD.SHL.U32 R179, R181, 0x10, RZ ;
Inject count_instr before - Instr 1264 @ 0x4f00 (20224) - SHF.R.S32.HI R133, RZ, 0x1f, R180 ;
Inject count_instr before - Instr 1332 @ 0x5340 (21312) - @P1 BRA 0x5520 ;
Inject count_instr before - Instr 1333 @ 0x5350 (21328) - IMAD.U32 R132, RZ, RZ, UR18 ;
Inject count_instr before - Instr 1362 @ 0x5520 (21792) - @!P1 BRA 0x6bb0 ;
Inject count_instr before - Instr 1363 @ 0x5530 (21808) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 1723 @ 0x6bb0 (27568) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 1725 @ 0x6bd0 (27600) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
Inject count_instr before - Instr 1730 @ 0x6c20 (27680) - IMAD.SHL.U32 R133, R134, 0x10, RZ ;
Inject count_instr before - Instr 1737 @ 0x6c90 (27792) - SHF.R.S32.HI R5, RZ, 0x1f, R136 ;
Inject count_instr before - Instr 1811 @ 0x7130 (28976) - @P1 BRA 0x7310 ;
Inject count_instr before - Instr 1812 @ 0x7140 (28992) - ULEA UR5, UP3, UR10, UR18, 0x7 ;
Inject count_instr before - Instr 1841 @ 0x7310 (29456) - @!P1 BRA 0x8990 ;
Inject count_instr before - Instr 1842 @ 0x7320 (29472) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 2201 @ 0x8990 (35216) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 2203 @ 0x89b0 (35248) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
Inject count_instr before - Instr 2208 @ 0x8a00 (35328) - UMOV UR20, UR18 ;
Inject count_instr before - Instr 2253 @ 0x8cd0 (36048) - LDG.E.128.STRONG.GPU R32, [R52.64+UR10] ;
Inject count_instr before - Instr 2299 @ 0x8fb0 (36784) - @P1 BRA 0x9190 ;
Inject count_instr before - Instr 2300 @ 0x8fc0 (36800) - ULEA UR8, UP3, UR5, UR18, 0x8 ;
Inject count_instr before - Instr 2329 @ 0x9190 (37264) - @!P1 BRA 0xa810 ;
Inject count_instr before - Instr 2330 @ 0x91a0 (37280) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 2689 @ 0xa810 (43024) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 2691 @ 0xa830 (43056) - ISETP.GE.AND P0, PT, R173, 0x1, PT ;
Inject count_instr before - Instr 2696 @ 0xa880 (43136) - UMOV UR14, UR18 ;
Inject count_instr before - Instr 2742 @ 0xab60 (43872) - LDG.E.128.STRONG.GPU R32, [R50.64+UR10] ;
Inject count_instr before - Instr 2788 @ 0xae40 (44608) - @P1 BRA 0xb050 ;
Inject count_instr before - Instr 2789 @ 0xae50 (44624) - UMOV UR6, UR18 ;
Inject count_instr before - Instr 2821 @ 0xb050 (45136) - @!P1 BRA 0xc6d0 ;
Inject count_instr before - Instr 2822 @ 0xb060 (45152) - STS.64 [R3], R100 ;
Inject count_instr before - Instr 3181 @ 0xc6d0 (50896) - ISETP.NE.AND P0, PT, RZ, UR16, PT ;
Inject count_instr before - Instr 3183 @ 0xc6f0 (50928) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 3188 @ 0xc740 (51008) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 3193 @ 0xc790 (51088) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 3199 @ 0xc7f0 (51184) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 3205 @ 0xc850 (51280) - BSYNC B0 ;
Inject count_instr before - Instr 3207 @ 0xc870 (51312) - ISETP.NE.AND P0, PT, R133, 0x1, PT ;
Inject count_instr before - Instr 3214 @ 0xc8e0 (51424) - IMAD.MOV.U32 R134, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 3219 @ 0xc930 (51504) - MOV R133, 0x1 ;
Inject count_instr before - Instr 3225 @ 0xc990 (51600) - IABS R136, c[0x0][0x294] ;
Inject count_instr before - Instr 3261 @ 0xcbd0 (52176) - LDG.E.STRONG.GPU R132, [R178] ;
Inject count_instr before - Instr 3265 @ 0xcc10 (52240) - VOTE.ANY R132, PT, PT ;
Inject count_instr before - Instr 3270 @ 0xcc60 (52320) - BRA 0xcc10 ;
Inject count_instr before - Instr 3271 @ 0xcc70 (52336) - BSYNC B0 ;
Inject count_instr before - Instr 3273 @ 0xcc90 (52368) - MOV R133, 0xffffffff ;
Inject count_instr before - Instr 3276 @ 0xccc0 (52416) - NOP ;
Inject count_instr before - Instr 3281 @ 0xcd10 (52496) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
Inject count_instr before - Instr 3289 @ 0xcd90 (52624) - LDG.E.STRONG.GPU R132, [R176] ;
Inject count_instr before - Instr 3293 @ 0xcdd0 (52688) - VOTE.ANY R132, PT, PT ;
Inject count_instr before - Instr 3298 @ 0xce20 (52768) - BRA 0xcdd0 ;
Inject count_instr before - Instr 3299 @ 0xce30 (52784) - BSYNC B0 ;
Inject count_instr before - Instr 3301 @ 0xce50 (52816) - MOV R133, 0xffffffff ;
Inject count_instr before - Instr 3304 @ 0xce80 (52864) - NOP ;
Inject count_instr before - Instr 3309 @ 0xced0 (52944) - IMAD.MOV.U32 R132, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 3323 @ 0xcfb0 (53168) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
Inject count_instr before - Instr 3328 @ 0xd000 (53248) - IMAD.SHL.U32 R181, R182, 0x10, RZ ;
Inject count_instr before - Instr 3335 @ 0xd070 (53360) - SHF.R.S32.HI R133, RZ, 0x1f, R184 ;
Inject count_instr before - Instr 3409 @ 0xd510 (54544) - @P2 BRA 0xd6f0 ;
Inject count_instr before - Instr 3410 @ 0xd520 (54560) - IMAD.U32 R132, RZ, RZ, UR12 ;
Inject count_instr before - Instr 3439 @ 0xd6f0 (55024) - @!P2 BRA 0xf230 ;
Inject count_instr before - Instr 3440 @ 0xd700 (55040) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 3875 @ 0xf230 (62000) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 3878 @ 0xf260 (62048) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
Inject count_instr before - Instr 3883 @ 0xf2b0 (62128) - IMAD.SHL.U32 R133, R134, 0x10, RZ ;
Inject count_instr before - Instr 3890 @ 0xf320 (62240) - SHF.R.S32.HI R5, RZ, 0x1f, R136 ;
Inject count_instr before - Instr 3962 @ 0xf7a0 (63392) - @P2 BRA 0xf980 ;
Inject count_instr before - Instr 3963 @ 0xf7b0 (63408) - ULEA UR5, UP3, UR15, UR12, 0x7 ;
Inject count_instr before - Instr 3992 @ 0xf980 (63872) - @!P2 BRA 0x11510 ;
Inject count_instr before - Instr 3993 @ 0xf990 (63888) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 4433 @ 0x11510 (70928) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 4436 @ 0x11540 (70976) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
Inject count_instr before - Instr 4441 @ 0x11590 (71056) - UMOV UR18, UR12 ;
Inject count_instr before - Instr 4493 @ 0x118d0 (71888) - LDG.E.128.STRONG.GPU R32, [R52.64+UR6] ;
Inject count_instr before - Instr 4539 @ 0x11bb0 (72624) - @P2 BRA 0x11d90 ;
Inject count_instr before - Instr 4540 @ 0x11bc0 (72640) - ULEA UR5, UP3, UR9, UR12, 0x8 ;
Inject count_instr before - Instr 4569 @ 0x11d90 (73104) - @!P2 BRA 0x13920 ;
Inject count_instr before - Instr 4570 @ 0x11da0 (73120) - PLOP3.LUT P0, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 5010 @ 0x13920 (80160) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 5013 @ 0x13950 (80208) - ISETP.GE.AND P0, PT, R175, 0x1, PT ;
Inject count_instr before - Instr 5018 @ 0x139a0 (80288) - UMOV UR18, UR12 ;
Inject count_instr before - Instr 5072 @ 0x13d00 (81152) - LDG.E.128.STRONG.GPU R32, [R50.64+UR6] ;
Inject count_instr before - Instr 5118 @ 0x13fe0 (81888) - @P2 BRA 0x14200 ;
Inject count_instr before - Instr 5119 @ 0x13ff0 (81904) - UMOV UR6, UR12 ;
Inject count_instr before - Instr 5152 @ 0x14200 (82432) - @!P2 BRA 0x15da0 ;
Inject count_instr before - Instr 5153 @ 0x14210 (82448) - PLOP3.LUT P2, PT, PT, PT, UP2, 0x80, 0x0 ;
Inject count_instr before - Instr 5594 @ 0x15da0 (89504) - ISETP.NE.AND P0, PT, RZ, UR10, PT ;
Inject count_instr before - Instr 5598 @ 0x15de0 (89568) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 5601 @ 0x15e10 (89616) - MEMBAR.SC.GPU ;
Inject count_instr before - Instr 5606 @ 0x15e60 (89696) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 5612 @ 0x15ec0 (89792) - S2R R0, SR_LANEID ;
Inject count_instr before - Instr 5618 @ 0x15f20 (89888) - BSYNC B0 ;
Inject count_instr before - Instr 5619 @ 0x15f30 (89904) - BAR.SYNC.DEFER_BLOCKING 0x0 ;
Inject count_instr before - Instr 5621 @ 0x15f50 (89936) - WARPSYNC R133 ;
Inject count_instr before - Instr 5624 @ 0x15f80 (89984) - BRA 0x15f80;
kernel 242 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize128x128x32_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 8,  kernel instructions 80387, total instructions 46440592
kernel 243 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 29184, total instructions 46469776
kernel 244 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 768, total instructions 46470544
kernel 245 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 708, total instructions 46471252
kernel 246 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 512,  kernel instructions 77824, total instructions 46549076
kernel 247 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 25,  kernel instructions 5632, total instructions 46554708
kernel 248 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 25,  kernel instructions 6220, total instructions 46560928
kernel 249 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 27920, total instructions 46588848
kernel 250 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 8192,  kernel instructions 8687616, total instructions 55276464
kernel 251 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 32,  kernel instructions 517982, total instructions 55794446
kernel 252 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 29184, total instructions 55823630
kernel 253 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 768, total instructions 55824398
kernel 254 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 708, total instructions 55825106
kernel 255 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 512,  kernel instructions 77824, total instructions 55902930
kernel 256 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 25,  kernel instructions 6220, total instructions 55909150
kernel 257 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 27920, total instructions 55937070
kernel 258 - _ZN5cudnn19engines_precompiled16nchwToNhwcKernelI6__halfS2_fLb0ELb1EL21cudnnKernelDataType_t0EEEvNS0_18nchw2nhwc_params_tIT1_EEPKT_PT0_ - #thread-blocks 8192,  kernel instructions 8687616, total instructions 64624686
kernel 259 - sm75_xmma_fprop_implicit_gemm_f16f16_f16f32_f32_nhwckrsc_nhwc_tilesize64x64x64_stage1_warpsize2x2x1_g1_tensor16x8x8_execute_kernel__5x_cudnn - #thread-blocks 32,  kernel instructions 518045, total instructions 65142731
kernel 260 - _ZN5cudnn19engines_precompiled16nhwcToNchwKernelI6__halfS2_fLb1ELb0EL21cudnnKernelDataType_t0EEEvNS0_18nhwc2nchw_params_tIT1_EEPKT_PT0_ - #thread-blocks 32,  kernel instructions 29184, total instructions 65171915
kernel 261 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE5_clEvEUlfE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 768, total instructions 65172683
kernel 262 - _ZN2at6native29vectorized_elementwise_kernelILi4EZZZNS0_49_GLOBAL__N__0edc5583_16_Normalization_cu_5c38458722batch_norm_calc_invstdERKNS_6TensorES5_dENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 708, total instructions 65173391
kernel 263 - _ZN2at6native33batch_norm_transform_input_kernelIN3c104HalfES3_fLb1EiEEvNS_27GenericPackedTensorAccessorIKT_Lm3ENS_17RestrictPtrTraitsET3_EENS4_IS5_Lm3ES7_S8_EENS4_INSt11conditionalIXT2_ET1_T0_E4typeELm1ES7_S8_EESG_NS4_IKSD_Lm1ES7_S8_EESI_SC_ - #thread-blocks 512,  kernel instructions 77824, total instructions 65251215
kernel 264 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_15CUDAFunctor_addIN3c104HalfEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 25,  kernel instructions 5632, total instructions 65256847
kernel 265 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_49_GLOBAL__N__d2ba64fb_16_TensorCompare_cu_71e06f4e19launch_clamp_scalarERNS_18TensorIteratorBaseEN3c106ScalarES6_NS0_6detail11ClampLimitsEENKUlvE_clEvENKUlvE6_clEvEUlNS5_4HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 25,  kernel instructions 6220, total instructions 65263067
Function void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::Half, at::native::MeanOps<c10::Half, float, float, c10::Half>, unsigned int, c10::Half, 4, 4> >(at::native::ReduceOp<c10::Half, at::native::MeanOps<c10::Half, float, float, c10::Half>, unsigned int, c10::Half, 4, 4>)
Basic block id 0 - num instructions 5
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R5, SR_TID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x33c], PT ;
 Instr 3 @ 0x30 (48) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 4 @ 0x40 (64) - @!P0 BRA 0xd00 ;
Basic block id 1 - num instructions 14
 Instr 5 @ 0x50 (80) - S2R R3, SR_TID.Y ;
 Instr 6 @ 0x60 (96) - IMAD R0, R5, c[0x0][0x18c], RZ ;
 Instr 7 @ 0x70 (112) - MOV R2, RZ ;
 Instr 8 @ 0x80 (128) - S2R R7, SR_CTAID.X ;
 Instr 9 @ 0x90 (144) - IMAD R0, R3, c[0x0][0x190], R0 ;
 Instr 10 @ 0xa0 (160) - IMAD R3, R7, c[0x0][0x178], R0 ;
 Instr 11 @ 0xb0 (176) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x33c] ;
 Instr 12 @ 0xc0 (192) - IMAD.HI.U32 R6, R3, c[0x0][0x344], R2 ;
 Instr 13 @ 0xd0 (208) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 14 @ 0xe0 (224) - SHF.R.U32.HI R7, RZ, c[0x0][0x348], R6 ;
 Instr 15 @ 0xf0 (240) - IADD3 R2, -R7, RZ, RZ ;
 Instr 16 @ 0x100 (256) - IMAD R2, R2, c[0x0][0x340], R3 ;
 Instr 17 @ 0x110 (272) - IMAD R2, R2, c[0x0][0x470], RZ ;
 Instr 18 @ 0x120 (288) - @!P0 BRA 0xd00 ;
Basic block id 2 - num instructions 8
 Instr 19 @ 0x130 (304) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 20 @ 0x140 (320) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 21 @ 0x150 (336) - IMAD.HI.U32 R8, R7, c[0x0][0x350], R6 ;
 Instr 22 @ 0x160 (352) - SHF.R.U32.HI R9, RZ, c[0x0][0x354], R8 ;
 Instr 23 @ 0x170 (368) - IADD3 R3, -R9, RZ, RZ ;
 Instr 24 @ 0x180 (384) - IMAD R7, R3, c[0x0][0x34c], R7 ;
 Instr 25 @ 0x190 (400) - IMAD R2, R7, c[0x0][0x478], R2 ;
 Instr 26 @ 0x1a0 (416) - @!P0 BRA 0xd00 ;
Basic block id 3 - num instructions 8
 Instr 27 @ 0x1b0 (432) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 28 @ 0x1c0 (448) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 29 @ 0x1d0 (464) - IMAD.HI.U32 R6, R9, c[0x0][0x35c], R8 ;
 Instr 30 @ 0x1e0 (480) - SHF.R.U32.HI R7, RZ, c[0x0][0x360], R6 ;
 Instr 31 @ 0x1f0 (496) - IADD3 R3, -R7, RZ, RZ ;
 Instr 32 @ 0x200 (512) - IMAD R9, R3, c[0x0][0x358], R9 ;
 Instr 33 @ 0x210 (528) - IMAD R2, R9, c[0x0][0x480], R2 ;
 Instr 34 @ 0x220 (544) - @!P0 BRA 0xd00 ;
Basic block id 4 - num instructions 8
 Instr 35 @ 0x230 (560) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 36 @ 0x240 (576) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 37 @ 0x250 (592) - IMAD.HI.U32 R8, R7, c[0x0][0x368], R6 ;
 Instr 38 @ 0x260 (608) - SHF.R.U32.HI R9, RZ, c[0x0][0x36c], R8 ;
 Instr 39 @ 0x270 (624) - IADD3 R3, -R9, RZ, RZ ;
 Instr 40 @ 0x280 (640) - IMAD R7, R3, c[0x0][0x364], R7 ;
 Instr 41 @ 0x290 (656) - IMAD R2, R7, c[0x0][0x488], R2 ;
 Instr 42 @ 0x2a0 (672) - @!P0 BRA 0xd00 ;
Basic block id 5 - num instructions 8
 Instr 43 @ 0x2b0 (688) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 45 @ 0x2d0 (720) - IMAD.HI.U32 R6, R9, c[0x0][0x374], R8 ;
 Instr 46 @ 0x2e0 (736) - SHF.R.U32.HI R7, RZ, c[0x0][0x378], R6 ;
 Instr 47 @ 0x2f0 (752) - IADD3 R3, -R7, RZ, RZ ;
 Instr 48 @ 0x300 (768) - IMAD R9, R3, c[0x0][0x370], R9 ;
 Instr 49 @ 0x310 (784) - IMAD R2, R9, c[0x0][0x490], R2 ;
 Instr 50 @ 0x320 (800) - @!P0 BRA 0xd00 ;
Basic block id 6 - num instructions 8
 Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 52 @ 0x340 (832) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 53 @ 0x350 (848) - IMAD.HI.U32 R8, R7, c[0x0][0x380], R6 ;
 Instr 54 @ 0x360 (864) - SHF.R.U32.HI R9, RZ, c[0x0][0x384], R8 ;
 Instr 55 @ 0x370 (880) - IADD3 R3, -R9, RZ, RZ ;
 Instr 56 @ 0x380 (896) - IMAD R7, R3, c[0x0][0x37c], R7 ;
 Instr 57 @ 0x390 (912) - IMAD R2, R7, c[0x0][0x498], R2 ;
 Instr 58 @ 0x3a0 (928) - @!P0 BRA 0xd00 ;
Basic block id 7 - num instructions 8
 Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 60 @ 0x3c0 (960) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 61 @ 0x3d0 (976) - IMAD.HI.U32 R6, R9, c[0x0][0x38c], R8 ;
 Instr 62 @ 0x3e0 (992) - SHF.R.U32.HI R7, RZ, c[0x0][0x390], R6 ;
 Instr 63 @ 0x3f0 (1008) - IADD3 R3, -R7, RZ, RZ ;
 Instr 64 @ 0x400 (1024) - IMAD R9, R3, c[0x0][0x388], R9 ;
 Instr 65 @ 0x410 (1040) - IMAD R2, R9, c[0x0][0x4a0], R2 ;
 Instr 66 @ 0x420 (1056) - @!P0 BRA 0xd00 ;
Basic block id 8 - num instructions 8
 Instr 67 @ 0x430 (1072) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 68 @ 0x440 (1088) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 69 @ 0x450 (1104) - IMAD.HI.U32 R8, R7, c[0x0][0x398], R6 ;
 Instr 70 @ 0x460 (1120) - SHF.R.U32.HI R9, RZ, c[0x0][0x39c], R8 ;
 Instr 71 @ 0x470 (1136) - IADD3 R3, -R9, RZ, RZ ;
 Instr 72 @ 0x480 (1152) - IMAD R7, R3, c[0x0][0x394], R7 ;
 Instr 73 @ 0x490 (1168) - IMAD R2, R7, c[0x0][0x4a8], R2 ;
 Instr 74 @ 0x4a0 (1184) - @!P0 BRA 0xd00 ;
Basic block id 9 - num instructions 8
 Instr 75 @ 0x4b0 (1200) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 76 @ 0x4c0 (1216) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 77 @ 0x4d0 (1232) - IMAD.HI.U32 R6, R9, c[0x0][0x3a4], R8 ;
 Instr 78 @ 0x4e0 (1248) - SHF.R.U32.HI R7, RZ, c[0x0][0x3a8], R6 ;
 Instr 79 @ 0x4f0 (1264) - IADD3 R3, -R7, RZ, RZ ;
 Instr 80 @ 0x500 (1280) - IMAD R9, R3, c[0x0][0x3a0], R9 ;
 Instr 81 @ 0x510 (1296) - IMAD R2, R9, c[0x0][0x4b0], R2 ;
 Instr 82 @ 0x520 (1312) - @!P0 BRA 0xd00 ;
Basic block id 10 - num instructions 8
 Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 84 @ 0x540 (1344) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 85 @ 0x550 (1360) - IMAD.HI.U32 R8, R7, c[0x0][0x3b0], R6 ;
 Instr 86 @ 0x560 (1376) - SHF.R.U32.HI R9, RZ, c[0x0][0x3b4], R8 ;
 Instr 87 @ 0x570 (1392) - IADD3 R3, -R9, RZ, RZ ;
 Instr 88 @ 0x580 (1408) - IMAD R7, R3, c[0x0][0x3ac], R7 ;
 Instr 89 @ 0x590 (1424) - IMAD R2, R7, c[0x0][0x4b8], R2 ;
 Instr 90 @ 0x5a0 (1440) - @!P0 BRA 0xd00 ;
Basic block id 11 - num instructions 8
 Instr 91 @ 0x5b0 (1456) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 92 @ 0x5c0 (1472) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 93 @ 0x5d0 (1488) - IMAD.HI.U32 R6, R9, c[0x0][0x3bc], R8 ;
 Instr 94 @ 0x5e0 (1504) - SHF.R.U32.HI R7, RZ, c[0x0][0x3c0], R6 ;
 Instr 95 @ 0x5f0 (1520) - IADD3 R3, -R7, RZ, RZ ;
 Instr 96 @ 0x600 (1536) - IMAD R9, R3, c[0x0][0x3b8], R9 ;
 Instr 97 @ 0x610 (1552) - IMAD R2, R9, c[0x0][0x4c0], R2 ;
 Instr 98 @ 0x620 (1568) - @!P0 BRA 0xd00 ;
Basic block id 12 - num instructions 8
 Instr 99 @ 0x630 (1584) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 100 @ 0x640 (1600) - ISETP.NE.AND P0, PT, R0, 0xc, PT ;
 Instr 101 @ 0x650 (1616) - IMAD.HI.U32 R8, R7, c[0x0][0x3c8], R6 ;
 Instr 102 @ 0x660 (1632) - SHF.R.U32.HI R9, RZ, c[0x0][0x3cc], R8 ;
 Instr 103 @ 0x670 (1648) - IADD3 R3, -R9, RZ, RZ ;
 Instr 104 @ 0x680 (1664) - IMAD R7, R3, c[0x0][0x3c4], R7 ;
 Instr 105 @ 0x690 (1680) - IMAD R2, R7, c[0x0][0x4c8], R2 ;
 Instr 106 @ 0x6a0 (1696) - @!P0 BRA 0xd00 ;
Basic block id 13 - num instructions 8
 Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 108 @ 0x6c0 (1728) - ISETP.NE.AND P0, PT, R0, 0xd, PT ;
 Instr 109 @ 0x6d0 (1744) - IMAD.HI.U32 R6, R9, c[0x0][0x3d4], R8 ;
 Instr 110 @ 0x6e0 (1760) - SHF.R.U32.HI R7, RZ, c[0x0][0x3d8], R6 ;
 Instr 111 @ 0x6f0 (1776) - IADD3 R3, -R7, RZ, RZ ;
 Instr 112 @ 0x700 (1792) - IMAD R9, R3, c[0x0][0x3d0], R9 ;
 Instr 113 @ 0x710 (1808) - IMAD R2, R9, c[0x0][0x4d0], R2 ;
 Instr 114 @ 0x720 (1824) - @!P0 BRA 0xd00 ;
Basic block id 14 - num instructions 8
 Instr 115 @ 0x730 (1840) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 116 @ 0x740 (1856) - ISETP.NE.AND P0, PT, R0, 0xe, PT ;
 Instr 117 @ 0x750 (1872) - IMAD.HI.U32 R8, R7, c[0x0][0x3e0], R6 ;
 Instr 118 @ 0x760 (1888) - SHF.R.U32.HI R9, RZ, c[0x0][0x3e4], R8 ;
 Instr 119 @ 0x770 (1904) - IADD3 R3, -R9, RZ, RZ ;
 Instr 120 @ 0x780 (1920) - IMAD R7, R3, c[0x0][0x3dc], R7 ;
 Instr 121 @ 0x790 (1936) - IMAD R2, R7, c[0x0][0x4d8], R2 ;
 Instr 122 @ 0x7a0 (1952) - @!P0 BRA 0xd00 ;
Basic block id 15 - num instructions 8
 Instr 123 @ 0x7b0 (1968) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 124 @ 0x7c0 (1984) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 125 @ 0x7d0 (2000) - IMAD.HI.U32 R6, R9, c[0x0][0x3ec], R8 ;
 Instr 126 @ 0x7e0 (2016) - SHF.R.U32.HI R7, RZ, c[0x0][0x3f0], R6 ;
 Instr 127 @ 0x7f0 (2032) - IADD3 R3, -R7, RZ, RZ ;
 Instr 128 @ 0x800 (2048) - IMAD R9, R3, c[0x0][0x3e8], R9 ;
 Instr 129 @ 0x810 (2064) - IMAD R2, R9, c[0x0][0x4e0], R2 ;
 Instr 130 @ 0x820 (2080) - @!P0 BRA 0xd00 ;
Basic block id 16 - num instructions 8
 Instr 131 @ 0x830 (2096) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 132 @ 0x840 (2112) - ISETP.NE.AND P0, PT, R0, 0x10, PT ;
 Instr 133 @ 0x850 (2128) - IMAD.HI.U32 R8, R7, c[0x0][0x3f8], R6 ;
 Instr 134 @ 0x860 (2144) - SHF.R.U32.HI R9, RZ, c[0x0][0x3fc], R8 ;
 Instr 135 @ 0x870 (2160) - IADD3 R3, -R9, RZ, RZ ;
 Instr 136 @ 0x880 (2176) - IMAD R7, R3, c[0x0][0x3f4], R7 ;
 Instr 137 @ 0x890 (2192) - IMAD R2, R7, c[0x0][0x4e8], R2 ;
 Instr 138 @ 0x8a0 (2208) - @!P0 BRA 0xd00 ;
Basic block id 17 - num instructions 8
 Instr 139 @ 0x8b0 (2224) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 140 @ 0x8c0 (2240) - ISETP.NE.AND P0, PT, R0, 0x11, PT ;
 Instr 141 @ 0x8d0 (2256) - IMAD.HI.U32 R6, R9, c[0x0][0x404], R8 ;
 Instr 142 @ 0x8e0 (2272) - SHF.R.U32.HI R7, RZ, c[0x0][0x408], R6 ;
 Instr 143 @ 0x8f0 (2288) - IADD3 R3, -R7, RZ, RZ ;
 Instr 144 @ 0x900 (2304) - IMAD R9, R3, c[0x0][0x400], R9 ;
 Instr 145 @ 0x910 (2320) - IMAD R2, R9, c[0x0][0x4f0], R2 ;
 Instr 146 @ 0x920 (2336) - @!P0 BRA 0xd00 ;
Basic block id 18 - num instructions 8
 Instr 147 @ 0x930 (2352) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 148 @ 0x940 (2368) - ISETP.NE.AND P0, PT, R0, 0x12, PT ;
 Instr 149 @ 0x950 (2384) - IMAD.HI.U32 R8, R7, c[0x0][0x410], R6 ;
 Instr 150 @ 0x960 (2400) - SHF.R.U32.HI R9, RZ, c[0x0][0x414], R8 ;
 Instr 151 @ 0x970 (2416) - IADD3 R3, -R9, RZ, RZ ;
 Instr 152 @ 0x980 (2432) - IMAD R7, R3, c[0x0][0x40c], R7 ;
 Instr 153 @ 0x990 (2448) - IMAD R2, R7, c[0x0][0x4f8], R2 ;
 Instr 154 @ 0x9a0 (2464) - @!P0 BRA 0xd00 ;
Basic block id 19 - num instructions 8
 Instr 155 @ 0x9b0 (2480) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 156 @ 0x9c0 (2496) - ISETP.NE.AND P0, PT, R0, 0x13, PT ;
 Instr 157 @ 0x9d0 (2512) - IMAD.HI.U32 R6, R9, c[0x0][0x41c], R8 ;
 Instr 158 @ 0x9e0 (2528) - SHF.R.U32.HI R7, RZ, c[0x0][0x420], R6 ;
 Instr 159 @ 0x9f0 (2544) - IADD3 R3, -R7, RZ, RZ ;
 Instr 160 @ 0xa00 (2560) - IMAD R9, R3, c[0x0][0x418], R9 ;
 Instr 161 @ 0xa10 (2576) - IMAD R2, R9, c[0x0][0x500], R2 ;
 Instr 162 @ 0xa20 (2592) - @!P0 BRA 0xd00 ;
Basic block id 20 - num instructions 8
 Instr 163 @ 0xa30 (2608) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 164 @ 0xa40 (2624) - ISETP.NE.AND P0, PT, R0, 0x14, PT ;
 Instr 165 @ 0xa50 (2640) - IMAD.HI.U32 R8, R7, c[0x0][0x428], R6 ;
 Instr 166 @ 0xa60 (2656) - SHF.R.U32.HI R9, RZ, c[0x0][0x42c], R8 ;
 Instr 167 @ 0xa70 (2672) - IADD3 R3, -R9, RZ, RZ ;
 Instr 168 @ 0xa80 (2688) - IMAD R7, R3, c[0x0][0x424], R7 ;
 Instr 169 @ 0xa90 (2704) - IMAD R2, R7, c[0x0][0x508], R2 ;
 Instr 170 @ 0xaa0 (2720) - @!P0 BRA 0xd00 ;
Basic block id 21 - num instructions 8
 Instr 171 @ 0xab0 (2736) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 172 @ 0xac0 (2752) - ISETP.NE.AND P0, PT, R0, 0x15, PT ;
 Instr 173 @ 0xad0 (2768) - IMAD.HI.U32 R6, R9, c[0x0][0x434], R8 ;
 Instr 174 @ 0xae0 (2784) - SHF.R.U32.HI R7, RZ, c[0x0][0x438], R6 ;
 Instr 175 @ 0xaf0 (2800) - IADD3 R3, -R7, RZ, RZ ;
 Instr 176 @ 0xb00 (2816) - IMAD R9, R3, c[0x0][0x430], R9 ;
 Instr 177 @ 0xb10 (2832) - IMAD R2, R9, c[0x0][0x510], R2 ;
 Instr 178 @ 0xb20 (2848) - @!P0 BRA 0xd00 ;
Basic block id 22 - num instructions 8
 Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 180 @ 0xb40 (2880) - ISETP.NE.AND P0, PT, R0, 0x16, PT ;
 Instr 181 @ 0xb50 (2896) - IMAD.HI.U32 R8, R7, c[0x0][0x440], R6 ;
 Instr 182 @ 0xb60 (2912) - SHF.R.U32.HI R9, RZ, c[0x0][0x444], R8 ;
 Instr 183 @ 0xb70 (2928) - IADD3 R3, -R9, RZ, RZ ;
 Instr 184 @ 0xb80 (2944) - IMAD R7, R3, c[0x0][0x43c], R7 ;
 Instr 185 @ 0xb90 (2960) - IMAD R2, R7, c[0x0][0x518], R2 ;
 Instr 186 @ 0xba0 (2976) - @!P0 BRA 0xd00 ;
Basic block id 23 - num instructions 8
 Instr 187 @ 0xbb0 (2992) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 188 @ 0xbc0 (3008) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 189 @ 0xbd0 (3024) - IMAD.HI.U32 R6, R9, c[0x0][0x44c], R8 ;
 Instr 190 @ 0xbe0 (3040) - SHF.R.U32.HI R7, RZ, c[0x0][0x450], R6 ;
 Instr 191 @ 0xbf0 (3056) - IADD3 R3, -R7, RZ, RZ ;
 Instr 192 @ 0xc00 (3072) - IMAD R9, R3, c[0x0][0x448], R9 ;
 Instr 193 @ 0xc10 (3088) - IMAD R2, R9, c[0x0][0x520], R2 ;
 Instr 194 @ 0xc20 (3104) - @!P0 BRA 0xd00 ;
Basic block id 24 - num instructions 13
 Instr 195 @ 0xc30 (3120) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 196 @ 0xc40 (3136) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 197 @ 0xc50 (3152) - IMAD.HI.U32 R8, R7, c[0x0][0x458], R6 ;
 Instr 198 @ 0xc60 (3168) - SHF.R.U32.HI R9, RZ, c[0x0][0x45c], R8 ;
 Instr 199 @ 0xc70 (3184) - @P0 MOV R8, RZ ;
 Instr 200 @ 0xc80 (3200) - IMAD.MOV R3, RZ, RZ, -R9.reuse ;
 Instr 201 @ 0xc90 (3216) - @P0 IMAD.HI.U32 R0, R9, c[0x0][0x464], R8 ;
 Instr 202 @ 0xca0 (3232) - IMAD R7, R3, c[0x0][0x454], R7 ;
 Instr 203 @ 0xcb0 (3248) - @P0 SHF.R.U32.HI R0, RZ, c[0x0][0x468], R0 ;
 Instr 204 @ 0xcc0 (3264) - IMAD R2, R7, c[0x0][0x528], R2 ;
 Instr 205 @ 0xcd0 (3280) - @P0 IADD3 R3, -R0, RZ, RZ ;
 Instr 206 @ 0xce0 (3296) - @P0 IMAD R9, R3, c[0x0][0x460], R9 ;
 Instr 207 @ 0xcf0 (3312) - @P0 IMAD R2, R9, c[0x0][0x530], R2 ;
Basic block id 25 - num instructions 14
 Instr 208 @ 0xd00 (3328) - S2R R0, SR_TID.Y ;
 Instr 209 @ 0xd10 (3344) - IMAD R3, R5.reuse, c[0x0][0x180], RZ ;
 Instr 210 @ 0xd20 (3360) - BMOV.32.CLEAR RZ, B0 ;
 Instr 211 @ 0xd30 (3376) - IMAD R7, R5, c[0x0][0x18c], RZ ;
 Instr 212 @ 0xd40 (3392) - S2R R20, SR_CTAID.Y ;
 Instr 213 @ 0xd50 (3408) - BSSY B0, 0x8f40 ;
 Instr 214 @ 0xd60 (3424) - S2R R4, SR_CTAID.X ;
 Instr 215 @ 0xd70 (3440) - IMAD R3, R0.reuse, c[0x0][0x184], R3 ;
 Instr 216 @ 0xd80 (3456) - IMAD R7, R0, c[0x0][0x190], R7 ;
 Instr 217 @ 0xd90 (3472) - IMAD R10, R20, c[0x0][0x188], R3 ;
 Instr 218 @ 0xda0 (3488) - IMAD R3, R4, c[0x0][0x178], R7 ;
 Instr 219 @ 0xdb0 (3504) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x16c], PT ;
 Instr 220 @ 0xdc0 (3520) - ISETP.GE.U32.OR P0, PT, R3, c[0x0][0x170], P0 ;
 Instr 221 @ 0xdd0 (3536) - @P0 BRA 0x8f30 ;
Basic block id 26 - num instructions 5
 Instr 222 @ 0xde0 (3552) - ULDC.U8 UR4, c[0x0][0x1a0] ;
 Instr 223 @ 0xdf0 (3568) - IADD3 R6, P1, R2, c[0x0][0x538], RZ ;
 Instr 224 @ 0xe00 (3584) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 225 @ 0xe10 (3600) - IMAD.X R7, RZ, RZ, c[0x0][0x53c], P1 ;
 Instr 226 @ 0xe20 (3616) - @!P0 BRA 0x1450 ;
Basic block id 27 - num instructions 8
 Instr 227 @ 0xe30 (3632) - SHF.R.U64 R4, R6, 0x1, R7 ;
 Instr 228 @ 0xe40 (3648) - BMOV.32.CLEAR RZ, B1 ;
 Instr 229 @ 0xe50 (3664) - BSSY B1, 0x10e0 ;
 Instr 230 @ 0xe60 (3680) - IMAD.MOV.U32 R11, RZ, RZ, c[0x0][0x164] ;
 Instr 231 @ 0xe70 (3696) - LOP3.LUT R12, R4, 0x3, RZ, 0xc0, !PT ;
 Instr 232 @ 0xe80 (3712) - MOV R4, c[0x0][0x16c] ;
 Instr 233 @ 0xe90 (3728) - ISETP.NE.AND P0, PT, R12, RZ, PT ;
 Instr 234 @ 0xea0 (3744) - @!P0 BRA 0x10d0 ;
Basic block id 28 - num instructions 5
 Instr 235 @ 0xeb0 (3760) - ISETP.GE.U32.AND P0, PT, R5.reuse, R12, PT ;
 Instr 236 @ 0xec0 (3776) - BMOV.32.CLEAR RZ, B2 ;
 Instr 237 @ 0xed0 (3792) - BSSY B2, 0x1070 ;
 Instr 238 @ 0xee0 (3808) - ISETP.GT.U32.OR P0, PT, R5, 0x3, !P0 ;
 Instr 239 @ 0xef0 (3824) - @P0 BRA 0x1060 ;
Basic block id 29 - num instructions 6
 Instr 240 @ 0xf00 (3840) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x184], PT ;
 Instr 241 @ 0xf10 (3856) - BMOV.32.CLEAR RZ, B3 ;
 Instr 242 @ 0xf20 (3872) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
 Instr 243 @ 0xf30 (3888) - BSSY B3, 0xfc0 ;
 Instr 244 @ 0xf40 (3904) - PRMT R4, RZ, 0x7610, R4 ;
 Instr 245 @ 0xf50 (3920) - @P0 BRA P1, 0xfb0 ;
Basic block id 30 - num instructions 5
 Instr 246 @ 0xf60 (3936) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 247 @ 0xf70 (3952) - MOV R4, 0x1 ;
 Instr 248 @ 0xf80 (3968) - @P0 ISETP.NE.AND P1, PT, R20, RZ, PT ;
 Instr 249 @ 0xf90 (3984) - @P0 SEL R8, RZ, 0x1, P1 ;
 Instr 250 @ 0xfa0 (4000) - @P0 PRMT R4, R8, 0x7610, R4 ;
Basic block id 31 - num instructions 4
 Instr 251 @ 0xfb0 (4016) - BSYNC B3 ;
 Instr 252 @ 0xfc0 (4032) - PRMT R4, R4, 0x9910, RZ ;
 Instr 253 @ 0xfd0 (4048) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 254 @ 0xfe0 (4064) - @!P0 BRA 0x1060 ;
Basic block id 32 - num instructions 7
 Instr 255 @ 0xff0 (4080) - IADD3 R9, P0, R5, -R12, RZ ;
 Instr 256 @ 0x1000 (4096) - IMAD.X R4, RZ, RZ, -0x1, P0 ;
 Instr 257 @ 0x1010 (4112) - LEA R8, P0, R9, R6, 0x1 ;
 Instr 258 @ 0x1020 (4128) - LEA.HI.X R9, R9, R7, R4, 0x1, P0 ;
 Instr 259 @ 0x1030 (4144) - LDG.E.U16.SYS R8, [R8] ;
 Instr 260 @ 0x1040 (4160) - HADD2.F32 R11, R8.H0_H0, -RZ.H0_H0 ;
 Instr 261 @ 0x1050 (4176) - FADD R11, R11, c[0x0][0x164] ;
Basic block id 33 - num instructions 7
 Instr 262 @ 0x1060 (4192) - BSYNC B2 ;
 Instr 263 @ 0x1070 (4208) - IADD3 R9, P0, -R12.reuse, 0x4, RZ ;
 Instr 264 @ 0x1080 (4224) - IADD3 R4, R12, c[0x0][0x16c], RZ ;
 Instr 265 @ 0x1090 (4240) - IADD3.X R8, RZ, -0x1, RZ, P0, !PT ;
 Instr 266 @ 0x10a0 (4256) - LEA R6, P0, R9.reuse, R6, 0x1 ;
 Instr 267 @ 0x10b0 (4272) - IADD3 R4, R4, -0x4, RZ ;
 Instr 268 @ 0x10c0 (4288) - LEA.HI.X R7, R9, R7, R8, 0x1, P0 ;
Basic block id 34 - num instructions 10
 Instr 269 @ 0x10d0 (4304) - BSYNC B1 ;
 Instr 270 @ 0x10e0 (4320) - LEA R9, R10, 0x3, 0x2 ;
 Instr 271 @ 0x10f0 (4336) - BMOV.32.CLEAR RZ, B1 ;
 Instr 272 @ 0x1100 (4352) - BSSY B1, 0x1290 ;
 Instr 273 @ 0x1110 (4368) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x184], PT ;
 Instr 274 @ 0x1120 (4384) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x164] ;
 Instr 275 @ 0x1130 (4400) - ISETP.GE.U32.AND P0, PT, R9, R4, PT ;
 Instr 276 @ 0x1140 (4416) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x164] ;
 Instr 277 @ 0x1150 (4432) - ISETP.NE.AND P2, PT, R0, RZ, PT ;
 Instr 278 @ 0x1160 (4448) - MOV R13, c[0x0][0x164] ;
Basic block id 35 - num instructions 1
 Instr 279 @ 0x1170 (4464) - @P0 BRA 0x1280 ;
Basic block id 36 - num instructions 2
 Instr 280 @ 0x1180 (4480) - MOV R13, c[0x0][0x164] ;
 Instr 281 @ 0x1190 (4496) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x164] ;
Basic block id 37 - num instructions 14
 Instr 282 @ 0x11a0 (4512) - IMAD.WIDE.U32 R8, R10, 0x8, R6 ;
 Instr 283 @ 0x11b0 (4528) - LDG.E.64.SYS R8, [R8] ;
 Instr 284 @ 0x11c0 (4544) - IADD3 R10, R10, c[0x0][0x174], RZ ;
 Instr 285 @ 0x11d0 (4560) - LEA R19, R10, 0x3, 0x2 ;
 Instr 286 @ 0x11e0 (4576) - ISETP.GE.U32.AND P0, PT, R19, R4, PT ;
 Instr 287 @ 0x11f0 (4592) - HADD2.F32 R16, R8.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 288 @ 0x1200 (4608) - HADD2.F32 R15, R8.H1_H1, -RZ.H0_H0 ;
 Instr 289 @ 0x1210 (4624) - HADD2.F32 R18, R9.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 290 @ 0x1220 (4640) - HADD2.F32 R17, R9.H1_H1, -RZ.H0_H0 ;
 Instr 291 @ 0x1230 (4656) - FADD R11, R16, R11 ;
 Instr 292 @ 0x1240 (4672) - FADD R14, R15, R14 ;
 Instr 293 @ 0x1250 (4688) - FADD R13, R18, R13 ;
 Instr 294 @ 0x1260 (4704) - FADD R12, R17, R12 ;
 Instr 295 @ 0x1270 (4720) - @!P0 BRA 0x11a0 ;
Basic block id 38 - num instructions 5
 Instr 296 @ 0x1280 (4736) - BSYNC B1 ;
 Instr 297 @ 0x1290 (4752) - BMOV.32.CLEAR RZ, B1 ;
 Instr 298 @ 0x12a0 (4768) - BSSY B1, 0x1330 ;
 Instr 299 @ 0x12b0 (4784) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 300 @ 0x12c0 (4800) - @P1 BRA P2, 0x1320 ;
Basic block id 39 - num instructions 5
 Instr 301 @ 0x12d0 (4816) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 302 @ 0x12e0 (4832) - MOV R8, 0x1 ;
 Instr 303 @ 0x12f0 (4848) - @P0 ISETP.NE.AND P1, PT, R20, RZ, PT ;
 Instr 304 @ 0x1300 (4864) - @P0 SEL R9, RZ, 0x1, P1 ;
 Instr 305 @ 0x1310 (4880) - @P0 PRMT R8, R9, 0x7610, R8 ;
Basic block id 40 - num instructions 6
 Instr 306 @ 0x1320 (4896) - BSYNC B1 ;
 Instr 307 @ 0x1330 (4912) - PRMT R8, R8, 0x9910, RZ ;
 Instr 308 @ 0x1340 (4928) - BMOV.32.CLEAR RZ, B1 ;
 Instr 309 @ 0x1350 (4944) - BSSY B1, 0x1410 ;
 Instr 310 @ 0x1360 (4960) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 311 @ 0x1370 (4976) - @!P0 BRA 0x1400 ;
Basic block id 41 - num instructions 4
 Instr 312 @ 0x1380 (4992) - LOP3.LUT R8, R4, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 313 @ 0x1390 (5008) - IMAD.IADD R9, R8, 0x1, R5 ;
 Instr 314 @ 0x13a0 (5024) - ISETP.GE.U32.AND P0, PT, R9, R4, PT ;
 Instr 315 @ 0x13b0 (5040) - @P0 BRA 0x1400 ;
Basic block id 42 - num instructions 4
 Instr 316 @ 0x13c0 (5056) - IMAD.WIDE R6, R9, 0x2, R6 ;
 Instr 317 @ 0x13d0 (5072) - LDG.E.U16.SYS R6, [R6] ;
 Instr 318 @ 0x13e0 (5088) - HADD2.F32 R4, R6.H0_H0, -RZ.H0_H0 ;
 Instr 319 @ 0x13f0 (5104) - FADD R11, R11, R4 ;
Basic block id 43 - num instructions 5
 Instr 320 @ 0x1400 (5120) - BSYNC B1 ;
 Instr 321 @ 0x1410 (5136) - FADD R14, R14, R11 ;
 Instr 322 @ 0x1420 (5152) - FADD R13, R14, R13 ;
 Instr 323 @ 0x1430 (5168) - FADD R4, R13, R12 ;
 Instr 324 @ 0x1440 (5184) - BRA 0x8f30 ;
Basic block id 44 - num instructions 7
 Instr 325 @ 0x1450 (5200) - MOV R20, c[0x0][0x2d8] ;
 Instr 326 @ 0x1460 (5216) - IMAD.MOV.U32 R4, RZ, RZ, 0x1 ;
 Instr 327 @ 0x1470 (5232) - SHF.R.U32.HI R20, RZ, 0x1, R20 ;
 Instr 328 @ 0x1480 (5248) - ISETP.EQ.AND P2, PT, R4, c[0x0][0x1a8], PT ;
 Instr 329 @ 0x1490 (5264) - ISETP.NE.AND P0, PT, R20, 0x1, PT ;
 Instr 330 @ 0x14a0 (5280) - ISETP.NE.AND P1, PT, R4, c[0x0][0x1a8], PT ;
 Instr 331 @ 0x14b0 (5296) - @!P0 BRA P2, 0x89d0 ;
Basic block id 45 - num instructions 5
 Instr 332 @ 0x14c0 (5312) - MOV R26, c[0x0][0x174] ;
 Instr 333 @ 0x14d0 (5328) - IMAD.MOV.U32 R9, RZ, RZ, R10 ;
 Instr 334 @ 0x14e0 (5344) - MOV R4, c[0x0][0x164] ;
 Instr 335 @ 0x14f0 (5360) - IMAD R8, R26, 0x3, R10 ;
 Instr 336 @ 0x1500 (5376) - @!P1 BRA 0x8420 ;
Basic block id 46 - num instructions 7
 Instr 337 @ 0x1510 (5392) - ISETP.GE.U32.AND P0, PT, R8, c[0x0][0x16c], PT ;
 Instr 338 @ 0x1520 (5408) - BMOV.32.CLEAR RZ, B1 ;
 Instr 339 @ 0x1530 (5424) - BSSY B1, 0x4ea0 ;
 Instr 340 @ 0x1540 (5440) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x164] ;
 Instr 341 @ 0x1550 (5456) - MOV R10, c[0x0][0x164] ;
 Instr 342 @ 0x1560 (5472) - IMAD.MOV.U32 R11, RZ, RZ, c[0x0][0x164] ;
 Instr 343 @ 0x1570 (5488) - @P0 BRA 0x4e90 ;
Basic block id 47 - num instructions 6
 Instr 344 @ 0x1580 (5504) - BMOV.32.CLEAR RZ, B2 ;
 Instr 345 @ 0x1590 (5520) - BSSY B2, 0x4e80 ;
 Instr 346 @ 0x15a0 (5536) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x1a8], PT ;
 Instr 347 @ 0x15b0 (5552) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x164] ;
 Instr 348 @ 0x15c0 (5568) - MOV R8, c[0x0][0x164] ;
 Instr 349 @ 0x15d0 (5584) - MOV R11, c[0x0][0x164] ;
Basic block id 48 - num instructions 2
 Instr 350 @ 0x15e0 (5600) - CS2R R12, SRZ ;
 Instr 351 @ 0x15f0 (5616) - @!P0 BRA 0x2340 ;
Basic block id 49 - num instructions 10
 Instr 352 @ 0x1600 (5632) - MOV R15, R9 ;
 Instr 353 @ 0x1610 (5648) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 354 @ 0x1620 (5664) - IMAD.HI.U32 R13, R9, c[0x0][0x1b0], R14 ;
 Instr 355 @ 0x1630 (5680) - SHF.R.U32.HI R15, RZ, c[0x0][0x1b4], R13 ;
 Instr 356 @ 0x1640 (5696) - IMAD.MOV.U32 R13, RZ, RZ, 0x1 ;
 Instr 357 @ 0x1650 (5712) - IADD3 R14, -R15, RZ, RZ ;
 Instr 358 @ 0x1660 (5728) - ISETP.NE.AND P1, PT, R13, c[0x0][0x1a8], PT ;
 Instr 359 @ 0x1670 (5744) - IMAD R13, R14, c[0x0][0x1ac], R9 ;
 Instr 360 @ 0x1680 (5760) - IMAD R13, R13, c[0x0][0x2d8], RZ ;
 Instr 361 @ 0x1690 (5776) - @!P1 BRA 0x2340 ;
Basic block id 50 - num instructions 9
 Instr 362 @ 0x16a0 (5792) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 363 @ 0x16b0 (5808) - MOV R16, c[0x0][0x1a8] ;
 Instr 364 @ 0x16c0 (5824) - IMAD.HI.U32 R14, R15, c[0x0][0x1bc], R14 ;
 Instr 365 @ 0x16d0 (5840) - ISETP.NE.AND P1, PT, R16, 0x2, PT ;
 Instr 366 @ 0x16e0 (5856) - SHF.R.U32.HI R17, RZ, c[0x0][0x1c0], R14 ;
 Instr 367 @ 0x16f0 (5872) - IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 368 @ 0x1700 (5888) - IMAD R14, R14, c[0x0][0x1b8], R15 ;
 Instr 369 @ 0x1710 (5904) - IMAD R13, R14, c[0x0][0x2dc], R13 ;
 Instr 370 @ 0x1720 (5920) - @!P1 BRA 0x2340 ;
Basic block id 51 - num instructions 9
 Instr 371 @ 0x1730 (5936) - MOV R14, RZ ;
 Instr 372 @ 0x1740 (5952) - IMAD.MOV.U32 R15, RZ, RZ, R17 ;
 Instr 373 @ 0x1750 (5968) - ISETP.NE.AND P1, PT, R16, 0x3, PT ;
 Instr 374 @ 0x1760 (5984) - IMAD.HI.U32 R14, R17, c[0x0][0x1c8], R14 ;
 Instr 375 @ 0x1770 (6000) - SHF.R.U32.HI R15, RZ, c[0x0][0x1cc], R14 ;
 Instr 376 @ 0x1780 (6016) - IADD3 R14, -R15, RZ, RZ ;
 Instr 377 @ 0x1790 (6032) - IMAD R14, R14, c[0x0][0x1c4], R17 ;
 Instr 378 @ 0x17a0 (6048) - IMAD R13, R14, c[0x0][0x2e0], R13 ;
 Instr 379 @ 0x17b0 (6064) - @!P1 BRA 0x2340 ;
Basic block id 52 - num instructions 8
 Instr 380 @ 0x17c0 (6080) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 381 @ 0x17d0 (6096) - ISETP.NE.AND P1, PT, R16, 0x4, PT ;
 Instr 382 @ 0x17e0 (6112) - IMAD.HI.U32 R14, R15, c[0x0][0x1d4], R14 ;
 Instr 383 @ 0x17f0 (6128) - SHF.R.U32.HI R17, RZ, c[0x0][0x1d8], R14 ;
 Instr 384 @ 0x1800 (6144) - IADD3 R14, -R17, RZ, RZ ;
 Instr 385 @ 0x1810 (6160) - IMAD R14, R14, c[0x0][0x1d0], R15 ;
 Instr 386 @ 0x1820 (6176) - IMAD R13, R14, c[0x0][0x2e4], R13 ;
 Instr 387 @ 0x1830 (6192) - @!P1 BRA 0x2340 ;
Basic block id 53 - num instructions 9
 Instr 388 @ 0x1840 (6208) - MOV R15, R17 ;
 Instr 389 @ 0x1850 (6224) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 390 @ 0x1860 (6240) - ISETP.NE.AND P1, PT, R16, 0x5, PT ;
 Instr 391 @ 0x1870 (6256) - IMAD.HI.U32 R14, R17, c[0x0][0x1e0], R14 ;
 Instr 392 @ 0x1880 (6272) - SHF.R.U32.HI R15, RZ, c[0x0][0x1e4], R14 ;
 Instr 393 @ 0x1890 (6288) - IMAD.MOV R14, RZ, RZ, -R15 ;
 Instr 394 @ 0x18a0 (6304) - IMAD R14, R14, c[0x0][0x1dc], R17 ;
 Instr 395 @ 0x18b0 (6320) - IMAD R13, R14, c[0x0][0x2e8], R13 ;
 Instr 396 @ 0x18c0 (6336) - @!P1 BRA 0x2340 ;
Basic block id 54 - num instructions 8
 Instr 397 @ 0x18d0 (6352) - MOV R14, RZ ;
 Instr 398 @ 0x18e0 (6368) - ISETP.NE.AND P1, PT, R16, 0x6, PT ;
 Instr 399 @ 0x18f0 (6384) - IMAD.HI.U32 R14, R15, c[0x0][0x1ec], R14 ;
 Instr 400 @ 0x1900 (6400) - SHF.R.U32.HI R17, RZ, c[0x0][0x1f0], R14 ;
 Instr 401 @ 0x1910 (6416) - IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 402 @ 0x1920 (6432) - IMAD R14, R14, c[0x0][0x1e8], R15 ;
 Instr 403 @ 0x1930 (6448) - IMAD R13, R14, c[0x0][0x2ec], R13 ;
 Instr 404 @ 0x1940 (6464) - @!P1 BRA 0x2340 ;
Basic block id 55 - num instructions 9
 Instr 405 @ 0x1950 (6480) - MOV R14, RZ ;
 Instr 406 @ 0x1960 (6496) - IMAD.MOV.U32 R15, RZ, RZ, R17 ;
 Instr 407 @ 0x1970 (6512) - ISETP.NE.AND P1, PT, R16, 0x7, PT ;
 Instr 408 @ 0x1980 (6528) - IMAD.HI.U32 R14, R17, c[0x0][0x1f8], R14 ;
 Instr 409 @ 0x1990 (6544) - SHF.R.U32.HI R15, RZ, c[0x0][0x1fc], R14 ;
 Instr 410 @ 0x19a0 (6560) - IADD3 R14, -R15, RZ, RZ ;
 Instr 411 @ 0x19b0 (6576) - IMAD R14, R14, c[0x0][0x1f4], R17 ;
 Instr 412 @ 0x19c0 (6592) - IMAD R13, R14, c[0x0][0x2f0], R13 ;
 Instr 413 @ 0x19d0 (6608) - @!P1 BRA 0x2340 ;
Basic block id 56 - num instructions 8
 Instr 414 @ 0x19e0 (6624) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 415 @ 0x19f0 (6640) - ISETP.NE.AND P1, PT, R16, 0x8, PT ;
 Instr 416 @ 0x1a00 (6656) - IMAD.HI.U32 R14, R15, c[0x0][0x204], R14 ;
 Instr 417 @ 0x1a10 (6672) - SHF.R.U32.HI R17, RZ, c[0x0][0x208], R14 ;
 Instr 418 @ 0x1a20 (6688) - IADD3 R14, -R17, RZ, RZ ;
 Instr 419 @ 0x1a30 (6704) - IMAD R14, R14, c[0x0][0x200], R15 ;
 Instr 420 @ 0x1a40 (6720) - IMAD R13, R14, c[0x0][0x2f4], R13 ;
 Instr 421 @ 0x1a50 (6736) - @!P1 BRA 0x2340 ;
Basic block id 57 - num instructions 9
 Instr 422 @ 0x1a60 (6752) - MOV R15, R17 ;
 Instr 423 @ 0x1a70 (6768) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 424 @ 0x1a80 (6784) - ISETP.NE.AND P1, PT, R16, 0x9, PT ;
 Instr 425 @ 0x1a90 (6800) - IMAD.HI.U32 R14, R17, c[0x0][0x210], R14 ;
 Instr 426 @ 0x1aa0 (6816) - SHF.R.U32.HI R15, RZ, c[0x0][0x214], R14 ;
 Instr 427 @ 0x1ab0 (6832) - IMAD.MOV R14, RZ, RZ, -R15 ;
 Instr 428 @ 0x1ac0 (6848) - IMAD R14, R14, c[0x0][0x20c], R17 ;
 Instr 429 @ 0x1ad0 (6864) - IMAD R13, R14, c[0x0][0x2f8], R13 ;
 Instr 430 @ 0x1ae0 (6880) - @!P1 BRA 0x2340 ;
Basic block id 58 - num instructions 8
 Instr 431 @ 0x1af0 (6896) - MOV R14, RZ ;
 Instr 432 @ 0x1b00 (6912) - ISETP.NE.AND P1, PT, R16, 0xa, PT ;
 Instr 433 @ 0x1b10 (6928) - IMAD.HI.U32 R14, R15, c[0x0][0x21c], R14 ;
 Instr 434 @ 0x1b20 (6944) - SHF.R.U32.HI R17, RZ, c[0x0][0x220], R14 ;
 Instr 435 @ 0x1b30 (6960) - IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 436 @ 0x1b40 (6976) - IMAD R14, R14, c[0x0][0x218], R15 ;
 Instr 437 @ 0x1b50 (6992) - IMAD R13, R14, c[0x0][0x2fc], R13 ;
 Instr 438 @ 0x1b60 (7008) - @!P1 BRA 0x2340 ;
Basic block id 59 - num instructions 9
 Instr 439 @ 0x1b70 (7024) - MOV R14, RZ ;
 Instr 440 @ 0x1b80 (7040) - IMAD.MOV.U32 R15, RZ, RZ, R17 ;
 Instr 441 @ 0x1b90 (7056) - ISETP.NE.AND P1, PT, R16, 0xb, PT ;
 Instr 442 @ 0x1ba0 (7072) - IMAD.HI.U32 R14, R17, c[0x0][0x228], R14 ;
 Instr 443 @ 0x1bb0 (7088) - SHF.R.U32.HI R15, RZ, c[0x0][0x22c], R14 ;
 Instr 444 @ 0x1bc0 (7104) - IADD3 R14, -R15, RZ, RZ ;
 Instr 445 @ 0x1bd0 (7120) - IMAD R14, R14, c[0x0][0x224], R17 ;
 Instr 446 @ 0x1be0 (7136) - IMAD R13, R14, c[0x0][0x300], R13 ;
 Instr 447 @ 0x1bf0 (7152) - @!P1 BRA 0x2340 ;
Basic block id 60 - num instructions 8
 Instr 448 @ 0x1c00 (7168) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 449 @ 0x1c10 (7184) - ISETP.NE.AND P1, PT, R16, 0xc, PT ;
 Instr 450 @ 0x1c20 (7200) - IMAD.HI.U32 R14, R15, c[0x0][0x234], R14 ;
 Instr 451 @ 0x1c30 (7216) - SHF.R.U32.HI R17, RZ, c[0x0][0x238], R14 ;
 Instr 452 @ 0x1c40 (7232) - IADD3 R14, -R17, RZ, RZ ;
 Instr 453 @ 0x1c50 (7248) - IMAD R14, R14, c[0x0][0x230], R15 ;
 Instr 454 @ 0x1c60 (7264) - IMAD R13, R14, c[0x0][0x304], R13 ;
 Instr 455 @ 0x1c70 (7280) - @!P1 BRA 0x2340 ;
Basic block id 61 - num instructions 9
 Instr 456 @ 0x1c80 (7296) - MOV R15, R17 ;
 Instr 457 @ 0x1c90 (7312) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 458 @ 0x1ca0 (7328) - ISETP.NE.AND P1, PT, R16, 0xd, PT ;
 Instr 459 @ 0x1cb0 (7344) - IMAD.HI.U32 R14, R17, c[0x0][0x240], R14 ;
 Instr 460 @ 0x1cc0 (7360) - SHF.R.U32.HI R15, RZ, c[0x0][0x244], R14 ;
 Instr 461 @ 0x1cd0 (7376) - IMAD.MOV R14, RZ, RZ, -R15 ;
 Instr 462 @ 0x1ce0 (7392) - IMAD R14, R14, c[0x0][0x23c], R17 ;
 Instr 463 @ 0x1cf0 (7408) - IMAD R13, R14, c[0x0][0x308], R13 ;
 Instr 464 @ 0x1d00 (7424) - @!P1 BRA 0x2340 ;
Basic block id 62 - num instructions 8
 Instr 465 @ 0x1d10 (7440) - MOV R14, RZ ;
 Instr 466 @ 0x1d20 (7456) - ISETP.NE.AND P1, PT, R16, 0xe, PT ;
 Instr 467 @ 0x1d30 (7472) - IMAD.HI.U32 R14, R15, c[0x0][0x24c], R14 ;
 Instr 468 @ 0x1d40 (7488) - SHF.R.U32.HI R17, RZ, c[0x0][0x250], R14 ;
 Instr 469 @ 0x1d50 (7504) - IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 470 @ 0x1d60 (7520) - IMAD R14, R14, c[0x0][0x248], R15 ;
 Instr 471 @ 0x1d70 (7536) - IMAD R13, R14, c[0x0][0x30c], R13 ;
 Instr 472 @ 0x1d80 (7552) - @!P1 BRA 0x2340 ;
Basic block id 63 - num instructions 9
 Instr 473 @ 0x1d90 (7568) - MOV R14, RZ ;
 Instr 474 @ 0x1da0 (7584) - IMAD.MOV.U32 R15, RZ, RZ, R17 ;
 Instr 475 @ 0x1db0 (7600) - ISETP.NE.AND P1, PT, R16, 0xf, PT ;
 Instr 476 @ 0x1dc0 (7616) - IMAD.HI.U32 R14, R17, c[0x0][0x258], R14 ;
 Instr 477 @ 0x1dd0 (7632) - SHF.R.U32.HI R15, RZ, c[0x0][0x25c], R14 ;
 Instr 478 @ 0x1de0 (7648) - IADD3 R14, -R15, RZ, RZ ;
 Instr 479 @ 0x1df0 (7664) - IMAD R14, R14, c[0x0][0x254], R17 ;
 Instr 480 @ 0x1e00 (7680) - IMAD R13, R14, c[0x0][0x310], R13 ;
 Instr 481 @ 0x1e10 (7696) - @!P1 BRA 0x2340 ;
Basic block id 64 - num instructions 8
 Instr 482 @ 0x1e20 (7712) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 483 @ 0x1e30 (7728) - ISETP.NE.AND P1, PT, R16, 0x10, PT ;
 Instr 484 @ 0x1e40 (7744) - IMAD.HI.U32 R14, R15, c[0x0][0x264], R14 ;
 Instr 485 @ 0x1e50 (7760) - SHF.R.U32.HI R17, RZ, c[0x0][0x268], R14 ;
 Instr 486 @ 0x1e60 (7776) - IADD3 R14, -R17, RZ, RZ ;
 Instr 487 @ 0x1e70 (7792) - IMAD R14, R14, c[0x0][0x260], R15 ;
 Instr 488 @ 0x1e80 (7808) - IMAD R13, R14, c[0x0][0x314], R13 ;
 Instr 489 @ 0x1e90 (7824) - @!P1 BRA 0x2340 ;
Basic block id 65 - num instructions 9
 Instr 490 @ 0x1ea0 (7840) - MOV R15, R17 ;
 Instr 491 @ 0x1eb0 (7856) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 492 @ 0x1ec0 (7872) - ISETP.NE.AND P1, PT, R16, 0x11, PT ;
 Instr 493 @ 0x1ed0 (7888) - IMAD.HI.U32 R14, R17, c[0x0][0x270], R14 ;
 Instr 494 @ 0x1ee0 (7904) - SHF.R.U32.HI R15, RZ, c[0x0][0x274], R14 ;
 Instr 495 @ 0x1ef0 (7920) - IMAD.MOV R14, RZ, RZ, -R15 ;
 Instr 496 @ 0x1f00 (7936) - IMAD R14, R14, c[0x0][0x26c], R17 ;
 Instr 497 @ 0x1f10 (7952) - IMAD R13, R14, c[0x0][0x318], R13 ;
 Instr 498 @ 0x1f20 (7968) - @!P1 BRA 0x2340 ;
Basic block id 66 - num instructions 8
 Instr 499 @ 0x1f30 (7984) - MOV R14, RZ ;
 Instr 500 @ 0x1f40 (8000) - ISETP.NE.AND P1, PT, R16, 0x12, PT ;
 Instr 501 @ 0x1f50 (8016) - IMAD.HI.U32 R14, R15, c[0x0][0x27c], R14 ;
 Instr 502 @ 0x1f60 (8032) - SHF.R.U32.HI R17, RZ, c[0x0][0x280], R14 ;
 Instr 503 @ 0x1f70 (8048) - IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 504 @ 0x1f80 (8064) - IMAD R14, R14, c[0x0][0x278], R15 ;
 Instr 505 @ 0x1f90 (8080) - IMAD R13, R14, c[0x0][0x31c], R13 ;
 Instr 506 @ 0x1fa0 (8096) - @!P1 BRA 0x2340 ;
Basic block id 67 - num instructions 9
 Instr 507 @ 0x1fb0 (8112) - MOV R14, RZ ;
 Instr 508 @ 0x1fc0 (8128) - IMAD.MOV.U32 R15, RZ, RZ, R17 ;
 Instr 509 @ 0x1fd0 (8144) - ISETP.NE.AND P1, PT, R16, 0x13, PT ;
 Instr 510 @ 0x1fe0 (8160) - IMAD.HI.U32 R14, R17, c[0x0][0x288], R14 ;
 Instr 511 @ 0x1ff0 (8176) - SHF.R.U32.HI R15, RZ, c[0x0][0x28c], R14 ;
 Instr 512 @ 0x2000 (8192) - IADD3 R14, -R15, RZ, RZ ;
 Instr 513 @ 0x2010 (8208) - IMAD R14, R14, c[0x0][0x284], R17 ;
 Instr 514 @ 0x2020 (8224) - IMAD R13, R14, c[0x0][0x320], R13 ;
 Instr 515 @ 0x2030 (8240) - @!P1 BRA 0x2340 ;
Basic block id 68 - num instructions 8
 Instr 516 @ 0x2040 (8256) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 517 @ 0x2050 (8272) - ISETP.NE.AND P1, PT, R16, 0x14, PT ;
 Instr 518 @ 0x2060 (8288) - IMAD.HI.U32 R14, R15, c[0x0][0x294], R14 ;
 Instr 519 @ 0x2070 (8304) - SHF.R.U32.HI R17, RZ, c[0x0][0x298], R14 ;
 Instr 520 @ 0x2080 (8320) - IADD3 R14, -R17, RZ, RZ ;
 Instr 521 @ 0x2090 (8336) - IMAD R14, R14, c[0x0][0x290], R15 ;
 Instr 522 @ 0x20a0 (8352) - IMAD R13, R14, c[0x0][0x324], R13 ;
 Instr 523 @ 0x20b0 (8368) - @!P1 BRA 0x2340 ;
Basic block id 69 - num instructions 9
 Instr 524 @ 0x20c0 (8384) - MOV R15, R17 ;
 Instr 525 @ 0x20d0 (8400) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 526 @ 0x20e0 (8416) - ISETP.NE.AND P1, PT, R16, 0x15, PT ;
 Instr 527 @ 0x20f0 (8432) - IMAD.HI.U32 R14, R17, c[0x0][0x2a0], R14 ;
 Instr 528 @ 0x2100 (8448) - SHF.R.U32.HI R15, RZ, c[0x0][0x2a4], R14 ;
 Instr 529 @ 0x2110 (8464) - IMAD.MOV R14, RZ, RZ, -R15 ;
 Instr 530 @ 0x2120 (8480) - IMAD R14, R14, c[0x0][0x29c], R17 ;
 Instr 531 @ 0x2130 (8496) - IMAD R13, R14, c[0x0][0x328], R13 ;
 Instr 532 @ 0x2140 (8512) - @!P1 BRA 0x2340 ;
Basic block id 70 - num instructions 8
 Instr 533 @ 0x2150 (8528) - MOV R14, RZ ;
 Instr 534 @ 0x2160 (8544) - ISETP.NE.AND P1, PT, R16, 0x16, PT ;
 Instr 535 @ 0x2170 (8560) - IMAD.HI.U32 R14, R15, c[0x0][0x2ac], R14 ;
 Instr 536 @ 0x2180 (8576) - SHF.R.U32.HI R17, RZ, c[0x0][0x2b0], R14 ;
 Instr 537 @ 0x2190 (8592) - IMAD.MOV R14, RZ, RZ, -R17 ;
 Instr 538 @ 0x21a0 (8608) - IMAD R14, R14, c[0x0][0x2a8], R15 ;
 Instr 539 @ 0x21b0 (8624) - IMAD R13, R14, c[0x0][0x32c], R13 ;
 Instr 540 @ 0x21c0 (8640) - @!P1 BRA 0x2340 ;
Basic block id 71 - num instructions 9
 Instr 541 @ 0x21d0 (8656) - MOV R14, RZ ;
 Instr 542 @ 0x21e0 (8672) - IMAD.MOV.U32 R15, RZ, RZ, R17 ;
 Instr 543 @ 0x21f0 (8688) - ISETP.NE.AND P1, PT, R16, 0x17, PT ;
 Instr 544 @ 0x2200 (8704) - IMAD.HI.U32 R14, R17, c[0x0][0x2b8], R14 ;
 Instr 545 @ 0x2210 (8720) - SHF.R.U32.HI R18, RZ, c[0x0][0x2bc], R14 ;
 Instr 546 @ 0x2220 (8736) - IADD3 R14, -R18, RZ, RZ ;
 Instr 547 @ 0x2230 (8752) - IMAD R14, R14, c[0x0][0x2b4], R17 ;
 Instr 548 @ 0x2240 (8768) - IMAD R13, R14, c[0x0][0x330], R13 ;
 Instr 549 @ 0x2250 (8784) - @!P1 BRA 0x2340 ;
Basic block id 72 - num instructions 14
 Instr 550 @ 0x2260 (8800) - ISETP.NE.AND P1, PT, R16, 0x18, PT ;
 Instr 551 @ 0x2270 (8816) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 552 @ 0x2280 (8832) - MOV R15, R18 ;
 Instr 553 @ 0x2290 (8848) - IMAD.HI.U32 R14, R18, c[0x0][0x2c4], R14 ;
 Instr 554 @ 0x22a0 (8864) - SHF.R.U32.HI R15, RZ, c[0x0][0x2c8], R14 ;
 Instr 555 @ 0x22b0 (8880) - @P1 IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 556 @ 0x22c0 (8896) - IADD3 R17, -R15.reuse, RZ, RZ ;
 Instr 557 @ 0x22d0 (8912) - @P1 IMAD.HI.U32 R14, R15, c[0x0][0x2d0], R14 ;
 Instr 558 @ 0x22e0 (8928) - @P1 SHF.R.U32.HI R16, RZ, c[0x0][0x2d4], R14 ;
 Instr 559 @ 0x22f0 (8944) - IMAD R14, R17, c[0x0][0x2c0], R18 ;
 Instr 560 @ 0x2300 (8960) - @P1 IMAD.MOV R17, RZ, RZ, -R16 ;
 Instr 561 @ 0x2310 (8976) - IMAD R13, R14, c[0x0][0x334], R13 ;
 Instr 562 @ 0x2320 (8992) - @P1 IMAD R14, R17, c[0x0][0x2cc], R15 ;
 Instr 563 @ 0x2330 (9008) - @P1 IMAD R13, R14, c[0x0][0x338], R13 ;
Basic block id 73 - num instructions 6
 Instr 564 @ 0x2340 (9024) - LOP3.LUT R13, R13, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 565 @ 0x2350 (9040) - IADD3 R14, P1, R6, R13, RZ ;
 Instr 566 @ 0x2360 (9056) - IADD3.X R15, RZ, R7, RZ, P1, !PT ;
 Instr 567 @ 0x2370 (9072) - LDG.E.U16.SYS R13, [R14] ;
 Instr 568 @ 0x2380 (9088) - IADD3 R9, R9, c[0x0][0x174], RZ ;
 Instr 569 @ 0x2390 (9104) - @!P0 BRA 0x3180 ;
Basic block id 74 - num instructions 10
 Instr 570 @ 0x23a0 (9120) - MOV R15, R9 ;
 Instr 571 @ 0x23b0 (9136) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 572 @ 0x23c0 (9152) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x1a8] ;
 Instr 573 @ 0x23d0 (9168) - IMAD.HI.U32 R12, R9, c[0x0][0x1b0], R14 ;
 Instr 574 @ 0x23e0 (9184) - ISETP.NE.AND P1, PT, R16, 0x1, PT ;
 Instr 575 @ 0x23f0 (9200) - SHF.R.U32.HI R17, RZ, c[0x0][0x1b4], R12 ;
 Instr 576 @ 0x2400 (9216) - IADD3 R12, -R17, RZ, RZ ;
 Instr 577 @ 0x2410 (9232) - IMAD R12, R12, c[0x0][0x1ac], R9 ;
 Instr 578 @ 0x2420 (9248) - IMAD R12, R12, c[0x0][0x2d8], RZ ;
 Instr 579 @ 0x2430 (9264) - @!P1 BRA 0x3180 ;
Basic block id 75 - num instructions 9
 Instr 580 @ 0x2440 (9280) - MOV R15, R17 ;
 Instr 581 @ 0x2450 (9296) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 582 @ 0x2460 (9312) - ISETP.NE.AND P1, PT, R16, 0x2, PT ;
 Instr 583 @ 0x2470 (9328) - IMAD.HI.U32 R14, R17, c[0x0][0x1bc], R14 ;
 Instr 584 @ 0x2480 (9344) - SHF.R.U32.HI R18, RZ, c[0x0][0x1c0], R14 ;
 Instr 585 @ 0x2490 (9360) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 586 @ 0x24a0 (9376) - IMAD R15, R15, c[0x0][0x1b8], R17 ;
 Instr 587 @ 0x24b0 (9392) - IMAD R12, R15, c[0x0][0x2dc], R12 ;
 Instr 588 @ 0x24c0 (9408) - @!P1 BRA 0x3180 ;
Basic block id 76 - num instructions 9
 Instr 589 @ 0x24d0 (9424) - MOV R14, RZ ;
 Instr 590 @ 0x24e0 (9440) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 591 @ 0x24f0 (9456) - ISETP.NE.AND P1, PT, R16, 0x3, PT ;
 Instr 592 @ 0x2500 (9472) - IMAD.HI.U32 R14, R18, c[0x0][0x1c8], R14 ;
 Instr 593 @ 0x2510 (9488) - SHF.R.U32.HI R17, RZ, c[0x0][0x1cc], R14 ;
 Instr 594 @ 0x2520 (9504) - IADD3 R15, -R17, RZ, RZ ;
 Instr 595 @ 0x2530 (9520) - IMAD R15, R15, c[0x0][0x1c4], R18 ;
 Instr 596 @ 0x2540 (9536) - IMAD R12, R15, c[0x0][0x2e0], R12 ;
 Instr 597 @ 0x2550 (9552) - @!P1 BRA 0x3180 ;
Basic block id 77 - num instructions 9
 Instr 598 @ 0x2560 (9568) - MOV R15, R17 ;
 Instr 599 @ 0x2570 (9584) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 600 @ 0x2580 (9600) - ISETP.NE.AND P1, PT, R16, 0x4, PT ;
 Instr 601 @ 0x2590 (9616) - IMAD.HI.U32 R14, R17, c[0x0][0x1d4], R14 ;
 Instr 602 @ 0x25a0 (9632) - SHF.R.U32.HI R18, RZ, c[0x0][0x1d8], R14 ;
 Instr 603 @ 0x25b0 (9648) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 604 @ 0x25c0 (9664) - IMAD R15, R15, c[0x0][0x1d0], R17 ;
 Instr 605 @ 0x25d0 (9680) - IMAD R12, R15, c[0x0][0x2e4], R12 ;
 Instr 606 @ 0x25e0 (9696) - @!P1 BRA 0x3180 ;
Basic block id 78 - num instructions 9
 Instr 607 @ 0x25f0 (9712) - MOV R14, RZ ;
 Instr 608 @ 0x2600 (9728) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 609 @ 0x2610 (9744) - ISETP.NE.AND P1, PT, R16, 0x5, PT ;
 Instr 610 @ 0x2620 (9760) - IMAD.HI.U32 R14, R18, c[0x0][0x1e0], R14 ;
 Instr 611 @ 0x2630 (9776) - SHF.R.U32.HI R17, RZ, c[0x0][0x1e4], R14 ;
 Instr 612 @ 0x2640 (9792) - IADD3 R15, -R17, RZ, RZ ;
 Instr 613 @ 0x2650 (9808) - IMAD R15, R15, c[0x0][0x1dc], R18 ;
 Instr 614 @ 0x2660 (9824) - IMAD R12, R15, c[0x0][0x2e8], R12 ;
 Instr 615 @ 0x2670 (9840) - @!P1 BRA 0x3180 ;
Basic block id 79 - num instructions 9
 Instr 616 @ 0x2680 (9856) - MOV R15, R17 ;
 Instr 617 @ 0x2690 (9872) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 618 @ 0x26a0 (9888) - ISETP.NE.AND P1, PT, R16, 0x6, PT ;
 Instr 619 @ 0x26b0 (9904) - IMAD.HI.U32 R14, R17, c[0x0][0x1ec], R14 ;
 Instr 620 @ 0x26c0 (9920) - SHF.R.U32.HI R18, RZ, c[0x0][0x1f0], R14 ;
 Instr 621 @ 0x26d0 (9936) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 622 @ 0x26e0 (9952) - IMAD R15, R15, c[0x0][0x1e8], R17 ;
 Instr 623 @ 0x26f0 (9968) - IMAD R12, R15, c[0x0][0x2ec], R12 ;
 Instr 624 @ 0x2700 (9984) - @!P1 BRA 0x3180 ;
Basic block id 80 - num instructions 9
 Instr 625 @ 0x2710 (10000) - MOV R14, RZ ;
 Instr 626 @ 0x2720 (10016) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 627 @ 0x2730 (10032) - ISETP.NE.AND P1, PT, R16, 0x7, PT ;
 Instr 628 @ 0x2740 (10048) - IMAD.HI.U32 R14, R18, c[0x0][0x1f8], R14 ;
 Instr 629 @ 0x2750 (10064) - SHF.R.U32.HI R17, RZ, c[0x0][0x1fc], R14 ;
 Instr 630 @ 0x2760 (10080) - IADD3 R15, -R17, RZ, RZ ;
 Instr 631 @ 0x2770 (10096) - IMAD R15, R15, c[0x0][0x1f4], R18 ;
 Instr 632 @ 0x2780 (10112) - IMAD R12, R15, c[0x0][0x2f0], R12 ;
 Instr 633 @ 0x2790 (10128) - @!P1 BRA 0x3180 ;
Basic block id 81 - num instructions 9
 Instr 634 @ 0x27a0 (10144) - MOV R15, R17 ;
 Instr 635 @ 0x27b0 (10160) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 636 @ 0x27c0 (10176) - ISETP.NE.AND P1, PT, R16, 0x8, PT ;
 Instr 637 @ 0x27d0 (10192) - IMAD.HI.U32 R14, R17, c[0x0][0x204], R14 ;
 Instr 638 @ 0x27e0 (10208) - SHF.R.U32.HI R18, RZ, c[0x0][0x208], R14 ;
 Instr 639 @ 0x27f0 (10224) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 640 @ 0x2800 (10240) - IMAD R15, R15, c[0x0][0x200], R17 ;
 Instr 641 @ 0x2810 (10256) - IMAD R12, R15, c[0x0][0x2f4], R12 ;
 Instr 642 @ 0x2820 (10272) - @!P1 BRA 0x3180 ;
Basic block id 82 - num instructions 9
 Instr 643 @ 0x2830 (10288) - MOV R14, RZ ;
 Instr 644 @ 0x2840 (10304) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 645 @ 0x2850 (10320) - ISETP.NE.AND P1, PT, R16, 0x9, PT ;
 Instr 646 @ 0x2860 (10336) - IMAD.HI.U32 R14, R18, c[0x0][0x210], R14 ;
 Instr 647 @ 0x2870 (10352) - SHF.R.U32.HI R17, RZ, c[0x0][0x214], R14 ;
 Instr 648 @ 0x2880 (10368) - IADD3 R15, -R17, RZ, RZ ;
 Instr 649 @ 0x2890 (10384) - IMAD R15, R15, c[0x0][0x20c], R18 ;
 Instr 650 @ 0x28a0 (10400) - IMAD R12, R15, c[0x0][0x2f8], R12 ;
 Instr 651 @ 0x28b0 (10416) - @!P1 BRA 0x3180 ;
Basic block id 83 - num instructions 9
 Instr 652 @ 0x28c0 (10432) - MOV R15, R17 ;
 Instr 653 @ 0x28d0 (10448) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 654 @ 0x28e0 (10464) - ISETP.NE.AND P1, PT, R16, 0xa, PT ;
 Instr 655 @ 0x28f0 (10480) - IMAD.HI.U32 R14, R17, c[0x0][0x21c], R14 ;
 Instr 656 @ 0x2900 (10496) - SHF.R.U32.HI R18, RZ, c[0x0][0x220], R14 ;
 Instr 657 @ 0x2910 (10512) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 658 @ 0x2920 (10528) - IMAD R15, R15, c[0x0][0x218], R17 ;
 Instr 659 @ 0x2930 (10544) - IMAD R12, R15, c[0x0][0x2fc], R12 ;
 Instr 660 @ 0x2940 (10560) - @!P1 BRA 0x3180 ;
Basic block id 84 - num instructions 9
 Instr 661 @ 0x2950 (10576) - MOV R14, RZ ;
 Instr 662 @ 0x2960 (10592) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 663 @ 0x2970 (10608) - ISETP.NE.AND P1, PT, R16, 0xb, PT ;
 Instr 664 @ 0x2980 (10624) - IMAD.HI.U32 R14, R18, c[0x0][0x228], R14 ;
 Instr 665 @ 0x2990 (10640) - SHF.R.U32.HI R17, RZ, c[0x0][0x22c], R14 ;
 Instr 666 @ 0x29a0 (10656) - IADD3 R15, -R17, RZ, RZ ;
 Instr 667 @ 0x29b0 (10672) - IMAD R15, R15, c[0x0][0x224], R18 ;
 Instr 668 @ 0x29c0 (10688) - IMAD R12, R15, c[0x0][0x300], R12 ;
 Instr 669 @ 0x29d0 (10704) - @!P1 BRA 0x3180 ;
Basic block id 85 - num instructions 9
 Instr 670 @ 0x29e0 (10720) - MOV R15, R17 ;
 Instr 671 @ 0x29f0 (10736) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 672 @ 0x2a00 (10752) - ISETP.NE.AND P1, PT, R16, 0xc, PT ;
 Instr 673 @ 0x2a10 (10768) - IMAD.HI.U32 R14, R17, c[0x0][0x234], R14 ;
 Instr 674 @ 0x2a20 (10784) - SHF.R.U32.HI R18, RZ, c[0x0][0x238], R14 ;
 Instr 675 @ 0x2a30 (10800) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 676 @ 0x2a40 (10816) - IMAD R15, R15, c[0x0][0x230], R17 ;
 Instr 677 @ 0x2a50 (10832) - IMAD R12, R15, c[0x0][0x304], R12 ;
 Instr 678 @ 0x2a60 (10848) - @!P1 BRA 0x3180 ;
Basic block id 86 - num instructions 9
 Instr 679 @ 0x2a70 (10864) - MOV R14, RZ ;
 Instr 680 @ 0x2a80 (10880) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 681 @ 0x2a90 (10896) - ISETP.NE.AND P1, PT, R16, 0xd, PT ;
 Instr 682 @ 0x2aa0 (10912) - IMAD.HI.U32 R14, R18, c[0x0][0x240], R14 ;
 Instr 683 @ 0x2ab0 (10928) - SHF.R.U32.HI R17, RZ, c[0x0][0x244], R14 ;
 Instr 684 @ 0x2ac0 (10944) - IADD3 R15, -R17, RZ, RZ ;
 Instr 685 @ 0x2ad0 (10960) - IMAD R15, R15, c[0x0][0x23c], R18 ;
 Instr 686 @ 0x2ae0 (10976) - IMAD R12, R15, c[0x0][0x308], R12 ;
 Instr 687 @ 0x2af0 (10992) - @!P1 BRA 0x3180 ;
Basic block id 87 - num instructions 9
 Instr 688 @ 0x2b00 (11008) - MOV R15, R17 ;
 Instr 689 @ 0x2b10 (11024) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 690 @ 0x2b20 (11040) - ISETP.NE.AND P1, PT, R16, 0xe, PT ;
 Instr 691 @ 0x2b30 (11056) - IMAD.HI.U32 R14, R17, c[0x0][0x24c], R14 ;
 Instr 692 @ 0x2b40 (11072) - SHF.R.U32.HI R18, RZ, c[0x0][0x250], R14 ;
 Instr 693 @ 0x2b50 (11088) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 694 @ 0x2b60 (11104) - IMAD R15, R15, c[0x0][0x248], R17 ;
 Instr 695 @ 0x2b70 (11120) - IMAD R12, R15, c[0x0][0x30c], R12 ;
 Instr 696 @ 0x2b80 (11136) - @!P1 BRA 0x3180 ;
Basic block id 88 - num instructions 9
 Instr 697 @ 0x2b90 (11152) - MOV R14, RZ ;
 Instr 698 @ 0x2ba0 (11168) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 699 @ 0x2bb0 (11184) - ISETP.NE.AND P1, PT, R16, 0xf, PT ;
 Instr 700 @ 0x2bc0 (11200) - IMAD.HI.U32 R14, R18, c[0x0][0x258], R14 ;
 Instr 701 @ 0x2bd0 (11216) - SHF.R.U32.HI R17, RZ, c[0x0][0x25c], R14 ;
 Instr 702 @ 0x2be0 (11232) - IADD3 R15, -R17, RZ, RZ ;
 Instr 703 @ 0x2bf0 (11248) - IMAD R15, R15, c[0x0][0x254], R18 ;
 Instr 704 @ 0x2c00 (11264) - IMAD R12, R15, c[0x0][0x310], R12 ;
 Instr 705 @ 0x2c10 (11280) - @!P1 BRA 0x3180 ;
Basic block id 89 - num instructions 9
 Instr 706 @ 0x2c20 (11296) - MOV R15, R17 ;
 Instr 707 @ 0x2c30 (11312) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 708 @ 0x2c40 (11328) - ISETP.NE.AND P1, PT, R16, 0x10, PT ;
 Instr 709 @ 0x2c50 (11344) - IMAD.HI.U32 R14, R17, c[0x0][0x264], R14 ;
 Instr 710 @ 0x2c60 (11360) - SHF.R.U32.HI R18, RZ, c[0x0][0x268], R14 ;
 Instr 711 @ 0x2c70 (11376) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 712 @ 0x2c80 (11392) - IMAD R15, R15, c[0x0][0x260], R17 ;
 Instr 713 @ 0x2c90 (11408) - IMAD R12, R15, c[0x0][0x314], R12 ;
 Instr 714 @ 0x2ca0 (11424) - @!P1 BRA 0x3180 ;
Basic block id 90 - num instructions 9
 Instr 715 @ 0x2cb0 (11440) - MOV R14, RZ ;
 Instr 716 @ 0x2cc0 (11456) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 717 @ 0x2cd0 (11472) - ISETP.NE.AND P1, PT, R16, 0x11, PT ;
 Instr 718 @ 0x2ce0 (11488) - IMAD.HI.U32 R14, R18, c[0x0][0x270], R14 ;
 Instr 719 @ 0x2cf0 (11504) - SHF.R.U32.HI R17, RZ, c[0x0][0x274], R14 ;
 Instr 720 @ 0x2d00 (11520) - IADD3 R15, -R17, RZ, RZ ;
 Instr 721 @ 0x2d10 (11536) - IMAD R15, R15, c[0x0][0x26c], R18 ;
 Instr 722 @ 0x2d20 (11552) - IMAD R12, R15, c[0x0][0x318], R12 ;
 Instr 723 @ 0x2d30 (11568) - @!P1 BRA 0x3180 ;
Basic block id 91 - num instructions 9
 Instr 724 @ 0x2d40 (11584) - MOV R15, R17 ;
 Instr 725 @ 0x2d50 (11600) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 726 @ 0x2d60 (11616) - ISETP.NE.AND P1, PT, R16, 0x12, PT ;
 Instr 727 @ 0x2d70 (11632) - IMAD.HI.U32 R14, R17, c[0x0][0x27c], R14 ;
 Instr 728 @ 0x2d80 (11648) - SHF.R.U32.HI R18, RZ, c[0x0][0x280], R14 ;
 Instr 729 @ 0x2d90 (11664) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 730 @ 0x2da0 (11680) - IMAD R15, R15, c[0x0][0x278], R17 ;
 Instr 731 @ 0x2db0 (11696) - IMAD R12, R15, c[0x0][0x31c], R12 ;
 Instr 732 @ 0x2dc0 (11712) - @!P1 BRA 0x3180 ;
Basic block id 92 - num instructions 9
 Instr 733 @ 0x2dd0 (11728) - MOV R14, RZ ;
 Instr 734 @ 0x2de0 (11744) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 735 @ 0x2df0 (11760) - ISETP.NE.AND P1, PT, R16, 0x13, PT ;
 Instr 736 @ 0x2e00 (11776) - IMAD.HI.U32 R14, R18, c[0x0][0x288], R14 ;
 Instr 737 @ 0x2e10 (11792) - SHF.R.U32.HI R17, RZ, c[0x0][0x28c], R14 ;
 Instr 738 @ 0x2e20 (11808) - IADD3 R15, -R17, RZ, RZ ;
 Instr 739 @ 0x2e30 (11824) - IMAD R15, R15, c[0x0][0x284], R18 ;
 Instr 740 @ 0x2e40 (11840) - IMAD R12, R15, c[0x0][0x320], R12 ;
 Instr 741 @ 0x2e50 (11856) - @!P1 BRA 0x3180 ;
Basic block id 93 - num instructions 9
 Instr 742 @ 0x2e60 (11872) - MOV R15, R17 ;
 Instr 743 @ 0x2e70 (11888) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 744 @ 0x2e80 (11904) - ISETP.NE.AND P1, PT, R16, 0x14, PT ;
 Instr 745 @ 0x2e90 (11920) - IMAD.HI.U32 R14, R17, c[0x0][0x294], R14 ;
 Instr 746 @ 0x2ea0 (11936) - SHF.R.U32.HI R18, RZ, c[0x0][0x298], R14 ;
 Instr 747 @ 0x2eb0 (11952) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 748 @ 0x2ec0 (11968) - IMAD R15, R15, c[0x0][0x290], R17 ;
 Instr 749 @ 0x2ed0 (11984) - IMAD R12, R15, c[0x0][0x324], R12 ;
 Instr 750 @ 0x2ee0 (12000) - @!P1 BRA 0x3180 ;
Basic block id 94 - num instructions 9
 Instr 751 @ 0x2ef0 (12016) - MOV R14, RZ ;
 Instr 752 @ 0x2f00 (12032) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 753 @ 0x2f10 (12048) - ISETP.NE.AND P1, PT, R16, 0x15, PT ;
 Instr 754 @ 0x2f20 (12064) - IMAD.HI.U32 R14, R18, c[0x0][0x2a0], R14 ;
 Instr 755 @ 0x2f30 (12080) - SHF.R.U32.HI R17, RZ, c[0x0][0x2a4], R14 ;
 Instr 756 @ 0x2f40 (12096) - IADD3 R15, -R17, RZ, RZ ;
 Instr 757 @ 0x2f50 (12112) - IMAD R15, R15, c[0x0][0x29c], R18 ;
 Instr 758 @ 0x2f60 (12128) - IMAD R12, R15, c[0x0][0x328], R12 ;
 Instr 759 @ 0x2f70 (12144) - @!P1 BRA 0x3180 ;
Basic block id 95 - num instructions 9
 Instr 760 @ 0x2f80 (12160) - MOV R15, R17 ;
 Instr 761 @ 0x2f90 (12176) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 762 @ 0x2fa0 (12192) - ISETP.NE.AND P1, PT, R16, 0x16, PT ;
 Instr 763 @ 0x2fb0 (12208) - IMAD.HI.U32 R14, R17, c[0x0][0x2ac], R14 ;
 Instr 764 @ 0x2fc0 (12224) - SHF.R.U32.HI R18, RZ, c[0x0][0x2b0], R14 ;
 Instr 765 @ 0x2fd0 (12240) - IMAD.MOV R15, RZ, RZ, -R18 ;
 Instr 766 @ 0x2fe0 (12256) - IMAD R15, R15, c[0x0][0x2a8], R17 ;
 Instr 767 @ 0x2ff0 (12272) - IMAD R12, R15, c[0x0][0x32c], R12 ;
 Instr 768 @ 0x3000 (12288) - @!P1 BRA 0x3180 ;
Basic block id 96 - num instructions 9
 Instr 769 @ 0x3010 (12304) - MOV R14, RZ ;
 Instr 770 @ 0x3020 (12320) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 771 @ 0x3030 (12336) - ISETP.NE.AND P1, PT, R16, 0x17, PT ;
 Instr 772 @ 0x3040 (12352) - IMAD.HI.U32 R14, R18, c[0x0][0x2b8], R14 ;
 Instr 773 @ 0x3050 (12368) - SHF.R.U32.HI R19, RZ, c[0x0][0x2bc], R14 ;
 Instr 774 @ 0x3060 (12384) - IADD3 R15, -R19, RZ, RZ ;
 Instr 775 @ 0x3070 (12400) - IMAD R15, R15, c[0x0][0x2b4], R18 ;
 Instr 776 @ 0x3080 (12416) - IMAD R12, R15, c[0x0][0x330], R12 ;
 Instr 777 @ 0x3090 (12432) - @!P1 BRA 0x3180 ;
Basic block id 97 - num instructions 14
 Instr 778 @ 0x30a0 (12448) - ISETP.NE.AND P1, PT, R16, 0x18, PT ;
 Instr 779 @ 0x30b0 (12464) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 780 @ 0x30c0 (12480) - MOV R15, R19 ;
 Instr 781 @ 0x30d0 (12496) - IMAD.HI.U32 R14, R19, c[0x0][0x2c4], R14 ;
 Instr 782 @ 0x30e0 (12512) - SHF.R.U32.HI R15, RZ, c[0x0][0x2c8], R14 ;
 Instr 783 @ 0x30f0 (12528) - @P1 IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 784 @ 0x3100 (12544) - IADD3 R17, -R15.reuse, RZ, RZ ;
 Instr 785 @ 0x3110 (12560) - @P1 IMAD.HI.U32 R14, R15, c[0x0][0x2d0], R14 ;
 Instr 786 @ 0x3120 (12576) - IMAD R17, R17, c[0x0][0x2c0], R19 ;
 Instr 787 @ 0x3130 (12592) - @P1 SHF.R.U32.HI R14, RZ, c[0x0][0x2d4], R14 ;
 Instr 788 @ 0x3140 (12608) - IMAD R12, R17, c[0x0][0x334], R12 ;
 Instr 789 @ 0x3150 (12624) - @P1 IMAD.MOV R14, RZ, RZ, -R14 ;
 Instr 790 @ 0x3160 (12640) - @P1 IMAD R15, R14, c[0x0][0x2cc], R15 ;
 Instr 791 @ 0x3170 (12656) - @P1 IMAD R12, R15, c[0x0][0x338], R12 ;
Basic block id 98 - num instructions 7
 Instr 792 @ 0x3180 (12672) - LOP3.LUT R17, R12, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 793 @ 0x3190 (12688) - IADD3 R16, P1, R6, R17, RZ ;
 Instr 794 @ 0x31a0 (12704) - IADD3.X R17, RZ, R7, RZ, P1, !PT ;
 Instr 795 @ 0x31b0 (12720) - LDG.E.U16.SYS R12, [R16] ;
 Instr 796 @ 0x31c0 (12736) - IADD3 R9, R9, c[0x0][0x174], RZ ;
 Instr 797 @ 0x31d0 (12752) - CS2R R14, SRZ ;
 Instr 798 @ 0x31e0 (12768) - @!P0 BRA 0x3f20 ;
Basic block id 99 - num instructions 10
 Instr 799 @ 0x31f0 (12784) - MOV R17, R9 ;
 Instr 800 @ 0x3200 (12800) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 801 @ 0x3210 (12816) - IMAD.MOV.U32 R18, RZ, RZ, c[0x0][0x1a8] ;
 Instr 802 @ 0x3220 (12832) - IMAD.HI.U32 R15, R9, c[0x0][0x1b0], R16 ;
 Instr 803 @ 0x3230 (12848) - ISETP.NE.AND P1, PT, R18, 0x1, PT ;
 Instr 804 @ 0x3240 (12864) - SHF.R.U32.HI R17, RZ, c[0x0][0x1b4], R15 ;
 Instr 805 @ 0x3250 (12880) - IADD3 R16, -R17, RZ, RZ ;
 Instr 806 @ 0x3260 (12896) - IMAD R15, R16, c[0x0][0x1ac], R9 ;
 Instr 807 @ 0x3270 (12912) - IMAD R15, R15, c[0x0][0x2d8], RZ ;
 Instr 808 @ 0x3280 (12928) - @!P1 BRA 0x3f20 ;
Basic block id 100 - num instructions 8
 Instr 809 @ 0x3290 (12944) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 810 @ 0x32a0 (12960) - ISETP.NE.AND P1, PT, R18, 0x2, PT ;
 Instr 811 @ 0x32b0 (12976) - IMAD.HI.U32 R16, R17, c[0x0][0x1bc], R16 ;
 Instr 812 @ 0x32c0 (12992) - SHF.R.U32.HI R19, RZ, c[0x0][0x1c0], R16 ;
 Instr 813 @ 0x32d0 (13008) - IADD3 R16, -R19, RZ, RZ ;
 Instr 814 @ 0x32e0 (13024) - IMAD R16, R16, c[0x0][0x1b8], R17 ;
 Instr 815 @ 0x32f0 (13040) - IMAD R15, R16, c[0x0][0x2dc], R15 ;
 Instr 816 @ 0x3300 (13056) - @!P1 BRA 0x3f20 ;
Basic block id 101 - num instructions 9
 Instr 817 @ 0x3310 (13072) - MOV R17, R19 ;
 Instr 818 @ 0x3320 (13088) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 819 @ 0x3330 (13104) - ISETP.NE.AND P1, PT, R18, 0x3, PT ;
 Instr 820 @ 0x3340 (13120) - IMAD.HI.U32 R16, R19, c[0x0][0x1c8], R16 ;
 Instr 821 @ 0x3350 (13136) - SHF.R.U32.HI R17, RZ, c[0x0][0x1cc], R16 ;
 Instr 822 @ 0x3360 (13152) - IMAD.MOV R16, RZ, RZ, -R17 ;
 Instr 823 @ 0x3370 (13168) - IMAD R16, R16, c[0x0][0x1c4], R19 ;
 Instr 824 @ 0x3380 (13184) - IMAD R15, R16, c[0x0][0x2e0], R15 ;
 Instr 825 @ 0x3390 (13200) - @!P1 BRA 0x3f20 ;
Basic block id 102 - num instructions 8
 Instr 826 @ 0x33a0 (13216) - MOV R16, RZ ;
 Instr 827 @ 0x33b0 (13232) - ISETP.NE.AND P1, PT, R18, 0x4, PT ;
 Instr 828 @ 0x33c0 (13248) - IMAD.HI.U32 R16, R17, c[0x0][0x1d4], R16 ;
 Instr 829 @ 0x33d0 (13264) - SHF.R.U32.HI R19, RZ, c[0x0][0x1d8], R16 ;
 Instr 830 @ 0x33e0 (13280) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 831 @ 0x33f0 (13296) - IMAD R16, R16, c[0x0][0x1d0], R17 ;
 Instr 832 @ 0x3400 (13312) - IMAD R15, R16, c[0x0][0x2e4], R15 ;
 Instr 833 @ 0x3410 (13328) - @!P1 BRA 0x3f20 ;
Basic block id 103 - num instructions 9
 Instr 834 @ 0x3420 (13344) - MOV R16, RZ ;
 Instr 835 @ 0x3430 (13360) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 836 @ 0x3440 (13376) - ISETP.NE.AND P1, PT, R18, 0x5, PT ;
 Instr 837 @ 0x3450 (13392) - IMAD.HI.U32 R16, R19, c[0x0][0x1e0], R16 ;
 Instr 838 @ 0x3460 (13408) - SHF.R.U32.HI R17, RZ, c[0x0][0x1e4], R16 ;
 Instr 839 @ 0x3470 (13424) - IADD3 R16, -R17, RZ, RZ ;
 Instr 840 @ 0x3480 (13440) - IMAD R16, R16, c[0x0][0x1dc], R19 ;
 Instr 841 @ 0x3490 (13456) - IMAD R15, R16, c[0x0][0x2e8], R15 ;
 Instr 842 @ 0x34a0 (13472) - @!P1 BRA 0x3f20 ;
Basic block id 104 - num instructions 8
 Instr 843 @ 0x34b0 (13488) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 844 @ 0x34c0 (13504) - ISETP.NE.AND P1, PT, R18, 0x6, PT ;
 Instr 845 @ 0x34d0 (13520) - IMAD.HI.U32 R16, R17, c[0x0][0x1ec], R16 ;
 Instr 846 @ 0x34e0 (13536) - SHF.R.U32.HI R19, RZ, c[0x0][0x1f0], R16 ;
 Instr 847 @ 0x34f0 (13552) - IADD3 R16, -R19, RZ, RZ ;
 Instr 848 @ 0x3500 (13568) - IMAD R16, R16, c[0x0][0x1e8], R17 ;
 Instr 849 @ 0x3510 (13584) - IMAD R15, R16, c[0x0][0x2ec], R15 ;
 Instr 850 @ 0x3520 (13600) - @!P1 BRA 0x3f20 ;
Basic block id 105 - num instructions 9
 Instr 851 @ 0x3530 (13616) - MOV R17, R19 ;
 Instr 852 @ 0x3540 (13632) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 853 @ 0x3550 (13648) - ISETP.NE.AND P1, PT, R18, 0x7, PT ;
 Instr 854 @ 0x3560 (13664) - IMAD.HI.U32 R16, R19, c[0x0][0x1f8], R16 ;
 Instr 855 @ 0x3570 (13680) - SHF.R.U32.HI R17, RZ, c[0x0][0x1fc], R16 ;
 Instr 856 @ 0x3580 (13696) - IMAD.MOV R16, RZ, RZ, -R17 ;
 Instr 857 @ 0x3590 (13712) - IMAD R16, R16, c[0x0][0x1f4], R19 ;
 Instr 858 @ 0x35a0 (13728) - IMAD R15, R16, c[0x0][0x2f0], R15 ;
 Instr 859 @ 0x35b0 (13744) - @!P1 BRA 0x3f20 ;
Basic block id 106 - num instructions 8
 Instr 860 @ 0x35c0 (13760) - MOV R16, RZ ;
 Instr 861 @ 0x35d0 (13776) - ISETP.NE.AND P1, PT, R18, 0x8, PT ;
 Instr 862 @ 0x35e0 (13792) - IMAD.HI.U32 R16, R17, c[0x0][0x204], R16 ;
 Instr 863 @ 0x35f0 (13808) - SHF.R.U32.HI R19, RZ, c[0x0][0x208], R16 ;
 Instr 864 @ 0x3600 (13824) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 865 @ 0x3610 (13840) - IMAD R16, R16, c[0x0][0x200], R17 ;
 Instr 866 @ 0x3620 (13856) - IMAD R15, R16, c[0x0][0x2f4], R15 ;
 Instr 867 @ 0x3630 (13872) - @!P1 BRA 0x3f20 ;
Basic block id 107 - num instructions 9
 Instr 868 @ 0x3640 (13888) - MOV R16, RZ ;
 Instr 869 @ 0x3650 (13904) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 870 @ 0x3660 (13920) - ISETP.NE.AND P1, PT, R18, 0x9, PT ;
 Instr 871 @ 0x3670 (13936) - IMAD.HI.U32 R16, R19, c[0x0][0x210], R16 ;
 Instr 872 @ 0x3680 (13952) - SHF.R.U32.HI R17, RZ, c[0x0][0x214], R16 ;
 Instr 873 @ 0x3690 (13968) - IADD3 R16, -R17, RZ, RZ ;
 Instr 874 @ 0x36a0 (13984) - IMAD R16, R16, c[0x0][0x20c], R19 ;
 Instr 875 @ 0x36b0 (14000) - IMAD R15, R16, c[0x0][0x2f8], R15 ;
 Instr 876 @ 0x36c0 (14016) - @!P1 BRA 0x3f20 ;
Basic block id 108 - num instructions 8
 Instr 877 @ 0x36d0 (14032) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 878 @ 0x36e0 (14048) - ISETP.NE.AND P1, PT, R18, 0xa, PT ;
 Instr 879 @ 0x36f0 (14064) - IMAD.HI.U32 R16, R17, c[0x0][0x21c], R16 ;
 Instr 880 @ 0x3700 (14080) - SHF.R.U32.HI R19, RZ, c[0x0][0x220], R16 ;
 Instr 881 @ 0x3710 (14096) - IADD3 R16, -R19, RZ, RZ ;
 Instr 882 @ 0x3720 (14112) - IMAD R16, R16, c[0x0][0x218], R17 ;
 Instr 883 @ 0x3730 (14128) - IMAD R15, R16, c[0x0][0x2fc], R15 ;
 Instr 884 @ 0x3740 (14144) - @!P1 BRA 0x3f20 ;
Basic block id 109 - num instructions 9
 Instr 885 @ 0x3750 (14160) - MOV R17, R19 ;
 Instr 886 @ 0x3760 (14176) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 887 @ 0x3770 (14192) - ISETP.NE.AND P1, PT, R18, 0xb, PT ;
 Instr 888 @ 0x3780 (14208) - IMAD.HI.U32 R16, R19, c[0x0][0x228], R16 ;
 Instr 889 @ 0x3790 (14224) - SHF.R.U32.HI R17, RZ, c[0x0][0x22c], R16 ;
 Instr 890 @ 0x37a0 (14240) - IMAD.MOV R16, RZ, RZ, -R17 ;
 Instr 891 @ 0x37b0 (14256) - IMAD R16, R16, c[0x0][0x224], R19 ;
 Instr 892 @ 0x37c0 (14272) - IMAD R15, R16, c[0x0][0x300], R15 ;
 Instr 893 @ 0x37d0 (14288) - @!P1 BRA 0x3f20 ;
Basic block id 110 - num instructions 8
 Instr 894 @ 0x37e0 (14304) - MOV R16, RZ ;
 Instr 895 @ 0x37f0 (14320) - ISETP.NE.AND P1, PT, R18, 0xc, PT ;
 Instr 896 @ 0x3800 (14336) - IMAD.HI.U32 R16, R17, c[0x0][0x234], R16 ;
 Instr 897 @ 0x3810 (14352) - SHF.R.U32.HI R19, RZ, c[0x0][0x238], R16 ;
 Instr 898 @ 0x3820 (14368) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 899 @ 0x3830 (14384) - IMAD R16, R16, c[0x0][0x230], R17 ;
 Instr 900 @ 0x3840 (14400) - IMAD R15, R16, c[0x0][0x304], R15 ;
 Instr 901 @ 0x3850 (14416) - @!P1 BRA 0x3f20 ;
Basic block id 111 - num instructions 9
 Instr 902 @ 0x3860 (14432) - MOV R16, RZ ;
 Instr 903 @ 0x3870 (14448) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 904 @ 0x3880 (14464) - ISETP.NE.AND P1, PT, R18, 0xd, PT ;
 Instr 905 @ 0x3890 (14480) - IMAD.HI.U32 R16, R19, c[0x0][0x240], R16 ;
 Instr 906 @ 0x38a0 (14496) - SHF.R.U32.HI R17, RZ, c[0x0][0x244], R16 ;
 Instr 907 @ 0x38b0 (14512) - IADD3 R16, -R17, RZ, RZ ;
 Instr 908 @ 0x38c0 (14528) - IMAD R16, R16, c[0x0][0x23c], R19 ;
 Instr 909 @ 0x38d0 (14544) - IMAD R15, R16, c[0x0][0x308], R15 ;
 Instr 910 @ 0x38e0 (14560) - @!P1 BRA 0x3f20 ;
Basic block id 112 - num instructions 8
 Instr 911 @ 0x38f0 (14576) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 912 @ 0x3900 (14592) - ISETP.NE.AND P1, PT, R18, 0xe, PT ;
 Instr 913 @ 0x3910 (14608) - IMAD.HI.U32 R16, R17, c[0x0][0x24c], R16 ;
 Instr 914 @ 0x3920 (14624) - SHF.R.U32.HI R19, RZ, c[0x0][0x250], R16 ;
 Instr 915 @ 0x3930 (14640) - IADD3 R16, -R19, RZ, RZ ;
 Instr 916 @ 0x3940 (14656) - IMAD R16, R16, c[0x0][0x248], R17 ;
 Instr 917 @ 0x3950 (14672) - IMAD R15, R16, c[0x0][0x30c], R15 ;
 Instr 918 @ 0x3960 (14688) - @!P1 BRA 0x3f20 ;
Basic block id 113 - num instructions 9
 Instr 919 @ 0x3970 (14704) - MOV R17, R19 ;
 Instr 920 @ 0x3980 (14720) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 921 @ 0x3990 (14736) - ISETP.NE.AND P1, PT, R18, 0xf, PT ;
 Instr 922 @ 0x39a0 (14752) - IMAD.HI.U32 R16, R19, c[0x0][0x258], R16 ;
 Instr 923 @ 0x39b0 (14768) - SHF.R.U32.HI R17, RZ, c[0x0][0x25c], R16 ;
 Instr 924 @ 0x39c0 (14784) - IMAD.MOV R16, RZ, RZ, -R17 ;
 Instr 925 @ 0x39d0 (14800) - IMAD R16, R16, c[0x0][0x254], R19 ;
 Instr 926 @ 0x39e0 (14816) - IMAD R15, R16, c[0x0][0x310], R15 ;
 Instr 927 @ 0x39f0 (14832) - @!P1 BRA 0x3f20 ;
Basic block id 114 - num instructions 8
 Instr 928 @ 0x3a00 (14848) - MOV R16, RZ ;
 Instr 929 @ 0x3a10 (14864) - ISETP.NE.AND P1, PT, R18, 0x10, PT ;
 Instr 930 @ 0x3a20 (14880) - IMAD.HI.U32 R16, R17, c[0x0][0x264], R16 ;
 Instr 931 @ 0x3a30 (14896) - SHF.R.U32.HI R19, RZ, c[0x0][0x268], R16 ;
 Instr 932 @ 0x3a40 (14912) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 933 @ 0x3a50 (14928) - IMAD R16, R16, c[0x0][0x260], R17 ;
 Instr 934 @ 0x3a60 (14944) - IMAD R15, R16, c[0x0][0x314], R15 ;
 Instr 935 @ 0x3a70 (14960) - @!P1 BRA 0x3f20 ;
Basic block id 115 - num instructions 9
 Instr 936 @ 0x3a80 (14976) - MOV R16, RZ ;
 Instr 937 @ 0x3a90 (14992) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 938 @ 0x3aa0 (15008) - ISETP.NE.AND P1, PT, R18, 0x11, PT ;
 Instr 939 @ 0x3ab0 (15024) - IMAD.HI.U32 R16, R19, c[0x0][0x270], R16 ;
 Instr 940 @ 0x3ac0 (15040) - SHF.R.U32.HI R17, RZ, c[0x0][0x274], R16 ;
 Instr 941 @ 0x3ad0 (15056) - IADD3 R16, -R17, RZ, RZ ;
 Instr 942 @ 0x3ae0 (15072) - IMAD R16, R16, c[0x0][0x26c], R19 ;
 Instr 943 @ 0x3af0 (15088) - IMAD R15, R16, c[0x0][0x318], R15 ;
 Instr 944 @ 0x3b00 (15104) - @!P1 BRA 0x3f20 ;
Basic block id 116 - num instructions 8
 Instr 945 @ 0x3b10 (15120) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 946 @ 0x3b20 (15136) - ISETP.NE.AND P1, PT, R18, 0x12, PT ;
 Instr 947 @ 0x3b30 (15152) - IMAD.HI.U32 R16, R17, c[0x0][0x27c], R16 ;
 Instr 948 @ 0x3b40 (15168) - SHF.R.U32.HI R19, RZ, c[0x0][0x280], R16 ;
 Instr 949 @ 0x3b50 (15184) - IADD3 R16, -R19, RZ, RZ ;
 Instr 950 @ 0x3b60 (15200) - IMAD R16, R16, c[0x0][0x278], R17 ;
 Instr 951 @ 0x3b70 (15216) - IMAD R15, R16, c[0x0][0x31c], R15 ;
 Instr 952 @ 0x3b80 (15232) - @!P1 BRA 0x3f20 ;
Basic block id 117 - num instructions 9
 Instr 953 @ 0x3b90 (15248) - MOV R17, R19 ;
 Instr 954 @ 0x3ba0 (15264) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 955 @ 0x3bb0 (15280) - ISETP.NE.AND P1, PT, R18, 0x13, PT ;
 Instr 956 @ 0x3bc0 (15296) - IMAD.HI.U32 R16, R19, c[0x0][0x288], R16 ;
 Instr 957 @ 0x3bd0 (15312) - SHF.R.U32.HI R17, RZ, c[0x0][0x28c], R16 ;
 Instr 958 @ 0x3be0 (15328) - IMAD.MOV R16, RZ, RZ, -R17 ;
 Instr 959 @ 0x3bf0 (15344) - IMAD R16, R16, c[0x0][0x284], R19 ;
 Instr 960 @ 0x3c00 (15360) - IMAD R15, R16, c[0x0][0x320], R15 ;
 Instr 961 @ 0x3c10 (15376) - @!P1 BRA 0x3f20 ;
Basic block id 118 - num instructions 8
 Instr 962 @ 0x3c20 (15392) - MOV R16, RZ ;
 Instr 963 @ 0x3c30 (15408) - ISETP.NE.AND P1, PT, R18, 0x14, PT ;
 Instr 964 @ 0x3c40 (15424) - IMAD.HI.U32 R16, R17, c[0x0][0x294], R16 ;
 Instr 965 @ 0x3c50 (15440) - SHF.R.U32.HI R19, RZ, c[0x0][0x298], R16 ;
 Instr 966 @ 0x3c60 (15456) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 967 @ 0x3c70 (15472) - IMAD R16, R16, c[0x0][0x290], R17 ;
 Instr 968 @ 0x3c80 (15488) - IMAD R15, R16, c[0x0][0x324], R15 ;
 Instr 969 @ 0x3c90 (15504) - @!P1 BRA 0x3f20 ;
Basic block id 119 - num instructions 9
 Instr 970 @ 0x3ca0 (15520) - MOV R16, RZ ;
 Instr 971 @ 0x3cb0 (15536) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 972 @ 0x3cc0 (15552) - ISETP.NE.AND P1, PT, R18, 0x15, PT ;
 Instr 973 @ 0x3cd0 (15568) - IMAD.HI.U32 R16, R19, c[0x0][0x2a0], R16 ;
 Instr 974 @ 0x3ce0 (15584) - SHF.R.U32.HI R17, RZ, c[0x0][0x2a4], R16 ;
 Instr 975 @ 0x3cf0 (15600) - IADD3 R16, -R17, RZ, RZ ;
 Instr 976 @ 0x3d00 (15616) - IMAD R16, R16, c[0x0][0x29c], R19 ;
 Instr 977 @ 0x3d10 (15632) - IMAD R15, R16, c[0x0][0x328], R15 ;
 Instr 978 @ 0x3d20 (15648) - @!P1 BRA 0x3f20 ;
Basic block id 120 - num instructions 8
 Instr 979 @ 0x3d30 (15664) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 980 @ 0x3d40 (15680) - ISETP.NE.AND P1, PT, R18, 0x16, PT ;
 Instr 981 @ 0x3d50 (15696) - IMAD.HI.U32 R16, R17, c[0x0][0x2ac], R16 ;
 Instr 982 @ 0x3d60 (15712) - SHF.R.U32.HI R19, RZ, c[0x0][0x2b0], R16 ;
 Instr 983 @ 0x3d70 (15728) - IADD3 R16, -R19, RZ, RZ ;
 Instr 984 @ 0x3d80 (15744) - IMAD R16, R16, c[0x0][0x2a8], R17 ;
 Instr 985 @ 0x3d90 (15760) - IMAD R15, R16, c[0x0][0x32c], R15 ;
 Instr 986 @ 0x3da0 (15776) - @!P1 BRA 0x3f20 ;
Basic block id 121 - num instructions 9
 Instr 987 @ 0x3db0 (15792) - MOV R17, R19 ;
 Instr 988 @ 0x3dc0 (15808) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 989 @ 0x3dd0 (15824) - ISETP.NE.AND P1, PT, R18, 0x17, PT ;
 Instr 990 @ 0x3de0 (15840) - IMAD.HI.U32 R16, R19, c[0x0][0x2b8], R16 ;
 Instr 991 @ 0x3df0 (15856) - SHF.R.U32.HI R20, RZ, c[0x0][0x2bc], R16 ;
 Instr 992 @ 0x3e00 (15872) - IMAD.MOV R16, RZ, RZ, -R20 ;
 Instr 993 @ 0x3e10 (15888) - IMAD R16, R16, c[0x0][0x2b4], R19 ;
 Instr 994 @ 0x3e20 (15904) - IMAD R15, R16, c[0x0][0x330], R15 ;
 Instr 995 @ 0x3e30 (15920) - @!P1 BRA 0x3f20 ;
Basic block id 122 - num instructions 14
 Instr 996 @ 0x3e40 (15936) - ISETP.NE.AND P1, PT, R18, 0x18, PT ;
 Instr 997 @ 0x3e50 (15952) - IMAD.MOV.U32 R17, RZ, RZ, R20 ;
 Instr 998 @ 0x3e60 (15968) - MOV R16, RZ ;
 Instr 999 @ 0x3e70 (15984) - IMAD.HI.U32 R16, R20, c[0x0][0x2c4], R16 ;
 Instr 1000 @ 0x3e80 (16000) - SHF.R.U32.HI R17, RZ, c[0x0][0x2c8], R16 ;
 Instr 1001 @ 0x3e90 (16016) - @P1 MOV R16, RZ ;
 Instr 1002 @ 0x3ea0 (16032) - IMAD.MOV R19, RZ, RZ, -R17.reuse ;
 Instr 1003 @ 0x3eb0 (16048) - @P1 IMAD.HI.U32 R16, R17, c[0x0][0x2d0], R16 ;
 Instr 1004 @ 0x3ec0 (16064) - @P1 SHF.R.U32.HI R18, RZ, c[0x0][0x2d4], R16 ;
 Instr 1005 @ 0x3ed0 (16080) - IMAD R16, R19, c[0x0][0x2c0], R20 ;
 Instr 1006 @ 0x3ee0 (16096) - @P1 IADD3 R19, -R18, RZ, RZ ;
 Instr 1007 @ 0x3ef0 (16112) - IMAD R15, R16, c[0x0][0x334], R15 ;
 Instr 1008 @ 0x3f00 (16128) - @P1 IMAD R16, R19, c[0x0][0x2cc], R17 ;
 Instr 1009 @ 0x3f10 (16144) - @P1 IMAD R15, R16, c[0x0][0x338], R15 ;
Basic block id 123 - num instructions 6
 Instr 1010 @ 0x3f20 (16160) - LOP3.LUT R15, R15, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 1011 @ 0x3f30 (16176) - IADD3 R16, P1, R6, R15, RZ ;
 Instr 1012 @ 0x3f40 (16192) - IMAD.X R17, RZ, RZ, R7, P1 ;
 Instr 1013 @ 0x3f50 (16208) - LDG.E.U16.SYS R15, [R16] ;
 Instr 1014 @ 0x3f60 (16224) - IADD3 R9, R9, c[0x0][0x174], RZ ;
 Instr 1015 @ 0x3f70 (16240) - @!P0 BRA 0x4d60 ;
Basic block id 124 - num instructions 10
 Instr 1016 @ 0x3f80 (16256) - MOV R16, RZ ;
 Instr 1017 @ 0x3f90 (16272) - IMAD.MOV.U32 R17, RZ, RZ, R9 ;
 Instr 1018 @ 0x3fa0 (16288) - MOV R18, c[0x0][0x1a8] ;
 Instr 1019 @ 0x3fb0 (16304) - IMAD.HI.U32 R14, R9, c[0x0][0x1b0], R16 ;
 Instr 1020 @ 0x3fc0 (16320) - ISETP.NE.AND P1, PT, R18, 0x1, PT ;
 Instr 1021 @ 0x3fd0 (16336) - SHF.R.U32.HI R19, RZ, c[0x0][0x1b4], R14 ;
 Instr 1022 @ 0x3fe0 (16352) - IMAD.MOV R14, RZ, RZ, -R19 ;
 Instr 1023 @ 0x3ff0 (16368) - IMAD R14, R14, c[0x0][0x1ac], R9 ;
 Instr 1024 @ 0x4000 (16384) - IMAD R14, R14, c[0x0][0x2d8], RZ ;
 Instr 1025 @ 0x4010 (16400) - @!P1 BRA 0x4d60 ;
Basic block id 125 - num instructions 9
 Instr 1026 @ 0x4020 (16416) - MOV R16, RZ ;
 Instr 1027 @ 0x4030 (16432) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1028 @ 0x4040 (16448) - ISETP.NE.AND P1, PT, R18, 0x2, PT ;
 Instr 1029 @ 0x4050 (16464) - IMAD.HI.U32 R16, R19, c[0x0][0x1bc], R16 ;
 Instr 1030 @ 0x4060 (16480) - SHF.R.U32.HI R20, RZ, c[0x0][0x1c0], R16 ;
 Instr 1031 @ 0x4070 (16496) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1032 @ 0x4080 (16512) - IMAD R17, R17, c[0x0][0x1b8], R19 ;
 Instr 1033 @ 0x4090 (16528) - IMAD R14, R17, c[0x0][0x2dc], R14 ;
 Instr 1034 @ 0x40a0 (16544) - @!P1 BRA 0x4d60 ;
Basic block id 126 - num instructions 9
 Instr 1035 @ 0x40b0 (16560) - MOV R17, R20 ;
 Instr 1036 @ 0x40c0 (16576) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1037 @ 0x40d0 (16592) - ISETP.NE.AND P1, PT, R18, 0x3, PT ;
 Instr 1038 @ 0x40e0 (16608) - IMAD.HI.U32 R16, R20, c[0x0][0x1c8], R16 ;
 Instr 1039 @ 0x40f0 (16624) - SHF.R.U32.HI R19, RZ, c[0x0][0x1cc], R16 ;
 Instr 1040 @ 0x4100 (16640) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1041 @ 0x4110 (16656) - IMAD R17, R17, c[0x0][0x1c4], R20 ;
 Instr 1042 @ 0x4120 (16672) - IMAD R14, R17, c[0x0][0x2e0], R14 ;
 Instr 1043 @ 0x4130 (16688) - @!P1 BRA 0x4d60 ;
Basic block id 127 - num instructions 9
 Instr 1044 @ 0x4140 (16704) - MOV R16, RZ ;
 Instr 1045 @ 0x4150 (16720) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1046 @ 0x4160 (16736) - ISETP.NE.AND P1, PT, R18, 0x4, PT ;
 Instr 1047 @ 0x4170 (16752) - IMAD.HI.U32 R16, R19, c[0x0][0x1d4], R16 ;
 Instr 1048 @ 0x4180 (16768) - SHF.R.U32.HI R20, RZ, c[0x0][0x1d8], R16 ;
 Instr 1049 @ 0x4190 (16784) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1050 @ 0x41a0 (16800) - IMAD R17, R17, c[0x0][0x1d0], R19 ;
 Instr 1051 @ 0x41b0 (16816) - IMAD R14, R17, c[0x0][0x2e4], R14 ;
 Instr 1052 @ 0x41c0 (16832) - @!P1 BRA 0x4d60 ;
Basic block id 128 - num instructions 9
 Instr 1053 @ 0x41d0 (16848) - MOV R17, R20 ;
 Instr 1054 @ 0x41e0 (16864) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1055 @ 0x41f0 (16880) - ISETP.NE.AND P1, PT, R18, 0x5, PT ;
 Instr 1056 @ 0x4200 (16896) - IMAD.HI.U32 R16, R20, c[0x0][0x1e0], R16 ;
 Instr 1057 @ 0x4210 (16912) - SHF.R.U32.HI R19, RZ, c[0x0][0x1e4], R16 ;
 Instr 1058 @ 0x4220 (16928) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1059 @ 0x4230 (16944) - IMAD R17, R17, c[0x0][0x1dc], R20 ;
 Instr 1060 @ 0x4240 (16960) - IMAD R14, R17, c[0x0][0x2e8], R14 ;
 Instr 1061 @ 0x4250 (16976) - @!P1 BRA 0x4d60 ;
Basic block id 129 - num instructions 9
 Instr 1062 @ 0x4260 (16992) - MOV R16, RZ ;
 Instr 1063 @ 0x4270 (17008) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1064 @ 0x4280 (17024) - ISETP.NE.AND P1, PT, R18, 0x6, PT ;
 Instr 1065 @ 0x4290 (17040) - IMAD.HI.U32 R16, R19, c[0x0][0x1ec], R16 ;
 Instr 1066 @ 0x42a0 (17056) - SHF.R.U32.HI R20, RZ, c[0x0][0x1f0], R16 ;
 Instr 1067 @ 0x42b0 (17072) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1068 @ 0x42c0 (17088) - IMAD R17, R17, c[0x0][0x1e8], R19 ;
 Instr 1069 @ 0x42d0 (17104) - IMAD R14, R17, c[0x0][0x2ec], R14 ;
 Instr 1070 @ 0x42e0 (17120) - @!P1 BRA 0x4d60 ;
Basic block id 130 - num instructions 9
 Instr 1071 @ 0x42f0 (17136) - MOV R17, R20 ;
 Instr 1072 @ 0x4300 (17152) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1073 @ 0x4310 (17168) - ISETP.NE.AND P1, PT, R18, 0x7, PT ;
 Instr 1074 @ 0x4320 (17184) - IMAD.HI.U32 R16, R20, c[0x0][0x1f8], R16 ;
 Instr 1075 @ 0x4330 (17200) - SHF.R.U32.HI R19, RZ, c[0x0][0x1fc], R16 ;
 Instr 1076 @ 0x4340 (17216) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1077 @ 0x4350 (17232) - IMAD R17, R17, c[0x0][0x1f4], R20 ;
 Instr 1078 @ 0x4360 (17248) - IMAD R14, R17, c[0x0][0x2f0], R14 ;
 Instr 1079 @ 0x4370 (17264) - @!P1 BRA 0x4d60 ;
Basic block id 131 - num instructions 9
 Instr 1080 @ 0x4380 (17280) - MOV R16, RZ ;
 Instr 1081 @ 0x4390 (17296) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1082 @ 0x43a0 (17312) - ISETP.NE.AND P1, PT, R18, 0x8, PT ;
 Instr 1083 @ 0x43b0 (17328) - IMAD.HI.U32 R16, R19, c[0x0][0x204], R16 ;
 Instr 1084 @ 0x43c0 (17344) - SHF.R.U32.HI R20, RZ, c[0x0][0x208], R16 ;
 Instr 1085 @ 0x43d0 (17360) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1086 @ 0x43e0 (17376) - IMAD R17, R17, c[0x0][0x200], R19 ;
 Instr 1087 @ 0x43f0 (17392) - IMAD R14, R17, c[0x0][0x2f4], R14 ;
 Instr 1088 @ 0x4400 (17408) - @!P1 BRA 0x4d60 ;
Basic block id 132 - num instructions 9
 Instr 1089 @ 0x4410 (17424) - MOV R17, R20 ;
 Instr 1090 @ 0x4420 (17440) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1091 @ 0x4430 (17456) - ISETP.NE.AND P1, PT, R18, 0x9, PT ;
 Instr 1092 @ 0x4440 (17472) - IMAD.HI.U32 R16, R20, c[0x0][0x210], R16 ;
 Instr 1093 @ 0x4450 (17488) - SHF.R.U32.HI R19, RZ, c[0x0][0x214], R16 ;
 Instr 1094 @ 0x4460 (17504) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1095 @ 0x4470 (17520) - IMAD R17, R17, c[0x0][0x20c], R20 ;
 Instr 1096 @ 0x4480 (17536) - IMAD R14, R17, c[0x0][0x2f8], R14 ;
 Instr 1097 @ 0x4490 (17552) - @!P1 BRA 0x4d60 ;
Basic block id 133 - num instructions 9
 Instr 1098 @ 0x44a0 (17568) - MOV R16, RZ ;
 Instr 1099 @ 0x44b0 (17584) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1100 @ 0x44c0 (17600) - ISETP.NE.AND P1, PT, R18, 0xa, PT ;
 Instr 1101 @ 0x44d0 (17616) - IMAD.HI.U32 R16, R19, c[0x0][0x21c], R16 ;
 Instr 1102 @ 0x44e0 (17632) - SHF.R.U32.HI R20, RZ, c[0x0][0x220], R16 ;
 Instr 1103 @ 0x44f0 (17648) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1104 @ 0x4500 (17664) - IMAD R17, R17, c[0x0][0x218], R19 ;
 Instr 1105 @ 0x4510 (17680) - IMAD R14, R17, c[0x0][0x2fc], R14 ;
 Instr 1106 @ 0x4520 (17696) - @!P1 BRA 0x4d60 ;
Basic block id 134 - num instructions 9
 Instr 1107 @ 0x4530 (17712) - MOV R17, R20 ;
 Instr 1108 @ 0x4540 (17728) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1109 @ 0x4550 (17744) - ISETP.NE.AND P1, PT, R18, 0xb, PT ;
 Instr 1110 @ 0x4560 (17760) - IMAD.HI.U32 R16, R20, c[0x0][0x228], R16 ;
 Instr 1111 @ 0x4570 (17776) - SHF.R.U32.HI R19, RZ, c[0x0][0x22c], R16 ;
 Instr 1112 @ 0x4580 (17792) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1113 @ 0x4590 (17808) - IMAD R17, R17, c[0x0][0x224], R20 ;
 Instr 1114 @ 0x45a0 (17824) - IMAD R14, R17, c[0x0][0x300], R14 ;
 Instr 1115 @ 0x45b0 (17840) - @!P1 BRA 0x4d60 ;
Basic block id 135 - num instructions 9
 Instr 1116 @ 0x45c0 (17856) - MOV R16, RZ ;
 Instr 1117 @ 0x45d0 (17872) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1118 @ 0x45e0 (17888) - ISETP.NE.AND P1, PT, R18, 0xc, PT ;
 Instr 1119 @ 0x45f0 (17904) - IMAD.HI.U32 R16, R19, c[0x0][0x234], R16 ;
 Instr 1120 @ 0x4600 (17920) - SHF.R.U32.HI R20, RZ, c[0x0][0x238], R16 ;
 Instr 1121 @ 0x4610 (17936) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1122 @ 0x4620 (17952) - IMAD R17, R17, c[0x0][0x230], R19 ;
 Instr 1123 @ 0x4630 (17968) - IMAD R14, R17, c[0x0][0x304], R14 ;
 Instr 1124 @ 0x4640 (17984) - @!P1 BRA 0x4d60 ;
Basic block id 136 - num instructions 9
 Instr 1125 @ 0x4650 (18000) - MOV R17, R20 ;
 Instr 1126 @ 0x4660 (18016) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1127 @ 0x4670 (18032) - ISETP.NE.AND P1, PT, R18, 0xd, PT ;
 Instr 1128 @ 0x4680 (18048) - IMAD.HI.U32 R16, R20, c[0x0][0x240], R16 ;
 Instr 1129 @ 0x4690 (18064) - SHF.R.U32.HI R19, RZ, c[0x0][0x244], R16 ;
 Instr 1130 @ 0x46a0 (18080) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1131 @ 0x46b0 (18096) - IMAD R17, R17, c[0x0][0x23c], R20 ;
 Instr 1132 @ 0x46c0 (18112) - IMAD R14, R17, c[0x0][0x308], R14 ;
 Instr 1133 @ 0x46d0 (18128) - @!P1 BRA 0x4d60 ;
Basic block id 137 - num instructions 9
 Instr 1134 @ 0x46e0 (18144) - MOV R16, RZ ;
 Instr 1135 @ 0x46f0 (18160) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1136 @ 0x4700 (18176) - ISETP.NE.AND P1, PT, R18, 0xe, PT ;
 Instr 1137 @ 0x4710 (18192) - IMAD.HI.U32 R16, R19, c[0x0][0x24c], R16 ;
 Instr 1138 @ 0x4720 (18208) - SHF.R.U32.HI R20, RZ, c[0x0][0x250], R16 ;
 Instr 1139 @ 0x4730 (18224) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1140 @ 0x4740 (18240) - IMAD R17, R17, c[0x0][0x248], R19 ;
 Instr 1141 @ 0x4750 (18256) - IMAD R14, R17, c[0x0][0x30c], R14 ;
 Instr 1142 @ 0x4760 (18272) - @!P1 BRA 0x4d60 ;
Basic block id 138 - num instructions 9
 Instr 1143 @ 0x4770 (18288) - MOV R17, R20 ;
 Instr 1144 @ 0x4780 (18304) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1145 @ 0x4790 (18320) - ISETP.NE.AND P1, PT, R18, 0xf, PT ;
 Instr 1146 @ 0x47a0 (18336) - IMAD.HI.U32 R16, R20, c[0x0][0x258], R16 ;
 Instr 1147 @ 0x47b0 (18352) - SHF.R.U32.HI R19, RZ, c[0x0][0x25c], R16 ;
 Instr 1148 @ 0x47c0 (18368) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1149 @ 0x47d0 (18384) - IMAD R17, R17, c[0x0][0x254], R20 ;
 Instr 1150 @ 0x47e0 (18400) - IMAD R14, R17, c[0x0][0x310], R14 ;
 Instr 1151 @ 0x47f0 (18416) - @!P1 BRA 0x4d60 ;
Basic block id 139 - num instructions 9
 Instr 1152 @ 0x4800 (18432) - MOV R16, RZ ;
 Instr 1153 @ 0x4810 (18448) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1154 @ 0x4820 (18464) - ISETP.NE.AND P1, PT, R18, 0x10, PT ;
 Instr 1155 @ 0x4830 (18480) - IMAD.HI.U32 R16, R19, c[0x0][0x264], R16 ;
 Instr 1156 @ 0x4840 (18496) - SHF.R.U32.HI R20, RZ, c[0x0][0x268], R16 ;
 Instr 1157 @ 0x4850 (18512) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1158 @ 0x4860 (18528) - IMAD R17, R17, c[0x0][0x260], R19 ;
 Instr 1159 @ 0x4870 (18544) - IMAD R14, R17, c[0x0][0x314], R14 ;
 Instr 1160 @ 0x4880 (18560) - @!P1 BRA 0x4d60 ;
Basic block id 140 - num instructions 9
 Instr 1161 @ 0x4890 (18576) - MOV R17, R20 ;
 Instr 1162 @ 0x48a0 (18592) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1163 @ 0x48b0 (18608) - ISETP.NE.AND P1, PT, R18, 0x11, PT ;
 Instr 1164 @ 0x48c0 (18624) - IMAD.HI.U32 R16, R20, c[0x0][0x270], R16 ;
 Instr 1165 @ 0x48d0 (18640) - SHF.R.U32.HI R19, RZ, c[0x0][0x274], R16 ;
 Instr 1166 @ 0x48e0 (18656) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1167 @ 0x48f0 (18672) - IMAD R17, R17, c[0x0][0x26c], R20 ;
 Instr 1168 @ 0x4900 (18688) - IMAD R14, R17, c[0x0][0x318], R14 ;
 Instr 1169 @ 0x4910 (18704) - @!P1 BRA 0x4d60 ;
Basic block id 141 - num instructions 9
 Instr 1170 @ 0x4920 (18720) - MOV R16, RZ ;
 Instr 1171 @ 0x4930 (18736) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1172 @ 0x4940 (18752) - ISETP.NE.AND P1, PT, R18, 0x12, PT ;
 Instr 1173 @ 0x4950 (18768) - IMAD.HI.U32 R16, R19, c[0x0][0x27c], R16 ;
 Instr 1174 @ 0x4960 (18784) - SHF.R.U32.HI R20, RZ, c[0x0][0x280], R16 ;
 Instr 1175 @ 0x4970 (18800) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1176 @ 0x4980 (18816) - IMAD R17, R17, c[0x0][0x278], R19 ;
 Instr 1177 @ 0x4990 (18832) - IMAD R14, R17, c[0x0][0x31c], R14 ;
 Instr 1178 @ 0x49a0 (18848) - @!P1 BRA 0x4d60 ;
Basic block id 142 - num instructions 9
 Instr 1179 @ 0x49b0 (18864) - MOV R17, R20 ;
 Instr 1180 @ 0x49c0 (18880) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1181 @ 0x49d0 (18896) - ISETP.NE.AND P1, PT, R18, 0x13, PT ;
 Instr 1182 @ 0x49e0 (18912) - IMAD.HI.U32 R16, R20, c[0x0][0x288], R16 ;
 Instr 1183 @ 0x49f0 (18928) - SHF.R.U32.HI R19, RZ, c[0x0][0x28c], R16 ;
 Instr 1184 @ 0x4a00 (18944) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1185 @ 0x4a10 (18960) - IMAD R17, R17, c[0x0][0x284], R20 ;
 Instr 1186 @ 0x4a20 (18976) - IMAD R14, R17, c[0x0][0x320], R14 ;
 Instr 1187 @ 0x4a30 (18992) - @!P1 BRA 0x4d60 ;
Basic block id 143 - num instructions 9
 Instr 1188 @ 0x4a40 (19008) - MOV R16, RZ ;
 Instr 1189 @ 0x4a50 (19024) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1190 @ 0x4a60 (19040) - ISETP.NE.AND P1, PT, R18, 0x14, PT ;
 Instr 1191 @ 0x4a70 (19056) - IMAD.HI.U32 R16, R19, c[0x0][0x294], R16 ;
 Instr 1192 @ 0x4a80 (19072) - SHF.R.U32.HI R20, RZ, c[0x0][0x298], R16 ;
 Instr 1193 @ 0x4a90 (19088) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1194 @ 0x4aa0 (19104) - IMAD R17, R17, c[0x0][0x290], R19 ;
 Instr 1195 @ 0x4ab0 (19120) - IMAD R14, R17, c[0x0][0x324], R14 ;
 Instr 1196 @ 0x4ac0 (19136) - @!P1 BRA 0x4d60 ;
Basic block id 144 - num instructions 9
 Instr 1197 @ 0x4ad0 (19152) - MOV R17, R20 ;
 Instr 1198 @ 0x4ae0 (19168) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1199 @ 0x4af0 (19184) - ISETP.NE.AND P1, PT, R18, 0x15, PT ;
 Instr 1200 @ 0x4b00 (19200) - IMAD.HI.U32 R16, R20, c[0x0][0x2a0], R16 ;
 Instr 1201 @ 0x4b10 (19216) - SHF.R.U32.HI R19, RZ, c[0x0][0x2a4], R16 ;
 Instr 1202 @ 0x4b20 (19232) - IMAD.MOV R17, RZ, RZ, -R19 ;
 Instr 1203 @ 0x4b30 (19248) - IMAD R17, R17, c[0x0][0x29c], R20 ;
 Instr 1204 @ 0x4b40 (19264) - IMAD R14, R17, c[0x0][0x328], R14 ;
 Instr 1205 @ 0x4b50 (19280) - @!P1 BRA 0x4d60 ;
Basic block id 145 - num instructions 9
 Instr 1206 @ 0x4b60 (19296) - MOV R16, RZ ;
 Instr 1207 @ 0x4b70 (19312) - IMAD.MOV.U32 R17, RZ, RZ, R19 ;
 Instr 1208 @ 0x4b80 (19328) - ISETP.NE.AND P1, PT, R18, 0x16, PT ;
 Instr 1209 @ 0x4b90 (19344) - IMAD.HI.U32 R16, R19, c[0x0][0x2ac], R16 ;
 Instr 1210 @ 0x4ba0 (19360) - SHF.R.U32.HI R20, RZ, c[0x0][0x2b0], R16 ;
 Instr 1211 @ 0x4bb0 (19376) - IADD3 R17, -R20, RZ, RZ ;
 Instr 1212 @ 0x4bc0 (19392) - IMAD R17, R17, c[0x0][0x2a8], R19 ;
 Instr 1213 @ 0x4bd0 (19408) - IMAD R14, R17, c[0x0][0x32c], R14 ;
 Instr 1214 @ 0x4be0 (19424) - @!P1 BRA 0x4d60 ;
Basic block id 146 - num instructions 9
 Instr 1215 @ 0x4bf0 (19440) - MOV R16, RZ ;
 Instr 1216 @ 0x4c00 (19456) - IMAD.MOV.U32 R17, RZ, RZ, R20 ;
 Instr 1217 @ 0x4c10 (19472) - ISETP.NE.AND P1, PT, R18, 0x17, PT ;
 Instr 1218 @ 0x4c20 (19488) - IMAD.HI.U32 R16, R20, c[0x0][0x2b8], R16 ;
 Instr 1219 @ 0x4c30 (19504) - SHF.R.U32.HI R21, RZ, c[0x0][0x2bc], R16 ;
 Instr 1220 @ 0x4c40 (19520) - IADD3 R17, -R21, RZ, RZ ;
 Instr 1221 @ 0x4c50 (19536) - IMAD R17, R17, c[0x0][0x2b4], R20 ;
 Instr 1222 @ 0x4c60 (19552) - IMAD R14, R17, c[0x0][0x330], R14 ;
 Instr 1223 @ 0x4c70 (19568) - @!P1 BRA 0x4d60 ;
Basic block id 147 - num instructions 14
 Instr 1224 @ 0x4c80 (19584) - ISETP.NE.AND P1, PT, R18, 0x18, PT ;
 Instr 1225 @ 0x4c90 (19600) - IMAD.MOV.U32 R17, RZ, RZ, R21 ;
 Instr 1226 @ 0x4ca0 (19616) - MOV R16, RZ ;
 Instr 1227 @ 0x4cb0 (19632) - IMAD.HI.U32 R16, R21, c[0x0][0x2c4], R16 ;
 Instr 1228 @ 0x4cc0 (19648) - SHF.R.U32.HI R17, RZ, c[0x0][0x2c8], R16 ;
 Instr 1229 @ 0x4cd0 (19664) - @P1 MOV R16, RZ ;
 Instr 1230 @ 0x4ce0 (19680) - IADD3 R19, -R17, RZ, RZ ;
 Instr 1231 @ 0x4cf0 (19696) - @P1 IMAD.HI.U32 R16, R17, c[0x0][0x2d0], R16 ;
 Instr 1232 @ 0x4d00 (19712) - IMAD R19, R19, c[0x0][0x2c0], R21 ;
 Instr 1233 @ 0x4d10 (19728) - @P1 SHF.R.U32.HI R16, RZ, c[0x0][0x2d4], R16 ;
 Instr 1234 @ 0x4d20 (19744) - IMAD R14, R19, c[0x0][0x334], R14 ;
 Instr 1235 @ 0x4d30 (19760) - @P1 IMAD.MOV R16, RZ, RZ, -R16 ;
 Instr 1236 @ 0x4d40 (19776) - @P1 IMAD R17, R16, c[0x0][0x2cc], R17 ;
 Instr 1237 @ 0x4d50 (19792) - @P1 IMAD R14, R17, c[0x0][0x338], R14 ;
Basic block id 148 - num instructions 17
 Instr 1238 @ 0x4d60 (19808) - LOP3.LUT R17, R14, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 1239 @ 0x4d70 (19824) - IADD3 R16, P1, R6, R17, RZ ;
 Instr 1240 @ 0x4d80 (19840) - IADD3.X R17, RZ, R7, RZ, P1, !PT ;
 Instr 1241 @ 0x4d90 (19856) - LDG.E.U16.SYS R16, [R16] ;
 Instr 1242 @ 0x4da0 (19872) - IADD3 R9, R9, c[0x0][0x174], RZ ;
 Instr 1243 @ 0x4db0 (19888) - HADD2.F32 R14, R13.H0_H0, -RZ.H0_H0 ;
 Instr 1244 @ 0x4dc0 (19904) - MOV R18, c[0x0][0x174] ;
 Instr 1245 @ 0x4dd0 (19920) - HADD2.F32 R19, R12.H0_H0, -RZ.H0_H0 ;
 Instr 1246 @ 0x4de0 (19936) - HADD2.F32 R21, R15.H0_H0, -RZ.H0_H0 ;
 Instr 1247 @ 0x4df0 (19952) - IMAD R18, R18, 0x3, R9 ;
 Instr 1248 @ 0x4e00 (19968) - FADD R11, R14, R11 ;
 Instr 1249 @ 0x4e10 (19984) - FADD R10, R19, R10 ;
 Instr 1250 @ 0x4e20 (20000) - ISETP.GE.U32.AND P1, PT, R18, c[0x0][0x16c], PT ;
 Instr 1251 @ 0x4e30 (20016) - FADD R8, R21, R8 ;
 Instr 1252 @ 0x4e40 (20032) - HADD2.F32 R23, R16.H0_H0, -RZ.H0_H0 ;
 Instr 1253 @ 0x4e50 (20048) - FADD R4, R23, R4 ;
 Instr 1254 @ 0x4e60 (20064) - @!P1 BRA 0x15e0 ;
Basic block id 149 - num instructions 2
 Instr 1255 @ 0x4e70 (20080) - BSYNC B2 ;
 Instr 1256 @ 0x4e80 (20096) - PRMT R14, R16, 0x7610, R14 ;
Basic block id 150 - num instructions 5
 Instr 1257 @ 0x4e90 (20112) - BSYNC B1 ;
 Instr 1258 @ 0x4ea0 (20128) - ISETP.GE.U32.AND P0, PT, R9, c[0x0][0x16c], PT ;
 Instr 1259 @ 0x4eb0 (20144) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1260 @ 0x4ec0 (20160) - BSSY B1, 0x82a0 ;
 Instr 1261 @ 0x4ed0 (20176) - @P0 BRA 0x8290 ;
Basic block id 151 - num instructions 3
 Instr 1262 @ 0x4ee0 (20192) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x1a8], PT ;
 Instr 1263 @ 0x4ef0 (20208) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1264 @ 0x4f00 (20224) - @!P1 BRA 0x5b80 ;
Basic block id 152 - num instructions 10
 Instr 1265 @ 0x4f10 (20240) - MOV R16, RZ ;
 Instr 1266 @ 0x4f20 (20256) - IMAD.MOV.U32 R20, RZ, RZ, c[0x0][0x1a8] ;
 Instr 1267 @ 0x4f30 (20272) - MOV R17, R9 ;
 Instr 1268 @ 0x4f40 (20288) - ISETP.NE.AND P2, PT, R20, 0x1, PT ;
 Instr 1269 @ 0x4f50 (20304) - IMAD.HI.U32 R16, R9, c[0x0][0x1b0], R16 ;
 Instr 1270 @ 0x4f60 (20320) - SHF.R.U32.HI R17, RZ, c[0x0][0x1b4], R16 ;
 Instr 1271 @ 0x4f70 (20336) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1272 @ 0x4f80 (20352) - IMAD R13, R18, c[0x0][0x1ac], R9 ;
 Instr 1273 @ 0x4f90 (20368) - IMAD R13, R13, c[0x0][0x2d8], RZ ;
 Instr 1274 @ 0x4fa0 (20384) - @!P2 BRA 0x5b80 ;
Basic block id 153 - num instructions 8
 Instr 1275 @ 0x4fb0 (20400) - MOV R16, RZ ;
 Instr 1276 @ 0x4fc0 (20416) - ISETP.NE.AND P2, PT, R20, 0x2, PT ;
 Instr 1277 @ 0x4fd0 (20432) - IMAD.HI.U32 R18, R17, c[0x0][0x1bc], R16 ;
 Instr 1278 @ 0x4fe0 (20448) - SHF.R.U32.HI R19, RZ, c[0x0][0x1c0], R18 ;
 Instr 1279 @ 0x4ff0 (20464) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 1280 @ 0x5000 (20480) - IMAD R16, R16, c[0x0][0x1b8], R17 ;
 Instr 1281 @ 0x5010 (20496) - IMAD R13, R16, c[0x0][0x2dc], R13 ;
 Instr 1282 @ 0x5020 (20512) - @!P2 BRA 0x5b80 ;
Basic block id 154 - num instructions 8
 Instr 1283 @ 0x5030 (20528) - MOV R18, RZ ;
 Instr 1284 @ 0x5040 (20544) - ISETP.NE.AND P2, PT, R20, 0x3, PT ;
 Instr 1285 @ 0x5050 (20560) - IMAD.HI.U32 R16, R19, c[0x0][0x1c8], R18 ;
 Instr 1286 @ 0x5060 (20576) - SHF.R.U32.HI R17, RZ, c[0x0][0x1cc], R16 ;
 Instr 1287 @ 0x5070 (20592) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1288 @ 0x5080 (20608) - IMAD R18, R18, c[0x0][0x1c4], R19 ;
 Instr 1289 @ 0x5090 (20624) - IMAD R13, R18, c[0x0][0x2e0], R13 ;
 Instr 1290 @ 0x50a0 (20640) - @!P2 BRA 0x5b80 ;
Basic block id 155 - num instructions 8
 Instr 1291 @ 0x50b0 (20656) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1292 @ 0x50c0 (20672) - ISETP.NE.AND P2, PT, R20, 0x4, PT ;
 Instr 1293 @ 0x50d0 (20688) - IMAD.HI.U32 R18, R17, c[0x0][0x1d4], R16 ;
 Instr 1294 @ 0x50e0 (20704) - SHF.R.U32.HI R19, RZ, c[0x0][0x1d8], R18 ;
 Instr 1295 @ 0x50f0 (20720) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1296 @ 0x5100 (20736) - IMAD R16, R16, c[0x0][0x1d0], R17 ;
 Instr 1297 @ 0x5110 (20752) - IMAD R13, R16, c[0x0][0x2e4], R13 ;
 Instr 1298 @ 0x5120 (20768) - @!P2 BRA 0x5b80 ;
Basic block id 156 - num instructions 8
 Instr 1299 @ 0x5130 (20784) - MOV R18, RZ ;
 Instr 1300 @ 0x5140 (20800) - ISETP.NE.AND P2, PT, R20, 0x5, PT ;
 Instr 1301 @ 0x5150 (20816) - IMAD.HI.U32 R16, R19, c[0x0][0x1e0], R18 ;
 Instr 1302 @ 0x5160 (20832) - SHF.R.U32.HI R17, RZ, c[0x0][0x1e4], R16 ;
 Instr 1303 @ 0x5170 (20848) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 1304 @ 0x5180 (20864) - IMAD R18, R18, c[0x0][0x1dc], R19 ;
 Instr 1305 @ 0x5190 (20880) - IMAD R13, R18, c[0x0][0x2e8], R13 ;
 Instr 1306 @ 0x51a0 (20896) - @!P2 BRA 0x5b80 ;
Basic block id 157 - num instructions 8
 Instr 1307 @ 0x51b0 (20912) - MOV R16, RZ ;
 Instr 1308 @ 0x51c0 (20928) - ISETP.NE.AND P2, PT, R20, 0x6, PT ;
 Instr 1309 @ 0x51d0 (20944) - IMAD.HI.U32 R18, R17, c[0x0][0x1ec], R16 ;
 Instr 1310 @ 0x51e0 (20960) - SHF.R.U32.HI R19, RZ, c[0x0][0x1f0], R18 ;
 Instr 1311 @ 0x51f0 (20976) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1312 @ 0x5200 (20992) - IMAD R16, R16, c[0x0][0x1e8], R17 ;
 Instr 1313 @ 0x5210 (21008) - IMAD R13, R16, c[0x0][0x2ec], R13 ;
 Instr 1314 @ 0x5220 (21024) - @!P2 BRA 0x5b80 ;
Basic block id 158 - num instructions 8
 Instr 1315 @ 0x5230 (21040) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1316 @ 0x5240 (21056) - ISETP.NE.AND P2, PT, R20, 0x7, PT ;
 Instr 1317 @ 0x5250 (21072) - IMAD.HI.U32 R16, R19, c[0x0][0x1f8], R18 ;
 Instr 1318 @ 0x5260 (21088) - SHF.R.U32.HI R17, RZ, c[0x0][0x1fc], R16 ;
 Instr 1319 @ 0x5270 (21104) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1320 @ 0x5280 (21120) - IMAD R18, R18, c[0x0][0x1f4], R19 ;
 Instr 1321 @ 0x5290 (21136) - IMAD R13, R18, c[0x0][0x2f0], R13 ;
 Instr 1322 @ 0x52a0 (21152) - @!P2 BRA 0x5b80 ;
Basic block id 159 - num instructions 8
 Instr 1323 @ 0x52b0 (21168) - MOV R16, RZ ;
 Instr 1324 @ 0x52c0 (21184) - ISETP.NE.AND P2, PT, R20, 0x8, PT ;
 Instr 1325 @ 0x52d0 (21200) - IMAD.HI.U32 R18, R17, c[0x0][0x204], R16 ;
 Instr 1326 @ 0x52e0 (21216) - SHF.R.U32.HI R19, RZ, c[0x0][0x208], R18 ;
 Instr 1327 @ 0x52f0 (21232) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 1328 @ 0x5300 (21248) - IMAD R16, R16, c[0x0][0x200], R17 ;
 Instr 1329 @ 0x5310 (21264) - IMAD R13, R16, c[0x0][0x2f4], R13 ;
 Instr 1330 @ 0x5320 (21280) - @!P2 BRA 0x5b80 ;
Basic block id 160 - num instructions 8
 Instr 1331 @ 0x5330 (21296) - MOV R18, RZ ;
 Instr 1332 @ 0x5340 (21312) - ISETP.NE.AND P2, PT, R20, 0x9, PT ;
 Instr 1333 @ 0x5350 (21328) - IMAD.HI.U32 R16, R19, c[0x0][0x210], R18 ;
 Instr 1334 @ 0x5360 (21344) - SHF.R.U32.HI R17, RZ, c[0x0][0x214], R16 ;
 Instr 1335 @ 0x5370 (21360) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1336 @ 0x5380 (21376) - IMAD R18, R18, c[0x0][0x20c], R19 ;
 Instr 1337 @ 0x5390 (21392) - IMAD R13, R18, c[0x0][0x2f8], R13 ;
 Instr 1338 @ 0x53a0 (21408) - @!P2 BRA 0x5b80 ;
Basic block id 161 - num instructions 8
 Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1340 @ 0x53c0 (21440) - ISETP.NE.AND P2, PT, R20, 0xa, PT ;
 Instr 1341 @ 0x53d0 (21456) - IMAD.HI.U32 R18, R17, c[0x0][0x21c], R16 ;
 Instr 1342 @ 0x53e0 (21472) - SHF.R.U32.HI R19, RZ, c[0x0][0x220], R18 ;
 Instr 1343 @ 0x53f0 (21488) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1344 @ 0x5400 (21504) - IMAD R16, R16, c[0x0][0x218], R17 ;
 Instr 1345 @ 0x5410 (21520) - IMAD R13, R16, c[0x0][0x2fc], R13 ;
 Instr 1346 @ 0x5420 (21536) - @!P2 BRA 0x5b80 ;
Basic block id 162 - num instructions 8
 Instr 1347 @ 0x5430 (21552) - MOV R18, RZ ;
 Instr 1348 @ 0x5440 (21568) - ISETP.NE.AND P2, PT, R20, 0xb, PT ;
 Instr 1349 @ 0x5450 (21584) - IMAD.HI.U32 R16, R19, c[0x0][0x228], R18 ;
 Instr 1350 @ 0x5460 (21600) - SHF.R.U32.HI R17, RZ, c[0x0][0x22c], R16 ;
 Instr 1351 @ 0x5470 (21616) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 1352 @ 0x5480 (21632) - IMAD R18, R18, c[0x0][0x224], R19 ;
 Instr 1353 @ 0x5490 (21648) - IMAD R13, R18, c[0x0][0x300], R13 ;
 Instr 1354 @ 0x54a0 (21664) - @!P2 BRA 0x5b80 ;
Basic block id 163 - num instructions 8
 Instr 1355 @ 0x54b0 (21680) - MOV R16, RZ ;
 Instr 1356 @ 0x54c0 (21696) - ISETP.NE.AND P2, PT, R20, 0xc, PT ;
 Instr 1357 @ 0x54d0 (21712) - IMAD.HI.U32 R18, R17, c[0x0][0x234], R16 ;
 Instr 1358 @ 0x54e0 (21728) - SHF.R.U32.HI R19, RZ, c[0x0][0x238], R18 ;
 Instr 1359 @ 0x54f0 (21744) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1360 @ 0x5500 (21760) - IMAD R16, R16, c[0x0][0x230], R17 ;
 Instr 1361 @ 0x5510 (21776) - IMAD R13, R16, c[0x0][0x304], R13 ;
 Instr 1362 @ 0x5520 (21792) - @!P2 BRA 0x5b80 ;
Basic block id 164 - num instructions 8
 Instr 1363 @ 0x5530 (21808) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1364 @ 0x5540 (21824) - ISETP.NE.AND P2, PT, R20, 0xd, PT ;
 Instr 1365 @ 0x5550 (21840) - IMAD.HI.U32 R16, R19, c[0x0][0x240], R18 ;
 Instr 1366 @ 0x5560 (21856) - SHF.R.U32.HI R17, RZ, c[0x0][0x244], R16 ;
 Instr 1367 @ 0x5570 (21872) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1368 @ 0x5580 (21888) - IMAD R18, R18, c[0x0][0x23c], R19 ;
 Instr 1369 @ 0x5590 (21904) - IMAD R13, R18, c[0x0][0x308], R13 ;
 Instr 1370 @ 0x55a0 (21920) - @!P2 BRA 0x5b80 ;
Basic block id 165 - num instructions 8
 Instr 1371 @ 0x55b0 (21936) - MOV R16, RZ ;
 Instr 1372 @ 0x55c0 (21952) - ISETP.NE.AND P2, PT, R20, 0xe, PT ;
 Instr 1373 @ 0x55d0 (21968) - IMAD.HI.U32 R18, R17, c[0x0][0x24c], R16 ;
 Instr 1374 @ 0x55e0 (21984) - SHF.R.U32.HI R19, RZ, c[0x0][0x250], R18 ;
 Instr 1375 @ 0x55f0 (22000) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 1376 @ 0x5600 (22016) - IMAD R16, R16, c[0x0][0x248], R17 ;
 Instr 1377 @ 0x5610 (22032) - IMAD R13, R16, c[0x0][0x30c], R13 ;
 Instr 1378 @ 0x5620 (22048) - @!P2 BRA 0x5b80 ;
Basic block id 166 - num instructions 8
 Instr 1379 @ 0x5630 (22064) - MOV R18, RZ ;
 Instr 1380 @ 0x5640 (22080) - ISETP.NE.AND P2, PT, R20, 0xf, PT ;
 Instr 1381 @ 0x5650 (22096) - IMAD.HI.U32 R16, R19, c[0x0][0x258], R18 ;
 Instr 1382 @ 0x5660 (22112) - SHF.R.U32.HI R17, RZ, c[0x0][0x25c], R16 ;
 Instr 1383 @ 0x5670 (22128) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1384 @ 0x5680 (22144) - IMAD R18, R18, c[0x0][0x254], R19 ;
 Instr 1385 @ 0x5690 (22160) - IMAD R13, R18, c[0x0][0x310], R13 ;
 Instr 1386 @ 0x56a0 (22176) - @!P2 BRA 0x5b80 ;
Basic block id 167 - num instructions 8
 Instr 1387 @ 0x56b0 (22192) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1388 @ 0x56c0 (22208) - ISETP.NE.AND P2, PT, R20, 0x10, PT ;
 Instr 1389 @ 0x56d0 (22224) - IMAD.HI.U32 R18, R17, c[0x0][0x264], R16 ;
 Instr 1390 @ 0x56e0 (22240) - SHF.R.U32.HI R19, RZ, c[0x0][0x268], R18 ;
 Instr 1391 @ 0x56f0 (22256) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1392 @ 0x5700 (22272) - IMAD R16, R16, c[0x0][0x260], R17 ;
 Instr 1393 @ 0x5710 (22288) - IMAD R13, R16, c[0x0][0x314], R13 ;
 Instr 1394 @ 0x5720 (22304) - @!P2 BRA 0x5b80 ;
Basic block id 168 - num instructions 8
 Instr 1395 @ 0x5730 (22320) - MOV R18, RZ ;
 Instr 1396 @ 0x5740 (22336) - ISETP.NE.AND P2, PT, R20, 0x11, PT ;
 Instr 1397 @ 0x5750 (22352) - IMAD.HI.U32 R16, R19, c[0x0][0x270], R18 ;
 Instr 1398 @ 0x5760 (22368) - SHF.R.U32.HI R17, RZ, c[0x0][0x274], R16 ;
 Instr 1399 @ 0x5770 (22384) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 1400 @ 0x5780 (22400) - IMAD R18, R18, c[0x0][0x26c], R19 ;
 Instr 1401 @ 0x5790 (22416) - IMAD R13, R18, c[0x0][0x318], R13 ;
 Instr 1402 @ 0x57a0 (22432) - @!P2 BRA 0x5b80 ;
Basic block id 169 - num instructions 8
 Instr 1403 @ 0x57b0 (22448) - MOV R16, RZ ;
 Instr 1404 @ 0x57c0 (22464) - ISETP.NE.AND P2, PT, R20, 0x12, PT ;
 Instr 1405 @ 0x57d0 (22480) - IMAD.HI.U32 R18, R17, c[0x0][0x27c], R16 ;
 Instr 1406 @ 0x57e0 (22496) - SHF.R.U32.HI R19, RZ, c[0x0][0x280], R18 ;
 Instr 1407 @ 0x57f0 (22512) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1408 @ 0x5800 (22528) - IMAD R16, R16, c[0x0][0x278], R17 ;
 Instr 1409 @ 0x5810 (22544) - IMAD R13, R16, c[0x0][0x31c], R13 ;
 Instr 1410 @ 0x5820 (22560) - @!P2 BRA 0x5b80 ;
Basic block id 170 - num instructions 8
 Instr 1411 @ 0x5830 (22576) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1412 @ 0x5840 (22592) - ISETP.NE.AND P2, PT, R20, 0x13, PT ;
 Instr 1413 @ 0x5850 (22608) - IMAD.HI.U32 R16, R19, c[0x0][0x288], R18 ;
 Instr 1414 @ 0x5860 (22624) - SHF.R.U32.HI R17, RZ, c[0x0][0x28c], R16 ;
 Instr 1415 @ 0x5870 (22640) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1416 @ 0x5880 (22656) - IMAD R18, R18, c[0x0][0x284], R19 ;
 Instr 1417 @ 0x5890 (22672) - IMAD R13, R18, c[0x0][0x320], R13 ;
 Instr 1418 @ 0x58a0 (22688) - @!P2 BRA 0x5b80 ;
Basic block id 171 - num instructions 8
 Instr 1419 @ 0x58b0 (22704) - MOV R16, RZ ;
 Instr 1420 @ 0x58c0 (22720) - ISETP.NE.AND P2, PT, R20, 0x14, PT ;
 Instr 1421 @ 0x58d0 (22736) - IMAD.HI.U32 R18, R17, c[0x0][0x294], R16 ;
 Instr 1422 @ 0x58e0 (22752) - SHF.R.U32.HI R19, RZ, c[0x0][0x298], R18 ;
 Instr 1423 @ 0x58f0 (22768) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 1424 @ 0x5900 (22784) - IMAD R16, R16, c[0x0][0x290], R17 ;
 Instr 1425 @ 0x5910 (22800) - IMAD R13, R16, c[0x0][0x324], R13 ;
 Instr 1426 @ 0x5920 (22816) - @!P2 BRA 0x5b80 ;
Basic block id 172 - num instructions 8
 Instr 1427 @ 0x5930 (22832) - MOV R18, RZ ;
 Instr 1428 @ 0x5940 (22848) - ISETP.NE.AND P2, PT, R20, 0x15, PT ;
 Instr 1429 @ 0x5950 (22864) - IMAD.HI.U32 R16, R19, c[0x0][0x2a0], R18 ;
 Instr 1430 @ 0x5960 (22880) - SHF.R.U32.HI R17, RZ, c[0x0][0x2a4], R16 ;
 Instr 1431 @ 0x5970 (22896) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1432 @ 0x5980 (22912) - IMAD R18, R18, c[0x0][0x29c], R19 ;
 Instr 1433 @ 0x5990 (22928) - IMAD R13, R18, c[0x0][0x328], R13 ;
 Instr 1434 @ 0x59a0 (22944) - @!P2 BRA 0x5b80 ;
Basic block id 173 - num instructions 8
 Instr 1435 @ 0x59b0 (22960) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1436 @ 0x59c0 (22976) - ISETP.NE.AND P2, PT, R20, 0x16, PT ;
 Instr 1437 @ 0x59d0 (22992) - IMAD.HI.U32 R18, R17, c[0x0][0x2ac], R16 ;
 Instr 1438 @ 0x59e0 (23008) - SHF.R.U32.HI R19, RZ, c[0x0][0x2b0], R18 ;
 Instr 1439 @ 0x59f0 (23024) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1440 @ 0x5a00 (23040) - IMAD R16, R16, c[0x0][0x2a8], R17 ;
 Instr 1441 @ 0x5a10 (23056) - IMAD R13, R16, c[0x0][0x32c], R13 ;
 Instr 1442 @ 0x5a20 (23072) - @!P2 BRA 0x5b80 ;
Basic block id 174 - num instructions 8
 Instr 1443 @ 0x5a30 (23088) - MOV R18, RZ ;
 Instr 1444 @ 0x5a40 (23104) - ISETP.NE.AND P2, PT, R20, 0x17, PT ;
 Instr 1445 @ 0x5a50 (23120) - IMAD.HI.U32 R16, R19, c[0x0][0x2b8], R18 ;
 Instr 1446 @ 0x5a60 (23136) - SHF.R.U32.HI R17, RZ, c[0x0][0x2bc], R16 ;
 Instr 1447 @ 0x5a70 (23152) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 1448 @ 0x5a80 (23168) - IMAD R18, R18, c[0x0][0x2b4], R19 ;
 Instr 1449 @ 0x5a90 (23184) - IMAD R13, R18, c[0x0][0x330], R13 ;
 Instr 1450 @ 0x5aa0 (23200) - @!P2 BRA 0x5b80 ;
Basic block id 175 - num instructions 13
 Instr 1451 @ 0x5ab0 (23216) - ISETP.NE.AND P2, PT, R20, 0x18, PT ;
 Instr 1452 @ 0x5ac0 (23232) - MOV R16, RZ ;
 Instr 1453 @ 0x5ad0 (23248) - IMAD.HI.U32 R18, R17, c[0x0][0x2c4], R16 ;
 Instr 1454 @ 0x5ae0 (23264) - SHF.R.U32.HI R19, RZ, c[0x0][0x2c8], R18 ;
 Instr 1455 @ 0x5af0 (23280) - @P2 MOV R18, RZ ;
 Instr 1456 @ 0x5b00 (23296) - IMAD.MOV R21, RZ, RZ, -R19.reuse ;
 Instr 1457 @ 0x5b10 (23312) - @P2 IMAD.HI.U32 R16, R19, c[0x0][0x2d0], R18 ;
 Instr 1458 @ 0x5b20 (23328) - @P2 SHF.R.U32.HI R18, RZ, c[0x0][0x2d4], R16 ;
 Instr 1459 @ 0x5b30 (23344) - IMAD R16, R21, c[0x0][0x2c0], R17 ;
 Instr 1460 @ 0x5b40 (23360) - @P2 IADD3 R18, -R18, RZ, RZ ;
 Instr 1461 @ 0x5b50 (23376) - IMAD R13, R16, c[0x0][0x334], R13 ;
 Instr 1462 @ 0x5b60 (23392) - @P2 IMAD R18, R18, c[0x0][0x2cc], R19 ;
 Instr 1463 @ 0x5b70 (23408) - @P2 IMAD R13, R18, c[0x0][0x338], R13 ;
Basic block id 176 - num instructions 7
 Instr 1464 @ 0x5b80 (23424) - LOP3.LUT R13, R13, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 1465 @ 0x5b90 (23440) - IADD3 R18, P2, R6, R13, RZ ;
 Instr 1466 @ 0x5ba0 (23456) - IADD3.X R19, RZ, R7, RZ, P2, !PT ;
 Instr 1467 @ 0x5bb0 (23472) - LDG.E.U16.SYS R13, [R18] ;
 Instr 1468 @ 0x5bc0 (23488) - IADD3 R17, R9, c[0x0][0x174], RZ ;
 Instr 1469 @ 0x5bd0 (23504) - ISETP.GE.U32.AND P2, PT, R17, c[0x0][0x16c], PT ;
 Instr 1470 @ 0x5be0 (23520) - @P2 BRA 0x8290 ;
Basic block id 177 - num instructions 2
 Instr 1471 @ 0x5bf0 (23536) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 1472 @ 0x5c00 (23552) - @!P1 BRA 0x6870 ;
Basic block id 178 - num instructions 9
 Instr 1473 @ 0x5c10 (23568) - MOV R16, RZ ;
 Instr 1474 @ 0x5c20 (23584) - MOV R22, c[0x0][0x1a8] ;
 Instr 1475 @ 0x5c30 (23600) - IMAD.HI.U32 R18, R17, c[0x0][0x1b0], R16 ;
 Instr 1476 @ 0x5c40 (23616) - ISETP.NE.AND P2, PT, R22, 0x1, PT ;
 Instr 1477 @ 0x5c50 (23632) - SHF.R.U32.HI R19, RZ, c[0x0][0x1b4], R18 ;
 Instr 1478 @ 0x5c60 (23648) - IMAD.MOV R21, RZ, RZ, -R19 ;
 Instr 1479 @ 0x5c70 (23664) - IMAD R12, R21, c[0x0][0x1ac], R17 ;
 Instr 1480 @ 0x5c80 (23680) - IMAD R12, R12, c[0x0][0x2d8], RZ ;
 Instr 1481 @ 0x5c90 (23696) - @!P2 BRA 0x6870 ;
Basic block id 179 - num instructions 8
 Instr 1482 @ 0x5ca0 (23712) - MOV R18, RZ ;
 Instr 1483 @ 0x5cb0 (23728) - ISETP.NE.AND P2, PT, R22, 0x2, PT ;
 Instr 1484 @ 0x5cc0 (23744) - IMAD.HI.U32 R20, R19, c[0x0][0x1bc], R18 ;
 Instr 1485 @ 0x5cd0 (23760) - SHF.R.U32.HI R21, RZ, c[0x0][0x1c0], R20 ;
 Instr 1486 @ 0x5ce0 (23776) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1487 @ 0x5cf0 (23792) - IMAD R19, R18, c[0x0][0x1b8], R19 ;
 Instr 1488 @ 0x5d00 (23808) - IMAD R12, R19, c[0x0][0x2dc], R12 ;
 Instr 1489 @ 0x5d10 (23824) - @!P2 BRA 0x6870 ;
Basic block id 180 - num instructions 8
 Instr 1490 @ 0x5d20 (23840) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1491 @ 0x5d30 (23856) - ISETP.NE.AND P2, PT, R22, 0x3, PT ;
 Instr 1492 @ 0x5d40 (23872) - IMAD.HI.U32 R18, R21, c[0x0][0x1c8], R20 ;
 Instr 1493 @ 0x5d50 (23888) - SHF.R.U32.HI R19, RZ, c[0x0][0x1cc], R18 ;
 Instr 1494 @ 0x5d60 (23904) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1495 @ 0x5d70 (23920) - IMAD R21, R20, c[0x0][0x1c4], R21 ;
 Instr 1496 @ 0x5d80 (23936) - IMAD R12, R21, c[0x0][0x2e0], R12 ;
 Instr 1497 @ 0x5d90 (23952) - @!P2 BRA 0x6870 ;
Basic block id 181 - num instructions 8
 Instr 1498 @ 0x5da0 (23968) - MOV R18, RZ ;
 Instr 1499 @ 0x5db0 (23984) - ISETP.NE.AND P2, PT, R22, 0x4, PT ;
 Instr 1500 @ 0x5dc0 (24000) - IMAD.HI.U32 R20, R19, c[0x0][0x1d4], R18 ;
 Instr 1501 @ 0x5dd0 (24016) - SHF.R.U32.HI R21, RZ, c[0x0][0x1d8], R20 ;
 Instr 1502 @ 0x5de0 (24032) - IMAD.MOV R18, RZ, RZ, -R21 ;
 Instr 1503 @ 0x5df0 (24048) - IMAD R19, R18, c[0x0][0x1d0], R19 ;
 Instr 1504 @ 0x5e00 (24064) - IMAD R12, R19, c[0x0][0x2e4], R12 ;
 Instr 1505 @ 0x5e10 (24080) - @!P2 BRA 0x6870 ;
Basic block id 182 - num instructions 8
 Instr 1506 @ 0x5e20 (24096) - MOV R20, RZ ;
 Instr 1507 @ 0x5e30 (24112) - ISETP.NE.AND P2, PT, R22, 0x5, PT ;
 Instr 1508 @ 0x5e40 (24128) - IMAD.HI.U32 R18, R21, c[0x0][0x1e0], R20 ;
 Instr 1509 @ 0x5e50 (24144) - SHF.R.U32.HI R19, RZ, c[0x0][0x1e4], R18 ;
 Instr 1510 @ 0x5e60 (24160) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1511 @ 0x5e70 (24176) - IMAD R21, R20, c[0x0][0x1dc], R21 ;
 Instr 1512 @ 0x5e80 (24192) - IMAD R12, R21, c[0x0][0x2e8], R12 ;
 Instr 1513 @ 0x5e90 (24208) - @!P2 BRA 0x6870 ;
Basic block id 183 - num instructions 8
 Instr 1514 @ 0x5ea0 (24224) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1515 @ 0x5eb0 (24240) - ISETP.NE.AND P2, PT, R22, 0x6, PT ;
 Instr 1516 @ 0x5ec0 (24256) - IMAD.HI.U32 R20, R19, c[0x0][0x1ec], R18 ;
 Instr 1517 @ 0x5ed0 (24272) - SHF.R.U32.HI R21, RZ, c[0x0][0x1f0], R20 ;
 Instr 1518 @ 0x5ee0 (24288) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1519 @ 0x5ef0 (24304) - IMAD R19, R18, c[0x0][0x1e8], R19 ;
 Instr 1520 @ 0x5f00 (24320) - IMAD R12, R19, c[0x0][0x2ec], R12 ;
 Instr 1521 @ 0x5f10 (24336) - @!P2 BRA 0x6870 ;
Basic block id 184 - num instructions 8
 Instr 1522 @ 0x5f20 (24352) - MOV R20, RZ ;
 Instr 1523 @ 0x5f30 (24368) - ISETP.NE.AND P2, PT, R22, 0x7, PT ;
 Instr 1524 @ 0x5f40 (24384) - IMAD.HI.U32 R18, R21, c[0x0][0x1f8], R20 ;
 Instr 1525 @ 0x5f50 (24400) - SHF.R.U32.HI R19, RZ, c[0x0][0x1fc], R18 ;
 Instr 1526 @ 0x5f60 (24416) - IMAD.MOV R20, RZ, RZ, -R19 ;
 Instr 1527 @ 0x5f70 (24432) - IMAD R21, R20, c[0x0][0x1f4], R21 ;
 Instr 1528 @ 0x5f80 (24448) - IMAD R12, R21, c[0x0][0x2f0], R12 ;
 Instr 1529 @ 0x5f90 (24464) - @!P2 BRA 0x6870 ;
Basic block id 185 - num instructions 8
 Instr 1530 @ 0x5fa0 (24480) - MOV R18, RZ ;
 Instr 1531 @ 0x5fb0 (24496) - ISETP.NE.AND P2, PT, R22, 0x8, PT ;
 Instr 1532 @ 0x5fc0 (24512) - IMAD.HI.U32 R20, R19, c[0x0][0x204], R18 ;
 Instr 1533 @ 0x5fd0 (24528) - SHF.R.U32.HI R21, RZ, c[0x0][0x208], R20 ;
 Instr 1534 @ 0x5fe0 (24544) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1535 @ 0x5ff0 (24560) - IMAD R19, R18, c[0x0][0x200], R19 ;
 Instr 1536 @ 0x6000 (24576) - IMAD R12, R19, c[0x0][0x2f4], R12 ;
 Instr 1537 @ 0x6010 (24592) - @!P2 BRA 0x6870 ;
Basic block id 186 - num instructions 8
 Instr 1538 @ 0x6020 (24608) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1539 @ 0x6030 (24624) - ISETP.NE.AND P2, PT, R22, 0x9, PT ;
 Instr 1540 @ 0x6040 (24640) - IMAD.HI.U32 R18, R21, c[0x0][0x210], R20 ;
 Instr 1541 @ 0x6050 (24656) - SHF.R.U32.HI R19, RZ, c[0x0][0x214], R18 ;
 Instr 1542 @ 0x6060 (24672) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1543 @ 0x6070 (24688) - IMAD R21, R20, c[0x0][0x20c], R21 ;
 Instr 1544 @ 0x6080 (24704) - IMAD R12, R21, c[0x0][0x2f8], R12 ;
 Instr 1545 @ 0x6090 (24720) - @!P2 BRA 0x6870 ;
Basic block id 187 - num instructions 8
 Instr 1546 @ 0x60a0 (24736) - MOV R18, RZ ;
 Instr 1547 @ 0x60b0 (24752) - ISETP.NE.AND P2, PT, R22, 0xa, PT ;
 Instr 1548 @ 0x60c0 (24768) - IMAD.HI.U32 R20, R19, c[0x0][0x21c], R18 ;
 Instr 1549 @ 0x60d0 (24784) - SHF.R.U32.HI R21, RZ, c[0x0][0x220], R20 ;
 Instr 1550 @ 0x60e0 (24800) - IMAD.MOV R18, RZ, RZ, -R21 ;
 Instr 1551 @ 0x60f0 (24816) - IMAD R19, R18, c[0x0][0x218], R19 ;
 Instr 1552 @ 0x6100 (24832) - IMAD R12, R19, c[0x0][0x2fc], R12 ;
 Instr 1553 @ 0x6110 (24848) - @!P2 BRA 0x6870 ;
Basic block id 188 - num instructions 8
 Instr 1554 @ 0x6120 (24864) - MOV R20, RZ ;
 Instr 1555 @ 0x6130 (24880) - ISETP.NE.AND P2, PT, R22, 0xb, PT ;
 Instr 1556 @ 0x6140 (24896) - IMAD.HI.U32 R18, R21, c[0x0][0x228], R20 ;
 Instr 1557 @ 0x6150 (24912) - SHF.R.U32.HI R19, RZ, c[0x0][0x22c], R18 ;
 Instr 1558 @ 0x6160 (24928) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1559 @ 0x6170 (24944) - IMAD R21, R20, c[0x0][0x224], R21 ;
 Instr 1560 @ 0x6180 (24960) - IMAD R12, R21, c[0x0][0x300], R12 ;
 Instr 1561 @ 0x6190 (24976) - @!P2 BRA 0x6870 ;
Basic block id 189 - num instructions 8
 Instr 1562 @ 0x61a0 (24992) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1563 @ 0x61b0 (25008) - ISETP.NE.AND P2, PT, R22, 0xc, PT ;
 Instr 1564 @ 0x61c0 (25024) - IMAD.HI.U32 R20, R19, c[0x0][0x234], R18 ;
 Instr 1565 @ 0x61d0 (25040) - SHF.R.U32.HI R21, RZ, c[0x0][0x238], R20 ;
 Instr 1566 @ 0x61e0 (25056) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1567 @ 0x61f0 (25072) - IMAD R19, R18, c[0x0][0x230], R19 ;
 Instr 1568 @ 0x6200 (25088) - IMAD R12, R19, c[0x0][0x304], R12 ;
 Instr 1569 @ 0x6210 (25104) - @!P2 BRA 0x6870 ;
Basic block id 190 - num instructions 8
 Instr 1570 @ 0x6220 (25120) - MOV R20, RZ ;
 Instr 1571 @ 0x6230 (25136) - ISETP.NE.AND P2, PT, R22, 0xd, PT ;
 Instr 1572 @ 0x6240 (25152) - IMAD.HI.U32 R18, R21, c[0x0][0x240], R20 ;
 Instr 1573 @ 0x6250 (25168) - SHF.R.U32.HI R19, RZ, c[0x0][0x244], R18 ;
 Instr 1574 @ 0x6260 (25184) - IMAD.MOV R20, RZ, RZ, -R19 ;
 Instr 1575 @ 0x6270 (25200) - IMAD R21, R20, c[0x0][0x23c], R21 ;
 Instr 1576 @ 0x6280 (25216) - IMAD R12, R21, c[0x0][0x308], R12 ;
 Instr 1577 @ 0x6290 (25232) - @!P2 BRA 0x6870 ;
Basic block id 191 - num instructions 8
 Instr 1578 @ 0x62a0 (25248) - MOV R18, RZ ;
 Instr 1579 @ 0x62b0 (25264) - ISETP.NE.AND P2, PT, R22, 0xe, PT ;
 Instr 1580 @ 0x62c0 (25280) - IMAD.HI.U32 R20, R19, c[0x0][0x24c], R18 ;
 Instr 1581 @ 0x62d0 (25296) - SHF.R.U32.HI R21, RZ, c[0x0][0x250], R20 ;
 Instr 1582 @ 0x62e0 (25312) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1583 @ 0x62f0 (25328) - IMAD R19, R18, c[0x0][0x248], R19 ;
 Instr 1584 @ 0x6300 (25344) - IMAD R12, R19, c[0x0][0x30c], R12 ;
 Instr 1585 @ 0x6310 (25360) - @!P2 BRA 0x6870 ;
Basic block id 192 - num instructions 8
 Instr 1586 @ 0x6320 (25376) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1587 @ 0x6330 (25392) - ISETP.NE.AND P2, PT, R22, 0xf, PT ;
 Instr 1588 @ 0x6340 (25408) - IMAD.HI.U32 R18, R21, c[0x0][0x258], R20 ;
 Instr 1589 @ 0x6350 (25424) - SHF.R.U32.HI R19, RZ, c[0x0][0x25c], R18 ;
 Instr 1590 @ 0x6360 (25440) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1591 @ 0x6370 (25456) - IMAD R21, R20, c[0x0][0x254], R21 ;
 Instr 1592 @ 0x6380 (25472) - IMAD R12, R21, c[0x0][0x310], R12 ;
 Instr 1593 @ 0x6390 (25488) - @!P2 BRA 0x6870 ;
Basic block id 193 - num instructions 8
 Instr 1594 @ 0x63a0 (25504) - MOV R18, RZ ;
 Instr 1595 @ 0x63b0 (25520) - ISETP.NE.AND P2, PT, R22, 0x10, PT ;
 Instr 1596 @ 0x63c0 (25536) - IMAD.HI.U32 R20, R19, c[0x0][0x264], R18 ;
 Instr 1597 @ 0x63d0 (25552) - SHF.R.U32.HI R21, RZ, c[0x0][0x268], R20 ;
 Instr 1598 @ 0x63e0 (25568) - IMAD.MOV R18, RZ, RZ, -R21 ;
 Instr 1599 @ 0x63f0 (25584) - IMAD R19, R18, c[0x0][0x260], R19 ;
 Instr 1600 @ 0x6400 (25600) - IMAD R12, R19, c[0x0][0x314], R12 ;
 Instr 1601 @ 0x6410 (25616) - @!P2 BRA 0x6870 ;
Basic block id 194 - num instructions 8
 Instr 1602 @ 0x6420 (25632) - MOV R20, RZ ;
 Instr 1603 @ 0x6430 (25648) - ISETP.NE.AND P2, PT, R22, 0x11, PT ;
 Instr 1604 @ 0x6440 (25664) - IMAD.HI.U32 R18, R21, c[0x0][0x270], R20 ;
 Instr 1605 @ 0x6450 (25680) - SHF.R.U32.HI R19, RZ, c[0x0][0x274], R18 ;
 Instr 1606 @ 0x6460 (25696) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1607 @ 0x6470 (25712) - IMAD R21, R20, c[0x0][0x26c], R21 ;
 Instr 1608 @ 0x6480 (25728) - IMAD R12, R21, c[0x0][0x318], R12 ;
 Instr 1609 @ 0x6490 (25744) - @!P2 BRA 0x6870 ;
Basic block id 195 - num instructions 8
 Instr 1610 @ 0x64a0 (25760) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1611 @ 0x64b0 (25776) - ISETP.NE.AND P2, PT, R22, 0x12, PT ;
 Instr 1612 @ 0x64c0 (25792) - IMAD.HI.U32 R20, R19, c[0x0][0x27c], R18 ;
 Instr 1613 @ 0x64d0 (25808) - SHF.R.U32.HI R21, RZ, c[0x0][0x280], R20 ;
 Instr 1614 @ 0x64e0 (25824) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1615 @ 0x64f0 (25840) - IMAD R19, R18, c[0x0][0x278], R19 ;
 Instr 1616 @ 0x6500 (25856) - IMAD R12, R19, c[0x0][0x31c], R12 ;
 Instr 1617 @ 0x6510 (25872) - @!P2 BRA 0x6870 ;
Basic block id 196 - num instructions 8
 Instr 1618 @ 0x6520 (25888) - MOV R20, RZ ;
 Instr 1619 @ 0x6530 (25904) - ISETP.NE.AND P2, PT, R22, 0x13, PT ;
 Instr 1620 @ 0x6540 (25920) - IMAD.HI.U32 R18, R21, c[0x0][0x288], R20 ;
 Instr 1621 @ 0x6550 (25936) - SHF.R.U32.HI R19, RZ, c[0x0][0x28c], R18 ;
 Instr 1622 @ 0x6560 (25952) - IMAD.MOV R20, RZ, RZ, -R19 ;
 Instr 1623 @ 0x6570 (25968) - IMAD R21, R20, c[0x0][0x284], R21 ;
 Instr 1624 @ 0x6580 (25984) - IMAD R12, R21, c[0x0][0x320], R12 ;
 Instr 1625 @ 0x6590 (26000) - @!P2 BRA 0x6870 ;
Basic block id 197 - num instructions 8
 Instr 1626 @ 0x65a0 (26016) - MOV R18, RZ ;
 Instr 1627 @ 0x65b0 (26032) - ISETP.NE.AND P2, PT, R22, 0x14, PT ;
 Instr 1628 @ 0x65c0 (26048) - IMAD.HI.U32 R20, R19, c[0x0][0x294], R18 ;
 Instr 1629 @ 0x65d0 (26064) - SHF.R.U32.HI R21, RZ, c[0x0][0x298], R20 ;
 Instr 1630 @ 0x65e0 (26080) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1631 @ 0x65f0 (26096) - IMAD R19, R18, c[0x0][0x290], R19 ;
 Instr 1632 @ 0x6600 (26112) - IMAD R12, R19, c[0x0][0x324], R12 ;
 Instr 1633 @ 0x6610 (26128) - @!P2 BRA 0x6870 ;
Basic block id 198 - num instructions 8
 Instr 1634 @ 0x6620 (26144) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1635 @ 0x6630 (26160) - ISETP.NE.AND P2, PT, R22, 0x15, PT ;
 Instr 1636 @ 0x6640 (26176) - IMAD.HI.U32 R18, R21, c[0x0][0x2a0], R20 ;
 Instr 1637 @ 0x6650 (26192) - SHF.R.U32.HI R19, RZ, c[0x0][0x2a4], R18 ;
 Instr 1638 @ 0x6660 (26208) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1639 @ 0x6670 (26224) - IMAD R21, R20, c[0x0][0x29c], R21 ;
 Instr 1640 @ 0x6680 (26240) - IMAD R12, R21, c[0x0][0x328], R12 ;
 Instr 1641 @ 0x6690 (26256) - @!P2 BRA 0x6870 ;
Basic block id 199 - num instructions 8
 Instr 1642 @ 0x66a0 (26272) - MOV R18, RZ ;
 Instr 1643 @ 0x66b0 (26288) - ISETP.NE.AND P2, PT, R22, 0x16, PT ;
 Instr 1644 @ 0x66c0 (26304) - IMAD.HI.U32 R20, R19, c[0x0][0x2ac], R18 ;
 Instr 1645 @ 0x66d0 (26320) - SHF.R.U32.HI R21, RZ, c[0x0][0x2b0], R20 ;
 Instr 1646 @ 0x66e0 (26336) - IMAD.MOV R18, RZ, RZ, -R21 ;
 Instr 1647 @ 0x66f0 (26352) - IMAD R19, R18, c[0x0][0x2a8], R19 ;
 Instr 1648 @ 0x6700 (26368) - IMAD R12, R19, c[0x0][0x32c], R12 ;
 Instr 1649 @ 0x6710 (26384) - @!P2 BRA 0x6870 ;
Basic block id 200 - num instructions 8
 Instr 1650 @ 0x6720 (26400) - MOV R20, RZ ;
 Instr 1651 @ 0x6730 (26416) - ISETP.NE.AND P2, PT, R22, 0x17, PT ;
 Instr 1652 @ 0x6740 (26432) - IMAD.HI.U32 R18, R21, c[0x0][0x2b8], R20 ;
 Instr 1653 @ 0x6750 (26448) - SHF.R.U32.HI R19, RZ, c[0x0][0x2bc], R18 ;
 Instr 1654 @ 0x6760 (26464) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1655 @ 0x6770 (26480) - IMAD R21, R20, c[0x0][0x2b4], R21 ;
 Instr 1656 @ 0x6780 (26496) - IMAD R12, R21, c[0x0][0x330], R12 ;
 Instr 1657 @ 0x6790 (26512) - @!P2 BRA 0x6870 ;
Basic block id 201 - num instructions 13
 Instr 1658 @ 0x67a0 (26528) - ISETP.NE.AND P2, PT, R22, 0x18, PT ;
 Instr 1659 @ 0x67b0 (26544) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1660 @ 0x67c0 (26560) - IMAD.HI.U32 R20, R19, c[0x0][0x2c4], R18 ;
 Instr 1661 @ 0x67d0 (26576) - SHF.R.U32.HI R21, RZ, c[0x0][0x2c8], R20 ;
 Instr 1662 @ 0x67e0 (26592) - @P2 MOV R20, RZ ;
 Instr 1663 @ 0x67f0 (26608) - IADD3 R23, -R21, RZ, RZ ;
 Instr 1664 @ 0x6800 (26624) - @P2 IMAD.HI.U32 R18, R21, c[0x0][0x2d0], R20 ;
 Instr 1665 @ 0x6810 (26640) - IMAD R19, R23, c[0x0][0x2c0], R19 ;
 Instr 1666 @ 0x6820 (26656) - @P2 SHF.R.U32.HI R18, RZ, c[0x0][0x2d4], R18 ;
 Instr 1667 @ 0x6830 (26672) - IMAD R12, R19, c[0x0][0x334], R12 ;
 Instr 1668 @ 0x6840 (26688) - @P2 IMAD.MOV R20, RZ, RZ, -R18 ;
 Instr 1669 @ 0x6850 (26704) - @P2 IMAD R21, R20, c[0x0][0x2cc], R21 ;
 Instr 1670 @ 0x6860 (26720) - @P2 IMAD R12, R21, c[0x0][0x338], R12 ;
Basic block id 202 - num instructions 7
 Instr 1671 @ 0x6870 (26736) - LOP3.LUT R19, R12, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 1672 @ 0x6880 (26752) - IADD3 R18, P2, R6, R19, RZ ;
 Instr 1673 @ 0x6890 (26768) - IADD3.X R19, RZ, R7, RZ, P2, !PT ;
 Instr 1674 @ 0x68a0 (26784) - LDG.E.U16.SYS R12, [R18] ;
 Instr 1675 @ 0x68b0 (26800) - IADD3 R17, R17, c[0x0][0x174], RZ ;
 Instr 1676 @ 0x68c0 (26816) - ISETP.GE.U32.AND P2, PT, R17, c[0x0][0x16c], PT ;
 Instr 1677 @ 0x68d0 (26832) - @P2 BRA 0x8290 ;
Basic block id 203 - num instructions 2
 Instr 1678 @ 0x68e0 (26848) - MOV R15, RZ ;
 Instr 1679 @ 0x68f0 (26864) - @!P1 BRA 0x7560 ;
Basic block id 204 - num instructions 9
 Instr 1680 @ 0x6900 (26880) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1681 @ 0x6910 (26896) - MOV R22, c[0x0][0x1a8] ;
 Instr 1682 @ 0x6920 (26912) - IMAD.HI.U32 R18, R17, c[0x0][0x1b0], R16 ;
 Instr 1683 @ 0x6930 (26928) - ISETP.NE.AND P2, PT, R22, 0x1, PT ;
 Instr 1684 @ 0x6940 (26944) - SHF.R.U32.HI R19, RZ, c[0x0][0x1b4], R18 ;
 Instr 1685 @ 0x6950 (26960) - IADD3 R15, -R19, RZ, RZ ;
 Instr 1686 @ 0x6960 (26976) - IMAD R15, R15, c[0x0][0x1ac], R17 ;
 Instr 1687 @ 0x6970 (26992) - IMAD R15, R15, c[0x0][0x2d8], RZ ;
 Instr 1688 @ 0x6980 (27008) - @!P2 BRA 0x7560 ;
Basic block id 205 - num instructions 8
 Instr 1689 @ 0x6990 (27024) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1690 @ 0x69a0 (27040) - ISETP.NE.AND P2, PT, R22, 0x2, PT ;
 Instr 1691 @ 0x69b0 (27056) - IMAD.HI.U32 R20, R19, c[0x0][0x1bc], R18 ;
 Instr 1692 @ 0x69c0 (27072) - SHF.R.U32.HI R21, RZ, c[0x0][0x1c0], R20 ;
 Instr 1693 @ 0x69d0 (27088) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1694 @ 0x69e0 (27104) - IMAD R18, R18, c[0x0][0x1b8], R19 ;
 Instr 1695 @ 0x69f0 (27120) - IMAD R15, R18, c[0x0][0x2dc], R15 ;
 Instr 1696 @ 0x6a00 (27136) - @!P2 BRA 0x7560 ;
Basic block id 206 - num instructions 8
 Instr 1697 @ 0x6a10 (27152) - MOV R20, RZ ;
 Instr 1698 @ 0x6a20 (27168) - ISETP.NE.AND P2, PT, R22, 0x3, PT ;
 Instr 1699 @ 0x6a30 (27184) - IMAD.HI.U32 R18, R21, c[0x0][0x1c8], R20 ;
 Instr 1700 @ 0x6a40 (27200) - SHF.R.U32.HI R19, RZ, c[0x0][0x1cc], R18 ;
 Instr 1701 @ 0x6a50 (27216) - IMAD.MOV R20, RZ, RZ, -R19 ;
 Instr 1702 @ 0x6a60 (27232) - IMAD R20, R20, c[0x0][0x1c4], R21 ;
 Instr 1703 @ 0x6a70 (27248) - IMAD R15, R20, c[0x0][0x2e0], R15 ;
 Instr 1704 @ 0x6a80 (27264) - @!P2 BRA 0x7560 ;
Basic block id 207 - num instructions 8
 Instr 1705 @ 0x6a90 (27280) - MOV R18, RZ ;
 Instr 1706 @ 0x6aa0 (27296) - ISETP.NE.AND P2, PT, R22, 0x4, PT ;
 Instr 1707 @ 0x6ab0 (27312) - IMAD.HI.U32 R20, R19, c[0x0][0x1d4], R18 ;
 Instr 1708 @ 0x6ac0 (27328) - SHF.R.U32.HI R21, RZ, c[0x0][0x1d8], R20 ;
 Instr 1709 @ 0x6ad0 (27344) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1710 @ 0x6ae0 (27360) - IMAD R18, R18, c[0x0][0x1d0], R19 ;
 Instr 1711 @ 0x6af0 (27376) - IMAD R15, R18, c[0x0][0x2e4], R15 ;
 Instr 1712 @ 0x6b00 (27392) - @!P2 BRA 0x7560 ;
Basic block id 208 - num instructions 8
 Instr 1713 @ 0x6b10 (27408) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1714 @ 0x6b20 (27424) - ISETP.NE.AND P2, PT, R22, 0x5, PT ;
 Instr 1715 @ 0x6b30 (27440) - IMAD.HI.U32 R18, R21, c[0x0][0x1e0], R20 ;
 Instr 1716 @ 0x6b40 (27456) - SHF.R.U32.HI R19, RZ, c[0x0][0x1e4], R18 ;
 Instr 1717 @ 0x6b50 (27472) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1718 @ 0x6b60 (27488) - IMAD R20, R20, c[0x0][0x1dc], R21 ;
 Instr 1719 @ 0x6b70 (27504) - IMAD R15, R20, c[0x0][0x2e8], R15 ;
 Instr 1720 @ 0x6b80 (27520) - @!P2 BRA 0x7560 ;
Basic block id 209 - num instructions 8
 Instr 1721 @ 0x6b90 (27536) - MOV R18, RZ ;
 Instr 1722 @ 0x6ba0 (27552) - ISETP.NE.AND P2, PT, R22, 0x6, PT ;
 Instr 1723 @ 0x6bb0 (27568) - IMAD.HI.U32 R20, R19, c[0x0][0x1ec], R18 ;
 Instr 1724 @ 0x6bc0 (27584) - SHF.R.U32.HI R21, RZ, c[0x0][0x1f0], R20 ;
 Instr 1725 @ 0x6bd0 (27600) - IMAD.MOV R18, RZ, RZ, -R21 ;
 Instr 1726 @ 0x6be0 (27616) - IMAD R18, R18, c[0x0][0x1e8], R19 ;
 Instr 1727 @ 0x6bf0 (27632) - IMAD R15, R18, c[0x0][0x2ec], R15 ;
 Instr 1728 @ 0x6c00 (27648) - @!P2 BRA 0x7560 ;
Basic block id 210 - num instructions 8
 Instr 1729 @ 0x6c10 (27664) - MOV R20, RZ ;
 Instr 1730 @ 0x6c20 (27680) - ISETP.NE.AND P2, PT, R22, 0x7, PT ;
 Instr 1731 @ 0x6c30 (27696) - IMAD.HI.U32 R18, R21, c[0x0][0x1f8], R20 ;
 Instr 1732 @ 0x6c40 (27712) - SHF.R.U32.HI R19, RZ, c[0x0][0x1fc], R18 ;
 Instr 1733 @ 0x6c50 (27728) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1734 @ 0x6c60 (27744) - IMAD R20, R20, c[0x0][0x1f4], R21 ;
 Instr 1735 @ 0x6c70 (27760) - IMAD R15, R20, c[0x0][0x2f0], R15 ;
 Instr 1736 @ 0x6c80 (27776) - @!P2 BRA 0x7560 ;
Basic block id 211 - num instructions 8
 Instr 1737 @ 0x6c90 (27792) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1738 @ 0x6ca0 (27808) - ISETP.NE.AND P2, PT, R22, 0x8, PT ;
 Instr 1739 @ 0x6cb0 (27824) - IMAD.HI.U32 R20, R19, c[0x0][0x204], R18 ;
 Instr 1740 @ 0x6cc0 (27840) - SHF.R.U32.HI R21, RZ, c[0x0][0x208], R20 ;
 Instr 1741 @ 0x6cd0 (27856) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1742 @ 0x6ce0 (27872) - IMAD R18, R18, c[0x0][0x200], R19 ;
 Instr 1743 @ 0x6cf0 (27888) - IMAD R15, R18, c[0x0][0x2f4], R15 ;
 Instr 1744 @ 0x6d00 (27904) - @!P2 BRA 0x7560 ;
Basic block id 212 - num instructions 8
 Instr 1745 @ 0x6d10 (27920) - MOV R20, RZ ;
 Instr 1746 @ 0x6d20 (27936) - ISETP.NE.AND P2, PT, R22, 0x9, PT ;
 Instr 1747 @ 0x6d30 (27952) - IMAD.HI.U32 R18, R21, c[0x0][0x210], R20 ;
 Instr 1748 @ 0x6d40 (27968) - SHF.R.U32.HI R19, RZ, c[0x0][0x214], R18 ;
 Instr 1749 @ 0x6d50 (27984) - IMAD.MOV R20, RZ, RZ, -R19 ;
 Instr 1750 @ 0x6d60 (28000) - IMAD R20, R20, c[0x0][0x20c], R21 ;
 Instr 1751 @ 0x6d70 (28016) - IMAD R15, R20, c[0x0][0x2f8], R15 ;
 Instr 1752 @ 0x6d80 (28032) - @!P2 BRA 0x7560 ;
Basic block id 213 - num instructions 8
 Instr 1753 @ 0x6d90 (28048) - MOV R18, RZ ;
 Instr 1754 @ 0x6da0 (28064) - ISETP.NE.AND P2, PT, R22, 0xa, PT ;
 Instr 1755 @ 0x6db0 (28080) - IMAD.HI.U32 R20, R19, c[0x0][0x21c], R18 ;
 Instr 1756 @ 0x6dc0 (28096) - SHF.R.U32.HI R21, RZ, c[0x0][0x220], R20 ;
 Instr 1757 @ 0x6dd0 (28112) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1758 @ 0x6de0 (28128) - IMAD R18, R18, c[0x0][0x218], R19 ;
 Instr 1759 @ 0x6df0 (28144) - IMAD R15, R18, c[0x0][0x2fc], R15 ;
 Instr 1760 @ 0x6e00 (28160) - @!P2 BRA 0x7560 ;
Basic block id 214 - num instructions 8
 Instr 1761 @ 0x6e10 (28176) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1762 @ 0x6e20 (28192) - ISETP.NE.AND P2, PT, R22, 0xb, PT ;
 Instr 1763 @ 0x6e30 (28208) - IMAD.HI.U32 R18, R21, c[0x0][0x228], R20 ;
 Instr 1764 @ 0x6e40 (28224) - SHF.R.U32.HI R19, RZ, c[0x0][0x22c], R18 ;
 Instr 1765 @ 0x6e50 (28240) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1766 @ 0x6e60 (28256) - IMAD R20, R20, c[0x0][0x224], R21 ;
 Instr 1767 @ 0x6e70 (28272) - IMAD R15, R20, c[0x0][0x300], R15 ;
 Instr 1768 @ 0x6e80 (28288) - @!P2 BRA 0x7560 ;
Basic block id 215 - num instructions 8
 Instr 1769 @ 0x6e90 (28304) - MOV R18, RZ ;
 Instr 1770 @ 0x6ea0 (28320) - ISETP.NE.AND P2, PT, R22, 0xc, PT ;
 Instr 1771 @ 0x6eb0 (28336) - IMAD.HI.U32 R20, R19, c[0x0][0x234], R18 ;
 Instr 1772 @ 0x6ec0 (28352) - SHF.R.U32.HI R21, RZ, c[0x0][0x238], R20 ;
 Instr 1773 @ 0x6ed0 (28368) - IMAD.MOV R18, RZ, RZ, -R21 ;
 Instr 1774 @ 0x6ee0 (28384) - IMAD R18, R18, c[0x0][0x230], R19 ;
 Instr 1775 @ 0x6ef0 (28400) - IMAD R15, R18, c[0x0][0x304], R15 ;
 Instr 1776 @ 0x6f00 (28416) - @!P2 BRA 0x7560 ;
Basic block id 216 - num instructions 8
 Instr 1777 @ 0x6f10 (28432) - MOV R20, RZ ;
 Instr 1778 @ 0x6f20 (28448) - ISETP.NE.AND P2, PT, R22, 0xd, PT ;
 Instr 1779 @ 0x6f30 (28464) - IMAD.HI.U32 R18, R21, c[0x0][0x240], R20 ;
 Instr 1780 @ 0x6f40 (28480) - SHF.R.U32.HI R19, RZ, c[0x0][0x244], R18 ;
 Instr 1781 @ 0x6f50 (28496) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1782 @ 0x6f60 (28512) - IMAD R20, R20, c[0x0][0x23c], R21 ;
 Instr 1783 @ 0x6f70 (28528) - IMAD R15, R20, c[0x0][0x308], R15 ;
 Instr 1784 @ 0x6f80 (28544) - @!P2 BRA 0x7560 ;
Basic block id 217 - num instructions 8
 Instr 1785 @ 0x6f90 (28560) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1786 @ 0x6fa0 (28576) - ISETP.NE.AND P2, PT, R22, 0xe, PT ;
 Instr 1787 @ 0x6fb0 (28592) - IMAD.HI.U32 R20, R19, c[0x0][0x24c], R18 ;
 Instr 1788 @ 0x6fc0 (28608) - SHF.R.U32.HI R21, RZ, c[0x0][0x250], R20 ;
 Instr 1789 @ 0x6fd0 (28624) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1790 @ 0x6fe0 (28640) - IMAD R18, R18, c[0x0][0x248], R19 ;
 Instr 1791 @ 0x6ff0 (28656) - IMAD R15, R18, c[0x0][0x30c], R15 ;
 Instr 1792 @ 0x7000 (28672) - @!P2 BRA 0x7560 ;
Basic block id 218 - num instructions 8
 Instr 1793 @ 0x7010 (28688) - MOV R20, RZ ;
 Instr 1794 @ 0x7020 (28704) - ISETP.NE.AND P2, PT, R22, 0xf, PT ;
 Instr 1795 @ 0x7030 (28720) - IMAD.HI.U32 R18, R21, c[0x0][0x258], R20 ;
 Instr 1796 @ 0x7040 (28736) - SHF.R.U32.HI R19, RZ, c[0x0][0x25c], R18 ;
 Instr 1797 @ 0x7050 (28752) - IMAD.MOV R20, RZ, RZ, -R19 ;
 Instr 1798 @ 0x7060 (28768) - IMAD R20, R20, c[0x0][0x254], R21 ;
 Instr 1799 @ 0x7070 (28784) - IMAD R15, R20, c[0x0][0x310], R15 ;
 Instr 1800 @ 0x7080 (28800) - @!P2 BRA 0x7560 ;
Basic block id 219 - num instructions 8
 Instr 1801 @ 0x7090 (28816) - MOV R18, RZ ;
 Instr 1802 @ 0x70a0 (28832) - ISETP.NE.AND P2, PT, R22, 0x10, PT ;
 Instr 1803 @ 0x70b0 (28848) - IMAD.HI.U32 R20, R19, c[0x0][0x264], R18 ;
 Instr 1804 @ 0x70c0 (28864) - SHF.R.U32.HI R21, RZ, c[0x0][0x268], R20 ;
 Instr 1805 @ 0x70d0 (28880) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1806 @ 0x70e0 (28896) - IMAD R18, R18, c[0x0][0x260], R19 ;
 Instr 1807 @ 0x70f0 (28912) - IMAD R15, R18, c[0x0][0x314], R15 ;
 Instr 1808 @ 0x7100 (28928) - @!P2 BRA 0x7560 ;
Basic block id 220 - num instructions 8
 Instr 1809 @ 0x7110 (28944) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1810 @ 0x7120 (28960) - ISETP.NE.AND P2, PT, R22, 0x11, PT ;
 Instr 1811 @ 0x7130 (28976) - IMAD.HI.U32 R18, R21, c[0x0][0x270], R20 ;
 Instr 1812 @ 0x7140 (28992) - SHF.R.U32.HI R19, RZ, c[0x0][0x274], R18 ;
 Instr 1813 @ 0x7150 (29008) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1814 @ 0x7160 (29024) - IMAD R20, R20, c[0x0][0x26c], R21 ;
 Instr 1815 @ 0x7170 (29040) - IMAD R15, R20, c[0x0][0x318], R15 ;
 Instr 1816 @ 0x7180 (29056) - @!P2 BRA 0x7560 ;
Basic block id 221 - num instructions 8
 Instr 1817 @ 0x7190 (29072) - MOV R18, RZ ;
 Instr 1818 @ 0x71a0 (29088) - ISETP.NE.AND P2, PT, R22, 0x12, PT ;
 Instr 1819 @ 0x71b0 (29104) - IMAD.HI.U32 R20, R19, c[0x0][0x27c], R18 ;
 Instr 1820 @ 0x71c0 (29120) - SHF.R.U32.HI R21, RZ, c[0x0][0x280], R20 ;
 Instr 1821 @ 0x71d0 (29136) - IMAD.MOV R18, RZ, RZ, -R21 ;
 Instr 1822 @ 0x71e0 (29152) - IMAD R18, R18, c[0x0][0x278], R19 ;
 Instr 1823 @ 0x71f0 (29168) - IMAD R15, R18, c[0x0][0x31c], R15 ;
 Instr 1824 @ 0x7200 (29184) - @!P2 BRA 0x7560 ;
Basic block id 222 - num instructions 8
 Instr 1825 @ 0x7210 (29200) - MOV R20, RZ ;
 Instr 1826 @ 0x7220 (29216) - ISETP.NE.AND P2, PT, R22, 0x13, PT ;
 Instr 1827 @ 0x7230 (29232) - IMAD.HI.U32 R18, R21, c[0x0][0x288], R20 ;
 Instr 1828 @ 0x7240 (29248) - SHF.R.U32.HI R19, RZ, c[0x0][0x28c], R18 ;
 Instr 1829 @ 0x7250 (29264) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1830 @ 0x7260 (29280) - IMAD R20, R20, c[0x0][0x284], R21 ;
 Instr 1831 @ 0x7270 (29296) - IMAD R15, R20, c[0x0][0x320], R15 ;
 Instr 1832 @ 0x7280 (29312) - @!P2 BRA 0x7560 ;
Basic block id 223 - num instructions 8
 Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1834 @ 0x72a0 (29344) - ISETP.NE.AND P2, PT, R22, 0x14, PT ;
 Instr 1835 @ 0x72b0 (29360) - IMAD.HI.U32 R20, R19, c[0x0][0x294], R18 ;
 Instr 1836 @ 0x72c0 (29376) - SHF.R.U32.HI R21, RZ, c[0x0][0x298], R20 ;
 Instr 1837 @ 0x72d0 (29392) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1838 @ 0x72e0 (29408) - IMAD R18, R18, c[0x0][0x290], R19 ;
 Instr 1839 @ 0x72f0 (29424) - IMAD R15, R18, c[0x0][0x324], R15 ;
 Instr 1840 @ 0x7300 (29440) - @!P2 BRA 0x7560 ;
Basic block id 224 - num instructions 8
 Instr 1841 @ 0x7310 (29456) - MOV R20, RZ ;
 Instr 1842 @ 0x7320 (29472) - ISETP.NE.AND P2, PT, R22, 0x15, PT ;
 Instr 1843 @ 0x7330 (29488) - IMAD.HI.U32 R18, R21, c[0x0][0x2a0], R20 ;
 Instr 1844 @ 0x7340 (29504) - SHF.R.U32.HI R19, RZ, c[0x0][0x2a4], R18 ;
 Instr 1845 @ 0x7350 (29520) - IMAD.MOV R20, RZ, RZ, -R19 ;
 Instr 1846 @ 0x7360 (29536) - IMAD R20, R20, c[0x0][0x29c], R21 ;
 Instr 1847 @ 0x7370 (29552) - IMAD R15, R20, c[0x0][0x328], R15 ;
 Instr 1848 @ 0x7380 (29568) - @!P2 BRA 0x7560 ;
Basic block id 225 - num instructions 8
 Instr 1849 @ 0x7390 (29584) - MOV R18, RZ ;
 Instr 1850 @ 0x73a0 (29600) - ISETP.NE.AND P2, PT, R22, 0x16, PT ;
 Instr 1851 @ 0x73b0 (29616) - IMAD.HI.U32 R20, R19, c[0x0][0x2ac], R18 ;
 Instr 1852 @ 0x73c0 (29632) - SHF.R.U32.HI R21, RZ, c[0x0][0x2b0], R20 ;
 Instr 1853 @ 0x73d0 (29648) - IADD3 R18, -R21, RZ, RZ ;
 Instr 1854 @ 0x73e0 (29664) - IMAD R18, R18, c[0x0][0x2a8], R19 ;
 Instr 1855 @ 0x73f0 (29680) - IMAD R15, R18, c[0x0][0x32c], R15 ;
 Instr 1856 @ 0x7400 (29696) - @!P2 BRA 0x7560 ;
Basic block id 226 - num instructions 8
 Instr 1857 @ 0x7410 (29712) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1858 @ 0x7420 (29728) - ISETP.NE.AND P2, PT, R22, 0x17, PT ;
 Instr 1859 @ 0x7430 (29744) - IMAD.HI.U32 R18, R21, c[0x0][0x2b8], R20 ;
 Instr 1860 @ 0x7440 (29760) - SHF.R.U32.HI R19, RZ, c[0x0][0x2bc], R18 ;
 Instr 1861 @ 0x7450 (29776) - IADD3 R20, -R19, RZ, RZ ;
 Instr 1862 @ 0x7460 (29792) - IMAD R20, R20, c[0x0][0x2b4], R21 ;
 Instr 1863 @ 0x7470 (29808) - IMAD R15, R20, c[0x0][0x330], R15 ;
 Instr 1864 @ 0x7480 (29824) - @!P2 BRA 0x7560 ;
Basic block id 227 - num instructions 13
 Instr 1865 @ 0x7490 (29840) - ISETP.NE.AND P2, PT, R22, 0x18, PT ;
 Instr 1866 @ 0x74a0 (29856) - MOV R18, RZ ;
 Instr 1867 @ 0x74b0 (29872) - IMAD.HI.U32 R20, R19, c[0x0][0x2c4], R18 ;
 Instr 1868 @ 0x74c0 (29888) - SHF.R.U32.HI R21, RZ, c[0x0][0x2c8], R20 ;
 Instr 1869 @ 0x74d0 (29904) - @P2 IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 1870 @ 0x74e0 (29920) - IADD3 R23, -R21.reuse, RZ, RZ ;
 Instr 1871 @ 0x74f0 (29936) - @P2 IMAD.HI.U32 R18, R21, c[0x0][0x2d0], R20 ;
 Instr 1872 @ 0x7500 (29952) - @P2 SHF.R.U32.HI R20, RZ, c[0x0][0x2d4], R18 ;
 Instr 1873 @ 0x7510 (29968) - IMAD R18, R23, c[0x0][0x2c0], R19 ;
 Instr 1874 @ 0x7520 (29984) - @P2 IADD3 R20, -R20, RZ, RZ ;
 Instr 1875 @ 0x7530 (30000) - IMAD R15, R18, c[0x0][0x334], R15 ;
 Instr 1876 @ 0x7540 (30016) - @P2 IMAD R20, R20, c[0x0][0x2cc], R21 ;
 Instr 1877 @ 0x7550 (30032) - @P2 IMAD R15, R20, c[0x0][0x338], R15 ;
Basic block id 228 - num instructions 7
 Instr 1878 @ 0x7560 (30048) - LOP3.LUT R15, R15, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 1879 @ 0x7570 (30064) - IADD3 R18, P2, R6, R15, RZ ;
 Instr 1880 @ 0x7580 (30080) - IMAD.X R19, RZ, RZ, R7, P2 ;
 Instr 1881 @ 0x7590 (30096) - LDG.E.U16.SYS R15, [R18] ;
 Instr 1882 @ 0x75a0 (30112) - IADD3 R17, R17, c[0x0][0x174], RZ ;
 Instr 1883 @ 0x75b0 (30128) - ISETP.GE.U32.AND P2, PT, R17, c[0x0][0x16c], PT ;
 Instr 1884 @ 0x75c0 (30144) - @P2 BRA 0x8290 ;
Basic block id 229 - num instructions 2
 Instr 1885 @ 0x75d0 (30160) - MOV R14, RZ ;
 Instr 1886 @ 0x75e0 (30176) - @!P1 BRA 0x8250 ;
Basic block id 230 - num instructions 9
 Instr 1887 @ 0x75f0 (30192) - MOV R16, RZ ;
 Instr 1888 @ 0x7600 (30208) - IMAD.MOV.U32 R20, RZ, RZ, c[0x0][0x1a8] ;
 Instr 1889 @ 0x7610 (30224) - IMAD.HI.U32 R18, R17, c[0x0][0x1b0], R16 ;
 Instr 1890 @ 0x7620 (30240) - ISETP.NE.AND P1, PT, R20, 0x1, PT ;
 Instr 1891 @ 0x7630 (30256) - SHF.R.U32.HI R19, RZ, c[0x0][0x1b4], R18 ;
 Instr 1892 @ 0x7640 (30272) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1893 @ 0x7650 (30288) - IMAD R14, R16, c[0x0][0x1ac], R17 ;
 Instr 1894 @ 0x7660 (30304) - IMAD R14, R14, c[0x0][0x2d8], RZ ;
 Instr 1895 @ 0x7670 (30320) - @!P1 BRA 0x8250 ;
Basic block id 231 - num instructions 8
 Instr 1896 @ 0x7680 (30336) - MOV R18, RZ ;
 Instr 1897 @ 0x7690 (30352) - ISETP.NE.AND P1, PT, R20, 0x2, PT ;
 Instr 1898 @ 0x76a0 (30368) - IMAD.HI.U32 R16, R19, c[0x0][0x1bc], R18 ;
 Instr 1899 @ 0x76b0 (30384) - SHF.R.U32.HI R17, RZ, c[0x0][0x1c0], R16 ;
 Instr 1900 @ 0x76c0 (30400) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 1901 @ 0x76d0 (30416) - IMAD R19, R18, c[0x0][0x1b8], R19 ;
 Instr 1902 @ 0x76e0 (30432) - IMAD R14, R19, c[0x0][0x2dc], R14 ;
 Instr 1903 @ 0x76f0 (30448) - @!P1 BRA 0x8250 ;
Basic block id 232 - num instructions 8
 Instr 1904 @ 0x7700 (30464) - MOV R16, RZ ;
 Instr 1905 @ 0x7710 (30480) - ISETP.NE.AND P1, PT, R20, 0x3, PT ;
 Instr 1906 @ 0x7720 (30496) - IMAD.HI.U32 R18, R17, c[0x0][0x1c8], R16 ;
 Instr 1907 @ 0x7730 (30512) - SHF.R.U32.HI R19, RZ, c[0x0][0x1cc], R18 ;
 Instr 1908 @ 0x7740 (30528) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1909 @ 0x7750 (30544) - IMAD R17, R16, c[0x0][0x1c4], R17 ;
 Instr 1910 @ 0x7760 (30560) - IMAD R14, R17, c[0x0][0x2e0], R14 ;
 Instr 1911 @ 0x7770 (30576) - @!P1 BRA 0x8250 ;
Basic block id 233 - num instructions 8
 Instr 1912 @ 0x7780 (30592) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1913 @ 0x7790 (30608) - ISETP.NE.AND P1, PT, R20, 0x4, PT ;
 Instr 1914 @ 0x77a0 (30624) - IMAD.HI.U32 R16, R19, c[0x0][0x1d4], R18 ;
 Instr 1915 @ 0x77b0 (30640) - SHF.R.U32.HI R17, RZ, c[0x0][0x1d8], R16 ;
 Instr 1916 @ 0x77c0 (30656) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1917 @ 0x77d0 (30672) - IMAD R19, R18, c[0x0][0x1d0], R19 ;
 Instr 1918 @ 0x77e0 (30688) - IMAD R14, R19, c[0x0][0x2e4], R14 ;
 Instr 1919 @ 0x77f0 (30704) - @!P1 BRA 0x8250 ;
Basic block id 234 - num instructions 8
 Instr 1920 @ 0x7800 (30720) - MOV R16, RZ ;
 Instr 1921 @ 0x7810 (30736) - ISETP.NE.AND P1, PT, R20, 0x5, PT ;
 Instr 1922 @ 0x7820 (30752) - IMAD.HI.U32 R18, R17, c[0x0][0x1e0], R16 ;
 Instr 1923 @ 0x7830 (30768) - SHF.R.U32.HI R19, RZ, c[0x0][0x1e4], R18 ;
 Instr 1924 @ 0x7840 (30784) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 1925 @ 0x7850 (30800) - IMAD R17, R16, c[0x0][0x1dc], R17 ;
 Instr 1926 @ 0x7860 (30816) - IMAD R14, R17, c[0x0][0x2e8], R14 ;
 Instr 1927 @ 0x7870 (30832) - @!P1 BRA 0x8250 ;
Basic block id 235 - num instructions 8
 Instr 1928 @ 0x7880 (30848) - MOV R18, RZ ;
 Instr 1929 @ 0x7890 (30864) - ISETP.NE.AND P1, PT, R20, 0x6, PT ;
 Instr 1930 @ 0x78a0 (30880) - IMAD.HI.U32 R16, R19, c[0x0][0x1ec], R18 ;
 Instr 1931 @ 0x78b0 (30896) - SHF.R.U32.HI R17, RZ, c[0x0][0x1f0], R16 ;
 Instr 1932 @ 0x78c0 (30912) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1933 @ 0x78d0 (30928) - IMAD R19, R18, c[0x0][0x1e8], R19 ;
 Instr 1934 @ 0x78e0 (30944) - IMAD R14, R19, c[0x0][0x2ec], R14 ;
 Instr 1935 @ 0x78f0 (30960) - @!P1 BRA 0x8250 ;
Basic block id 236 - num instructions 8
 Instr 1936 @ 0x7900 (30976) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1937 @ 0x7910 (30992) - ISETP.NE.AND P1, PT, R20, 0x7, PT ;
 Instr 1938 @ 0x7920 (31008) - IMAD.HI.U32 R18, R17, c[0x0][0x1f8], R16 ;
 Instr 1939 @ 0x7930 (31024) - SHF.R.U32.HI R19, RZ, c[0x0][0x1fc], R18 ;
 Instr 1940 @ 0x7940 (31040) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1941 @ 0x7950 (31056) - IMAD R17, R16, c[0x0][0x1f4], R17 ;
 Instr 1942 @ 0x7960 (31072) - IMAD R14, R17, c[0x0][0x2f0], R14 ;
 Instr 1943 @ 0x7970 (31088) - @!P1 BRA 0x8250 ;
Basic block id 237 - num instructions 8
 Instr 1944 @ 0x7980 (31104) - MOV R18, RZ ;
 Instr 1945 @ 0x7990 (31120) - ISETP.NE.AND P1, PT, R20, 0x8, PT ;
 Instr 1946 @ 0x79a0 (31136) - IMAD.HI.U32 R16, R19, c[0x0][0x204], R18 ;
 Instr 1947 @ 0x79b0 (31152) - SHF.R.U32.HI R17, RZ, c[0x0][0x208], R16 ;
 Instr 1948 @ 0x79c0 (31168) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 1949 @ 0x79d0 (31184) - IMAD R19, R18, c[0x0][0x200], R19 ;
 Instr 1950 @ 0x79e0 (31200) - IMAD R14, R19, c[0x0][0x2f4], R14 ;
 Instr 1951 @ 0x79f0 (31216) - @!P1 BRA 0x8250 ;
Basic block id 238 - num instructions 8
 Instr 1952 @ 0x7a00 (31232) - MOV R16, RZ ;
 Instr 1953 @ 0x7a10 (31248) - ISETP.NE.AND P1, PT, R20, 0x9, PT ;
 Instr 1954 @ 0x7a20 (31264) - IMAD.HI.U32 R18, R17, c[0x0][0x210], R16 ;
 Instr 1955 @ 0x7a30 (31280) - SHF.R.U32.HI R19, RZ, c[0x0][0x214], R18 ;
 Instr 1956 @ 0x7a40 (31296) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1957 @ 0x7a50 (31312) - IMAD R17, R16, c[0x0][0x20c], R17 ;
 Instr 1958 @ 0x7a60 (31328) - IMAD R14, R17, c[0x0][0x2f8], R14 ;
 Instr 1959 @ 0x7a70 (31344) - @!P1 BRA 0x8250 ;
Basic block id 239 - num instructions 8
 Instr 1960 @ 0x7a80 (31360) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1961 @ 0x7a90 (31376) - ISETP.NE.AND P1, PT, R20, 0xa, PT ;
 Instr 1962 @ 0x7aa0 (31392) - IMAD.HI.U32 R16, R19, c[0x0][0x21c], R18 ;
 Instr 1963 @ 0x7ab0 (31408) - SHF.R.U32.HI R17, RZ, c[0x0][0x220], R16 ;
 Instr 1964 @ 0x7ac0 (31424) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1965 @ 0x7ad0 (31440) - IMAD R19, R18, c[0x0][0x218], R19 ;
 Instr 1966 @ 0x7ae0 (31456) - IMAD R14, R19, c[0x0][0x2fc], R14 ;
 Instr 1967 @ 0x7af0 (31472) - @!P1 BRA 0x8250 ;
Basic block id 240 - num instructions 8
 Instr 1968 @ 0x7b00 (31488) - MOV R16, RZ ;
 Instr 1969 @ 0x7b10 (31504) - ISETP.NE.AND P1, PT, R20, 0xb, PT ;
 Instr 1970 @ 0x7b20 (31520) - IMAD.HI.U32 R18, R17, c[0x0][0x228], R16 ;
 Instr 1971 @ 0x7b30 (31536) - SHF.R.U32.HI R19, RZ, c[0x0][0x22c], R18 ;
 Instr 1972 @ 0x7b40 (31552) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 1973 @ 0x7b50 (31568) - IMAD R17, R16, c[0x0][0x224], R17 ;
 Instr 1974 @ 0x7b60 (31584) - IMAD R14, R17, c[0x0][0x300], R14 ;
 Instr 1975 @ 0x7b70 (31600) - @!P1 BRA 0x8250 ;
Basic block id 241 - num instructions 8
 Instr 1976 @ 0x7b80 (31616) - MOV R18, RZ ;
 Instr 1977 @ 0x7b90 (31632) - ISETP.NE.AND P1, PT, R20, 0xc, PT ;
 Instr 1978 @ 0x7ba0 (31648) - IMAD.HI.U32 R16, R19, c[0x0][0x234], R18 ;
 Instr 1979 @ 0x7bb0 (31664) - SHF.R.U32.HI R17, RZ, c[0x0][0x238], R16 ;
 Instr 1980 @ 0x7bc0 (31680) - IADD3 R18, -R17, RZ, RZ ;
 Instr 1981 @ 0x7bd0 (31696) - IMAD R19, R18, c[0x0][0x230], R19 ;
 Instr 1982 @ 0x7be0 (31712) - IMAD R14, R19, c[0x0][0x304], R14 ;
 Instr 1983 @ 0x7bf0 (31728) - @!P1 BRA 0x8250 ;
Basic block id 242 - num instructions 8
 Instr 1984 @ 0x7c00 (31744) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1985 @ 0x7c10 (31760) - ISETP.NE.AND P1, PT, R20, 0xd, PT ;
 Instr 1986 @ 0x7c20 (31776) - IMAD.HI.U32 R18, R17, c[0x0][0x240], R16 ;
 Instr 1987 @ 0x7c30 (31792) - SHF.R.U32.HI R19, RZ, c[0x0][0x244], R18 ;
 Instr 1988 @ 0x7c40 (31808) - IADD3 R16, -R19, RZ, RZ ;
 Instr 1989 @ 0x7c50 (31824) - IMAD R17, R16, c[0x0][0x23c], R17 ;
 Instr 1990 @ 0x7c60 (31840) - IMAD R14, R17, c[0x0][0x308], R14 ;
 Instr 1991 @ 0x7c70 (31856) - @!P1 BRA 0x8250 ;
Basic block id 243 - num instructions 8
 Instr 1992 @ 0x7c80 (31872) - MOV R18, RZ ;
 Instr 1993 @ 0x7c90 (31888) - ISETP.NE.AND P1, PT, R20, 0xe, PT ;
 Instr 1994 @ 0x7ca0 (31904) - IMAD.HI.U32 R16, R19, c[0x0][0x24c], R18 ;
 Instr 1995 @ 0x7cb0 (31920) - SHF.R.U32.HI R17, RZ, c[0x0][0x250], R16 ;
 Instr 1996 @ 0x7cc0 (31936) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 1997 @ 0x7cd0 (31952) - IMAD R19, R18, c[0x0][0x248], R19 ;
 Instr 1998 @ 0x7ce0 (31968) - IMAD R14, R19, c[0x0][0x30c], R14 ;
 Instr 1999 @ 0x7cf0 (31984) - @!P1 BRA 0x8250 ;
Basic block id 244 - num instructions 8
 Instr 2000 @ 0x7d00 (32000) - MOV R16, RZ ;
 Instr 2001 @ 0x7d10 (32016) - ISETP.NE.AND P1, PT, R20, 0xf, PT ;
 Instr 2002 @ 0x7d20 (32032) - IMAD.HI.U32 R18, R17, c[0x0][0x258], R16 ;
 Instr 2003 @ 0x7d30 (32048) - SHF.R.U32.HI R19, RZ, c[0x0][0x25c], R18 ;
 Instr 2004 @ 0x7d40 (32064) - IADD3 R16, -R19, RZ, RZ ;
 Instr 2005 @ 0x7d50 (32080) - IMAD R17, R16, c[0x0][0x254], R17 ;
 Instr 2006 @ 0x7d60 (32096) - IMAD R14, R17, c[0x0][0x310], R14 ;
 Instr 2007 @ 0x7d70 (32112) - @!P1 BRA 0x8250 ;
Basic block id 245 - num instructions 8
 Instr 2008 @ 0x7d80 (32128) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 2009 @ 0x7d90 (32144) - ISETP.NE.AND P1, PT, R20, 0x10, PT ;
 Instr 2010 @ 0x7da0 (32160) - IMAD.HI.U32 R16, R19, c[0x0][0x264], R18 ;
 Instr 2011 @ 0x7db0 (32176) - SHF.R.U32.HI R17, RZ, c[0x0][0x268], R16 ;
 Instr 2012 @ 0x7dc0 (32192) - IADD3 R18, -R17, RZ, RZ ;
 Instr 2013 @ 0x7dd0 (32208) - IMAD R19, R18, c[0x0][0x260], R19 ;
 Instr 2014 @ 0x7de0 (32224) - IMAD R14, R19, c[0x0][0x314], R14 ;
 Instr 2015 @ 0x7df0 (32240) - @!P1 BRA 0x8250 ;
Basic block id 246 - num instructions 8
 Instr 2016 @ 0x7e00 (32256) - MOV R16, RZ ;
 Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P1, PT, R20, 0x11, PT ;
 Instr 2018 @ 0x7e20 (32288) - IMAD.HI.U32 R18, R17, c[0x0][0x270], R16 ;
 Instr 2019 @ 0x7e30 (32304) - SHF.R.U32.HI R19, RZ, c[0x0][0x274], R18 ;
 Instr 2020 @ 0x7e40 (32320) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 2021 @ 0x7e50 (32336) - IMAD R17, R16, c[0x0][0x26c], R17 ;
 Instr 2022 @ 0x7e60 (32352) - IMAD R14, R17, c[0x0][0x318], R14 ;
 Instr 2023 @ 0x7e70 (32368) - @!P1 BRA 0x8250 ;
Basic block id 247 - num instructions 8
 Instr 2024 @ 0x7e80 (32384) - MOV R18, RZ ;
 Instr 2025 @ 0x7e90 (32400) - ISETP.NE.AND P1, PT, R20, 0x12, PT ;
 Instr 2026 @ 0x7ea0 (32416) - IMAD.HI.U32 R16, R19, c[0x0][0x27c], R18 ;
 Instr 2027 @ 0x7eb0 (32432) - SHF.R.U32.HI R17, RZ, c[0x0][0x280], R16 ;
 Instr 2028 @ 0x7ec0 (32448) - IADD3 R18, -R17, RZ, RZ ;
 Instr 2029 @ 0x7ed0 (32464) - IMAD R19, R18, c[0x0][0x278], R19 ;
 Instr 2030 @ 0x7ee0 (32480) - IMAD R14, R19, c[0x0][0x31c], R14 ;
 Instr 2031 @ 0x7ef0 (32496) - @!P1 BRA 0x8250 ;
Basic block id 248 - num instructions 8
 Instr 2032 @ 0x7f00 (32512) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 2033 @ 0x7f10 (32528) - ISETP.NE.AND P1, PT, R20, 0x13, PT ;
 Instr 2034 @ 0x7f20 (32544) - IMAD.HI.U32 R18, R17, c[0x0][0x288], R16 ;
 Instr 2035 @ 0x7f30 (32560) - SHF.R.U32.HI R19, RZ, c[0x0][0x28c], R18 ;
 Instr 2036 @ 0x7f40 (32576) - IADD3 R16, -R19, RZ, RZ ;
 Instr 2037 @ 0x7f50 (32592) - IMAD R17, R16, c[0x0][0x284], R17 ;
 Instr 2038 @ 0x7f60 (32608) - IMAD R14, R17, c[0x0][0x320], R14 ;
 Instr 2039 @ 0x7f70 (32624) - @!P1 BRA 0x8250 ;
Basic block id 249 - num instructions 8
 Instr 2040 @ 0x7f80 (32640) - MOV R18, RZ ;
 Instr 2041 @ 0x7f90 (32656) - ISETP.NE.AND P1, PT, R20, 0x14, PT ;
 Instr 2042 @ 0x7fa0 (32672) - IMAD.HI.U32 R16, R19, c[0x0][0x294], R18 ;
 Instr 2043 @ 0x7fb0 (32688) - SHF.R.U32.HI R17, RZ, c[0x0][0x298], R16 ;
 Instr 2044 @ 0x7fc0 (32704) - IMAD.MOV R18, RZ, RZ, -R17 ;
 Instr 2045 @ 0x7fd0 (32720) - IMAD R19, R18, c[0x0][0x290], R19 ;
 Instr 2046 @ 0x7fe0 (32736) - IMAD R14, R19, c[0x0][0x324], R14 ;
 Instr 2047 @ 0x7ff0 (32752) - @!P1 BRA 0x8250 ;
Basic block id 250 - num instructions 8
 Instr 2048 @ 0x8000 (32768) - MOV R16, RZ ;
 Instr 2049 @ 0x8010 (32784) - ISETP.NE.AND P1, PT, R20, 0x15, PT ;
 Instr 2050 @ 0x8020 (32800) - IMAD.HI.U32 R18, R17, c[0x0][0x2a0], R16 ;
 Instr 2051 @ 0x8030 (32816) - SHF.R.U32.HI R19, RZ, c[0x0][0x2a4], R18 ;
 Instr 2052 @ 0x8040 (32832) - IADD3 R16, -R19, RZ, RZ ;
 Instr 2053 @ 0x8050 (32848) - IMAD R17, R16, c[0x0][0x29c], R17 ;
 Instr 2054 @ 0x8060 (32864) - IMAD R14, R17, c[0x0][0x328], R14 ;
 Instr 2055 @ 0x8070 (32880) - @!P1 BRA 0x8250 ;
Basic block id 251 - num instructions 8
 Instr 2056 @ 0x8080 (32896) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 2057 @ 0x8090 (32912) - ISETP.NE.AND P1, PT, R20, 0x16, PT ;
 Instr 2058 @ 0x80a0 (32928) - IMAD.HI.U32 R16, R19, c[0x0][0x2ac], R18 ;
 Instr 2059 @ 0x80b0 (32944) - SHF.R.U32.HI R17, RZ, c[0x0][0x2b0], R16 ;
 Instr 2060 @ 0x80c0 (32960) - IADD3 R18, -R17, RZ, RZ ;
 Instr 2061 @ 0x80d0 (32976) - IMAD R19, R18, c[0x0][0x2a8], R19 ;
 Instr 2062 @ 0x80e0 (32992) - IMAD R14, R19, c[0x0][0x32c], R14 ;
 Instr 2063 @ 0x80f0 (33008) - @!P1 BRA 0x8250 ;
Basic block id 252 - num instructions 8
 Instr 2064 @ 0x8100 (33024) - MOV R16, RZ ;
 Instr 2065 @ 0x8110 (33040) - ISETP.NE.AND P1, PT, R20, 0x17, PT ;
 Instr 2066 @ 0x8120 (33056) - IMAD.HI.U32 R18, R17, c[0x0][0x2b8], R16 ;
 Instr 2067 @ 0x8130 (33072) - SHF.R.U32.HI R19, RZ, c[0x0][0x2bc], R18 ;
 Instr 2068 @ 0x8140 (33088) - IMAD.MOV R16, RZ, RZ, -R19 ;
 Instr 2069 @ 0x8150 (33104) - IMAD R17, R16, c[0x0][0x2b4], R17 ;
 Instr 2070 @ 0x8160 (33120) - IMAD R14, R17, c[0x0][0x330], R14 ;
 Instr 2071 @ 0x8170 (33136) - @!P1 BRA 0x8250 ;
Basic block id 253 - num instructions 13
 Instr 2072 @ 0x8180 (33152) - ISETP.NE.AND P1, PT, R20, 0x18, PT ;
 Instr 2073 @ 0x8190 (33168) - MOV R18, RZ ;
 Instr 2074 @ 0x81a0 (33184) - IMAD.HI.U32 R16, R19, c[0x0][0x2c4], R18 ;
 Instr 2075 @ 0x81b0 (33200) - SHF.R.U32.HI R17, RZ, c[0x0][0x2c8], R16 ;
 Instr 2076 @ 0x81c0 (33216) - @P1 MOV R16, RZ ;
 Instr 2077 @ 0x81d0 (33232) - IMAD.MOV R18, RZ, RZ, -R17.reuse ;
 Instr 2078 @ 0x81e0 (33248) - @P1 IMAD.HI.U32 R16, R17, c[0x0][0x2d0], R16 ;
 Instr 2079 @ 0x81f0 (33264) - IMAD R19, R18, c[0x0][0x2c0], R19 ;
 Instr 2080 @ 0x8200 (33280) - @P1 SHF.R.U32.HI R16, RZ, c[0x0][0x2d4], R16 ;
 Instr 2081 @ 0x8210 (33296) - IMAD R14, R19, c[0x0][0x334], R14 ;
 Instr 2082 @ 0x8220 (33312) - @P1 IADD3 R16, -R16, RZ, RZ ;
 Instr 2083 @ 0x8230 (33328) - @P1 IMAD R17, R16, c[0x0][0x2cc], R17 ;
 Instr 2084 @ 0x8240 (33344) - @P1 IMAD R14, R17, c[0x0][0x338], R14 ;
Basic block id 254 - num instructions 4
 Instr 2085 @ 0x8250 (33360) - LOP3.LUT R17, R14, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 2086 @ 0x8260 (33376) - IADD3 R6, P1, R6, R17, RZ ;
 Instr 2087 @ 0x8270 (33392) - IADD3.X R7, RZ, R7, RZ, P1, !PT ;
 Instr 2088 @ 0x8280 (33408) - LDG.E.U16.SYS R14, [R6] ;
Basic block id 255 - num instructions 4
 Instr 2089 @ 0x8290 (33424) - BSYNC B1 ;
 Instr 2090 @ 0x82a0 (33440) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2091 @ 0x82b0 (33456) - BSSY B1, 0x83e0 ;
 Instr 2092 @ 0x82c0 (33472) - @P0 BRA 0x83d0 ;
Basic block id 256 - num instructions 5
 Instr 2093 @ 0x82d0 (33488) - IADD3 R9, R9, c[0x0][0x174], RZ ;
 Instr 2094 @ 0x82e0 (33504) - HADD2.F32 R6, R13.H0_H0, -RZ.H0_H0 ;
 Instr 2095 @ 0x82f0 (33520) - ISETP.GE.U32.AND P0, PT, R9, c[0x0][0x16c], PT ;
 Instr 2096 @ 0x8300 (33536) - FADD R11, R11, R6 ;
 Instr 2097 @ 0x8310 (33552) - @P0 BRA 0x83d0 ;
Basic block id 257 - num instructions 5
 Instr 2098 @ 0x8320 (33568) - IADD3 R6, R9, c[0x0][0x174], RZ ;
 Instr 2099 @ 0x8330 (33584) - HADD2.F32 R7, R12.H0_H0, -RZ.H0_H0 ;
 Instr 2100 @ 0x8340 (33600) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x16c], PT ;
 Instr 2101 @ 0x8350 (33616) - FADD R10, R10, R7 ;
 Instr 2102 @ 0x8360 (33632) - @P0 BRA 0x83d0 ;
Basic block id 258 - num instructions 6
 Instr 2103 @ 0x8370 (33648) - IADD3 R6, R6, c[0x0][0x174], RZ ;
 Instr 2104 @ 0x8380 (33664) - HADD2.F32 R15, R15.H0_H0, -RZ.H0_H0 ;
 Instr 2105 @ 0x8390 (33680) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x16c], PT ;
 Instr 2106 @ 0x83a0 (33696) - FADD R8, R8, R15 ;
 Instr 2107 @ 0x83b0 (33712) - @!P0 HADD2.F32 R7, R14.H0_H0, -RZ.H0_H0 ;
 Instr 2108 @ 0x83c0 (33728) - @!P0 FADD R4, R4, R7 ;
Basic block id 259 - num instructions 5
 Instr 2109 @ 0x83d0 (33744) - BSYNC B1 ;
 Instr 2110 @ 0x83e0 (33760) - FADD R11, R10, R11 ;
 Instr 2111 @ 0x83f0 (33776) - FADD R11, R11, R8 ;
 Instr 2112 @ 0x8400 (33792) - FADD R4, R11, R4 ;
 Instr 2113 @ 0x8410 (33808) - BRA 0x8f30 ;
Basic block id 260 - num instructions 7
 Instr 2114 @ 0x8420 (33824) - ISETP.GE.U32.AND P0, PT, R8, c[0x0][0x16c], PT ;
 Instr 2115 @ 0x8430 (33840) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2116 @ 0x8440 (33856) - BSSY B1, 0x86c0 ;
 Instr 2117 @ 0x8450 (33872) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x164] ;
 Instr 2118 @ 0x8460 (33888) - MOV R11, c[0x0][0x164] ;
 Instr 2119 @ 0x8470 (33904) - MOV R10, c[0x0][0x164] ;
 Instr 2120 @ 0x8480 (33920) - @P0 BRA 0x86b0 ;
Basic block id 261 - num instructions 5
 Instr 2121 @ 0x8490 (33936) - BMOV.32.CLEAR RZ, B2 ;
 Instr 2122 @ 0x84a0 (33952) - BSSY B2, 0x86a0 ;
 Instr 2123 @ 0x84b0 (33968) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x164] ;
 Instr 2124 @ 0x84c0 (33984) - MOV R11, c[0x0][0x164] ;
 Instr 2125 @ 0x84d0 (34000) - MOV R10, c[0x0][0x164] ;
Basic block id 262 - num instructions 27
 Instr 2126 @ 0x84e0 (34016) - IADD3 R15, R9, c[0x0][0x174], RZ ;
 Instr 2127 @ 0x84f0 (34032) - IMAD R13, R20, R9, RZ ;
 Instr 2128 @ 0x8500 (34048) - IADD3 R17, R15, c[0x0][0x174], RZ ;
 Instr 2129 @ 0x8510 (34064) - IMAD R15, R20, R15, RZ ;
 Instr 2130 @ 0x8520 (34080) - IMAD.WIDE.U32 R12, R13, 0x2, R6 ;
 Instr 2131 @ 0x8530 (34096) - IADD3 R9, R17, c[0x0][0x174], RZ ;
 Instr 2132 @ 0x8540 (34112) - IMAD R17, R20.reuse, R17, RZ ;
 Instr 2133 @ 0x8550 (34128) - IMAD R19, R20, R9, RZ ;
 Instr 2134 @ 0x8560 (34144) - IMAD.WIDE.U32 R14, R15, 0x2, R6.reuse ;
 Instr 2135 @ 0x8570 (34160) - LDG.E.U16.SYS R12, [R12] ;
 Instr 2136 @ 0x8580 (34176) - IMAD.WIDE.U32 R16, R17, 0x2, R6 ;
 Instr 2137 @ 0x8590 (34192) - IMAD.WIDE.U32 R18, R19, 0x2, R6 ;
 Instr 2138 @ 0x85a0 (34208) - LDG.E.U16.SYS R14, [R14] ;
 Instr 2139 @ 0x85b0 (34224) - LDG.E.U16.SYS R16, [R16] ;
 Instr 2140 @ 0x85c0 (34240) - LDG.E.U16.SYS R18, [R18] ;
 Instr 2141 @ 0x85d0 (34256) - IADD3 R9, R9, c[0x0][0x174], RZ ;
 Instr 2142 @ 0x85e0 (34272) - IMAD R24, R26, 0x3, R9 ;
 Instr 2143 @ 0x85f0 (34288) - ISETP.GE.U32.AND P0, PT, R24, c[0x0][0x16c], PT ;
 Instr 2144 @ 0x8600 (34304) - HADD2.F32 R21, R12.H0_H0, -RZ.H0_H0 ;
 Instr 2145 @ 0x8610 (34320) - HADD2.F32 R22, R14.H0_H0, -RZ.H0_H0 ;
 Instr 2146 @ 0x8620 (34336) - HADD2.F32 R23, R16.H0_H0, -RZ.H0_H0 ;
 Instr 2147 @ 0x8630 (34352) - HADD2.F32 R25, R18.H0_H0, -RZ.H0_H0 ;
 Instr 2148 @ 0x8640 (34368) - FADD R10, R21, R10 ;
 Instr 2149 @ 0x8650 (34384) - FADD R11, R22, R11 ;
 Instr 2150 @ 0x8660 (34400) - FADD R8, R23, R8 ;
 Instr 2151 @ 0x8670 (34416) - FADD R4, R25, R4 ;
 Instr 2152 @ 0x8680 (34432) - @!P0 BRA 0x84e0 ;
Basic block id 263 - num instructions 2
 Instr 2153 @ 0x8690 (34448) - BSYNC B2 ;
 Instr 2154 @ 0x86a0 (34464) - PRMT R15, R12, 0x7610, R15 ;
Basic block id 264 - num instructions 5
 Instr 2155 @ 0x86b0 (34480) - BSYNC B1 ;
 Instr 2156 @ 0x86c0 (34496) - ISETP.GE.U32.AND P1, PT, R9, c[0x0][0x16c], PT ;
 Instr 2157 @ 0x86d0 (34512) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2158 @ 0x86e0 (34528) - BSSY B1, 0x8850 ;
 Instr 2159 @ 0x86f0 (34544) - @P1 BRA 0x8840 ;
Basic block id 265 - num instructions 6
 Instr 2160 @ 0x8700 (34560) - IMAD R13, R20, R9, RZ ;
 Instr 2161 @ 0x8710 (34576) - IMAD.WIDE.U32 R12, R13, 0x2, R6 ;
 Instr 2162 @ 0x8720 (34592) - LDG.E.U16.SYS R15, [R12] ;
 Instr 2163 @ 0x8730 (34608) - IADD3 R17, R9, c[0x0][0x174], RZ ;
 Instr 2164 @ 0x8740 (34624) - ISETP.GE.U32.AND P0, PT, R17, c[0x0][0x16c], PT ;
 Instr 2165 @ 0x8750 (34640) - @P0 BRA 0x8840 ;
Basic block id 266 - num instructions 6
 Instr 2166 @ 0x8760 (34656) - IMAD R13, R20, R17, RZ ;
 Instr 2167 @ 0x8770 (34672) - IMAD.WIDE.U32 R12, R13, 0x2, R6 ;
 Instr 2168 @ 0x8780 (34688) - LDG.E.U16.SYS R14, [R12] ;
 Instr 2169 @ 0x8790 (34704) - IADD3 R17, R17, c[0x0][0x174], RZ ;
 Instr 2170 @ 0x87a0 (34720) - ISETP.GE.U32.AND P0, PT, R17, c[0x0][0x16c], PT ;
 Instr 2171 @ 0x87b0 (34736) - @P0 BRA 0x8840 ;
Basic block id 267 - num instructions 8
 Instr 2172 @ 0x87c0 (34752) - IADD3 R19, R17, c[0x0][0x174], RZ ;
 Instr 2173 @ 0x87d0 (34768) - IMAD R13, R20, R17, RZ ;
 Instr 2174 @ 0x87e0 (34784) - ISETP.GE.U32.AND P0, PT, R19, c[0x0][0x16c], PT ;
 Instr 2175 @ 0x87f0 (34800) - IMAD.WIDE.U32 R12, R13, 0x2, R6 ;
 Instr 2176 @ 0x8800 (34816) - LDG.E.U16.SYS R16, [R12] ;
 Instr 2177 @ 0x8810 (34832) - @!P0 IMAD R17, R20, R19, RZ ;
 Instr 2178 @ 0x8820 (34848) - @!P0 IMAD.WIDE.U32 R6, R17, 0x2, R6 ;
 Instr 2179 @ 0x8830 (34864) - @!P0 LDG.E.U16.SYS R18, [R6] ;
Basic block id 268 - num instructions 4
 Instr 2180 @ 0x8840 (34880) - BSYNC B1 ;
 Instr 2181 @ 0x8850 (34896) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2182 @ 0x8860 (34912) - BSSY B1, 0x8990 ;
 Instr 2183 @ 0x8870 (34928) - @P1 BRA 0x8980 ;
Basic block id 269 - num instructions 5
 Instr 2184 @ 0x8880 (34944) - IADD3 R6, R9, c[0x0][0x174], RZ ;
 Instr 2185 @ 0x8890 (34960) - HADD2.F32 R15, R15.H0_H0, -RZ.H0_H0 ;
 Instr 2186 @ 0x88a0 (34976) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x16c], PT ;
 Instr 2187 @ 0x88b0 (34992) - FADD R10, R10, R15 ;
 Instr 2188 @ 0x88c0 (35008) - @P0 BRA 0x8980 ;
Basic block id 270 - num instructions 5
 Instr 2189 @ 0x88d0 (35024) - IADD3 R6, R6, c[0x0][0x174], RZ ;
 Instr 2190 @ 0x88e0 (35040) - HADD2.F32 R14, R14.H0_H0, -RZ.H0_H0 ;
 Instr 2191 @ 0x88f0 (35056) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x16c], PT ;
 Instr 2192 @ 0x8900 (35072) - FADD R11, R11, R14 ;
 Instr 2193 @ 0x8910 (35088) - @P0 BRA 0x8980 ;
Basic block id 271 - num instructions 6
 Instr 2194 @ 0x8920 (35104) - IADD3 R6, R6, c[0x0][0x174], RZ ;
 Instr 2195 @ 0x8930 (35120) - HADD2.F32 R7, R16.H0_H0, -RZ.H0_H0 ;
 Instr 2196 @ 0x8940 (35136) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x16c], PT ;
 Instr 2197 @ 0x8950 (35152) - FADD R8, R8, R7 ;
 Instr 2198 @ 0x8960 (35168) - @!P0 HADD2.F32 R9, R18.H0_H0, -RZ.H0_H0 ;
 Instr 2199 @ 0x8970 (35184) - @!P0 FADD R4, R4, R9 ;
Basic block id 272 - num instructions 5
 Instr 2200 @ 0x8980 (35200) - BSYNC B1 ;
 Instr 2201 @ 0x8990 (35216) - FADD R11, R10, R11 ;
 Instr 2202 @ 0x89a0 (35232) - FADD R11, R11, R8 ;
 Instr 2203 @ 0x89b0 (35248) - FADD R4, R11, R4 ;
 Instr 2204 @ 0x89c0 (35264) - BRA 0x8f30 ;
Basic block id 273 - num instructions 11
 Instr 2205 @ 0x89d0 (35280) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x174] ;
 Instr 2206 @ 0x89e0 (35296) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2207 @ 0x89f0 (35312) - BSSY B1, 0x8c70 ;
 Instr 2208 @ 0x8a00 (35328) - MOV R17, R10 ;
 Instr 2209 @ 0x8a10 (35344) - IMAD R4, R24, 0x3, R10 ;
 Instr 2210 @ 0x8a20 (35360) - MOV R18, c[0x0][0x164] ;
 Instr 2211 @ 0x8a30 (35376) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x164] ;
 Instr 2212 @ 0x8a40 (35392) - MOV R19, c[0x0][0x164] ;
 Instr 2213 @ 0x8a50 (35408) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x16c], PT ;
 Instr 2214 @ 0x8a60 (35424) - MOV R4, c[0x0][0x164] ;
 Instr 2215 @ 0x8a70 (35440) - @P0 BRA 0x8c60 ;
Basic block id 274 - num instructions 5
 Instr 2216 @ 0x8a80 (35456) - BMOV.32.CLEAR RZ, B2 ;
 Instr 2217 @ 0x8a90 (35472) - BSSY B2, 0x8c50 ;
 Instr 2218 @ 0x8aa0 (35488) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x164] ;
 Instr 2219 @ 0x8ab0 (35504) - MOV R18, c[0x0][0x164] ;
 Instr 2220 @ 0x8ac0 (35520) - MOV R19, c[0x0][0x164] ;
Basic block id 275 - num instructions 23
 Instr 2221 @ 0x8ad0 (35536) - IADD3 R11, R17.reuse, c[0x0][0x174], RZ ;
 Instr 2222 @ 0x8ae0 (35552) - IMAD.WIDE.U32 R8, R17, 0x2, R6 ;
 Instr 2223 @ 0x8af0 (35568) - IADD3 R13, R11.reuse, c[0x0][0x174], RZ ;
 Instr 2224 @ 0x8b00 (35584) - IMAD.WIDE.U32 R10, R11, 0x2, R6 ;
 Instr 2225 @ 0x8b10 (35600) - IADD3 R21, R13.reuse, c[0x0][0x174], RZ ;
 Instr 2226 @ 0x8b20 (35616) - IMAD.WIDE.U32 R12, R13, 0x2, R6.reuse ;
 Instr 2227 @ 0x8b30 (35632) - LDG.E.U16.SYS R8, [R8] ;
 Instr 2228 @ 0x8b40 (35648) - IMAD.WIDE.U32 R14, R21.reuse, 0x2, R6 ;
 Instr 2229 @ 0x8b50 (35664) - LDG.E.U16.SYS R10, [R10] ;
 Instr 2230 @ 0x8b60 (35680) - LDG.E.U16.SYS R12, [R12] ;
 Instr 2231 @ 0x8b70 (35696) - LDG.E.U16.SYS R14, [R14] ;
 Instr 2232 @ 0x8b80 (35712) - IADD3 R17, R21, c[0x0][0x174], RZ ;
 Instr 2233 @ 0x8b90 (35728) - IMAD R22, R24, 0x3, R17 ;
 Instr 2234 @ 0x8ba0 (35744) - ISETP.GE.U32.AND P0, PT, R22, c[0x0][0x16c], PT ;
 Instr 2235 @ 0x8bb0 (35760) - HADD2.F32 R20, R8.H0_H0, -RZ.H0_H0 ;
 Instr 2236 @ 0x8bc0 (35776) - HADD2.F32 R21, R10.H0_H0, -RZ.H0_H0 ;
 Instr 2237 @ 0x8bd0 (35792) - HADD2.F32 R23, R12.H0_H0, -RZ.H0_H0 ;
 Instr 2238 @ 0x8be0 (35808) - HADD2.F32 R25, R14.H0_H0, -RZ.H0_H0 ;
 Instr 2239 @ 0x8bf0 (35824) - FADD R19, R20, R19 ;
 Instr 2240 @ 0x8c00 (35840) - FADD R18, R21, R18 ;
 Instr 2241 @ 0x8c10 (35856) - FADD R16, R23, R16 ;
 Instr 2242 @ 0x8c20 (35872) - FADD R4, R25, R4 ;
 Instr 2243 @ 0x8c30 (35888) - @!P0 BRA 0x8ad0 ;
Basic block id 276 - num instructions 2
 Instr 2244 @ 0x8c40 (35904) - BSYNC B2 ;
 Instr 2245 @ 0x8c50 (35920) - PRMT R11, R8, 0x7610, R11 ;
Basic block id 277 - num instructions 5
 Instr 2246 @ 0x8c60 (35936) - BSYNC B1 ;
 Instr 2247 @ 0x8c70 (35952) - ISETP.GE.U32.AND P1, PT, R17, c[0x0][0x16c], PT ;
 Instr 2248 @ 0x8c80 (35968) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2249 @ 0x8c90 (35984) - BSSY B1, 0x8dc0 ;
 Instr 2250 @ 0x8ca0 (36000) - @P1 BRA 0x8db0 ;
Basic block id 278 - num instructions 5
 Instr 2251 @ 0x8cb0 (36016) - IMAD.WIDE.U32 R8, R17, 0x2, R6 ;
 Instr 2252 @ 0x8cc0 (36032) - LDG.E.U16.SYS R11, [R8] ;
 Instr 2253 @ 0x8cd0 (36048) - IADD3 R13, R17, c[0x0][0x174], RZ ;
 Instr 2254 @ 0x8ce0 (36064) - ISETP.GE.U32.AND P0, PT, R13, c[0x0][0x16c], PT ;
 Instr 2255 @ 0x8cf0 (36080) - @P0 BRA 0x8db0 ;
Basic block id 279 - num instructions 5
 Instr 2256 @ 0x8d00 (36096) - IMAD.WIDE.U32 R8, R13, 0x2, R6 ;
 Instr 2257 @ 0x8d10 (36112) - LDG.E.U16.SYS R10, [R8] ;
 Instr 2258 @ 0x8d20 (36128) - IADD3 R13, R13, c[0x0][0x174], RZ ;
 Instr 2259 @ 0x8d30 (36144) - ISETP.GE.U32.AND P0, PT, R13, c[0x0][0x16c], PT ;
 Instr 2260 @ 0x8d40 (36160) - @P0 BRA 0x8db0 ;
Basic block id 280 - num instructions 6
 Instr 2261 @ 0x8d50 (36176) - IADD3 R15, R13.reuse, c[0x0][0x174], RZ ;
 Instr 2262 @ 0x8d60 (36192) - IMAD.WIDE.U32 R8, R13, 0x2, R6 ;
 Instr 2263 @ 0x8d70 (36208) - ISETP.GE.U32.AND P0, PT, R15, c[0x0][0x16c], PT ;
 Instr 2264 @ 0x8d80 (36224) - LDG.E.U16.SYS R12, [R8] ;
 Instr 2265 @ 0x8d90 (36240) - @!P0 IMAD.WIDE.U32 R6, R15, 0x2, R6 ;
 Instr 2266 @ 0x8da0 (36256) - @!P0 LDG.E.U16.SYS R14, [R6] ;
Basic block id 281 - num instructions 4
 Instr 2267 @ 0x8db0 (36272) - BSYNC B1 ;
 Instr 2268 @ 0x8dc0 (36288) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2269 @ 0x8dd0 (36304) - BSSY B1, 0x8f00 ;
 Instr 2270 @ 0x8de0 (36320) - @P1 BRA 0x8ef0 ;
Basic block id 282 - num instructions 5
 Instr 2271 @ 0x8df0 (36336) - IADD3 R17, R17, c[0x0][0x174], RZ ;
 Instr 2272 @ 0x8e00 (36352) - HADD2.F32 R6, R11.H0_H0, -RZ.H0_H0 ;
 Instr 2273 @ 0x8e10 (36368) - ISETP.GE.U32.AND P0, PT, R17, c[0x0][0x16c], PT ;
 Instr 2274 @ 0x8e20 (36384) - FADD R19, R19, R6 ;
 Instr 2275 @ 0x8e30 (36400) - @P0 BRA 0x8ef0 ;
Basic block id 283 - num instructions 5
 Instr 2276 @ 0x8e40 (36416) - IADD3 R6, R17, c[0x0][0x174], RZ ;
 Instr 2277 @ 0x8e50 (36432) - HADD2.F32 R7, R10.H0_H0, -RZ.H0_H0 ;
 Instr 2278 @ 0x8e60 (36448) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x16c], PT ;
 Instr 2279 @ 0x8e70 (36464) - FADD R18, R18, R7 ;
 Instr 2280 @ 0x8e80 (36480) - @P0 BRA 0x8ef0 ;
Basic block id 284 - num instructions 6
 Instr 2281 @ 0x8e90 (36496) - IADD3 R6, R6, c[0x0][0x174], RZ ;
 Instr 2282 @ 0x8ea0 (36512) - HADD2.F32 R7, R12.H0_H0, -RZ.H0_H0 ;
 Instr 2283 @ 0x8eb0 (36528) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x16c], PT ;
 Instr 2284 @ 0x8ec0 (36544) - FADD R16, R16, R7 ;
 Instr 2285 @ 0x8ed0 (36560) - @!P0 HADD2.F32 R9, R14.H0_H0, -RZ.H0_H0 ;
 Instr 2286 @ 0x8ee0 (36576) - @!P0 FADD R4, R4, R9 ;
Basic block id 285 - num instructions 4
 Instr 2287 @ 0x8ef0 (36592) - BSYNC B1 ;
 Instr 2288 @ 0x8f00 (36608) - FADD R19, R19, R18 ;
 Instr 2289 @ 0x8f10 (36624) - FADD R19, R19, R16 ;
 Instr 2290 @ 0x8f20 (36640) - FADD R4, R19, R4 ;
Basic block id 286 - num instructions 3
 Instr 2291 @ 0x8f30 (36656) - BSYNC B0 ;
 Instr 2292 @ 0x8f40 (36672) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x184], PT ;
 Instr 2293 @ 0x8f50 (36688) - @!P0 BRA 0x9080 ;
Basic block id 287 - num instructions 6
 Instr 2294 @ 0x8f60 (36704) - IMAD R7, R0, c[0x0][0x0], R5 ;
 Instr 2295 @ 0x8f70 (36720) - ULDC UR4, c[0x0][0x4] ;
 Instr 2296 @ 0x8f80 (36736) - USHF.R.U32.HI UR4, URZ, 0x1, UR4 ;
 Instr 2297 @ 0x8f90 (36752) - STS [R7.X4+0x10], R4 ;
 Instr 2298 @ 0x8fa0 (36768) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 2299 @ 0x8fb0 (36784) - @!P0 BRA 0x9080 ;
Basic block id 288 - num instructions 1
 Instr 2300 @ 0x8fc0 (36800) - IMAD.U32 R9, RZ, RZ, UR4 ;
Basic block id 289 - num instructions 11
 Instr 2301 @ 0x8fd0 (36816) - IADD3 R6, R0, R9, RZ ;
 Instr 2302 @ 0x8fe0 (36832) - BAR.SYNC 0x0 ;
 Instr 2303 @ 0x8ff0 (36848) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x4], PT ;
 Instr 2304 @ 0x9000 (36864) - ISETP.GE.U32.OR P0, PT, R0, R9, P0 ;
 Instr 2305 @ 0x9010 (36880) - @!P0 IMAD R6, R6, c[0x0][0x0], R5 ;
 Instr 2306 @ 0x9020 (36896) - @!P0 LDS.U R11, [R6.X4+0x10] ;
 Instr 2307 @ 0x9030 (36912) - @!P0 FADD R4, R4, R11 ;
 Instr 2308 @ 0x9040 (36928) - @!P0 STS [R7.X4+0x10], R4 ;
 Instr 2309 @ 0x9050 (36944) - ISETP.GT.AND P0, PT, R9, 0x1, PT ;
 Instr 2310 @ 0x9060 (36960) - SHF.R.S32.HI R9, RZ, 0x1, R9 ;
 Instr 2311 @ 0x9070 (36976) - @P0 BRA 0x8fd0 ;
Basic block id 290 - num instructions 2
 Instr 2312 @ 0x9080 (36992) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x180], PT ;
 Instr 2313 @ 0x9090 (37008) - @!P0 BRA 0x92b0 ;
Basic block id 291 - num instructions 4
 Instr 2314 @ 0x90a0 (37024) - MOV R7, c[0x0][0x0] ;
 Instr 2315 @ 0x90b0 (37040) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x0] ;
 Instr 2316 @ 0x90c0 (37056) - ISETP.GT.AND P0, PT, R7, 0x20, PT ;
 Instr 2317 @ 0x90d0 (37072) - @!P0 BRA 0x9220 ;
Basic block id 292 - num instructions 7
 Instr 2318 @ 0x90e0 (37088) - IMAD R11, R0, c[0x0][0x0], R5 ;
 Instr 2319 @ 0x90f0 (37104) - LEA.HI R6, R7, c[0x0][0x0], RZ, 0x1 ;
 Instr 2320 @ 0x9100 (37120) - SHF.R.S32.HI R7, RZ, 0x1, R6 ;
 Instr 2321 @ 0x9110 (37136) - MOV R6, 0x20 ;
 Instr 2322 @ 0x9120 (37152) - STS [R11.X4+0x10], R4 ;
 Instr 2323 @ 0x9130 (37168) - ISETP.GE.AND P0, PT, R7, 0x20, PT ;
 Instr 2324 @ 0x9140 (37184) - @!P0 BRA 0x9220 ;
Basic block id 293 - num instructions 1
 Instr 2325 @ 0x9150 (37200) - LEA R8, R11, 0x10, 0x2 ;
Basic block id 294 - num instructions 11
 Instr 2326 @ 0x9160 (37216) - IADD3 R6, R5, R7, RZ ;
 Instr 2327 @ 0x9170 (37232) - BAR.SYNC 0x0 ;
 Instr 2328 @ 0x9180 (37248) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x0], PT ;
 Instr 2329 @ 0x9190 (37264) - ISETP.GE.U32.OR P0, PT, R5, R7, P0 ;
 Instr 2330 @ 0x91a0 (37280) - @!P0 IMAD R6, R7, 0x4, R8 ;
 Instr 2331 @ 0x91b0 (37296) - SHF.R.S32.HI R7, RZ, 0x1, R7 ;
 Instr 2332 @ 0x91c0 (37312) - @!P0 LDS.U R9, [R6] ;
 Instr 2333 @ 0x91d0 (37328) - @!P0 FADD R4, R4, R9 ;
 Instr 2334 @ 0x91e0 (37344) - @!P0 STS [R11.X4+0x10], R4 ;
 Instr 2335 @ 0x91f0 (37360) - ISETP.GE.AND P0, PT, R7, 0x20, PT ;
 Instr 2336 @ 0x9200 (37376) - @P0 BRA 0x9160 ;
Basic block id 295 - num instructions 1
 Instr 2337 @ 0x9210 (37392) - MOV R6, 0x20 ;
Basic block id 296 - num instructions 3
 Instr 2338 @ 0x9220 (37408) - BAR.SYNC 0x0 ;
 Instr 2339 @ 0x9230 (37424) - ISETP.GE.AND P0, PT, R6, 0x2, PT ;
 Instr 2340 @ 0x9240 (37440) - @!P0 BRA 0x92b0 ;
Basic block id 297 - num instructions 1
 Instr 2341 @ 0x9250 (37456) - MOV R7, 0x1 ;
Basic block id 298 - num instructions 5
 Instr 2342 @ 0x9260 (37472) - SHFL.DOWN PT, R9, R4, R7, 0x1f ;
 Instr 2343 @ 0x9270 (37488) - IMAD.SHL.U32 R7, R7, 0x2, RZ ;
 Instr 2344 @ 0x9280 (37504) - ISETP.GE.AND P0, PT, R7, R6, PT ;
 Instr 2345 @ 0x9290 (37520) - FADD R4, R9, R4 ;
 Instr 2346 @ 0x92a0 (37536) - @!P0 BRA 0x9260 ;
Basic block id 299 - num instructions 3
 Instr 2347 @ 0x92b0 (37552) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x33c], PT ;
 Instr 2348 @ 0x92c0 (37568) - MOV R16, RZ ;
 Instr 2349 @ 0x92d0 (37584) - @!P0 BRA 0x9f50 ;
Basic block id 300 - num instructions 9
 Instr 2350 @ 0x92e0 (37600) - MOV R2, RZ ;
 Instr 2351 @ 0x92f0 (37616) - IMAD.MOV.U32 R8, RZ, RZ, 0x1 ;
 Instr 2352 @ 0x9300 (37632) - IMAD.HI.U32 R6, R3, c[0x0][0x344], R2 ;
 Instr 2353 @ 0x9310 (37648) - ISETP.NE.AND P0, PT, R8, c[0x0][0x33c], PT ;
 Instr 2354 @ 0x9320 (37664) - SHF.R.U32.HI R7, RZ, c[0x0][0x348], R6 ;
 Instr 2355 @ 0x9330 (37680) - IADD3 R9, -R7, RZ, RZ ;
 Instr 2356 @ 0x9340 (37696) - IMAD R9, R9, c[0x0][0x340], R3 ;
 Instr 2357 @ 0x9350 (37712) - IMAD R16, R9, c[0x0][0x46c], RZ ;
 Instr 2358 @ 0x9360 (37728) - @!P0 BRA 0x9f50 ;
Basic block id 301 - num instructions 9
 Instr 2359 @ 0x9370 (37744) - MOV R6, RZ ;
 Instr 2360 @ 0x9380 (37760) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x33c] ;
 Instr 2361 @ 0x9390 (37776) - IMAD.HI.U32 R8, R7, c[0x0][0x350], R6 ;
 Instr 2362 @ 0x93a0 (37792) - ISETP.NE.AND P0, PT, R10, 0x2, PT ;
 Instr 2363 @ 0x93b0 (37808) - SHF.R.U32.HI R9, RZ, c[0x0][0x354], R8 ;
 Instr 2364 @ 0x93c0 (37824) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2365 @ 0x93d0 (37840) - IMAD R7, R6, c[0x0][0x34c], R7 ;
 Instr 2366 @ 0x93e0 (37856) - IMAD R16, R7, c[0x0][0x474], R16 ;
 Instr 2367 @ 0x93f0 (37872) - @!P0 BRA 0x9f50 ;
Basic block id 302 - num instructions 8
 Instr 2368 @ 0x9400 (37888) - MOV R8, RZ ;
 Instr 2369 @ 0x9410 (37904) - ISETP.NE.AND P0, PT, R10, 0x3, PT ;
 Instr 2370 @ 0x9420 (37920) - IMAD.HI.U32 R6, R9, c[0x0][0x35c], R8 ;
 Instr 2371 @ 0x9430 (37936) - SHF.R.U32.HI R7, RZ, c[0x0][0x360], R6 ;
 Instr 2372 @ 0x9440 (37952) - IMAD.MOV R8, RZ, RZ, -R7 ;
 Instr 2373 @ 0x9450 (37968) - IMAD R9, R8, c[0x0][0x358], R9 ;
 Instr 2374 @ 0x9460 (37984) - IMAD R16, R9, c[0x0][0x47c], R16 ;
 Instr 2375 @ 0x9470 (38000) - @!P0 BRA 0x9f50 ;
Basic block id 303 - num instructions 8
 Instr 2376 @ 0x9480 (38016) - MOV R6, RZ ;
 Instr 2377 @ 0x9490 (38032) - ISETP.NE.AND P0, PT, R10, 0x4, PT ;
 Instr 2378 @ 0x94a0 (38048) - IMAD.HI.U32 R8, R7, c[0x0][0x368], R6 ;
 Instr 2379 @ 0x94b0 (38064) - SHF.R.U32.HI R9, RZ, c[0x0][0x36c], R8 ;
 Instr 2380 @ 0x94c0 (38080) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2381 @ 0x94d0 (38096) - IMAD R7, R6, c[0x0][0x364], R7 ;
 Instr 2382 @ 0x94e0 (38112) - IMAD R16, R7, c[0x0][0x484], R16 ;
 Instr 2383 @ 0x94f0 (38128) - @!P0 BRA 0x9f50 ;
Basic block id 304 - num instructions 8
 Instr 2384 @ 0x9500 (38144) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2385 @ 0x9510 (38160) - ISETP.NE.AND P0, PT, R10, 0x5, PT ;
 Instr 2386 @ 0x9520 (38176) - IMAD.HI.U32 R6, R9, c[0x0][0x374], R8 ;
 Instr 2387 @ 0x9530 (38192) - SHF.R.U32.HI R7, RZ, c[0x0][0x378], R6 ;
 Instr 2388 @ 0x9540 (38208) - IADD3 R8, -R7, RZ, RZ ;
 Instr 2389 @ 0x9550 (38224) - IMAD R9, R8, c[0x0][0x370], R9 ;
 Instr 2390 @ 0x9560 (38240) - IMAD R16, R9, c[0x0][0x48c], R16 ;
 Instr 2391 @ 0x9570 (38256) - @!P0 BRA 0x9f50 ;
Basic block id 305 - num instructions 8
 Instr 2392 @ 0x9580 (38272) - MOV R6, RZ ;
 Instr 2393 @ 0x9590 (38288) - ISETP.NE.AND P0, PT, R10, 0x6, PT ;
 Instr 2394 @ 0x95a0 (38304) - IMAD.HI.U32 R8, R7, c[0x0][0x380], R6 ;
 Instr 2395 @ 0x95b0 (38320) - SHF.R.U32.HI R9, RZ, c[0x0][0x384], R8 ;
 Instr 2396 @ 0x95c0 (38336) - IMAD.MOV R6, RZ, RZ, -R9 ;
 Instr 2397 @ 0x95d0 (38352) - IMAD R7, R6, c[0x0][0x37c], R7 ;
 Instr 2398 @ 0x95e0 (38368) - IMAD R16, R7, c[0x0][0x494], R16 ;
 Instr 2399 @ 0x95f0 (38384) - @!P0 BRA 0x9f50 ;
Basic block id 306 - num instructions 8
 Instr 2400 @ 0x9600 (38400) - MOV R8, RZ ;
 Instr 2401 @ 0x9610 (38416) - ISETP.NE.AND P0, PT, R10, 0x7, PT ;
 Instr 2402 @ 0x9620 (38432) - IMAD.HI.U32 R6, R9, c[0x0][0x38c], R8 ;
 Instr 2403 @ 0x9630 (38448) - SHF.R.U32.HI R7, RZ, c[0x0][0x390], R6 ;
 Instr 2404 @ 0x9640 (38464) - IADD3 R8, -R7, RZ, RZ ;
 Instr 2405 @ 0x9650 (38480) - IMAD R9, R8, c[0x0][0x388], R9 ;
 Instr 2406 @ 0x9660 (38496) - IMAD R16, R9, c[0x0][0x49c], R16 ;
 Instr 2407 @ 0x9670 (38512) - @!P0 BRA 0x9f50 ;
Basic block id 307 - num instructions 8
 Instr 2408 @ 0x9680 (38528) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 2409 @ 0x9690 (38544) - ISETP.NE.AND P0, PT, R10, 0x8, PT ;
 Instr 2410 @ 0x96a0 (38560) - IMAD.HI.U32 R8, R7, c[0x0][0x398], R6 ;
 Instr 2411 @ 0x96b0 (38576) - SHF.R.U32.HI R9, RZ, c[0x0][0x39c], R8 ;
 Instr 2412 @ 0x96c0 (38592) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2413 @ 0x96d0 (38608) - IMAD R7, R6, c[0x0][0x394], R7 ;
 Instr 2414 @ 0x96e0 (38624) - IMAD R16, R7, c[0x0][0x4a4], R16 ;
 Instr 2415 @ 0x96f0 (38640) - @!P0 BRA 0x9f50 ;
Basic block id 308 - num instructions 8
 Instr 2416 @ 0x9700 (38656) - MOV R8, RZ ;
 Instr 2417 @ 0x9710 (38672) - ISETP.NE.AND P0, PT, R10, 0x9, PT ;
 Instr 2418 @ 0x9720 (38688) - IMAD.HI.U32 R6, R9, c[0x0][0x3a4], R8 ;
 Instr 2419 @ 0x9730 (38704) - SHF.R.U32.HI R7, RZ, c[0x0][0x3a8], R6 ;
 Instr 2420 @ 0x9740 (38720) - IMAD.MOV R8, RZ, RZ, -R7 ;
 Instr 2421 @ 0x9750 (38736) - IMAD R9, R8, c[0x0][0x3a0], R9 ;
 Instr 2422 @ 0x9760 (38752) - IMAD R16, R9, c[0x0][0x4ac], R16 ;
 Instr 2423 @ 0x9770 (38768) - @!P0 BRA 0x9f50 ;
Basic block id 309 - num instructions 8
 Instr 2424 @ 0x9780 (38784) - MOV R6, RZ ;
 Instr 2425 @ 0x9790 (38800) - ISETP.NE.AND P0, PT, R10, 0xa, PT ;
 Instr 2426 @ 0x97a0 (38816) - IMAD.HI.U32 R8, R7, c[0x0][0x3b0], R6 ;
 Instr 2427 @ 0x97b0 (38832) - SHF.R.U32.HI R9, RZ, c[0x0][0x3b4], R8 ;
 Instr 2428 @ 0x97c0 (38848) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2429 @ 0x97d0 (38864) - IMAD R7, R6, c[0x0][0x3ac], R7 ;
 Instr 2430 @ 0x97e0 (38880) - IMAD R16, R7, c[0x0][0x4b4], R16 ;
 Instr 2431 @ 0x97f0 (38896) - @!P0 BRA 0x9f50 ;
Basic block id 310 - num instructions 8
 Instr 2432 @ 0x9800 (38912) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2433 @ 0x9810 (38928) - ISETP.NE.AND P0, PT, R10, 0xb, PT ;
 Instr 2434 @ 0x9820 (38944) - IMAD.HI.U32 R6, R9, c[0x0][0x3bc], R8 ;
 Instr 2435 @ 0x9830 (38960) - SHF.R.U32.HI R7, RZ, c[0x0][0x3c0], R6 ;
 Instr 2436 @ 0x9840 (38976) - IADD3 R8, -R7, RZ, RZ ;
 Instr 2437 @ 0x9850 (38992) - IMAD R9, R8, c[0x0][0x3b8], R9 ;
 Instr 2438 @ 0x9860 (39008) - IMAD R16, R9, c[0x0][0x4bc], R16 ;
 Instr 2439 @ 0x9870 (39024) - @!P0 BRA 0x9f50 ;
Basic block id 311 - num instructions 8
 Instr 2440 @ 0x9880 (39040) - MOV R6, RZ ;
 Instr 2441 @ 0x9890 (39056) - ISETP.NE.AND P0, PT, R10, 0xc, PT ;
 Instr 2442 @ 0x98a0 (39072) - IMAD.HI.U32 R8, R7, c[0x0][0x3c8], R6 ;
 Instr 2443 @ 0x98b0 (39088) - SHF.R.U32.HI R9, RZ, c[0x0][0x3cc], R8 ;
 Instr 2444 @ 0x98c0 (39104) - IMAD.MOV R6, RZ, RZ, -R9 ;
 Instr 2445 @ 0x98d0 (39120) - IMAD R7, R6, c[0x0][0x3c4], R7 ;
 Instr 2446 @ 0x98e0 (39136) - IMAD R16, R7, c[0x0][0x4c4], R16 ;
 Instr 2447 @ 0x98f0 (39152) - @!P0 BRA 0x9f50 ;
Basic block id 312 - num instructions 8
 Instr 2448 @ 0x9900 (39168) - MOV R8, RZ ;
 Instr 2449 @ 0x9910 (39184) - ISETP.NE.AND P0, PT, R10, 0xd, PT ;
 Instr 2450 @ 0x9920 (39200) - IMAD.HI.U32 R6, R9, c[0x0][0x3d4], R8 ;
 Instr 2451 @ 0x9930 (39216) - SHF.R.U32.HI R7, RZ, c[0x0][0x3d8], R6 ;
 Instr 2452 @ 0x9940 (39232) - IADD3 R8, -R7, RZ, RZ ;
 Instr 2453 @ 0x9950 (39248) - IMAD R9, R8, c[0x0][0x3d0], R9 ;
 Instr 2454 @ 0x9960 (39264) - IMAD R16, R9, c[0x0][0x4cc], R16 ;
 Instr 2455 @ 0x9970 (39280) - @!P0 BRA 0x9f50 ;
Basic block id 313 - num instructions 8
 Instr 2456 @ 0x9980 (39296) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 2457 @ 0x9990 (39312) - ISETP.NE.AND P0, PT, R10, 0xe, PT ;
 Instr 2458 @ 0x99a0 (39328) - IMAD.HI.U32 R8, R7, c[0x0][0x3e0], R6 ;
 Instr 2459 @ 0x99b0 (39344) - SHF.R.U32.HI R9, RZ, c[0x0][0x3e4], R8 ;
 Instr 2460 @ 0x99c0 (39360) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2461 @ 0x99d0 (39376) - IMAD R7, R6, c[0x0][0x3dc], R7 ;
 Instr 2462 @ 0x99e0 (39392) - IMAD R16, R7, c[0x0][0x4d4], R16 ;
 Instr 2463 @ 0x99f0 (39408) - @!P0 BRA 0x9f50 ;
Basic block id 314 - num instructions 8
 Instr 2464 @ 0x9a00 (39424) - MOV R8, RZ ;
 Instr 2465 @ 0x9a10 (39440) - ISETP.NE.AND P0, PT, R10, 0xf, PT ;
 Instr 2466 @ 0x9a20 (39456) - IMAD.HI.U32 R6, R9, c[0x0][0x3ec], R8 ;
 Instr 2467 @ 0x9a30 (39472) - SHF.R.U32.HI R7, RZ, c[0x0][0x3f0], R6 ;
 Instr 2468 @ 0x9a40 (39488) - IMAD.MOV R8, RZ, RZ, -R7 ;
 Instr 2469 @ 0x9a50 (39504) - IMAD R9, R8, c[0x0][0x3e8], R9 ;
 Instr 2470 @ 0x9a60 (39520) - IMAD R16, R9, c[0x0][0x4dc], R16 ;
 Instr 2471 @ 0x9a70 (39536) - @!P0 BRA 0x9f50 ;
Basic block id 315 - num instructions 8
 Instr 2472 @ 0x9a80 (39552) - MOV R6, RZ ;
 Instr 2473 @ 0x9a90 (39568) - ISETP.NE.AND P0, PT, R10, 0x10, PT ;
 Instr 2474 @ 0x9aa0 (39584) - IMAD.HI.U32 R8, R7, c[0x0][0x3f8], R6 ;
 Instr 2475 @ 0x9ab0 (39600) - SHF.R.U32.HI R9, RZ, c[0x0][0x3fc], R8 ;
 Instr 2476 @ 0x9ac0 (39616) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2477 @ 0x9ad0 (39632) - IMAD R7, R6, c[0x0][0x3f4], R7 ;
 Instr 2478 @ 0x9ae0 (39648) - IMAD R16, R7, c[0x0][0x4e4], R16 ;
 Instr 2479 @ 0x9af0 (39664) - @!P0 BRA 0x9f50 ;
Basic block id 316 - num instructions 8
 Instr 2480 @ 0x9b00 (39680) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2481 @ 0x9b10 (39696) - ISETP.NE.AND P0, PT, R10, 0x11, PT ;
 Instr 2482 @ 0x9b20 (39712) - IMAD.HI.U32 R6, R9, c[0x0][0x404], R8 ;
 Instr 2483 @ 0x9b30 (39728) - SHF.R.U32.HI R7, RZ, c[0x0][0x408], R6 ;
 Instr 2484 @ 0x9b40 (39744) - IADD3 R8, -R7, RZ, RZ ;
 Instr 2485 @ 0x9b50 (39760) - IMAD R9, R8, c[0x0][0x400], R9 ;
 Instr 2486 @ 0x9b60 (39776) - IMAD R16, R9, c[0x0][0x4ec], R16 ;
 Instr 2487 @ 0x9b70 (39792) - @!P0 BRA 0x9f50 ;
Basic block id 317 - num instructions 8
 Instr 2488 @ 0x9b80 (39808) - MOV R6, RZ ;
 Instr 2489 @ 0x9b90 (39824) - ISETP.NE.AND P0, PT, R10, 0x12, PT ;
 Instr 2490 @ 0x9ba0 (39840) - IMAD.HI.U32 R8, R7, c[0x0][0x410], R6 ;
 Instr 2491 @ 0x9bb0 (39856) - SHF.R.U32.HI R9, RZ, c[0x0][0x414], R8 ;
 Instr 2492 @ 0x9bc0 (39872) - IMAD.MOV R6, RZ, RZ, -R9 ;
 Instr 2493 @ 0x9bd0 (39888) - IMAD R7, R6, c[0x0][0x40c], R7 ;
 Instr 2494 @ 0x9be0 (39904) - IMAD R16, R7, c[0x0][0x4f4], R16 ;
 Instr 2495 @ 0x9bf0 (39920) - @!P0 BRA 0x9f50 ;
Basic block id 318 - num instructions 8
 Instr 2496 @ 0x9c00 (39936) - MOV R8, RZ ;
 Instr 2497 @ 0x9c10 (39952) - ISETP.NE.AND P0, PT, R10, 0x13, PT ;
 Instr 2498 @ 0x9c20 (39968) - IMAD.HI.U32 R6, R9, c[0x0][0x41c], R8 ;
 Instr 2499 @ 0x9c30 (39984) - SHF.R.U32.HI R7, RZ, c[0x0][0x420], R6 ;
 Instr 2500 @ 0x9c40 (40000) - IADD3 R8, -R7, RZ, RZ ;
 Instr 2501 @ 0x9c50 (40016) - IMAD R9, R8, c[0x0][0x418], R9 ;
 Instr 2502 @ 0x9c60 (40032) - IMAD R16, R9, c[0x0][0x4fc], R16 ;
 Instr 2503 @ 0x9c70 (40048) - @!P0 BRA 0x9f50 ;
Basic block id 319 - num instructions 8
 Instr 2504 @ 0x9c80 (40064) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 2505 @ 0x9c90 (40080) - ISETP.NE.AND P0, PT, R10, 0x14, PT ;
 Instr 2506 @ 0x9ca0 (40096) - IMAD.HI.U32 R8, R7, c[0x0][0x428], R6 ;
 Instr 2507 @ 0x9cb0 (40112) - SHF.R.U32.HI R9, RZ, c[0x0][0x42c], R8 ;
 Instr 2508 @ 0x9cc0 (40128) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2509 @ 0x9cd0 (40144) - IMAD R7, R6, c[0x0][0x424], R7 ;
 Instr 2510 @ 0x9ce0 (40160) - IMAD R16, R7, c[0x0][0x504], R16 ;
 Instr 2511 @ 0x9cf0 (40176) - @!P0 BRA 0x9f50 ;
Basic block id 320 - num instructions 8
 Instr 2512 @ 0x9d00 (40192) - MOV R8, RZ ;
 Instr 2513 @ 0x9d10 (40208) - ISETP.NE.AND P0, PT, R10, 0x15, PT ;
 Instr 2514 @ 0x9d20 (40224) - IMAD.HI.U32 R6, R9, c[0x0][0x434], R8 ;
 Instr 2515 @ 0x9d30 (40240) - SHF.R.U32.HI R7, RZ, c[0x0][0x438], R6 ;
 Instr 2516 @ 0x9d40 (40256) - IMAD.MOV R8, RZ, RZ, -R7 ;
 Instr 2517 @ 0x9d50 (40272) - IMAD R9, R8, c[0x0][0x430], R9 ;
 Instr 2518 @ 0x9d60 (40288) - IMAD R16, R9, c[0x0][0x50c], R16 ;
 Instr 2519 @ 0x9d70 (40304) - @!P0 BRA 0x9f50 ;
Basic block id 321 - num instructions 8
 Instr 2520 @ 0x9d80 (40320) - MOV R6, RZ ;
 Instr 2521 @ 0x9d90 (40336) - ISETP.NE.AND P0, PT, R10, 0x16, PT ;
 Instr 2522 @ 0x9da0 (40352) - IMAD.HI.U32 R8, R7, c[0x0][0x440], R6 ;
 Instr 2523 @ 0x9db0 (40368) - SHF.R.U32.HI R9, RZ, c[0x0][0x444], R8 ;
 Instr 2524 @ 0x9dc0 (40384) - IADD3 R6, -R9, RZ, RZ ;
 Instr 2525 @ 0x9dd0 (40400) - IMAD R7, R6, c[0x0][0x43c], R7 ;
 Instr 2526 @ 0x9de0 (40416) - IMAD R16, R7, c[0x0][0x514], R16 ;
 Instr 2527 @ 0x9df0 (40432) - @!P0 BRA 0x9f50 ;
Basic block id 322 - num instructions 8
 Instr 2528 @ 0x9e00 (40448) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2529 @ 0x9e10 (40464) - ISETP.NE.AND P0, PT, R10, 0x17, PT ;
 Instr 2530 @ 0x9e20 (40480) - IMAD.HI.U32 R6, R9, c[0x0][0x44c], R8 ;
 Instr 2531 @ 0x9e30 (40496) - SHF.R.U32.HI R7, RZ, c[0x0][0x450], R6 ;
 Instr 2532 @ 0x9e40 (40512) - IADD3 R8, -R7, RZ, RZ ;
 Instr 2533 @ 0x9e50 (40528) - IMAD R9, R8, c[0x0][0x448], R9 ;
 Instr 2534 @ 0x9e60 (40544) - IMAD R16, R9, c[0x0][0x51c], R16 ;
 Instr 2535 @ 0x9e70 (40560) - @!P0 BRA 0x9f50 ;
Basic block id 323 - num instructions 13
 Instr 2536 @ 0x9e80 (40576) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
 Instr 2537 @ 0x9e90 (40592) - MOV R6, RZ ;
 Instr 2538 @ 0x9ea0 (40608) - IMAD.HI.U32 R8, R7, c[0x0][0x458], R6 ;
 Instr 2539 @ 0x9eb0 (40624) - SHF.R.U32.HI R9, RZ, c[0x0][0x45c], R8 ;
 Instr 2540 @ 0x9ec0 (40640) - @P0 IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2541 @ 0x9ed0 (40656) - IADD3 R6, -R9.reuse, RZ, RZ ;
 Instr 2542 @ 0x9ee0 (40672) - @P0 IMAD.HI.U32 R8, R9, c[0x0][0x464], R8 ;
 Instr 2543 @ 0x9ef0 (40688) - IMAD R7, R6, c[0x0][0x454], R7 ;
 Instr 2544 @ 0x9f00 (40704) - @P0 SHF.R.U32.HI R8, RZ, c[0x0][0x468], R8 ;
 Instr 2545 @ 0x9f10 (40720) - IMAD R16, R7, c[0x0][0x524], R16 ;
 Instr 2546 @ 0x9f20 (40736) - @P0 IADD3 R8, -R8, RZ, RZ ;
 Instr 2547 @ 0x9f30 (40752) - @P0 IMAD R9, R8, c[0x0][0x460], R9 ;
 Instr 2548 @ 0x9f40 (40768) - @P0 IMAD R16, R9, c[0x0][0x52c], R16 ;
Basic block id 324 - num instructions 7
 Instr 2549 @ 0x9f50 (40784) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x550], PT ;
 Instr 2550 @ 0x9f60 (40800) - CS2R R8, SRZ ;
 Instr 2551 @ 0x9f70 (40816) - IADD3 R6, P1, R16, c[0x0][0x540], RZ ;
 Instr 2552 @ 0x9f80 (40832) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x554], PT, P0 ;
 Instr 2553 @ 0x9f90 (40848) - MOV R10, RZ ;
 Instr 2554 @ 0x9fa0 (40864) - IMAD.X R7, RZ, RZ, c[0x0][0x544], P1 ;
 Instr 2555 @ 0x9fb0 (40880) - @!P0 BRA 0xa7c0 ;
Basic block id 325 - num instructions 4
 Instr 2556 @ 0x9fc0 (40896) - MOV R14, 0x2 ;
 Instr 2557 @ 0x9fd0 (40912) - IMAD.MOV.U32 R11, RZ, RZ, RZ ;
 Instr 2558 @ 0x9fe0 (40928) - MOV R12, 0x4 ;
 Instr 2559 @ 0x9ff0 (40944) - MOV R13, 0x0 ;
Basic block id 326 - num instructions 5
 Instr 2560 @ 0xa000 (40960) - LOP3.LUT R8, R11, R13.reuse, RZ, 0xfc, !PT ;
 Instr 2561 @ 0xa010 (40976) - MOV R9, R13 ;
 Instr 2562 @ 0xa020 (40992) - ISETP.NE.U32.AND P0, PT, R8, RZ, PT ;
 Instr 2563 @ 0xa030 (41008) - IMAD.MOV.U32 R8, RZ, RZ, R12 ;
 Instr 2564 @ 0xa040 (41024) - @!P0 BRA 0xa080 ;
Basic block id 327 - num instructions 2
 Instr 2565 @ 0xa050 (41040) - MOV R10, 0xa070 ;
 Instr 2566 @ 0xa060 (41056) - CALL.REL.NOINC 0xcc40 ;
Basic block id 328 - num instructions 1
 Instr 2567 @ 0xa070 (41072) - BRA 0xa1b0 ;
Basic block id 329 - num instructions 19
 Instr 2568 @ 0xa080 (41088) - I2F.U32.RP R13, R12 ;
 Instr 2569 @ 0xa090 (41104) - ISETP.NE.U32.AND P1, PT, R12, RZ, PT ;
 Instr 2570 @ 0xa0a0 (41120) - MUFU.RCP R13, R13 ;
 Instr 2571 @ 0xa0b0 (41136) - IADD3 R10, R13, 0xffffffe, RZ ;
 Instr 2572 @ 0xa0c0 (41152) - MOV R13, RZ ;
 Instr 2573 @ 0xa0d0 (41168) - F2I.FTZ.U32.TRUNC.NTZ R11, R10 ;
 Instr 2574 @ 0xa0e0 (41184) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2575 @ 0xa0f0 (41200) - IADD3 R15, RZ, -R11, RZ ;
 Instr 2576 @ 0xa100 (41216) - IMAD R15, R15, R12, RZ ;
 Instr 2577 @ 0xa110 (41232) - IMAD.HI.U32 R11, R11, R15, R10 ;
 Instr 2578 @ 0xa120 (41248) - IMAD.HI.U32 R11, R11, R14, RZ ;
 Instr 2579 @ 0xa130 (41264) - IADD3 R11, -R11, RZ, RZ ;
 Instr 2580 @ 0xa140 (41280) - IMAD R11, R12, R11, R14 ;
 Instr 2581 @ 0xa150 (41296) - ISETP.GE.U32.AND P0, PT, R11, R12, PT ;
 Instr 2582 @ 0xa160 (41312) - @P0 IADD3 R11, R11, -R12, RZ ;
 Instr 2583 @ 0xa170 (41328) - ISETP.GE.U32.AND P0, PT, R11, R12, PT ;
 Instr 2584 @ 0xa180 (41344) - @P0 IMAD.IADD R11, R11, 0x1, -R12 ;
 Instr 2585 @ 0xa190 (41360) - @!P1 LOP3.LUT R11, RZ, R12, RZ, 0x33, !PT ;
 Instr 2586 @ 0xa1a0 (41376) - MOV R12, R11 ;
Basic block id 330 - num instructions 5
 Instr 2587 @ 0xa1b0 (41392) - ISETP.NE.U32.AND P0, PT, R12, RZ, PT ;
 Instr 2588 @ 0xa1c0 (41408) - IMAD.MOV.U32 R14, RZ, RZ, R8 ;
 Instr 2589 @ 0xa1d0 (41424) - MOV R11, R9 ;
 Instr 2590 @ 0xa1e0 (41440) - ISETP.NE.AND.EX P0, PT, R13, RZ, PT, P0 ;
 Instr 2591 @ 0xa1f0 (41456) - @P0 BRA 0xa000 ;
Basic block id 331 - num instructions 2
 Instr 2592 @ 0xa200 (41472) - ISETP.NE.U32.AND P2, PT, R9, RZ, PT ;
 Instr 2593 @ 0xa210 (41488) - @!P2 BRA 0xa290 ;
Basic block id 332 - num instructions 4
 Instr 2594 @ 0xa220 (41504) - MOV R14, 0x4 ;
 Instr 2595 @ 0xa230 (41520) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2596 @ 0xa240 (41536) - MOV R12, 0xa260 ;
 Instr 2597 @ 0xa250 (41552) - CALL.REL.NOINC 0xc7f0 ;
Basic block id 333 - num instructions 3
 Instr 2598 @ 0xa260 (41568) - MOV R10, R14 ;
 Instr 2599 @ 0xa270 (41584) - MOV R11, R15 ;
 Instr 2600 @ 0xa280 (41600) - BRA 0xa3c0 ;
Basic block id 334 - num instructions 19
 Instr 2601 @ 0xa290 (41616) - I2F.U32.RP R12, R8 ;
 Instr 2602 @ 0xa2a0 (41632) - MOV R10, RZ ;
 Instr 2603 @ 0xa2b0 (41648) - ISETP.NE.U32.AND P3, PT, R8, RZ, PT ;
 Instr 2604 @ 0xa2c0 (41664) - MUFU.RCP R12, R12 ;
 Instr 2605 @ 0xa2d0 (41680) - IADD3 R13, R12, 0xffffffe, RZ ;
 Instr 2606 @ 0xa2e0 (41696) - F2I.FTZ.U32.TRUNC.NTZ R11, R13 ;
 Instr 2607 @ 0xa2f0 (41712) - IMAD.MOV R15, RZ, RZ, -R11 ;
 Instr 2608 @ 0xa300 (41728) - IMAD R15, R15, R8, RZ ;
 Instr 2609 @ 0xa310 (41744) - IMAD.HI.U32 R10, R11, R15, R10 ;
 Instr 2610 @ 0xa320 (41760) - IMAD.HI.U32 R10, R10, 0x4, RZ ;
 Instr 2611 @ 0xa330 (41776) - IADD3 R11, -R10, RZ, RZ ;
 Instr 2612 @ 0xa340 (41792) - IMAD R11, R8, R11, 0x4 ;
 Instr 2613 @ 0xa350 (41808) - ISETP.GE.U32.AND P0, PT, R11, R8, PT ;
 Instr 2614 @ 0xa360 (41824) - @P0 IMAD.IADD R11, R11, 0x1, -R8 ;
 Instr 2615 @ 0xa370 (41840) - @P0 IADD3 R10, R10, 0x1, RZ ;
 Instr 2616 @ 0xa380 (41856) - ISETP.GE.U32.AND P1, PT, R11, R8, PT ;
 Instr 2617 @ 0xa390 (41872) - MOV R11, RZ ;
 Instr 2618 @ 0xa3a0 (41888) - @P1 IADD3 R10, R10, 0x1, RZ ;
 Instr 2619 @ 0xa3b0 (41904) - @!P3 LOP3.LUT R10, RZ, R8, RZ, 0x33, !PT ;
Basic block id 335 - num instructions 1
 Instr 2620 @ 0xa3c0 (41920) - @!P2 BRA 0xa440 ;
Basic block id 336 - num instructions 4
 Instr 2621 @ 0xa3d0 (41936) - MOV R14, 0x2 ;
 Instr 2622 @ 0xa3e0 (41952) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2623 @ 0xa3f0 (41968) - MOV R12, 0xa410 ;
 Instr 2624 @ 0xa400 (41984) - CALL.REL.NOINC 0xc7f0 ;
Basic block id 337 - num instructions 3
 Instr 2625 @ 0xa410 (42000) - MOV R8, R14 ;
 Instr 2626 @ 0xa420 (42016) - MOV R9, R15 ;
 Instr 2627 @ 0xa430 (42032) - BRA 0xa580 ;
Basic block id 338 - num instructions 20
 Instr 2628 @ 0xa440 (42048) - I2F.U32.RP R14, R8 ;
 Instr 2629 @ 0xa450 (42064) - MOV R12, RZ ;
 Instr 2630 @ 0xa460 (42080) - ISETP.NE.U32.AND P2, PT, R8, RZ, PT ;
 Instr 2631 @ 0xa470 (42096) - MUFU.RCP R14, R14 ;
 Instr 2632 @ 0xa480 (42112) - IADD3 R13, R14, 0xffffffe, RZ ;
 Instr 2633 @ 0xa490 (42128) - F2I.FTZ.U32.TRUNC.NTZ R13, R13 ;
 Instr 2634 @ 0xa4a0 (42144) - IMAD.MOV R9, RZ, RZ, -R13 ;
 Instr 2635 @ 0xa4b0 (42160) - IMAD R9, R9, R8, RZ ;
 Instr 2636 @ 0xa4c0 (42176) - IMAD.HI.U32 R9, R13, R9, R12 ;
 Instr 2637 @ 0xa4d0 (42192) - IMAD.HI.U32 R12, R9, 0x2, RZ ;
 Instr 2638 @ 0xa4e0 (42208) - IADD3 R9, -R12, RZ, RZ ;
 Instr 2639 @ 0xa4f0 (42224) - IMAD R9, R8, R9, 0x2 ;
 Instr 2640 @ 0xa500 (42240) - ISETP.GE.U32.AND P0, PT, R9, R8, PT ;
 Instr 2641 @ 0xa510 (42256) - @P0 IMAD.IADD R9, R9, 0x1, -R8 ;
 Instr 2642 @ 0xa520 (42272) - @P0 IADD3 R12, R12, 0x1, RZ ;
 Instr 2643 @ 0xa530 (42288) - ISETP.GE.U32.AND P1, PT, R9, R8, PT ;
 Instr 2644 @ 0xa540 (42304) - MOV R9, RZ ;
 Instr 2645 @ 0xa550 (42320) - @P1 IADD3 R12, R12, 0x1, RZ ;
 Instr 2646 @ 0xa560 (42336) - @!P2 LOP3.LUT R12, RZ, R8, RZ, 0x33, !PT ;
 Instr 2647 @ 0xa570 (42352) - MOV R8, R12 ;
Basic block id 339 - num instructions 7
 Instr 2648 @ 0xa580 (42368) - IMAD R11, R11, R16.reuse, RZ ;
 Instr 2649 @ 0xa590 (42384) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2650 @ 0xa5a0 (42400) - IMAD.WIDE.U32 R14, R10, R16, RZ ;
 Instr 2651 @ 0xa5b0 (42416) - BSSY B0, 0xa790 ;
 Instr 2652 @ 0xa5c0 (42432) - IMAD.IADD R13, R15, 0x1, R11 ;
 Instr 2653 @ 0xa5d0 (42448) - LOP3.LUT P0, RZ, R13, 0x7, RZ, 0xc0, !PT ;
 Instr 2654 @ 0xa5e0 (42464) - @!P0 BRA 0xa640 ;
Basic block id 340 - num instructions 2
 Instr 2655 @ 0xa5f0 (42480) - MOV R12, 0xa610 ;
 Instr 2656 @ 0xa600 (42496) - CALL.REL.NOINC 0xc7f0 ;
Basic block id 341 - num instructions 3
 Instr 2657 @ 0xa610 (42512) - MOV R8, R14 ;
 Instr 2658 @ 0xa620 (42528) - MOV R9, R15 ;
 Instr 2659 @ 0xa630 (42544) - BRA 0xa780 ;
Basic block id 342 - num instructions 20
 Instr 2660 @ 0xa640 (42560) - I2F.U32.RP R9, R8 ;
 Instr 2661 @ 0xa650 (42576) - ISETP.NE.U32.AND P2, PT, R8, RZ, PT ;
 Instr 2662 @ 0xa660 (42592) - MUFU.RCP R9, R9 ;
 Instr 2663 @ 0xa670 (42608) - IADD3 R10, R9, 0xffffffe, RZ ;
 Instr 2664 @ 0xa680 (42624) - MOV R9, RZ ;
 Instr 2665 @ 0xa690 (42640) - F2I.FTZ.U32.TRUNC.NTZ R11, R10 ;
 Instr 2666 @ 0xa6a0 (42656) - MOV R10, RZ ;
 Instr 2667 @ 0xa6b0 (42672) - IMAD.MOV R13, RZ, RZ, -R11 ;
 Instr 2668 @ 0xa6c0 (42688) - IMAD R13, R13, R8, RZ ;
 Instr 2669 @ 0xa6d0 (42704) - IMAD.HI.U32 R11, R11, R13, R10 ;
 Instr 2670 @ 0xa6e0 (42720) - IMAD.HI.U32 R11, R11, R14, RZ ;
 Instr 2671 @ 0xa6f0 (42736) - IADD3 R15, -R11, RZ, RZ ;
 Instr 2672 @ 0xa700 (42752) - IMAD R15, R8, R15, R14 ;
 Instr 2673 @ 0xa710 (42768) - ISETP.GE.U32.AND P0, PT, R15, R8, PT ;
 Instr 2674 @ 0xa720 (42784) - @P0 IMAD.IADD R15, R15, 0x1, -R8 ;
 Instr 2675 @ 0xa730 (42800) - @P0 IADD3 R11, R11, 0x1, RZ ;
 Instr 2676 @ 0xa740 (42816) - ISETP.GE.U32.AND P1, PT, R15, R8, PT ;
 Instr 2677 @ 0xa750 (42832) - @P1 IADD3 R11, R11, 0x1, RZ ;
 Instr 2678 @ 0xa760 (42848) - @!P2 LOP3.LUT R11, RZ, R8, RZ, 0x33, !PT ;
 Instr 2679 @ 0xa770 (42864) - MOV R8, R11 ;
Basic block id 343 - num instructions 4
 Instr 2680 @ 0xa780 (42880) - BSYNC B0 ;
 Instr 2681 @ 0xa790 (42896) - IADD3 R8, P0, R8, c[0x0][0x550], RZ ;
 Instr 2682 @ 0xa7a0 (42912) - IADD3.X R9, R9, c[0x0][0x554], RZ, P0, !PT ;
 Instr 2683 @ 0xa7b0 (42928) - IMAD.MOV.U32 R10, RZ, RZ, R9 ;
Basic block id 344 - num instructions 2
 Instr 2684 @ 0xa7c0 (42944) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 2685 @ 0xa7d0 (42960) - @!P0 BRA 0xc2b0 ;
Basic block id 345 - num instructions 7
 Instr 2686 @ 0xa7e0 (42976) - S2R R3, SR_CTAID.X ;
 Instr 2687 @ 0xa7f0 (42992) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x33c], PT ;
 Instr 2688 @ 0xa800 (43008) - IMAD R7, R5, c[0x0][0x18c], RZ ;
 Instr 2689 @ 0xa810 (43024) - MOV R2, RZ ;
 Instr 2690 @ 0xa820 (43040) - IMAD R6, R0, c[0x0][0x190], R7 ;
 Instr 2691 @ 0xa830 (43056) - IMAD R7, R3, c[0x0][0x178], R6 ;
 Instr 2692 @ 0xa840 (43072) - @!P0 BRA 0xb4b0 ;
Basic block id 346 - num instructions 9
 Instr 2693 @ 0xa850 (43088) - MOV R6, RZ ;
 Instr 2694 @ 0xa860 (43104) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x33c] ;
 Instr 2695 @ 0xa870 (43120) - IMAD.HI.U32 R12, R7, c[0x0][0x344], R6 ;
 Instr 2696 @ 0xa880 (43136) - ISETP.NE.AND P0, PT, R16, 0x1, PT ;
 Instr 2697 @ 0xa890 (43152) - SHF.R.U32.HI R13, RZ, c[0x0][0x348], R12 ;
 Instr 2698 @ 0xa8a0 (43168) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2699 @ 0xa8b0 (43184) - IMAD R11, R11, c[0x0][0x340], R7 ;
 Instr 2700 @ 0xa8c0 (43200) - IMAD R2, R11, c[0x0][0x46c], RZ ;
 Instr 2701 @ 0xa8d0 (43216) - @!P0 BRA 0xb4b0 ;
Basic block id 347 - num instructions 8
 Instr 2702 @ 0xa8e0 (43232) - MOV R12, RZ ;
 Instr 2703 @ 0xa8f0 (43248) - ISETP.NE.AND P0, PT, R16, 0x2, PT ;
 Instr 2704 @ 0xa900 (43264) - IMAD.HI.U32 R14, R13, c[0x0][0x350], R12 ;
 Instr 2705 @ 0xa910 (43280) - SHF.R.U32.HI R15, RZ, c[0x0][0x354], R14 ;
 Instr 2706 @ 0xa920 (43296) - IMAD.MOV R11, RZ, RZ, -R15 ;
 Instr 2707 @ 0xa930 (43312) - IMAD R11, R11, c[0x0][0x34c], R13 ;
 Instr 2708 @ 0xa940 (43328) - IMAD R2, R11, c[0x0][0x474], R2 ;
 Instr 2709 @ 0xa950 (43344) - @!P0 BRA 0xb4b0 ;
Basic block id 348 - num instructions 8
 Instr 2710 @ 0xa960 (43360) - MOV R14, RZ ;
 Instr 2711 @ 0xa970 (43376) - ISETP.NE.AND P0, PT, R16, 0x3, PT ;
 Instr 2712 @ 0xa980 (43392) - IMAD.HI.U32 R12, R15, c[0x0][0x35c], R14 ;
 Instr 2713 @ 0xa990 (43408) - SHF.R.U32.HI R13, RZ, c[0x0][0x360], R12 ;
 Instr 2714 @ 0xa9a0 (43424) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2715 @ 0xa9b0 (43440) - IMAD R11, R11, c[0x0][0x358], R15 ;
 Instr 2716 @ 0xa9c0 (43456) - IMAD R2, R11, c[0x0][0x47c], R2 ;
 Instr 2717 @ 0xa9d0 (43472) - @!P0 BRA 0xb4b0 ;
Basic block id 349 - num instructions 8
 Instr 2718 @ 0xa9e0 (43488) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2719 @ 0xa9f0 (43504) - ISETP.NE.AND P0, PT, R16, 0x4, PT ;
 Instr 2720 @ 0xaa00 (43520) - IMAD.HI.U32 R14, R13, c[0x0][0x368], R12 ;
 Instr 2721 @ 0xaa10 (43536) - SHF.R.U32.HI R15, RZ, c[0x0][0x36c], R14 ;
 Instr 2722 @ 0xaa20 (43552) - IADD3 R11, -R15, RZ, RZ ;
 Instr 2723 @ 0xaa30 (43568) - IMAD R11, R11, c[0x0][0x364], R13 ;
 Instr 2724 @ 0xaa40 (43584) - IMAD R2, R11, c[0x0][0x484], R2 ;
 Instr 2725 @ 0xaa50 (43600) - @!P0 BRA 0xb4b0 ;
Basic block id 350 - num instructions 8
 Instr 2726 @ 0xaa60 (43616) - MOV R14, RZ ;
 Instr 2727 @ 0xaa70 (43632) - ISETP.NE.AND P0, PT, R16, 0x5, PT ;
 Instr 2728 @ 0xaa80 (43648) - IMAD.HI.U32 R12, R15, c[0x0][0x374], R14 ;
 Instr 2729 @ 0xaa90 (43664) - SHF.R.U32.HI R13, RZ, c[0x0][0x378], R12 ;
 Instr 2730 @ 0xaaa0 (43680) - IMAD.MOV R11, RZ, RZ, -R13 ;
 Instr 2731 @ 0xaab0 (43696) - IMAD R11, R11, c[0x0][0x370], R15 ;
 Instr 2732 @ 0xaac0 (43712) - IMAD R2, R11, c[0x0][0x48c], R2 ;
 Instr 2733 @ 0xaad0 (43728) - @!P0 BRA 0xb4b0 ;
Basic block id 351 - num instructions 8
 Instr 2734 @ 0xaae0 (43744) - MOV R12, RZ ;
 Instr 2735 @ 0xaaf0 (43760) - ISETP.NE.AND P0, PT, R16, 0x6, PT ;
 Instr 2736 @ 0xab00 (43776) - IMAD.HI.U32 R14, R13, c[0x0][0x380], R12 ;
 Instr 2737 @ 0xab10 (43792) - SHF.R.U32.HI R15, RZ, c[0x0][0x384], R14 ;
 Instr 2738 @ 0xab20 (43808) - IADD3 R11, -R15, RZ, RZ ;
 Instr 2739 @ 0xab30 (43824) - IMAD R11, R11, c[0x0][0x37c], R13 ;
 Instr 2740 @ 0xab40 (43840) - IMAD R2, R11, c[0x0][0x494], R2 ;
 Instr 2741 @ 0xab50 (43856) - @!P0 BRA 0xb4b0 ;
Basic block id 352 - num instructions 8
 Instr 2742 @ 0xab60 (43872) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 2743 @ 0xab70 (43888) - ISETP.NE.AND P0, PT, R16, 0x7, PT ;
 Instr 2744 @ 0xab80 (43904) - IMAD.HI.U32 R12, R15, c[0x0][0x38c], R14 ;
 Instr 2745 @ 0xab90 (43920) - SHF.R.U32.HI R13, RZ, c[0x0][0x390], R12 ;
 Instr 2746 @ 0xaba0 (43936) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2747 @ 0xabb0 (43952) - IMAD R11, R11, c[0x0][0x388], R15 ;
 Instr 2748 @ 0xabc0 (43968) - IMAD R2, R11, c[0x0][0x49c], R2 ;
 Instr 2749 @ 0xabd0 (43984) - @!P0 BRA 0xb4b0 ;
Basic block id 353 - num instructions 8
 Instr 2750 @ 0xabe0 (44000) - MOV R12, RZ ;
 Instr 2751 @ 0xabf0 (44016) - ISETP.NE.AND P0, PT, R16, 0x8, PT ;
 Instr 2752 @ 0xac00 (44032) - IMAD.HI.U32 R14, R13, c[0x0][0x398], R12 ;
 Instr 2753 @ 0xac10 (44048) - SHF.R.U32.HI R15, RZ, c[0x0][0x39c], R14 ;
 Instr 2754 @ 0xac20 (44064) - IMAD.MOV R11, RZ, RZ, -R15 ;
 Instr 2755 @ 0xac30 (44080) - IMAD R11, R11, c[0x0][0x394], R13 ;
 Instr 2756 @ 0xac40 (44096) - IMAD R2, R11, c[0x0][0x4a4], R2 ;
 Instr 2757 @ 0xac50 (44112) - @!P0 BRA 0xb4b0 ;
Basic block id 354 - num instructions 8
 Instr 2758 @ 0xac60 (44128) - MOV R14, RZ ;
 Instr 2759 @ 0xac70 (44144) - ISETP.NE.AND P0, PT, R16, 0x9, PT ;
 Instr 2760 @ 0xac80 (44160) - IMAD.HI.U32 R12, R15, c[0x0][0x3a4], R14 ;
 Instr 2761 @ 0xac90 (44176) - SHF.R.U32.HI R13, RZ, c[0x0][0x3a8], R12 ;
 Instr 2762 @ 0xaca0 (44192) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2763 @ 0xacb0 (44208) - IMAD R11, R11, c[0x0][0x3a0], R15 ;
 Instr 2764 @ 0xacc0 (44224) - IMAD R2, R11, c[0x0][0x4ac], R2 ;
 Instr 2765 @ 0xacd0 (44240) - @!P0 BRA 0xb4b0 ;
Basic block id 355 - num instructions 8
 Instr 2766 @ 0xace0 (44256) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2767 @ 0xacf0 (44272) - ISETP.NE.AND P0, PT, R16, 0xa, PT ;
 Instr 2768 @ 0xad00 (44288) - IMAD.HI.U32 R14, R13, c[0x0][0x3b0], R12 ;
 Instr 2769 @ 0xad10 (44304) - SHF.R.U32.HI R15, RZ, c[0x0][0x3b4], R14 ;
 Instr 2770 @ 0xad20 (44320) - IADD3 R11, -R15, RZ, RZ ;
 Instr 2771 @ 0xad30 (44336) - IMAD R11, R11, c[0x0][0x3ac], R13 ;
 Instr 2772 @ 0xad40 (44352) - IMAD R2, R11, c[0x0][0x4b4], R2 ;
 Instr 2773 @ 0xad50 (44368) - @!P0 BRA 0xb4b0 ;
Basic block id 356 - num instructions 8
 Instr 2774 @ 0xad60 (44384) - MOV R14, RZ ;
 Instr 2775 @ 0xad70 (44400) - ISETP.NE.AND P0, PT, R16, 0xb, PT ;
 Instr 2776 @ 0xad80 (44416) - IMAD.HI.U32 R12, R15, c[0x0][0x3bc], R14 ;
 Instr 2777 @ 0xad90 (44432) - SHF.R.U32.HI R13, RZ, c[0x0][0x3c0], R12 ;
 Instr 2778 @ 0xada0 (44448) - IMAD.MOV R11, RZ, RZ, -R13 ;
 Instr 2779 @ 0xadb0 (44464) - IMAD R11, R11, c[0x0][0x3b8], R15 ;
 Instr 2780 @ 0xadc0 (44480) - IMAD R2, R11, c[0x0][0x4bc], R2 ;
 Instr 2781 @ 0xadd0 (44496) - @!P0 BRA 0xb4b0 ;
Basic block id 357 - num instructions 8
 Instr 2782 @ 0xade0 (44512) - MOV R12, RZ ;
 Instr 2783 @ 0xadf0 (44528) - ISETP.NE.AND P0, PT, R16, 0xc, PT ;
 Instr 2784 @ 0xae00 (44544) - IMAD.HI.U32 R14, R13, c[0x0][0x3c8], R12 ;
 Instr 2785 @ 0xae10 (44560) - SHF.R.U32.HI R15, RZ, c[0x0][0x3cc], R14 ;
 Instr 2786 @ 0xae20 (44576) - IADD3 R11, -R15, RZ, RZ ;
 Instr 2787 @ 0xae30 (44592) - IMAD R11, R11, c[0x0][0x3c4], R13 ;
 Instr 2788 @ 0xae40 (44608) - IMAD R2, R11, c[0x0][0x4c4], R2 ;
 Instr 2789 @ 0xae50 (44624) - @!P0 BRA 0xb4b0 ;
Basic block id 358 - num instructions 8
 Instr 2790 @ 0xae60 (44640) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 2791 @ 0xae70 (44656) - ISETP.NE.AND P0, PT, R16, 0xd, PT ;
 Instr 2792 @ 0xae80 (44672) - IMAD.HI.U32 R12, R15, c[0x0][0x3d4], R14 ;
 Instr 2793 @ 0xae90 (44688) - SHF.R.U32.HI R13, RZ, c[0x0][0x3d8], R12 ;
 Instr 2794 @ 0xaea0 (44704) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2795 @ 0xaeb0 (44720) - IMAD R11, R11, c[0x0][0x3d0], R15 ;
 Instr 2796 @ 0xaec0 (44736) - IMAD R2, R11, c[0x0][0x4cc], R2 ;
 Instr 2797 @ 0xaed0 (44752) - @!P0 BRA 0xb4b0 ;
Basic block id 359 - num instructions 8
 Instr 2798 @ 0xaee0 (44768) - MOV R12, RZ ;
 Instr 2799 @ 0xaef0 (44784) - ISETP.NE.AND P0, PT, R16, 0xe, PT ;
 Instr 2800 @ 0xaf00 (44800) - IMAD.HI.U32 R14, R13, c[0x0][0x3e0], R12 ;
 Instr 2801 @ 0xaf10 (44816) - SHF.R.U32.HI R15, RZ, c[0x0][0x3e4], R14 ;
 Instr 2802 @ 0xaf20 (44832) - IMAD.MOV R11, RZ, RZ, -R15 ;
 Instr 2803 @ 0xaf30 (44848) - IMAD R11, R11, c[0x0][0x3dc], R13 ;
 Instr 2804 @ 0xaf40 (44864) - IMAD R2, R11, c[0x0][0x4d4], R2 ;
 Instr 2805 @ 0xaf50 (44880) - @!P0 BRA 0xb4b0 ;
Basic block id 360 - num instructions 8
 Instr 2806 @ 0xaf60 (44896) - MOV R14, RZ ;
 Instr 2807 @ 0xaf70 (44912) - ISETP.NE.AND P0, PT, R16, 0xf, PT ;
 Instr 2808 @ 0xaf80 (44928) - IMAD.HI.U32 R12, R15, c[0x0][0x3ec], R14 ;
 Instr 2809 @ 0xaf90 (44944) - SHF.R.U32.HI R13, RZ, c[0x0][0x3f0], R12 ;
 Instr 2810 @ 0xafa0 (44960) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2811 @ 0xafb0 (44976) - IMAD R11, R11, c[0x0][0x3e8], R15 ;
 Instr 2812 @ 0xafc0 (44992) - IMAD R2, R11, c[0x0][0x4dc], R2 ;
 Instr 2813 @ 0xafd0 (45008) - @!P0 BRA 0xb4b0 ;
Basic block id 361 - num instructions 8
 Instr 2814 @ 0xafe0 (45024) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2815 @ 0xaff0 (45040) - ISETP.NE.AND P0, PT, R16, 0x10, PT ;
 Instr 2816 @ 0xb000 (45056) - IMAD.HI.U32 R14, R13, c[0x0][0x3f8], R12 ;
 Instr 2817 @ 0xb010 (45072) - SHF.R.U32.HI R15, RZ, c[0x0][0x3fc], R14 ;
 Instr 2818 @ 0xb020 (45088) - IADD3 R11, -R15, RZ, RZ ;
 Instr 2819 @ 0xb030 (45104) - IMAD R11, R11, c[0x0][0x3f4], R13 ;
 Instr 2820 @ 0xb040 (45120) - IMAD R2, R11, c[0x0][0x4e4], R2 ;
 Instr 2821 @ 0xb050 (45136) - @!P0 BRA 0xb4b0 ;
Basic block id 362 - num instructions 8
 Instr 2822 @ 0xb060 (45152) - MOV R14, RZ ;
 Instr 2823 @ 0xb070 (45168) - ISETP.NE.AND P0, PT, R16, 0x11, PT ;
 Instr 2824 @ 0xb080 (45184) - IMAD.HI.U32 R12, R15, c[0x0][0x404], R14 ;
 Instr 2825 @ 0xb090 (45200) - SHF.R.U32.HI R13, RZ, c[0x0][0x408], R12 ;
 Instr 2826 @ 0xb0a0 (45216) - IMAD.MOV R11, RZ, RZ, -R13 ;
 Instr 2827 @ 0xb0b0 (45232) - IMAD R11, R11, c[0x0][0x400], R15 ;
 Instr 2828 @ 0xb0c0 (45248) - IMAD R2, R11, c[0x0][0x4ec], R2 ;
 Instr 2829 @ 0xb0d0 (45264) - @!P0 BRA 0xb4b0 ;
Basic block id 363 - num instructions 8
 Instr 2830 @ 0xb0e0 (45280) - MOV R12, RZ ;
 Instr 2831 @ 0xb0f0 (45296) - ISETP.NE.AND P0, PT, R16, 0x12, PT ;
 Instr 2832 @ 0xb100 (45312) - IMAD.HI.U32 R14, R13, c[0x0][0x410], R12 ;
 Instr 2833 @ 0xb110 (45328) - SHF.R.U32.HI R15, RZ, c[0x0][0x414], R14 ;
 Instr 2834 @ 0xb120 (45344) - IADD3 R11, -R15, RZ, RZ ;
 Instr 2835 @ 0xb130 (45360) - IMAD R11, R11, c[0x0][0x40c], R13 ;
 Instr 2836 @ 0xb140 (45376) - IMAD R2, R11, c[0x0][0x4f4], R2 ;
 Instr 2837 @ 0xb150 (45392) - @!P0 BRA 0xb4b0 ;
Basic block id 364 - num instructions 8
 Instr 2838 @ 0xb160 (45408) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
 Instr 2839 @ 0xb170 (45424) - ISETP.NE.AND P0, PT, R16, 0x13, PT ;
 Instr 2840 @ 0xb180 (45440) - IMAD.HI.U32 R12, R15, c[0x0][0x41c], R14 ;
 Instr 2841 @ 0xb190 (45456) - SHF.R.U32.HI R13, RZ, c[0x0][0x420], R12 ;
 Instr 2842 @ 0xb1a0 (45472) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2843 @ 0xb1b0 (45488) - IMAD R11, R11, c[0x0][0x418], R15 ;
 Instr 2844 @ 0xb1c0 (45504) - IMAD R2, R11, c[0x0][0x4fc], R2 ;
 Instr 2845 @ 0xb1d0 (45520) - @!P0 BRA 0xb4b0 ;
Basic block id 365 - num instructions 8
 Instr 2846 @ 0xb1e0 (45536) - MOV R12, RZ ;
 Instr 2847 @ 0xb1f0 (45552) - ISETP.NE.AND P0, PT, R16, 0x14, PT ;
 Instr 2848 @ 0xb200 (45568) - IMAD.HI.U32 R14, R13, c[0x0][0x428], R12 ;
 Instr 2849 @ 0xb210 (45584) - SHF.R.U32.HI R15, RZ, c[0x0][0x42c], R14 ;
 Instr 2850 @ 0xb220 (45600) - IMAD.MOV R11, RZ, RZ, -R15 ;
 Instr 2851 @ 0xb230 (45616) - IMAD R11, R11, c[0x0][0x424], R13 ;
 Instr 2852 @ 0xb240 (45632) - IMAD R2, R11, c[0x0][0x504], R2 ;
 Instr 2853 @ 0xb250 (45648) - @!P0 BRA 0xb4b0 ;
Basic block id 366 - num instructions 8
 Instr 2854 @ 0xb260 (45664) - MOV R14, RZ ;
 Instr 2855 @ 0xb270 (45680) - ISETP.NE.AND P0, PT, R16, 0x15, PT ;
 Instr 2856 @ 0xb280 (45696) - IMAD.HI.U32 R12, R15, c[0x0][0x434], R14 ;
 Instr 2857 @ 0xb290 (45712) - SHF.R.U32.HI R13, RZ, c[0x0][0x438], R12 ;
 Instr 2858 @ 0xb2a0 (45728) - IADD3 R11, -R13, RZ, RZ ;
 Instr 2859 @ 0xb2b0 (45744) - IMAD R11, R11, c[0x0][0x430], R15 ;
 Instr 2860 @ 0xb2c0 (45760) - IMAD R2, R11, c[0x0][0x50c], R2 ;
 Instr 2861 @ 0xb2d0 (45776) - @!P0 BRA 0xb4b0 ;
Basic block id 367 - num instructions 8
 Instr 2862 @ 0xb2e0 (45792) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2863 @ 0xb2f0 (45808) - ISETP.NE.AND P0, PT, R16, 0x16, PT ;
 Instr 2864 @ 0xb300 (45824) - IMAD.HI.U32 R14, R13, c[0x0][0x440], R12 ;
 Instr 2865 @ 0xb310 (45840) - SHF.R.U32.HI R15, RZ, c[0x0][0x444], R14 ;
 Instr 2866 @ 0xb320 (45856) - IADD3 R11, -R15, RZ, RZ ;
 Instr 2867 @ 0xb330 (45872) - IMAD R11, R11, c[0x0][0x43c], R13 ;
 Instr 2868 @ 0xb340 (45888) - IMAD R2, R11, c[0x0][0x514], R2 ;
 Instr 2869 @ 0xb350 (45904) - @!P0 BRA 0xb4b0 ;
Basic block id 368 - num instructions 8
 Instr 2870 @ 0xb360 (45920) - MOV R14, RZ ;
 Instr 2871 @ 0xb370 (45936) - ISETP.NE.AND P0, PT, R16, 0x17, PT ;
 Instr 2872 @ 0xb380 (45952) - IMAD.HI.U32 R12, R15, c[0x0][0x44c], R14 ;
 Instr 2873 @ 0xb390 (45968) - SHF.R.U32.HI R13, RZ, c[0x0][0x450], R12 ;
 Instr 2874 @ 0xb3a0 (45984) - IMAD.MOV R11, RZ, RZ, -R13 ;
 Instr 2875 @ 0xb3b0 (46000) - IMAD R11, R11, c[0x0][0x448], R15 ;
 Instr 2876 @ 0xb3c0 (46016) - IMAD R2, R11, c[0x0][0x51c], R2 ;
 Instr 2877 @ 0xb3d0 (46032) - @!P0 BRA 0xb4b0 ;
Basic block id 369 - num instructions 13
 Instr 2878 @ 0xb3e0 (46048) - ISETP.NE.AND P0, PT, R16, 0x18, PT ;
 Instr 2879 @ 0xb3f0 (46064) - MOV R12, RZ ;
 Instr 2880 @ 0xb400 (46080) - IMAD.HI.U32 R14, R13, c[0x0][0x458], R12 ;
 Instr 2881 @ 0xb410 (46096) - SHF.R.U32.HI R15, RZ, c[0x0][0x45c], R14 ;
 Instr 2882 @ 0xb420 (46112) - @P0 MOV R14, RZ ;
 Instr 2883 @ 0xb430 (46128) - IMAD.MOV R11, RZ, RZ, -R15.reuse ;
 Instr 2884 @ 0xb440 (46144) - @P0 IMAD.HI.U32 R12, R15, c[0x0][0x464], R14 ;
 Instr 2885 @ 0xb450 (46160) - IMAD R11, R11, c[0x0][0x454], R13 ;
 Instr 2886 @ 0xb460 (46176) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x468], R12 ;
 Instr 2887 @ 0xb470 (46192) - IMAD R2, R11, c[0x0][0x524], R2 ;
 Instr 2888 @ 0xb480 (46208) - @P0 IADD3 R13, -R12, RZ, RZ ;
 Instr 2889 @ 0xb490 (46224) - @P0 IMAD R13, R13, c[0x0][0x460], R15 ;
 Instr 2890 @ 0xb4a0 (46240) - @P0 IMAD R2, R13, c[0x0][0x52c], R2 ;
Basic block id 370 - num instructions 7
 Instr 2891 @ 0xb4b0 (46256) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x180], PT ;
 Instr 2892 @ 0xb4c0 (46272) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2893 @ 0xb4d0 (46288) - BSSY B0, 0xb580 ;
 Instr 2894 @ 0xb4e0 (46304) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 2895 @ 0xb4f0 (46320) - ISETP.NE.AND P0, PT, R5, RZ, P0 ;
 Instr 2896 @ 0xb500 (46336) - ISETP.GE.OR P0, PT, R7, c[0x0][0x170], P0 ;
 Instr 2897 @ 0xb510 (46352) - @P0 BRA 0xb570 ;
Basic block id 371 - num instructions 5
 Instr 2898 @ 0xb520 (46368) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x184], PT ;
 Instr 2899 @ 0xb530 (46384) - MOV R6, 0x1 ;
 Instr 2900 @ 0xb540 (46400) - @P1 ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 2901 @ 0xb550 (46416) - @P1 SEL R7, RZ, 0x1, P0 ;
 Instr 2902 @ 0xb560 (46432) - @P1 PRMT R6, R7, 0x7610, R6 ;
Basic block id 372 - num instructions 19
 Instr 2903 @ 0xb570 (46448) - BSYNC B0 ;
 Instr 2904 @ 0xb580 (46464) - PRMT R6, R6, 0x9910, RZ ;
 Instr 2905 @ 0xb590 (46480) - ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 2906 @ 0xb5a0 (46496) - ISETP.NE.OR P0, PT, RZ, c[0x0][0x180], !P1 ;
 Instr 2907 @ 0xb5b0 (46512) - @P1 S2R R6, SR_CTAID.Y ;
 Instr 2908 @ 0xb5c0 (46528) - @P1 IMAD.MOV.U32 R7, RZ, RZ, 0x4 ;
 Instr 2909 @ 0xb5d0 (46544) - @P1 IMAD R6, R3, c[0x0][0x10], R6 ;
 Instr 2910 @ 0xb5e0 (46560) - @!P0 IMAD R6, R6, c[0x0][0x0], R5 ;
 Instr 2911 @ 0xb5f0 (46576) - LOP3.LUT P0, RZ, R5, R0, RZ, 0xfc, !PT ;
 Instr 2912 @ 0xb600 (46592) - @P1 IMAD.WIDE.U32 R6, R6, R7, c[0x0][0x558] ;
 Instr 2913 @ 0xb610 (46608) - @P1 STG.E.SYS [R6], R4 ;
 Instr 2914 @ 0xb620 (46624) - MEMBAR.SC.GPU ;
 Instr 2915 @ 0xb630 (46640) - ERRBAR;
 Instr 2916 @ 0xb640 (46656) - CCTL.IVALL ;
 Instr 2917 @ 0xb650 (46672) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2918 @ 0xb660 (46688) - BSSY B0, 0xb7e0 ;
 Instr 2919 @ 0xb670 (46704) - BAR.SYNC 0x0 ;
 Instr 2920 @ 0xb680 (46720) - BAR.SYNC 0x0 ;
 Instr 2921 @ 0xb690 (46736) - @P0 BRA 0xb7d0 ;
Basic block id 373 - num instructions 19
 Instr 2922 @ 0xb6a0 (46752) - S2R R7, SR_LANEID ;
 Instr 2923 @ 0xb6b0 (46768) - VOTEU.ANY UR4, UPT, PT ;
 Instr 2924 @ 0xb6c0 (46784) - MOV R6, 0x4 ;
 Instr 2925 @ 0xb6d0 (46800) - FLO.U32 R12, UR4 ;
 Instr 2926 @ 0xb6e0 (46816) - POPC R11, UR4 ;
 Instr 2927 @ 0xb6f0 (46832) - ISETP.EQ.U32.AND P0, PT, R12, R7, PT ;
 Instr 2928 @ 0xb700 (46848) - IMAD.WIDE.U32 R6, R3, R6, c[0x0][0x560] ;
 Instr 2929 @ 0xb710 (46864) - @P0 ATOMG.E.ADD.STRONG.GPU PT, R7, [R6], R11 ;
 Instr 2930 @ 0xb720 (46880) - ULDC UR5, c[0x0][0x10] ;
 Instr 2931 @ 0xb730 (46896) - S2R R13, SR_LTMASK ;
 Instr 2932 @ 0xb740 (46912) - LOP3.LUT R13, R13, UR4, RZ, 0xc0, !PT ;
 Instr 2933 @ 0xb750 (46928) - UMOV UR4, 0x1 ;
 Instr 2934 @ 0xb760 (46944) - UIADD3 UR4, -UR4, UR5, URZ ;
 Instr 2935 @ 0xb770 (46960) - POPC R13, R13 ;
 Instr 2936 @ 0xb780 (46976) - SHFL.IDX PT, R4, R7, R12, 0x1f ;
 Instr 2937 @ 0xb790 (46992) - IADD3 R4, R4, R13, RZ ;
 Instr 2938 @ 0xb7a0 (47008) - ISETP.NE.AND P0, PT, R4, UR4, PT ;
 Instr 2939 @ 0xb7b0 (47024) - SEL R4, RZ, 0x1, P0 ;
 Instr 2940 @ 0xb7c0 (47040) - STS.U8 [RZ], R4 ;
Basic block id 374 - num instructions 7
 Instr 2941 @ 0xb7d0 (47056) - BSYNC B0 ;
 Instr 2942 @ 0xb7e0 (47072) - BAR.SYNC 0x0 ;
 Instr 2943 @ 0xb7f0 (47088) - LDS.U.U8 R4, [RZ] ;
 Instr 2944 @ 0xb800 (47104) - IADD3 R6, P2, R2, c[0x0][0x540], RZ ;
 Instr 2945 @ 0xb810 (47120) - IMAD.X R7, RZ, RZ, c[0x0][0x544], P2 ;
 Instr 2946 @ 0xb820 (47136) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 2947 @ 0xb830 (47152) - @!P0 EXIT ;
Basic block id 375 - num instructions 8
 Instr 2948 @ 0xb840 (47168) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x180], PT ;
 Instr 2949 @ 0xb850 (47184) - MOV R11, c[0x0][0x164] ;
 Instr 2950 @ 0xb860 (47200) - MEMBAR.SC.GPU ;
 Instr 2951 @ 0xb870 (47216) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2952 @ 0xb880 (47232) - BSSY B0, 0xba90 ;
 Instr 2953 @ 0xb890 (47248) - ERRBAR;
 Instr 2954 @ 0xb8a0 (47264) - CCTL.IVALL ;
 Instr 2955 @ 0xb8b0 (47280) - @!P0 BRA 0xb9c0 ;
Basic block id 376 - num instructions 5
 Instr 2956 @ 0xb8c0 (47296) - IMAD R4, R0, c[0x0][0x0], R5 ;
 Instr 2957 @ 0xb8d0 (47312) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2958 @ 0xb8e0 (47328) - BSSY B1, 0xb9b0 ;
 Instr 2959 @ 0xb8f0 (47344) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x17c], PT ;
 Instr 2960 @ 0xb900 (47360) - @P0 BRA 0xb9a0 ;
Basic block id 377 - num instructions 1
 Instr 2961 @ 0xb910 (47376) - MOV R13, 0x4 ;
Basic block id 378 - num instructions 8
 Instr 2962 @ 0xb920 (47392) - IMAD R12, R3, c[0x0][0x10], R4 ;
 Instr 2963 @ 0xb930 (47408) - IMAD.WIDE.U32 R12, R12, R13, c[0x0][0x558] ;
 Instr 2964 @ 0xb940 (47424) - LDG.E.SYS R12, [R12] ;
 Instr 2965 @ 0xb950 (47440) - IMAD.MOV.U32 R15, RZ, RZ, c[0x0][0x0] ;
 Instr 2966 @ 0xb960 (47456) - IMAD R4, R15, c[0x0][0x4], R4 ;
 Instr 2967 @ 0xb970 (47472) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x17c], PT ;
 Instr 2968 @ 0xb980 (47488) - FADD R11, R12, R11 ;
 Instr 2969 @ 0xb990 (47504) - @!P0 BRA 0xb910 ;
Basic block id 379 - num instructions 2
 Instr 2970 @ 0xb9a0 (47520) - BSYNC B1 ;
 Instr 2971 @ 0xb9b0 (47536) - BRA 0xba80 ;
Basic block id 380 - num instructions 2
 Instr 2972 @ 0xb9c0 (47552) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x17c], PT ;
 Instr 2973 @ 0xb9d0 (47568) - @P0 BRA 0xba80 ;
Basic block id 381 - num instructions 1
 Instr 2974 @ 0xb9e0 (47584) - MOV R4, R0 ;
Basic block id 382 - num instructions 9
 Instr 2975 @ 0xb9f0 (47600) - IMAD R12, R3, c[0x0][0x10], R4 ;
 Instr 2976 @ 0xba00 (47616) - MOV R13, 0x4 ;
 Instr 2977 @ 0xba10 (47632) - IMAD R12, R12, c[0x0][0x0], R5 ;
 Instr 2978 @ 0xba20 (47648) - IMAD.WIDE.U32 R12, R12, R13, c[0x0][0x558] ;
 Instr 2979 @ 0xba30 (47664) - LDG.E.SYS R12, [R12] ;
 Instr 2980 @ 0xba40 (47680) - IADD3 R4, R4, c[0x0][0x4], RZ ;
 Instr 2981 @ 0xba50 (47696) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x17c], PT ;
 Instr 2982 @ 0xba60 (47712) - FADD R11, R12, R11 ;
 Instr 2983 @ 0xba70 (47728) - @!P0 BRA 0xb9f0 ;
Basic block id 383 - num instructions 8
 Instr 2984 @ 0xba80 (47744) - BSYNC B0 ;
 Instr 2985 @ 0xba90 (47760) - IMAD R12, R0, c[0x0][0x0], R5 ;
 Instr 2986 @ 0xbaa0 (47776) - ULDC UR4, c[0x0][0x4] ;
 Instr 2987 @ 0xbab0 (47792) - ISETP.NE.AND P2, PT, RZ, c[0x0][0x180], PT ;
 Instr 2988 @ 0xbac0 (47808) - USHF.R.U32.HI UR4, URZ, 0x1, UR4 ;
 Instr 2989 @ 0xbad0 (47824) - STS [R12.X4+0x10], R11 ;
 Instr 2990 @ 0xbae0 (47840) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 2991 @ 0xbaf0 (47856) - @!P0 BRA 0xbbc0 ;
Basic block id 384 - num instructions 1
 Instr 2992 @ 0xbb00 (47872) - IMAD.U32 R3, RZ, RZ, UR4 ;
Basic block id 385 - num instructions 11
 Instr 2993 @ 0xbb10 (47888) - IADD3 R4, R0, R3, RZ ;
 Instr 2994 @ 0xbb20 (47904) - BAR.SYNC 0x0 ;
 Instr 2995 @ 0xbb30 (47920) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x4], PT ;
 Instr 2996 @ 0xbb40 (47936) - ISETP.GE.U32.OR P0, PT, R0, R3, P0 ;
 Instr 2997 @ 0xbb50 (47952) - @!P0 IMAD R4, R4, c[0x0][0x0], R5 ;
 Instr 2998 @ 0xbb60 (47968) - @!P0 LDS.U R4, [R4.X4+0x10] ;
 Instr 2999 @ 0xbb70 (47984) - @!P0 FADD R11, R11, R4 ;
 Instr 3000 @ 0xbb80 (48000) - @!P0 STS [R12.X4+0x10], R11 ;
 Instr 3001 @ 0xbb90 (48016) - ISETP.GT.AND P0, PT, R3, 0x1, PT ;
 Instr 3002 @ 0xbba0 (48032) - SHF.R.S32.HI R3, RZ, 0x1, R3 ;
 Instr 3003 @ 0xbbb0 (48048) - @P0 BRA 0xbb10 ;
Basic block id 386 - num instructions 2
 Instr 3004 @ 0xbbc0 (48064) - LEA R13, R12, 0x10, 0x2 ;
 Instr 3005 @ 0xbbd0 (48080) - @!P2 BRA 0xbde0 ;
Basic block id 387 - num instructions 4
 Instr 3006 @ 0xbbe0 (48096) - MOV R3, c[0x0][0x0] ;
 Instr 3007 @ 0xbbf0 (48112) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x0] ;
 Instr 3008 @ 0xbc00 (48128) - ISETP.GT.AND P0, PT, R3, 0x20, PT ;
 Instr 3009 @ 0xbc10 (48144) - @!P0 BRA 0xbd50 ;
Basic block id 388 - num instructions 6
 Instr 3010 @ 0xbc20 (48160) - LEA.HI R3, R3, c[0x0][0x0], RZ, 0x1 ;
 Instr 3011 @ 0xbc30 (48176) - STS [R12.X4+0x10], R11 ;
 Instr 3012 @ 0xbc40 (48192) - MOV R0, 0x20 ;
 Instr 3013 @ 0xbc50 (48208) - SHF.R.S32.HI R3, RZ, 0x1, R3 ;
 Instr 3014 @ 0xbc60 (48224) - ISETP.GE.AND P0, PT, R3, 0x20, PT ;
 Instr 3015 @ 0xbc70 (48240) - @!P0 BRA 0xbd50 ;
Basic block id 389 - num instructions 1
 Instr 3016 @ 0xbc80 (48256) - MOV R0, R3 ;
Basic block id 390 - num instructions 11
 Instr 3017 @ 0xbc90 (48272) - IMAD.IADD R3, R5, 0x1, R0 ;
 Instr 3018 @ 0xbca0 (48288) - BAR.SYNC 0x0 ;
 Instr 3019 @ 0xbcb0 (48304) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x0], PT ;
 Instr 3020 @ 0xbcc0 (48320) - ISETP.GE.U32.OR P0, PT, R5, R0, P0 ;
 Instr 3021 @ 0xbcd0 (48336) - @!P0 LEA R3, R0, R13, 0x2 ;
 Instr 3022 @ 0xbce0 (48352) - SHF.R.S32.HI R0, RZ, 0x1, R0 ;
 Instr 3023 @ 0xbcf0 (48368) - @!P0 LDS.U R4, [R3] ;
 Instr 3024 @ 0xbd00 (48384) - @!P0 FADD R11, R11, R4 ;
 Instr 3025 @ 0xbd10 (48400) - @!P0 STS [R12.X4+0x10], R11 ;
 Instr 3026 @ 0xbd20 (48416) - ISETP.GE.AND P0, PT, R0, 0x20, PT ;
 Instr 3027 @ 0xbd30 (48432) - @P0 BRA 0xbc90 ;
Basic block id 391 - num instructions 1
 Instr 3028 @ 0xbd40 (48448) - MOV R0, 0x20 ;
Basic block id 392 - num instructions 3
 Instr 3029 @ 0xbd50 (48464) - BAR.SYNC 0x0 ;
 Instr 3030 @ 0xbd60 (48480) - ISETP.GE.AND P0, PT, R0, 0x2, PT ;
 Instr 3031 @ 0xbd70 (48496) - @!P0 BRA 0xbde0 ;
Basic block id 393 - num instructions 1
 Instr 3032 @ 0xbd80 (48512) - IMAD.MOV.U32 R3, RZ, RZ, 0x1 ;
Basic block id 394 - num instructions 5
 Instr 3033 @ 0xbd90 (48528) - SHFL.DOWN PT, R4, R11, R3, 0x1f ;
 Instr 3034 @ 0xbda0 (48544) - SHF.L.U32 R3, R3, 0x1, RZ ;
 Instr 3035 @ 0xbdb0 (48560) - ISETP.GE.AND P0, PT, R3, R0, PT ;
 Instr 3036 @ 0xbdc0 (48576) - FADD R11, R4, R11 ;
 Instr 3037 @ 0xbdd0 (48592) - @!P0 BRA 0xbd90 ;
Basic block id 395 - num instructions 1
 Instr 3038 @ 0xbde0 (48608) - @!P1 EXIT ;
Basic block id 396 - num instructions 4
 Instr 3039 @ 0xbdf0 (48624) - ISETP.NE.U32.AND P0, PT, R8, RZ, PT ;
 Instr 3040 @ 0xbe00 (48640) - ULDC.U8 UR36, c[0x0][0x570] ;
 Instr 3041 @ 0xbe10 (48656) - ISETP.NE.AND.EX P0, PT, R10, RZ, PT, P0 ;
 Instr 3042 @ 0xbe20 (48672) - @!P0 BRA 0xc060 ;
Basic block id 397 - num instructions 2
 Instr 3043 @ 0xbe30 (48688) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3044 @ 0xbe40 (48704) - @!P0 BRA 0xbe70 ;
Basic block id 398 - num instructions 2
 Instr 3045 @ 0xbe50 (48720) - LDG.E.SYS R0, [R8] ;
 Instr 3046 @ 0xbe60 (48736) - FADD R11, R11, R0 ;
Basic block id 399 - num instructions 3
 Instr 3047 @ 0xbe70 (48752) - ULDC.U8 UR4, c[0x0][0x571] ;
 Instr 3048 @ 0xbe80 (48768) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3049 @ 0xbe90 (48784) - @!P0 BRA 0xc040 ;
Basic block id 400 - num instructions 5
 Instr 3050 @ 0xbea0 (48800) - FMUL R11, R11, c[0x0][0x160] ;
 Instr 3051 @ 0xbeb0 (48816) - MOV R0, 0x1 ;
 Instr 3052 @ 0xbec0 (48832) - ISETP.NE.AND P0, PT, R0, c[0x0][0x574], PT ;
 Instr 3053 @ 0xbed0 (48848) - F2F.F16.F32 R17, R11 ;
 Instr 3054 @ 0xbee0 (48864) - @!P0 BRA 0xc010 ;
Basic block id 401 - num instructions 18
 Instr 3055 @ 0xbef0 (48880) - UMOV UR8, 0xa594200 ;
 Instr 3056 @ 0xbf00 (48896) - IMAD.MOV.U32 R8, RZ, RZ, 0x2ea ;
 Instr 3057 @ 0xbf10 (48912) - UMOV UR9, 0x7f89 ;
 Instr 3058 @ 0xbf20 (48928) - MOV R12, 0x1 ;
 Instr 3059 @ 0xbf30 (48944) - UMOV UR6, 0xa593f00 ;
 Instr 3060 @ 0xbf40 (48960) - MOV R13, RZ ;
 Instr 3061 @ 0xbf50 (48976) - UMOV UR7, 0x7f89 ;
 Instr 3062 @ 0xbf60 (48992) - IMAD.U32 R4, RZ, RZ, UR8 ;
 Instr 3063 @ 0xbf70 (49008) - UMOV UR4, 0xa58e400 ;
 Instr 3064 @ 0xbf80 (49024) - MOV R5, UR9 ;
 Instr 3065 @ 0xbf90 (49040) - UMOV UR5, 0x7f89 ;
 Instr 3066 @ 0xbfa0 (49056) - MOV R6, UR6 ;
 Instr 3067 @ 0xbfb0 (49072) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3068 @ 0xbfc0 (49088) - MOV R10, UR4 ;
 Instr 3069 @ 0xbfd0 (49104) - MOV R11, UR5 ;
 Instr 3070 @ 0xbfe0 (49120) - MOV R20, 0xfa7c1710 ;
 Instr 3071 @ 0xbff0 (49136) - MOV R21, 0x7f88 ;
 Instr 3072 @ 0xc000 (49152) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 402 - num instructions 3
 Instr 3073 @ 0xc010 (49168) - ULDC.64 UR4, c[0x0][0x540] ;
 Instr 3074 @ 0xc020 (49184) - STG.E.U16.SYS [R2.U32+UR4], R17 ;
 Instr 3075 @ 0xc030 (49200) - EXIT ;
Basic block id 403 - num instructions 2
 Instr 3076 @ 0xc040 (49216) - STG.E.SYS [R8], R11 ;
 Instr 3077 @ 0xc050 (49232) - EXIT ;
Basic block id 404 - num instructions 2
 Instr 3078 @ 0xc060 (49248) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3079 @ 0xc070 (49264) - @!P0 BRA 0xc0b0 ;
Basic block id 405 - num instructions 3
 Instr 3080 @ 0xc080 (49280) - LDG.E.U16.SYS R0, [R6] ;
 Instr 3081 @ 0xc090 (49296) - HADD2.F32 R0, R0.H0_H0, -RZ.H0_H0 ;
 Instr 3082 @ 0xc0a0 (49312) - FADD R11, R11, R0 ;
Basic block id 406 - num instructions 3
 Instr 3083 @ 0xc0b0 (49328) - ULDC.U8 UR4, c[0x0][0x571] ;
 Instr 3084 @ 0xc0c0 (49344) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3085 @ 0xc0d0 (49360) - @!P0 BRA 0xc280 ;
Basic block id 407 - num instructions 5
 Instr 3086 @ 0xc0e0 (49376) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 3087 @ 0xc0f0 (49392) - FMUL R11, R11, c[0x0][0x160] ;
 Instr 3088 @ 0xc100 (49408) - ISETP.NE.AND P0, PT, R0, c[0x0][0x574], PT ;
 Instr 3089 @ 0xc110 (49424) - F2F.F16.F32 R17, R11 ;
 Instr 3090 @ 0xc120 (49440) - @!P0 BRA 0xc250 ;
Basic block id 408 - num instructions 18
 Instr 3091 @ 0xc130 (49456) - UMOV UR4, 0xa594200 ;
 Instr 3092 @ 0xc140 (49472) - MOV R8, 0x2ea ;
 Instr 3093 @ 0xc150 (49488) - UMOV UR5, 0x7f89 ;
 Instr 3094 @ 0xc160 (49504) - MOV R12, 0x1 ;
 Instr 3095 @ 0xc170 (49520) - UMOV UR6, 0xa593f00 ;
 Instr 3096 @ 0xc180 (49536) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3097 @ 0xc190 (49552) - UMOV UR7, 0x7f89 ;
 Instr 3098 @ 0xc1a0 (49568) - MOV R4, UR4 ;
 Instr 3099 @ 0xc1b0 (49584) - UMOV UR8, 0xa58e400 ;
 Instr 3100 @ 0xc1c0 (49600) - MOV R5, UR5 ;
 Instr 3101 @ 0xc1d0 (49616) - UMOV UR9, 0x7f89 ;
 Instr 3102 @ 0xc1e0 (49632) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3103 @ 0xc1f0 (49648) - MOV R7, UR7 ;
 Instr 3104 @ 0xc200 (49664) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3105 @ 0xc210 (49680) - MOV R10, UR8 ;
 Instr 3106 @ 0xc220 (49696) - MOV R20, 0xfa7c1950 ;
 Instr 3107 @ 0xc230 (49712) - MOV R21, 0x7f88 ;
 Instr 3108 @ 0xc240 (49728) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 409 - num instructions 3
 Instr 3109 @ 0xc250 (49744) - ULDC.64 UR4, c[0x0][0x540] ;
 Instr 3110 @ 0xc260 (49760) - STG.E.U16.SYS [R2.U32+UR4], R17 ;
 Instr 3111 @ 0xc270 (49776) - EXIT ;
Basic block id 410 - num instructions 3
 Instr 3112 @ 0xc280 (49792) - F2F.F16.F32 R11, R11 ;
 Instr 3113 @ 0xc290 (49808) - STG.E.U16.SYS [R6], R11 ;
 Instr 3114 @ 0xc2a0 (49824) - EXIT ;
Basic block id 411 - num instructions 2
 Instr 3115 @ 0xc2b0 (49840) - ISETP.GE.AND P0, PT, R3, c[0x0][0x170], PT ;
 Instr 3116 @ 0xc2c0 (49856) - @P0 EXIT ;
Basic block id 412 - num instructions 3
 Instr 3117 @ 0xc2d0 (49872) - ISETP.NE.AND P1, PT, R5, RZ, PT ;
 Instr 3118 @ 0xc2e0 (49888) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x180], PT ;
 Instr 3119 @ 0xc2f0 (49904) - @P0 EXIT P1 ;
Basic block id 413 - num instructions 3
 Instr 3120 @ 0xc300 (49920) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
 Instr 3121 @ 0xc310 (49936) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x184], PT ;
 Instr 3122 @ 0xc320 (49952) - @P0 EXIT P1 ;
Basic block id 414 - num instructions 4
 Instr 3123 @ 0xc330 (49968) - ISETP.NE.U32.AND P0, PT, R8, RZ, PT ;
 Instr 3124 @ 0xc340 (49984) - ULDC.U8 UR36, c[0x0][0x570] ;
 Instr 3125 @ 0xc350 (50000) - ISETP.NE.AND.EX P0, PT, R10, RZ, PT, P0 ;
 Instr 3126 @ 0xc360 (50016) - @!P0 BRA 0xc5a0 ;
Basic block id 415 - num instructions 2
 Instr 3127 @ 0xc370 (50032) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3128 @ 0xc380 (50048) - @!P0 BRA 0xc3b0 ;
Basic block id 416 - num instructions 2
 Instr 3129 @ 0xc390 (50064) - LDG.E.SYS R3, [R8] ;
 Instr 3130 @ 0xc3a0 (50080) - FADD R4, R4, R3 ;
Basic block id 417 - num instructions 3
 Instr 3131 @ 0xc3b0 (50096) - ULDC.U8 UR4, c[0x0][0x571] ;
 Instr 3132 @ 0xc3c0 (50112) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3133 @ 0xc3d0 (50128) - @!P0 BRA 0xc580 ;
Basic block id 418 - num instructions 5
 Instr 3134 @ 0xc3e0 (50144) - FMUL R4, R4, c[0x0][0x160] ;
 Instr 3135 @ 0xc3f0 (50160) - MOV R0, 0x1 ;
 Instr 3136 @ 0xc400 (50176) - ISETP.NE.AND P0, PT, R0, c[0x0][0x574], PT ;
 Instr 3137 @ 0xc410 (50192) - F2F.F16.F32 R17, R4 ;
 Instr 3138 @ 0xc420 (50208) - @!P0 BRA 0xc550 ;
Basic block id 419 - num instructions 18
 Instr 3139 @ 0xc430 (50224) - UMOV UR4, 0xa594200 ;
 Instr 3140 @ 0xc440 (50240) - MOV R8, 0x2ea ;
 Instr 3141 @ 0xc450 (50256) - UMOV UR5, 0x7f89 ;
 Instr 3142 @ 0xc460 (50272) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3143 @ 0xc470 (50288) - UMOV UR6, 0xa593f00 ;
 Instr 3144 @ 0xc480 (50304) - MOV R13, RZ ;
 Instr 3145 @ 0xc490 (50320) - UMOV UR7, 0x7f89 ;
 Instr 3146 @ 0xc4a0 (50336) - MOV R4, UR4 ;
 Instr 3147 @ 0xc4b0 (50352) - UMOV UR8, 0xa58e400 ;
 Instr 3148 @ 0xc4c0 (50368) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3149 @ 0xc4d0 (50384) - UMOV UR9, 0x7f89 ;
 Instr 3150 @ 0xc4e0 (50400) - MOV R6, UR6 ;
 Instr 3151 @ 0xc4f0 (50416) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3152 @ 0xc500 (50432) - MOV R7, UR7 ;
 Instr 3153 @ 0xc510 (50448) - MOV R11, UR9 ;
 Instr 3154 @ 0xc520 (50464) - MOV R20, 0xfa7c1c50 ;
 Instr 3155 @ 0xc530 (50480) - MOV R21, 0x7f88 ;
 Instr 3156 @ 0xc540 (50496) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 420 - num instructions 3
 Instr 3157 @ 0xc550 (50512) - ULDC.64 UR4, c[0x0][0x540] ;
 Instr 3158 @ 0xc560 (50528) - STG.E.U16.SYS [R16.U32+UR4], R17 ;
 Instr 3159 @ 0xc570 (50544) - EXIT ;
Basic block id 421 - num instructions 2
 Instr 3160 @ 0xc580 (50560) - STG.E.SYS [R8], R4 ;
 Instr 3161 @ 0xc590 (50576) - EXIT ;
Basic block id 422 - num instructions 2
 Instr 3162 @ 0xc5a0 (50592) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3163 @ 0xc5b0 (50608) - @!P0 BRA 0xc5f0 ;
Basic block id 423 - num instructions 3
 Instr 3164 @ 0xc5c0 (50624) - LDG.E.U16.SYS R0, [R6] ;
 Instr 3165 @ 0xc5d0 (50640) - HADD2.F32 R3, R0.H0_H0, -RZ.H0_H0 ;
 Instr 3166 @ 0xc5e0 (50656) - FADD R4, R4, R3 ;
Basic block id 424 - num instructions 3
 Instr 3167 @ 0xc5f0 (50672) - ULDC.U8 UR4, c[0x0][0x571] ;
 Instr 3168 @ 0xc600 (50688) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3169 @ 0xc610 (50704) - @!P0 BRA 0xc7c0 ;
Basic block id 425 - num instructions 5
 Instr 3170 @ 0xc620 (50720) - FMUL R4, R4, c[0x0][0x160] ;
 Instr 3171 @ 0xc630 (50736) - MOV R0, 0x1 ;
 Instr 3172 @ 0xc640 (50752) - ISETP.NE.AND P0, PT, R0, c[0x0][0x574], PT ;
 Instr 3173 @ 0xc650 (50768) - F2F.F16.F32 R17, R4 ;
 Instr 3174 @ 0xc660 (50784) - @!P0 BRA 0xc790 ;
Basic block id 426 - num instructions 18
 Instr 3175 @ 0xc670 (50800) - UMOV UR4, 0xa594200 ;
 Instr 3176 @ 0xc680 (50816) - IMAD.MOV.U32 R8, RZ, RZ, 0x2ea ;
 Instr 3177 @ 0xc690 (50832) - UMOV UR5, 0x7f89 ;
 Instr 3178 @ 0xc6a0 (50848) - MOV R12, 0x1 ;
 Instr 3179 @ 0xc6b0 (50864) - UMOV UR6, 0xa593f00 ;
 Instr 3180 @ 0xc6c0 (50880) - MOV R13, RZ ;
 Instr 3181 @ 0xc6d0 (50896) - UMOV UR7, 0x7f89 ;
 Instr 3182 @ 0xc6e0 (50912) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3183 @ 0xc6f0 (50928) - UMOV UR8, 0xa58e400 ;
 Instr 3184 @ 0xc700 (50944) - MOV R5, UR5 ;
 Instr 3185 @ 0xc710 (50960) - UMOV UR9, 0x7f89 ;
 Instr 3186 @ 0xc720 (50976) - MOV R6, UR6 ;
 Instr 3187 @ 0xc730 (50992) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3188 @ 0xc740 (51008) - MOV R10, UR8 ;
 Instr 3189 @ 0xc750 (51024) - MOV R11, UR9 ;
 Instr 3190 @ 0xc760 (51040) - MOV R20, 0xfa7c1e90 ;
 Instr 3191 @ 0xc770 (51056) - MOV R21, 0x7f88 ;
 Instr 3192 @ 0xc780 (51072) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 427 - num instructions 3
 Instr 3193 @ 0xc790 (51088) - ULDC.64 UR4, c[0x0][0x540] ;
 Instr 3194 @ 0xc7a0 (51104) - STG.E.U16.SYS [R16.U32+UR4], R17 ;
 Instr 3195 @ 0xc7b0 (51120) - EXIT ;
Basic block id 428 - num instructions 3
 Instr 3196 @ 0xc7c0 (51136) - F2F.F16.F32 R3, R4 ;
 Instr 3197 @ 0xc7d0 (51152) - STG.E.U16.SYS [R6], R3 ;
 Instr 3198 @ 0xc7e0 (51168) - EXIT ;
Basic block id 429 - num instructions 69
 Instr 3199 @ 0xc7f0 (51184) - IMAD.MOV.U32 R22, RZ, RZ, R8 ;
 Instr 3200 @ 0xc800 (51200) - MOV R23, R9 ;
 Instr 3201 @ 0xc810 (51216) - I2F.U64.RP R15, R22 ;
 Instr 3202 @ 0xc820 (51232) - MUFU.RCP R15, R15 ;
 Instr 3203 @ 0xc830 (51248) - IADD3 R18, R15, 0x1ffffffe, RZ ;
 Instr 3204 @ 0xc840 (51264) - F2I.U64.TRUNC R18, R18 ;
 Instr 3205 @ 0xc850 (51280) - IMAD.WIDE.U32 R20, R18, R8, RZ ;
 Instr 3206 @ 0xc860 (51296) - IMAD R17, R18.reuse, R9, R21 ;
 Instr 3207 @ 0xc870 (51312) - IADD3 R25, P0, RZ, -R20, RZ ;
 Instr 3208 @ 0xc880 (51328) - IMAD.MOV.U32 R21, RZ, RZ, R18 ;
 Instr 3209 @ 0xc890 (51344) - IMAD R17, R19, R8, R17 ;
 Instr 3210 @ 0xc8a0 (51360) - IMAD.HI.U32 R20, R18, R25, RZ ;
 Instr 3211 @ 0xc8b0 (51376) - IADD3.X R17, RZ, ~R17, RZ, P0, !PT ;
 Instr 3212 @ 0xc8c0 (51392) - IMAD.WIDE.U32 R20, P0, R18, R17, R20 ;
 Instr 3213 @ 0xc8d0 (51408) - IMAD R23, R19.reuse, R17, RZ ;
 Instr 3214 @ 0xc8e0 (51424) - IMAD.HI.U32 R20, P1, R19, R25, R20 ;
 Instr 3215 @ 0xc8f0 (51440) - IMAD.HI.U32 R15, R19, R17, RZ ;
 Instr 3216 @ 0xc900 (51456) - IADD3 R21, P3, R23, R20, RZ ;
 Instr 3217 @ 0xc910 (51472) - IADD3.X R15, R15, R19, RZ, P0, !PT ;
 Instr 3218 @ 0xc920 (51488) - IMAD.WIDE.U32 R18, R21, R8, RZ ;
 Instr 3219 @ 0xc930 (51504) - IADD3.X R15, RZ, RZ, R15, P3, P1 ;
 Instr 3220 @ 0xc940 (51520) - IMAD R17, R21, R9, R19 ;
 Instr 3221 @ 0xc950 (51536) - IADD3 R19, P0, RZ, -R18, RZ ;
 Instr 3222 @ 0xc960 (51552) - IMAD R17, R15, R8, R17 ;
 Instr 3223 @ 0xc970 (51568) - IMAD.HI.U32 R20, R21, R19, RZ ;
 Instr 3224 @ 0xc980 (51584) - IADD3.X R18, RZ, ~R17, RZ, P0, !PT ;
 Instr 3225 @ 0xc990 (51600) - IMAD.WIDE.U32 R20, P0, R21, R18, R20 ;
 Instr 3226 @ 0xc9a0 (51616) - IMAD R22, R15.reuse, R18, RZ ;
 Instr 3227 @ 0xc9b0 (51632) - IMAD.HI.U32 R17, P1, R15, R19, R20 ;
 Instr 3228 @ 0xc9c0 (51648) - MOV R19, RZ ;
 Instr 3229 @ 0xc9d0 (51664) - IMAD.HI.U32 R18, R15, R18, RZ ;
 Instr 3230 @ 0xc9e0 (51680) - IADD3 R17, P3, R22, R17, RZ ;
 Instr 3231 @ 0xc9f0 (51696) - IMAD.X R15, R18, 0x1, R15, P0 ;
 Instr 3232 @ 0xca00 (51712) - IMAD.HI.U32 R18, R17, R14, RZ ;
 Instr 3233 @ 0xca10 (51728) - IADD3.X R15, RZ, RZ, R15, P3, P1 ;
 Instr 3234 @ 0xca20 (51744) - IMAD.WIDE.U32 R18, R17, R13, R18 ;
 Instr 3235 @ 0xca30 (51760) - IMAD R20, R15.reuse, R13, RZ ;
 Instr 3236 @ 0xca40 (51776) - IMAD.HI.U32 R17, P0, R15, R14, R18 ;
 Instr 3237 @ 0xca50 (51792) - IMAD.HI.U32 R15, R15, R13, RZ ;
 Instr 3238 @ 0xca60 (51808) - IADD3 R17, P1, R20, R17, RZ ;
 Instr 3239 @ 0xca70 (51824) - IADD3.X R15, R15, RZ, RZ, P0, !PT ;
 Instr 3240 @ 0xca80 (51840) - IMAD.WIDE.U32 R18, R17, R8, RZ ;
 Instr 3241 @ 0xca90 (51856) - IMAD.X R15, RZ, RZ, R15, P1 ;
 Instr 3242 @ 0xcaa0 (51872) - IADD3 R21, P1, -R18, R14, RZ ;
 Instr 3243 @ 0xcab0 (51888) - IMAD R19, R17, R9, R19 ;
 Instr 3244 @ 0xcac0 (51904) - ISETP.GE.U32.AND P0, PT, R21, R8.reuse, PT ;
 Instr 3245 @ 0xcad0 (51920) - IMAD R14, R15, R8, R19 ;
 Instr 3246 @ 0xcae0 (51936) - IADD3.X R22, ~R14, R13, RZ, P1, !PT ;
 Instr 3247 @ 0xcaf0 (51952) - IADD3 R14, P1, R17, 0x1, RZ ;
 Instr 3248 @ 0xcb00 (51968) - IADD3 R13, P3, -R8, R21, RZ ;
 Instr 3249 @ 0xcb10 (51984) - ISETP.GE.U32.AND.EX P0, PT, R22, R9, PT, P0 ;
 Instr 3250 @ 0xcb20 (52000) - IMAD.X R18, RZ, RZ, R15, P1 ;
 Instr 3251 @ 0xcb30 (52016) - IADD3.X R20, ~R9, R22, RZ, P3, !PT ;
 Instr 3252 @ 0xcb40 (52032) - SEL R13, R13, R21, P0 ;
 Instr 3253 @ 0xcb50 (52048) - SEL R17, R14, R17, P0 ;
 Instr 3254 @ 0xcb60 (52064) - SEL R20, R20, R22, P0 ;
 Instr 3255 @ 0xcb70 (52080) - SEL R18, R18, R15, P0 ;
 Instr 3256 @ 0xcb80 (52096) - ISETP.GE.U32.AND P0, PT, R13, R8, PT ;
 Instr 3257 @ 0xcb90 (52112) - IADD3 R14, P3, R17, 0x1, RZ ;
 Instr 3258 @ 0xcba0 (52128) - ISETP.NE.U32.AND P1, PT, R8, RZ, PT ;
 Instr 3259 @ 0xcbb0 (52144) - ISETP.GE.U32.AND.EX P0, PT, R20, R9, PT, P0 ;
 Instr 3260 @ 0xcbc0 (52160) - IADD3.X R15, RZ, R18.reuse, RZ, P3, !PT ;
 Instr 3261 @ 0xcbd0 (52176) - MOV R13, 0x0 ;
 Instr 3262 @ 0xcbe0 (52192) - ISETP.NE.AND.EX P1, PT, R9, RZ, PT, P1 ;
 Instr 3263 @ 0xcbf0 (52208) - SEL R14, R14, R17, P0 ;
 Instr 3264 @ 0xcc00 (52224) - SEL R15, R15, R18, P0 ;
 Instr 3265 @ 0xcc10 (52240) - SEL R14, R14, 0xffffffff, P1 ;
 Instr 3266 @ 0xcc20 (52256) - SEL R15, R15, 0xffffffff, P1 ;
 Instr 3267 @ 0xcc30 (52272) - RET.REL.NODEC R12 0x0 ;
Basic block id 430 - num instructions 63
 Instr 3268 @ 0xcc40 (52288) - I2F.U64.RP R15, R12 ;
 Instr 3269 @ 0xcc50 (52304) - MUFU.RCP R15, R15 ;
 Instr 3270 @ 0xcc60 (52320) - IADD3 R18, R15, 0x1ffffffe, RZ ;
 Instr 3271 @ 0xcc70 (52336) - F2I.U64.TRUNC R18, R18 ;
 Instr 3272 @ 0xcc80 (52352) - IMAD.WIDE.U32 R20, R18, R12, RZ ;
 Instr 3273 @ 0xcc90 (52368) - IMAD R17, R18.reuse, R13, R21 ;
 Instr 3274 @ 0xcca0 (52384) - IADD3 R23, P0, RZ, -R20, RZ ;
 Instr 3275 @ 0xccb0 (52400) - MOV R21, R18 ;
 Instr 3276 @ 0xccc0 (52416) - IMAD R17, R19, R12, R17 ;
 Instr 3277 @ 0xccd0 (52432) - IMAD.HI.U32 R20, R18, R23, RZ ;
 Instr 3278 @ 0xcce0 (52448) - IMAD.X R17, RZ, RZ, ~R17, P0 ;
 Instr 3279 @ 0xccf0 (52464) - IMAD.WIDE.U32 R20, P0, R18, R17, R20 ;
 Instr 3280 @ 0xcd00 (52480) - IMAD R25, R19.reuse, R17, RZ ;
 Instr 3281 @ 0xcd10 (52496) - IMAD.HI.U32 R20, P1, R19, R23, R20 ;
 Instr 3282 @ 0xcd20 (52512) - IMAD.HI.U32 R15, R19, R17, RZ ;
 Instr 3283 @ 0xcd30 (52528) - IADD3 R21, P2, R25, R20, RZ ;
 Instr 3284 @ 0xcd40 (52544) - IADD3.X R15, R15, R19, RZ, P0, !PT ;
 Instr 3285 @ 0xcd50 (52560) - IMAD.WIDE.U32 R18, R21, R12, RZ ;
 Instr 3286 @ 0xcd60 (52576) - IADD3.X R15, RZ, RZ, R15, P2, P1 ;
 Instr 3287 @ 0xcd70 (52592) - IMAD R17, R21, R13, R19 ;
 Instr 3288 @ 0xcd80 (52608) - IADD3 R19, P0, RZ, -R18, RZ ;
 Instr 3289 @ 0xcd90 (52624) - IMAD R17, R15, R12, R17 ;
 Instr 3290 @ 0xcda0 (52640) - IMAD.HI.U32 R20, R21, R19, RZ ;
 Instr 3291 @ 0xcdb0 (52656) - IMAD.X R18, RZ, RZ, ~R17, P0 ;
 Instr 3292 @ 0xcdc0 (52672) - IMAD.WIDE.U32 R20, P0, R21, R18, R20 ;
 Instr 3293 @ 0xcdd0 (52688) - IMAD R22, R15.reuse, R18, RZ ;
 Instr 3294 @ 0xcde0 (52704) - IMAD.HI.U32 R17, P1, R15, R19, R20 ;
 Instr 3295 @ 0xcdf0 (52720) - MOV R19, RZ ;
 Instr 3296 @ 0xce00 (52736) - IMAD.HI.U32 R18, R15, R18, RZ ;
 Instr 3297 @ 0xce10 (52752) - IADD3 R17, P2, R22, R17, RZ ;
 Instr 3298 @ 0xce20 (52768) - IADD3.X R15, R18, R15, RZ, P0, !PT ;
 Instr 3299 @ 0xce30 (52784) - IMAD.HI.U32 R18, R17, R14, RZ ;
 Instr 3300 @ 0xce40 (52800) - IADD3.X R15, RZ, RZ, R15, P2, P1 ;
 Instr 3301 @ 0xce50 (52816) - IMAD.WIDE.U32 R18, R17, R11, R18 ;
 Instr 3302 @ 0xce60 (52832) - IMAD R20, R15.reuse, R11, RZ ;
 Instr 3303 @ 0xce70 (52848) - IMAD.HI.U32 R17, P0, R15, R14, R18 ;
 Instr 3304 @ 0xce80 (52864) - IMAD.HI.U32 R15, R15, R11, RZ ;
 Instr 3305 @ 0xce90 (52880) - IADD3 R17, P1, R20, R17, RZ ;
 Instr 3306 @ 0xcea0 (52896) - IMAD.X R15, RZ, RZ, R15, P0 ;
 Instr 3307 @ 0xceb0 (52912) - IMAD.WIDE.U32 R18, R17, R12, RZ ;
 Instr 3308 @ 0xcec0 (52928) - IADD3.X R15, RZ, R15, RZ, P1, !PT ;
 Instr 3309 @ 0xced0 (52944) - IMAD R17, R17, R13, R19 ;
 Instr 3310 @ 0xcee0 (52960) - IADD3 R19, P1, -R18, R14, RZ ;
 Instr 3311 @ 0xcef0 (52976) - IMAD R14, R15, R12.reuse, R17 ;
 Instr 3312 @ 0xcf00 (52992) - ISETP.GE.U32.AND P0, PT, R19, R12, PT ;
 Instr 3313 @ 0xcf10 (53008) - IADD3.X R14, ~R14, R11, RZ, P1, !PT ;
 Instr 3314 @ 0xcf20 (53024) - IADD3 R15, P1, -R12, R19, RZ ;
 Instr 3315 @ 0xcf30 (53040) - ISETP.GE.U32.AND.EX P0, PT, R14, R13, PT, P0 ;
 Instr 3316 @ 0xcf40 (53056) - IMAD.X R18, R14, 0x1, ~R13, P1 ;
 Instr 3317 @ 0xcf50 (53072) - SEL R15, R15, R19, P0 ;
 Instr 3318 @ 0xcf60 (53088) - ISETP.NE.U32.AND P1, PT, R12, RZ, PT ;
 Instr 3319 @ 0xcf70 (53104) - SEL R18, R18, R14, P0 ;
 Instr 3320 @ 0xcf80 (53120) - ISETP.GE.U32.AND P0, PT, R15, R12, PT ;
 Instr 3321 @ 0xcf90 (53136) - IADD3 R11, P2, -R12, R15, RZ ;
 Instr 3322 @ 0xcfa0 (53152) - ISETP.GE.U32.AND.EX P0, PT, R18, R13, PT, P0 ;
 Instr 3323 @ 0xcfb0 (53168) - IADD3.X R14, ~R13, R18.reuse, RZ, P2, !PT ;
 Instr 3324 @ 0xcfc0 (53184) - SEL R12, R11, R15, P0 ;
 Instr 3325 @ 0xcfd0 (53200) - MOV R11, 0x0 ;
 Instr 3326 @ 0xcfe0 (53216) - ISETP.NE.AND.EX P1, PT, R13, RZ, PT, P1 ;
 Instr 3327 @ 0xcff0 (53232) - SEL R13, R14, R18, P0 ;
 Instr 3328 @ 0xd000 (53248) - SEL R12, R12, 0xffffffff, P1 ;
 Instr 3329 @ 0xd010 (53264) - SEL R13, R13, 0xffffffff, P1 ;
 Instr 3330 @ 0xd020 (53280) - RET.REL.NODEC R10 0x0 ;
Basic block id 431 - num instructions 1
 Instr 3331 @ 0xd030 (53296) - BRA 0xd030;
inspecting void at::native::reduce_kernel<512, 1, at::native::ReduceOp<c10::Half, at::native::MeanOps<c10::Half, float, float, c10::Half>, unsigned int, c10::Half, 4, 4> >(at::native::ReduceOp<c10::Half, at::native::MeanOps<c10::Half, float, float, c10::Half>, unsigned int, c10::Half, 4, 4>) - number basic blocks 432
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 5 @ 0x50 (80) - S2R R3, SR_TID.Y ;
Inject count_instr before - Instr 19 @ 0x130 (304) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 27 @ 0x1b0 (432) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 35 @ 0x230 (560) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 43 @ 0x2b0 (688) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 67 @ 0x430 (1072) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 75 @ 0x4b0 (1200) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 91 @ 0x5b0 (1456) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 99 @ 0x630 (1584) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 115 @ 0x730 (1840) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 123 @ 0x7b0 (1968) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 131 @ 0x830 (2096) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 139 @ 0x8b0 (2224) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 147 @ 0x930 (2352) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 155 @ 0x9b0 (2480) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 163 @ 0xa30 (2608) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 171 @ 0xab0 (2736) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 195 @ 0xc30 (3120) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 208 @ 0xd00 (3328) - S2R R0, SR_TID.Y ;
Inject count_instr before - Instr 222 @ 0xde0 (3552) - ULDC.U8 UR4, c[0x0][0x1a0] ;
Inject count_instr before - Instr 227 @ 0xe30 (3632) - SHF.R.U64 R4, R6, 0x1, R7 ;
Inject count_instr before - Instr 235 @ 0xeb0 (3760) - ISETP.GE.U32.AND P0, PT, R5.reuse, R12, PT ;
Inject count_instr before - Instr 240 @ 0xf00 (3840) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x184], PT ;
Inject count_instr before - Instr 246 @ 0xf60 (3936) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 251 @ 0xfb0 (4016) - BSYNC B3 ;
Inject count_instr before - Instr 255 @ 0xff0 (4080) - IADD3 R9, P0, R5, -R12, RZ ;
Inject count_instr before - Instr 262 @ 0x1060 (4192) - BSYNC B2 ;
Inject count_instr before - Instr 269 @ 0x10d0 (4304) - BSYNC B1 ;
Inject count_instr before - Instr 279 @ 0x1170 (4464) - @P0 BRA 0x1280 ;
Inject count_instr before - Instr 280 @ 0x1180 (4480) - MOV R13, c[0x0][0x164] ;
Inject count_instr before - Instr 282 @ 0x11a0 (4512) - IMAD.WIDE.U32 R8, R10, 0x8, R6 ;
Inject count_instr before - Instr 296 @ 0x1280 (4736) - BSYNC B1 ;
Inject count_instr before - Instr 301 @ 0x12d0 (4816) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 306 @ 0x1320 (4896) - BSYNC B1 ;
Inject count_instr before - Instr 312 @ 0x1380 (4992) - LOP3.LUT R8, R4, 0xfffffffc, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 316 @ 0x13c0 (5056) - IMAD.WIDE R6, R9, 0x2, R6 ;
Inject count_instr before - Instr 320 @ 0x1400 (5120) - BSYNC B1 ;
Inject count_instr before - Instr 325 @ 0x1450 (5200) - MOV R20, c[0x0][0x2d8] ;
Inject count_instr before - Instr 332 @ 0x14c0 (5312) - MOV R26, c[0x0][0x174] ;
Inject count_instr before - Instr 337 @ 0x1510 (5392) - ISETP.GE.U32.AND P0, PT, R8, c[0x0][0x16c], PT ;
Inject count_instr before - Instr 344 @ 0x1580 (5504) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 350 @ 0x15e0 (5600) - CS2R R12, SRZ ;
Inject count_instr before - Instr 352 @ 0x1600 (5632) - MOV R15, R9 ;
Inject count_instr before - Instr 362 @ 0x16a0 (5792) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 371 @ 0x1730 (5936) - MOV R14, RZ ;
Inject count_instr before - Instr 380 @ 0x17c0 (6080) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 388 @ 0x1840 (6208) - MOV R15, R17 ;
Inject count_instr before - Instr 397 @ 0x18d0 (6352) - MOV R14, RZ ;
Inject count_instr before - Instr 405 @ 0x1950 (6480) - MOV R14, RZ ;
Inject count_instr before - Instr 414 @ 0x19e0 (6624) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 422 @ 0x1a60 (6752) - MOV R15, R17 ;
Inject count_instr before - Instr 431 @ 0x1af0 (6896) - MOV R14, RZ ;
Inject count_instr before - Instr 439 @ 0x1b70 (7024) - MOV R14, RZ ;
Inject count_instr before - Instr 448 @ 0x1c00 (7168) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 456 @ 0x1c80 (7296) - MOV R15, R17 ;
Inject count_instr before - Instr 465 @ 0x1d10 (7440) - MOV R14, RZ ;
Inject count_instr before - Instr 473 @ 0x1d90 (7568) - MOV R14, RZ ;
Inject count_instr before - Instr 482 @ 0x1e20 (7712) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 490 @ 0x1ea0 (7840) - MOV R15, R17 ;
Inject count_instr before - Instr 499 @ 0x1f30 (7984) - MOV R14, RZ ;
Inject count_instr before - Instr 507 @ 0x1fb0 (8112) - MOV R14, RZ ;
Inject count_instr before - Instr 516 @ 0x2040 (8256) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 524 @ 0x20c0 (8384) - MOV R15, R17 ;
Inject count_instr before - Instr 533 @ 0x2150 (8528) - MOV R14, RZ ;
Inject count_instr before - Instr 541 @ 0x21d0 (8656) - MOV R14, RZ ;
Inject count_instr before - Instr 550 @ 0x2260 (8800) - ISETP.NE.AND P1, PT, R16, 0x18, PT ;
Inject count_instr before - Instr 564 @ 0x2340 (9024) - LOP3.LUT R13, R13, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 570 @ 0x23a0 (9120) - MOV R15, R9 ;
Inject count_instr before - Instr 580 @ 0x2440 (9280) - MOV R15, R17 ;
Inject count_instr before - Instr 589 @ 0x24d0 (9424) - MOV R14, RZ ;
Inject count_instr before - Instr 598 @ 0x2560 (9568) - MOV R15, R17 ;
Inject count_instr before - Instr 607 @ 0x25f0 (9712) - MOV R14, RZ ;
Inject count_instr before - Instr 616 @ 0x2680 (9856) - MOV R15, R17 ;
Inject count_instr before - Instr 625 @ 0x2710 (10000) - MOV R14, RZ ;
Inject count_instr before - Instr 634 @ 0x27a0 (10144) - MOV R15, R17 ;
Inject count_instr before - Instr 643 @ 0x2830 (10288) - MOV R14, RZ ;
Inject count_instr before - Instr 652 @ 0x28c0 (10432) - MOV R15, R17 ;
Inject count_instr before - Instr 661 @ 0x2950 (10576) - MOV R14, RZ ;
Inject count_instr before - Instr 670 @ 0x29e0 (10720) - MOV R15, R17 ;
Inject count_instr before - Instr 679 @ 0x2a70 (10864) - MOV R14, RZ ;
Inject count_instr before - Instr 688 @ 0x2b00 (11008) - MOV R15, R17 ;
Inject count_instr before - Instr 697 @ 0x2b90 (11152) - MOV R14, RZ ;
Inject count_instr before - Instr 706 @ 0x2c20 (11296) - MOV R15, R17 ;
Inject count_instr before - Instr 715 @ 0x2cb0 (11440) - MOV R14, RZ ;
Inject count_instr before - Instr 724 @ 0x2d40 (11584) - MOV R15, R17 ;
Inject count_instr before - Instr 733 @ 0x2dd0 (11728) - MOV R14, RZ ;
Inject count_instr before - Instr 742 @ 0x2e60 (11872) - MOV R15, R17 ;
Inject count_instr before - Instr 751 @ 0x2ef0 (12016) - MOV R14, RZ ;
Inject count_instr before - Instr 760 @ 0x2f80 (12160) - MOV R15, R17 ;
Inject count_instr before - Instr 769 @ 0x3010 (12304) - MOV R14, RZ ;
Inject count_instr before - Instr 778 @ 0x30a0 (12448) - ISETP.NE.AND P1, PT, R16, 0x18, PT ;
Inject count_instr before - Instr 792 @ 0x3180 (12672) - LOP3.LUT R17, R12, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 799 @ 0x31f0 (12784) - MOV R17, R9 ;
Inject count_instr before - Instr 809 @ 0x3290 (12944) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 817 @ 0x3310 (13072) - MOV R17, R19 ;
Inject count_instr before - Instr 826 @ 0x33a0 (13216) - MOV R16, RZ ;
Inject count_instr before - Instr 834 @ 0x3420 (13344) - MOV R16, RZ ;
Inject count_instr before - Instr 843 @ 0x34b0 (13488) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 851 @ 0x3530 (13616) - MOV R17, R19 ;
Inject count_instr before - Instr 860 @ 0x35c0 (13760) - MOV R16, RZ ;
Inject count_instr before - Instr 868 @ 0x3640 (13888) - MOV R16, RZ ;
Inject count_instr before - Instr 877 @ 0x36d0 (14032) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 885 @ 0x3750 (14160) - MOV R17, R19 ;
Inject count_instr before - Instr 894 @ 0x37e0 (14304) - MOV R16, RZ ;
Inject count_instr before - Instr 902 @ 0x3860 (14432) - MOV R16, RZ ;
Inject count_instr before - Instr 911 @ 0x38f0 (14576) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 919 @ 0x3970 (14704) - MOV R17, R19 ;
Inject count_instr before - Instr 928 @ 0x3a00 (14848) - MOV R16, RZ ;
Inject count_instr before - Instr 936 @ 0x3a80 (14976) - MOV R16, RZ ;
Inject count_instr before - Instr 945 @ 0x3b10 (15120) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 953 @ 0x3b90 (15248) - MOV R17, R19 ;
Inject count_instr before - Instr 962 @ 0x3c20 (15392) - MOV R16, RZ ;
Inject count_instr before - Instr 970 @ 0x3ca0 (15520) - MOV R16, RZ ;
Inject count_instr before - Instr 979 @ 0x3d30 (15664) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 987 @ 0x3db0 (15792) - MOV R17, R19 ;
Inject count_instr before - Instr 996 @ 0x3e40 (15936) - ISETP.NE.AND P1, PT, R18, 0x18, PT ;
Inject count_instr before - Instr 1010 @ 0x3f20 (16160) - LOP3.LUT R15, R15, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1016 @ 0x3f80 (16256) - MOV R16, RZ ;
Inject count_instr before - Instr 1026 @ 0x4020 (16416) - MOV R16, RZ ;
Inject count_instr before - Instr 1035 @ 0x40b0 (16560) - MOV R17, R20 ;
Inject count_instr before - Instr 1044 @ 0x4140 (16704) - MOV R16, RZ ;
Inject count_instr before - Instr 1053 @ 0x41d0 (16848) - MOV R17, R20 ;
Inject count_instr before - Instr 1062 @ 0x4260 (16992) - MOV R16, RZ ;
Inject count_instr before - Instr 1071 @ 0x42f0 (17136) - MOV R17, R20 ;
Inject count_instr before - Instr 1080 @ 0x4380 (17280) - MOV R16, RZ ;
Inject count_instr before - Instr 1089 @ 0x4410 (17424) - MOV R17, R20 ;
Inject count_instr before - Instr 1098 @ 0x44a0 (17568) - MOV R16, RZ ;
Inject count_instr before - Instr 1107 @ 0x4530 (17712) - MOV R17, R20 ;
Inject count_instr before - Instr 1116 @ 0x45c0 (17856) - MOV R16, RZ ;
Inject count_instr before - Instr 1125 @ 0x4650 (18000) - MOV R17, R20 ;
Inject count_instr before - Instr 1134 @ 0x46e0 (18144) - MOV R16, RZ ;
Inject count_instr before - Instr 1143 @ 0x4770 (18288) - MOV R17, R20 ;
Inject count_instr before - Instr 1152 @ 0x4800 (18432) - MOV R16, RZ ;
Inject count_instr before - Instr 1161 @ 0x4890 (18576) - MOV R17, R20 ;
Inject count_instr before - Instr 1170 @ 0x4920 (18720) - MOV R16, RZ ;
Inject count_instr before - Instr 1179 @ 0x49b0 (18864) - MOV R17, R20 ;
Inject count_instr before - Instr 1188 @ 0x4a40 (19008) - MOV R16, RZ ;
Inject count_instr before - Instr 1197 @ 0x4ad0 (19152) - MOV R17, R20 ;
Inject count_instr before - Instr 1206 @ 0x4b60 (19296) - MOV R16, RZ ;
Inject count_instr before - Instr 1215 @ 0x4bf0 (19440) - MOV R16, RZ ;
Inject count_instr before - Instr 1224 @ 0x4c80 (19584) - ISETP.NE.AND P1, PT, R18, 0x18, PT ;
Inject count_instr before - Instr 1238 @ 0x4d60 (19808) - LOP3.LUT R17, R14, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1255 @ 0x4e70 (20080) - BSYNC B2 ;
Inject count_instr before - Instr 1257 @ 0x4e90 (20112) - BSYNC B1 ;
Inject count_instr before - Instr 1262 @ 0x4ee0 (20192) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x1a8], PT ;
Inject count_instr before - Instr 1265 @ 0x4f10 (20240) - MOV R16, RZ ;
Inject count_instr before - Instr 1275 @ 0x4fb0 (20400) - MOV R16, RZ ;
Inject count_instr before - Instr 1283 @ 0x5030 (20528) - MOV R18, RZ ;
Inject count_instr before - Instr 1291 @ 0x50b0 (20656) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1299 @ 0x5130 (20784) - MOV R18, RZ ;
Inject count_instr before - Instr 1307 @ 0x51b0 (20912) - MOV R16, RZ ;
Inject count_instr before - Instr 1315 @ 0x5230 (21040) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1323 @ 0x52b0 (21168) - MOV R16, RZ ;
Inject count_instr before - Instr 1331 @ 0x5330 (21296) - MOV R18, RZ ;
Inject count_instr before - Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1347 @ 0x5430 (21552) - MOV R18, RZ ;
Inject count_instr before - Instr 1355 @ 0x54b0 (21680) - MOV R16, RZ ;
Inject count_instr before - Instr 1363 @ 0x5530 (21808) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1371 @ 0x55b0 (21936) - MOV R16, RZ ;
Inject count_instr before - Instr 1379 @ 0x5630 (22064) - MOV R18, RZ ;
Inject count_instr before - Instr 1387 @ 0x56b0 (22192) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1395 @ 0x5730 (22320) - MOV R18, RZ ;
Inject count_instr before - Instr 1403 @ 0x57b0 (22448) - MOV R16, RZ ;
Inject count_instr before - Instr 1411 @ 0x5830 (22576) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1419 @ 0x58b0 (22704) - MOV R16, RZ ;
Inject count_instr before - Instr 1427 @ 0x5930 (22832) - MOV R18, RZ ;
Inject count_instr before - Instr 1435 @ 0x59b0 (22960) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1443 @ 0x5a30 (23088) - MOV R18, RZ ;
Inject count_instr before - Instr 1451 @ 0x5ab0 (23216) - ISETP.NE.AND P2, PT, R20, 0x18, PT ;
Inject count_instr before - Instr 1464 @ 0x5b80 (23424) - LOP3.LUT R13, R13, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1471 @ 0x5bf0 (23536) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 1473 @ 0x5c10 (23568) - MOV R16, RZ ;
Inject count_instr before - Instr 1482 @ 0x5ca0 (23712) - MOV R18, RZ ;
Inject count_instr before - Instr 1490 @ 0x5d20 (23840) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1498 @ 0x5da0 (23968) - MOV R18, RZ ;
Inject count_instr before - Instr 1506 @ 0x5e20 (24096) - MOV R20, RZ ;
Inject count_instr before - Instr 1514 @ 0x5ea0 (24224) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1522 @ 0x5f20 (24352) - MOV R20, RZ ;
Inject count_instr before - Instr 1530 @ 0x5fa0 (24480) - MOV R18, RZ ;
Inject count_instr before - Instr 1538 @ 0x6020 (24608) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1546 @ 0x60a0 (24736) - MOV R18, RZ ;
Inject count_instr before - Instr 1554 @ 0x6120 (24864) - MOV R20, RZ ;
Inject count_instr before - Instr 1562 @ 0x61a0 (24992) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1570 @ 0x6220 (25120) - MOV R20, RZ ;
Inject count_instr before - Instr 1578 @ 0x62a0 (25248) - MOV R18, RZ ;
Inject count_instr before - Instr 1586 @ 0x6320 (25376) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1594 @ 0x63a0 (25504) - MOV R18, RZ ;
Inject count_instr before - Instr 1602 @ 0x6420 (25632) - MOV R20, RZ ;
Inject count_instr before - Instr 1610 @ 0x64a0 (25760) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1618 @ 0x6520 (25888) - MOV R20, RZ ;
Inject count_instr before - Instr 1626 @ 0x65a0 (26016) - MOV R18, RZ ;
Inject count_instr before - Instr 1634 @ 0x6620 (26144) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1642 @ 0x66a0 (26272) - MOV R18, RZ ;
Inject count_instr before - Instr 1650 @ 0x6720 (26400) - MOV R20, RZ ;
Inject count_instr before - Instr 1658 @ 0x67a0 (26528) - ISETP.NE.AND P2, PT, R22, 0x18, PT ;
Inject count_instr before - Instr 1671 @ 0x6870 (26736) - LOP3.LUT R19, R12, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1678 @ 0x68e0 (26848) - MOV R15, RZ ;
Inject count_instr before - Instr 1680 @ 0x6900 (26880) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1689 @ 0x6990 (27024) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1697 @ 0x6a10 (27152) - MOV R20, RZ ;
Inject count_instr before - Instr 1705 @ 0x6a90 (27280) - MOV R18, RZ ;
Inject count_instr before - Instr 1713 @ 0x6b10 (27408) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1721 @ 0x6b90 (27536) - MOV R18, RZ ;
Inject count_instr before - Instr 1729 @ 0x6c10 (27664) - MOV R20, RZ ;
Inject count_instr before - Instr 1737 @ 0x6c90 (27792) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1745 @ 0x6d10 (27920) - MOV R20, RZ ;
Inject count_instr before - Instr 1753 @ 0x6d90 (28048) - MOV R18, RZ ;
Inject count_instr before - Instr 1761 @ 0x6e10 (28176) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1769 @ 0x6e90 (28304) - MOV R18, RZ ;
Inject count_instr before - Instr 1777 @ 0x6f10 (28432) - MOV R20, RZ ;
Inject count_instr before - Instr 1785 @ 0x6f90 (28560) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1793 @ 0x7010 (28688) - MOV R20, RZ ;
Inject count_instr before - Instr 1801 @ 0x7090 (28816) - MOV R18, RZ ;
Inject count_instr before - Instr 1809 @ 0x7110 (28944) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1817 @ 0x7190 (29072) - MOV R18, RZ ;
Inject count_instr before - Instr 1825 @ 0x7210 (29200) - MOV R20, RZ ;
Inject count_instr before - Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1841 @ 0x7310 (29456) - MOV R20, RZ ;
Inject count_instr before - Instr 1849 @ 0x7390 (29584) - MOV R18, RZ ;
Inject count_instr before - Instr 1857 @ 0x7410 (29712) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
Inject count_instr before - Instr 1865 @ 0x7490 (29840) - ISETP.NE.AND P2, PT, R22, 0x18, PT ;
Inject count_instr before - Instr 1878 @ 0x7560 (30048) - LOP3.LUT R15, R15, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1885 @ 0x75d0 (30160) - MOV R14, RZ ;
Inject count_instr before - Instr 1887 @ 0x75f0 (30192) - MOV R16, RZ ;
Inject count_instr before - Instr 1896 @ 0x7680 (30336) - MOV R18, RZ ;
Inject count_instr before - Instr 1904 @ 0x7700 (30464) - MOV R16, RZ ;
Inject count_instr before - Instr 1912 @ 0x7780 (30592) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1920 @ 0x7800 (30720) - MOV R16, RZ ;
Inject count_instr before - Instr 1928 @ 0x7880 (30848) - MOV R18, RZ ;
Inject count_instr before - Instr 1936 @ 0x7900 (30976) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1944 @ 0x7980 (31104) - MOV R18, RZ ;
Inject count_instr before - Instr 1952 @ 0x7a00 (31232) - MOV R16, RZ ;
Inject count_instr before - Instr 1960 @ 0x7a80 (31360) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1968 @ 0x7b00 (31488) - MOV R16, RZ ;
Inject count_instr before - Instr 1976 @ 0x7b80 (31616) - MOV R18, RZ ;
Inject count_instr before - Instr 1984 @ 0x7c00 (31744) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1992 @ 0x7c80 (31872) - MOV R18, RZ ;
Inject count_instr before - Instr 2000 @ 0x7d00 (32000) - MOV R16, RZ ;
Inject count_instr before - Instr 2008 @ 0x7d80 (32128) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 2016 @ 0x7e00 (32256) - MOV R16, RZ ;
Inject count_instr before - Instr 2024 @ 0x7e80 (32384) - MOV R18, RZ ;
Inject count_instr before - Instr 2032 @ 0x7f00 (32512) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 2040 @ 0x7f80 (32640) - MOV R18, RZ ;
Inject count_instr before - Instr 2048 @ 0x8000 (32768) - MOV R16, RZ ;
Inject count_instr before - Instr 2056 @ 0x8080 (32896) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 2064 @ 0x8100 (33024) - MOV R16, RZ ;
Inject count_instr before - Instr 2072 @ 0x8180 (33152) - ISETP.NE.AND P1, PT, R20, 0x18, PT ;
Inject count_instr before - Instr 2085 @ 0x8250 (33360) - LOP3.LUT R17, R14, 0xfffffffe, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2089 @ 0x8290 (33424) - BSYNC B1 ;
Inject count_instr before - Instr 2093 @ 0x82d0 (33488) - IADD3 R9, R9, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2098 @ 0x8320 (33568) - IADD3 R6, R9, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2103 @ 0x8370 (33648) - IADD3 R6, R6, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2109 @ 0x83d0 (33744) - BSYNC B1 ;
Inject count_instr before - Instr 2114 @ 0x8420 (33824) - ISETP.GE.U32.AND P0, PT, R8, c[0x0][0x16c], PT ;
Inject count_instr before - Instr 2121 @ 0x8490 (33936) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 2126 @ 0x84e0 (34016) - IADD3 R15, R9, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2153 @ 0x8690 (34448) - BSYNC B2 ;
Inject count_instr before - Instr 2155 @ 0x86b0 (34480) - BSYNC B1 ;
Inject count_instr before - Instr 2160 @ 0x8700 (34560) - IMAD R13, R20, R9, RZ ;
Inject count_instr before - Instr 2166 @ 0x8760 (34656) - IMAD R13, R20, R17, RZ ;
Inject count_instr before - Instr 2172 @ 0x87c0 (34752) - IADD3 R19, R17, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2180 @ 0x8840 (34880) - BSYNC B1 ;
Inject count_instr before - Instr 2184 @ 0x8880 (34944) - IADD3 R6, R9, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2189 @ 0x88d0 (35024) - IADD3 R6, R6, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2194 @ 0x8920 (35104) - IADD3 R6, R6, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2200 @ 0x8980 (35200) - BSYNC B1 ;
Inject count_instr before - Instr 2205 @ 0x89d0 (35280) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x174] ;
Inject count_instr before - Instr 2216 @ 0x8a80 (35456) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 2221 @ 0x8ad0 (35536) - IADD3 R11, R17.reuse, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2244 @ 0x8c40 (35904) - BSYNC B2 ;
Inject count_instr before - Instr 2246 @ 0x8c60 (35936) - BSYNC B1 ;
Inject count_instr before - Instr 2251 @ 0x8cb0 (36016) - IMAD.WIDE.U32 R8, R17, 0x2, R6 ;
Inject count_instr before - Instr 2256 @ 0x8d00 (36096) - IMAD.WIDE.U32 R8, R13, 0x2, R6 ;
Inject count_instr before - Instr 2261 @ 0x8d50 (36176) - IADD3 R15, R13.reuse, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2267 @ 0x8db0 (36272) - BSYNC B1 ;
Inject count_instr before - Instr 2271 @ 0x8df0 (36336) - IADD3 R17, R17, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2276 @ 0x8e40 (36416) - IADD3 R6, R17, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2281 @ 0x8e90 (36496) - IADD3 R6, R6, c[0x0][0x174], RZ ;
Inject count_instr before - Instr 2287 @ 0x8ef0 (36592) - BSYNC B1 ;
Inject count_instr before - Instr 2291 @ 0x8f30 (36656) - BSYNC B0 ;
Inject count_instr before - Instr 2294 @ 0x8f60 (36704) - IMAD R7, R0, c[0x0][0x0], R5 ;
Inject count_instr before - Instr 2300 @ 0x8fc0 (36800) - IMAD.U32 R9, RZ, RZ, UR4 ;
Inject count_instr before - Instr 2301 @ 0x8fd0 (36816) - IADD3 R6, R0, R9, RZ ;
Inject count_instr before - Instr 2312 @ 0x9080 (36992) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x180], PT ;
Inject count_instr before - Instr 2314 @ 0x90a0 (37024) - MOV R7, c[0x0][0x0] ;
Inject count_instr before - Instr 2318 @ 0x90e0 (37088) - IMAD R11, R0, c[0x0][0x0], R5 ;
Inject count_instr before - Instr 2325 @ 0x9150 (37200) - LEA R8, R11, 0x10, 0x2 ;
Inject count_instr before - Instr 2326 @ 0x9160 (37216) - IADD3 R6, R5, R7, RZ ;
Inject count_instr before - Instr 2337 @ 0x9210 (37392) - MOV R6, 0x20 ;
Inject count_instr before - Instr 2338 @ 0x9220 (37408) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 2341 @ 0x9250 (37456) - MOV R7, 0x1 ;
Inject count_instr before - Instr 2342 @ 0x9260 (37472) - SHFL.DOWN PT, R9, R4, R7, 0x1f ;
Inject count_instr before - Instr 2347 @ 0x92b0 (37552) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x33c], PT ;
Inject count_instr before - Instr 2350 @ 0x92e0 (37600) - MOV R2, RZ ;
Inject count_instr before - Instr 2359 @ 0x9370 (37744) - MOV R6, RZ ;
Inject count_instr before - Instr 2368 @ 0x9400 (37888) - MOV R8, RZ ;
Inject count_instr before - Instr 2376 @ 0x9480 (38016) - MOV R6, RZ ;
Inject count_instr before - Instr 2384 @ 0x9500 (38144) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2392 @ 0x9580 (38272) - MOV R6, RZ ;
Inject count_instr before - Instr 2400 @ 0x9600 (38400) - MOV R8, RZ ;
Inject count_instr before - Instr 2408 @ 0x9680 (38528) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 2416 @ 0x9700 (38656) - MOV R8, RZ ;
Inject count_instr before - Instr 2424 @ 0x9780 (38784) - MOV R6, RZ ;
Inject count_instr before - Instr 2432 @ 0x9800 (38912) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2440 @ 0x9880 (39040) - MOV R6, RZ ;
Inject count_instr before - Instr 2448 @ 0x9900 (39168) - MOV R8, RZ ;
Inject count_instr before - Instr 2456 @ 0x9980 (39296) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 2464 @ 0x9a00 (39424) - MOV R8, RZ ;
Inject count_instr before - Instr 2472 @ 0x9a80 (39552) - MOV R6, RZ ;
Inject count_instr before - Instr 2480 @ 0x9b00 (39680) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2488 @ 0x9b80 (39808) - MOV R6, RZ ;
Inject count_instr before - Instr 2496 @ 0x9c00 (39936) - MOV R8, RZ ;
Inject count_instr before - Instr 2504 @ 0x9c80 (40064) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 2512 @ 0x9d00 (40192) - MOV R8, RZ ;
Inject count_instr before - Instr 2520 @ 0x9d80 (40320) - MOV R6, RZ ;
Inject count_instr before - Instr 2528 @ 0x9e00 (40448) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2536 @ 0x9e80 (40576) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 2549 @ 0x9f50 (40784) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x550], PT ;
Inject count_instr before - Instr 2556 @ 0x9fc0 (40896) - MOV R14, 0x2 ;
Inject count_instr before - Instr 2560 @ 0xa000 (40960) - LOP3.LUT R8, R11, R13.reuse, RZ, 0xfc, !PT ;
Inject count_instr before - Instr 2565 @ 0xa050 (41040) - MOV R10, 0xa070 ;
Inject count_instr before - Instr 2567 @ 0xa070 (41072) - BRA 0xa1b0 ;
Inject count_instr before - Instr 2568 @ 0xa080 (41088) - I2F.U32.RP R13, R12 ;
Inject count_instr before - Instr 2587 @ 0xa1b0 (41392) - ISETP.NE.U32.AND P0, PT, R12, RZ, PT ;
Inject count_instr before - Instr 2592 @ 0xa200 (41472) - ISETP.NE.U32.AND P2, PT, R9, RZ, PT ;
Inject count_instr before - Instr 2594 @ 0xa220 (41504) - MOV R14, 0x4 ;
Inject count_instr before - Instr 2598 @ 0xa260 (41568) - MOV R10, R14 ;
Inject count_instr before - Instr 2601 @ 0xa290 (41616) - I2F.U32.RP R12, R8 ;
Inject count_instr before - Instr 2620 @ 0xa3c0 (41920) - @!P2 BRA 0xa440 ;
Inject count_instr before - Instr 2621 @ 0xa3d0 (41936) - MOV R14, 0x2 ;
Inject count_instr before - Instr 2625 @ 0xa410 (42000) - MOV R8, R14 ;
Inject count_instr before - Instr 2628 @ 0xa440 (42048) - I2F.U32.RP R14, R8 ;
Inject count_instr before - Instr 2648 @ 0xa580 (42368) - IMAD R11, R11, R16.reuse, RZ ;
Inject count_instr before - Instr 2655 @ 0xa5f0 (42480) - MOV R12, 0xa610 ;
Inject count_instr before - Instr 2657 @ 0xa610 (42512) - MOV R8, R14 ;
Inject count_instr before - Instr 2660 @ 0xa640 (42560) - I2F.U32.RP R9, R8 ;
Inject count_instr before - Instr 2680 @ 0xa780 (42880) - BSYNC B0 ;
Inject count_instr before - Instr 2684 @ 0xa7c0 (42944) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 2686 @ 0xa7e0 (42976) - S2R R3, SR_CTAID.X ;
Inject count_instr before - Instr 2693 @ 0xa850 (43088) - MOV R6, RZ ;
Inject count_instr before - Instr 2702 @ 0xa8e0 (43232) - MOV R12, RZ ;
Inject count_instr before - Instr 2710 @ 0xa960 (43360) - MOV R14, RZ ;
Inject count_instr before - Instr 2718 @ 0xa9e0 (43488) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2726 @ 0xaa60 (43616) - MOV R14, RZ ;
Inject count_instr before - Instr 2734 @ 0xaae0 (43744) - MOV R12, RZ ;
Inject count_instr before - Instr 2742 @ 0xab60 (43872) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 2750 @ 0xabe0 (44000) - MOV R12, RZ ;
Inject count_instr before - Instr 2758 @ 0xac60 (44128) - MOV R14, RZ ;
Inject count_instr before - Instr 2766 @ 0xace0 (44256) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2774 @ 0xad60 (44384) - MOV R14, RZ ;
Inject count_instr before - Instr 2782 @ 0xade0 (44512) - MOV R12, RZ ;
Inject count_instr before - Instr 2790 @ 0xae60 (44640) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 2798 @ 0xaee0 (44768) - MOV R12, RZ ;
Inject count_instr before - Instr 2806 @ 0xaf60 (44896) - MOV R14, RZ ;
Inject count_instr before - Instr 2814 @ 0xafe0 (45024) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2822 @ 0xb060 (45152) - MOV R14, RZ ;
Inject count_instr before - Instr 2830 @ 0xb0e0 (45280) - MOV R12, RZ ;
Inject count_instr before - Instr 2838 @ 0xb160 (45408) - IMAD.MOV.U32 R14, RZ, RZ, RZ ;
Inject count_instr before - Instr 2846 @ 0xb1e0 (45536) - MOV R12, RZ ;
Inject count_instr before - Instr 2854 @ 0xb260 (45664) - MOV R14, RZ ;
Inject count_instr before - Instr 2862 @ 0xb2e0 (45792) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2870 @ 0xb360 (45920) - MOV R14, RZ ;
Inject count_instr before - Instr 2878 @ 0xb3e0 (46048) - ISETP.NE.AND P0, PT, R16, 0x18, PT ;
Inject count_instr before - Instr 2891 @ 0xb4b0 (46256) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x180], PT ;
Inject count_instr before - Instr 2898 @ 0xb520 (46368) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x184], PT ;
Inject count_instr before - Instr 2903 @ 0xb570 (46448) - BSYNC B0 ;
Inject count_instr before - Instr 2922 @ 0xb6a0 (46752) - S2R R7, SR_LANEID ;
Inject count_instr before - Instr 2941 @ 0xb7d0 (47056) - BSYNC B0 ;
Inject count_instr before - Instr 2948 @ 0xb840 (47168) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x180], PT ;
Inject count_instr before - Instr 2956 @ 0xb8c0 (47296) - IMAD R4, R0, c[0x0][0x0], R5 ;
Inject count_instr before - Instr 2961 @ 0xb910 (47376) - MOV R13, 0x4 ;
Inject count_instr before - Instr 2962 @ 0xb920 (47392) - IMAD R12, R3, c[0x0][0x10], R4 ;
Inject count_instr before - Instr 2970 @ 0xb9a0 (47520) - BSYNC B1 ;
Inject count_instr before - Instr 2972 @ 0xb9c0 (47552) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x17c], PT ;
Inject count_instr before - Instr 2974 @ 0xb9e0 (47584) - MOV R4, R0 ;
Inject count_instr before - Instr 2975 @ 0xb9f0 (47600) - IMAD R12, R3, c[0x0][0x10], R4 ;
Inject count_instr before - Instr 2984 @ 0xba80 (47744) - BSYNC B0 ;
Inject count_instr before - Instr 2992 @ 0xbb00 (47872) - IMAD.U32 R3, RZ, RZ, UR4 ;
Inject count_instr before - Instr 2993 @ 0xbb10 (47888) - IADD3 R4, R0, R3, RZ ;
Inject count_instr before - Instr 3004 @ 0xbbc0 (48064) - LEA R13, R12, 0x10, 0x2 ;
Inject count_instr before - Instr 3006 @ 0xbbe0 (48096) - MOV R3, c[0x0][0x0] ;
Inject count_instr before - Instr 3010 @ 0xbc20 (48160) - LEA.HI R3, R3, c[0x0][0x0], RZ, 0x1 ;
Inject count_instr before - Instr 3016 @ 0xbc80 (48256) - MOV R0, R3 ;
Inject count_instr before - Instr 3017 @ 0xbc90 (48272) - IMAD.IADD R3, R5, 0x1, R0 ;
Inject count_instr before - Instr 3028 @ 0xbd40 (48448) - MOV R0, 0x20 ;
Inject count_instr before - Instr 3029 @ 0xbd50 (48464) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 3032 @ 0xbd80 (48512) - IMAD.MOV.U32 R3, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 3033 @ 0xbd90 (48528) - SHFL.DOWN PT, R4, R11, R3, 0x1f ;
Inject count_instr before - Instr 3038 @ 0xbde0 (48608) - @!P1 EXIT ;
Inject count_instr before - Instr 3039 @ 0xbdf0 (48624) - ISETP.NE.U32.AND P0, PT, R8, RZ, PT ;
Inject count_instr before - Instr 3043 @ 0xbe30 (48688) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3045 @ 0xbe50 (48720) - LDG.E.SYS R0, [R8] ;
Inject count_instr before - Instr 3047 @ 0xbe70 (48752) - ULDC.U8 UR4, c[0x0][0x571] ;
Inject count_instr before - Instr 3050 @ 0xbea0 (48800) - FMUL R11, R11, c[0x0][0x160] ;
Inject count_instr before - Instr 3055 @ 0xbef0 (48880) - UMOV UR8, 0xa594200 ;
Inject count_instr before - Instr 3073 @ 0xc010 (49168) - ULDC.64 UR4, c[0x0][0x540] ;
Inject count_instr before - Instr 3076 @ 0xc040 (49216) - STG.E.SYS [R8], R11 ;
Inject count_instr before - Instr 3078 @ 0xc060 (49248) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3080 @ 0xc080 (49280) - LDG.E.U16.SYS R0, [R6] ;
Inject count_instr before - Instr 3083 @ 0xc0b0 (49328) - ULDC.U8 UR4, c[0x0][0x571] ;
Inject count_instr before - Instr 3086 @ 0xc0e0 (49376) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 3091 @ 0xc130 (49456) - UMOV UR4, 0xa594200 ;
Inject count_instr before - Instr 3109 @ 0xc250 (49744) - ULDC.64 UR4, c[0x0][0x540] ;
Inject count_instr before - Instr 3112 @ 0xc280 (49792) - F2F.F16.F32 R11, R11 ;
Inject count_instr before - Instr 3115 @ 0xc2b0 (49840) - ISETP.GE.AND P0, PT, R3, c[0x0][0x170], PT ;
Inject count_instr before - Instr 3117 @ 0xc2d0 (49872) - ISETP.NE.AND P1, PT, R5, RZ, PT ;
Inject count_instr before - Instr 3120 @ 0xc300 (49920) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
Inject count_instr before - Instr 3123 @ 0xc330 (49968) - ISETP.NE.U32.AND P0, PT, R8, RZ, PT ;
Inject count_instr before - Instr 3127 @ 0xc370 (50032) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3129 @ 0xc390 (50064) - LDG.E.SYS R3, [R8] ;
Inject count_instr before - Instr 3131 @ 0xc3b0 (50096) - ULDC.U8 UR4, c[0x0][0x571] ;
Inject count_instr before - Instr 3134 @ 0xc3e0 (50144) - FMUL R4, R4, c[0x0][0x160] ;
Inject count_instr before - Instr 3139 @ 0xc430 (50224) - UMOV UR4, 0xa594200 ;
Inject count_instr before - Instr 3157 @ 0xc550 (50512) - ULDC.64 UR4, c[0x0][0x540] ;
Inject count_instr before - Instr 3160 @ 0xc580 (50560) - STG.E.SYS [R8], R4 ;
Inject count_instr before - Instr 3162 @ 0xc5a0 (50592) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3164 @ 0xc5c0 (50624) - LDG.E.U16.SYS R0, [R6] ;
Inject count_instr before - Instr 3167 @ 0xc5f0 (50672) - ULDC.U8 UR4, c[0x0][0x571] ;
Inject count_instr before - Instr 3170 @ 0xc620 (50720) - FMUL R4, R4, c[0x0][0x160] ;
Inject count_instr before - Instr 3175 @ 0xc670 (50800) - UMOV UR4, 0xa594200 ;
Inject count_instr before - Instr 3193 @ 0xc790 (51088) - ULDC.64 UR4, c[0x0][0x540] ;
Inject count_instr before - Instr 3196 @ 0xc7c0 (51136) - F2F.F16.F32 R3, R4 ;
Inject count_instr before - Instr 3199 @ 0xc7f0 (51184) - IMAD.MOV.U32 R22, RZ, RZ, R8 ;
Inject count_instr before - Instr 3268 @ 0xcc40 (52288) - I2F.U64.RP R15, R12 ;
Inject count_instr before - Instr 3331 @ 0xd030 (53296) - BRA 0xd030;
kernel 266 - _ZN2at6native13reduce_kernelILi512ELi1ENS0_8ReduceOpIN3c104HalfENS0_7MeanOpsIS4_ffS4_EEjS4_Li4ELi4EEEEEvT1_ - #thread-blocks 32,  kernel instructions 92672, total instructions 65355739
Function std::enable_if<!(false), void>::type internal::gemvx::kernel<int, int, __half, __half, __half, float, false, true, true, false, 8, false, cublasGemvParams<cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half>, float> >(cublasGemvParams<cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half>, float>)
Basic block id 0 - num instructions 19
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R7, SR_TID.Y ;
 Instr 2 @ 0x20 (32) - MOV R0, c[0x0][0x1d0] ;
 Instr 3 @ 0x30 (48) - S2R R76, SR_CTAID.X ;
 Instr 4 @ 0x40 (64) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 5 @ 0x50 (80) - @P0 MOV R79, c[0x0][0x1d8] ;
 Instr 6 @ 0x60 (96) - @P0 MOV R78, c[0x0][0x1e0] ;
 Instr 7 @ 0x70 (112) - @!P0 MOV R2, c[0x0][0x1d8] ;
 Instr 8 @ 0x80 (128) - @!P0 MOV R3, c[0x0][0x1dc] ;
 Instr 9 @ 0x90 (144) - @!P0 MOV R4, c[0x0][0x1e0] ;
 Instr 10 @ 0xa0 (160) - @!P0 MOV R5, c[0x0][0x1e4] ;
 Instr 11 @ 0xb0 (176) - IMAD R76, R76, c[0x0][0x4], R7 ;
 Instr 12 @ 0xc0 (192) - @!P0 LDG.E.SYS R79, [R2] ;
 Instr 13 @ 0xd0 (208) - @!P0 LDG.E.SYS R78, [R4] ;
 Instr 14 @ 0xe0 (224) - ISETP.GE.AND P0, PT, R76, c[0x0][0x1a4], PT ;
 Instr 15 @ 0xf0 (240) - BMOV.32.CLEAR RZ, B0 ;
 Instr 16 @ 0x100 (256) - BSSY B0, 0x2360 ;
 Instr 17 @ 0x110 (272) - MOV R75, RZ ;
 Instr 18 @ 0x120 (288) - @P0 BRA 0x2350 ;
Basic block id 1 - num instructions 10
 Instr 19 @ 0x130 (304) - S2R R0, SR_CTAID.Z ;
 Instr 20 @ 0x140 (320) - UMOV UR4, 0x1 ;
 Instr 21 @ 0x150 (336) - ULDC UR5, c[0x0][0x14] ;
 Instr 22 @ 0x160 (352) - UIADD3 UR4, -UR4, UR5, URZ ;
 Instr 23 @ 0x170 (368) - ISETP.NE.AND P1, PT, R0, UR4, PT ;
 Instr 24 @ 0x180 (384) - SEL R74, RZ, c[0x0][0x1e8], P1 ;
 Instr 25 @ 0x190 (400) - ISETP.NE.AND P1, PT, R74, RZ, PT ;
 Instr 26 @ 0x1a0 (416) - SEL R74, R74, c[0x0][0x1a0], P1 ;
 Instr 27 @ 0x1b0 (432) - ISETP.GE.AND P1, PT, R74, 0x1, PT ;
 Instr 28 @ 0x1c0 (448) - @!P1 BRA 0x2350 ;
Basic block id 2 - num instructions 15
 Instr 29 @ 0x1d0 (464) - S2R R2, SR_TID.X ;
 Instr 30 @ 0x1e0 (480) - MOV R77, 0x1 ;
 Instr 31 @ 0x1f0 (496) - IMAD R80, R76, c[0x0][0x1a8], RZ ;
 Instr 32 @ 0x200 (512) - IADD3 R3, RZ, -c[0x0][0x1ec], RZ ;
 Instr 33 @ 0x210 (528) - ISETP.NE.AND P1, PT, R77, c[0x0][0x1f0], PT ;
 Instr 34 @ 0x220 (544) - SHF.R.S32.HI R81, RZ, 0x1f, R80 ;
 Instr 35 @ 0x230 (560) - IMAD R72, R3, c[0x0][0x0], R74 ;
 Instr 36 @ 0x240 (576) - SEL R77, R77, c[0x0][0x1ec], P1 ;
 Instr 37 @ 0x250 (592) - MOV R70, c[0x0][0x1f0] ;
 Instr 38 @ 0x260 (608) - IMAD.WIDE.U32 R80, R0, c[0x0][0x168], R80 ;
 Instr 39 @ 0x270 (624) - MOV R71, RZ ;
 Instr 40 @ 0x280 (640) - MOV R75, RZ ;
 Instr 41 @ 0x290 (656) - IMAD R3, R0, c[0x0][0x16c], R81 ;
 Instr 42 @ 0x2a0 (672) - IMAD R73, R77, R2, RZ ;
 Instr 43 @ 0x2b0 (688) - LEA R70, R70, R73, 0x5 ;
Basic block id 3 - num instructions 9
 Instr 44 @ 0x2c0 (704) - MOV R4, c[0x0][0x1ec] ;
 Instr 45 @ 0x2d0 (720) - ISETP.GT.AND P3, PT, R71, R72, PT ;
 Instr 46 @ 0x2e0 (736) - MOV R69, c[0x0][0x1ec] ;
 Instr 47 @ 0x2f0 (752) - IMAD R5, R4, c[0x0][0x0], R71 ;
 Instr 48 @ 0x300 (768) - IMNMX R6, R74, R5, PT ;
 Instr 49 @ 0x310 (784) - ISETP.GE.AND P2, PT, R5, R74, PT ;
 Instr 50 @ 0x320 (800) - IADD3 R10, R6, -R71, RZ ;
 Instr 51 @ 0x330 (816) - MOV R71, R5 ;
 Instr 52 @ 0x340 (832) - @!P3 BRA 0x560 ;
Basic block id 4 - num instructions 1
 Instr 53 @ 0x350 (848) - @!P1 BRA 0x520 ;
Basic block id 5 - num instructions 28
 Instr 54 @ 0x360 (864) - IABS R9, c[0x0][0x1f0] ;
 Instr 55 @ 0x370 (880) - IMAD R5, R77, R2, RZ ;
 Instr 56 @ 0x380 (896) - I2F.RP R8, R9 ;
 Instr 57 @ 0x390 (912) - LOP3.LUT R5, RZ, R5, RZ, 0x33, !PT ;
 Instr 58 @ 0x3a0 (928) - IADD3 R5, R10, c[0x0][0x1f0], R5 ;
 Instr 59 @ 0x3b0 (944) - MUFU.RCP R8, R8 ;
 Instr 60 @ 0x3c0 (960) - IADD3 R6, R8, 0xffffffe, RZ ;
 Instr 61 @ 0x3d0 (976) - IABS R8, R5 ;
 Instr 62 @ 0x3e0 (992) - LOP3.LUT R5, R5, c[0x0][0x1f0], RZ, 0x3c, !PT ;
 Instr 63 @ 0x3f0 (1008) - F2I.FTZ.U32.TRUNC.NTZ R7, R6 ;
 Instr 64 @ 0x400 (1024) - ISETP.GE.AND P5, PT, R5, RZ, PT ;
 Instr 65 @ 0x410 (1040) - MOV R6, RZ ;
 Instr 66 @ 0x420 (1056) - IADD3 R12, RZ, -R7, RZ ;
 Instr 67 @ 0x430 (1072) - IMAD R11, R12, R9, RZ ;
 Instr 68 @ 0x440 (1088) - IMAD.HI.U32 R7, R7, R11, R6 ;
 Instr 69 @ 0x450 (1104) - IMAD.HI.U32 R7, R7, R8, RZ ;
 Instr 70 @ 0x460 (1120) - IADD3 R6, -R7, RZ, RZ ;
 Instr 71 @ 0x470 (1136) - IMAD R6, R9, R6, R8 ;
 Instr 72 @ 0x480 (1152) - ISETP.GT.U32.AND P4, PT, R9, R6, PT ;
 Instr 73 @ 0x490 (1168) - @!P4 IADD3 R6, R6, -R9.reuse, RZ ;
 Instr 74 @ 0x4a0 (1184) - @!P4 IADD3 R7, R7, 0x1, RZ ;
 Instr 75 @ 0x4b0 (1200) - ISETP.GE.U32.AND P3, PT, R6, R9, PT ;
 Instr 76 @ 0x4c0 (1216) - ISETP.NE.AND P4, PT, RZ, c[0x0][0x1f0], PT ;
 Instr 77 @ 0x4d0 (1232) - @P3 IADD3 R7, R7, 0x1, RZ ;
 Instr 78 @ 0x4e0 (1248) - @!P5 IADD3 R7, -R7, RZ, RZ ;
 Instr 79 @ 0x4f0 (1264) - @!P4 LOP3.LUT R7, RZ, c[0x0][0x1f0], RZ, 0x33, !PT ;
 Instr 80 @ 0x500 (1280) - MOV R69, R7 ;
 Instr 81 @ 0x510 (1296) - BRA 0x560 ;
Basic block id 6 - num instructions 4
 Instr 82 @ 0x520 (1312) - IMAD R5, R77.reuse, R2, c[0x0][0x1ec] ;
 Instr 83 @ 0x530 (1328) - IADD3 R69, -R77, RZ, RZ ;
 Instr 84 @ 0x540 (1344) - IMNMX R5, R10, R5, PT ;
 Instr 85 @ 0x550 (1360) - IMAD R69, R2, R69, R5 ;
Basic block id 7 - num instructions 5
 Instr 86 @ 0x560 (1376) - ISETP.GE.AND P3, PT, R69, 0x20, PT ;
 Instr 87 @ 0x570 (1392) - BMOV.32.CLEAR RZ, B1 ;
 Instr 88 @ 0x580 (1408) - BSSY B1, 0x1470 ;
 Instr 89 @ 0x590 (1424) - MOV R5, R73 ;
 Instr 90 @ 0x5a0 (1440) - @!P3 BRA 0x1460 ;
Basic block id 8 - num instructions 235
 Instr 91 @ 0x5b0 (1456) - SHF.R.S32.HI R7, RZ, 0x1f, R73 ;
 Instr 92 @ 0x5c0 (1472) - MOV R6, R73 ;
 Instr 93 @ 0x5d0 (1488) - IADD3 R10, P3, R73, R80, RZ ;
 Instr 94 @ 0x5e0 (1504) - MOV R82, c[0x0][0x1f0] ;
 Instr 95 @ 0x5f0 (1520) - IMAD.WIDE.U32 R8, R0, c[0x0][0x178], R6 ;
 Instr 96 @ 0x600 (1536) - IADD3.X R7, R7, R3, RZ, P3, !PT ;
 Instr 97 @ 0x610 (1552) - LEA R22, P3, R10, c[0x0][0x160], 0x1 ;
 Instr 98 @ 0x620 (1568) - IMAD R5, R0, c[0x0][0x17c], R9 ;
 Instr 99 @ 0x630 (1584) - LEA R6, P4, R8, c[0x0][0x170], 0x1 ;
 Instr 100 @ 0x640 (1600) - LEA.HI.X R23, R10, c[0x0][0x164], R7, 0x1, P3 ;
 Instr 101 @ 0x650 (1616) - LEA.HI.X R7, R8, c[0x0][0x174], R5, 0x1, P4 ;
 Instr 102 @ 0x660 (1632) - IMAD.WIDE R24, R82, 0x2, R22 ;
 Instr 103 @ 0x670 (1648) - LDG.E.EF.U16.SYS R68, [R22] ;
 Instr 104 @ 0x680 (1664) - IMAD.WIDE R8, R82, 0x2, R6 ;
 Instr 105 @ 0x690 (1680) - LDG.E.U16.STRONG.CTA R67, [R6] ;
 Instr 106 @ 0x6a0 (1696) - IMAD.WIDE R32, R82, 0x2, R24 ;
 Instr 107 @ 0x6b0 (1712) - LDG.E.EF.U16.SYS R66, [R24] ;
 Instr 108 @ 0x6c0 (1728) - IMAD.WIDE R28, R82, 0x2, R8 ;
 Instr 109 @ 0x6d0 (1744) - LDG.E.U16.STRONG.CTA R65, [R8] ;
 Instr 110 @ 0x6e0 (1760) - IMAD.WIDE R26, R82, 0x2, R32 ;
 Instr 111 @ 0x6f0 (1776) - LDG.E.EF.U16.SYS R64, [R32] ;
 Instr 112 @ 0x700 (1792) - IMAD.WIDE R10, R82, 0x2, R28 ;
 Instr 113 @ 0x710 (1808) - LDG.E.U16.STRONG.CTA R63, [R28] ;
 Instr 114 @ 0x720 (1824) - IMAD.WIDE R30, R82, 0x2, R26 ;
 Instr 115 @ 0x730 (1840) - LDG.E.EF.U16.SYS R62, [R26] ;
 Instr 116 @ 0x740 (1856) - IMAD.WIDE R12, R82, 0x2, R10 ;
 Instr 117 @ 0x750 (1872) - LDG.E.U16.STRONG.CTA R5, [R10] ;
 Instr 118 @ 0x760 (1888) - IMAD.WIDE R16, R82, 0x2, R30 ;
 Instr 119 @ 0x770 (1904) - LDG.E.EF.U16.SYS R6, [R30] ;
 Instr 120 @ 0x780 (1920) - IMAD.WIDE R14, R82, 0x2, R12 ;
 Instr 121 @ 0x790 (1936) - LDG.E.U16.STRONG.CTA R7, [R12] ;
 Instr 122 @ 0x7a0 (1952) - IMAD.WIDE R46, R82, 0x2, R16 ;
 Instr 123 @ 0x7b0 (1968) - LDG.E.EF.U16.SYS R8, [R16] ;
 Instr 124 @ 0x7c0 (1984) - IMAD.WIDE R18, R82, 0x2, R14 ;
 Instr 125 @ 0x7d0 (2000) - LDG.E.U16.STRONG.CTA R9, [R14] ;
 Instr 126 @ 0x7e0 (2016) - IMAD.WIDE R34, R82, 0x2, R46 ;
 Instr 127 @ 0x7f0 (2032) - LDG.E.EF.U16.SYS R10, [R46] ;
 Instr 128 @ 0x800 (2048) - IMAD.WIDE R20, R82, 0x2, R18 ;
 Instr 129 @ 0x810 (2064) - LDG.E.U16.STRONG.CTA R11, [R18] ;
 Instr 130 @ 0x820 (2080) - IMAD.WIDE R42, R82, 0x2, R34 ;
 Instr 131 @ 0x830 (2096) - LDG.E.EF.U16.SYS R12, [R34] ;
 Instr 132 @ 0x840 (2112) - IMAD.WIDE R40, R82, 0x2, R20 ;
 Instr 133 @ 0x850 (2128) - LDG.E.U16.STRONG.CTA R13, [R20] ;
 Instr 134 @ 0x860 (2144) - IMAD.WIDE R36, R82, 0x2, R42 ;
 Instr 135 @ 0x870 (2160) - LDG.E.EF.U16.SYS R14, [R42] ;
 Instr 136 @ 0x880 (2176) - IMAD.WIDE R22, R82, 0x2, R40 ;
 Instr 137 @ 0x890 (2192) - LDG.E.U16.STRONG.CTA R15, [R40] ;
 Instr 138 @ 0x8a0 (2208) - IMAD.WIDE R38, R82, 0x2, R36 ;
 Instr 139 @ 0x8b0 (2224) - LDG.E.EF.U16.SYS R16, [R36] ;
 Instr 140 @ 0x8c0 (2240) - IMAD.WIDE R24, R82, 0x2, R22 ;
 Instr 141 @ 0x8d0 (2256) - LDG.E.U16.STRONG.CTA R17, [R22] ;
 Instr 142 @ 0x8e0 (2272) - IMAD.WIDE R28, R82, 0x2, R38 ;
 Instr 143 @ 0x8f0 (2288) - LDG.E.EF.U16.SYS R18, [R38] ;
 Instr 144 @ 0x900 (2304) - IMAD.WIDE R26, R82, 0x2, R24 ;
 Instr 145 @ 0x910 (2320) - LDG.E.U16.STRONG.CTA R19, [R24] ;
 Instr 146 @ 0x920 (2336) - IMAD.WIDE R44, R82, 0x2, R28 ;
 Instr 147 @ 0x930 (2352) - LDG.E.EF.U16.SYS R20, [R28] ;
 Instr 148 @ 0x940 (2368) - IMAD.WIDE R30, R82, 0x2, R26 ;
 Instr 149 @ 0x950 (2384) - LDG.E.U16.STRONG.CTA R21, [R26] ;
 Instr 150 @ 0x960 (2400) - IMAD.WIDE R50, R82, 0x2, R44 ;
 Instr 151 @ 0x970 (2416) - LDG.E.EF.U16.SYS R22, [R44] ;
 Instr 152 @ 0x980 (2432) - IMAD.WIDE R32, R82, 0x2, R30 ;
 Instr 153 @ 0x990 (2448) - LDG.E.U16.STRONG.CTA R23, [R30] ;
 Instr 154 @ 0x9a0 (2464) - IMAD.WIDE R54, R82, 0x2, R50 ;
 Instr 155 @ 0x9b0 (2480) - LDG.E.EF.U16.SYS R24, [R50] ;
 Instr 156 @ 0x9c0 (2496) - IMAD.WIDE R52, R82, 0x2, R32 ;
 Instr 157 @ 0x9d0 (2512) - LDG.E.U16.STRONG.CTA R25, [R32] ;
 Instr 158 @ 0x9e0 (2528) - IMAD.WIDE R46, R82, 0x2, R54 ;
 Instr 159 @ 0x9f0 (2544) - LDG.E.EF.U16.SYS R26, [R54] ;
 Instr 160 @ 0xa00 (2560) - IMAD.WIDE R34, R82, 0x2, R52 ;
 Instr 161 @ 0xa10 (2576) - LDG.E.U16.STRONG.CTA R27, [R52] ;
 Instr 162 @ 0xa20 (2592) - IMAD.WIDE R48, R82, 0x2, R46 ;
 Instr 163 @ 0xa30 (2608) - LDG.E.EF.U16.SYS R28, [R46] ;
 Instr 164 @ 0xa40 (2624) - IMAD.WIDE R36, R82, 0x2, R34 ;
 Instr 165 @ 0xa50 (2640) - LDG.E.U16.STRONG.CTA R29, [R34] ;
 Instr 166 @ 0xa60 (2656) - IMAD.WIDE R40, R82, 0x2, R48 ;
 Instr 167 @ 0xa70 (2672) - LDG.E.EF.U16.SYS R30, [R48] ;
 Instr 168 @ 0xa80 (2688) - IMAD.WIDE R38, R82, 0x2, R36 ;
 Instr 169 @ 0xa90 (2704) - LDG.E.U16.STRONG.CTA R31, [R36] ;
 Instr 170 @ 0xaa0 (2720) - IMAD.WIDE R86, R82, 0x2, R40 ;
 Instr 171 @ 0xab0 (2736) - LDG.E.EF.U16.SYS R32, [R40] ;
 Instr 172 @ 0xac0 (2752) - IMAD.WIDE R42, R82, 0x2, R38 ;
 Instr 173 @ 0xad0 (2768) - LDG.E.U16.STRONG.CTA R33, [R38] ;
 Instr 174 @ 0xae0 (2784) - IMAD.WIDE R56, R82, 0x2, R86 ;
 Instr 175 @ 0xaf0 (2800) - LDG.E.EF.U16.SYS R34, [R86] ;
 Instr 176 @ 0xb00 (2816) - IMAD.WIDE R44, R82, 0x2, R42 ;
 Instr 177 @ 0xb10 (2832) - LDG.E.U16.STRONG.CTA R35, [R42] ;
 Instr 178 @ 0xb20 (2848) - IMAD.WIDE R60, R82, 0x2, R56 ;
 Instr 179 @ 0xb30 (2864) - LDG.E.EF.U16.SYS R36, [R56] ;
 Instr 180 @ 0xb40 (2880) - IMAD.WIDE R50, R82, 0x2, R44 ;
 Instr 181 @ 0xb50 (2896) - LDG.E.U16.STRONG.CTA R37, [R44] ;
 Instr 182 @ 0xb60 (2912) - IMAD.WIDE R58, R82, 0x2, R60 ;
 Instr 183 @ 0xb70 (2928) - LDG.E.EF.U16.SYS R38, [R60] ;
 Instr 184 @ 0xb80 (2944) - IMAD.WIDE R46, R82, 0x2, R50 ;
 Instr 185 @ 0xb90 (2960) - LDG.E.U16.STRONG.CTA R39, [R50] ;
 Instr 186 @ 0xba0 (2976) - IMAD.WIDE R54, R82, 0x2, R58 ;
 Instr 187 @ 0xbb0 (2992) - LDG.E.EF.U16.SYS R40, [R58] ;
 Instr 188 @ 0xbc0 (3008) - IMAD.WIDE R48, R82, 0x2, R46 ;
 Instr 189 @ 0xbd0 (3024) - LDG.E.U16.STRONG.CTA R41, [R46] ;
 Instr 190 @ 0xbe0 (3040) - IMAD.WIDE R84, R82, 0x2, R54 ;
 Instr 191 @ 0xbf0 (3056) - LDG.E.EF.U16.SYS R42, [R54] ;
 Instr 192 @ 0xc00 (3072) - IMAD.WIDE R52, R82, 0x2, R48 ;
 Instr 193 @ 0xc10 (3088) - LDG.E.U16.STRONG.CTA R43, [R48] ;
 Instr 194 @ 0xc20 (3104) - IMAD.WIDE R92, R82, 0x2, R84 ;
 Instr 195 @ 0xc30 (3120) - LDG.E.EF.U16.SYS R44, [R84] ;
 Instr 196 @ 0xc40 (3136) - IMAD.WIDE R90, R82, 0x2, R52 ;
 Instr 197 @ 0xc50 (3152) - LDG.E.U16.STRONG.CTA R45, [R52] ;
 Instr 198 @ 0xc60 (3168) - IMAD.WIDE R88, R82, 0x2, R92 ;
 Instr 199 @ 0xc70 (3184) - LDG.E.EF.U16.SYS R46, [R92] ;
 Instr 200 @ 0xc80 (3200) - IMAD.WIDE R56, R82, 0x2, R90 ;
 Instr 201 @ 0xc90 (3216) - LDG.E.U16.STRONG.CTA R47, [R90] ;
 Instr 202 @ 0xca0 (3232) - IMAD.WIDE R50, R82, 0x2, R88 ;
 Instr 203 @ 0xcb0 (3248) - LDG.E.EF.U16.SYS R48, [R88] ;
 Instr 204 @ 0xcc0 (3264) - IMAD.WIDE R86, R82, 0x2, R56 ;
 Instr 205 @ 0xcd0 (3280) - LDG.E.U16.STRONG.CTA R49, [R56] ;
 Instr 206 @ 0xce0 (3296) - IMAD.WIDE R60, R82, 0x2, R50 ;
 Instr 207 @ 0xcf0 (3312) - LDG.E.EF.U16.SYS R50, [R50] ;
 Instr 208 @ 0xd00 (3328) - IMAD.WIDE R58, R82, 0x2, R86 ;
 Instr 209 @ 0xd10 (3344) - IMAD.WIDE R54, R82.reuse, 0x2, R60 ;
 Instr 210 @ 0xd20 (3360) - LDG.E.EF.U16.SYS R52, [R60] ;
 Instr 211 @ 0xd30 (3376) - IMAD.WIDE R84, R82.reuse, 0x2, R58 ;
 Instr 212 @ 0xd40 (3392) - LDG.E.U16.STRONG.CTA R51, [R86] ;
 Instr 213 @ 0xd50 (3408) - IMAD.WIDE R92, R82.reuse, 0x2, R54 ;
 Instr 214 @ 0xd60 (3424) - LDG.E.U16.STRONG.CTA R53, [R58] ;
 Instr 215 @ 0xd70 (3440) - IMAD.WIDE R90, R82.reuse, 0x2, R84 ;
 Instr 216 @ 0xd80 (3456) - LDG.E.EF.U16.SYS R54, [R54] ;
 Instr 217 @ 0xd90 (3472) - IMAD.WIDE R88, R82.reuse, 0x2, R92 ;
 Instr 218 @ 0xda0 (3488) - LDG.E.EF.U16.SYS R56, [R92] ;
 Instr 219 @ 0xdb0 (3504) - IMAD.WIDE R86, R82.reuse, 0x2, R90 ;
 Instr 220 @ 0xdc0 (3520) - LDG.E.U16.STRONG.CTA R57, [R90] ;
 Instr 221 @ 0xdd0 (3536) - LDG.E.U16.STRONG.CTA R55, [R84] ;
 Instr 222 @ 0xde0 (3552) - LDG.E.EF.U16.SYS R58, [R88] ;
 Instr 223 @ 0xdf0 (3568) - LDG.E.U16.STRONG.CTA R59, [R86] ;
 Instr 224 @ 0xe00 (3584) - IMAD.WIDE R84, R82, 0x2, R88 ;
 Instr 225 @ 0xe10 (3600) - IMAD.WIDE R82, R82, 0x2, R86 ;
 Instr 226 @ 0xe20 (3616) - LDG.E.EF.U16.SYS R60, [R84] ;
 Instr 227 @ 0xe30 (3632) - LDG.E.U16.STRONG.CTA R61, [R82] ;
 Instr 228 @ 0xe40 (3648) - HADD2.F32 R68, R68.H0_H0, -RZ.H0_H0 ;
 Instr 229 @ 0xe50 (3664) - HADD2.F32 R67, R67.H0_H0, -RZ.H0_H0 ;
 Instr 230 @ 0xe60 (3680) - HADD2.F32 R66, R66.H0_H0, -RZ.H0_H0 ;
 Instr 231 @ 0xe70 (3696) - HADD2.F32 R65, R65.H0_H0, -RZ.H0_H0 ;
 Instr 232 @ 0xe80 (3712) - FFMA R67, R68, R67, R75 ;
 Instr 233 @ 0xe90 (3728) - HADD2.F32 R64, R64.H0_H0, -RZ.H0_H0 ;
 Instr 234 @ 0xea0 (3744) - HADD2.F32 R63, R63.H0_H0, -RZ.H0_H0 ;
 Instr 235 @ 0xeb0 (3760) - FFMA R65, R66, R65, R67 ;
 Instr 236 @ 0xec0 (3776) - HADD2.F32 R62, R62.H0_H0, -RZ.H0_H0 ;
 Instr 237 @ 0xed0 (3792) - HADD2.F32 R5, R5.H0_H0, -RZ.H0_H0 ;
 Instr 238 @ 0xee0 (3808) - FFMA R63, R64, R63, R65 ;
 Instr 239 @ 0xef0 (3824) - HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 240 @ 0xf00 (3840) - HADD2.F32 R7, R7.H0_H0, -RZ.H0_H0 ;
 Instr 241 @ 0xf10 (3856) - FFMA R5, R62, R5, R63 ;
 Instr 242 @ 0xf20 (3872) - HADD2.F32 R8, R8.H0_H0, -RZ.H0_H0 ;
 Instr 243 @ 0xf30 (3888) - HADD2.F32 R9, R9.H0_H0, -RZ.H0_H0 ;
 Instr 244 @ 0xf40 (3904) - FFMA R5, R6, R7, R5 ;
 Instr 245 @ 0xf50 (3920) - HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 246 @ 0xf60 (3936) - HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 247 @ 0xf70 (3952) - FFMA R5, R8, R9, R5 ;
 Instr 248 @ 0xf80 (3968) - HADD2.F32 R12, R12.H0_H0, -RZ.H0_H0 ;
 Instr 249 @ 0xf90 (3984) - HADD2.F32 R13, R13.H0_H0, -RZ.H0_H0 ;
 Instr 250 @ 0xfa0 (4000) - FFMA R5, R10, R11, R5 ;
 Instr 251 @ 0xfb0 (4016) - HADD2.F32 R14, R14.H0_H0, -RZ.H0_H0 ;
 Instr 252 @ 0xfc0 (4032) - HADD2.F32 R15, R15.H0_H0, -RZ.H0_H0 ;
 Instr 253 @ 0xfd0 (4048) - FFMA R5, R12, R13, R5 ;
 Instr 254 @ 0xfe0 (4064) - HADD2.F32 R16, R16.H0_H0, -RZ.H0_H0 ;
 Instr 255 @ 0xff0 (4080) - HADD2.F32 R17, R17.H0_H0, -RZ.H0_H0 ;
 Instr 256 @ 0x1000 (4096) - FFMA R5, R14, R15, R5 ;
 Instr 257 @ 0x1010 (4112) - HADD2.F32 R18, R18.H0_H0, -RZ.H0_H0 ;
 Instr 258 @ 0x1020 (4128) - HADD2.F32 R19, R19.H0_H0, -RZ.H0_H0 ;
 Instr 259 @ 0x1030 (4144) - FFMA R5, R16, R17, R5 ;
 Instr 260 @ 0x1040 (4160) - HADD2.F32 R20, R20.H0_H0, -RZ.H0_H0 ;
 Instr 261 @ 0x1050 (4176) - HADD2.F32 R21, R21.H0_H0, -RZ.H0_H0 ;
 Instr 262 @ 0x1060 (4192) - FFMA R5, R18, R19, R5 ;
 Instr 263 @ 0x1070 (4208) - HADD2.F32 R22, R22.H0_H0, -RZ.H0_H0 ;
 Instr 264 @ 0x1080 (4224) - HADD2.F32 R23, R23.H0_H0, -RZ.H0_H0 ;
 Instr 265 @ 0x1090 (4240) - FFMA R5, R20, R21, R5 ;
 Instr 266 @ 0x10a0 (4256) - HADD2.F32 R24, R24.H0_H0, -RZ.H0_H0 ;
 Instr 267 @ 0x10b0 (4272) - HADD2.F32 R25, R25.H0_H0, -RZ.H0_H0 ;
 Instr 268 @ 0x10c0 (4288) - FFMA R5, R22, R23, R5 ;
 Instr 269 @ 0x10d0 (4304) - HADD2.F32 R26, R26.H0_H0, -RZ.H0_H0 ;
 Instr 270 @ 0x10e0 (4320) - HADD2.F32 R27, R27.H0_H0, -RZ.H0_H0 ;
 Instr 271 @ 0x10f0 (4336) - FFMA R5, R24, R25, R5 ;
 Instr 272 @ 0x1100 (4352) - HADD2.F32 R28, R28.H0_H0, -RZ.H0_H0 ;
 Instr 273 @ 0x1110 (4368) - HADD2.F32 R29, R29.H0_H0, -RZ.H0_H0 ;
 Instr 274 @ 0x1120 (4384) - FFMA R5, R26, R27, R5 ;
 Instr 275 @ 0x1130 (4400) - HADD2.F32 R30, R30.H0_H0, -RZ.H0_H0 ;
 Instr 276 @ 0x1140 (4416) - HADD2.F32 R31, R31.H0_H0, -RZ.H0_H0 ;
 Instr 277 @ 0x1150 (4432) - FFMA R5, R28, R29, R5 ;
 Instr 278 @ 0x1160 (4448) - HADD2.F32 R32, R32.H0_H0, -RZ.H0_H0 ;
 Instr 279 @ 0x1170 (4464) - HADD2.F32 R33, R33.H0_H0, -RZ.H0_H0 ;
 Instr 280 @ 0x1180 (4480) - FFMA R5, R30, R31, R5 ;
 Instr 281 @ 0x1190 (4496) - HADD2.F32 R34, R34.H0_H0, -RZ.H0_H0 ;
 Instr 282 @ 0x11a0 (4512) - HADD2.F32 R35, R35.H0_H0, -RZ.H0_H0 ;
 Instr 283 @ 0x11b0 (4528) - FFMA R5, R32, R33, R5 ;
 Instr 284 @ 0x11c0 (4544) - HADD2.F32 R36, R36.H0_H0, -RZ.H0_H0 ;
 Instr 285 @ 0x11d0 (4560) - HADD2.F32 R37, R37.H0_H0, -RZ.H0_H0 ;
 Instr 286 @ 0x11e0 (4576) - FFMA R5, R34, R35, R5 ;
 Instr 287 @ 0x11f0 (4592) - HADD2.F32 R38, R38.H0_H0, -RZ.H0_H0 ;
 Instr 288 @ 0x1200 (4608) - HADD2.F32 R39, R39.H0_H0, -RZ.H0_H0 ;
 Instr 289 @ 0x1210 (4624) - FFMA R5, R36, R37, R5 ;
 Instr 290 @ 0x1220 (4640) - HADD2.F32 R40, R40.H0_H0, -RZ.H0_H0 ;
 Instr 291 @ 0x1230 (4656) - HADD2.F32 R41, R41.H0_H0, -RZ.H0_H0 ;
 Instr 292 @ 0x1240 (4672) - FFMA R5, R38, R39, R5 ;
 Instr 293 @ 0x1250 (4688) - HADD2.F32 R42, R42.H0_H0, -RZ.H0_H0 ;
 Instr 294 @ 0x1260 (4704) - HADD2.F32 R43, R43.H0_H0, -RZ.H0_H0 ;
 Instr 295 @ 0x1270 (4720) - FFMA R5, R40, R41, R5 ;
 Instr 296 @ 0x1280 (4736) - HADD2.F32 R44, R44.H0_H0, -RZ.H0_H0 ;
 Instr 297 @ 0x1290 (4752) - HADD2.F32 R45, R45.H0_H0, -RZ.H0_H0 ;
 Instr 298 @ 0x12a0 (4768) - FFMA R5, R42, R43, R5 ;
 Instr 299 @ 0x12b0 (4784) - HADD2.F32 R46, R46.H0_H0, -RZ.H0_H0 ;
 Instr 300 @ 0x12c0 (4800) - HADD2.F32 R47, R47.H0_H0, -RZ.H0_H0 ;
 Instr 301 @ 0x12d0 (4816) - FFMA R5, R44, R45, R5 ;
 Instr 302 @ 0x12e0 (4832) - HADD2.F32 R48, R48.H0_H0, -RZ.H0_H0 ;
 Instr 303 @ 0x12f0 (4848) - HADD2.F32 R49, R49.H0_H0, -RZ.H0_H0 ;
 Instr 304 @ 0x1300 (4864) - FFMA R5, R46, R47, R5 ;
 Instr 305 @ 0x1310 (4880) - HADD2.F32 R50, R50.H0_H0, -RZ.H0_H0 ;
 Instr 306 @ 0x1320 (4896) - FFMA R5, R48, R49, R5 ;
 Instr 307 @ 0x1330 (4912) - HADD2.F32 R52, R52.H0_H0, -RZ.H0_H0 ;
 Instr 308 @ 0x1340 (4928) - HADD2.F32 R51, R51.H0_H0, -RZ.H0_H0 ;
 Instr 309 @ 0x1350 (4944) - HADD2.F32 R53, R53.H0_H0, -RZ.H0_H0 ;
 Instr 310 @ 0x1360 (4960) - FFMA R5, R50, R51, R5 ;
 Instr 311 @ 0x1370 (4976) - HADD2.F32 R54, R54.H0_H0, -RZ.H0_H0 ;
 Instr 312 @ 0x1380 (4992) - FFMA R5, R52, R53, R5 ;
 Instr 313 @ 0x1390 (5008) - HADD2.F32 R56, R56.H0_H0, -RZ.H0_H0 ;
 Instr 314 @ 0x13a0 (5024) - HADD2.F32 R57, R57.H0_H0, -RZ.H0_H0 ;
 Instr 315 @ 0x13b0 (5040) - HADD2.F32 R55, R55.H0_H0, -RZ.H0_H0 ;
 Instr 316 @ 0x13c0 (5056) - HADD2.F32 R58, R58.H0_H0, -RZ.H0_H0 ;
 Instr 317 @ 0x13d0 (5072) - FFMA R5, R54, R55, R5 ;
 Instr 318 @ 0x13e0 (5088) - HADD2.F32 R59, R59.H0_H0, -RZ.H0_H0 ;
 Instr 319 @ 0x13f0 (5104) - FFMA R5, R56, R57, R5 ;
 Instr 320 @ 0x1400 (5120) - HADD2.F32 R75, R60.H0_H0, -RZ.H0_H0 ;
 Instr 321 @ 0x1410 (5136) - HADD2.F32 R61, R61.H0_H0, -RZ.H0_H0 ;
 Instr 322 @ 0x1420 (5152) - FFMA R58, R58, R59, R5 ;
 Instr 323 @ 0x1430 (5168) - IADD3 R69, R69, -0x20, RZ ;
 Instr 324 @ 0x1440 (5184) - MOV R5, R70 ;
 Instr 325 @ 0x1450 (5200) - FFMA R75, R75, R61, R58 ;
Basic block id 9 - num instructions 5
 Instr 326 @ 0x1460 (5216) - BSYNC B1 ;
 Instr 327 @ 0x1470 (5232) - ISETP.GE.AND P3, PT, R69, 0x10, PT ;
 Instr 328 @ 0x1480 (5248) - BMOV.32.CLEAR RZ, B1 ;
 Instr 329 @ 0x1490 (5264) - BSSY B1, 0x1c70 ;
 Instr 330 @ 0x14a0 (5280) - @!P3 BRA 0x1c60 ;
Basic block id 10 - num instructions 123
 Instr 331 @ 0x14b0 (5296) - SHF.R.S32.HI R9, RZ, 0x1f, R5 ;
 Instr 332 @ 0x14c0 (5312) - MOV R8, R5 ;
 Instr 333 @ 0x14d0 (5328) - IADD3 R10, P3, R5, R80, RZ ;
 Instr 334 @ 0x14e0 (5344) - IMAD.WIDE.U32 R6, R0, c[0x0][0x178], R8 ;
 Instr 335 @ 0x14f0 (5360) - IADD3.X R9, R9, R3, RZ, P3, !PT ;
 Instr 336 @ 0x1500 (5376) - LEA R22, P3, R10, c[0x0][0x160], 0x1 ;
 Instr 337 @ 0x1510 (5392) - IMAD R7, R0, c[0x0][0x17c], R7 ;
 Instr 338 @ 0x1520 (5408) - LEA R24, P4, R6, c[0x0][0x170], 0x1 ;
 Instr 339 @ 0x1530 (5424) - LEA.HI.X R23, R10, c[0x0][0x164], R9, 0x1, P3 ;
 Instr 340 @ 0x1540 (5440) - MOV R8, c[0x0][0x1f0] ;
 Instr 341 @ 0x1550 (5456) - LEA.HI.X R25, R6, c[0x0][0x174], R7, 0x1, P4 ;
 Instr 342 @ 0x1560 (5472) - IMAD.WIDE R34, R8.reuse, 0x2, R22 ;
 Instr 343 @ 0x1570 (5488) - LDG.E.EF.U16.SYS R6, [R22] ;
 Instr 344 @ 0x1580 (5504) - IMAD.WIDE R30, R8.reuse, 0x2, R24 ;
 Instr 345 @ 0x1590 (5520) - LDG.E.U16.STRONG.CTA R10, [R24] ;
 Instr 346 @ 0x15a0 (5536) - IMAD.WIDE R28, R8.reuse, 0x2, R34 ;
 Instr 347 @ 0x15b0 (5552) - LDG.E.EF.U16.SYS R7, [R34] ;
 Instr 348 @ 0x15c0 (5568) - IMAD.WIDE R12, R8.reuse, 0x2, R30 ;
 Instr 349 @ 0x15d0 (5584) - LDG.E.U16.STRONG.CTA R11, [R30] ;
 Instr 350 @ 0x15e0 (5600) - IMAD.WIDE R46, R8.reuse, 0x2, R28 ;
 Instr 351 @ 0x15f0 (5616) - LDG.E.EF.U16.SYS R9, [R28] ;
 Instr 352 @ 0x1600 (5632) - IMAD.WIDE R32, R8, 0x2, R12 ;
 Instr 353 @ 0x1610 (5648) - LDG.E.U16.STRONG.CTA R12, [R12] ;
 Instr 354 @ 0x1620 (5664) - IMAD.WIDE R26, R8.reuse, 0x2, R46 ;
 Instr 355 @ 0x1630 (5680) - LDG.E.EF.U16.SYS R46, [R46] ;
 Instr 356 @ 0x1640 (5696) - IMAD.WIDE R14, R8.reuse, 0x2, R32 ;
 Instr 357 @ 0x1650 (5712) - LDG.E.U16.STRONG.CTA R45, [R32] ;
 Instr 358 @ 0x1660 (5728) - IMAD.WIDE R20, R8, 0x2, R26 ;
 Instr 359 @ 0x1670 (5744) - LDG.E.EF.U16.SYS R44, [R26] ;
 Instr 360 @ 0x1680 (5760) - IMAD.WIDE R18, R8.reuse, 0x2, R14 ;
 Instr 361 @ 0x1690 (5776) - LDG.E.U16.STRONG.CTA R43, [R14] ;
 Instr 362 @ 0x16a0 (5792) - IMAD.WIDE R16, R8.reuse, 0x2, R20 ;
 Instr 363 @ 0x16b0 (5808) - LDG.E.EF.U16.SYS R42, [R20] ;
 Instr 364 @ 0x16c0 (5824) - IMAD.WIDE R22, R8, 0x2, R18 ;
 Instr 365 @ 0x16d0 (5840) - LDG.E.U16.STRONG.CTA R41, [R18] ;
 Instr 366 @ 0x16e0 (5856) - IMAD.WIDE R24, R8.reuse, 0x2, R16 ;
 Instr 367 @ 0x16f0 (5872) - LDG.E.EF.U16.SYS R40, [R16] ;
 Instr 368 @ 0x1700 (5888) - IMAD.WIDE R48, R8.reuse, 0x2, R22 ;
 Instr 369 @ 0x1710 (5904) - LDG.E.U16.STRONG.CTA R39, [R22] ;
 Instr 370 @ 0x1720 (5920) - IMAD.WIDE R30, R8, 0x2, R24 ;
 Instr 371 @ 0x1730 (5936) - LDG.E.EF.U16.SYS R38, [R24] ;
 Instr 372 @ 0x1740 (5952) - IMAD.WIDE R28, R8.reuse, 0x2, R48 ;
 Instr 373 @ 0x1750 (5968) - LDG.E.U16.STRONG.CTA R37, [R48] ;
 Instr 374 @ 0x1760 (5984) - IMAD.WIDE R34, R8.reuse, 0x2, R30 ;
 Instr 375 @ 0x1770 (6000) - LDG.E.EF.U16.SYS R36, [R30] ;
 Instr 376 @ 0x1780 (6016) - IMAD.WIDE R32, R8, 0x2, R28 ;
 Instr 377 @ 0x1790 (6032) - LDG.E.U16.STRONG.CTA R27, [R28] ;
 Instr 378 @ 0x17a0 (6048) - IMAD.WIDE R14, R8.reuse, 0x2, R34 ;
 Instr 379 @ 0x17b0 (6064) - LDG.E.EF.U16.SYS R26, [R34] ;
 Instr 380 @ 0x17c0 (6080) - IMAD.WIDE R20, R8.reuse, 0x2, R32 ;
 Instr 381 @ 0x17d0 (6096) - LDG.E.U16.STRONG.CTA R13, [R32] ;
 Instr 382 @ 0x17e0 (6112) - IMAD.WIDE R18, R8, 0x2, R14 ;
 Instr 383 @ 0x17f0 (6128) - LDG.E.EF.U16.SYS R47, [R14] ;
 Instr 384 @ 0x1800 (6144) - IMAD.WIDE R16, R8.reuse, 0x2, R20 ;
 Instr 385 @ 0x1810 (6160) - LDG.E.U16.STRONG.CTA R48, [R20] ;
 Instr 386 @ 0x1820 (6176) - IMAD.WIDE R22, R8.reuse, 0x2, R18 ;
 Instr 387 @ 0x1830 (6192) - LDG.E.EF.U16.SYS R18, [R18] ;
 Instr 388 @ 0x1840 (6208) - IMAD.WIDE R24, R8, 0x2, R16 ;
 Instr 389 @ 0x1850 (6224) - LDG.E.U16.STRONG.CTA R16, [R16] ;
 Instr 390 @ 0x1860 (6240) - IMAD.WIDE R28, R8.reuse, 0x2, R22 ;
 Instr 391 @ 0x1870 (6256) - LDG.E.EF.U16.SYS R22, [R22] ;
 Instr 392 @ 0x1880 (6272) - IMAD.WIDE R30, R8.reuse, 0x2, R24 ;
 Instr 393 @ 0x1890 (6288) - LDG.E.U16.STRONG.CTA R24, [R24] ;
 Instr 394 @ 0x18a0 (6304) - IMAD.WIDE R32, R8, 0x2, R28 ;
 Instr 395 @ 0x18b0 (6320) - LDG.E.EF.U16.SYS R28, [R28] ;
 Instr 396 @ 0x18c0 (6336) - IMAD.WIDE R34, R8.reuse, 0x2, R30 ;
 Instr 397 @ 0x18d0 (6352) - LDG.E.U16.STRONG.CTA R30, [R30] ;
 Instr 398 @ 0x18e0 (6368) - IMAD.WIDE R20, R8.reuse, 0x2, R32 ;
 Instr 399 @ 0x18f0 (6384) - LDG.E.EF.U16.SYS R32, [R32] ;
 Instr 400 @ 0x1900 (6400) - IMAD.WIDE R14, R8, 0x2, R34 ;
 Instr 401 @ 0x1910 (6416) - LDG.E.U16.STRONG.CTA R34, [R34] ;
 Instr 402 @ 0x1920 (6432) - LDG.E.EF.U16.SYS R20, [R20] ;
 Instr 403 @ 0x1930 (6448) - LDG.E.U16.STRONG.CTA R14, [R14] ;
 Instr 404 @ 0x1940 (6464) - LEA R5, R8, R5, 0x4 ;
 Instr 405 @ 0x1950 (6480) - IADD3 R69, R69, -0x10, RZ ;
 Instr 406 @ 0x1960 (6496) - HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 407 @ 0x1970 (6512) - HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 408 @ 0x1980 (6528) - HADD2.F32 R7, R7.H0_H0, -RZ.H0_H0 ;
 Instr 409 @ 0x1990 (6544) - HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 410 @ 0x19a0 (6560) - FFMA R6, R6, R10, R75 ;
 Instr 411 @ 0x19b0 (6576) - HADD2.F32 R9, R9.H0_H0, -RZ.H0_H0 ;
 Instr 412 @ 0x19c0 (6592) - HADD2.F32 R12, R12.H0_H0, -RZ.H0_H0 ;
 Instr 413 @ 0x19d0 (6608) - FFMA R6, R7, R11, R6 ;
 Instr 414 @ 0x19e0 (6624) - HADD2.F32 R7, R46.H0_H0, -RZ.H0_H0 ;
 Instr 415 @ 0x19f0 (6640) - HADD2.F32 R45, R45.H0_H0, -RZ.H0_H0 ;
 Instr 416 @ 0x1a00 (6656) - FFMA R6, R9, R12, R6 ;
 Instr 417 @ 0x1a10 (6672) - HADD2.F32 R9, R44.H0_H0, -RZ.H0_H0 ;
 Instr 418 @ 0x1a20 (6688) - HADD2.F32 R43, R43.H0_H0, -RZ.H0_H0 ;
 Instr 419 @ 0x1a30 (6704) - FFMA R6, R7, R45, R6 ;
 Instr 420 @ 0x1a40 (6720) - HADD2.F32 R7, R42.H0_H0, -RZ.H0_H0 ;
 Instr 421 @ 0x1a50 (6736) - HADD2.F32 R41, R41.H0_H0, -RZ.H0_H0 ;
 Instr 422 @ 0x1a60 (6752) - FFMA R6, R9, R43, R6 ;
 Instr 423 @ 0x1a70 (6768) - HADD2.F32 R9, R40.H0_H0, -RZ.H0_H0 ;
 Instr 424 @ 0x1a80 (6784) - HADD2.F32 R39, R39.H0_H0, -RZ.H0_H0 ;
 Instr 425 @ 0x1a90 (6800) - FFMA R6, R7, R41, R6 ;
 Instr 426 @ 0x1aa0 (6816) - HADD2.F32 R7, R38.H0_H0, -RZ.H0_H0 ;
 Instr 427 @ 0x1ab0 (6832) - HADD2.F32 R37, R37.H0_H0, -RZ.H0_H0 ;
 Instr 428 @ 0x1ac0 (6848) - FFMA R6, R9, R39, R6 ;
 Instr 429 @ 0x1ad0 (6864) - HADD2.F32 R9, R36.H0_H0, -RZ.H0_H0 ;
 Instr 430 @ 0x1ae0 (6880) - HADD2.F32 R27, R27.H0_H0, -RZ.H0_H0 ;
 Instr 431 @ 0x1af0 (6896) - FFMA R6, R7, R37, R6 ;
 Instr 432 @ 0x1b00 (6912) - HADD2.F32 R7, R26.H0_H0, -RZ.H0_H0 ;
 Instr 433 @ 0x1b10 (6928) - HADD2.F32 R13, R13.H0_H0, -RZ.H0_H0 ;
 Instr 434 @ 0x1b20 (6944) - FFMA R6, R9, R27, R6 ;
 Instr 435 @ 0x1b30 (6960) - HADD2.F32 R47, R47.H0_H0, -RZ.H0_H0 ;
 Instr 436 @ 0x1b40 (6976) - HADD2.F32 R48, R48.H0_H0, -RZ.H0_H0 ;
 Instr 437 @ 0x1b50 (6992) - FFMA R6, R7, R13, R6 ;
 Instr 438 @ 0x1b60 (7008) - HADD2.F32 R7, R18.H0_H0, -RZ.H0_H0 ;
 Instr 439 @ 0x1b70 (7024) - HADD2.F32 R16, R16.H0_H0, -RZ.H0_H0 ;
 Instr 440 @ 0x1b80 (7040) - FFMA R6, R47, R48, R6 ;
 Instr 441 @ 0x1b90 (7056) - HADD2.F32 R9, R22.H0_H0, -RZ.H0_H0 ;
 Instr 442 @ 0x1ba0 (7072) - HADD2.F32 R24, R24.H0_H0, -RZ.H0_H0 ;
 Instr 443 @ 0x1bb0 (7088) - FFMA R6, R7, R16, R6 ;
 Instr 444 @ 0x1bc0 (7104) - HADD2.F32 R7, R28.H0_H0, -RZ.H0_H0 ;
 Instr 445 @ 0x1bd0 (7120) - HADD2.F32 R30, R30.H0_H0, -RZ.H0_H0 ;
 Instr 446 @ 0x1be0 (7136) - FFMA R6, R9, R24, R6 ;
 Instr 447 @ 0x1bf0 (7152) - HADD2.F32 R9, R32.H0_H0, -RZ.H0_H0 ;
 Instr 448 @ 0x1c00 (7168) - HADD2.F32 R34, R34.H0_H0, -RZ.H0_H0 ;
 Instr 449 @ 0x1c10 (7184) - FFMA R6, R7, R30, R6 ;
 Instr 450 @ 0x1c20 (7200) - HADD2.F32 R75, R20.H0_H0, -RZ.H0_H0 ;
 Instr 451 @ 0x1c30 (7216) - HADD2.F32 R14, R14.H0_H0, -RZ.H0_H0 ;
 Instr 452 @ 0x1c40 (7232) - FFMA R6, R9, R34, R6 ;
 Instr 453 @ 0x1c50 (7248) - FFMA R75, R75, R14, R6 ;
Basic block id 11 - num instructions 5
 Instr 454 @ 0x1c60 (7264) - BSYNC B1 ;
 Instr 455 @ 0x1c70 (7280) - ISETP.GE.AND P3, PT, R69, 0x1, PT ;
 Instr 456 @ 0x1c80 (7296) - BMOV.32.CLEAR RZ, B1 ;
 Instr 457 @ 0x1c90 (7312) - BSSY B1, 0x2320 ;
 Instr 458 @ 0x1ca0 (7328) - @!P3 BRA 0x2310 ;
Basic block id 12 - num instructions 7
 Instr 459 @ 0x1cb0 (7344) - IADD3 R7, R69.reuse, -0x1, RZ ;
 Instr 460 @ 0x1cc0 (7360) - BMOV.32.CLEAR RZ, B2 ;
 Instr 461 @ 0x1cd0 (7376) - LOP3.LUT R6, R69, 0x3, RZ, 0xc0, !PT ;
 Instr 462 @ 0x1ce0 (7392) - BSSY B2, 0x1ff0 ;
 Instr 463 @ 0x1cf0 (7408) - ISETP.GE.U32.AND P4, PT, R7, 0x3, PT ;
 Instr 464 @ 0x1d00 (7424) - ISETP.NE.AND P3, PT, R6, RZ, PT ;
 Instr 465 @ 0x1d10 (7440) - @!P4 BRA 0x1fe0 ;
Basic block id 13 - num instructions 1
 Instr 466 @ 0x1d20 (7456) - IADD3 R69, -R6, R69, RZ ;
Basic block id 14 - num instructions 8
 Instr 467 @ 0x1d30 (7472) - SHF.R.S32.HI R9, RZ, 0x1f, R5 ;
 Instr 468 @ 0x1d40 (7488) - MOV R8, R5 ;
 Instr 469 @ 0x1d50 (7504) - IADD3 R11, P4, R5, R80, RZ ;
 Instr 470 @ 0x1d60 (7520) - MOV R23, c[0x0][0x1f0] ;
 Instr 471 @ 0x1d70 (7536) - IMAD.WIDE.U32 R12, R0.reuse, c[0x0][0x178], R8 ;
 Instr 472 @ 0x1d80 (7552) - IADD3.X R14, R9, R3, RZ, P4, !PT ;
 Instr 473 @ 0x1d90 (7568) - LEA R8, P4, R11, c[0x0][0x160], 0x1 ;
 Instr 474 @ 0x1da0 (7584) - IMAD R7, R0, c[0x0][0x17c], R13 ;
Basic block id 15 - num instructions 9
 Instr 475 @ 0x1db0 (7600) - LEA R10, P5, R12, c[0x0][0x170], 0x1 ;
 Instr 476 @ 0x1dc0 (7616) - LEA.HI.X R9, R11, c[0x0][0x164], R14, 0x1, P4 ;
 Instr 477 @ 0x1dd0 (7632) - LEA.HI.X R11, R12, c[0x0][0x174], R7, 0x1, P5 ;
 Instr 478 @ 0x1de0 (7648) - IMAD.WIDE R12, R23, 0x2, R8 ;
 Instr 479 @ 0x1df0 (7664) - LDG.E.EF.U16.SYS R8, [R8] ;
 Instr 480 @ 0x1e00 (7680) - IMAD.WIDE R14, R23, 0x2, R10 ;
 Instr 481 @ 0x1e10 (7696) - LDG.E.U16.STRONG.CTA R10, [R10] ;
 Instr 482 @ 0x1e20 (7712) - IMAD.WIDE R16, R23, 0x2, R12 ;
 Instr 483 @ 0x1e30 (7728) - LDG.E.EF.U16.SYS R12, [R12] ;
Basic block id 16 - num instructions 26
 Instr 484 @ 0x1e40 (7744) - IMAD.WIDE R18, R23, 0x2, R14 ;
 Instr 485 @ 0x1e50 (7760) - LDG.E.U16.STRONG.CTA R14, [R14] ;
 Instr 486 @ 0x1e60 (7776) - IMAD.WIDE R20, R23, 0x2, R16 ;
 Instr 487 @ 0x1e70 (7792) - LDG.E.EF.U16.SYS R16, [R16] ;
 Instr 488 @ 0x1e80 (7808) - IMAD.WIDE R22, R23, 0x2, R18 ;
 Instr 489 @ 0x1e90 (7824) - LDG.E.U16.STRONG.CTA R18, [R18] ;
 Instr 490 @ 0x1ea0 (7840) - LDG.E.EF.U16.SYS R20, [R20] ;
 Instr 491 @ 0x1eb0 (7856) - LDG.E.U16.STRONG.CTA R22, [R22] ;
 Instr 492 @ 0x1ec0 (7872) - IADD3 R69, R69, -0x4, RZ ;
 Instr 493 @ 0x1ed0 (7888) - ISETP.NE.AND P4, PT, R69, RZ, PT ;
 Instr 494 @ 0x1ee0 (7904) - HADD2.F32 R8, R8.H0_H0, -RZ.H0_H0 ;
 Instr 495 @ 0x1ef0 (7920) - HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 496 @ 0x1f00 (7936) - HADD2.F32 R7, R12.H0_H0, -RZ.H0_H0 ;
 Instr 497 @ 0x1f10 (7952) - HADD2.F32 R9, R14.H0_H0, -RZ.H0_H0 ;
 Instr 498 @ 0x1f20 (7968) - FFMA R8, R8, R10, R75 ;
 Instr 499 @ 0x1f30 (7984) - HADD2.F32 R10, R16.H0_H0, -RZ.H0_H0 ;
 Instr 500 @ 0x1f40 (8000) - HADD2.F32 R11, R18.H0_H0, -RZ.H0_H0 ;
 Instr 501 @ 0x1f50 (8016) - FFMA R7, R7, R9, R8 ;
 Instr 502 @ 0x1f60 (8032) - MOV R8, c[0x0][0x1f0] ;
 Instr 503 @ 0x1f70 (8048) - HADD2.F32 R20, R20.H0_H0, -RZ.H0_H0 ;
 Instr 504 @ 0x1f80 (8064) - HADD2.F32 R22, R22.H0_H0, -RZ.H0_H0 ;
 Instr 505 @ 0x1f90 (8080) - LEA R5, R8, R5, 0x1 ;
 Instr 506 @ 0x1fa0 (8096) - FFMA R7, R10, R11, R7 ;
 Instr 507 @ 0x1fb0 (8112) - LEA R5, R8, R5, 0x1 ;
 Instr 508 @ 0x1fc0 (8128) - FFMA R75, R20, R22, R7 ;
 Instr 509 @ 0x1fd0 (8144) - @P4 BRA 0x1d30 ;
Basic block id 17 - num instructions 2
 Instr 510 @ 0x1fe0 (8160) - BSYNC B2 ;
 Instr 511 @ 0x1ff0 (8176) - @!P3 BRA 0x2310 ;
Basic block id 18 - num instructions 18
 Instr 512 @ 0x2000 (8192) - SHF.R.S32.HI R9, RZ, 0x1f, R5 ;
 Instr 513 @ 0x2010 (8208) - IMAD R17, R0, c[0x0][0x17c], RZ ;
 Instr 514 @ 0x2020 (8224) - MOV R8, R5 ;
 Instr 515 @ 0x2030 (8240) - IADD3 R13, P3, R5, R80, RZ ;
 Instr 516 @ 0x2040 (8256) - IMAD.WIDE.U32 R10, R0, c[0x0][0x178], R8 ;
 Instr 517 @ 0x2050 (8272) - IADD3.X R14, R9, R3, RZ, P3, !PT ;
 Instr 518 @ 0x2060 (8288) - LEA R8, P3, R13, c[0x0][0x160], 0x1 ;
 Instr 519 @ 0x2070 (8304) - LEA R12, P4, R10.reuse, c[0x0][0x170], 0x1 ;
 Instr 520 @ 0x2080 (8320) - IADD3 R7, R17, R11, RZ ;
 Instr 521 @ 0x2090 (8336) - LEA.HI.X R9, R13, c[0x0][0x164], R14, 0x1, P3 ;
 Instr 522 @ 0x20a0 (8352) - LEA.HI.X R13, R10, c[0x0][0x174], R7, 0x1, P4 ;
 Instr 523 @ 0x20b0 (8368) - LDG.E.EF.U16.SYS R8, [R8] ;
 Instr 524 @ 0x20c0 (8384) - LDG.E.U16.STRONG.CTA R12, [R12] ;
 Instr 525 @ 0x20d0 (8400) - ISETP.NE.AND P3, PT, R6, 0x1, PT ;
 Instr 526 @ 0x20e0 (8416) - HADD2.F32 R10, R8.H0_H0, -RZ.H0_H0 ;
 Instr 527 @ 0x20f0 (8432) - HADD2.F32 R7, R12.H0_H0, -RZ.H0_H0 ;
 Instr 528 @ 0x2100 (8448) - FFMA R75, R10, R7, R75 ;
 Instr 529 @ 0x2110 (8464) - @!P3 BRA 0x2310 ;
Basic block id 19 - num instructions 31
 Instr 530 @ 0x2120 (8480) - ISETP.NE.AND P3, PT, R6, 0x2, PT ;
 Instr 531 @ 0x2130 (8496) - IADD3 R8, R5, c[0x0][0x1f0], RZ ;
 Instr 532 @ 0x2140 (8512) - SHF.R.S32.HI R9, RZ, 0x1f, R8.reuse ;
 Instr 533 @ 0x2150 (8528) - IADD3 R7, P4, R8.reuse, R80.reuse, RZ ;
 Instr 534 @ 0x2160 (8544) - IADD3 R10, R8, c[0x0][0x1f0], RZ ;
 Instr 535 @ 0x2170 (8560) - IADD3.X R12, R9, R3, RZ, P4, !PT ;
 Instr 536 @ 0x2180 (8576) - IMAD.WIDE.U32 R8, R0, c[0x0][0x178], R8 ;
 Instr 537 @ 0x2190 (8592) - @P3 SHF.R.S32.HI R11, RZ, 0x1f, R10 ;
 Instr 538 @ 0x21a0 (8608) - @P3 IADD3 R13, P6, R10, R80, RZ ;
 Instr 539 @ 0x21b0 (8624) - LEA R6, P5, R7, c[0x0][0x160], 0x1 ;
 Instr 540 @ 0x21c0 (8640) - @P3 IMAD.WIDE.U32 R14, R0, c[0x0][0x178], R10 ;
 Instr 541 @ 0x21d0 (8656) - IADD3 R5, R17, R9, RZ ;
 Instr 542 @ 0x21e0 (8672) - LEA R10, P4, R8.reuse, c[0x0][0x170], 0x1 ;
 Instr 543 @ 0x21f0 (8688) - @P3 IADD3.X R16, R11, R3, RZ, P6, !PT ;
 Instr 544 @ 0x2200 (8704) - LEA.HI.X R7, R7, c[0x0][0x164], R12, 0x1, P5 ;
 Instr 545 @ 0x2210 (8720) - LEA.HI.X R11, R8, c[0x0][0x174], R5, 0x1, P4 ;
 Instr 546 @ 0x2220 (8736) - @P3 LEA R12, P5, R13, c[0x0][0x160], 0x1 ;
 Instr 547 @ 0x2230 (8752) - @P3 IADD3 R5, R17, R15, RZ ;
 Instr 548 @ 0x2240 (8768) - @P3 LEA R8, P4, R14.reuse, c[0x0][0x170], 0x1 ;
 Instr 549 @ 0x2250 (8784) - LDG.E.EF.U16.SYS R6, [R6] ;
 Instr 550 @ 0x2260 (8800) - @P3 LEA.HI.X R13, R13, c[0x0][0x164], R16, 0x1, P5 ;
 Instr 551 @ 0x2270 (8816) - @P3 LEA.HI.X R9, R14, c[0x0][0x174], R5, 0x1, P4 ;
 Instr 552 @ 0x2280 (8832) - LDG.E.U16.STRONG.CTA R10, [R10] ;
 Instr 553 @ 0x2290 (8848) - @P3 LDG.E.EF.U16.SYS R12, [R12] ;
 Instr 554 @ 0x22a0 (8864) - @P3 LDG.E.U16.STRONG.CTA R8, [R8] ;
 Instr 555 @ 0x22b0 (8880) - HADD2.F32 R14, R6.H0_H0, -RZ.H0_H0 ;
 Instr 556 @ 0x22c0 (8896) - HADD2.F32 R5, R10.H0_H0, -RZ.H0_H0 ;
 Instr 557 @ 0x22d0 (8912) - @P3 HADD2.F32 R16, R12.H0_H0, -RZ.H0_H0 ;
 Instr 558 @ 0x22e0 (8928) - @P3 HADD2.F32 R15, R8.H0_H0, -RZ.H0_H0 ;
 Instr 559 @ 0x22f0 (8944) - FFMA R75, R14, R5, R75 ;
 Instr 560 @ 0x2300 (8960) - @P3 FFMA R75, R16, R15, R75 ;
Basic block id 20 - num instructions 4
 Instr 561 @ 0x2310 (8976) - BSYNC B1 ;
 Instr 562 @ 0x2320 (8992) - IMAD R73, R4.reuse, c[0x0][0x0], R73 ;
 Instr 563 @ 0x2330 (9008) - IMAD R70, R4, c[0x0][0x0], R70 ;
 Instr 564 @ 0x2340 (9024) - @!P2 BRA 0x2c0 ;
Basic block id 21 - num instructions 12
 Instr 565 @ 0x2350 (9040) - BSYNC B0 ;
 Instr 566 @ 0x2360 (9056) - S2R R0, SR_TID.Y ;
 Instr 567 @ 0x2370 (9072) - UMOV UR4, 0x1 ;
 Instr 568 @ 0x2380 (9088) - MOV R2, c[0x0][0x0] ;
 Instr 569 @ 0x2390 (9104) - ULDC UR5, c[0x0][0x0] ;
 Instr 570 @ 0x23a0 (9120) - S2R R6, SR_TID.X ;
 Instr 571 @ 0x23b0 (9136) - UIADD3 UR4, UR4, UR5, URZ ;
 Instr 572 @ 0x23c0 (9152) - ISETP.GE.AND P1, PT, R2, 0x2, PT ;
 Instr 573 @ 0x23d0 (9168) - IMAD R0, R0, UR4, R6 ;
 Instr 574 @ 0x23e0 (9184) - ISETP.NE.OR P0, PT, R6, RZ, P0 ;
 Instr 575 @ 0x23f0 (9200) - STS [R0.X4], R75 ;
 Instr 576 @ 0x2400 (9216) - @!P1 BRA 0x24e0 ;
Basic block id 22 - num instructions 2
 Instr 577 @ 0x2410 (9232) - SHF.L.U32 R2, R0, 0x2, RZ ;
 Instr 578 @ 0x2420 (9248) - MOV R3, c[0x0][0x0] ;
Basic block id 23 - num instructions 11
 Instr 579 @ 0x2430 (9264) - SHF.R.S32.HI R9, RZ, 0x1, R3 ;
 Instr 580 @ 0x2440 (9280) - BAR.SYNC 0x0 ;
 Instr 581 @ 0x2450 (9296) - ISETP.GE.AND P1, PT, R6, R9, PT ;
 Instr 582 @ 0x2460 (9312) - @!P1 LEA R5, R9, R2, 0x2 ;
 Instr 583 @ 0x2470 (9328) - @!P1 LDS.U R4, [R0.X4] ;
 Instr 584 @ 0x2480 (9344) - @!P1 LDS.U R5, [R5] ;
 Instr 585 @ 0x2490 (9360) - @!P1 FADD R7, R4, R5 ;
 Instr 586 @ 0x24a0 (9376) - @!P1 STS [R0.X4], R7 ;
 Instr 587 @ 0x24b0 (9392) - ISETP.GT.AND P1, PT, R3, 0x3, PT ;
 Instr 588 @ 0x24c0 (9408) - MOV R3, R9 ;
 Instr 589 @ 0x24d0 (9424) - @P1 BRA 0x2430 ;
Basic block id 24 - num instructions 1
 Instr 590 @ 0x24e0 (9440) - @P0 EXIT ;
Basic block id 25 - num instructions 39
 Instr 591 @ 0x24f0 (9456) - S2R R9, SR_CTAID.Z ;
 Instr 592 @ 0x2500 (9472) - FSETP.NEU.AND P0, PT, R78, RZ, PT ;
 Instr 593 @ 0x2510 (9488) - IMAD R6, R76, c[0x0][0x1bc], RZ ;
 Instr 594 @ 0x2520 (9504) - MOV R10, c[0x0][0x1b8] ;
 Instr 595 @ 0x2530 (9520) - LDS.U R0, [R0.X4] ;
 Instr 596 @ 0x2540 (9536) - LOP3.LUT P1, RZ, R10, 0x4, RZ, 0xc0, !PT ;
 Instr 597 @ 0x2550 (9552) - SHF.R.S32.HI R7, RZ, 0x1f, R6 ;
 Instr 598 @ 0x2560 (9568) - @P0 IMAD R2, R76, c[0x0][0x1b4], RZ ;
 Instr 599 @ 0x2570 (9584) - @P0 SHF.R.S32.HI R3, RZ, 0x1f, R2 ;
 Instr 600 @ 0x2580 (9600) - @P0 IMAD.WIDE.U32 R2, R9, c[0x0][0x188], R2 ;
 Instr 601 @ 0x2590 (9616) - @P0 IMAD R3, R9.reuse, c[0x0][0x18c], R3 ;
 Instr 602 @ 0x25a0 (9632) - @P0 LEA R4, P2, R2, c[0x0][0x180], 0x1 ;
 Instr 603 @ 0x25b0 (9648) - IMAD.WIDE.U32 R6, R9, c[0x0][0x1c8], R6 ;
 Instr 604 @ 0x25c0 (9664) - @P0 LEA.HI.X R5, R2, c[0x0][0x184], R3, 0x1, P2 ;
 Instr 605 @ 0x25d0 (9680) - IMAD R3, R9, c[0x0][0x1cc], R7 ;
 Instr 606 @ 0x25e0 (9696) - @P1 LEA R2, P2, R6.reuse, c[0x0][0x1c0], 0x1 ;
 Instr 607 @ 0x25f0 (9712) - @P0 LDG.E.U16.CONSTANT.SYS R4, [R4] ;
 Instr 608 @ 0x2600 (9728) - @P1 LEA.HI.X R3, R6, c[0x0][0x1c4], R3, 0x1, P2 ;
 Instr 609 @ 0x2610 (9744) - @P1 LDG.E.U16.SYS R2, [R2] ;
 Instr 610 @ 0x2620 (9760) - MOV R6, RZ ;
 Instr 611 @ 0x2630 (9776) - MOV R8, RZ ;
 Instr 612 @ 0x2640 (9792) - @P0 HADD2.F32 R7, R4.H0_H0, -RZ.H0_H0 ;
 Instr 613 @ 0x2650 (9808) - @P0 FMUL R8, R7, R78 ;
 Instr 614 @ 0x2660 (9824) - LOP3.LUT P0, RZ, R10, 0x2, RZ, 0xc0, !PT ;
 Instr 615 @ 0x2670 (9840) - @P1 HADD2.F32 R6, R2.H0_H0, -RZ.H0_H0 ;
 Instr 616 @ 0x2680 (9856) - FFMA R79, R79, R0, R8 ;
 Instr 617 @ 0x2690 (9872) - FSEL R4, RZ, -QNAN , P0 ;
 Instr 618 @ 0x26a0 (9888) - IMAD R2, R76, c[0x0][0x1b0], RZ ;
 Instr 619 @ 0x26b0 (9904) - FADD R79, R79, R6 ;
 Instr 620 @ 0x26c0 (9920) - SHF.R.S32.HI R3, RZ, 0x1f, R2 ;
 Instr 621 @ 0x26d0 (9936) - FSETP.GEU.AND P0, PT, R79, R4, PT ;
 Instr 622 @ 0x26e0 (9952) - IMAD.WIDE.U32 R2, R9, c[0x0][0x198], R2 ;
 Instr 623 @ 0x26f0 (9968) - FSEL R79, R4, R79, !P0 ;
 Instr 624 @ 0x2700 (9984) - IMAD R3, R9, c[0x0][0x19c], R3 ;
 Instr 625 @ 0x2710 (10000) - LEA R4, P0, R2, c[0x0][0x190], 0x1 ;
 Instr 626 @ 0x2720 (10016) - F2F.F16.F32 R79, R79 ;
 Instr 627 @ 0x2730 (10032) - LEA.HI.X R5, R2, c[0x0][0x194], R3, 0x1, P0 ;
 Instr 628 @ 0x2740 (10048) - STG.E.U16.SYS [R4], R79 ;
 Instr 629 @ 0x2750 (10064) - EXIT ;
Basic block id 26 - num instructions 1
 Instr 630 @ 0x2760 (10080) - BRA 0x2760;
inspecting std::enable_if<!(false), void>::type internal::gemvx::kernel<int, int, __half, __half, __half, float, false, true, true, false, 8, false, cublasGemvParams<cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half>, float> >(cublasGemvParams<cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half const>, cublasGemvTensorStridedBatched<__half>, float>) - number basic blocks 27
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 19 @ 0x130 (304) - S2R R0, SR_CTAID.Z ;
Inject count_instr before - Instr 29 @ 0x1d0 (464) - S2R R2, SR_TID.X ;
Inject count_instr before - Instr 44 @ 0x2c0 (704) - MOV R4, c[0x0][0x1ec] ;
Inject count_instr before - Instr 53 @ 0x350 (848) - @!P1 BRA 0x520 ;
Inject count_instr before - Instr 54 @ 0x360 (864) - IABS R9, c[0x0][0x1f0] ;
Inject count_instr before - Instr 82 @ 0x520 (1312) - IMAD R5, R77.reuse, R2, c[0x0][0x1ec] ;
Inject count_instr before - Instr 86 @ 0x560 (1376) - ISETP.GE.AND P3, PT, R69, 0x20, PT ;
Inject count_instr before - Instr 91 @ 0x5b0 (1456) - SHF.R.S32.HI R7, RZ, 0x1f, R73 ;
Inject count_instr before - Instr 326 @ 0x1460 (5216) - BSYNC B1 ;
Inject count_instr before - Instr 331 @ 0x14b0 (5296) - SHF.R.S32.HI R9, RZ, 0x1f, R5 ;
Inject count_instr before - Instr 454 @ 0x1c60 (7264) - BSYNC B1 ;
Inject count_instr before - Instr 459 @ 0x1cb0 (7344) - IADD3 R7, R69.reuse, -0x1, RZ ;
Inject count_instr before - Instr 466 @ 0x1d20 (7456) - IADD3 R69, -R6, R69, RZ ;
Inject count_instr before - Instr 467 @ 0x1d30 (7472) - SHF.R.S32.HI R9, RZ, 0x1f, R5 ;
Inject count_instr before - Instr 475 @ 0x1db0 (7600) - LEA R10, P5, R12, c[0x0][0x170], 0x1 ;
Inject count_instr before - Instr 484 @ 0x1e40 (7744) - IMAD.WIDE R18, R23, 0x2, R14 ;
Inject count_instr before - Instr 510 @ 0x1fe0 (8160) - BSYNC B2 ;
Inject count_instr before - Instr 512 @ 0x2000 (8192) - SHF.R.S32.HI R9, RZ, 0x1f, R5 ;
Inject count_instr before - Instr 530 @ 0x2120 (8480) - ISETP.NE.AND P3, PT, R6, 0x2, PT ;
Inject count_instr before - Instr 561 @ 0x2310 (8976) - BSYNC B1 ;
Inject count_instr before - Instr 565 @ 0x2350 (9040) - BSYNC B0 ;
Inject count_instr before - Instr 577 @ 0x2410 (9232) - SHF.L.U32 R2, R0, 0x2, RZ ;
Inject count_instr before - Instr 579 @ 0x2430 (9264) - SHF.R.S32.HI R9, RZ, 0x1, R3 ;
Inject count_instr before - Instr 590 @ 0x24e0 (9440) - @P0 EXIT ;
Inject count_instr before - Instr 591 @ 0x24f0 (9456) - S2R R9, SR_CTAID.Z ;
Inject count_instr before - Instr 630 @ 0x2760 (10080) - BRA 0x2760;
kernel 267 - _ZN8internal5gemvx6kernelIii6__halfS2_S2_fLb0ELb1ELb1ELb0ELi8ELb0E16cublasGemvParamsI30cublasGemvTensorStridedBatchedIKS2_ES6_S4_IS2_EfEEENSt9enable_ifIXntT5_EvE4typeET11_ - #thread-blocks 125,  kernel instructions 304000, total instructions 65659739
Function void at::native::vectorized_elementwise_kernel<8, at::native::AbsFunctor<c10::Half>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<c10::Half>, std::array<char*, 2ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R7, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R7, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x230 ;
Basic block id 1 - num instructions 28
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R12, RZ, RZ, 0x2 ;
 Instr 8 @ 0x80 (128) - IMAD.WIDE R4, R3, R12, c[0x0][0x170] ;
 Instr 9 @ 0x90 (144) - IMAD.WIDE.U32 R4, R0, 0x10, R4 ;
 Instr 10 @ 0xa0 (160) - LDG.E.128.SYS R4, [R4] ;
 Instr 11 @ 0xb0 (176) - HADD2.F32 R8, R4.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 12 @ 0xc0 (192) - HADD2.F32 R2, R4.H0_H0, -RZ.H0_H0 ;
 Instr 13 @ 0xd0 (208) - HADD2.F32 R10, R5.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 14 @ 0xe0 (224) - HADD2.F32 R9, R5.H0_H0, -RZ.H0_H0 ;
 Instr 15 @ 0xf0 (240) - HADD2.F32 R11, R6.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 16 @ 0x100 (256) - F2F.F16.F32 R8, |R8| ;
 Instr 17 @ 0x110 (272) - HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 18 @ 0x120 (288) - HADD2.F32 R4, R7.reuse.H1_H1, -RZ.H0_H0 ;
 Instr 19 @ 0x130 (304) - HADD2.F32 R7, R7.H0_H0, -RZ.H0_H0 ;
 Instr 20 @ 0x140 (320) - F2F.F16.F32 R10, |R10| ;
 Instr 21 @ 0x150 (336) - F2F.F16.F32 R9, |R9| ;
 Instr 22 @ 0x160 (352) - F2F.F16.F32 R11, |R11| ;
 Instr 23 @ 0x170 (368) - F2F.F16.F32 R6, |R6| ;
 Instr 24 @ 0x180 (384) - PRMT R9, R9, 0x5410, R10 ;
 Instr 25 @ 0x190 (400) - F2F.F16.F32 R13, |R2| ;
 Instr 26 @ 0x1a0 (416) - F2F.F16.F32 R4, |R4| ;
 Instr 27 @ 0x1b0 (432) - IMAD.WIDE.U32 R2, R3, R12, c[0x0][0x168] ;
 Instr 28 @ 0x1c0 (448) - PRMT R10, R6, 0x5410, R11 ;
 Instr 29 @ 0x1d0 (464) - IMAD.WIDE R2, R0, 0x10, R2 ;
 Instr 30 @ 0x1e0 (480) - F2F.F16.F32 R7, |R7| ;
 Instr 31 @ 0x1f0 (496) - PRMT R8, R13, 0x5410, R8 ;
 Instr 32 @ 0x200 (512) - PRMT R11, R7, 0x5410, R4 ;
 Instr 33 @ 0x210 (528) - STG.E.128.SYS [R2], R8 ;
 Instr 34 @ 0x220 (544) - EXIT ;
Basic block id 2 - num instructions 12
 Instr 35 @ 0x230 (560) - ISETP.GE.AND P6, PT, R0, R7, PT ;
 Instr 36 @ 0x240 (576) - BMOV.32.CLEAR RZ, B0 ;
 Instr 37 @ 0x250 (592) - BSSY B0, 0x4f0 ;
 Instr 38 @ 0x260 (608) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 39 @ 0x270 (624) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 40 @ 0x280 (640) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 41 @ 0x290 (656) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 42 @ 0x2a0 (672) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 43 @ 0x2b0 (688) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 44 @ 0x2c0 (704) - PRMT R12, RZ, 0x7610, R12 ;
 Instr 45 @ 0x2d0 (720) - PRMT R13, RZ, 0x7610, R13 ;
 Instr 46 @ 0x2e0 (736) - @P6 BRA 0x4e0 ;
Basic block id 3 - num instructions 7
 Instr 47 @ 0x2f0 (752) - IMAD.IADD R4, R3, 0x1, R0 ;
 Instr 48 @ 0x300 (768) - IMAD.MOV.U32 R5, RZ, RZ, 0x2 ;
 Instr 49 @ 0x310 (784) - IMAD.WIDE.U32 R4, R4, R5, c[0x0][0x170] ;
 Instr 50 @ 0x320 (800) - LDG.E.U16.SYS R13, [R4] ;
 Instr 51 @ 0x330 (816) - IADD3 R14, R0, 0x80, RZ ;
 Instr 52 @ 0x340 (832) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 53 @ 0x350 (848) - @P0 BRA 0x4e0 ;
Basic block id 4 - num instructions 4
 Instr 54 @ 0x360 (864) - LDG.E.U16.SYS R12, [R4+0x100] ;
 Instr 55 @ 0x370 (880) - IADD3 R14, R0, 0x100, RZ ;
 Instr 56 @ 0x380 (896) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 57 @ 0x390 (912) - @P0 BRA 0x4e0 ;
Basic block id 5 - num instructions 4
 Instr 58 @ 0x3a0 (928) - LDG.E.U16.SYS R11, [R4+0x200] ;
 Instr 59 @ 0x3b0 (944) - IADD3 R14, R0, 0x180, RZ ;
 Instr 60 @ 0x3c0 (960) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 61 @ 0x3d0 (976) - @P0 BRA 0x4e0 ;
Basic block id 6 - num instructions 4
 Instr 62 @ 0x3e0 (992) - LDG.E.U16.SYS R10, [R4+0x300] ;
 Instr 63 @ 0x3f0 (1008) - IADD3 R14, R0, 0x200, RZ ;
 Instr 64 @ 0x400 (1024) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 65 @ 0x410 (1040) - @P0 BRA 0x4e0 ;
Basic block id 7 - num instructions 4
 Instr 66 @ 0x420 (1056) - LDG.E.U16.SYS R9, [R4+0x400] ;
 Instr 67 @ 0x430 (1072) - IADD3 R14, R0, 0x280, RZ ;
 Instr 68 @ 0x440 (1088) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 69 @ 0x450 (1104) - @P0 BRA 0x4e0 ;
Basic block id 8 - num instructions 4
 Instr 70 @ 0x460 (1120) - LDG.E.U16.SYS R8, [R4+0x500] ;
 Instr 71 @ 0x470 (1136) - IADD3 R14, R0, 0x300, RZ ;
 Instr 72 @ 0x480 (1152) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 73 @ 0x490 (1168) - @P0 BRA 0x4e0 ;
Basic block id 9 - num instructions 4
 Instr 74 @ 0x4a0 (1184) - IADD3 R6, R0, 0x380, RZ ;
 Instr 75 @ 0x4b0 (1200) - ISETP.GE.AND P0, PT, R6, R7, PT ;
 Instr 76 @ 0x4c0 (1216) - LDG.E.U16.SYS R6, [R4+0x600] ;
 Instr 77 @ 0x4d0 (1232) - @!P0 LDG.E.U16.SYS R2, [R4+0x700] ;
Basic block id 10 - num instructions 30
 Instr 78 @ 0x4e0 (1248) - BSYNC B0 ;
 Instr 79 @ 0x4f0 (1264) - IADD3 R4, R0, 0x80, RZ ;
 Instr 80 @ 0x500 (1280) - @!P6 HADD2.F32 R13, R13.H0_H0, -RZ.H0_H0 ;
 Instr 81 @ 0x510 (1296) - ISETP.GE.AND P2, PT, R4, R7.reuse, PT ;
 Instr 82 @ 0x520 (1312) - IADD3 R4, R0, 0x100, RZ ;
 Instr 83 @ 0x530 (1328) - P2R R14, PR, RZ, 0x4 ;
 Instr 84 @ 0x540 (1344) - @!P6 F2F.F16.F32 R5, |R13| ;
 Instr 85 @ 0x550 (1360) - ISETP.GE.AND P0, PT, R4, R7, PT ;
 Instr 86 @ 0x560 (1376) - IADD3 R4, R0, 0x180, RZ ;
 Instr 87 @ 0x570 (1392) - @!P2 HADD2.F32 R12, R12.H0_H0, -RZ.H0_H0 ;
 Instr 88 @ 0x580 (1408) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 89 @ 0x590 (1424) - IADD3 R4, R0, 0x200, RZ ;
 Instr 90 @ 0x5a0 (1440) - @!P0 HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 91 @ 0x5b0 (1456) - @!P2 F2F.F16.F32 R15, |R12| ;
 Instr 92 @ 0x5c0 (1472) - ISETP.GE.AND P2, PT, R4, R7.reuse, PT ;
 Instr 93 @ 0x5d0 (1488) - IADD3 R4, R0, 0x280, RZ ;
 Instr 94 @ 0x5e0 (1504) - @!P1 HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 95 @ 0x5f0 (1520) - ISETP.GE.AND P3, PT, R4, R7, PT ;
 Instr 96 @ 0x600 (1536) - @!P0 F2F.F16.F32 R17, |R11| ;
 Instr 97 @ 0x610 (1552) - IADD3 R4, R0, 0x300, RZ ;
 Instr 98 @ 0x620 (1568) - @!P2 HADD2.F32 R9, R9.H0_H0, -RZ.H0_H0 ;
 Instr 99 @ 0x630 (1584) - ISETP.GE.AND P4, PT, R4, R7.reuse, PT ;
 Instr 100 @ 0x640 (1600) - @!P1 F2F.F16.F32 R19, |R10| ;
 Instr 101 @ 0x650 (1616) - IADD3 R4, R0, 0x380, RZ ;
 Instr 102 @ 0x660 (1632) - @!P3 HADD2.F32 R8, R8.H0_H0, -RZ.H0_H0 ;
 Instr 103 @ 0x670 (1648) - ISETP.GE.AND P5, PT, R4, R7, PT ;
 Instr 104 @ 0x680 (1664) - @!P2 F2F.F16.F32 R21, |R9| ;
 Instr 105 @ 0x690 (1680) - @!P4 HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 106 @ 0x6a0 (1696) - @!P3 F2F.F16.F32 R23, |R8| ;
 Instr 107 @ 0x6b0 (1712) - @P6 EXIT ;
Basic block id 11 - num instructions 9
 Instr 108 @ 0x6c0 (1728) - IMAD.IADD R3, R3, 0x1, R0 ;
 Instr 109 @ 0x6d0 (1744) - ISETP.NE.AND P6, PT, R14, RZ, PT ;
 Instr 110 @ 0x6e0 (1760) - @!P5 HADD2.F32 R0, R2.H0_H0, -RZ.H0_H0 ;
 Instr 111 @ 0x6f0 (1776) - IMAD.MOV.U32 R4, RZ, RZ, 0x2 ;
 Instr 112 @ 0x700 (1792) - @!P4 F2F.F16.F32 R7, |R6| ;
 Instr 113 @ 0x710 (1808) - IMAD.WIDE.U32 R2, R3, R4, c[0x0][0x168] ;
 Instr 114 @ 0x720 (1824) - @!P5 F2F.F16.F32 R9, |R0| ;
 Instr 115 @ 0x730 (1840) - STG.E.U16.SYS [R2], R5 ;
 Instr 116 @ 0x740 (1856) - @P6 EXIT ;
Basic block id 12 - num instructions 2
 Instr 117 @ 0x750 (1872) - STG.E.U16.SYS [R2+0x100], R15 ;
 Instr 118 @ 0x760 (1888) - @P0 EXIT ;
Basic block id 13 - num instructions 2
 Instr 119 @ 0x770 (1904) - STG.E.U16.SYS [R2+0x200], R17 ;
 Instr 120 @ 0x780 (1920) - @P1 EXIT ;
Basic block id 14 - num instructions 2
 Instr 121 @ 0x790 (1936) - STG.E.U16.SYS [R2+0x300], R19 ;
 Instr 122 @ 0x7a0 (1952) - @P2 EXIT ;
Basic block id 15 - num instructions 2
 Instr 123 @ 0x7b0 (1968) - STG.E.U16.SYS [R2+0x400], R21 ;
 Instr 124 @ 0x7c0 (1984) - @P3 EXIT ;
Basic block id 16 - num instructions 2
 Instr 125 @ 0x7d0 (2000) - STG.E.U16.SYS [R2+0x500], R23 ;
 Instr 126 @ 0x7e0 (2016) - @P4 EXIT ;
Basic block id 17 - num instructions 2
 Instr 127 @ 0x7f0 (2032) - STG.E.U16.SYS [R2+0x600], R7 ;
 Instr 128 @ 0x800 (2048) - @P5 EXIT ;
Basic block id 18 - num instructions 2
 Instr 129 @ 0x810 (2064) - STG.E.U16.SYS [R2+0x700], R9 ;
 Instr 130 @ 0x820 (2080) - EXIT ;
Basic block id 19 - num instructions 1
 Instr 131 @ 0x830 (2096) - BRA 0x830;
inspecting void at::native::vectorized_elementwise_kernel<8, at::native::AbsFunctor<c10::Half>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<c10::Half>, std::array<char*, 2ul>) - number basic blocks 20
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R12, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 35 @ 0x230 (560) - ISETP.GE.AND P6, PT, R0, R7, PT ;
Inject count_instr before - Instr 47 @ 0x2f0 (752) - IMAD.IADD R4, R3, 0x1, R0 ;
Inject count_instr before - Instr 54 @ 0x360 (864) - LDG.E.U16.SYS R12, [R4+0x100] ;
Inject count_instr before - Instr 58 @ 0x3a0 (928) - LDG.E.U16.SYS R11, [R4+0x200] ;
Inject count_instr before - Instr 62 @ 0x3e0 (992) - LDG.E.U16.SYS R10, [R4+0x300] ;
Inject count_instr before - Instr 66 @ 0x420 (1056) - LDG.E.U16.SYS R9, [R4+0x400] ;
Inject count_instr before - Instr 70 @ 0x460 (1120) - LDG.E.U16.SYS R8, [R4+0x500] ;
Inject count_instr before - Instr 74 @ 0x4a0 (1184) - IADD3 R6, R0, 0x380, RZ ;
Inject count_instr before - Instr 78 @ 0x4e0 (1248) - BSYNC B0 ;
Inject count_instr before - Instr 108 @ 0x6c0 (1728) - IMAD.IADD R3, R3, 0x1, R0 ;
Inject count_instr before - Instr 117 @ 0x750 (1872) - STG.E.U16.SYS [R2+0x100], R15 ;
Inject count_instr before - Instr 119 @ 0x770 (1904) - STG.E.U16.SYS [R2+0x200], R17 ;
Inject count_instr before - Instr 121 @ 0x790 (1936) - STG.E.U16.SYS [R2+0x300], R19 ;
Inject count_instr before - Instr 123 @ 0x7b0 (1968) - STG.E.U16.SYS [R2+0x400], R21 ;
Inject count_instr before - Instr 125 @ 0x7d0 (2000) - STG.E.U16.SYS [R2+0x500], R23 ;
Inject count_instr before - Instr 127 @ 0x7f0 (2032) - STG.E.U16.SYS [R2+0x600], R7 ;
Inject count_instr before - Instr 129 @ 0x810 (2064) - STG.E.U16.SYS [R2+0x700], R9 ;
Inject count_instr before - Instr 131 @ 0x830 (2096) - BRA 0x830;
kernel 268 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_10AbsFunctorIN3c104HalfEEESt5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 412, total instructions 65660151
Function void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 2ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R5, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R5, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x480 ;
Basic block id 1 - num instructions 9
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R4, RZ, RZ, 0x2 ;
 Instr 8 @ 0x80 (128) - IMAD.WIDE R4, R3, R4, c[0x0][0x178] ;
 Instr 9 @ 0x90 (144) - IMAD.WIDE.U32 R4, R0, 0x8, R4 ;
 Instr 10 @ 0xa0 (160) - LDG.E.64.SYS R10, [R4] ;
 Instr 11 @ 0xb0 (176) - LDG.E.64.SYS R18, [R4+0x400] ;
 Instr 12 @ 0xc0 (192) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x164], PT ;
 Instr 13 @ 0xd0 (208) - HADD2.F32 R2, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 14 @ 0xe0 (224) - HADD2.F32 R7, R10.H0_H0, -RZ.H0_H0 ;
 Instr 15 @ 0xf0 (240) - @!P0 BRA 0x210 ;
Basic block id 2 - num instructions 17
 Instr 16 @ 0x100 (256) - HADD2.F32 R5, R10.H1_H1, -RZ.H0_H0 ;
 Instr 17 @ 0x110 (272) - FSETP.NEU.AND P2, PT, R2.reuse, R7, PT ;
 Instr 18 @ 0x120 (288) - HADD2.F32 R9, R11.H0_H0, -RZ.H0_H0 ;
 Instr 19 @ 0x130 (304) - HADD2.F32 R17, R19.H0_H0, -RZ.H0_H0 ;
 Instr 20 @ 0x140 (320) - HADD2.F32 R11, R11.H1_H1, -RZ.H0_H0 ;
 Instr 21 @ 0x150 (336) - HADD2.F32 R13, R18.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 22 @ 0x160 (352) - FSETP.NEU.AND P0, PT, R2.reuse, R5, PT ;
 Instr 23 @ 0x170 (368) - HADD2.F32 R15, R18.H1_H1, -RZ.H0_H0 ;
 Instr 24 @ 0x180 (384) - P2R R5, PR, RZ, 0x4 ;
 Instr 25 @ 0x190 (400) - HADD2.F32 R19, R19.H1_H1, -RZ.H0_H0 ;
 Instr 26 @ 0x1a0 (416) - FSETP.NEU.AND P1, PT, R2, R9, PT ;
 Instr 27 @ 0x1b0 (432) - FSETP.NEU.AND P2, PT, R2.reuse, R11, PT ;
 Instr 28 @ 0x1c0 (448) - FSETP.NEU.AND P3, PT, R2.reuse, R13, PT ;
 Instr 29 @ 0x1d0 (464) - FSETP.NEU.AND P4, PT, R2.reuse, R15, PT ;
 Instr 30 @ 0x1e0 (480) - FSETP.NEU.AND P5, PT, R2.reuse, R17, PT ;
 Instr 31 @ 0x1f0 (496) - FSETP.NEU.AND P6, PT, R2, R19, PT ;
 Instr 32 @ 0x200 (512) - BRA 0x310 ;
Basic block id 3 - num instructions 16
 Instr 33 @ 0x210 (528) - HADD2.F32 R5, R10.H1_H1, -RZ.H0_H0 ;
 Instr 34 @ 0x220 (544) - FSETP.EQ.AND P2, PT, R2, R7, PT ;
 Instr 35 @ 0x230 (560) - HADD2.F32 R9, R11.H0_H0, -RZ.H0_H0 ;
 Instr 36 @ 0x240 (576) - HADD2.F32 R17, R19.H0_H0, -RZ.H0_H0 ;
 Instr 37 @ 0x250 (592) - HADD2.F32 R11, R11.H1_H1, -RZ.H0_H0 ;
 Instr 38 @ 0x260 (608) - HADD2.F32 R13, R18.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 39 @ 0x270 (624) - FSETP.EQ.AND P0, PT, R2.reuse, R5, PT ;
 Instr 40 @ 0x280 (640) - HADD2.F32 R15, R18.H1_H1, -RZ.H0_H0 ;
 Instr 41 @ 0x290 (656) - P2R R5, PR, RZ, 0x4 ;
 Instr 42 @ 0x2a0 (672) - HADD2.F32 R19, R19.H1_H1, -RZ.H0_H0 ;
 Instr 43 @ 0x2b0 (688) - FSETP.EQ.AND P1, PT, R2.reuse, R9, PT ;
 Instr 44 @ 0x2c0 (704) - FSETP.EQ.AND P2, PT, R2, R11, PT ;
 Instr 45 @ 0x2d0 (720) - FSETP.EQ.AND P3, PT, R2.reuse, R13, PT ;
 Instr 46 @ 0x2e0 (736) - FSETP.EQ.AND P4, PT, R2.reuse, R15, PT ;
 Instr 47 @ 0x2f0 (752) - FSETP.EQ.AND P5, PT, R2.reuse, R17, PT ;
 Instr 48 @ 0x300 (768) - FSETP.EQ.AND P6, PT, R2, R19, PT ;
Basic block id 4 - num instructions 23
 Instr 49 @ 0x310 (784) - P2R R4, PR, RZ, 0x40 ;
 Instr 50 @ 0x320 (800) - ISETP.NE.AND P6, PT, R5, RZ, PT ;
 Instr 51 @ 0x330 (816) - SEL R5, RZ, 0x1, !P0 ;
 Instr 52 @ 0x340 (832) - SEL R2, RZ, 0x1, !P6 ;
 Instr 53 @ 0x350 (848) - ISETP.NE.AND P6, PT, R4, RZ, PT ;
 Instr 54 @ 0x360 (864) - SEL R4, RZ, 0x1, !P3 ;
 Instr 55 @ 0x370 (880) - SEL R7, RZ, 0x1, !P4 ;
 Instr 56 @ 0x380 (896) - PRMT R9, R5, 0x7604, R2 ;
 Instr 57 @ 0x390 (912) - PRMT R6, R7, 0x7604, R4 ;
 Instr 58 @ 0x3a0 (928) - IADD3 R2, P0, R3, c[0x0][0x170], RZ ;
 Instr 59 @ 0x3b0 (944) - SEL R4, RZ, 0x1, !P1 ;
 Instr 60 @ 0x3c0 (960) - SEL R5, RZ, 0x1, !P5 ;
 Instr 61 @ 0x3d0 (976) - IMAD.X R3, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 62 @ 0x3e0 (992) - PRMT R9, R4, 0x7054, R9 ;
 Instr 63 @ 0x3f0 (1008) - PRMT R6, R5, 0x7054, R6 ;
 Instr 64 @ 0x400 (1024) - IMAD.WIDE R2, R0, 0x4, R2 ;
 Instr 65 @ 0x410 (1040) - SEL R4, RZ, 0x1, !P2 ;
 Instr 66 @ 0x420 (1056) - SEL R5, RZ, 0x1, !P6 ;
 Instr 67 @ 0x430 (1072) - PRMT R9, R4, 0x654, R9 ;
 Instr 68 @ 0x440 (1088) - PRMT R5, R5, 0x654, R6 ;
 Instr 69 @ 0x450 (1104) - STG.E.SYS [R2], R9 ;
 Instr 70 @ 0x460 (1120) - STG.E.SYS [R2+0x200], R5 ;
 Instr 71 @ 0x470 (1136) - EXIT ;
Basic block id 5 - num instructions 13
 Instr 72 @ 0x480 (1152) - ISETP.GE.AND P6, PT, R0, R5, PT ;
 Instr 73 @ 0x490 (1168) - BMOV.32.CLEAR RZ, B0 ;
 Instr 74 @ 0x4a0 (1184) - BSSY B0, 0x750 ;
 Instr 75 @ 0x4b0 (1200) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 76 @ 0x4c0 (1216) - PRMT R4, RZ, 0x7610, R4 ;
 Instr 77 @ 0x4d0 (1232) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 78 @ 0x4e0 (1248) - P2R R6, PR, RZ, 0x40 ;
 Instr 79 @ 0x4f0 (1264) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 80 @ 0x500 (1280) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 81 @ 0x510 (1296) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 82 @ 0x520 (1312) - PRMT R12, RZ, 0x7610, R12 ;
 Instr 83 @ 0x530 (1328) - PRMT R13, RZ, 0x7610, R13 ;
 Instr 84 @ 0x540 (1344) - @P6 BRA 0x740 ;
Basic block id 6 - num instructions 7
 Instr 85 @ 0x550 (1360) - IMAD.IADD R6, R3, 0x1, R0 ;
 Instr 86 @ 0x560 (1376) - IMAD.MOV.U32 R7, RZ, RZ, 0x2 ;
 Instr 87 @ 0x570 (1392) - IMAD.WIDE.U32 R6, R6, R7, c[0x0][0x178] ;
 Instr 88 @ 0x580 (1408) - LDG.E.U16.SYS R13, [R6] ;
 Instr 89 @ 0x590 (1424) - IADD3 R14, R0, 0x80, RZ ;
 Instr 90 @ 0x5a0 (1440) - ISETP.GE.AND P0, PT, R14, R5, PT ;
 Instr 91 @ 0x5b0 (1456) - @P0 BRA 0x740 ;
Basic block id 7 - num instructions 4
 Instr 92 @ 0x5c0 (1472) - LDG.E.U16.SYS R12, [R6+0x100] ;
 Instr 93 @ 0x5d0 (1488) - IADD3 R14, R0, 0x100, RZ ;
 Instr 94 @ 0x5e0 (1504) - ISETP.GE.AND P0, PT, R14, R5, PT ;
 Instr 95 @ 0x5f0 (1520) - @P0 BRA 0x740 ;
Basic block id 8 - num instructions 4
 Instr 96 @ 0x600 (1536) - LDG.E.U16.SYS R11, [R6+0x200] ;
 Instr 97 @ 0x610 (1552) - IADD3 R14, R0, 0x180, RZ ;
 Instr 98 @ 0x620 (1568) - ISETP.GE.AND P0, PT, R14, R5, PT ;
 Instr 99 @ 0x630 (1584) - @P0 BRA 0x740 ;
Basic block id 9 - num instructions 4
 Instr 100 @ 0x640 (1600) - LDG.E.U16.SYS R10, [R6+0x300] ;
 Instr 101 @ 0x650 (1616) - IADD3 R14, R0, 0x200, RZ ;
 Instr 102 @ 0x660 (1632) - ISETP.GE.AND P0, PT, R14, R5, PT ;
 Instr 103 @ 0x670 (1648) - @P0 BRA 0x740 ;
Basic block id 10 - num instructions 4
 Instr 104 @ 0x680 (1664) - LDG.E.U16.SYS R9, [R6+0x400] ;
 Instr 105 @ 0x690 (1680) - IADD3 R14, R0, 0x280, RZ ;
 Instr 106 @ 0x6a0 (1696) - ISETP.GE.AND P0, PT, R14, R5, PT ;
 Instr 107 @ 0x6b0 (1712) - @P0 BRA 0x740 ;
Basic block id 11 - num instructions 4
 Instr 108 @ 0x6c0 (1728) - LDG.E.U16.SYS R8, [R6+0x500] ;
 Instr 109 @ 0x6d0 (1744) - IADD3 R14, R0, 0x300, RZ ;
 Instr 110 @ 0x6e0 (1760) - ISETP.GE.AND P0, PT, R14, R5, PT ;
 Instr 111 @ 0x6f0 (1776) - @P0 BRA 0x740 ;
Basic block id 12 - num instructions 4
 Instr 112 @ 0x700 (1792) - IADD3 R4, R0, 0x380, RZ ;
 Instr 113 @ 0x710 (1808) - ISETP.GE.AND P0, PT, R4, R5, PT ;
 Instr 114 @ 0x720 (1824) - LDG.E.U16.SYS R4, [R6+0x600] ;
 Instr 115 @ 0x730 (1840) - @!P0 LDG.E.U16.SYS R2, [R6+0x700] ;
Basic block id 13 - num instructions 5
 Instr 116 @ 0x740 (1856) - BSYNC B0 ;
 Instr 117 @ 0x750 (1872) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x164], PT ;
 Instr 118 @ 0x760 (1888) - BMOV.32.CLEAR RZ, B0 ;
 Instr 119 @ 0x770 (1904) - BSSY B0, 0xf00 ;
 Instr 120 @ 0x780 (1920) - @!P0 BRA 0xb20 ;
Basic block id 14 - num instructions 29
 Instr 121 @ 0x790 (1936) - IADD3 R14, R0.reuse, 0x80, RZ ;
 Instr 122 @ 0x7a0 (1952) - @!P6 HADD2.F32 R13, R13.H0_H0, -RZ.H0_H0 ;
 Instr 123 @ 0x7b0 (1968) - IADD3 R16, R0, 0x180, RZ ;
 Instr 124 @ 0x7c0 (1984) - ISETP.GE.AND P0, PT, R14, R5.reuse, PT ;
 Instr 125 @ 0x7d0 (2000) - IADD3 R14, R0, 0x100, RZ ;
 Instr 126 @ 0x7e0 (2016) - ISETP.GE.AND P2, PT, R16, R5.reuse, PT ;
 Instr 127 @ 0x7f0 (2032) - ISETP.GE.AND P1, PT, R14, R5, PT ;
 Instr 128 @ 0x800 (2048) - @!P6 HADD2.F32 R14, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 129 @ 0x810 (2064) - IADD3 R16, R0, 0x200, RZ ;
 Instr 130 @ 0x820 (2080) - @!P0 HADD2.F32 R12, R12.H0_H0, -RZ.H0_H0 ;
 Instr 131 @ 0x830 (2096) - ISETP.GE.AND P3, PT, R16, R5, PT ;
 Instr 132 @ 0x840 (2112) - @!P0 HADD2.F32 R15, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 133 @ 0x850 (2128) - IADD3 R16, R0, 0x280, RZ ;
 Instr 134 @ 0x860 (2144) - @!P2 HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 135 @ 0x870 (2160) - @!P6 FSETP.NEU.AND P5, PT, R14, R13, PT ;
 Instr 136 @ 0x880 (2176) - @!P1 HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 137 @ 0x890 (2192) - ISETP.GE.AND P4, PT, R16, R5, PT ;
 Instr 138 @ 0x8a0 (2208) - @!P1 HADD2.F32 R14, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 139 @ 0x8b0 (2224) - @!P6 SEL R16, RZ, 0x1, !P5 ;
 Instr 140 @ 0x8c0 (2240) - @!P2 HADD2.F32 R13, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 141 @ 0x8d0 (2256) - @!P3 HADD2.F32 R9, R9.H0_H0, -RZ.H0_H0 ;
 Instr 142 @ 0x8e0 (2272) - @!P0 FSETP.NEU.AND P5, PT, R15, R12, PT ;
 Instr 143 @ 0x8f0 (2288) - @!P3 HADD2.F32 R12, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 144 @ 0x900 (2304) - @!P0 SEL R15, RZ, 0x1, !P5 ;
 Instr 145 @ 0x910 (2320) - @!P0 PRMT R7, R7, 0x5410, R15 ;
 Instr 146 @ 0x920 (2336) - @!P1 FSETP.NEU.AND P5, PT, R14, R11, PT ;
 Instr 147 @ 0x930 (2352) - @!P4 HADD2.F32 R11, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 148 @ 0x940 (2368) - @!P1 SEL R14, RZ, 0x1, !P5 ;
 Instr 149 @ 0x950 (2384) - @!P1 PRMT R7, R14, 0x7610, R7 ;
Basic block id 15 - num instructions 23
 Instr 150 @ 0x960 (2400) - @!P2 FSETP.NEU.AND P5, PT, R13, R10, PT ;
 Instr 151 @ 0x970 (2416) - @!P4 HADD2.F32 R10, R8.H0_H0, -RZ.H0_H0 ;
 Instr 152 @ 0x980 (2432) - @!P2 SEL R13, RZ, 0x1, !P5 ;
 Instr 153 @ 0x990 (2448) - @!P3 FSETP.NEU.AND P5, PT, R12, R9, PT ;
 Instr 154 @ 0x9a0 (2464) - @!P3 SEL R12, RZ, 0x1, !P5 ;
 Instr 155 @ 0x9b0 (2480) - @!P4 FSETP.NEU.AND P5, PT, R11, R10, PT ;
 Instr 156 @ 0x9c0 (2496) - IADD3 R10, R0, 0x300, RZ ;
 Instr 157 @ 0x9d0 (2512) - @!P4 SEL R11, RZ, 0x1, !P5 ;
 Instr 158 @ 0x9e0 (2528) - @!P4 PRMT R6, R11, 0x7610, R6 ;
 Instr 159 @ 0x9f0 (2544) - ISETP.GE.AND P5, PT, R10, R5, PT ;
 Instr 160 @ 0xa00 (2560) - @!P5 HADD2.F32 R9, R4.H0_H0, -RZ.H0_H0 ;
 Instr 161 @ 0xa10 (2576) - @!P2 PRMT R4, R13, 0x7610, R4 ;
 Instr 162 @ 0xa20 (2592) - @!P5 HADD2.F32 R10, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 163 @ 0xa30 (2608) - @!P3 PRMT R4, R4, 0x5410, R12 ;
 Instr 164 @ 0xa40 (2624) - @!P5 FSETP.NEU.AND P6, PT, R10, R9, PT ;
 Instr 165 @ 0xa50 (2640) - IADD3 R10, R0, 0x380, RZ ;
 Instr 166 @ 0xa60 (2656) - @!P5 SEL R9, RZ, 0x1, !P6 ;
 Instr 167 @ 0xa70 (2672) - @!P5 PRMT R6, R6, 0x5410, R9 ;
 Instr 168 @ 0xa80 (2688) - ISETP.GE.AND P6, PT, R0, R5, PT ;
 Instr 169 @ 0xa90 (2704) - @!P6 PRMT R8, R16, 0x7610, R8 ;
 Instr 170 @ 0xaa0 (2720) - ISETP.GE.AND P6, PT, R10, R5, PT ;
 Instr 171 @ 0xab0 (2736) - P2R R11, PR, RZ, 0x40 ;
 Instr 172 @ 0xac0 (2752) - @P6 BRA 0xef0 ;
Basic block id 16 - num instructions 5
 Instr 173 @ 0xad0 (2768) - HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
 Instr 174 @ 0xae0 (2784) - HADD2.F32 R9, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 175 @ 0xaf0 (2800) - FSETP.NEU.AND P6, PT, R9, R2, PT ;
 Instr 176 @ 0xb00 (2816) - SEL R2, RZ, 0x1, !P6 ;
 Instr 177 @ 0xb10 (2832) - BRA 0xef0 ;
Basic block id 17 - num instructions 61
 Instr 178 @ 0xb20 (2848) - IADD3 R14, R0.reuse, 0x80, RZ ;
 Instr 179 @ 0xb30 (2864) - IADD3 R16, R0, 0x280, RZ ;
 Instr 180 @ 0xb40 (2880) - ISETP.GE.AND P0, PT, R14, R5.reuse, PT ;
 Instr 181 @ 0xb50 (2896) - IADD3 R14, R0, 0x100, RZ ;
 Instr 182 @ 0xb60 (2912) - ISETP.GE.AND P4, PT, R16, R5.reuse, PT ;
 Instr 183 @ 0xb70 (2928) - ISETP.GE.AND P1, PT, R14, R5, PT ;
 Instr 184 @ 0xb80 (2944) - IADD3 R14, R0, 0x180, RZ ;
 Instr 185 @ 0xb90 (2960) - P2R R17, PR, RZ, 0x1 ;
 Instr 186 @ 0xba0 (2976) - @!P0 HADD2.F32 R15, R12.H0_H0, -RZ.H0_H0 ;
 Instr 187 @ 0xbb0 (2992) - ISETP.GE.AND P2, PT, R14, R5.reuse, PT ;
 Instr 188 @ 0xbc0 (3008) - @!P0 HADD2.F32 R12, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 189 @ 0xbd0 (3024) - IADD3 R14, R0, 0x200, RZ ;
 Instr 190 @ 0xbe0 (3040) - P2R R16, PR, RZ, 0x2 ;
 Instr 191 @ 0xbf0 (3056) - ISETP.GE.AND P3, PT, R14, R5, PT ;
 Instr 192 @ 0xc00 (3072) - @!P1 HADD2.F32 R14, R11.H0_H0, -RZ.H0_H0 ;
 Instr 193 @ 0xc10 (3088) - @!P0 FSETP.NEU.AND P5, PT, R12, R15, PT ;
 Instr 194 @ 0xc20 (3104) - @!P1 HADD2.F32 R11, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 195 @ 0xc30 (3120) - @!P2 HADD2.F32 R15, R10.H0_H0, -RZ.H0_H0 ;
 Instr 196 @ 0xc40 (3136) - @!P0 SEL R18, RZ, 0x1, P5 ;
 Instr 197 @ 0xc50 (3152) - @!P2 HADD2.F32 R10, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 198 @ 0xc60 (3168) - ISETP.GE.AND P0, PT, R0, R5, PT ;
 Instr 199 @ 0xc70 (3184) - @!P3 HADD2.F32 R12, R9.H0_H0, -RZ.H0_H0 ;
 Instr 200 @ 0xc80 (3200) - @!P3 HADD2.F32 R9, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 201 @ 0xc90 (3216) - @!P1 FSETP.NEU.AND P5, PT, R11, R14, PT ;
 Instr 202 @ 0xca0 (3232) - @!P4 HADD2.F32 R14, R8.H0_H0, -RZ.H0_H0 ;
 Instr 203 @ 0xcb0 (3248) - @!P1 SEL R19, RZ, 0x1, P5 ;
 Instr 204 @ 0xcc0 (3264) - @!P4 HADD2.F32 R11, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 205 @ 0xcd0 (3280) - @!P2 FSETP.NEU.AND P5, PT, R10, R15, PT ;
 Instr 206 @ 0xce0 (3296) - @!P0 HADD2.F32 R10, R13.H0_H0, -RZ.H0_H0 ;
 Instr 207 @ 0xcf0 (3312) - @!P2 SEL R15, RZ, 0x1, P5 ;
 Instr 208 @ 0xd00 (3328) - @!P3 FSETP.NEU.AND P5, PT, R9, R12, PT ;
 Instr 209 @ 0xd10 (3344) - @!P0 HADD2.F32 R9, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 210 @ 0xd20 (3360) - @!P3 SEL R13, RZ, 0x1, P5 ;
 Instr 211 @ 0xd30 (3376) - @!P4 FSETP.NEU.AND P5, PT, R11, R14, PT ;
 Instr 212 @ 0xd40 (3392) - @!P4 SEL R14, RZ, 0x1, P5 ;
 Instr 213 @ 0xd50 (3408) - @!P4 PRMT R6, R14, 0x7610, R6 ;
 Instr 214 @ 0xd60 (3424) - @!P0 FSETP.NEU.AND P5, PT, R9, R10, PT ;
 Instr 215 @ 0xd70 (3440) - IADD3 R10, R0, 0x300, RZ ;
 Instr 216 @ 0xd80 (3456) - @!P0 SEL R12, RZ, 0x1, P5 ;
 Instr 217 @ 0xd90 (3472) - @!P0 PRMT R8, R12, 0x7610, R8 ;
 Instr 218 @ 0xda0 (3488) - ISETP.NE.AND P0, PT, R17, RZ, PT ;
 Instr 219 @ 0xdb0 (3504) - ISETP.GE.AND P5, PT, R10, R5, PT ;
 Instr 220 @ 0xdc0 (3520) - @!P0 PRMT R7, R7, 0x5410, R18 ;
 Instr 221 @ 0xdd0 (3536) - @!P5 HADD2.F32 R10, R4.H0_H0, -RZ.H0_H0 ;
 Instr 222 @ 0xde0 (3552) - @!P2 PRMT R4, R15, 0x7610, R4 ;
 Instr 223 @ 0xdf0 (3568) - @!P5 HADD2.F32 R9, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 224 @ 0xe00 (3584) - @!P3 PRMT R4, R4, 0x5410, R13 ;
 Instr 225 @ 0xe10 (3600) - @!P5 FSETP.NEU.AND P6, PT, R9, R10, PT ;
 Instr 226 @ 0xe20 (3616) - IADD3 R10, R0, 0x380, RZ ;
 Instr 227 @ 0xe30 (3632) - @!P5 SEL R20, RZ, 0x1, P6 ;
 Instr 228 @ 0xe40 (3648) - ISETP.GE.AND P1, PT, R10, R5, PT ;
 Instr 229 @ 0xe50 (3664) - @!P5 PRMT R6, R6, 0x5410, R20 ;
 Instr 230 @ 0xe60 (3680) - P2R R11, PR, RZ, 0x2 ;
 Instr 231 @ 0xe70 (3696) - @!P1 HADD2.F32 R10, R2.H0_H0, -RZ.H0_H0 ;
 Instr 232 @ 0xe80 (3712) - @!P1 HADD2.F32 R9, -RZ, c[0x0] [0x168].H0_H0 ;
 Instr 233 @ 0xe90 (3728) - @!P1 FSETP.NEU.AND P6, PT, R9, R10, PT ;
 Instr 234 @ 0xea0 (3744) - @!P1 SEL R9, RZ, 0x1, P6 ;
 Instr 235 @ 0xeb0 (3760) - ISETP.NE.AND P1, PT, R16, RZ, PT ;
 Instr 236 @ 0xec0 (3776) - ISETP.NE.AND P6, PT, R11, RZ, PT ;
 Instr 237 @ 0xed0 (3792) - @!P1 PRMT R7, R19, 0x7610, R7 ;
 Instr 238 @ 0xee0 (3808) - @!P6 PRMT R2, R9, 0x7610, R2 ;
Basic block id 18 - num instructions 3
 Instr 239 @ 0xef0 (3824) - BSYNC B0 ;
 Instr 240 @ 0xf00 (3840) - ISETP.GE.AND P6, PT, R0, R5, PT ;
 Instr 241 @ 0xf10 (3856) - @P6 EXIT ;
Basic block id 19 - num instructions 4
 Instr 242 @ 0xf20 (3872) - IMAD.IADD R0, R3, 0x1, R0 ;
 Instr 243 @ 0xf30 (3888) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 244 @ 0xf40 (3904) - STG.E.U8.SYS [R0.U32+UR4], R8 ;
 Instr 245 @ 0xf50 (3920) - @P0 EXIT ;
Basic block id 20 - num instructions 4
 Instr 246 @ 0xf60 (3936) - PRMT R3, R7, 0x7632, R3 ;
 Instr 247 @ 0xf70 (3952) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 248 @ 0xf80 (3968) - STG.E.U8.SYS [R0.U32+UR4+0x80], R3 ;
 Instr 249 @ 0xf90 (3984) - @P1 EXIT ;
Basic block id 21 - num instructions 3
 Instr 250 @ 0xfa0 (4000) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 251 @ 0xfb0 (4016) - STG.E.U8.SYS [R0.U32+UR4+0x100], R7 ;
 Instr 252 @ 0xfc0 (4032) - @P2 EXIT ;
Basic block id 22 - num instructions 3
 Instr 253 @ 0xfd0 (4048) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 254 @ 0xfe0 (4064) - STG.E.U8.SYS [R0.U32+UR4+0x180], R4 ;
 Instr 255 @ 0xff0 (4080) - @P3 EXIT ;
Basic block id 23 - num instructions 4
 Instr 256 @ 0x1000 (4096) - PRMT R3, R4, 0x7632, R3 ;
 Instr 257 @ 0x1010 (4112) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 258 @ 0x1020 (4128) - STG.E.U8.SYS [R0.U32+UR4+0x200], R3 ;
 Instr 259 @ 0x1030 (4144) - @P4 EXIT ;
Basic block id 24 - num instructions 3
 Instr 260 @ 0x1040 (4160) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 261 @ 0x1050 (4176) - STG.E.U8.SYS [R0.U32+UR4+0x280], R6 ;
 Instr 262 @ 0x1060 (4192) - @P5 EXIT ;
Basic block id 25 - num instructions 5
 Instr 263 @ 0x1070 (4208) - ISETP.NE.AND P6, PT, R11, RZ, PT ;
 Instr 264 @ 0x1080 (4224) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 265 @ 0x1090 (4240) - PRMT R3, R6, 0x7632, R3 ;
 Instr 266 @ 0x10a0 (4256) - STG.E.U8.SYS [R0.U32+UR4+0x300], R3 ;
 Instr 267 @ 0x10b0 (4272) - @P6 EXIT ;
Basic block id 26 - num instructions 3
 Instr 268 @ 0x10c0 (4288) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 269 @ 0x10d0 (4304) - STG.E.U8.SYS [R0.U32+UR4+0x380], R2 ;
 Instr 270 @ 0x10e0 (4320) - EXIT ;
Basic block id 27 - num instructions 1
 Instr 271 @ 0x10f0 (4336) - BRA 0x10f0;
inspecting void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 2ul>) - number basic blocks 28
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R4, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 16 @ 0x100 (256) - HADD2.F32 R5, R10.H1_H1, -RZ.H0_H0 ;
Inject count_instr before - Instr 33 @ 0x210 (528) - HADD2.F32 R5, R10.H1_H1, -RZ.H0_H0 ;
Inject count_instr before - Instr 49 @ 0x310 (784) - P2R R4, PR, RZ, 0x40 ;
Inject count_instr before - Instr 72 @ 0x480 (1152) - ISETP.GE.AND P6, PT, R0, R5, PT ;
Inject count_instr before - Instr 85 @ 0x550 (1360) - IMAD.IADD R6, R3, 0x1, R0 ;
Inject count_instr before - Instr 92 @ 0x5c0 (1472) - LDG.E.U16.SYS R12, [R6+0x100] ;
Inject count_instr before - Instr 96 @ 0x600 (1536) - LDG.E.U16.SYS R11, [R6+0x200] ;
Inject count_instr before - Instr 100 @ 0x640 (1600) - LDG.E.U16.SYS R10, [R6+0x300] ;
Inject count_instr before - Instr 104 @ 0x680 (1664) - LDG.E.U16.SYS R9, [R6+0x400] ;
Inject count_instr before - Instr 108 @ 0x6c0 (1728) - LDG.E.U16.SYS R8, [R6+0x500] ;
Inject count_instr before - Instr 112 @ 0x700 (1792) - IADD3 R4, R0, 0x380, RZ ;
Inject count_instr before - Instr 116 @ 0x740 (1856) - BSYNC B0 ;
Inject count_instr before - Instr 121 @ 0x790 (1936) - IADD3 R14, R0.reuse, 0x80, RZ ;
Inject count_instr before - Instr 150 @ 0x960 (2400) - @!P2 FSETP.NEU.AND P5, PT, R13, R10, PT ;
Inject count_instr before - Instr 173 @ 0xad0 (2768) - HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 178 @ 0xb20 (2848) - IADD3 R14, R0.reuse, 0x80, RZ ;
Inject count_instr before - Instr 239 @ 0xef0 (3824) - BSYNC B0 ;
Inject count_instr before - Instr 242 @ 0xf20 (3872) - IMAD.IADD R0, R3, 0x1, R0 ;
Inject count_instr before - Instr 246 @ 0xf60 (3936) - PRMT R3, R7, 0x7632, R3 ;
Inject count_instr before - Instr 250 @ 0xfa0 (4000) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 253 @ 0xfd0 (4048) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - PRMT R3, R4, 0x7632, R3 ;
Inject count_instr before - Instr 260 @ 0x1040 (4160) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 263 @ 0x1070 (4208) - ISETP.NE.AND P6, PT, R11, RZ, PT ;
Inject count_instr before - Instr 268 @ 0x10c0 (4288) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 271 @ 0x10f0 (4336) - BRA 0x10f0;
kernel 269 - _ZN2at6native29vectorized_elementwise_kernelILi4ENS0_13AUnaryFunctorIN3c104HalfES4_bNS0_51_GLOBAL__N__28ce311f_18_CompareEQKernel_cu_d8008c9616CompareEqFunctorIS4_EEEESt5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 583, total instructions 65660734
Function void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 3ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R5, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R5, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x5a0 ;
Basic block id 1 - num instructions 13
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R8, RZ, RZ, 0x2 ;
 Instr 8 @ 0x80 (128) - IMAD.WIDE R4, R3, R8, c[0x0][0x170] ;
 Instr 9 @ 0x90 (144) - IMAD.WIDE R8, R3, R8, c[0x0][0x178] ;
 Instr 10 @ 0xa0 (160) - IMAD.WIDE.U32 R6, R0, 0x8, R4 ;
 Instr 11 @ 0xb0 (176) - IMAD.WIDE.U32 R8, R0, 0x8, R8 ;
 Instr 12 @ 0xc0 (192) - LDG.E.64.SYS R12, [R6] ;
 Instr 13 @ 0xd0 (208) - LDG.E.64.SYS R16, [R8] ;
 Instr 14 @ 0xe0 (224) - LDG.E.64.SYS R14, [R6+0x400] ;
 Instr 15 @ 0xf0 (240) - LDG.E.64.SYS R4, [R8+0x400] ;
 Instr 16 @ 0x100 (256) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x164], PT ;
 Instr 17 @ 0x110 (272) - HADD2.F32 R2, R12.H0_H0, -RZ.H0_H0 ;
 Instr 18 @ 0x120 (288) - HADD2.F32 R11, R16.H0_H0, -RZ.H0_H0 ;
 Instr 19 @ 0x130 (304) - @!P0 BRA 0x2c0 ;
Basic block id 2 - num instructions 24
 Instr 20 @ 0x140 (320) - HADD2.F32 R6, R12.H1_H1, -RZ.H0_H0 ;
 Instr 21 @ 0x150 (336) - FSETP.NEU.AND P2, PT, R2, R11, PT ;
 Instr 22 @ 0x160 (352) - HADD2.F32 R8, R13.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 23 @ 0x170 (368) - HADD2.F32 R10, R13.H1_H1, -RZ.H0_H0 ;
 Instr 24 @ 0x180 (384) - P2R R2, PR, RZ, 0x4 ;
 Instr 25 @ 0x190 (400) - HADD2.F32 R7, R16.H1_H1, -RZ.H0_H0 ;
 Instr 26 @ 0x1a0 (416) - HADD2.F32 R9, R17.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 27 @ 0x1b0 (432) - HADD2.F32 R13, R17.H1_H1, -RZ.H0_H0 ;
 Instr 28 @ 0x1c0 (448) - HADD2.F32 R12, R14.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 29 @ 0x1d0 (464) - HADD2.F32 R16, R15.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 30 @ 0x1e0 (480) - FSETP.NEU.AND P0, PT, R6, R7, PT ;
 Instr 31 @ 0x1f0 (496) - HADD2.F32 R18, R15.H1_H1, -RZ.H0_H0 ;
 Instr 32 @ 0x200 (512) - FSETP.NEU.AND P1, PT, R8, R9, PT ;
 Instr 33 @ 0x210 (528) - HADD2.F32 R19, R5.H0_H0, -RZ.H0_H0 ;
 Instr 34 @ 0x220 (544) - FSETP.NEU.AND P2, PT, R10, R13, PT ;
 Instr 35 @ 0x230 (560) - HADD2.F32 R14, R14.H1_H1, -RZ.H0_H0 ;
 Instr 36 @ 0x240 (576) - HADD2.F32 R15, R4.H0_H0, -RZ.H0_H0 ;
 Instr 37 @ 0x250 (592) - HADD2.F32 R17, R4.H1_H1, -RZ.H0_H0 ;
 Instr 38 @ 0x260 (608) - HADD2.F32 R5, R5.H1_H1, -RZ.H0_H0 ;
 Instr 39 @ 0x270 (624) - FSETP.NEU.AND P5, PT, R16, R19, PT ;
 Instr 40 @ 0x280 (640) - FSETP.NEU.AND P3, PT, R12, R15, PT ;
 Instr 41 @ 0x290 (656) - FSETP.NEU.AND P4, PT, R14, R17, PT ;
 Instr 42 @ 0x2a0 (672) - FSETP.NEU.AND P6, PT, R18, R5, PT ;
 Instr 43 @ 0x2b0 (688) - BRA 0x430 ;
Basic block id 3 - num instructions 23
 Instr 44 @ 0x2c0 (704) - HADD2.F32 R7, R16.H1_H1, -RZ.H0_H0 ;
 Instr 45 @ 0x2d0 (720) - FSETP.EQ.AND P2, PT, R2, R11, PT ;
 Instr 46 @ 0x2e0 (736) - HADD2.F32 R6, R13.H0_H0, -RZ.H0_H0 ;
 Instr 47 @ 0x2f0 (752) - HADD2.F32 R9, R17.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 48 @ 0x300 (768) - P2R R2, PR, RZ, 0x4 ;
 Instr 49 @ 0x310 (784) - HADD2.F32 R8, R17.H1_H1, -RZ.H0_H0 ;
 Instr 50 @ 0x320 (800) - HADD2.F32 R10, R14.H0_H0, -RZ.H0_H0 ;
 Instr 51 @ 0x330 (816) - HADD2.F32 R16, R15.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 52 @ 0x340 (832) - HADD2.F32 R18, R15.H1_H1, -RZ.H0_H0 ;
 Instr 53 @ 0x350 (848) - FSETP.EQ.AND P1, PT, R6, R9, PT ;
 Instr 54 @ 0x360 (864) - HADD2.F32 R19, R5.H0_H0, -RZ.H0_H0 ;
 Instr 55 @ 0x370 (880) - HADD2.F32 R12, R12.H1_H1, -RZ.H0_H0 ;
 Instr 56 @ 0x380 (896) - HADD2.F32 R13, R13.H1_H1, -RZ.H0_H0 ;
 Instr 57 @ 0x390 (912) - HADD2.F32 R14, R14.H1_H1, -RZ.H0_H0 ;
 Instr 58 @ 0x3a0 (928) - HADD2.F32 R15, R4.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 59 @ 0x3b0 (944) - FSETP.EQ.AND P5, PT, R16, R19, PT ;
 Instr 60 @ 0x3c0 (960) - HADD2.F32 R17, R4.H1_H1, -RZ.H0_H0 ;
 Instr 61 @ 0x3d0 (976) - FSETP.EQ.AND P0, PT, R12, R7, PT ;
 Instr 62 @ 0x3e0 (992) - HADD2.F32 R5, R5.H1_H1, -RZ.H0_H0 ;
 Instr 63 @ 0x3f0 (1008) - FSETP.EQ.AND P2, PT, R13, R8, PT ;
 Instr 64 @ 0x400 (1024) - FSETP.EQ.AND P3, PT, R10, R15, PT ;
 Instr 65 @ 0x410 (1040) - FSETP.EQ.AND P4, PT, R14, R17, PT ;
 Instr 66 @ 0x420 (1056) - FSETP.EQ.AND P6, PT, R18, R5, PT ;
Basic block id 4 - num instructions 23
 Instr 67 @ 0x430 (1072) - P2R R4, PR, RZ, 0x40 ;
 Instr 68 @ 0x440 (1088) - ISETP.NE.AND P6, PT, R2, RZ, PT ;
 Instr 69 @ 0x450 (1104) - SEL R5, RZ, 0x1, !P0 ;
 Instr 70 @ 0x460 (1120) - SEL R2, RZ, 0x1, !P6 ;
 Instr 71 @ 0x470 (1136) - ISETP.NE.AND P6, PT, R4, RZ, PT ;
 Instr 72 @ 0x480 (1152) - SEL R4, RZ, 0x1, !P3 ;
 Instr 73 @ 0x490 (1168) - SEL R7, RZ, 0x1, !P4 ;
 Instr 74 @ 0x4a0 (1184) - PRMT R9, R5, 0x7604, R2 ;
 Instr 75 @ 0x4b0 (1200) - PRMT R6, R7, 0x7604, R4 ;
 Instr 76 @ 0x4c0 (1216) - IADD3 R2, P0, R3, c[0x0][0x168], RZ ;
 Instr 77 @ 0x4d0 (1232) - SEL R4, RZ, 0x1, !P1 ;
 Instr 78 @ 0x4e0 (1248) - SEL R5, RZ, 0x1, !P5 ;
 Instr 79 @ 0x4f0 (1264) - IMAD.X R3, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 80 @ 0x500 (1280) - PRMT R9, R4, 0x7054, R9 ;
 Instr 81 @ 0x510 (1296) - PRMT R6, R5, 0x7054, R6 ;
 Instr 82 @ 0x520 (1312) - IMAD.WIDE R2, R0, 0x4, R2 ;
 Instr 83 @ 0x530 (1328) - SEL R4, RZ, 0x1, !P2 ;
 Instr 84 @ 0x540 (1344) - SEL R5, RZ, 0x1, !P6 ;
 Instr 85 @ 0x550 (1360) - PRMT R9, R4, 0x654, R9 ;
 Instr 86 @ 0x560 (1376) - PRMT R5, R5, 0x654, R6 ;
 Instr 87 @ 0x570 (1392) - STG.E.SYS [R2], R9 ;
 Instr 88 @ 0x580 (1408) - STG.E.SYS [R2+0x200], R5 ;
 Instr 89 @ 0x590 (1424) - EXIT ;
Basic block id 5 - num instructions 21
 Instr 90 @ 0x5a0 (1440) - ISETP.GE.AND P6, PT, R0, R5, PT ;
 Instr 91 @ 0x5b0 (1456) - BMOV.32.CLEAR RZ, B0 ;
 Instr 92 @ 0x5c0 (1472) - BSSY B0, 0x980 ;
 Instr 93 @ 0x5d0 (1488) - PRMT R4, RZ, 0x7610, R4 ;
 Instr 94 @ 0x5e0 (1504) - P2R R6, PR, RZ, 0x40 ;
 Instr 95 @ 0x5f0 (1520) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 96 @ 0x600 (1536) - PRMT R7, RZ, 0x7610, R7 ;
 Instr 97 @ 0x610 (1552) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 98 @ 0x620 (1568) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 99 @ 0x630 (1584) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 100 @ 0x640 (1600) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 101 @ 0x650 (1616) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 102 @ 0x660 (1632) - PRMT R16, RZ, 0x7610, R16 ;
 Instr 103 @ 0x670 (1648) - PRMT R17, RZ, 0x7610, R17 ;
 Instr 104 @ 0x680 (1664) - PRMT R18, RZ, 0x7610, R18 ;
 Instr 105 @ 0x690 (1680) - PRMT R19, RZ, 0x7610, R19 ;
 Instr 106 @ 0x6a0 (1696) - PRMT R20, RZ, 0x7610, R20 ;
 Instr 107 @ 0x6b0 (1712) - PRMT R21, RZ, 0x7610, R21 ;
 Instr 108 @ 0x6c0 (1728) - PRMT R22, RZ, 0x7610, R22 ;
 Instr 109 @ 0x6d0 (1744) - PRMT R23, RZ, 0x7610, R23 ;
 Instr 110 @ 0x6e0 (1760) - @P6 BRA 0x970 ;
Basic block id 6 - num instructions 9
 Instr 111 @ 0x6f0 (1776) - IMAD.IADD R14, R3, 0x1, R0 ;
 Instr 112 @ 0x700 (1792) - IMAD.MOV.U32 R15, RZ, RZ, 0x2 ;
 Instr 113 @ 0x710 (1808) - IMAD.WIDE.U32 R12, R14, R15, c[0x0][0x170] ;
 Instr 114 @ 0x720 (1824) - IMAD.WIDE.U32 R14, R14, R15, c[0x0][0x178] ;
 Instr 115 @ 0x730 (1840) - LDG.E.U16.SYS R22, [R12] ;
 Instr 116 @ 0x740 (1856) - LDG.E.U16.SYS R23, [R14] ;
 Instr 117 @ 0x750 (1872) - IADD3 R24, R0, 0x80, RZ ;
 Instr 118 @ 0x760 (1888) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 119 @ 0x770 (1904) - @P0 BRA 0x970 ;
Basic block id 7 - num instructions 5
 Instr 120 @ 0x780 (1920) - LDG.E.U16.SYS R20, [R12+0x100] ;
 Instr 121 @ 0x790 (1936) - LDG.E.U16.SYS R21, [R14+0x100] ;
 Instr 122 @ 0x7a0 (1952) - IADD3 R24, R0, 0x100, RZ ;
 Instr 123 @ 0x7b0 (1968) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 124 @ 0x7c0 (1984) - @P0 BRA 0x970 ;
Basic block id 8 - num instructions 5
 Instr 125 @ 0x7d0 (2000) - LDG.E.U16.SYS R18, [R12+0x200] ;
 Instr 126 @ 0x7e0 (2016) - LDG.E.U16.SYS R19, [R14+0x200] ;
 Instr 127 @ 0x7f0 (2032) - IADD3 R24, R0, 0x180, RZ ;
 Instr 128 @ 0x800 (2048) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 129 @ 0x810 (2064) - @P0 BRA 0x970 ;
Basic block id 9 - num instructions 5
 Instr 130 @ 0x820 (2080) - LDG.E.U16.SYS R16, [R12+0x300] ;
 Instr 131 @ 0x830 (2096) - LDG.E.U16.SYS R17, [R14+0x300] ;
 Instr 132 @ 0x840 (2112) - IADD3 R24, R0, 0x200, RZ ;
 Instr 133 @ 0x850 (2128) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 134 @ 0x860 (2144) - @P0 BRA 0x970 ;
Basic block id 10 - num instructions 5
 Instr 135 @ 0x870 (2160) - LDG.E.U16.SYS R11, [R12+0x400] ;
 Instr 136 @ 0x880 (2176) - LDG.E.U16.SYS R10, [R14+0x400] ;
 Instr 137 @ 0x890 (2192) - IADD3 R24, R0, 0x280, RZ ;
 Instr 138 @ 0x8a0 (2208) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 139 @ 0x8b0 (2224) - @P0 BRA 0x970 ;
Basic block id 11 - num instructions 5
 Instr 140 @ 0x8c0 (2240) - LDG.E.U16.SYS R9, [R12+0x500] ;
 Instr 141 @ 0x8d0 (2256) - LDG.E.U16.SYS R8, [R14+0x500] ;
 Instr 142 @ 0x8e0 (2272) - IADD3 R24, R0, 0x300, RZ ;
 Instr 143 @ 0x8f0 (2288) - ISETP.GE.AND P0, PT, R24, R5, PT ;
 Instr 144 @ 0x900 (2304) - @P0 BRA 0x970 ;
Basic block id 12 - num instructions 6
 Instr 145 @ 0x910 (2320) - IADD3 R6, R0, 0x380, RZ ;
 Instr 146 @ 0x920 (2336) - LDG.E.U16.SYS R7, [R12+0x600] ;
 Instr 147 @ 0x930 (2352) - ISETP.GE.AND P0, PT, R6, R5, PT ;
 Instr 148 @ 0x940 (2368) - LDG.E.U16.SYS R6, [R14+0x600] ;
 Instr 149 @ 0x950 (2384) - @!P0 LDG.E.U16.SYS R4, [R12+0x700] ;
 Instr 150 @ 0x960 (2400) - @!P0 LDG.E.U16.SYS R2, [R14+0x700] ;
Basic block id 13 - num instructions 5
 Instr 151 @ 0x970 (2416) - BSYNC B0 ;
 Instr 152 @ 0x980 (2432) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x164], PT ;
 Instr 153 @ 0x990 (2448) - BMOV.32.CLEAR RZ, B0 ;
 Instr 154 @ 0x9a0 (2464) - BSSY B0, 0x1140 ;
 Instr 155 @ 0x9b0 (2480) - @!P0 BRA 0xd50 ;
Basic block id 14 - num instructions 52
 Instr 156 @ 0x9c0 (2496) - IADD3 R12, R0.reuse, 0x80, RZ ;
 Instr 157 @ 0x9d0 (2512) - @!P6 HADD2.F32 R23, R23.H0_H0, -RZ.H0_H0 ;
 Instr 158 @ 0x9e0 (2528) - IADD3 R14, R0, 0x180, RZ ;
 Instr 159 @ 0x9f0 (2544) - @!P6 HADD2.F32 R22, R22.H0_H0, -RZ.H0_H0 ;
 Instr 160 @ 0xa00 (2560) - ISETP.GE.AND P0, PT, R12, R5, PT ;
 Instr 161 @ 0xa10 (2576) - IADD3 R12, R0, 0x100, RZ ;
 Instr 162 @ 0xa20 (2592) - ISETP.GE.AND P2, PT, R14, R5.reuse, PT ;
 Instr 163 @ 0xa30 (2608) - ISETP.GE.AND P1, PT, R12, R5, PT ;
 Instr 164 @ 0xa40 (2624) - @!P6 FSETP.NEU.AND P5, PT, R22, R23, PT ;
 Instr 165 @ 0xa50 (2640) - IADD3 R12, R0, 0x200, RZ ;
 Instr 166 @ 0xa60 (2656) - @!P0 HADD2.F32 R20, R20.H0_H0, -RZ.H0_H0 ;
 Instr 167 @ 0xa70 (2672) - @!P6 SEL R14, RZ, 0x1, !P5 ;
 Instr 168 @ 0xa80 (2688) - @!P0 HADD2.F32 R21, R21.H0_H0, -RZ.H0_H0 ;
 Instr 169 @ 0xa90 (2704) - ISETP.GE.AND P3, PT, R12, R5, PT ;
 Instr 170 @ 0xaa0 (2720) - @!P2 HADD2.F32 R16, R16.H0_H0, -RZ.H0_H0 ;
 Instr 171 @ 0xab0 (2736) - IADD3 R12, R0, 0x280, RZ ;
 Instr 172 @ 0xac0 (2752) - @!P1 HADD2.F32 R18, R18.H0_H0, -RZ.H0_H0 ;
 Instr 173 @ 0xad0 (2768) - @!P1 HADD2.F32 R19, R19.H0_H0, -RZ.H0_H0 ;
 Instr 174 @ 0xae0 (2784) - ISETP.GE.AND P4, PT, R12, R5, PT ;
 Instr 175 @ 0xaf0 (2800) - @!P2 HADD2.F32 R17, R17.H0_H0, -RZ.H0_H0 ;
 Instr 176 @ 0xb00 (2816) - @!P0 FSETP.NEU.AND P5, PT, R20, R21, PT ;
 Instr 177 @ 0xb10 (2832) - @!P0 SEL R15, RZ, 0x1, !P5 ;
 Instr 178 @ 0xb20 (2848) - @!P3 HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 179 @ 0xb30 (2864) - @!P3 HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 180 @ 0xb40 (2880) - @!P4 HADD2.F32 R12, R9.H0_H0, -RZ.H0_H0 ;
 Instr 181 @ 0xb50 (2896) - @!P1 FSETP.NEU.AND P5, PT, R18, R19, PT ;
 Instr 182 @ 0xb60 (2912) - @!P4 HADD2.F32 R13, R8.H0_H0, -RZ.H0_H0 ;
 Instr 183 @ 0xb70 (2928) - @!P0 PRMT R8, R8, 0x5410, R15 ;
 Instr 184 @ 0xb80 (2944) - @!P1 SEL R18, RZ, 0x1, !P5 ;
 Instr 185 @ 0xb90 (2960) - @!P2 FSETP.NEU.AND P5, PT, R16, R17, PT ;
 Instr 186 @ 0xba0 (2976) - @!P2 SEL R16, RZ, 0x1, !P5 ;
 Instr 187 @ 0xbb0 (2992) - @!P3 FSETP.NEU.AND P5, PT, R11, R10, PT ;
 Instr 188 @ 0xbc0 (3008) - IADD3 R10, R0, 0x300, RZ ;
 Instr 189 @ 0xbd0 (3024) - @!P3 SEL R17, RZ, 0x1, !P5 ;
 Instr 190 @ 0xbe0 (3040) - @!P4 FSETP.NEU.AND P5, PT, R12, R13, PT ;
 Instr 191 @ 0xbf0 (3056) - @!P4 SEL R12, RZ, 0x1, !P5 ;
 Instr 192 @ 0xc00 (3072) - ISETP.GE.AND P5, PT, R10, R5, PT ;
 Instr 193 @ 0xc10 (3088) - @!P5 HADD2.F32 R10, R7.H0_H0, -RZ.H0_H0 ;
 Instr 194 @ 0xc20 (3104) - @!P3 PRMT R7, R17, 0x7610, R7 ;
 Instr 195 @ 0xc30 (3120) - @!P5 HADD2.F32 R11, R6.H0_H0, -RZ.H0_H0 ;
 Instr 196 @ 0xc40 (3136) - @!P1 PRMT R6, R18, 0x7610, R6 ;
 Instr 197 @ 0xc50 (3152) - @!P4 PRMT R7, R7, 0x5410, R12 ;
 Instr 198 @ 0xc60 (3168) - @!P2 PRMT R6, R6, 0x5410, R16 ;
 Instr 199 @ 0xc70 (3184) - @!P5 FSETP.NEU.AND P6, PT, R10, R11, PT ;
 Instr 200 @ 0xc80 (3200) - IADD3 R10, R0, 0x380, RZ ;
 Instr 201 @ 0xc90 (3216) - @!P5 SEL R11, RZ, 0x1, !P6 ;
 Instr 202 @ 0xca0 (3232) - @!P5 PRMT R8, R11, 0x7610, R8 ;
 Instr 203 @ 0xcb0 (3248) - ISETP.GE.AND P6, PT, R0, R5, PT ;
 Instr 204 @ 0xcc0 (3264) - @!P6 PRMT R9, R14, 0x7610, R9 ;
 Instr 205 @ 0xcd0 (3280) - ISETP.GE.AND P6, PT, R10, R5, PT ;
 Instr 206 @ 0xce0 (3296) - P2R R10, PR, RZ, 0x40 ;
 Instr 207 @ 0xcf0 (3312) - @P6 BRA 0x1130 ;
Basic block id 15 - num instructions 5
 Instr 208 @ 0xd00 (3328) - HADD2.F32 R4, R4.H0_H0, -RZ.H0_H0 ;
 Instr 209 @ 0xd10 (3344) - HADD2.F32 R11, R2.H0_H0, -RZ.H0_H0 ;
 Instr 210 @ 0xd20 (3360) - FSETP.NEU.AND P6, PT, R4, R11, PT ;
 Instr 211 @ 0xd30 (3376) - SEL R2, RZ, 0x1, !P6 ;
 Instr 212 @ 0xd40 (3392) - BRA 0x1130 ;
Basic block id 16 - num instructions 62
 Instr 213 @ 0xd50 (3408) - ISETP.GE.AND P6, PT, R0.reuse, R5.reuse, PT ;
 Instr 214 @ 0xd60 (3424) - IADD3 R12, R0.reuse, 0x80, RZ ;
 Instr 215 @ 0xd70 (3440) - IADD3 R14, R0, 0x180, RZ ;
 Instr 216 @ 0xd80 (3456) - ISETP.GE.AND P0, PT, R12, R5.reuse, PT ;
 Instr 217 @ 0xd90 (3472) - IADD3 R12, R0, 0x100, RZ ;
 Instr 218 @ 0xda0 (3488) - ISETP.GE.AND P2, PT, R14, R5, PT ;
 Instr 219 @ 0xdb0 (3504) - @!P6 HADD2.F32 R23, R23.H0_H0, -RZ.H0_H0 ;
 Instr 220 @ 0xdc0 (3520) - ISETP.GE.AND P1, PT, R12, R5.reuse, PT ;
 Instr 221 @ 0xdd0 (3536) - @!P6 HADD2.F32 R22, R22.H0_H0, -RZ.H0_H0 ;
 Instr 222 @ 0xde0 (3552) - IADD3 R12, R0, 0x200, RZ ;
 Instr 223 @ 0xdf0 (3568) - P2R R14, PR, RZ, 0x2 ;
 Instr 224 @ 0xe00 (3584) - @!P0 HADD2.F32 R20, R20.H0_H0, -RZ.H0_H0 ;
 Instr 225 @ 0xe10 (3600) - ISETP.GE.AND P3, PT, R12, R5, PT ;
 Instr 226 @ 0xe20 (3616) - @!P0 HADD2.F32 R21, R21.H0_H0, -RZ.H0_H0 ;
 Instr 227 @ 0xe30 (3632) - IADD3 R12, R0, 0x280, RZ ;
 Instr 228 @ 0xe40 (3648) - @!P2 HADD2.F32 R16, R16.H0_H0, -RZ.H0_H0 ;
 Instr 229 @ 0xe50 (3664) - @!P6 FSETP.NEU.AND P5, PT, R22, R23, PT ;
 Instr 230 @ 0xe60 (3680) - @!P2 HADD2.F32 R17, R17.H0_H0, -RZ.H0_H0 ;
 Instr 231 @ 0xe70 (3696) - ISETP.GE.AND P4, PT, R12, R5, PT ;
 Instr 232 @ 0xe80 (3712) - @!P1 HADD2.F32 R18, R18.H0_H0, -RZ.H0_H0 ;
 Instr 233 @ 0xe90 (3728) - @!P6 SEL R22, RZ, 0x1, P5 ;
 Instr 234 @ 0xea0 (3744) - @!P1 HADD2.F32 R19, R19.H0_H0, -RZ.H0_H0 ;
 Instr 235 @ 0xeb0 (3760) - P2R R15, PR, RZ, 0x1 ;
 Instr 236 @ 0xec0 (3776) - @!P3 HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 237 @ 0xed0 (3792) - @!P3 HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 238 @ 0xee0 (3808) - @!P0 FSETP.NEU.AND P5, PT, R20, R21, PT ;
 Instr 239 @ 0xef0 (3824) - @!P4 HADD2.F32 R12, R9.H0_H0, -RZ.H0_H0 ;
 Instr 240 @ 0xf00 (3840) - @!P0 SEL R20, RZ, 0x1, P5 ;
 Instr 241 @ 0xf10 (3856) - @!P4 HADD2.F32 R13, R8.H0_H0, -RZ.H0_H0 ;
 Instr 242 @ 0xf20 (3872) - ISETP.GE.AND P0, PT, R0, R5, PT ;
 Instr 243 @ 0xf30 (3888) - @!P1 FSETP.NEU.AND P5, PT, R18, R19, PT ;
 Instr 244 @ 0xf40 (3904) - @!P1 SEL R18, RZ, 0x1, P5 ;
 Instr 245 @ 0xf50 (3920) - @!P0 PRMT R9, R22, 0x7610, R9 ;
 Instr 246 @ 0xf60 (3936) - ISETP.NE.AND P0, PT, R15, RZ, PT ;
 Instr 247 @ 0xf70 (3952) - @!P2 FSETP.NEU.AND P5, PT, R16, R17, PT ;
 Instr 248 @ 0xf80 (3968) - @!P2 SEL R16, RZ, 0x1, P5 ;
 Instr 249 @ 0xf90 (3984) - @!P0 PRMT R8, R8, 0x5410, R20 ;
 Instr 250 @ 0xfa0 (4000) - @!P3 FSETP.NEU.AND P5, PT, R11, R10, PT ;
 Instr 251 @ 0xfb0 (4016) - IADD3 R10, R0, 0x300, RZ ;
 Instr 252 @ 0xfc0 (4032) - @!P3 SEL R17, RZ, 0x1, P5 ;
 Instr 253 @ 0xfd0 (4048) - @!P4 FSETP.NEU.AND P5, PT, R12, R13, PT ;
 Instr 254 @ 0xfe0 (4064) - @!P4 SEL R12, RZ, 0x1, P5 ;
 Instr 255 @ 0xff0 (4080) - ISETP.GE.AND P5, PT, R10, R5, PT ;
 Instr 256 @ 0x1000 (4096) - @!P5 HADD2.F32 R10, R7.H0_H0, -RZ.H0_H0 ;
 Instr 257 @ 0x1010 (4112) - @!P3 PRMT R7, R17, 0x7610, R7 ;
 Instr 258 @ 0x1020 (4128) - @!P5 HADD2.F32 R11, R6.H0_H0, -RZ.H0_H0 ;
 Instr 259 @ 0x1030 (4144) - @!P4 PRMT R7, R7, 0x5410, R12 ;
 Instr 260 @ 0x1040 (4160) - @!P5 FSETP.NEU.AND P6, PT, R10, R11, PT ;
 Instr 261 @ 0x1050 (4176) - IADD3 R10, R0, 0x380, RZ ;
 Instr 262 @ 0x1060 (4192) - @!P5 SEL R13, RZ, 0x1, P6 ;
 Instr 263 @ 0x1070 (4208) - ISETP.GE.AND P1, PT, R10, R5, PT ;
 Instr 264 @ 0x1080 (4224) - @!P5 PRMT R8, R13, 0x7610, R8 ;
 Instr 265 @ 0x1090 (4240) - P2R R10, PR, RZ, 0x2 ;
 Instr 266 @ 0x10a0 (4256) - @!P1 HADD2.F32 R4, R4.H0_H0, -RZ.H0_H0 ;
 Instr 267 @ 0x10b0 (4272) - @!P1 HADD2.F32 R11, R2.H0_H0, -RZ.H0_H0 ;
 Instr 268 @ 0x10c0 (4288) - @!P1 FSETP.NEU.AND P6, PT, R4, R11, PT ;
 Instr 269 @ 0x10d0 (4304) - @!P1 SEL R4, RZ, 0x1, P6 ;
 Instr 270 @ 0x10e0 (4320) - ISETP.NE.AND P1, PT, R14, RZ, PT ;
 Instr 271 @ 0x10f0 (4336) - ISETP.NE.AND P6, PT, R10, RZ, PT ;
 Instr 272 @ 0x1100 (4352) - @!P1 PRMT R6, R18, 0x7610, R6 ;
 Instr 273 @ 0x1110 (4368) - @!P2 PRMT R6, R6, 0x5410, R16 ;
 Instr 274 @ 0x1120 (4384) - @!P6 PRMT R2, R4, 0x7610, R2 ;
Basic block id 17 - num instructions 3
 Instr 275 @ 0x1130 (4400) - BSYNC B0 ;
 Instr 276 @ 0x1140 (4416) - ISETP.GE.AND P6, PT, R0, R5, PT ;
 Instr 277 @ 0x1150 (4432) - @P6 EXIT ;
Basic block id 18 - num instructions 4
 Instr 278 @ 0x1160 (4448) - IMAD.IADD R0, R3, 0x1, R0 ;
 Instr 279 @ 0x1170 (4464) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 280 @ 0x1180 (4480) - STG.E.U8.SYS [R0.U32+UR4], R9 ;
 Instr 281 @ 0x1190 (4496) - @P0 EXIT ;
Basic block id 19 - num instructions 4
 Instr 282 @ 0x11a0 (4512) - PRMT R3, R8, 0x7632, R3 ;
 Instr 283 @ 0x11b0 (4528) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 284 @ 0x11c0 (4544) - STG.E.U8.SYS [R0.U32+UR4+0x80], R3 ;
 Instr 285 @ 0x11d0 (4560) - @P1 EXIT ;
Basic block id 20 - num instructions 3
 Instr 286 @ 0x11e0 (4576) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 287 @ 0x11f0 (4592) - STG.E.U8.SYS [R0.U32+UR4+0x100], R6 ;
 Instr 288 @ 0x1200 (4608) - @P2 EXIT ;
Basic block id 21 - num instructions 4
 Instr 289 @ 0x1210 (4624) - PRMT R3, R6, 0x7632, R3 ;
 Instr 290 @ 0x1220 (4640) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 291 @ 0x1230 (4656) - STG.E.U8.SYS [R0.U32+UR4+0x180], R3 ;
 Instr 292 @ 0x1240 (4672) - @P3 EXIT ;
Basic block id 22 - num instructions 3
 Instr 293 @ 0x1250 (4688) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 294 @ 0x1260 (4704) - STG.E.U8.SYS [R0.U32+UR4+0x200], R7 ;
 Instr 295 @ 0x1270 (4720) - @P4 EXIT ;
Basic block id 23 - num instructions 4
 Instr 296 @ 0x1280 (4736) - PRMT R3, R7, 0x7632, R3 ;
 Instr 297 @ 0x1290 (4752) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 298 @ 0x12a0 (4768) - STG.E.U8.SYS [R0.U32+UR4+0x280], R3 ;
 Instr 299 @ 0x12b0 (4784) - @P5 EXIT ;
Basic block id 24 - num instructions 4
 Instr 300 @ 0x12c0 (4800) - ISETP.NE.AND P6, PT, R10, RZ, PT ;
 Instr 301 @ 0x12d0 (4816) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 302 @ 0x12e0 (4832) - STG.E.U8.SYS [R0.U32+UR4+0x300], R8 ;
 Instr 303 @ 0x12f0 (4848) - @P6 EXIT ;
Basic block id 25 - num instructions 3
 Instr 304 @ 0x1300 (4864) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 305 @ 0x1310 (4880) - STG.E.U8.SYS [R0.U32+UR4+0x380], R2 ;
 Instr 306 @ 0x1320 (4896) - EXIT ;
Basic block id 26 - num instructions 1
 Instr 307 @ 0x1330 (4912) - BRA 0x1330;
inspecting void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<c10::Half, c10::Half, bool, at::native::(anonymous namespace)::CompareEqFunctor<c10::Half> >, std::array<char*, 3ul>) - number basic blocks 27
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R8, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 20 @ 0x140 (320) - HADD2.F32 R6, R12.H1_H1, -RZ.H0_H0 ;
Inject count_instr before - Instr 44 @ 0x2c0 (704) - HADD2.F32 R7, R16.H1_H1, -RZ.H0_H0 ;
Inject count_instr before - Instr 67 @ 0x430 (1072) - P2R R4, PR, RZ, 0x40 ;
Inject count_instr before - Instr 90 @ 0x5a0 (1440) - ISETP.GE.AND P6, PT, R0, R5, PT ;
Inject count_instr before - Instr 111 @ 0x6f0 (1776) - IMAD.IADD R14, R3, 0x1, R0 ;
Inject count_instr before - Instr 120 @ 0x780 (1920) - LDG.E.U16.SYS R20, [R12+0x100] ;
Inject count_instr before - Instr 125 @ 0x7d0 (2000) - LDG.E.U16.SYS R18, [R12+0x200] ;
Inject count_instr before - Instr 130 @ 0x820 (2080) - LDG.E.U16.SYS R16, [R12+0x300] ;
Inject count_instr before - Instr 135 @ 0x870 (2160) - LDG.E.U16.SYS R11, [R12+0x400] ;
Inject count_instr before - Instr 140 @ 0x8c0 (2240) - LDG.E.U16.SYS R9, [R12+0x500] ;
Inject count_instr before - Instr 145 @ 0x910 (2320) - IADD3 R6, R0, 0x380, RZ ;
Inject count_instr before - Instr 151 @ 0x970 (2416) - BSYNC B0 ;
Inject count_instr before - Instr 156 @ 0x9c0 (2496) - IADD3 R12, R0.reuse, 0x80, RZ ;
Inject count_instr before - Instr 208 @ 0xd00 (3328) - HADD2.F32 R4, R4.H0_H0, -RZ.H0_H0 ;
Inject count_instr before - Instr 213 @ 0xd50 (3408) - ISETP.GE.AND P6, PT, R0.reuse, R5.reuse, PT ;
Inject count_instr before - Instr 275 @ 0x1130 (4400) - BSYNC B0 ;
Inject count_instr before - Instr 278 @ 0x1160 (4448) - IMAD.IADD R0, R3, 0x1, R0 ;
Inject count_instr before - Instr 282 @ 0x11a0 (4512) - PRMT R3, R8, 0x7632, R3 ;
Inject count_instr before - Instr 286 @ 0x11e0 (4576) - ULDC.64 UR4, c[0x0][0x168] ;
Inject count_instr before - Instr 289 @ 0x1210 (4624) - PRMT R3, R6, 0x7632, R3 ;
Inject count_instr before - Instr 293 @ 0x1250 (4688) - ULDC.64 UR4, c[0x0][0x168] ;
Inject count_instr before - Instr 296 @ 0x1280 (4736) - PRMT R3, R7, 0x7632, R3 ;
Inject count_instr before - Instr 300 @ 0x12c0 (4800) - ISETP.NE.AND P6, PT, R10, RZ, PT ;
Inject count_instr before - Instr 304 @ 0x1300 (4864) - ULDC.64 UR4, c[0x0][0x168] ;
Inject count_instr before - Instr 307 @ 0x1330 (4912) - BRA 0x1330;
kernel 270 - _ZN2at6native29vectorized_elementwise_kernelILi4ENS0_13BinaryFunctorIN3c104HalfES4_bNS0_51_GLOBAL__N__28ce311f_18_CompareEQKernel_cu_d8008c9616CompareEqFunctorIS4_EEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 668, total instructions 65661402
Function void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R5, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R5, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x460 ;
Basic block id 1 - num instructions 63
 Instr 7 @ 0x70 (112) - SHF.R.S32.HI R2, RZ, 0x1f, R3 ;
 Instr 8 @ 0x80 (128) - IADD3 R6, P0, R3, c[0x0][0x178], RZ ;
 Instr 9 @ 0x90 (144) - IADD3.X R7, R2, c[0x0][0x17c], RZ, P0, !PT ;
 Instr 10 @ 0xa0 (160) - IADD3 R4, P0, R3, c[0x0][0x170], RZ ;
 Instr 11 @ 0xb0 (176) - IMAD.WIDE.U32 R6, R0, 0x4, R6 ;
 Instr 12 @ 0xc0 (192) - IADD3.X R5, R2, c[0x0][0x174], RZ, P0, !PT ;
 Instr 13 @ 0xd0 (208) - IMAD.WIDE.U32 R4, R0, 0x4, R4 ;
 Instr 14 @ 0xe0 (224) - LDG.E.SYS R10, [R6] ;
 Instr 15 @ 0xf0 (240) - LDG.E.SYS R13, [R6+0x200] ;
 Instr 16 @ 0x100 (256) - LDG.E.SYS R11, [R4] ;
 Instr 17 @ 0x110 (272) - LDG.E.SYS R12, [R4+0x200] ;
 Instr 18 @ 0x120 (288) - PRMT R2, R10, 0x7770, RZ ;
 Instr 19 @ 0x130 (304) - PRMT R9, R10, 0x7772, RZ ;
 Instr 20 @ 0x140 (320) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 21 @ 0x150 (336) - PRMT R8, R10, 0x7771, RZ ;
 Instr 22 @ 0x160 (352) - PRMT R2, R11, 0x7770, RZ ;
 Instr 23 @ 0x170 (368) - ISETP.NE.AND P2, PT, R9, RZ, PT ;
 Instr 24 @ 0x180 (384) - ISETP.NE.AND P0, PT, R2, RZ, P0 ;
 Instr 25 @ 0x190 (400) - PRMT R4, R11, 0x7772, RZ ;
 Instr 26 @ 0x1a0 (416) - PRMT R5, R13, 0x7770, RZ ;
 Instr 27 @ 0x1b0 (432) - ISETP.NE.AND P1, PT, R8, RZ, PT ;
 Instr 28 @ 0x1c0 (448) - PRMT R2, R11, 0x7771, RZ ;
 Instr 29 @ 0x1d0 (464) - PRMT R6, R13, 0x7771, RZ ;
 Instr 30 @ 0x1e0 (480) - PRMT R10, R10, 0x7773, RZ ;
 Instr 31 @ 0x1f0 (496) - ISETP.NE.AND P2, PT, R4, RZ, P2 ;
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P3, PT, R5, RZ, PT ;
 Instr 33 @ 0x210 (528) - ISETP.NE.AND P1, PT, R2, RZ, P1 ;
 Instr 34 @ 0x220 (544) - ISETP.NE.AND P4, PT, R6, RZ, PT ;
 Instr 35 @ 0x230 (560) - PRMT R4, R12.reuse, 0x7770, RZ ;
 Instr 36 @ 0x240 (576) - PRMT R5, R12, 0x7771, RZ ;
 Instr 37 @ 0x250 (592) - ISETP.NE.AND P5, PT, R10, RZ, PT ;
 Instr 38 @ 0x260 (608) - PRMT R2, R11, 0x7773, RZ ;
 Instr 39 @ 0x270 (624) - PRMT R6, R13, 0x7772, RZ ;
 Instr 40 @ 0x280 (640) - ISETP.NE.AND P3, PT, R4, RZ, P3 ;
 Instr 41 @ 0x290 (656) - ISETP.NE.AND P4, PT, R5, RZ, P4 ;
 Instr 42 @ 0x2a0 (672) - ISETP.NE.AND P5, PT, R2, RZ, P5 ;
 Instr 43 @ 0x2b0 (688) - SEL R4, RZ, 0x1, !P0 ;
 Instr 44 @ 0x2c0 (704) - SEL R5, RZ, 0x1, !P1 ;
 Instr 45 @ 0x2d0 (720) - ISETP.NE.AND P6, PT, R6, RZ, PT ;
 Instr 46 @ 0x2e0 (736) - PRMT R9, R12, 0x7772, RZ ;
 Instr 47 @ 0x2f0 (752) - PRMT R2, R13, 0x7773, RZ ;
 Instr 48 @ 0x300 (768) - SEL R6, RZ, 0x1, !P3 ;
 Instr 49 @ 0x310 (784) - SEL R7, RZ, 0x1, !P4 ;
 Instr 50 @ 0x320 (800) - PRMT R8, R5, 0x7604, R4 ;
 Instr 51 @ 0x330 (816) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 52 @ 0x340 (832) - ISETP.NE.AND P6, PT, R9, RZ, P6 ;
 Instr 53 @ 0x350 (848) - PRMT R4, R12, 0x7773, RZ ;
 Instr 54 @ 0x360 (864) - PRMT R9, R7, 0x7604, R6 ;
 Instr 55 @ 0x370 (880) - IADD3 R2, P1, R3, c[0x0][0x168], RZ ;
 Instr 56 @ 0x380 (896) - SEL R5, RZ, 0x1, !P2 ;
 Instr 57 @ 0x390 (912) - SEL R6, RZ, 0x1, !P6 ;
 Instr 58 @ 0x3a0 (928) - ISETP.NE.AND P0, PT, R4, RZ, P0 ;
 Instr 59 @ 0x3b0 (944) - IMAD.X R3, RZ, RZ, c[0x0][0x16c], P1 ;
 Instr 60 @ 0x3c0 (960) - PRMT R7, R5, 0x7054, R8 ;
 Instr 61 @ 0x3d0 (976) - PRMT R6, R6, 0x7054, R9 ;
 Instr 62 @ 0x3e0 (992) - SEL R4, RZ, 0x1, !P5 ;
 Instr 63 @ 0x3f0 (1008) - SEL R5, RZ, 0x1, !P0 ;
 Instr 64 @ 0x400 (1024) - IMAD.WIDE R2, R0, 0x4, R2 ;
 Instr 65 @ 0x410 (1040) - PRMT R7, R4, 0x654, R7 ;
 Instr 66 @ 0x420 (1056) - PRMT R5, R5, 0x654, R6 ;
 Instr 67 @ 0x430 (1072) - STG.E.SYS [R2], R7 ;
 Instr 68 @ 0x440 (1088) - STG.E.SYS [R2+0x200], R5 ;
 Instr 69 @ 0x450 (1104) - EXIT ;
Basic block id 2 - num instructions 20
 Instr 70 @ 0x460 (1120) - ISETP.GE.AND P3, PT, R0, R5, PT ;
 Instr 71 @ 0x470 (1136) - BMOV.32.CLEAR RZ, B0 ;
 Instr 72 @ 0x480 (1152) - BSSY B0, 0xb10 ;
 Instr 73 @ 0x490 (1168) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 74 @ 0x4a0 (1184) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 75 @ 0x4b0 (1200) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 76 @ 0x4c0 (1216) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 77 @ 0x4d0 (1232) - PRMT R4, RZ, 0x7610, R4 ;
 Instr 78 @ 0x4e0 (1248) - PRMT R7, RZ, 0x7610, R7 ;
 Instr 79 @ 0x4f0 (1264) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 80 @ 0x500 (1280) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 81 @ 0x510 (1296) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 82 @ 0x520 (1312) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 83 @ 0x530 (1328) - PRMT R12, RZ, 0x7610, R12 ;
 Instr 84 @ 0x540 (1344) - PRMT R13, RZ, 0x7610, R13 ;
 Instr 85 @ 0x550 (1360) - PRMT R14, RZ, 0x7610, R14 ;
 Instr 86 @ 0x560 (1376) - PRMT R15, RZ, 0x7610, R15 ;
 Instr 87 @ 0x570 (1392) - PRMT R16, RZ, 0x7610, R16 ;
 Instr 88 @ 0x580 (1408) - PRMT R17, RZ, 0x7610, R17 ;
 Instr 89 @ 0x590 (1424) - @P3 BRA 0xb00 ;
Basic block id 3 - num instructions 9
 Instr 90 @ 0x5a0 (1440) - IMAD.IADD R18, R3, 0x1, R0 ;
 Instr 91 @ 0x5b0 (1456) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 92 @ 0x5c0 (1472) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 93 @ 0x5d0 (1488) - LDG.E.U8.SYS R17, [R18.U32+UR4] ;
 Instr 94 @ 0x5e0 (1504) - LDG.E.U8.SYS R16, [R18.U32+UR6] ;
 Instr 95 @ 0x5f0 (1520) - IADD3 R20, R0, 0x80, RZ ;
 Instr 96 @ 0x600 (1536) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 97 @ 0x610 (1552) - ISETP.NE.AND P2, PT, R17, RZ, PT ;
 Instr 98 @ 0x620 (1568) - ISETP.NE.AND P4, PT, R16, RZ, PT ;
Basic block id 4 - num instructions 3
 Instr 99 @ 0x630 (1584) - SEL R16, RZ, 0x1, !P2 ;
 Instr 100 @ 0x640 (1600) - SEL R17, RZ, 0x1, !P4 ;
 Instr 101 @ 0x650 (1616) - @P5 BRA 0xb00 ;
Basic block id 5 - num instructions 12
 Instr 102 @ 0x660 (1632) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 103 @ 0x670 (1648) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 104 @ 0x680 (1664) - LDG.E.U8.SYS R15, [R18.U32+UR4+0x80] ;
 Instr 105 @ 0x690 (1680) - LDG.E.U8.SYS R14, [R18.U32+UR6+0x80] ;
 Instr 106 @ 0x6a0 (1696) - IADD3 R20, R0, 0x100, RZ ;
 Instr 107 @ 0x6b0 (1712) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 108 @ 0x6c0 (1728) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 109 @ 0x6d0 (1744) - ISETP.NE.AND P2, PT, R15, RZ, PT ;
 Instr 110 @ 0x6e0 (1760) - ISETP.NE.AND P4, PT, R14, RZ, PT ;
 Instr 111 @ 0x6f0 (1776) - SEL R14, RZ, 0x1, !P2 ;
 Instr 112 @ 0x700 (1792) - SEL R15, RZ, 0x1, !P4 ;
 Instr 113 @ 0x710 (1808) - @P5 BRA 0xb00 ;
Basic block id 6 - num instructions 12
 Instr 114 @ 0x720 (1824) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 115 @ 0x730 (1840) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 116 @ 0x740 (1856) - LDG.E.U8.SYS R13, [R18.U32+UR4+0x100] ;
 Instr 117 @ 0x750 (1872) - LDG.E.U8.SYS R12, [R18.U32+UR6+0x100] ;
 Instr 118 @ 0x760 (1888) - IADD3 R20, R0, 0x180, RZ ;
 Instr 119 @ 0x770 (1904) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 120 @ 0x780 (1920) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 121 @ 0x790 (1936) - ISETP.NE.AND P2, PT, R13, RZ, PT ;
 Instr 122 @ 0x7a0 (1952) - ISETP.NE.AND P4, PT, R12, RZ, PT ;
 Instr 123 @ 0x7b0 (1968) - SEL R12, RZ, 0x1, !P2 ;
 Instr 124 @ 0x7c0 (1984) - SEL R13, RZ, 0x1, !P4 ;
 Instr 125 @ 0x7d0 (2000) - @P5 BRA 0xb00 ;
Basic block id 7 - num instructions 12
 Instr 126 @ 0x7e0 (2016) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 127 @ 0x7f0 (2032) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 128 @ 0x800 (2048) - LDG.E.U8.SYS R11, [R18.U32+UR4+0x180] ;
 Instr 129 @ 0x810 (2064) - LDG.E.U8.SYS R10, [R18.U32+UR6+0x180] ;
 Instr 130 @ 0x820 (2080) - IADD3 R20, R0, 0x200, RZ ;
 Instr 131 @ 0x830 (2096) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 132 @ 0x840 (2112) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 133 @ 0x850 (2128) - ISETP.NE.AND P2, PT, R11, RZ, PT ;
 Instr 134 @ 0x860 (2144) - ISETP.NE.AND P4, PT, R10, RZ, PT ;
 Instr 135 @ 0x870 (2160) - SEL R10, RZ, 0x1, !P2 ;
 Instr 136 @ 0x880 (2176) - SEL R11, RZ, 0x1, !P4 ;
 Instr 137 @ 0x890 (2192) - @P5 BRA 0xb00 ;
Basic block id 8 - num instructions 12
 Instr 138 @ 0x8a0 (2208) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 139 @ 0x8b0 (2224) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 140 @ 0x8c0 (2240) - LDG.E.U8.SYS R9, [R18.U32+UR4+0x200] ;
 Instr 141 @ 0x8d0 (2256) - LDG.E.U8.SYS R8, [R18.U32+UR6+0x200] ;
 Instr 142 @ 0x8e0 (2272) - IADD3 R20, R0, 0x280, RZ ;
 Instr 143 @ 0x8f0 (2288) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 144 @ 0x900 (2304) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 145 @ 0x910 (2320) - ISETP.NE.AND P2, PT, R9, RZ, PT ;
 Instr 146 @ 0x920 (2336) - ISETP.NE.AND P4, PT, R8, RZ, PT ;
 Instr 147 @ 0x930 (2352) - SEL R8, RZ, 0x1, !P2 ;
 Instr 148 @ 0x940 (2368) - SEL R9, RZ, 0x1, !P4 ;
 Instr 149 @ 0x950 (2384) - @P5 BRA 0xb00 ;
Basic block id 9 - num instructions 12
 Instr 150 @ 0x960 (2400) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 151 @ 0x970 (2416) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 152 @ 0x980 (2432) - LDG.E.U8.SYS R7, [R18.U32+UR4+0x280] ;
 Instr 153 @ 0x990 (2448) - LDG.E.U8.SYS R4, [R18.U32+UR6+0x280] ;
 Instr 154 @ 0x9a0 (2464) - IADD3 R20, R0, 0x300, RZ ;
 Instr 155 @ 0x9b0 (2480) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 156 @ 0x9c0 (2496) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 157 @ 0x9d0 (2512) - ISETP.NE.AND P2, PT, R7, RZ, PT ;
 Instr 158 @ 0x9e0 (2528) - ISETP.NE.AND P4, PT, R4, RZ, PT ;
 Instr 159 @ 0x9f0 (2544) - SEL R4, RZ, 0x1, !P2 ;
 Instr 160 @ 0xa00 (2560) - SEL R7, RZ, 0x1, !P4 ;
 Instr 161 @ 0xa10 (2576) - @P5 BRA 0xb00 ;
Basic block id 10 - num instructions 14
 Instr 162 @ 0xa20 (2592) - IADD3 R2, R0, 0x380, RZ ;
 Instr 163 @ 0xa30 (2608) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 164 @ 0xa40 (2624) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 165 @ 0xa50 (2640) - ISETP.GE.AND P1, PT, R2, R5, PT ;
 Instr 166 @ 0xa60 (2656) - LDG.E.U8.SYS R20, [R18.U32+UR4+0x300] ;
 Instr 167 @ 0xa70 (2672) - LDG.E.U8.SYS R2, [R18.U32+UR6+0x300] ;
 Instr 168 @ 0xa80 (2688) - @!P1 LDG.E.U8.SYS R6, [R18.U32+UR4+0x380] ;
 Instr 169 @ 0xa90 (2704) - @!P1 LDG.E.U8.SYS R19, [R18.U32+UR6+0x380] ;
 Instr 170 @ 0xaa0 (2720) - ISETP.NE.AND P2, PT, R20, RZ, PT ;
 Instr 171 @ 0xab0 (2736) - ISETP.NE.AND P4, PT, R2, RZ, PT ;
 Instr 172 @ 0xac0 (2752) - SEL R2, RZ, 0x1, !P2 ;
 Instr 173 @ 0xad0 (2768) - @!P1 ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 174 @ 0xae0 (2784) - SEL R6, RZ, 0x1, !P4 ;
 Instr 175 @ 0xaf0 (2800) - ISETP.NE.AND P1, PT, R19, RZ, !P1 ;
Basic block id 11 - num instructions 11
 Instr 176 @ 0xb00 (2816) - BSYNC B0 ;
 Instr 177 @ 0xb10 (2832) - PRMT R17, R17, 0x9910, RZ ;
 Instr 178 @ 0xb20 (2848) - PRMT R18, R16, 0x9910, RZ ;
 Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R16, RZ, RZ, R17 ;
 Instr 180 @ 0xb40 (2880) - PRMT R17, R15, 0x9910, RZ ;
 Instr 181 @ 0xb50 (2896) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 182 @ 0xb60 (2912) - PRMT R18, R14, 0x9910, RZ ;
 Instr 183 @ 0xb70 (2928) - ISETP.NE.AND P2, PT, R16, RZ, PT ;
 Instr 184 @ 0xb80 (2944) - IMAD.MOV.U32 R14, RZ, RZ, R17 ;
 Instr 185 @ 0xb90 (2960) - ISETP.NE.AND P2, PT, R15, RZ, P2 ;
 Instr 186 @ 0xba0 (2976) - @P3 EXIT ;
Basic block id 12 - num instructions 11
 Instr 187 @ 0xbb0 (2992) - IADD3 R16, R0, 0x80, RZ ;
 Instr 188 @ 0xbc0 (3008) - IMAD.IADD R15, R3, 0x1, R0 ;
 Instr 189 @ 0xbd0 (3024) - SEL R3, RZ, 0x1, !P2 ;
 Instr 190 @ 0xbe0 (3040) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 191 @ 0xbf0 (3056) - ISETP.GE.AND P3, PT, R16, R5, PT ;
 Instr 192 @ 0xc00 (3072) - ISETP.NE.AND P2, PT, R14, RZ, PT ;
 Instr 193 @ 0xc10 (3088) - IMAD.MOV.U32 R14, RZ, RZ, R18 ;
 Instr 194 @ 0xc20 (3104) - PRMT R13, R13, 0x9910, RZ ;
 Instr 195 @ 0xc30 (3120) - STG.E.U8.SYS [R15.U32+UR4], R3 ;
 Instr 196 @ 0xc40 (3136) - ISETP.NE.AND P2, PT, R14, RZ, P2 ;
 Instr 197 @ 0xc50 (3152) - @P3 EXIT ;
Basic block id 13 - num instructions 11
 Instr 198 @ 0xc60 (3168) - IADD3 R14, R0, 0x100, RZ ;
 Instr 199 @ 0xc70 (3184) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 200 @ 0xc80 (3200) - PRMT R3, R12, 0x9910, RZ ;
 Instr 201 @ 0xc90 (3216) - ISETP.GE.AND P3, PT, R14, R5, PT ;
 Instr 202 @ 0xca0 (3232) - SEL R12, RZ, 0x1, !P2 ;
 Instr 203 @ 0xcb0 (3248) - ISETP.NE.AND P2, PT, R13, RZ, PT ;
 Instr 204 @ 0xcc0 (3264) - PRMT R11, R11, 0x9910, RZ ;
 Instr 205 @ 0xcd0 (3280) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 206 @ 0xce0 (3296) - STG.E.U8.SYS [R15.U32+UR4+0x80], R12 ;
 Instr 207 @ 0xcf0 (3312) - IMAD.MOV.U32 R3, RZ, RZ, R11 ;
 Instr 208 @ 0xd00 (3328) - @P3 EXIT ;
Basic block id 14 - num instructions 12
 Instr 209 @ 0xd10 (3344) - IADD3 R12, R0, 0x180, RZ ;
 Instr 210 @ 0xd20 (3360) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 211 @ 0xd30 (3376) - PRMT R11, R10, 0x9910, RZ ;
 Instr 212 @ 0xd40 (3392) - ISETP.GE.AND P3, PT, R12, R5, PT ;
 Instr 213 @ 0xd50 (3408) - SEL R10, RZ, 0x1, !P2 ;
 Instr 214 @ 0xd60 (3424) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 215 @ 0xd70 (3440) - IMAD.MOV.U32 R3, RZ, RZ, R11 ;
 Instr 216 @ 0xd80 (3456) - PRMT R9, R9, 0x9910, RZ ;
 Instr 217 @ 0xd90 (3472) - STG.E.U8.SYS [R15.U32+UR4+0x100], R10 ;
 Instr 218 @ 0xda0 (3488) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 219 @ 0xdb0 (3504) - IMAD.MOV.U32 R3, RZ, RZ, R9 ;
 Instr 220 @ 0xdc0 (3520) - @P3 EXIT ;
Basic block id 15 - num instructions 12
 Instr 221 @ 0xdd0 (3536) - IADD3 R10, R0, 0x200, RZ ;
 Instr 222 @ 0xde0 (3552) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 223 @ 0xdf0 (3568) - PRMT R9, R8, 0x9910, RZ ;
 Instr 224 @ 0xe00 (3584) - ISETP.GE.AND P3, PT, R10, R5, PT ;
 Instr 225 @ 0xe10 (3600) - SEL R8, RZ, 0x1, !P2 ;
 Instr 226 @ 0xe20 (3616) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 227 @ 0xe30 (3632) - IMAD.MOV.U32 R3, RZ, RZ, R9 ;
 Instr 228 @ 0xe40 (3648) - PRMT R7, R7, 0x9910, RZ ;
 Instr 229 @ 0xe50 (3664) - STG.E.U8.SYS [R15.U32+UR4+0x180], R8 ;
 Instr 230 @ 0xe60 (3680) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 231 @ 0xe70 (3696) - IMAD.MOV.U32 R3, RZ, RZ, R7 ;
 Instr 232 @ 0xe80 (3712) - @P3 EXIT ;
Basic block id 16 - num instructions 11
 Instr 233 @ 0xe90 (3728) - IADD3 R8, R0, 0x280, RZ ;
 Instr 234 @ 0xea0 (3744) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 235 @ 0xeb0 (3760) - PRMT R7, R4, 0x9910, RZ ;
 Instr 236 @ 0xec0 (3776) - ISETP.GE.AND P3, PT, R8, R5, PT ;
 Instr 237 @ 0xed0 (3792) - SEL R4, RZ, 0x1, !P2 ;
 Instr 238 @ 0xee0 (3808) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 239 @ 0xef0 (3824) - IMAD.MOV.U32 R3, RZ, RZ, R7 ;
 Instr 240 @ 0xf00 (3840) - STG.E.U8.SYS [R15.U32+UR4+0x200], R4 ;
 Instr 241 @ 0xf10 (3856) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 242 @ 0xf20 (3872) - PRMT R3, R6, 0x9910, RZ ;
 Instr 243 @ 0xf30 (3888) - @P3 EXIT ;
Basic block id 17 - num instructions 9
 Instr 244 @ 0xf40 (3904) - IADD3 R6, R0, 0x300, RZ ;
 Instr 245 @ 0xf50 (3920) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 246 @ 0xf60 (3936) - SEL R4, RZ, 0x1, !P2 ;
 Instr 247 @ 0xf70 (3952) - ISETP.GE.AND P3, PT, R6, R5, PT ;
 Instr 248 @ 0xf80 (3968) - PRMT R2, R2, 0x9910, RZ ;
 Instr 249 @ 0xf90 (3984) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 250 @ 0xfa0 (4000) - STG.E.U8.SYS [R15.U32+UR4+0x280], R4 ;
 Instr 251 @ 0xfb0 (4016) - ISETP.NE.AND P2, PT, R2, RZ, P2 ;
 Instr 252 @ 0xfc0 (4032) - @P3 EXIT ;
Basic block id 18 - num instructions 7
 Instr 253 @ 0xfd0 (4048) - IADD3 R2, R0, 0x380, RZ ;
 Instr 254 @ 0xfe0 (4064) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 255 @ 0xff0 (4080) - SEL R0, RZ, 0x1, !P2 ;
 Instr 256 @ 0x1000 (4096) - ISETP.GE.AND P2, PT, R2, R5, PT ;
 Instr 257 @ 0x1010 (4112) - PLOP3.LUT P0, PT, P0, P1, PT, 0x80, 0x0 ;
 Instr 258 @ 0x1020 (4128) - STG.E.U8.SYS [R15.U32+UR4+0x300], R0 ;
 Instr 259 @ 0x1030 (4144) - @P2 EXIT ;
Basic block id 19 - num instructions 4
 Instr 260 @ 0x1040 (4160) - SEL R0, RZ, 0x1, !P0 ;
 Instr 261 @ 0x1050 (4176) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 262 @ 0x1060 (4192) - STG.E.U8.SYS [R15.U32+UR4+0x380], R0 ;
 Instr 263 @ 0x1070 (4208) - EXIT ;
Basic block id 20 - num instructions 1
 Instr 264 @ 0x1080 (4224) - BRA 0x1080;
inspecting void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) - number basic blocks 21
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - SHF.R.S32.HI R2, RZ, 0x1f, R3 ;
Inject count_instr before - Instr 70 @ 0x460 (1120) - ISETP.GE.AND P3, PT, R0, R5, PT ;
Inject count_instr before - Instr 90 @ 0x5a0 (1440) - IMAD.IADD R18, R3, 0x1, R0 ;
Inject count_instr before - Instr 99 @ 0x630 (1584) - SEL R16, RZ, 0x1, !P2 ;
Inject count_instr before - Instr 102 @ 0x660 (1632) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 114 @ 0x720 (1824) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 126 @ 0x7e0 (2016) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 138 @ 0x8a0 (2208) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 150 @ 0x960 (2400) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 162 @ 0xa20 (2592) - IADD3 R2, R0, 0x380, RZ ;
Inject count_instr before - Instr 176 @ 0xb00 (2816) - BSYNC B0 ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - IADD3 R16, R0, 0x80, RZ ;
Inject count_instr before - Instr 198 @ 0xc60 (3168) - IADD3 R14, R0, 0x100, RZ ;
Inject count_instr before - Instr 209 @ 0xd10 (3344) - IADD3 R12, R0, 0x180, RZ ;
Inject count_instr before - Instr 221 @ 0xdd0 (3536) - IADD3 R10, R0, 0x200, RZ ;
Inject count_instr before - Instr 233 @ 0xe90 (3728) - IADD3 R8, R0, 0x280, RZ ;
Inject count_instr before - Instr 244 @ 0xf40 (3904) - IADD3 R6, R0, 0x300, RZ ;
Inject count_instr before - Instr 253 @ 0xfd0 (4048) - IADD3 R2, R0, 0x380, RZ ;
Inject count_instr before - Instr 260 @ 0x1040 (4160) - SEL R0, RZ, 0x1, !P0 ;
Inject count_instr before - Instr 264 @ 0x1080 (4224) - BRA 0x1080;
kernel 271 - _ZN2at6native29vectorized_elementwise_kernelILi4ENS0_13BinaryFunctorIbbbNS0_15binary_internal10MulFunctorIbEEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 804, total instructions 65662206
kernel 272 - _ZN2at6native29vectorized_elementwise_kernelILi4ENS0_13AUnaryFunctorIN3c104HalfES4_bNS0_51_GLOBAL__N__28ce311f_18_CompareEQKernel_cu_d8008c9616CompareEqFunctorIS4_EEEESt5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 583, total instructions 65662789
Function void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R5, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R5, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x460 ;
Basic block id 1 - num instructions 63
 Instr 7 @ 0x70 (112) - SHF.R.S32.HI R2, RZ, 0x1f, R3 ;
 Instr 8 @ 0x80 (128) - IADD3 R6, P0, R3, c[0x0][0x178], RZ ;
 Instr 9 @ 0x90 (144) - IADD3.X R7, R2, c[0x0][0x17c], RZ, P0, !PT ;
 Instr 10 @ 0xa0 (160) - IADD3 R4, P0, R3, c[0x0][0x170], RZ ;
 Instr 11 @ 0xb0 (176) - IMAD.WIDE.U32 R6, R0, 0x4, R6 ;
 Instr 12 @ 0xc0 (192) - IADD3.X R5, R2, c[0x0][0x174], RZ, P0, !PT ;
 Instr 13 @ 0xd0 (208) - IMAD.WIDE.U32 R4, R0, 0x4, R4 ;
 Instr 14 @ 0xe0 (224) - LDG.E.SYS R10, [R6] ;
 Instr 15 @ 0xf0 (240) - LDG.E.SYS R13, [R6+0x200] ;
 Instr 16 @ 0x100 (256) - LDG.E.SYS R11, [R4] ;
 Instr 17 @ 0x110 (272) - LDG.E.SYS R12, [R4+0x200] ;
 Instr 18 @ 0x120 (288) - PRMT R2, R10, 0x7770, RZ ;
 Instr 19 @ 0x130 (304) - PRMT R9, R10, 0x7772, RZ ;
 Instr 20 @ 0x140 (320) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 21 @ 0x150 (336) - PRMT R8, R10, 0x7771, RZ ;
 Instr 22 @ 0x160 (352) - PRMT R2, R11, 0x7770, RZ ;
 Instr 23 @ 0x170 (368) - ISETP.NE.AND P2, PT, R9, RZ, PT ;
 Instr 24 @ 0x180 (384) - ISETP.NE.AND P0, PT, R2, RZ, P0 ;
 Instr 25 @ 0x190 (400) - PRMT R4, R11, 0x7772, RZ ;
 Instr 26 @ 0x1a0 (416) - PRMT R5, R13, 0x7770, RZ ;
 Instr 27 @ 0x1b0 (432) - ISETP.NE.AND P1, PT, R8, RZ, PT ;
 Instr 28 @ 0x1c0 (448) - PRMT R2, R11, 0x7771, RZ ;
 Instr 29 @ 0x1d0 (464) - PRMT R6, R13, 0x7771, RZ ;
 Instr 30 @ 0x1e0 (480) - PRMT R10, R10, 0x7773, RZ ;
 Instr 31 @ 0x1f0 (496) - ISETP.NE.AND P2, PT, R4, RZ, P2 ;
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P3, PT, R5, RZ, PT ;
 Instr 33 @ 0x210 (528) - ISETP.NE.AND P1, PT, R2, RZ, P1 ;
 Instr 34 @ 0x220 (544) - ISETP.NE.AND P4, PT, R6, RZ, PT ;
 Instr 35 @ 0x230 (560) - PRMT R4, R12.reuse, 0x7770, RZ ;
 Instr 36 @ 0x240 (576) - PRMT R5, R12, 0x7771, RZ ;
 Instr 37 @ 0x250 (592) - ISETP.NE.AND P5, PT, R10, RZ, PT ;
 Instr 38 @ 0x260 (608) - PRMT R2, R11, 0x7773, RZ ;
 Instr 39 @ 0x270 (624) - PRMT R6, R13, 0x7772, RZ ;
 Instr 40 @ 0x280 (640) - ISETP.NE.AND P3, PT, R4, RZ, P3 ;
 Instr 41 @ 0x290 (656) - ISETP.NE.AND P4, PT, R5, RZ, P4 ;
 Instr 42 @ 0x2a0 (672) - ISETP.NE.AND P5, PT, R2, RZ, P5 ;
 Instr 43 @ 0x2b0 (688) - SEL R4, RZ, 0x1, !P0 ;
 Instr 44 @ 0x2c0 (704) - SEL R5, RZ, 0x1, !P1 ;
 Instr 45 @ 0x2d0 (720) - ISETP.NE.AND P6, PT, R6, RZ, PT ;
 Instr 46 @ 0x2e0 (736) - PRMT R9, R12, 0x7772, RZ ;
 Instr 47 @ 0x2f0 (752) - PRMT R2, R13, 0x7773, RZ ;
 Instr 48 @ 0x300 (768) - SEL R6, RZ, 0x1, !P3 ;
 Instr 49 @ 0x310 (784) - SEL R7, RZ, 0x1, !P4 ;
 Instr 50 @ 0x320 (800) - PRMT R8, R5, 0x7604, R4 ;
 Instr 51 @ 0x330 (816) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 52 @ 0x340 (832) - ISETP.NE.AND P6, PT, R9, RZ, P6 ;
 Instr 53 @ 0x350 (848) - PRMT R4, R12, 0x7773, RZ ;
 Instr 54 @ 0x360 (864) - PRMT R9, R7, 0x7604, R6 ;
 Instr 55 @ 0x370 (880) - IADD3 R2, P1, R3, c[0x0][0x168], RZ ;
 Instr 56 @ 0x380 (896) - SEL R5, RZ, 0x1, !P2 ;
 Instr 57 @ 0x390 (912) - SEL R6, RZ, 0x1, !P6 ;
 Instr 58 @ 0x3a0 (928) - ISETP.NE.AND P0, PT, R4, RZ, P0 ;
 Instr 59 @ 0x3b0 (944) - IMAD.X R3, RZ, RZ, c[0x0][0x16c], P1 ;
 Instr 60 @ 0x3c0 (960) - PRMT R7, R5, 0x7054, R8 ;
 Instr 61 @ 0x3d0 (976) - PRMT R6, R6, 0x7054, R9 ;
 Instr 62 @ 0x3e0 (992) - SEL R4, RZ, 0x1, !P5 ;
 Instr 63 @ 0x3f0 (1008) - SEL R5, RZ, 0x1, !P0 ;
 Instr 64 @ 0x400 (1024) - IMAD.WIDE R2, R0, 0x4, R2 ;
 Instr 65 @ 0x410 (1040) - PRMT R7, R4, 0x654, R7 ;
 Instr 66 @ 0x420 (1056) - PRMT R5, R5, 0x654, R6 ;
 Instr 67 @ 0x430 (1072) - STG.E.SYS [R2], R7 ;
 Instr 68 @ 0x440 (1088) - STG.E.SYS [R2+0x200], R5 ;
 Instr 69 @ 0x450 (1104) - EXIT ;
Basic block id 2 - num instructions 20
 Instr 70 @ 0x460 (1120) - ISETP.GE.AND P3, PT, R0, R5, PT ;
 Instr 71 @ 0x470 (1136) - BMOV.32.CLEAR RZ, B0 ;
 Instr 72 @ 0x480 (1152) - BSSY B0, 0xb10 ;
 Instr 73 @ 0x490 (1168) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 74 @ 0x4a0 (1184) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 75 @ 0x4b0 (1200) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 76 @ 0x4c0 (1216) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 77 @ 0x4d0 (1232) - PRMT R4, RZ, 0x7610, R4 ;
 Instr 78 @ 0x4e0 (1248) - PRMT R7, RZ, 0x7610, R7 ;
 Instr 79 @ 0x4f0 (1264) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 80 @ 0x500 (1280) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 81 @ 0x510 (1296) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 82 @ 0x520 (1312) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 83 @ 0x530 (1328) - PRMT R12, RZ, 0x7610, R12 ;
 Instr 84 @ 0x540 (1344) - PRMT R13, RZ, 0x7610, R13 ;
 Instr 85 @ 0x550 (1360) - PRMT R14, RZ, 0x7610, R14 ;
 Instr 86 @ 0x560 (1376) - PRMT R15, RZ, 0x7610, R15 ;
 Instr 87 @ 0x570 (1392) - PRMT R16, RZ, 0x7610, R16 ;
 Instr 88 @ 0x580 (1408) - PRMT R17, RZ, 0x7610, R17 ;
 Instr 89 @ 0x590 (1424) - @P3 BRA 0xb00 ;
Basic block id 3 - num instructions 9
 Instr 90 @ 0x5a0 (1440) - IMAD.IADD R18, R3, 0x1, R0 ;
 Instr 91 @ 0x5b0 (1456) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 92 @ 0x5c0 (1472) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 93 @ 0x5d0 (1488) - LDG.E.U8.SYS R17, [R18.U32+UR4] ;
 Instr 94 @ 0x5e0 (1504) - LDG.E.U8.SYS R16, [R18.U32+UR6] ;
 Instr 95 @ 0x5f0 (1520) - IADD3 R20, R0, 0x80, RZ ;
 Instr 96 @ 0x600 (1536) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 97 @ 0x610 (1552) - ISETP.NE.AND P2, PT, R17, RZ, PT ;
 Instr 98 @ 0x620 (1568) - ISETP.NE.AND P4, PT, R16, RZ, PT ;
Basic block id 4 - num instructions 3
 Instr 99 @ 0x630 (1584) - SEL R16, RZ, 0x1, !P2 ;
 Instr 100 @ 0x640 (1600) - SEL R17, RZ, 0x1, !P4 ;
 Instr 101 @ 0x650 (1616) - @P5 BRA 0xb00 ;
Basic block id 5 - num instructions 12
 Instr 102 @ 0x660 (1632) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 103 @ 0x670 (1648) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 104 @ 0x680 (1664) - LDG.E.U8.SYS R15, [R18.U32+UR4+0x80] ;
 Instr 105 @ 0x690 (1680) - LDG.E.U8.SYS R14, [R18.U32+UR6+0x80] ;
 Instr 106 @ 0x6a0 (1696) - IADD3 R20, R0, 0x100, RZ ;
 Instr 107 @ 0x6b0 (1712) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 108 @ 0x6c0 (1728) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 109 @ 0x6d0 (1744) - ISETP.NE.AND P2, PT, R15, RZ, PT ;
 Instr 110 @ 0x6e0 (1760) - ISETP.NE.AND P4, PT, R14, RZ, PT ;
 Instr 111 @ 0x6f0 (1776) - SEL R14, RZ, 0x1, !P2 ;
 Instr 112 @ 0x700 (1792) - SEL R15, RZ, 0x1, !P4 ;
 Instr 113 @ 0x710 (1808) - @P5 BRA 0xb00 ;
Basic block id 6 - num instructions 12
 Instr 114 @ 0x720 (1824) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 115 @ 0x730 (1840) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 116 @ 0x740 (1856) - LDG.E.U8.SYS R13, [R18.U32+UR4+0x100] ;
 Instr 117 @ 0x750 (1872) - LDG.E.U8.SYS R12, [R18.U32+UR6+0x100] ;
 Instr 118 @ 0x760 (1888) - IADD3 R20, R0, 0x180, RZ ;
 Instr 119 @ 0x770 (1904) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 120 @ 0x780 (1920) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 121 @ 0x790 (1936) - ISETP.NE.AND P2, PT, R13, RZ, PT ;
 Instr 122 @ 0x7a0 (1952) - ISETP.NE.AND P4, PT, R12, RZ, PT ;
 Instr 123 @ 0x7b0 (1968) - SEL R12, RZ, 0x1, !P2 ;
 Instr 124 @ 0x7c0 (1984) - SEL R13, RZ, 0x1, !P4 ;
 Instr 125 @ 0x7d0 (2000) - @P5 BRA 0xb00 ;
Basic block id 7 - num instructions 12
 Instr 126 @ 0x7e0 (2016) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 127 @ 0x7f0 (2032) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 128 @ 0x800 (2048) - LDG.E.U8.SYS R11, [R18.U32+UR4+0x180] ;
 Instr 129 @ 0x810 (2064) - LDG.E.U8.SYS R10, [R18.U32+UR6+0x180] ;
 Instr 130 @ 0x820 (2080) - IADD3 R20, R0, 0x200, RZ ;
 Instr 131 @ 0x830 (2096) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 132 @ 0x840 (2112) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 133 @ 0x850 (2128) - ISETP.NE.AND P2, PT, R11, RZ, PT ;
 Instr 134 @ 0x860 (2144) - ISETP.NE.AND P4, PT, R10, RZ, PT ;
 Instr 135 @ 0x870 (2160) - SEL R10, RZ, 0x1, !P2 ;
 Instr 136 @ 0x880 (2176) - SEL R11, RZ, 0x1, !P4 ;
 Instr 137 @ 0x890 (2192) - @P5 BRA 0xb00 ;
Basic block id 8 - num instructions 12
 Instr 138 @ 0x8a0 (2208) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 139 @ 0x8b0 (2224) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 140 @ 0x8c0 (2240) - LDG.E.U8.SYS R9, [R18.U32+UR4+0x200] ;
 Instr 141 @ 0x8d0 (2256) - LDG.E.U8.SYS R8, [R18.U32+UR6+0x200] ;
 Instr 142 @ 0x8e0 (2272) - IADD3 R20, R0, 0x280, RZ ;
 Instr 143 @ 0x8f0 (2288) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 144 @ 0x900 (2304) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 145 @ 0x910 (2320) - ISETP.NE.AND P2, PT, R9, RZ, PT ;
 Instr 146 @ 0x920 (2336) - ISETP.NE.AND P4, PT, R8, RZ, PT ;
 Instr 147 @ 0x930 (2352) - SEL R8, RZ, 0x1, !P2 ;
 Instr 148 @ 0x940 (2368) - SEL R9, RZ, 0x1, !P4 ;
 Instr 149 @ 0x950 (2384) - @P5 BRA 0xb00 ;
Basic block id 9 - num instructions 12
 Instr 150 @ 0x960 (2400) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 151 @ 0x970 (2416) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 152 @ 0x980 (2432) - LDG.E.U8.SYS R7, [R18.U32+UR4+0x280] ;
 Instr 153 @ 0x990 (2448) - LDG.E.U8.SYS R4, [R18.U32+UR6+0x280] ;
 Instr 154 @ 0x9a0 (2464) - IADD3 R20, R0, 0x300, RZ ;
 Instr 155 @ 0x9b0 (2480) - PLOP3.LUT P1, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 156 @ 0x9c0 (2496) - ISETP.GE.AND P5, PT, R20, R5, PT ;
 Instr 157 @ 0x9d0 (2512) - ISETP.NE.AND P2, PT, R7, RZ, PT ;
 Instr 158 @ 0x9e0 (2528) - ISETP.NE.AND P4, PT, R4, RZ, PT ;
 Instr 159 @ 0x9f0 (2544) - SEL R4, RZ, 0x1, !P2 ;
 Instr 160 @ 0xa00 (2560) - SEL R7, RZ, 0x1, !P4 ;
 Instr 161 @ 0xa10 (2576) - @P5 BRA 0xb00 ;
Basic block id 10 - num instructions 14
 Instr 162 @ 0xa20 (2592) - IADD3 R2, R0, 0x380, RZ ;
 Instr 163 @ 0xa30 (2608) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 164 @ 0xa40 (2624) - ULDC.64 UR6, c[0x0][0x178] ;
 Instr 165 @ 0xa50 (2640) - ISETP.GE.AND P1, PT, R2, R5, PT ;
 Instr 166 @ 0xa60 (2656) - LDG.E.U8.SYS R20, [R18.U32+UR4+0x300] ;
 Instr 167 @ 0xa70 (2672) - LDG.E.U8.SYS R2, [R18.U32+UR6+0x300] ;
 Instr 168 @ 0xa80 (2688) - @!P1 LDG.E.U8.SYS R6, [R18.U32+UR4+0x380] ;
 Instr 169 @ 0xa90 (2704) - @!P1 LDG.E.U8.SYS R19, [R18.U32+UR6+0x380] ;
 Instr 170 @ 0xaa0 (2720) - ISETP.NE.AND P2, PT, R20, RZ, PT ;
 Instr 171 @ 0xab0 (2736) - ISETP.NE.AND P4, PT, R2, RZ, PT ;
 Instr 172 @ 0xac0 (2752) - SEL R2, RZ, 0x1, !P2 ;
 Instr 173 @ 0xad0 (2768) - @!P1 ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 174 @ 0xae0 (2784) - SEL R6, RZ, 0x1, !P4 ;
 Instr 175 @ 0xaf0 (2800) - ISETP.NE.AND P1, PT, R19, RZ, !P1 ;
Basic block id 11 - num instructions 11
 Instr 176 @ 0xb00 (2816) - BSYNC B0 ;
 Instr 177 @ 0xb10 (2832) - PRMT R17, R17, 0x9910, RZ ;
 Instr 178 @ 0xb20 (2848) - PRMT R18, R16, 0x9910, RZ ;
 Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R16, RZ, RZ, R17 ;
 Instr 180 @ 0xb40 (2880) - PRMT R17, R15, 0x9910, RZ ;
 Instr 181 @ 0xb50 (2896) - IMAD.MOV.U32 R15, RZ, RZ, R18 ;
 Instr 182 @ 0xb60 (2912) - PRMT R18, R14, 0x9910, RZ ;
 Instr 183 @ 0xb70 (2928) - ISETP.NE.AND P2, PT, R16, RZ, PT ;
 Instr 184 @ 0xb80 (2944) - IMAD.MOV.U32 R14, RZ, RZ, R17 ;
 Instr 185 @ 0xb90 (2960) - ISETP.NE.AND P2, PT, R15, RZ, P2 ;
 Instr 186 @ 0xba0 (2976) - @P3 EXIT ;
Basic block id 12 - num instructions 11
 Instr 187 @ 0xbb0 (2992) - IADD3 R16, R0, 0x80, RZ ;
 Instr 188 @ 0xbc0 (3008) - IMAD.IADD R15, R3, 0x1, R0 ;
 Instr 189 @ 0xbd0 (3024) - SEL R3, RZ, 0x1, !P2 ;
 Instr 190 @ 0xbe0 (3040) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 191 @ 0xbf0 (3056) - ISETP.GE.AND P3, PT, R16, R5, PT ;
 Instr 192 @ 0xc00 (3072) - ISETP.NE.AND P2, PT, R14, RZ, PT ;
 Instr 193 @ 0xc10 (3088) - IMAD.MOV.U32 R14, RZ, RZ, R18 ;
 Instr 194 @ 0xc20 (3104) - PRMT R13, R13, 0x9910, RZ ;
 Instr 195 @ 0xc30 (3120) - STG.E.U8.SYS [R15.U32+UR4], R3 ;
 Instr 196 @ 0xc40 (3136) - ISETP.NE.AND P2, PT, R14, RZ, P2 ;
 Instr 197 @ 0xc50 (3152) - @P3 EXIT ;
Basic block id 13 - num instructions 11
 Instr 198 @ 0xc60 (3168) - IADD3 R14, R0, 0x100, RZ ;
 Instr 199 @ 0xc70 (3184) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 200 @ 0xc80 (3200) - PRMT R3, R12, 0x9910, RZ ;
 Instr 201 @ 0xc90 (3216) - ISETP.GE.AND P3, PT, R14, R5, PT ;
 Instr 202 @ 0xca0 (3232) - SEL R12, RZ, 0x1, !P2 ;
 Instr 203 @ 0xcb0 (3248) - ISETP.NE.AND P2, PT, R13, RZ, PT ;
 Instr 204 @ 0xcc0 (3264) - PRMT R11, R11, 0x9910, RZ ;
 Instr 205 @ 0xcd0 (3280) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 206 @ 0xce0 (3296) - STG.E.U8.SYS [R15.U32+UR4+0x80], R12 ;
 Instr 207 @ 0xcf0 (3312) - IMAD.MOV.U32 R3, RZ, RZ, R11 ;
 Instr 208 @ 0xd00 (3328) - @P3 EXIT ;
Basic block id 14 - num instructions 12
 Instr 209 @ 0xd10 (3344) - IADD3 R12, R0, 0x180, RZ ;
 Instr 210 @ 0xd20 (3360) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 211 @ 0xd30 (3376) - PRMT R11, R10, 0x9910, RZ ;
 Instr 212 @ 0xd40 (3392) - ISETP.GE.AND P3, PT, R12, R5, PT ;
 Instr 213 @ 0xd50 (3408) - SEL R10, RZ, 0x1, !P2 ;
 Instr 214 @ 0xd60 (3424) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 215 @ 0xd70 (3440) - IMAD.MOV.U32 R3, RZ, RZ, R11 ;
 Instr 216 @ 0xd80 (3456) - PRMT R9, R9, 0x9910, RZ ;
 Instr 217 @ 0xd90 (3472) - STG.E.U8.SYS [R15.U32+UR4+0x100], R10 ;
 Instr 218 @ 0xda0 (3488) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 219 @ 0xdb0 (3504) - IMAD.MOV.U32 R3, RZ, RZ, R9 ;
 Instr 220 @ 0xdc0 (3520) - @P3 EXIT ;
Basic block id 15 - num instructions 12
 Instr 221 @ 0xdd0 (3536) - IADD3 R10, R0, 0x200, RZ ;
 Instr 222 @ 0xde0 (3552) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 223 @ 0xdf0 (3568) - PRMT R9, R8, 0x9910, RZ ;
 Instr 224 @ 0xe00 (3584) - ISETP.GE.AND P3, PT, R10, R5, PT ;
 Instr 225 @ 0xe10 (3600) - SEL R8, RZ, 0x1, !P2 ;
 Instr 226 @ 0xe20 (3616) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 227 @ 0xe30 (3632) - IMAD.MOV.U32 R3, RZ, RZ, R9 ;
 Instr 228 @ 0xe40 (3648) - PRMT R7, R7, 0x9910, RZ ;
 Instr 229 @ 0xe50 (3664) - STG.E.U8.SYS [R15.U32+UR4+0x180], R8 ;
 Instr 230 @ 0xe60 (3680) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 231 @ 0xe70 (3696) - IMAD.MOV.U32 R3, RZ, RZ, R7 ;
 Instr 232 @ 0xe80 (3712) - @P3 EXIT ;
Basic block id 16 - num instructions 11
 Instr 233 @ 0xe90 (3728) - IADD3 R8, R0, 0x280, RZ ;
 Instr 234 @ 0xea0 (3744) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 235 @ 0xeb0 (3760) - PRMT R7, R4, 0x9910, RZ ;
 Instr 236 @ 0xec0 (3776) - ISETP.GE.AND P3, PT, R8, R5, PT ;
 Instr 237 @ 0xed0 (3792) - SEL R4, RZ, 0x1, !P2 ;
 Instr 238 @ 0xee0 (3808) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 239 @ 0xef0 (3824) - IMAD.MOV.U32 R3, RZ, RZ, R7 ;
 Instr 240 @ 0xf00 (3840) - STG.E.U8.SYS [R15.U32+UR4+0x200], R4 ;
 Instr 241 @ 0xf10 (3856) - ISETP.NE.AND P2, PT, R3, RZ, P2 ;
 Instr 242 @ 0xf20 (3872) - PRMT R3, R6, 0x9910, RZ ;
 Instr 243 @ 0xf30 (3888) - @P3 EXIT ;
Basic block id 17 - num instructions 9
 Instr 244 @ 0xf40 (3904) - IADD3 R6, R0, 0x300, RZ ;
 Instr 245 @ 0xf50 (3920) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 246 @ 0xf60 (3936) - SEL R4, RZ, 0x1, !P2 ;
 Instr 247 @ 0xf70 (3952) - ISETP.GE.AND P3, PT, R6, R5, PT ;
 Instr 248 @ 0xf80 (3968) - PRMT R2, R2, 0x9910, RZ ;
 Instr 249 @ 0xf90 (3984) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 250 @ 0xfa0 (4000) - STG.E.U8.SYS [R15.U32+UR4+0x280], R4 ;
 Instr 251 @ 0xfb0 (4016) - ISETP.NE.AND P2, PT, R2, RZ, P2 ;
 Instr 252 @ 0xfc0 (4032) - @P3 EXIT ;
Basic block id 18 - num instructions 7
 Instr 253 @ 0xfd0 (4048) - IADD3 R2, R0, 0x380, RZ ;
 Instr 254 @ 0xfe0 (4064) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 255 @ 0xff0 (4080) - SEL R0, RZ, 0x1, !P2 ;
 Instr 256 @ 0x1000 (4096) - ISETP.GE.AND P2, PT, R2, R5, PT ;
 Instr 257 @ 0x1010 (4112) - PLOP3.LUT P0, PT, P0, P1, PT, 0x80, 0x0 ;
 Instr 258 @ 0x1020 (4128) - STG.E.U8.SYS [R15.U32+UR4+0x300], R0 ;
 Instr 259 @ 0x1030 (4144) - @P2 EXIT ;
Basic block id 19 - num instructions 4
 Instr 260 @ 0x1040 (4160) - SEL R0, RZ, 0x1, !P0 ;
 Instr 261 @ 0x1050 (4176) - ULDC.64 UR4, c[0x0][0x168] ;
 Instr 262 @ 0x1060 (4192) - STG.E.U8.SYS [R15.U32+UR4+0x380], R0 ;
 Instr 263 @ 0x1070 (4208) - EXIT ;
Basic block id 20 - num instructions 1
 Instr 264 @ 0x1080 (4224) - BRA 0x1080;
inspecting void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) - number basic blocks 21
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - SHF.R.S32.HI R2, RZ, 0x1f, R3 ;
Inject count_instr before - Instr 70 @ 0x460 (1120) - ISETP.GE.AND P3, PT, R0, R5, PT ;
Inject count_instr before - Instr 90 @ 0x5a0 (1440) - IMAD.IADD R18, R3, 0x1, R0 ;
Inject count_instr before - Instr 99 @ 0x630 (1584) - SEL R16, RZ, 0x1, !P2 ;
Inject count_instr before - Instr 102 @ 0x660 (1632) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 114 @ 0x720 (1824) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 126 @ 0x7e0 (2016) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 138 @ 0x8a0 (2208) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 150 @ 0x960 (2400) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 162 @ 0xa20 (2592) - IADD3 R2, R0, 0x380, RZ ;
Inject count_instr before - Instr 176 @ 0xb00 (2816) - BSYNC B0 ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - IADD3 R16, R0, 0x80, RZ ;
Inject count_instr before - Instr 198 @ 0xc60 (3168) - IADD3 R14, R0, 0x100, RZ ;
Inject count_instr before - Instr 209 @ 0xd10 (3344) - IADD3 R12, R0, 0x180, RZ ;
Inject count_instr before - Instr 221 @ 0xdd0 (3536) - IADD3 R10, R0, 0x200, RZ ;
Inject count_instr before - Instr 233 @ 0xe90 (3728) - IADD3 R8, R0, 0x280, RZ ;
Inject count_instr before - Instr 244 @ 0xf40 (3904) - IADD3 R6, R0, 0x300, RZ ;
Inject count_instr before - Instr 253 @ 0xfd0 (4048) - IADD3 R2, R0, 0x380, RZ ;
Inject count_instr before - Instr 260 @ 0x1040 (4160) - SEL R0, RZ, 0x1, !P0 ;
Inject count_instr before - Instr 264 @ 0x1080 (4224) - BRA 0x1080;
kernel 273 - _ZN2at6native29vectorized_elementwise_kernelILi4ENS0_13BinaryFunctorIbbbNS0_17BitwiseAndFunctorIbEEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 804, total instructions 65663593
Function void at_cuda_detail::cub::DeviceReduceSingleTileKernel<at_cuda_detail::cub::DeviceReducePolicy<bool, int, int, at_cuda_detail::cub::Sum>::Policy600, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, at_cuda_detail::cub::Sum, int>(at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, at_cuda_detail::cub::Sum, int)
Basic block id 0 - num instructions 5
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R0, SR_TID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x178], PT ;
 Instr 3 @ 0x30 (48) - IMAD.MOV.U32 R5, RZ, RZ, R0 ;
 Instr 4 @ 0x40 (64) - @!P0 BRA 0x3110 ;
Basic block id 1 - num instructions 7
 Instr 5 @ 0x50 (80) - IMAD.MOV.U32 R36, RZ, RZ, c[0x0][0x178] ;
 Instr 6 @ 0x60 (96) - IADD3 R2, P1, R5.reuse, c[0x0][0x168], RZ ;
 Instr 7 @ 0x70 (112) - BMOV.32.CLEAR RZ, B0 ;
 Instr 8 @ 0x80 (128) - BSSY B0, 0x30c0 ;
 Instr 9 @ 0x90 (144) - ISETP.GE.AND P0, PT, R36, 0x2000, PT ;
 Instr 10 @ 0xa0 (160) - LEA.HI.X.SX32 R3, R5, c[0x0][0x16c], 0x1, P1 ;
 Instr 11 @ 0xb0 (176) - @!P0 BRA 0x1f60 ;
Basic block id 2 - num instructions 131
 Instr 12 @ 0xc0 (192) - LDG.E.U8.SYS R35, [R2] ;
 Instr 13 @ 0xd0 (208) - LDG.E.U8.SYS R9, [R2+0x100] ;
 Instr 14 @ 0xe0 (224) - LDG.E.U8.SYS R10, [R2+0x200] ;
 Instr 15 @ 0xf0 (240) - LDG.E.U8.SYS R11, [R2+0x300] ;
 Instr 16 @ 0x100 (256) - LDG.E.U8.SYS R12, [R2+0x400] ;
 Instr 17 @ 0x110 (272) - LDG.E.U8.SYS R13, [R2+0x500] ;
 Instr 18 @ 0x120 (288) - LDG.E.U8.SYS R14, [R2+0x600] ;
 Instr 19 @ 0x130 (304) - LDG.E.U8.SYS R15, [R2+0x700] ;
 Instr 20 @ 0x140 (320) - LDG.E.U8.SYS R16, [R2+0x800] ;
 Instr 21 @ 0x150 (336) - LDG.E.U8.SYS R17, [R2+0x900] ;
 Instr 22 @ 0x160 (352) - LDG.E.U8.SYS R18, [R2+0xa00] ;
 Instr 23 @ 0x170 (368) - LDG.E.U8.SYS R19, [R2+0xb00] ;
 Instr 24 @ 0x180 (384) - LDG.E.U8.SYS R20, [R2+0xc00] ;
 Instr 25 @ 0x190 (400) - LDG.E.U8.SYS R21, [R2+0xd00] ;
 Instr 26 @ 0x1a0 (416) - LDG.E.U8.SYS R22, [R2+0xe00] ;
 Instr 27 @ 0x1b0 (432) - LDG.E.U8.SYS R23, [R2+0xf00] ;
 Instr 28 @ 0x1c0 (448) - LDG.E.U8.SYS R24, [R2+0x1000] ;
 Instr 29 @ 0x1d0 (464) - LDG.E.U8.SYS R25, [R2+0x1100] ;
 Instr 30 @ 0x1e0 (480) - LDG.E.U8.SYS R26, [R2+0x1200] ;
 Instr 31 @ 0x1f0 (496) - LDG.E.U8.SYS R27, [R2+0x1300] ;
 Instr 32 @ 0x200 (512) - LDG.E.U8.SYS R28, [R2+0x1400] ;
 Instr 33 @ 0x210 (528) - LDG.E.U8.SYS R29, [R2+0x1500] ;
 Instr 34 @ 0x220 (544) - LDG.E.U8.SYS R30, [R2+0x1600] ;
 Instr 35 @ 0x230 (560) - LDG.E.U8.SYS R31, [R2+0x1700] ;
 Instr 36 @ 0x240 (576) - LDG.E.U8.SYS R32, [R2+0x1800] ;
 Instr 37 @ 0x250 (592) - LDG.E.U8.SYS R33, [R2+0x1900] ;
 Instr 38 @ 0x260 (608) - LDG.E.U8.SYS R34, [R2+0x1a00] ;
 Instr 39 @ 0x270 (624) - LDG.E.U8.SYS R8, [R2+0x1b00] ;
 Instr 40 @ 0x280 (640) - LDG.E.U8.SYS R7, [R2+0x1c00] ;
 Instr 41 @ 0x290 (656) - LDG.E.U8.SYS R6, [R2+0x1d00] ;
 Instr 42 @ 0x2a0 (672) - LDG.E.U8.SYS R5, [R2+0x1e00] ;
 Instr 43 @ 0x2b0 (688) - LDG.E.U8.SYS R4, [R2+0x1f00] ;
 Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R35, RZ, PT ;
 Instr 45 @ 0x2d0 (720) - IMAD.MOV.U32 R35, RZ, RZ, 0x2 ;
 Instr 46 @ 0x2e0 (736) - ISETP.NE.AND P1, PT, R9, RZ, PT ;
 Instr 47 @ 0x2f0 (752) - SEL R9, RZ, 0x1, !P0 ;
 Instr 48 @ 0x300 (768) - ISETP.NE.AND P2, PT, R10, RZ, PT ;
 Instr 49 @ 0x310 (784) - @!P0 IMAD.MOV R35, RZ, RZ, 0x1 ;
 Instr 50 @ 0x320 (800) - ISETP.NE.AND P0, PT, R11, RZ, PT ;
 Instr 51 @ 0x330 (816) - @!P1 IMAD.MOV R35, RZ, RZ, R9 ;
 Instr 52 @ 0x340 (832) - ISETP.NE.AND P1, PT, R12, RZ, PT ;
 Instr 53 @ 0x350 (848) - IADD3 R9, R35, 0x1, RZ ;
 Instr 54 @ 0x360 (864) - @!P2 IMAD.MOV R9, RZ, RZ, R35 ;
 Instr 55 @ 0x370 (880) - IADD3 R10, R9, 0x1, RZ ;
 Instr 56 @ 0x380 (896) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 57 @ 0x390 (912) - ISETP.NE.AND P0, PT, R13, RZ, PT ;
 Instr 58 @ 0x3a0 (928) - IADD3 R9, R10, 0x1, RZ ;
 Instr 59 @ 0x3b0 (944) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 60 @ 0x3c0 (960) - ISETP.NE.AND P1, PT, R14, RZ, PT ;
 Instr 61 @ 0x3d0 (976) - IADD3 R10, R9, 0x1, RZ ;
 Instr 62 @ 0x3e0 (992) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 63 @ 0x3f0 (1008) - ISETP.NE.AND P0, PT, R15, RZ, PT ;
 Instr 64 @ 0x400 (1024) - IADD3 R9, R10, 0x1, RZ ;
 Instr 65 @ 0x410 (1040) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 66 @ 0x420 (1056) - ISETP.NE.AND P1, PT, R16, RZ, PT ;
 Instr 67 @ 0x430 (1072) - IADD3 R10, R9, 0x1, RZ ;
 Instr 68 @ 0x440 (1088) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 69 @ 0x450 (1104) - ISETP.NE.AND P0, PT, R17, RZ, PT ;
 Instr 70 @ 0x460 (1120) - IADD3 R9, R10, 0x1, RZ ;
 Instr 71 @ 0x470 (1136) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 72 @ 0x480 (1152) - ISETP.NE.AND P1, PT, R18, RZ, PT ;
 Instr 73 @ 0x490 (1168) - IADD3 R10, R9, 0x1, RZ ;
 Instr 74 @ 0x4a0 (1184) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 75 @ 0x4b0 (1200) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 76 @ 0x4c0 (1216) - IADD3 R9, R10, 0x1, RZ ;
 Instr 77 @ 0x4d0 (1232) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 78 @ 0x4e0 (1248) - ISETP.NE.AND P1, PT, R20, RZ, PT ;
 Instr 79 @ 0x4f0 (1264) - IADD3 R10, R9, 0x1, RZ ;
 Instr 80 @ 0x500 (1280) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 81 @ 0x510 (1296) - ISETP.NE.AND P0, PT, R21, RZ, PT ;
 Instr 82 @ 0x520 (1312) - IADD3 R9, R10, 0x1, RZ ;
 Instr 83 @ 0x530 (1328) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 84 @ 0x540 (1344) - ISETP.NE.AND P1, PT, R22, RZ, PT ;
 Instr 85 @ 0x550 (1360) - IADD3 R10, R9, 0x1, RZ ;
 Instr 86 @ 0x560 (1376) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 87 @ 0x570 (1392) - ISETP.NE.AND P0, PT, R23, RZ, PT ;
 Instr 88 @ 0x580 (1408) - IADD3 R9, R10, 0x1, RZ ;
 Instr 89 @ 0x590 (1424) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 90 @ 0x5a0 (1440) - ISETP.NE.AND P1, PT, R24, RZ, PT ;
 Instr 91 @ 0x5b0 (1456) - IADD3 R10, R9, 0x1, RZ ;
 Instr 92 @ 0x5c0 (1472) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 93 @ 0x5d0 (1488) - ISETP.NE.AND P0, PT, R25, RZ, PT ;
 Instr 94 @ 0x5e0 (1504) - IADD3 R9, R10, 0x1, RZ ;
 Instr 95 @ 0x5f0 (1520) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 96 @ 0x600 (1536) - ISETP.NE.AND P1, PT, R26, RZ, PT ;
 Instr 97 @ 0x610 (1552) - IADD3 R10, R9, 0x1, RZ ;
 Instr 98 @ 0x620 (1568) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 99 @ 0x630 (1584) - ISETP.NE.AND P0, PT, R27, RZ, PT ;
 Instr 100 @ 0x640 (1600) - IADD3 R9, R10, 0x1, RZ ;
 Instr 101 @ 0x650 (1616) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 102 @ 0x660 (1632) - ISETP.NE.AND P1, PT, R28, RZ, PT ;
 Instr 103 @ 0x670 (1648) - IADD3 R10, R9, 0x1, RZ ;
 Instr 104 @ 0x680 (1664) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 105 @ 0x690 (1680) - ISETP.NE.AND P0, PT, R29, RZ, PT ;
 Instr 106 @ 0x6a0 (1696) - IADD3 R9, R10, 0x1, RZ ;
 Instr 107 @ 0x6b0 (1712) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 108 @ 0x6c0 (1728) - ISETP.NE.AND P1, PT, R30, RZ, PT ;
 Instr 109 @ 0x6d0 (1744) - IADD3 R10, R9, 0x1, RZ ;
 Instr 110 @ 0x6e0 (1760) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 111 @ 0x6f0 (1776) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 112 @ 0x700 (1792) - IADD3 R9, R10, 0x1, RZ ;
 Instr 113 @ 0x710 (1808) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 114 @ 0x720 (1824) - ISETP.NE.AND P1, PT, R32, RZ, PT ;
 Instr 115 @ 0x730 (1840) - IADD3 R10, R9, 0x1, RZ ;
 Instr 116 @ 0x740 (1856) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 117 @ 0x750 (1872) - ISETP.NE.AND P0, PT, R33, RZ, PT ;
 Instr 118 @ 0x760 (1888) - IADD3 R9, R10, 0x1, RZ ;
 Instr 119 @ 0x770 (1904) - @!P1 IMAD.MOV R9, RZ, RZ, R10 ;
 Instr 120 @ 0x780 (1920) - ISETP.NE.AND P1, PT, R34, RZ, PT ;
 Instr 121 @ 0x790 (1936) - IADD3 R10, R9, 0x1, RZ ;
 Instr 122 @ 0x7a0 (1952) - @!P0 IMAD.MOV R10, RZ, RZ, R9 ;
 Instr 123 @ 0x7b0 (1968) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 124 @ 0x7c0 (1984) - IADD3 R8, R10, 0x1, RZ ;
 Instr 125 @ 0x7d0 (2000) - @!P1 IMAD.MOV R8, RZ, RZ, R10 ;
 Instr 126 @ 0x7e0 (2016) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
 Instr 127 @ 0x7f0 (2032) - IADD3 R7, R8, 0x1, RZ ;
 Instr 128 @ 0x800 (2048) - @!P0 IMAD.MOV R7, RZ, RZ, R8 ;
 Instr 129 @ 0x810 (2064) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 130 @ 0x820 (2080) - IADD3 R6, R7, 0x1, RZ ;
 Instr 131 @ 0x830 (2096) - @!P1 IMAD.MOV R6, RZ, RZ, R7 ;
 Instr 132 @ 0x840 (2112) - ISETP.NE.AND P1, PT, R5, RZ, PT ;
 Instr 133 @ 0x850 (2128) - IMAD.MOV.U32 R7, RZ, RZ, 0x2000 ;
 Instr 134 @ 0x860 (2144) - IADD3 R5, R6, 0x1, RZ ;
 Instr 135 @ 0x870 (2160) - @!P0 IMAD.MOV R5, RZ, RZ, R6 ;
 Instr 136 @ 0x880 (2176) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 137 @ 0x890 (2192) - IADD3 R6, R5, 0x1, RZ ;
 Instr 138 @ 0x8a0 (2208) - @!P1 IMAD.MOV R6, RZ, RZ, R5 ;
 Instr 139 @ 0x8b0 (2224) - ISETP.GE.AND P1, PT, R36, 0x4000, PT ;
 Instr 140 @ 0x8c0 (2240) - IADD3 R4, R6, 0x1, RZ ;
 Instr 141 @ 0x8d0 (2256) - @!P0 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 142 @ 0x8e0 (2272) - @!P1 BRA 0x1190 ;
Basic block id 3 - num instructions 3
 Instr 143 @ 0x8f0 (2288) - IADD3 R2, P0, R2, 0x3f00, RZ ;
 Instr 144 @ 0x900 (2304) - IMAD.MOV.U32 R5, RZ, RZ, 0x2000 ;
 Instr 145 @ 0x910 (2320) - IMAD.X R3, RZ, RZ, R3, P0 ;
Basic block id 4 - num instructions 134
 Instr 146 @ 0x920 (2336) - LDG.E.U8.SYS R37, [R2+-0x1f00] ;
 Instr 147 @ 0x930 (2352) - LDG.E.U8.SYS R12, [R2+-0x1e00] ;
 Instr 148 @ 0x940 (2368) - LDG.E.U8.SYS R13, [R2+-0x1d00] ;
 Instr 149 @ 0x950 (2384) - LDG.E.U8.SYS R14, [R2+-0x1c00] ;
 Instr 150 @ 0x960 (2400) - LDG.E.U8.SYS R15, [R2+-0x1b00] ;
 Instr 151 @ 0x970 (2416) - LDG.E.U8.SYS R16, [R2+-0x1a00] ;
 Instr 152 @ 0x980 (2432) - LDG.E.U8.SYS R17, [R2+-0x1900] ;
 Instr 153 @ 0x990 (2448) - LDG.E.U8.SYS R18, [R2+-0x1800] ;
 Instr 154 @ 0x9a0 (2464) - LDG.E.U8.SYS R19, [R2+-0x1700] ;
 Instr 155 @ 0x9b0 (2480) - LDG.E.U8.SYS R20, [R2+-0x1600] ;
 Instr 156 @ 0x9c0 (2496) - LDG.E.U8.SYS R21, [R2+-0x1500] ;
 Instr 157 @ 0x9d0 (2512) - LDG.E.U8.SYS R22, [R2+-0x1400] ;
 Instr 158 @ 0x9e0 (2528) - LDG.E.U8.SYS R23, [R2+-0x1300] ;
 Instr 159 @ 0x9f0 (2544) - LDG.E.U8.SYS R24, [R2+-0x1200] ;
 Instr 160 @ 0xa00 (2560) - LDG.E.U8.SYS R25, [R2+-0x1100] ;
 Instr 161 @ 0xa10 (2576) - LDG.E.U8.SYS R26, [R2+-0x1000] ;
 Instr 162 @ 0xa20 (2592) - LDG.E.U8.SYS R27, [R2+-0xf00] ;
 Instr 163 @ 0xa30 (2608) - LDG.E.U8.SYS R28, [R2+-0xe00] ;
 Instr 164 @ 0xa40 (2624) - LDG.E.U8.SYS R29, [R2+-0xd00] ;
 Instr 165 @ 0xa50 (2640) - LDG.E.U8.SYS R30, [R2+-0xc00] ;
 Instr 166 @ 0xa60 (2656) - LDG.E.U8.SYS R31, [R2+-0xb00] ;
 Instr 167 @ 0xa70 (2672) - LDG.E.U8.SYS R32, [R2+-0xa00] ;
 Instr 168 @ 0xa80 (2688) - LDG.E.U8.SYS R33, [R2+-0x900] ;
 Instr 169 @ 0xa90 (2704) - LDG.E.U8.SYS R34, [R2+-0x800] ;
 Instr 170 @ 0xaa0 (2720) - LDG.E.U8.SYS R35, [R2+-0x700] ;
 Instr 171 @ 0xab0 (2736) - LDG.E.U8.SYS R36, [R2+-0x600] ;
 Instr 172 @ 0xac0 (2752) - LDG.E.U8.SYS R11, [R2+-0x500] ;
 Instr 173 @ 0xad0 (2768) - LDG.E.U8.SYS R10, [R2+-0x400] ;
 Instr 174 @ 0xae0 (2784) - LDG.E.U8.SYS R9, [R2+-0x300] ;
 Instr 175 @ 0xaf0 (2800) - LDG.E.U8.SYS R8, [R2+-0x200] ;
 Instr 176 @ 0xb00 (2816) - LDG.E.U8.SYS R7, [R2+-0x100] ;
 Instr 177 @ 0xb10 (2832) - LDG.E.U8.SYS R6, [R2] ;
 Instr 178 @ 0xb20 (2848) - IADD3 R2, P2, R2, 0x2000, RZ ;
 Instr 179 @ 0xb30 (2864) - IMAD.X R3, RZ, RZ, R3, P2 ;
 Instr 180 @ 0xb40 (2880) - ISETP.NE.AND P0, PT, R37, RZ, PT ;
 Instr 181 @ 0xb50 (2896) - ISETP.NE.AND P1, PT, R12, RZ, PT ;
 Instr 182 @ 0xb60 (2912) - IADD3 R12, R4, 0x1, RZ ;
 Instr 183 @ 0xb70 (2928) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 184 @ 0xb80 (2944) - ISETP.NE.AND P0, PT, R13, RZ, PT ;
 Instr 185 @ 0xb90 (2960) - IADD3 R4, R12, 0x1, RZ ;
 Instr 186 @ 0xba0 (2976) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 187 @ 0xbb0 (2992) - ISETP.NE.AND P1, PT, R14, RZ, PT ;
 Instr 188 @ 0xbc0 (3008) - IADD3 R12, R4, 0x1, RZ ;
 Instr 189 @ 0xbd0 (3024) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 190 @ 0xbe0 (3040) - ISETP.NE.AND P0, PT, R15, RZ, PT ;
 Instr 191 @ 0xbf0 (3056) - IADD3 R4, R12, 0x1, RZ ;
 Instr 192 @ 0xc00 (3072) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 193 @ 0xc10 (3088) - ISETP.NE.AND P1, PT, R16, RZ, PT ;
 Instr 194 @ 0xc20 (3104) - IADD3 R12, R4, 0x1, RZ ;
 Instr 195 @ 0xc30 (3120) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 196 @ 0xc40 (3136) - ISETP.NE.AND P0, PT, R17, RZ, PT ;
 Instr 197 @ 0xc50 (3152) - IADD3 R4, R12, 0x1, RZ ;
 Instr 198 @ 0xc60 (3168) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 199 @ 0xc70 (3184) - ISETP.NE.AND P1, PT, R18, RZ, PT ;
 Instr 200 @ 0xc80 (3200) - IADD3 R12, R4, 0x1, RZ ;
 Instr 201 @ 0xc90 (3216) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 202 @ 0xca0 (3232) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 203 @ 0xcb0 (3248) - IADD3 R4, R12, 0x1, RZ ;
 Instr 204 @ 0xcc0 (3264) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 205 @ 0xcd0 (3280) - ISETP.NE.AND P1, PT, R20, RZ, PT ;
 Instr 206 @ 0xce0 (3296) - IADD3 R12, R4, 0x1, RZ ;
 Instr 207 @ 0xcf0 (3312) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 208 @ 0xd00 (3328) - ISETP.NE.AND P0, PT, R21, RZ, PT ;
 Instr 209 @ 0xd10 (3344) - IADD3 R4, R12, 0x1, RZ ;
 Instr 210 @ 0xd20 (3360) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 211 @ 0xd30 (3376) - ISETP.NE.AND P1, PT, R22, RZ, PT ;
 Instr 212 @ 0xd40 (3392) - IADD3 R12, R4, 0x1, RZ ;
 Instr 213 @ 0xd50 (3408) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 214 @ 0xd60 (3424) - ISETP.NE.AND P0, PT, R23, RZ, PT ;
 Instr 215 @ 0xd70 (3440) - IADD3 R4, R12, 0x1, RZ ;
 Instr 216 @ 0xd80 (3456) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 217 @ 0xd90 (3472) - ISETP.NE.AND P1, PT, R24, RZ, PT ;
 Instr 218 @ 0xda0 (3488) - IADD3 R12, R4, 0x1, RZ ;
 Instr 219 @ 0xdb0 (3504) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 220 @ 0xdc0 (3520) - ISETP.NE.AND P0, PT, R25, RZ, PT ;
 Instr 221 @ 0xdd0 (3536) - IADD3 R4, R12, 0x1, RZ ;
 Instr 222 @ 0xde0 (3552) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 223 @ 0xdf0 (3568) - ISETP.NE.AND P1, PT, R26, RZ, PT ;
 Instr 224 @ 0xe00 (3584) - IADD3 R12, R4, 0x1, RZ ;
 Instr 225 @ 0xe10 (3600) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 226 @ 0xe20 (3616) - ISETP.NE.AND P0, PT, R27, RZ, PT ;
 Instr 227 @ 0xe30 (3632) - IADD3 R4, R12, 0x1, RZ ;
 Instr 228 @ 0xe40 (3648) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 229 @ 0xe50 (3664) - ISETP.NE.AND P1, PT, R28, RZ, PT ;
 Instr 230 @ 0xe60 (3680) - IADD3 R12, R4, 0x1, RZ ;
 Instr 231 @ 0xe70 (3696) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 232 @ 0xe80 (3712) - ISETP.NE.AND P0, PT, R29, RZ, PT ;
 Instr 233 @ 0xe90 (3728) - IADD3 R4, R12, 0x1, RZ ;
 Instr 234 @ 0xea0 (3744) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 235 @ 0xeb0 (3760) - ISETP.NE.AND P1, PT, R30, RZ, PT ;
 Instr 236 @ 0xec0 (3776) - IADD3 R12, R4, 0x1, RZ ;
 Instr 237 @ 0xed0 (3792) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 238 @ 0xee0 (3808) - ISETP.NE.AND P0, PT, R31, RZ, PT ;
 Instr 239 @ 0xef0 (3824) - IADD3 R4, R12, 0x1, RZ ;
 Instr 240 @ 0xf00 (3840) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 241 @ 0xf10 (3856) - ISETP.NE.AND P1, PT, R32, RZ, PT ;
 Instr 242 @ 0xf20 (3872) - IADD3 R12, R4, 0x1, RZ ;
 Instr 243 @ 0xf30 (3888) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 244 @ 0xf40 (3904) - ISETP.NE.AND P0, PT, R33, RZ, PT ;
 Instr 245 @ 0xf50 (3920) - IADD3 R4, R12, 0x1, RZ ;
 Instr 246 @ 0xf60 (3936) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 247 @ 0xf70 (3952) - ISETP.NE.AND P1, PT, R34, RZ, PT ;
 Instr 248 @ 0xf80 (3968) - IADD3 R12, R4, 0x1, RZ ;
 Instr 249 @ 0xf90 (3984) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 250 @ 0xfa0 (4000) - ISETP.NE.AND P0, PT, R35, RZ, PT ;
 Instr 251 @ 0xfb0 (4016) - IADD3 R4, R12, 0x1, RZ ;
 Instr 252 @ 0xfc0 (4032) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 253 @ 0xfd0 (4048) - ISETP.NE.AND P1, PT, R36, RZ, PT ;
 Instr 254 @ 0xfe0 (4064) - IADD3 R12, R4, 0x1, RZ ;
 Instr 255 @ 0xff0 (4080) - @!P0 IMAD.MOV R12, RZ, RZ, R4 ;
 Instr 256 @ 0x1000 (4096) - ISETP.NE.AND P0, PT, R11, RZ, PT ;
 Instr 257 @ 0x1010 (4112) - IADD3 R4, R12, 0x1, RZ ;
 Instr 258 @ 0x1020 (4128) - @!P1 IMAD.MOV R4, RZ, RZ, R12 ;
 Instr 259 @ 0x1030 (4144) - ISETP.NE.AND P1, PT, R10, RZ, PT ;
 Instr 260 @ 0x1040 (4160) - IADD3 R10, R4, 0x1, RZ ;
 Instr 261 @ 0x1050 (4176) - @!P0 IMAD.MOV R10, RZ, RZ, R4 ;
 Instr 262 @ 0x1060 (4192) - ISETP.NE.AND P0, PT, R9, RZ, PT ;
 Instr 263 @ 0x1070 (4208) - IADD3 R4, R10, 0x1, RZ ;
 Instr 264 @ 0x1080 (4224) - @!P1 IMAD.MOV R4, RZ, RZ, R10 ;
 Instr 265 @ 0x1090 (4240) - ISETP.NE.AND P1, PT, R8, RZ, PT ;
 Instr 266 @ 0x10a0 (4256) - IADD3 R8, R4, 0x1, RZ ;
 Instr 267 @ 0x10b0 (4272) - @!P0 IMAD.MOV R8, RZ, RZ, R4 ;
 Instr 268 @ 0x10c0 (4288) - ISETP.NE.AND P0, PT, R7, RZ, PT ;
 Instr 269 @ 0x10d0 (4304) - IADD3 R7, R5.reuse, 0x4000, RZ ;
 Instr 270 @ 0x10e0 (4320) - IADD3 R4, R8, 0x1, RZ ;
 Instr 271 @ 0x10f0 (4336) - IADD3 R5, R5, 0x2000, RZ ;
 Instr 272 @ 0x1100 (4352) - @!P1 IMAD.MOV R4, RZ, RZ, R8 ;
 Instr 273 @ 0x1110 (4368) - ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 274 @ 0x1120 (4384) - IADD3 R6, R4, 0x1, RZ ;
 Instr 275 @ 0x1130 (4400) - @!P0 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 276 @ 0x1140 (4416) - ISETP.GT.AND P0, PT, R7, c[0x0][0x178], PT ;
 Instr 277 @ 0x1150 (4432) - IADD3 R4, R6, 0x1, RZ ;
 Instr 278 @ 0x1160 (4448) - @!P1 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 279 @ 0x1170 (4464) - @!P0 BRA 0x920 ;
Basic block id 5 - num instructions 1
 Instr 280 @ 0x1180 (4480) - IMAD.MOV.U32 R7, RZ, RZ, R5 ;
Basic block id 6 - num instructions 2
 Instr 281 @ 0x1190 (4496) - ISETP.GE.AND P0, PT, R7, c[0x0][0x178], PT ;
 Instr 282 @ 0x11a0 (4512) - @P0 BRA 0x1d00 ;
Basic block id 7 - num instructions 5
 Instr 283 @ 0x11b0 (4528) - IADD3 R5, -R7, c[0x0][0x178], RZ ;
 Instr 284 @ 0x11c0 (4544) - BMOV.32.CLEAR RZ, B1 ;
 Instr 285 @ 0x11d0 (4560) - BSSY B1, 0x1d00 ;
 Instr 286 @ 0x11e0 (4576) - ISETP.GE.AND P0, PT, R0, R5, PT ;
 Instr 287 @ 0x11f0 (4592) - @P0 BRA 0x1cf0 ;
Basic block id 8 - num instructions 10
 Instr 288 @ 0x1200 (4608) - LOP3.LUT R2, RZ, R7, RZ, 0x33, !PT ;
 Instr 289 @ 0x1210 (4624) - IMAD.MOV.U32 R6, RZ, RZ, R0 ;
 Instr 290 @ 0x1220 (4640) - BMOV.32.CLEAR RZ, B2 ;
 Instr 291 @ 0x1230 (4656) - BSSY B2, 0x13f0 ;
 Instr 292 @ 0x1240 (4672) - IADD3 R3, R2, c[0x0][0x178], RZ ;
 Instr 293 @ 0x1250 (4688) - IMAD.IADD R8, R3, 0x1, -R6 ;
 Instr 294 @ 0x1260 (4704) - LEA.HI R2, R8.reuse, 0x1, RZ, 0x18 ;
 Instr 295 @ 0x1270 (4720) - ISETP.GE.U32.AND P0, PT, R8, 0x300, PT ;
 Instr 296 @ 0x1280 (4736) - LOP3.LUT P1, RZ, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 297 @ 0x1290 (4752) - @!P1 BRA 0x13e0 ;
Basic block id 9 - num instructions 7
 Instr 298 @ 0x12a0 (4768) - IMAD.IADD R3, R3, 0x1, -R0.reuse ;
 Instr 299 @ 0x12b0 (4784) - IMAD.IADD R2, R0, 0x1, R7 ;
 Instr 300 @ 0x12c0 (4800) - IMAD.MOV.U32 R6, RZ, RZ, R0 ;
 Instr 301 @ 0x12d0 (4816) - LEA.HI R3, R3, 0x1, RZ, 0x18 ;
 Instr 302 @ 0x12e0 (4832) - IADD3 R10, P1, R2.reuse, c[0x0][0x168], RZ ;
 Instr 303 @ 0x12f0 (4848) - LOP3.LUT R8, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 304 @ 0x1300 (4864) - LEA.HI.X.SX32 R11, R2, c[0x0][0x16c], 0x1, P1 ;
Basic block id 10 - num instructions 13
 Instr 305 @ 0x1310 (4880) - IMAD.MOV.U32 R2, RZ, RZ, R10 ;
 Instr 306 @ 0x1320 (4896) - IMAD.MOV.U32 R3, RZ, RZ, R11 ;
 Instr 307 @ 0x1330 (4912) - LDG.E.U8.SYS R2, [R2] ;
 Instr 308 @ 0x1340 (4928) - IADD3 R8, R8, -0x1, RZ ;
 Instr 309 @ 0x1350 (4944) - IADD3 R9, R4, 0x1, RZ ;
 Instr 310 @ 0x1360 (4960) - ISETP.NE.AND P2, PT, R8, RZ, PT ;
 Instr 311 @ 0x1370 (4976) - IADD3 R10, P3, R10, 0x100, RZ ;
 Instr 312 @ 0x1380 (4992) - IADD3 R6, R6, 0x100, RZ ;
 Instr 313 @ 0x1390 (5008) - IMAD.X R11, RZ, RZ, R11, P3 ;
 Instr 314 @ 0x13a0 (5024) - ISETP.NE.AND P1, PT, R2, RZ, PT ;
 Instr 315 @ 0x13b0 (5040) - @!P1 IMAD.MOV R9, RZ, RZ, R4 ;
 Instr 316 @ 0x13c0 (5056) - IMAD.MOV.U32 R4, RZ, RZ, R9 ;
 Instr 317 @ 0x13d0 (5072) - @P2 BRA 0x1310 ;
Basic block id 11 - num instructions 2
 Instr 318 @ 0x13e0 (5088) - BSYNC B2 ;
 Instr 319 @ 0x13f0 (5104) - @!P0 BRA 0x1cf0 ;
Basic block id 12 - num instructions 11
 Instr 320 @ 0x1400 (5120) - IMAD.IADD R3, R5, 0x1, -R6 ;
 Instr 321 @ 0x1410 (5136) - BMOV.32.CLEAR RZ, B2 ;
 Instr 322 @ 0x1420 (5152) - IMAD.IADD R7, R6, 0x1, R7 ;
 Instr 323 @ 0x1430 (5168) - BSSY B2, 0x1930 ;
 Instr 324 @ 0x1440 (5184) - ISETP.GT.AND P1, PT, R3, 0xc00, PT ;
 Instr 325 @ 0x1450 (5200) - IADD3 R2, P0, R7, c[0x0][0x168], RZ ;
 Instr 326 @ 0x1460 (5216) - LEA.HI.X.SX32 R7, R7, c[0x0][0x16c], 0x1, P0 ;
 Instr 327 @ 0x1470 (5232) - IADD3 R2, P0, R2, 0x200, RZ ;
 Instr 328 @ 0x1480 (5248) - IMAD.X R3, RZ, RZ, R7, P0 ;
 Instr 329 @ 0x1490 (5264) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 330 @ 0x14a0 (5280) - @!P1 BRA 0x1920 ;
Basic block id 13 - num instructions 2
 Instr 331 @ 0x14b0 (5296) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 332 @ 0x14c0 (5312) - IADD3 R23, R5, -0xc00, RZ ;
Basic block id 14 - num instructions 69
 Instr 333 @ 0x14d0 (5328) - LDG.E.U8.SYS R22, [R2+-0x200] ;
 Instr 334 @ 0x14e0 (5344) - LDG.E.U8.SYS R7, [R2+-0x100] ;
 Instr 335 @ 0x14f0 (5360) - LDG.E.U8.SYS R8, [R2] ;
 Instr 336 @ 0x1500 (5376) - LDG.E.U8.SYS R9, [R2+0x100] ;
 Instr 337 @ 0x1510 (5392) - LDG.E.U8.SYS R10, [R2+0x200] ;
 Instr 338 @ 0x1520 (5408) - LDG.E.U8.SYS R11, [R2+0x300] ;
 Instr 339 @ 0x1530 (5424) - LDG.E.U8.SYS R12, [R2+0x400] ;
 Instr 340 @ 0x1540 (5440) - LDG.E.U8.SYS R13, [R2+0x500] ;
 Instr 341 @ 0x1550 (5456) - LDG.E.U8.SYS R14, [R2+0x600] ;
 Instr 342 @ 0x1560 (5472) - LDG.E.U8.SYS R15, [R2+0x700] ;
 Instr 343 @ 0x1570 (5488) - LDG.E.U8.SYS R16, [R2+0x800] ;
 Instr 344 @ 0x1580 (5504) - LDG.E.U8.SYS R17, [R2+0x900] ;
 Instr 345 @ 0x1590 (5520) - LDG.E.U8.SYS R18, [R2+0xa00] ;
 Instr 346 @ 0x15a0 (5536) - LDG.E.U8.SYS R19, [R2+0xb00] ;
 Instr 347 @ 0x15b0 (5552) - LDG.E.U8.SYS R20, [R2+0xc00] ;
 Instr 348 @ 0x15c0 (5568) - LDG.E.U8.SYS R21, [R2+0xd00] ;
 Instr 349 @ 0x15d0 (5584) - IADD3 R6, R6, 0x1000, RZ ;
 Instr 350 @ 0x15e0 (5600) - ISETP.NE.AND P1, PT, R22, RZ, PT ;
 Instr 351 @ 0x15f0 (5616) - ISETP.NE.AND P2, PT, R7, RZ, PT ;
 Instr 352 @ 0x1600 (5632) - IADD3 R7, R4, 0x1, RZ ;
 Instr 353 @ 0x1610 (5648) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 354 @ 0x1620 (5664) - ISETP.NE.AND P1, PT, R8, RZ, PT ;
 Instr 355 @ 0x1630 (5680) - IADD3 R4, R7, 0x1, RZ ;
 Instr 356 @ 0x1640 (5696) - @!P2 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 357 @ 0x1650 (5712) - ISETP.NE.AND P2, PT, R9, RZ, PT ;
 Instr 358 @ 0x1660 (5728) - IADD3 R7, R4, 0x1, RZ ;
 Instr 359 @ 0x1670 (5744) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 360 @ 0x1680 (5760) - ISETP.NE.AND P1, PT, R10, RZ, PT ;
 Instr 361 @ 0x1690 (5776) - IADD3 R4, R7, 0x1, RZ ;
 Instr 362 @ 0x16a0 (5792) - @!P2 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 363 @ 0x16b0 (5808) - ISETP.NE.AND P2, PT, R11, RZ, PT ;
 Instr 364 @ 0x16c0 (5824) - IADD3 R7, R4, 0x1, RZ ;
 Instr 365 @ 0x16d0 (5840) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 366 @ 0x16e0 (5856) - ISETP.NE.AND P1, PT, R12, RZ, PT ;
 Instr 367 @ 0x16f0 (5872) - ISETP.NE.AND P3, PT, R20, RZ, PT ;
 Instr 368 @ 0x1700 (5888) - IADD3 R4, R7, 0x1, RZ ;
 Instr 369 @ 0x1710 (5904) - @!P2 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 370 @ 0x1720 (5920) - ISETP.NE.AND P2, PT, R13, RZ, PT ;
 Instr 371 @ 0x1730 (5936) - IADD3 R7, R4, 0x1, RZ ;
 Instr 372 @ 0x1740 (5952) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 373 @ 0x1750 (5968) - ISETP.NE.AND P1, PT, R14, RZ, PT ;
 Instr 374 @ 0x1760 (5984) - IADD3 R4, R7, 0x1, RZ ;
 Instr 375 @ 0x1770 (6000) - @!P2 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 376 @ 0x1780 (6016) - ISETP.NE.AND P2, PT, R15, RZ, PT ;
 Instr 377 @ 0x1790 (6032) - IADD3 R7, R4, 0x1, RZ ;
 Instr 378 @ 0x17a0 (6048) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 379 @ 0x17b0 (6064) - ISETP.NE.AND P1, PT, R16, RZ, PT ;
 Instr 380 @ 0x17c0 (6080) - IADD3 R4, R7, 0x1, RZ ;
 Instr 381 @ 0x17d0 (6096) - @!P2 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 382 @ 0x17e0 (6112) - ISETP.NE.AND P2, PT, R17, RZ, PT ;
 Instr 383 @ 0x17f0 (6128) - IADD3 R7, R4, 0x1, RZ ;
 Instr 384 @ 0x1800 (6144) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 385 @ 0x1810 (6160) - ISETP.NE.AND P1, PT, R18, RZ, PT ;
 Instr 386 @ 0x1820 (6176) - IADD3 R4, R7, 0x1, RZ ;
 Instr 387 @ 0x1830 (6192) - @!P2 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 388 @ 0x1840 (6208) - ISETP.NE.AND P2, PT, R19, RZ, PT ;
 Instr 389 @ 0x1850 (6224) - IADD3 R7, R4, 0x1, RZ ;
 Instr 390 @ 0x1860 (6240) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 391 @ 0x1870 (6256) - ISETP.NE.AND P1, PT, R21, RZ, PT ;
 Instr 392 @ 0x1880 (6272) - IADD3 R4, R7, 0x1, RZ ;
 Instr 393 @ 0x1890 (6288) - @!P2 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 394 @ 0x18a0 (6304) - ISETP.GE.AND P2, PT, R6, R23, PT ;
 Instr 395 @ 0x18b0 (6320) - IADD3 R7, R4, 0x1, RZ ;
 Instr 396 @ 0x18c0 (6336) - @!P3 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 397 @ 0x18d0 (6352) - IADD3 R2, P3, R2, 0x1000, RZ ;
 Instr 398 @ 0x18e0 (6368) - IADD3 R4, R7, 0x1, RZ ;
 Instr 399 @ 0x18f0 (6384) - IMAD.X R3, RZ, RZ, R3, P3 ;
 Instr 400 @ 0x1900 (6400) - @!P1 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 401 @ 0x1910 (6416) - @!P2 BRA 0x14d0 ;
Basic block id 15 - num instructions 6
 Instr 402 @ 0x1920 (6432) - BSYNC B2 ;
 Instr 403 @ 0x1930 (6448) - IMAD.IADD R7, R5, 0x1, -R6 ;
 Instr 404 @ 0x1940 (6464) - BMOV.32.CLEAR RZ, B2 ;
 Instr 405 @ 0x1950 (6480) - BSSY B2, 0x1bd0 ;
 Instr 406 @ 0x1960 (6496) - ISETP.GT.AND P1, PT, R7, 0x400, PT ;
 Instr 407 @ 0x1970 (6512) - @!P1 BRA 0x1bc0 ;
Basic block id 16 - num instructions 36
 Instr 408 @ 0x1980 (6528) - LDG.E.U8.SYS R14, [R2+-0x200] ;
 Instr 409 @ 0x1990 (6544) - LDG.E.U8.SYS R7, [R2+-0x100] ;
 Instr 410 @ 0x19a0 (6560) - LDG.E.U8.SYS R8, [R2] ;
 Instr 411 @ 0x19b0 (6576) - LDG.E.U8.SYS R9, [R2+0x100] ;
 Instr 412 @ 0x19c0 (6592) - LDG.E.U8.SYS R10, [R2+0x200] ;
 Instr 413 @ 0x19d0 (6608) - LDG.E.U8.SYS R11, [R2+0x300] ;
 Instr 414 @ 0x19e0 (6624) - LDG.E.U8.SYS R12, [R2+0x400] ;
 Instr 415 @ 0x19f0 (6640) - LDG.E.U8.SYS R13, [R2+0x500] ;
 Instr 416 @ 0x1a00 (6656) - IADD3 R6, R6, 0x800, RZ ;
 Instr 417 @ 0x1a10 (6672) - IADD3 R2, P2, R2, 0x800, RZ ;
 Instr 418 @ 0x1a20 (6688) - IMAD.X R3, RZ, RZ, R3, P2 ;
 Instr 419 @ 0x1a30 (6704) - ISETP.NE.AND P0, PT, R14, RZ, PT ;
 Instr 420 @ 0x1a40 (6720) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
 Instr 421 @ 0x1a50 (6736) - IADD3 R7, R4, 0x1, RZ ;
 Instr 422 @ 0x1a60 (6752) - @!P0 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 423 @ 0x1a70 (6768) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 424 @ 0x1a80 (6784) - IADD3 R4, R7, 0x1, RZ ;
 Instr 425 @ 0x1a90 (6800) - @!P1 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 426 @ 0x1aa0 (6816) - ISETP.NE.AND P1, PT, R9, RZ, PT ;
 Instr 427 @ 0x1ab0 (6832) - IADD3 R7, R4, 0x1, RZ ;
 Instr 428 @ 0x1ac0 (6848) - @!P0 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 429 @ 0x1ad0 (6864) - ISETP.NE.AND P0, PT, R10, RZ, PT ;
 Instr 430 @ 0x1ae0 (6880) - IADD3 R4, R7, 0x1, RZ ;
 Instr 431 @ 0x1af0 (6896) - @!P1 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 432 @ 0x1b00 (6912) - ISETP.NE.AND P1, PT, R11, RZ, PT ;
 Instr 433 @ 0x1b10 (6928) - IADD3 R7, R4, 0x1, RZ ;
 Instr 434 @ 0x1b20 (6944) - @!P0 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 435 @ 0x1b30 (6960) - ISETP.NE.AND P0, PT, R12, RZ, PT ;
 Instr 436 @ 0x1b40 (6976) - IADD3 R4, R7, 0x1, RZ ;
 Instr 437 @ 0x1b50 (6992) - @!P1 IMAD.MOV R4, RZ, RZ, R7 ;
 Instr 438 @ 0x1b60 (7008) - ISETP.NE.AND P1, PT, R13, RZ, PT ;
 Instr 439 @ 0x1b70 (7024) - IADD3 R7, R4, 0x1, RZ ;
 Instr 440 @ 0x1b80 (7040) - @!P0 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 441 @ 0x1b90 (7056) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 442 @ 0x1ba0 (7072) - IADD3 R4, R7, 0x1, RZ ;
 Instr 443 @ 0x1bb0 (7088) - @!P1 IMAD.MOV R4, RZ, RZ, R7 ;
Basic block id 17 - num instructions 3
 Instr 444 @ 0x1bc0 (7104) - BSYNC B2 ;
 Instr 445 @ 0x1bd0 (7120) - ISETP.LT.OR P0, PT, R6, R5, P0 ;
 Instr 446 @ 0x1be0 (7136) - @!P0 BRA 0x1cf0 ;
Basic block id 18 - num instructions 16
 Instr 447 @ 0x1bf0 (7152) - LDG.E.U8.SYS R8, [R2+-0x200] ;
 Instr 448 @ 0x1c00 (7168) - LDG.E.U8.SYS R5, [R2+-0x100] ;
 Instr 449 @ 0x1c10 (7184) - LDG.E.U8.SYS R6, [R2] ;
 Instr 450 @ 0x1c20 (7200) - LDG.E.U8.SYS R7, [R2+0x100] ;
 Instr 451 @ 0x1c30 (7216) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 452 @ 0x1c40 (7232) - ISETP.NE.AND P1, PT, R5, RZ, PT ;
 Instr 453 @ 0x1c50 (7248) - IADD3 R5, R4, 0x1, RZ ;
 Instr 454 @ 0x1c60 (7264) - @!P0 IMAD.MOV R5, RZ, RZ, R4 ;
 Instr 455 @ 0x1c70 (7280) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 456 @ 0x1c80 (7296) - IADD3 R4, R5, 0x1, RZ ;
 Instr 457 @ 0x1c90 (7312) - @!P1 IMAD.MOV R4, RZ, RZ, R5 ;
 Instr 458 @ 0x1ca0 (7328) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
 Instr 459 @ 0x1cb0 (7344) - IADD3 R5, R4, 0x1, RZ ;
 Instr 460 @ 0x1cc0 (7360) - @!P0 IMAD.MOV R5, RZ, RZ, R4 ;
 Instr 461 @ 0x1cd0 (7376) - IADD3 R4, R5, 0x1, RZ ;
 Instr 462 @ 0x1ce0 (7392) - @!P1 IMAD.MOV R4, RZ, RZ, R5 ;
Basic block id 19 - num instructions 1
 Instr 463 @ 0x1cf0 (7408) - BSYNC B1 ;
Basic block id 20 - num instructions 30
 Instr 464 @ 0x1d00 (7424) - S2R R6, SR_LANEID ;
 Instr 465 @ 0x1d10 (7440) - SHFL.DOWN PT, R2, R4, 0x1, 0x1f ;
 Instr 466 @ 0x1d20 (7456) - ISETP.GT.AND P0, PT, R6.reuse, 0x1e, PT ;
 Instr 467 @ 0x1d30 (7472) - ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 468 @ 0x1d40 (7488) - SEL R3, R2, RZ, !P0 ;
 Instr 469 @ 0x1d50 (7504) - ISETP.GT.AND P0, PT, R6, 0x1d, PT ;
 Instr 470 @ 0x1d60 (7520) - IMAD.IADD R3, R3, 0x1, R4 ;
 Instr 471 @ 0x1d70 (7536) - @!P1 SHF.R.S32.HI R7, RZ, 0x1f, R0 ;
 Instr 472 @ 0x1d80 (7552) - SHFL.DOWN PT, R2, R3, 0x2, 0x1f ;
 Instr 473 @ 0x1d90 (7568) - @!P1 LEA.HI R7, R7, R0, RZ, 0x5 ;
 Instr 474 @ 0x1da0 (7584) - @!P1 SHF.R.S32.HI R7, RZ, 0x5, R7 ;
 Instr 475 @ 0x1db0 (7600) - SEL R2, R2, RZ, !P0 ;
 Instr 476 @ 0x1dc0 (7616) - ISETP.GT.AND P0, PT, R6, 0x1b, PT ;
 Instr 477 @ 0x1dd0 (7632) - IMAD.IADD R2, R3, 0x1, R2 ;
 Instr 478 @ 0x1de0 (7648) - SHFL.DOWN PT, R5, R2, 0x4, 0x1f ;
 Instr 479 @ 0x1df0 (7664) - SEL R5, R5, RZ, !P0 ;
 Instr 480 @ 0x1e00 (7680) - ISETP.GT.AND P0, PT, R6, 0x17, PT ;
 Instr 481 @ 0x1e10 (7696) - IMAD.IADD R5, R2, 0x1, R5 ;
 Instr 482 @ 0x1e20 (7712) - @!P1 IMAD.SHL.U32 R2, R7, 0x4, RZ ;
 Instr 483 @ 0x1e30 (7728) - SHFL.DOWN PT, R4, R5, 0x8, 0x1f ;
 Instr 484 @ 0x1e40 (7744) - SEL R4, R4, RZ, !P0 ;
 Instr 485 @ 0x1e50 (7760) - ISETP.GT.AND P0, PT, R6, 0xf, PT ;
 Instr 486 @ 0x1e60 (7776) - IMAD.IADD R4, R5, 0x1, R4 ;
 Instr 487 @ 0x1e70 (7792) - SHFL.DOWN PT, R3, R4, 0x10, 0x1f ;
 Instr 488 @ 0x1e80 (7808) - SEL R3, R3, RZ, !P0 ;
 Instr 489 @ 0x1e90 (7824) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 490 @ 0x1ea0 (7840) - IMAD.IADD R3, R4, 0x1, R3 ;
 Instr 491 @ 0x1eb0 (7856) - @!P1 STS [R2+0x8], R3 ;
 Instr 492 @ 0x1ec0 (7872) - BAR.SYNC 0x0 ;
 Instr 493 @ 0x1ed0 (7888) - @P0 BRA 0x30b0 ;
Basic block id 21 - num instructions 8
 Instr 494 @ 0x1ee0 (7904) - LDS.U R0, [0xc] ;
 Instr 495 @ 0x1ef0 (7920) - LDS.U.128 R4, [0x10] ;
 Instr 496 @ 0x1f00 (7936) - LDS.U.64 R8, [0x20] ;
 Instr 497 @ 0x1f10 (7952) - IADD3 R0, R4, R0, R3 ;
 Instr 498 @ 0x1f20 (7968) - IADD3 R0, R6, R0, R5 ;
 Instr 499 @ 0x1f30 (7984) - IADD3 R0, R8, R0, R7 ;
 Instr 500 @ 0x1f40 (8000) - IMAD.IADD R3, R0, 0x1, R9 ;
 Instr 501 @ 0x1f50 (8016) - BRA 0x30b0 ;
Basic block id 22 - num instructions 4
 Instr 502 @ 0x1f60 (8032) - ISETP.GE.AND P0, PT, R5, c[0x0][0x178], PT ;
 Instr 503 @ 0x1f70 (8048) - BMOV.32.CLEAR RZ, B1 ;
 Instr 504 @ 0x1f80 (8064) - BSSY B1, 0x1ff0 ;
 Instr 505 @ 0x1f90 (8080) - @P0 BRA 0x1fe0 ;
Basic block id 23 - num instructions 4
 Instr 506 @ 0x1fa0 (8096) - LDG.E.U8.SYS R2, [R2] ;
 Instr 507 @ 0x1fb0 (8112) - IADD3 R5, R5, 0x100, RZ ;
 Instr 508 @ 0x1fc0 (8128) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 509 @ 0x1fd0 (8144) - SEL R4, RZ, 0x1, !P0 ;
Basic block id 24 - num instructions 5
 Instr 510 @ 0x1fe0 (8160) - BSYNC B1 ;
 Instr 511 @ 0x1ff0 (8176) - ISETP.GE.AND P0, PT, R5, c[0x0][0x178], PT ;
 Instr 512 @ 0x2000 (8192) - BMOV.32.CLEAR RZ, B1 ;
 Instr 513 @ 0x2010 (8208) - BSSY B1, 0x2ad0 ;
 Instr 514 @ 0x2020 (8224) - @P0 BRA 0x2ac0 ;
Basic block id 25 - num instructions 9
 Instr 515 @ 0x2030 (8240) - LOP3.LUT R2, RZ, R5, RZ, 0x33, !PT ;
 Instr 516 @ 0x2040 (8256) - BMOV.32.CLEAR RZ, B2 ;
 Instr 517 @ 0x2050 (8272) - BSSY B2, 0x21d0 ;
 Instr 518 @ 0x2060 (8288) - IADD3 R3, R2, c[0x0][0x178], RZ ;
 Instr 519 @ 0x2070 (8304) - LEA.HI R2, R3.reuse, 0x1, RZ, 0x18 ;
 Instr 520 @ 0x2080 (8320) - ISETP.GE.U32.AND P0, PT, R3, 0x300, PT ;
 Instr 521 @ 0x2090 (8336) - LOP3.LUT R2, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 522 @ 0x20a0 (8352) - ISETP.NE.AND P1, PT, R2, RZ, PT ;
 Instr 523 @ 0x20b0 (8368) - @!P1 BRA 0x21c0 ;
Basic block id 26 - num instructions 3
 Instr 524 @ 0x20c0 (8384) - IADD3 R8, P1, R5, c[0x0][0x168], RZ ;
 Instr 525 @ 0x20d0 (8400) - IMAD.MOV.U32 R6, RZ, RZ, R2 ;
 Instr 526 @ 0x20e0 (8416) - LEA.HI.X.SX32 R9, R5, c[0x0][0x16c], 0x1, P1 ;
Basic block id 27 - num instructions 13
 Instr 527 @ 0x20f0 (8432) - IMAD.MOV.U32 R2, RZ, RZ, R8 ;
 Instr 528 @ 0x2100 (8448) - IMAD.MOV.U32 R3, RZ, RZ, R9 ;
 Instr 529 @ 0x2110 (8464) - LDG.E.U8.SYS R2, [R2] ;
 Instr 530 @ 0x2120 (8480) - IADD3 R6, R6, -0x1, RZ ;
 Instr 531 @ 0x2130 (8496) - IADD3 R7, R4, 0x1, RZ ;
 Instr 532 @ 0x2140 (8512) - ISETP.NE.AND P2, PT, R6, RZ, PT ;
 Instr 533 @ 0x2150 (8528) - IADD3 R8, P3, R8, 0x100, RZ ;
 Instr 534 @ 0x2160 (8544) - IADD3 R5, R5, 0x100, RZ ;
 Instr 535 @ 0x2170 (8560) - IMAD.X R9, RZ, RZ, R9, P3 ;
 Instr 536 @ 0x2180 (8576) - ISETP.NE.AND P1, PT, R2, RZ, PT ;
 Instr 537 @ 0x2190 (8592) - @!P1 IMAD.MOV R7, RZ, RZ, R4 ;
 Instr 538 @ 0x21a0 (8608) - IMAD.MOV.U32 R4, RZ, RZ, R7 ;
 Instr 539 @ 0x21b0 (8624) - @P2 BRA 0x20f0 ;
Basic block id 28 - num instructions 2
 Instr 540 @ 0x21c0 (8640) - BSYNC B2 ;
 Instr 541 @ 0x21d0 (8656) - @!P0 BRA 0x2ac0 ;
Basic block id 29 - num instructions 10
 Instr 542 @ 0x21e0 (8672) - IADD3 R2, P1, R5.reuse, c[0x0][0x168], RZ ;
 Instr 543 @ 0x21f0 (8688) - BMOV.32.CLEAR RZ, B2 ;
 Instr 544 @ 0x2200 (8704) - IADD3 R3, -R5.reuse, c[0x0][0x178], RZ ;
 Instr 545 @ 0x2210 (8720) - BSSY B2, 0x2700 ;
 Instr 546 @ 0x2220 (8736) - LEA.HI.X.SX32 R6, R5, c[0x0][0x16c], 0x1, P1 ;
 Instr 547 @ 0x2230 (8752) - ISETP.GT.AND P1, PT, R3, 0xc00, PT ;
 Instr 548 @ 0x2240 (8768) - IADD3 R2, P0, R2, 0x200, RZ ;
 Instr 549 @ 0x2250 (8784) - IMAD.X R3, RZ, RZ, R6, P0 ;
 Instr 550 @ 0x2260 (8800) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 551 @ 0x2270 (8816) - @!P1 BRA 0x26f0 ;
Basic block id 30 - num instructions 2
 Instr 552 @ 0x2280 (8832) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 553 @ 0x2290 (8848) - IADD3 R22, R36, -0xc00, RZ ;
Basic block id 31 - num instructions 69
 Instr 554 @ 0x22a0 (8864) - LDG.E.U8.SYS R21, [R2+-0x200] ;
 Instr 555 @ 0x22b0 (8880) - LDG.E.U8.SYS R6, [R2+-0x100] ;
 Instr 556 @ 0x22c0 (8896) - LDG.E.U8.SYS R7, [R2] ;
 Instr 557 @ 0x22d0 (8912) - LDG.E.U8.SYS R8, [R2+0x100] ;
 Instr 558 @ 0x22e0 (8928) - LDG.E.U8.SYS R9, [R2+0x200] ;
 Instr 559 @ 0x22f0 (8944) - LDG.E.U8.SYS R10, [R2+0x300] ;
 Instr 560 @ 0x2300 (8960) - LDG.E.U8.SYS R11, [R2+0x400] ;
 Instr 561 @ 0x2310 (8976) - LDG.E.U8.SYS R12, [R2+0x500] ;
 Instr 562 @ 0x2320 (8992) - LDG.E.U8.SYS R13, [R2+0x600] ;
 Instr 563 @ 0x2330 (9008) - LDG.E.U8.SYS R14, [R2+0x700] ;
 Instr 564 @ 0x2340 (9024) - LDG.E.U8.SYS R15, [R2+0x800] ;
 Instr 565 @ 0x2350 (9040) - LDG.E.U8.SYS R16, [R2+0x900] ;
 Instr 566 @ 0x2360 (9056) - LDG.E.U8.SYS R17, [R2+0xa00] ;
 Instr 567 @ 0x2370 (9072) - LDG.E.U8.SYS R18, [R2+0xb00] ;
 Instr 568 @ 0x2380 (9088) - LDG.E.U8.SYS R19, [R2+0xc00] ;
 Instr 569 @ 0x2390 (9104) - LDG.E.U8.SYS R20, [R2+0xd00] ;
 Instr 570 @ 0x23a0 (9120) - IADD3 R5, R5, 0x1000, RZ ;
 Instr 571 @ 0x23b0 (9136) - ISETP.NE.AND P1, PT, R21, RZ, PT ;
 Instr 572 @ 0x23c0 (9152) - ISETP.NE.AND P2, PT, R6, RZ, PT ;
 Instr 573 @ 0x23d0 (9168) - IADD3 R6, R4, 0x1, RZ ;
 Instr 574 @ 0x23e0 (9184) - @!P1 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 575 @ 0x23f0 (9200) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
 Instr 576 @ 0x2400 (9216) - IADD3 R4, R6, 0x1, RZ ;
 Instr 577 @ 0x2410 (9232) - @!P2 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 578 @ 0x2420 (9248) - ISETP.NE.AND P2, PT, R8, RZ, PT ;
 Instr 579 @ 0x2430 (9264) - IADD3 R6, R4, 0x1, RZ ;
 Instr 580 @ 0x2440 (9280) - @!P1 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 581 @ 0x2450 (9296) - ISETP.NE.AND P1, PT, R9, RZ, PT ;
 Instr 582 @ 0x2460 (9312) - IADD3 R4, R6, 0x1, RZ ;
 Instr 583 @ 0x2470 (9328) - @!P2 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 584 @ 0x2480 (9344) - ISETP.NE.AND P2, PT, R10, RZ, PT ;
 Instr 585 @ 0x2490 (9360) - IADD3 R6, R4, 0x1, RZ ;
 Instr 586 @ 0x24a0 (9376) - @!P1 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 587 @ 0x24b0 (9392) - ISETP.NE.AND P1, PT, R11, RZ, PT ;
 Instr 588 @ 0x24c0 (9408) - ISETP.NE.AND P3, PT, R19, RZ, PT ;
 Instr 589 @ 0x24d0 (9424) - IADD3 R4, R6, 0x1, RZ ;
 Instr 590 @ 0x24e0 (9440) - @!P2 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 591 @ 0x24f0 (9456) - ISETP.NE.AND P2, PT, R12, RZ, PT ;
 Instr 592 @ 0x2500 (9472) - IADD3 R6, R4, 0x1, RZ ;
 Instr 593 @ 0x2510 (9488) - @!P1 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 594 @ 0x2520 (9504) - ISETP.NE.AND P1, PT, R13, RZ, PT ;
 Instr 595 @ 0x2530 (9520) - IADD3 R4, R6, 0x1, RZ ;
 Instr 596 @ 0x2540 (9536) - @!P2 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 597 @ 0x2550 (9552) - ISETP.NE.AND P2, PT, R14, RZ, PT ;
 Instr 598 @ 0x2560 (9568) - IADD3 R6, R4, 0x1, RZ ;
 Instr 599 @ 0x2570 (9584) - @!P1 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 600 @ 0x2580 (9600) - ISETP.NE.AND P1, PT, R15, RZ, PT ;
 Instr 601 @ 0x2590 (9616) - IADD3 R4, R6, 0x1, RZ ;
 Instr 602 @ 0x25a0 (9632) - @!P2 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 603 @ 0x25b0 (9648) - ISETP.NE.AND P2, PT, R16, RZ, PT ;
 Instr 604 @ 0x25c0 (9664) - IADD3 R6, R4, 0x1, RZ ;
 Instr 605 @ 0x25d0 (9680) - @!P1 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 606 @ 0x25e0 (9696) - ISETP.NE.AND P1, PT, R17, RZ, PT ;
 Instr 607 @ 0x25f0 (9712) - IADD3 R4, R6, 0x1, RZ ;
 Instr 608 @ 0x2600 (9728) - @!P2 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 609 @ 0x2610 (9744) - ISETP.NE.AND P2, PT, R18, RZ, PT ;
 Instr 610 @ 0x2620 (9760) - IADD3 R6, R4, 0x1, RZ ;
 Instr 611 @ 0x2630 (9776) - @!P1 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 612 @ 0x2640 (9792) - ISETP.NE.AND P1, PT, R20, RZ, PT ;
 Instr 613 @ 0x2650 (9808) - IADD3 R4, R6, 0x1, RZ ;
 Instr 614 @ 0x2660 (9824) - @!P2 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 615 @ 0x2670 (9840) - ISETP.GE.AND P2, PT, R5, R22, PT ;
 Instr 616 @ 0x2680 (9856) - IADD3 R6, R4, 0x1, RZ ;
 Instr 617 @ 0x2690 (9872) - @!P3 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 618 @ 0x26a0 (9888) - IADD3 R2, P3, R2, 0x1000, RZ ;
 Instr 619 @ 0x26b0 (9904) - IADD3 R4, R6, 0x1, RZ ;
 Instr 620 @ 0x26c0 (9920) - IMAD.X R3, RZ, RZ, R3, P3 ;
 Instr 621 @ 0x26d0 (9936) - @!P1 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 622 @ 0x26e0 (9952) - @!P2 BRA 0x22a0 ;
Basic block id 32 - num instructions 6
 Instr 623 @ 0x26f0 (9968) - BSYNC B2 ;
 Instr 624 @ 0x2700 (9984) - IADD3 R6, -R5, c[0x0][0x178], RZ ;
 Instr 625 @ 0x2710 (10000) - BMOV.32.CLEAR RZ, B2 ;
 Instr 626 @ 0x2720 (10016) - BSSY B2, 0x29a0 ;
 Instr 627 @ 0x2730 (10032) - ISETP.GT.AND P1, PT, R6, 0x400, PT ;
 Instr 628 @ 0x2740 (10048) - @!P1 BRA 0x2990 ;
Basic block id 33 - num instructions 36
 Instr 629 @ 0x2750 (10064) - LDG.E.U8.SYS R13, [R2+-0x200] ;
 Instr 630 @ 0x2760 (10080) - LDG.E.U8.SYS R6, [R2+-0x100] ;
 Instr 631 @ 0x2770 (10096) - LDG.E.U8.SYS R7, [R2] ;
 Instr 632 @ 0x2780 (10112) - LDG.E.U8.SYS R8, [R2+0x100] ;
 Instr 633 @ 0x2790 (10128) - LDG.E.U8.SYS R9, [R2+0x200] ;
 Instr 634 @ 0x27a0 (10144) - LDG.E.U8.SYS R10, [R2+0x300] ;
 Instr 635 @ 0x27b0 (10160) - LDG.E.U8.SYS R11, [R2+0x400] ;
 Instr 636 @ 0x27c0 (10176) - LDG.E.U8.SYS R12, [R2+0x500] ;
 Instr 637 @ 0x27d0 (10192) - IADD3 R5, R5, 0x800, RZ ;
 Instr 638 @ 0x27e0 (10208) - IADD3 R2, P2, R2, 0x800, RZ ;
 Instr 639 @ 0x27f0 (10224) - IMAD.X R3, RZ, RZ, R3, P2 ;
 Instr 640 @ 0x2800 (10240) - ISETP.NE.AND P0, PT, R13, RZ, PT ;
 Instr 641 @ 0x2810 (10256) - ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 642 @ 0x2820 (10272) - IADD3 R6, R4, 0x1, RZ ;
 Instr 643 @ 0x2830 (10288) - @!P0 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 644 @ 0x2840 (10304) - ISETP.NE.AND P0, PT, R7, RZ, PT ;
 Instr 645 @ 0x2850 (10320) - IADD3 R4, R6, 0x1, RZ ;
 Instr 646 @ 0x2860 (10336) - @!P1 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 647 @ 0x2870 (10352) - ISETP.NE.AND P1, PT, R8, RZ, PT ;
 Instr 648 @ 0x2880 (10368) - IADD3 R6, R4, 0x1, RZ ;
 Instr 649 @ 0x2890 (10384) - @!P0 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 650 @ 0x28a0 (10400) - ISETP.NE.AND P0, PT, R9, RZ, PT ;
 Instr 651 @ 0x28b0 (10416) - IADD3 R4, R6, 0x1, RZ ;
 Instr 652 @ 0x28c0 (10432) - @!P1 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 653 @ 0x28d0 (10448) - ISETP.NE.AND P1, PT, R10, RZ, PT ;
 Instr 654 @ 0x28e0 (10464) - IADD3 R6, R4, 0x1, RZ ;
 Instr 655 @ 0x28f0 (10480) - @!P0 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 656 @ 0x2900 (10496) - ISETP.NE.AND P0, PT, R11, RZ, PT ;
 Instr 657 @ 0x2910 (10512) - IADD3 R4, R6, 0x1, RZ ;
 Instr 658 @ 0x2920 (10528) - @!P1 IMAD.MOV R4, RZ, RZ, R6 ;
 Instr 659 @ 0x2930 (10544) - ISETP.NE.AND P1, PT, R12, RZ, PT ;
 Instr 660 @ 0x2940 (10560) - IADD3 R6, R4, 0x1, RZ ;
 Instr 661 @ 0x2950 (10576) - @!P0 IMAD.MOV R6, RZ, RZ, R4 ;
 Instr 662 @ 0x2960 (10592) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 663 @ 0x2970 (10608) - IADD3 R4, R6, 0x1, RZ ;
 Instr 664 @ 0x2980 (10624) - @!P1 IMAD.MOV R4, RZ, RZ, R6 ;
Basic block id 34 - num instructions 3
 Instr 665 @ 0x2990 (10640) - BSYNC B2 ;
 Instr 666 @ 0x29a0 (10656) - ISETP.LT.OR P0, PT, R5, c[0x0][0x178], P0 ;
 Instr 667 @ 0x29b0 (10672) - @!P0 BRA 0x2ac0 ;
Basic block id 35 - num instructions 16
 Instr 668 @ 0x29c0 (10688) - LDG.E.U8.SYS R8, [R2+-0x200] ;
 Instr 669 @ 0x29d0 (10704) - LDG.E.U8.SYS R5, [R2+-0x100] ;
 Instr 670 @ 0x29e0 (10720) - LDG.E.U8.SYS R6, [R2] ;
 Instr 671 @ 0x29f0 (10736) - LDG.E.U8.SYS R7, [R2+0x100] ;
 Instr 672 @ 0x2a00 (10752) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 673 @ 0x2a10 (10768) - ISETP.NE.AND P1, PT, R5, RZ, PT ;
 Instr 674 @ 0x2a20 (10784) - IADD3 R5, R4, 0x1, RZ ;
 Instr 675 @ 0x2a30 (10800) - @!P0 IMAD.MOV R5, RZ, RZ, R4 ;
 Instr 676 @ 0x2a40 (10816) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 677 @ 0x2a50 (10832) - IADD3 R4, R5, 0x1, RZ ;
 Instr 678 @ 0x2a60 (10848) - @!P1 IMAD.MOV R4, RZ, RZ, R5 ;
 Instr 679 @ 0x2a70 (10864) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
 Instr 680 @ 0x2a80 (10880) - IADD3 R5, R4, 0x1, RZ ;
 Instr 681 @ 0x2a90 (10896) - @!P0 IMAD.MOV R5, RZ, RZ, R4 ;
 Instr 682 @ 0x2aa0 (10912) - IADD3 R4, R5, 0x1, RZ ;
 Instr 683 @ 0x2ab0 (10928) - @!P1 IMAD.MOV R4, RZ, RZ, R5 ;
Basic block id 36 - num instructions 7
 Instr 684 @ 0x2ac0 (10944) - BSYNC B1 ;
 Instr 685 @ 0x2ad0 (10960) - S2R R10, SR_LANEID ;
 Instr 686 @ 0x2ae0 (10976) - ISETP.GT.AND P0, PT, R36, 0xff, PT ;
 Instr 687 @ 0x2af0 (10992) - SHF.R.S32.HI R3, RZ, 0x1f, R0 ;
 Instr 688 @ 0x2b00 (11008) - LEA.HI R3, R3, R0, RZ, 0x5 ;
 Instr 689 @ 0x2b10 (11024) - SHF.R.S32.HI R12, RZ, 0x5, R3 ;
 Instr 690 @ 0x2b20 (11040) - @P0 BRA 0x2ec0 ;
Basic block id 37 - num instructions 35
 Instr 691 @ 0x2b30 (11056) - IMAD.SHL.U32 R2, R12, 0x20, RZ ;
 Instr 692 @ 0x2b40 (11072) - IADD3 R6, R10.reuse, 0x2, RZ ;
 Instr 693 @ 0x2b50 (11088) - IADD3 R8, R10, 0x4, RZ ;
 Instr 694 @ 0x2b60 (11104) - IADD3 R3, R2, 0x20, RZ ;
 Instr 695 @ 0x2b70 (11120) - LOP3.LUT R2, RZ, R2, RZ, 0x33, !PT ;
 Instr 696 @ 0x2b80 (11136) - ISETP.GT.AND P0, PT, R3, c[0x0][0x178], PT ;
 Instr 697 @ 0x2b90 (11152) - IADD3 R2, R2, c[0x0][0x178], RZ ;
 Instr 698 @ 0x2ba0 (11168) - ISETP.NE.AND P1, PT, R10, RZ, PT ;
 Instr 699 @ 0x2bb0 (11184) - SEL R5, R2, 0x1f, P0 ;
 Instr 700 @ 0x2bc0 (11200) - ISETP.GE.AND P0, PT, R10, R5, PT ;
 Instr 701 @ 0x2bd0 (11216) - SHFL.DOWN PT, R2, R4, 0x1, R5 ;
 Instr 702 @ 0x2be0 (11232) - SEL R3, R2, RZ, !P0 ;
 Instr 703 @ 0x2bf0 (11248) - ISETP.GT.AND P0, PT, R6, R5, PT ;
 Instr 704 @ 0x2c00 (11264) - IMAD.IADD R2, R3, 0x1, R4 ;
 Instr 705 @ 0x2c10 (11280) - SHFL.DOWN PT, R3, R2, 0x2, R5 ;
 Instr 706 @ 0x2c20 (11296) - SEL R3, R3, RZ, !P0 ;
 Instr 707 @ 0x2c30 (11312) - ISETP.GT.AND P0, PT, R8, R5, PT ;
 Instr 708 @ 0x2c40 (11328) - IMAD.IADD R6, R2, 0x1, R3 ;
 Instr 709 @ 0x2c50 (11344) - IADD3 R2, R10, 0x8, RZ ;
 Instr 710 @ 0x2c60 (11360) - SHFL.DOWN PT, R3, R6, 0x4, R5 ;
 Instr 711 @ 0x2c70 (11376) - SEL R3, R3, RZ, !P0 ;
 Instr 712 @ 0x2c80 (11392) - ISETP.GT.AND P0, PT, R2, R5, PT ;
 Instr 713 @ 0x2c90 (11408) - IMAD.IADD R4, R6, 0x1, R3 ;
 Instr 714 @ 0x2ca0 (11424) - IADD3 R6, R10, 0x10, RZ ;
 Instr 715 @ 0x2cb0 (11440) - SHFL.DOWN PT, R3, R4, 0x8, R5 ;
 Instr 716 @ 0x2cc0 (11456) - SEL R3, R3, RZ, !P0 ;
 Instr 717 @ 0x2cd0 (11472) - ISETP.GT.AND P0, PT, R6, R5, PT ;
 Instr 718 @ 0x2ce0 (11488) - IMAD.IADD R2, R4, 0x1, R3 ;
 Instr 719 @ 0x2cf0 (11504) - SHFL.DOWN PT, R3, R2, 0x10, R5 ;
 Instr 720 @ 0x2d00 (11520) - SEL R3, R3, RZ, !P0 ;
 Instr 721 @ 0x2d10 (11536) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 722 @ 0x2d20 (11552) - IMAD.IADD R3, R2, 0x1, R3 ;
 Instr 723 @ 0x2d30 (11568) - @!P1 STS [R12.X4+0x8], R3 ;
 Instr 724 @ 0x2d40 (11584) - BAR.SYNC 0x0 ;
 Instr 725 @ 0x2d50 (11600) - @P0 BRA 0x30b0 ;
Basic block id 38 - num instructions 20
 Instr 726 @ 0x2d60 (11616) - LDS.U.128 R4, [0x10] ;
 Instr 727 @ 0x2d70 (11632) - ISETP.GT.AND P3, PT, R36, 0x80, PT ;
 Instr 728 @ 0x2d80 (11648) - ISETP.GT.AND P2, PT, R36.reuse, 0x40, PT ;
 Instr 729 @ 0x2d90 (11664) - ISETP.GT.AND P1, PT, R36, 0x20, PT ;
 Instr 730 @ 0x2da0 (11680) - LDS.U R0, [0xc] ;
 Instr 731 @ 0x2db0 (11696) - LDS.U.64 R8, [0x20] ;
 Instr 732 @ 0x2dc0 (11712) - SEL R6, R6, RZ, P3 ;
 Instr 733 @ 0x2dd0 (11728) - SEL R4, R4, RZ, P2 ;
 Instr 734 @ 0x2de0 (11744) - ISETP.GE.AND P3, PT, R36.reuse, 0xe1, PT ;
 Instr 735 @ 0x2df0 (11760) - ISETP.GT.AND P2, PT, R36, 0x60, PT ;
 Instr 736 @ 0x2e00 (11776) - SEL R0, R0, RZ, P1 ;
 Instr 737 @ 0x2e10 (11792) - SEL R5, R5, RZ, P2 ;
 Instr 738 @ 0x2e20 (11808) - IADD3 R0, R4, R3, R0 ;
 Instr 739 @ 0x2e30 (11824) - ISETP.GT.AND P1, PT, R36.reuse, 0xa0, PT ;
 Instr 740 @ 0x2e40 (11840) - ISETP.GT.AND P2, PT, R36, 0xc0, PT ;
 Instr 741 @ 0x2e50 (11856) - SEL R7, R7, RZ, P1 ;
 Instr 742 @ 0x2e60 (11872) - IADD3 R0, R6, R0, R5 ;
 Instr 743 @ 0x2e70 (11888) - SEL R8, R8, RZ, P2 ;
 Instr 744 @ 0x2e80 (11904) - IADD3 R3, R8, R0, R7 ;
 Instr 745 @ 0x2e90 (11920) - @!P3 BRA 0x30b0 ;
Basic block id 39 - num instructions 2
 Instr 746 @ 0x2ea0 (11936) - IMAD.IADD R3, R3, 0x1, R9 ;
 Instr 747 @ 0x2eb0 (11952) - BRA 0x30b0 ;
Basic block id 40 - num instructions 31
 Instr 748 @ 0x2ec0 (11968) - SHFL.DOWN PT, R2, R4, 0x1, 0x1f ;
 Instr 749 @ 0x2ed0 (11984) - ISETP.GT.AND P0, PT, R10.reuse, 0x1e, PT ;
 Instr 750 @ 0x2ee0 (12000) - ISETP.NE.AND P1, PT, R10, RZ, PT ;
 Instr 751 @ 0x2ef0 (12016) - SEL R3, R2, RZ, !P0 ;
 Instr 752 @ 0x2f00 (12032) - ISETP.GT.AND P0, PT, R10, 0x1d, PT ;
 Instr 753 @ 0x2f10 (12048) - IMAD.IADD R3, R3, 0x1, R4 ;
 Instr 754 @ 0x2f20 (12064) - SHFL.DOWN PT, R2, R3, 0x2, 0x1f ;
 Instr 755 @ 0x2f30 (12080) - SEL R2, R2, RZ, !P0 ;
 Instr 756 @ 0x2f40 (12096) - ISETP.GT.AND P0, PT, R10, 0x1b, PT ;
 Instr 757 @ 0x2f50 (12112) - IMAD.IADD R2, R3, 0x1, R2 ;
 Instr 758 @ 0x2f60 (12128) - SHFL.DOWN PT, R5, R2, 0x4, 0x1f ;
 Instr 759 @ 0x2f70 (12144) - SEL R5, R5, RZ, !P0 ;
 Instr 760 @ 0x2f80 (12160) - ISETP.GT.AND P0, PT, R10, 0x17, PT ;
 Instr 761 @ 0x2f90 (12176) - IMAD.IADD R5, R2, 0x1, R5 ;
 Instr 762 @ 0x2fa0 (12192) - SHFL.DOWN PT, R4, R5, 0x8, 0x1f ;
 Instr 763 @ 0x2fb0 (12208) - SEL R4, R4, RZ, !P0 ;
 Instr 764 @ 0x2fc0 (12224) - ISETP.GT.AND P0, PT, R10, 0xf, PT ;
 Instr 765 @ 0x2fd0 (12240) - IMAD.IADD R4, R5, 0x1, R4 ;
 Instr 766 @ 0x2fe0 (12256) - SHFL.DOWN PT, R3, R4, 0x10, 0x1f ;
 Instr 767 @ 0x2ff0 (12272) - SEL R3, R3, RZ, !P0 ;
 Instr 768 @ 0x3000 (12288) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 769 @ 0x3010 (12304) - IMAD.IADD R3, R4, 0x1, R3 ;
 Instr 770 @ 0x3020 (12320) - @!P1 STS [R12.X4+0x8], R3 ;
 Instr 771 @ 0x3030 (12336) - BAR.SYNC 0x0 ;
 Instr 772 @ 0x3040 (12352) - @!P0 LDS.U R0, [0xc] ;
 Instr 773 @ 0x3050 (12368) - @!P0 LDS.U.128 R8, [0x10] ;
 Instr 774 @ 0x3060 (12384) - @!P0 LDS.U.64 R6, [0x20] ;
 Instr 775 @ 0x3070 (12400) - @!P0 IADD3 R0, R8, R0, R3 ;
 Instr 776 @ 0x3080 (12416) - @!P0 IADD3 R0, R10, R0, R9 ;
 Instr 777 @ 0x3090 (12432) - @!P0 IADD3 R0, R6, R0, R11 ;
 Instr 778 @ 0x30a0 (12448) - @!P0 IMAD.IADD R3, R0, 0x1, R7 ;
Basic block id 41 - num instructions 2
 Instr 779 @ 0x30b0 (12464) - BSYNC B0 ;
 Instr 780 @ 0x30c0 (12480) - @P0 EXIT ;
Basic block id 42 - num instructions 4
 Instr 781 @ 0x30d0 (12496) - IADD3 R3, R3, c[0x0][0x180], RZ ;
 Instr 782 @ 0x30e0 (12512) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 783 @ 0x30f0 (12528) - STG.E.SYS [UR4], R3 ;
 Instr 784 @ 0x3100 (12544) - EXIT ;
Basic block id 43 - num instructions 2
 Instr 785 @ 0x3110 (12560) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
 Instr 786 @ 0x3120 (12576) - @P0 EXIT ;
Basic block id 44 - num instructions 4
 Instr 787 @ 0x3130 (12592) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x180] ;
 Instr 788 @ 0x3140 (12608) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 789 @ 0x3150 (12624) - STG.E.SYS [UR4], R0 ;
 Instr 790 @ 0x3160 (12640) - EXIT ;
Basic block id 45 - num instructions 1
 Instr 791 @ 0x3170 (12656) - BRA 0x3170;
inspecting void at_cuda_detail::cub::DeviceReduceSingleTileKernel<at_cuda_detail::cub::DeviceReducePolicy<bool, int, int, at_cuda_detail::cub::Sum>::Policy600, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, at_cuda_detail::cub::Sum, int>(at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, at_cuda_detail::cub::Sum, int) - number basic blocks 46
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 5 @ 0x50 (80) - IMAD.MOV.U32 R36, RZ, RZ, c[0x0][0x178] ;
Inject count_instr before - Instr 12 @ 0xc0 (192) - LDG.E.U8.SYS R35, [R2] ;
Inject count_instr before - Instr 143 @ 0x8f0 (2288) - IADD3 R2, P0, R2, 0x3f00, RZ ;
Inject count_instr before - Instr 146 @ 0x920 (2336) - LDG.E.U8.SYS R37, [R2+-0x1f00] ;
Inject count_instr before - Instr 280 @ 0x1180 (4480) - IMAD.MOV.U32 R7, RZ, RZ, R5 ;
Inject count_instr before - Instr 281 @ 0x1190 (4496) - ISETP.GE.AND P0, PT, R7, c[0x0][0x178], PT ;
Inject count_instr before - Instr 283 @ 0x11b0 (4528) - IADD3 R5, -R7, c[0x0][0x178], RZ ;
Inject count_instr before - Instr 288 @ 0x1200 (4608) - LOP3.LUT R2, RZ, R7, RZ, 0x33, !PT ;
Inject count_instr before - Instr 298 @ 0x12a0 (4768) - IMAD.IADD R3, R3, 0x1, -R0.reuse ;
Inject count_instr before - Instr 305 @ 0x1310 (4880) - IMAD.MOV.U32 R2, RZ, RZ, R10 ;
Inject count_instr before - Instr 318 @ 0x13e0 (5088) - BSYNC B2 ;
Inject count_instr before - Instr 320 @ 0x1400 (5120) - IMAD.IADD R3, R5, 0x1, -R6 ;
Inject count_instr before - Instr 331 @ 0x14b0 (5296) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 333 @ 0x14d0 (5328) - LDG.E.U8.SYS R22, [R2+-0x200] ;
Inject count_instr before - Instr 402 @ 0x1920 (6432) - BSYNC B2 ;
Inject count_instr before - Instr 408 @ 0x1980 (6528) - LDG.E.U8.SYS R14, [R2+-0x200] ;
Inject count_instr before - Instr 444 @ 0x1bc0 (7104) - BSYNC B2 ;
Inject count_instr before - Instr 447 @ 0x1bf0 (7152) - LDG.E.U8.SYS R8, [R2+-0x200] ;
Inject count_instr before - Instr 463 @ 0x1cf0 (7408) - BSYNC B1 ;
Inject count_instr before - Instr 464 @ 0x1d00 (7424) - S2R R6, SR_LANEID ;
Inject count_instr before - Instr 494 @ 0x1ee0 (7904) - LDS.U R0, [0xc] ;
Inject count_instr before - Instr 502 @ 0x1f60 (8032) - ISETP.GE.AND P0, PT, R5, c[0x0][0x178], PT ;
Inject count_instr before - Instr 506 @ 0x1fa0 (8096) - LDG.E.U8.SYS R2, [R2] ;
Inject count_instr before - Instr 510 @ 0x1fe0 (8160) - BSYNC B1 ;
Inject count_instr before - Instr 515 @ 0x2030 (8240) - LOP3.LUT R2, RZ, R5, RZ, 0x33, !PT ;
Inject count_instr before - Instr 524 @ 0x20c0 (8384) - IADD3 R8, P1, R5, c[0x0][0x168], RZ ;
Inject count_instr before - Instr 527 @ 0x20f0 (8432) - IMAD.MOV.U32 R2, RZ, RZ, R8 ;
Inject count_instr before - Instr 540 @ 0x21c0 (8640) - BSYNC B2 ;
Inject count_instr before - Instr 542 @ 0x21e0 (8672) - IADD3 R2, P1, R5.reuse, c[0x0][0x168], RZ ;
Inject count_instr before - Instr 552 @ 0x2280 (8832) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 554 @ 0x22a0 (8864) - LDG.E.U8.SYS R21, [R2+-0x200] ;
Inject count_instr before - Instr 623 @ 0x26f0 (9968) - BSYNC B2 ;
Inject count_instr before - Instr 629 @ 0x2750 (10064) - LDG.E.U8.SYS R13, [R2+-0x200] ;
Inject count_instr before - Instr 665 @ 0x2990 (10640) - BSYNC B2 ;
Inject count_instr before - Instr 668 @ 0x29c0 (10688) - LDG.E.U8.SYS R8, [R2+-0x200] ;
Inject count_instr before - Instr 684 @ 0x2ac0 (10944) - BSYNC B1 ;
Inject count_instr before - Instr 691 @ 0x2b30 (11056) - IMAD.SHL.U32 R2, R12, 0x20, RZ ;
Inject count_instr before - Instr 726 @ 0x2d60 (11616) - LDS.U.128 R4, [0x10] ;
Inject count_instr before - Instr 746 @ 0x2ea0 (11936) - IMAD.IADD R3, R3, 0x1, R9 ;
Inject count_instr before - Instr 748 @ 0x2ec0 (11968) - SHFL.DOWN PT, R2, R4, 0x1, 0x1f ;
Inject count_instr before - Instr 779 @ 0x30b0 (12464) - BSYNC B0 ;
Inject count_instr before - Instr 781 @ 0x30d0 (12496) - IADD3 R3, R3, c[0x0][0x180], RZ ;
Inject count_instr before - Instr 785 @ 0x3110 (12560) - ISETP.NE.AND P0, PT, R5, RZ, PT ;
Inject count_instr before - Instr 787 @ 0x3130 (12592) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x180] ;
Inject count_instr before - Instr 791 @ 0x3170 (12656) - BRA 0x3170;
kernel 274 - _ZN14at_cuda_detail3cub28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIbiiNS0_3SumEE9Policy600ENS0_22TransformInputIteratorIbN2at6native43_GLOBAL__N__e625f313_10_Nonzero_cu_cba1aaa09NonZeroOpIbEEPKblEEPiiS3_iEEvT0_T1_T2_T3_T4_ - #thread-blocks 1,  kernel instructions 950, total instructions 65664543
Function void at_cuda_detail::cub::DeviceCompactInitKernel<at_cuda_detail::cub::ScanTileState<int, true>, int*>(at_cuda_detail::cub::ScanTileState<int, true>, int, int*)
Basic block id 0 - num instructions 18
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R7, SR_TID.X ;
 Instr 2 @ 0x20 (32) - MOV R9, RZ ;
 Instr 3 @ 0x30 (48) - S2R R6, SR_CTAID.X ;
 Instr 4 @ 0x40 (64) - ISETP.GT.U32.AND P0, PT, R7, 0x1f, PT ;
 Instr 5 @ 0x50 (80) - IMAD R0, R6, c[0x0][0x0], R7 ;
 Instr 6 @ 0x60 (96) - ISETP.NE.OR P0, PT, R6.reuse, RZ, P0 ;
 Instr 7 @ 0x70 (112) - LOP3.LUT P2, RZ, R6, R7, RZ, 0xfc, !PT ;
 Instr 8 @ 0x80 (128) - ISETP.GE.AND P1, PT, R0, c[0x0][0x168], PT ;
 Instr 9 @ 0x90 (144) - @!P0 IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 10 @ 0xa0 (160) - @!P1 IADD3 R2, R0, 0x20, RZ ;
 Instr 11 @ 0xb0 (176) - @!P1 IMAD.MOV.U32 R8, RZ, RZ, 0x63 ;
 Instr 12 @ 0xc0 (192) - @!P1 MOV R3, 0x8 ;
 Instr 13 @ 0xd0 (208) - @!P0 IMAD.WIDE.U32 R4, R7, R4, c[0x0][0x160] ;
 Instr 14 @ 0xe0 (224) - @!P1 IMAD.WIDE R2, R2, R3, c[0x0][0x160] ;
 Instr 15 @ 0xf0 (240) - @!P1 STG.E.64.SYS [R2], R8 ;
 Instr 16 @ 0x100 (256) - @!P0 STG.E.64.SYS [R4], RZ ;
 Instr 17 @ 0x110 (272) - @P2 EXIT ;
Basic block id 1 - num instructions 3
 Instr 18 @ 0x120 (288) - ULDC.64 UR4, c[0x0][0x170] ;
 Instr 19 @ 0x130 (304) - STG.E.SYS [UR4], RZ ;
 Instr 20 @ 0x140 (320) - EXIT ;
Basic block id 2 - num instructions 1
 Instr 21 @ 0x150 (336) - BRA 0x150;
inspecting void at_cuda_detail::cub::DeviceCompactInitKernel<at_cuda_detail::cub::ScanTileState<int, true>, int*>(at_cuda_detail::cub::ScanTileState<int, true>, int, int*) - number basic blocks 3
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 18 @ 0x120 (288) - ULDC.64 UR4, c[0x0][0x170] ;
Inject count_instr before - Instr 21 @ 0x150 (336) - BRA 0x150;
kernel 275 - _ZN14at_cuda_detail3cub23DeviceCompactInitKernelINS0_13ScanTileStateIiLb1EEEPiEEvT_iT0_ - #thread-blocks 1,  kernel instructions 75, total instructions 65664618
Function void at_cuda_detail::cub::DeviceSelectSweepKernel<at_cuda_detail::cub::DispatchSelectIf<at_cuda_detail::cub::CountingInputIterator<long, long>, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, long*, int*, at_cuda_detail::cub::NullType, at_cuda_detail::cub::NullType, int, false>::PtxSelectIfPolicyT, at_cuda_detail::cub::CountingInputIterator<long, long>, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, long*, int*, at_cuda_detail::cub::ScanTileState<int, true>, at_cuda_detail::cub::NullType, at_cuda_detail::cub::NullType, int, false>(at_cuda_detail::cub::CountingInputIterator<long, long>, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, long*, int*, at_cuda_detail::cub::ScanTileState<int, true>, at_cuda_detail::cub::NullType, at_cuda_detail::cub::NullType, int, int)
Basic block id 0 - num instructions 32
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R0, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - ULDC UR4, c[0x0][0x198] ;
 Instr 3 @ 0x30 (48) - UIADD3 UR4, UR4, -0x1, URZ ;
 Instr 4 @ 0x40 (64) - S2R R2, SR_CTAID.Y ;
 Instr 5 @ 0x50 (80) - S2R R16, SR_TID.X ;
 Instr 6 @ 0x60 (96) - IMAD R0, R0, c[0x0][0x10], R2 ;
 Instr 7 @ 0x70 (112) - IMAD R17, R0.reuse, 0x280, RZ ;
 Instr 8 @ 0x80 (128) - ISETP.GE.AND P0, PT, R0, UR4, PT ;
 Instr 9 @ 0x90 (144) - IMAD R6, R16, 0x5, RZ ;
 Instr 10 @ 0xa0 (160) - SHF.R.U32.HI R26, RZ, 0x5, R16 ;
 Instr 11 @ 0xb0 (176) - SHF.R.S32.HI R2, RZ, 0x1f, R17.reuse ;
 Instr 12 @ 0xc0 (192) - IADD3 R9, P1, R17, c[0x0][0x160], RZ ;
 Instr 13 @ 0xd0 (208) - SHF.R.S32.HI R3, RZ, 0x1f, R6 ;
 Instr 14 @ 0xe0 (224) - IADD3 R4, P2, P3, R6, c[0x0][0x170], R17 ;
 Instr 15 @ 0xf0 (240) - IADD3 R7, R6.reuse, 0x1, RZ ;
 Instr 16 @ 0x100 (256) - IADD3 R18, R6.reuse, 0x2, RZ ;
 Instr 17 @ 0x110 (272) - IADD3 R19, R6.reuse, 0x3, RZ ;
 Instr 18 @ 0x120 (288) - IADD3 R20, R6, 0x4, RZ ;
 Instr 19 @ 0x130 (304) - IADD3.X R21, R2, c[0x0][0x164], RZ, P1, !PT ;
 Instr 20 @ 0x140 (320) - IADD3 R14, P1, R6, R9, RZ ;
 Instr 21 @ 0x150 (336) - IADD3.X R5, R3, c[0x0][0x174], R2, P2, P3 ;
 Instr 22 @ 0x160 (352) - IADD3 R12, P2, R7, R9.reuse, RZ ;
 Instr 23 @ 0x170 (368) - IMAD.X R15, R3, 0x1, R21, P1 ;
 Instr 24 @ 0x180 (384) - IADD3 R10, P3, R18, R9.reuse, RZ ;
 Instr 25 @ 0x190 (400) - IADD3 R8, P4, R19, R9.reuse, RZ ;
 Instr 26 @ 0x1a0 (416) - IADD3 R2, P5, R20, R9, RZ ;
 Instr 27 @ 0x1b0 (432) - LEA.HI.X.SX32 R13, R7, R21, 0x1, P2 ;
 Instr 28 @ 0x1c0 (448) - LEA.HI.X.SX32 R11, R18, R21.reuse, 0x1, P3 ;
 Instr 29 @ 0x1d0 (464) - LEA.HI.X.SX32 R9, R19, R21.reuse, 0x1, P4 ;
 Instr 30 @ 0x1e0 (480) - LEA.HI.X.SX32 R3, R20, R21, 0x1, P5 ;
 Instr 31 @ 0x1f0 (496) - @!P0 BRA 0x2890 ;
Basic block id 1 - num instructions 6
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 33 @ 0x210 (528) - BMOV.32.CLEAR RZ, B0 ;
 Instr 34 @ 0x220 (544) - BSSY B0, 0x2840 ;
 Instr 35 @ 0x230 (560) - IADD3 R17, -R17, c[0x0][0x194], RZ ;
 Instr 36 @ 0x240 (576) - IMAD.MOV.U32 R23, RZ, RZ, R16 ;
 Instr 37 @ 0x250 (592) - @!P0 BRA 0x1a70 ;
Basic block id 2 - num instructions 58
 Instr 38 @ 0x260 (608) - ISETP.GE.AND P6, PT, R6, R17.reuse, PT ;
 Instr 39 @ 0x270 (624) - BAR.SYNC 0x0 ;
 Instr 40 @ 0x280 (640) - ISETP.GE.AND P0, PT, R18, R17.reuse, PT ;
 Instr 41 @ 0x290 (656) - ISETP.GE.AND P3, PT, R19, R17.reuse, PT ;
 Instr 42 @ 0x2a0 (672) - ISETP.GE.AND P2, PT, R7, R17, PT ;
 Instr 43 @ 0x2b0 (688) - @!P6 LDG.E.U8.SYS R18, [R4] ;
 Instr 44 @ 0x2c0 (704) - ISETP.GE.AND P1, PT, R20, R17, PT ;
 Instr 45 @ 0x2d0 (720) - @!P0 LDG.E.U8.SYS R7, [R4+0x2] ;
 Instr 46 @ 0x2e0 (736) - @!P3 LDG.E.U8.SYS R20, [R4+0x3] ;
 Instr 47 @ 0x2f0 (752) - @!P2 LDG.E.U8.SYS R6, [R4+0x1] ;
 Instr 48 @ 0x300 (768) - @!P1 LDG.E.U8.SYS R4, [R4+0x4] ;
 Instr 49 @ 0x310 (784) - IMAD.MOV.U32 R19, RZ, RZ, 0x1 ;
 Instr 50 @ 0x320 (800) - IMAD.MOV.U32 R21, RZ, RZ, 0x1 ;
 Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R22, RZ, RZ, 0x1 ;
 Instr 52 @ 0x340 (832) - S2R R25, SR_LANEID ;
 Instr 53 @ 0x350 (848) - BAR.SYNC 0x0 ;
 Instr 54 @ 0x360 (864) - @!P6 ISETP.NE.AND P5, PT, R18, RZ, PT ;
 Instr 55 @ 0x370 (880) - IMAD.MOV.U32 R18, RZ, RZ, 0x1 ;
 Instr 56 @ 0x380 (896) - @!P6 SEL R18, RZ, 0x1, !P5 ;
 Instr 57 @ 0x390 (912) - @!P0 ISETP.NE.AND P6, PT, R7, RZ, PT ;
 Instr 58 @ 0x3a0 (928) - @!P3 ISETP.NE.AND P5, PT, R20, RZ, PT ;
 Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R20, RZ, RZ, 0x1 ;
 Instr 60 @ 0x3c0 (960) - @!P2 ISETP.NE.AND P4, PT, R6, RZ, PT ;
 Instr 61 @ 0x3d0 (976) - @!P2 SEL R19, RZ, 0x1, !P4 ;
 Instr 62 @ 0x3e0 (992) - @!P0 SEL R20, RZ, 0x1, !P6 ;
 Instr 63 @ 0x3f0 (1008) - @!P1 ISETP.NE.AND P2, PT, R4, RZ, PT ;
 Instr 64 @ 0x400 (1024) - @!P3 SEL R21, RZ, 0x1, !P5 ;
 Instr 65 @ 0x410 (1040) - @!P1 SEL R22, RZ, 0x1, !P2 ;
 Instr 66 @ 0x420 (1056) - IADD3 R4, R20, R19, R18 ;
 Instr 67 @ 0x430 (1072) - IADD3 R27, R22, R21, R4 ;
 Instr 68 @ 0x440 (1088) - SHFL.UP P0, R4, R27, 0x1, RZ ;
 Instr 69 @ 0x450 (1104) - @P0 IMAD.IADD R4, R27, 0x1, R4 ;
 Instr 70 @ 0x460 (1120) - SHFL.UP P0, R5, R4, 0x2, RZ ;
 Instr 71 @ 0x470 (1136) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 72 @ 0x480 (1152) - SHFL.UP P0, R4, R5, 0x4, RZ ;
 Instr 73 @ 0x490 (1168) - @P0 IMAD.IADD R4, R5, 0x1, R4 ;
 Instr 74 @ 0x4a0 (1184) - SHFL.UP P0, R5, R4, 0x8, RZ ;
 Instr 75 @ 0x4b0 (1200) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 76 @ 0x4c0 (1216) - SHFL.UP P1, R24, R5, 0x10, RZ ;
 Instr 77 @ 0x4d0 (1232) - ISETP.NE.AND P0, PT, R25, 0x1f, PT ;
 Instr 78 @ 0x4e0 (1248) - @P1 IMAD.IADD R24, R5, 0x1, R24 ;
 Instr 79 @ 0x4f0 (1264) - @!P0 STS [R26.X4], R24 ;
 Instr 80 @ 0x500 (1280) - BAR.SYNC 0x0 ;
 Instr 81 @ 0x510 (1296) - LDS.U.128 R4, [RZ] ;
 Instr 82 @ 0x520 (1312) - ISETP.NE.AND P0, PT, R26, 0x2, PT ;
 Instr 83 @ 0x530 (1328) - ISETP.NE.AND P3, PT, R26.reuse, RZ, PT ;
 Instr 84 @ 0x540 (1344) - ISETP.NE.AND P2, PT, R26, RZ, PT ;
 Instr 85 @ 0x550 (1360) - IMAD.IADD R24, R24, 0x1, -R27 ;
 Instr 86 @ 0x560 (1376) - ISETP.NE.AND P1, PT, R25, RZ, PT ;
 Instr 87 @ 0x570 (1392) - IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 88 @ 0x580 (1408) - IMAD.IADD R6, R5.reuse, 0x1, R6 ;
 Instr 89 @ 0x590 (1424) - SEL R4, R5, R4, !P0 ;
 Instr 90 @ 0x5a0 (1440) - ISETP.NE.AND P0, PT, R26, 0x3, PT ;
 Instr 91 @ 0x5b0 (1456) - SEL R5, R24, RZ, P1 ;
 Instr 92 @ 0x5c0 (1472) - SEL R4, R6, R4, !P0 ;
 Instr 93 @ 0x5d0 (1488) - IMAD.IADD R7, R7, 0x1, R6 ;
 Instr 94 @ 0x5e0 (1504) - @P2 IMAD.IADD R24, R4, 0x1, R5 ;
 Instr 95 @ 0x5f0 (1520) - @P3 BRA 0xef0 ;
Basic block id 3 - num instructions 10
 Instr 96 @ 0x600 (1536) - ISETP.NE.AND P0, PT, R23, RZ, PT ;
 Instr 97 @ 0x610 (1552) - IMAD.MOV.U32 R26, RZ, RZ, 0x8 ;
 Instr 98 @ 0x620 (1568) - LOP3.LUT R16, RZ, R23, RZ, 0x33, !PT ;
 Instr 99 @ 0x630 (1584) - BMOV.32.CLEAR RZ, B1 ;
 Instr 100 @ 0x640 (1600) - BSSY B1, 0x790 ;
 Instr 101 @ 0x650 (1616) - IMAD.IADD R16, R0, 0x1, R16 ;
 Instr 102 @ 0x660 (1632) - @!P0 IMAD.WIDE R4, R0, R26.reuse, c[0x0][0x188] ;
 Instr 103 @ 0x670 (1648) - @!P0 STS [0x2c], R7 ;
 Instr 104 @ 0x680 (1664) - @!P0 IMAD.MOV.U32 R6, RZ, RZ, 0x64 ;
 Instr 105 @ 0x690 (1680) - IMAD.WIDE R26, R16, R26, c[0x0][0x188] ;
Basic block id 4 - num instructions 1
 Instr 106 @ 0x6a0 (1696) - @!P0 ST.E.64.STRONG.GPU [R4+0x100], R6 ;
Basic block id 5 - num instructions 4
 Instr 107 @ 0x6b0 (1712) - MEMBAR.SC.CTA ;
 Instr 108 @ 0x6c0 (1728) - LD.E.64.STRONG.GPU R30, [R26+0x100] ;
 Instr 109 @ 0x6d0 (1744) - ISETP.NE.AND P0, PT, R30, 0x63, PT ;
 Instr 110 @ 0x6e0 (1760) - BRA.DIV 0x4cf0 ;
Basic block id 6 - num instructions 2
 Instr 111 @ 0x6f0 (1776) - VOTE.ANY R4, PT, !P0 ;
 Instr 112 @ 0x700 (1792) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
Basic block id 7 - num instructions 1
 Instr 113 @ 0x710 (1808) - @!P0 BRA 0x780 ;
Basic block id 8 - num instructions 5
 Instr 114 @ 0x720 (1824) - VOTE.ANY R4, PT, PT ;
 Instr 115 @ 0x730 (1840) - YIELD ;
 Instr 116 @ 0x740 (1856) - VOTEU.ANY UR4, UPT, PT ;
 Instr 117 @ 0x750 (1872) - LOP3.LUT P0, RZ, R4, UR4, RZ, 0xc, !PT ;
 Instr 118 @ 0x760 (1888) - @!P0 BRA.U 0x6b0 ;
Basic block id 9 - num instructions 1
 Instr 119 @ 0x770 (1904) - BRA 0x720 ;
Basic block id 10 - num instructions 4
 Instr 120 @ 0x780 (1920) - BSYNC B1 ;
 Instr 121 @ 0x790 (1936) - S2R R23, SR_LANEID ;
 Instr 122 @ 0x7a0 (1952) - ISETP.NE.AND P0, PT, R30, 0x65, PT ;
 Instr 123 @ 0x7b0 (1968) - BRA.DIV 0x4d50 ;
Basic block id 11 - num instructions 35
 Instr 124 @ 0x7c0 (1984) - S2R R5, SR_GEMASK ;
 Instr 125 @ 0x7d0 (2000) - VOTE.ANY R4, PT, !P0 ;
 Instr 126 @ 0x7e0 (2016) - VOTEU.ANY UR4, UPT, PT ;
 Instr 127 @ 0x7f0 (2032) - IADD3 R26, R23.reuse, 0x2, RZ ;
 Instr 128 @ 0x800 (2048) - IADD3 R27, R23, 0x10, RZ ;
 Instr 129 @ 0x810 (2064) - LOP3.LUT R4, R4, 0x80000000, R5, 0xec, !PT ;
 Instr 130 @ 0x820 (2080) - BREV R4, R4 ;
 Instr 131 @ 0x830 (2096) - FLO.U32 R4, R4 ;
 Instr 132 @ 0x840 (2112) - IADD3 R4, -R4, 0x1f, RZ ;
 Instr 133 @ 0x850 (2128) - ISETP.GE.AND P0, PT, R23, R4, PT ;
 Instr 134 @ 0x860 (2144) - SHFL.DOWN PT, R5, R31, 0x1, R4 ;
 Instr 135 @ 0x870 (2160) - SEL R5, R5, RZ, !P0 ;
 Instr 136 @ 0x880 (2176) - ISETP.GT.AND P0, PT, R26, R4, PT ;
 Instr 137 @ 0x890 (2192) - IADD3 R26, R23, 0x4, RZ ;
 Instr 138 @ 0x8a0 (2208) - IMAD.IADD R5, R31, 0x1, R5 ;
 Instr 139 @ 0x8b0 (2224) - SHFL.DOWN PT, R25, R5, 0x2, R4 ;
 Instr 140 @ 0x8c0 (2240) - SEL R25, R25, RZ, !P0 ;
 Instr 141 @ 0x8d0 (2256) - ISETP.GT.AND P0, PT, R26, R4, PT ;
 Instr 142 @ 0x8e0 (2272) - IADD3 R26, R23, 0x8, RZ ;
 Instr 143 @ 0x8f0 (2288) - IMAD.IADD R25, R5, 0x1, R25 ;
 Instr 144 @ 0x900 (2304) - SHFL.DOWN PT, R5, R25, 0x4, R4 ;
 Instr 145 @ 0x910 (2320) - SEL R5, R5, RZ, !P0 ;
 Instr 146 @ 0x920 (2336) - ISETP.GT.AND P0, PT, R26, R4, PT ;
 Instr 147 @ 0x930 (2352) - IMAD.IADD R5, R25, 0x1, R5 ;
 Instr 148 @ 0x940 (2368) - SHFL.DOWN PT, R25, R5, 0x8, R4 ;
 Instr 149 @ 0x950 (2384) - SEL R25, R25, RZ, !P0 ;
 Instr 150 @ 0x960 (2400) - ISETP.NE.AND P0, PT, R30, 0x65, PT ;
 Instr 151 @ 0x970 (2416) - IMAD.IADD R25, R5, 0x1, R25 ;
 Instr 152 @ 0x980 (2432) - SHFL.DOWN PT, R5, R25, 0x10, R4 ;
 Instr 153 @ 0x990 (2448) - VOTE.ANY R26, PT, P0 ;
 Instr 154 @ 0x9a0 (2464) - ISETP.GT.AND P0, PT, R27, R4, PT ;
 Instr 155 @ 0x9b0 (2480) - LOP3.LUT R26, R26, UR4, RZ, 0xc0, !PT ;
 Instr 156 @ 0x9c0 (2496) - ISETP.EQ.U32.AND P1, PT, R26, UR4, PT ;
 Instr 157 @ 0x9d0 (2512) - SEL R5, R5, RZ, !P0 ;
 Instr 158 @ 0x9e0 (2528) - IMAD.IADD R25, R25, 0x1, R5 ;
Basic block id 12 - num instructions 3
 Instr 159 @ 0x9f0 (2544) - BMOV.32.CLEAR RZ, B1 ;
 Instr 160 @ 0xa00 (2560) - BSSY B1, 0xe30 ;
 Instr 161 @ 0xa10 (2576) - @!P1 BRA 0xe20 ;
Basic block id 13 - num instructions 2
 Instr 162 @ 0xa20 (2592) - S2R R23, SR_LANEID ;
 Instr 163 @ 0xa30 (2608) - S2R R26, SR_GEMASK ;
Basic block id 14 - num instructions 5
 Instr 164 @ 0xa40 (2624) - IADD3 R16, R16, -0x20, RZ ;
 Instr 165 @ 0xa50 (2640) - IMAD.MOV.U32 R28, RZ, RZ, 0x8 ;
 Instr 166 @ 0xa60 (2656) - BMOV.32.CLEAR RZ, B2 ;
 Instr 167 @ 0xa70 (2672) - BSSY B2, 0xb70 ;
 Instr 168 @ 0xa80 (2688) - IMAD.WIDE R28, R16, R28, c[0x0][0x188] ;
Basic block id 15 - num instructions 4
 Instr 169 @ 0xa90 (2704) - MEMBAR.SC.CTA ;
 Instr 170 @ 0xaa0 (2720) - LD.E.64.STRONG.GPU R30, [R28+0x100] ;
 Instr 171 @ 0xab0 (2736) - ISETP.NE.AND P0, PT, R30, 0x63, PT ;
 Instr 172 @ 0xac0 (2752) - BRA.DIV 0x5110 ;
Basic block id 16 - num instructions 2
 Instr 173 @ 0xad0 (2768) - VOTE.ANY R4, PT, !P0 ;
 Instr 174 @ 0xae0 (2784) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
Basic block id 17 - num instructions 1
 Instr 175 @ 0xaf0 (2800) - @!P0 BRA 0xb60 ;
Basic block id 18 - num instructions 5
 Instr 176 @ 0xb00 (2816) - VOTE.ANY R4, PT, PT ;
 Instr 177 @ 0xb10 (2832) - YIELD ;
 Instr 178 @ 0xb20 (2848) - VOTEU.ANY UR4, UPT, PT ;
 Instr 179 @ 0xb30 (2864) - LOP3.LUT P0, RZ, R4, UR4, RZ, 0xc, !PT ;
 Instr 180 @ 0xb40 (2880) - @!P0 BRA.U 0xa90 ;
Basic block id 19 - num instructions 1
 Instr 181 @ 0xb50 (2896) - BRA 0xb00 ;
Basic block id 20 - num instructions 3
 Instr 182 @ 0xb60 (2912) - BSYNC B2 ;
 Instr 183 @ 0xb70 (2928) - ISETP.NE.AND P0, PT, R30, 0x65, PT ;
 Instr 184 @ 0xb80 (2944) - BRA.DIV 0x5170 ;
Basic block id 21 - num instructions 34
 Instr 185 @ 0xb90 (2960) - VOTE.ANY R4, PT, !P0 ;
 Instr 186 @ 0xba0 (2976) - VOTEU.ANY UR4, UPT, PT ;
 Instr 187 @ 0xbb0 (2992) - IADD3 R28, R23.reuse, 0x2, RZ ;
 Instr 188 @ 0xbc0 (3008) - LOP3.LUT R4, R4, 0x80000000, R26, 0xec, !PT ;
 Instr 189 @ 0xbd0 (3024) - IADD3 R29, R23, 0x10, RZ ;
 Instr 190 @ 0xbe0 (3040) - BREV R4, R4 ;
 Instr 191 @ 0xbf0 (3056) - FLO.U32 R4, R4 ;
 Instr 192 @ 0xc00 (3072) - IADD3 R4, -R4, 0x1f, RZ ;
 Instr 193 @ 0xc10 (3088) - ISETP.GE.AND P0, PT, R23, R4, PT ;
 Instr 194 @ 0xc20 (3104) - SHFL.DOWN PT, R5, R31, 0x1, R4 ;
 Instr 195 @ 0xc30 (3120) - SEL R5, R5, RZ, !P0 ;
 Instr 196 @ 0xc40 (3136) - ISETP.GT.AND P0, PT, R28, R4, PT ;
 Instr 197 @ 0xc50 (3152) - IADD3 R28, R23, 0x4, RZ ;
 Instr 198 @ 0xc60 (3168) - IMAD.IADD R5, R31, 0x1, R5 ;
 Instr 199 @ 0xc70 (3184) - SHFL.DOWN PT, R27, R5, 0x2, R4 ;
 Instr 200 @ 0xc80 (3200) - SEL R27, R27, RZ, !P0 ;
 Instr 201 @ 0xc90 (3216) - ISETP.GT.AND P0, PT, R28, R4, PT ;
 Instr 202 @ 0xca0 (3232) - IADD3 R28, R23, 0x8, RZ ;
 Instr 203 @ 0xcb0 (3248) - IMAD.IADD R27, R5, 0x1, R27 ;
 Instr 204 @ 0xcc0 (3264) - SHFL.DOWN PT, R5, R27, 0x4, R4 ;
 Instr 205 @ 0xcd0 (3280) - SEL R5, R5, RZ, !P0 ;
 Instr 206 @ 0xce0 (3296) - ISETP.GT.AND P0, PT, R28, R4, PT ;
 Instr 207 @ 0xcf0 (3312) - IMAD.IADD R5, R27, 0x1, R5 ;
 Instr 208 @ 0xd00 (3328) - SHFL.DOWN PT, R27, R5, 0x8, R4 ;
 Instr 209 @ 0xd10 (3344) - SEL R27, R27, RZ, !P0 ;
 Instr 210 @ 0xd20 (3360) - ISETP.NE.AND P0, PT, R30, 0x65, PT ;
 Instr 211 @ 0xd30 (3376) - IMAD.IADD R27, R5, 0x1, R27 ;
 Instr 212 @ 0xd40 (3392) - SHFL.DOWN PT, R5, R27, 0x10, R4 ;
 Instr 213 @ 0xd50 (3408) - VOTE.ANY R28, PT, P0 ;
 Instr 214 @ 0xd60 (3424) - ISETP.GT.AND P0, PT, R29, R4, PT ;
 Instr 215 @ 0xd70 (3440) - LOP3.LUT R28, R28, UR4, RZ, 0xc0, !PT ;
 Instr 216 @ 0xd80 (3456) - ISETP.EQ.U32.AND P1, PT, R28, UR4, PT ;
 Instr 217 @ 0xd90 (3472) - SEL R5, R5, RZ, !P0 ;
 Instr 218 @ 0xda0 (3488) - IADD3 R25, R27, R5, R25 ;
Basic block id 22 - num instructions 1
 Instr 219 @ 0xdb0 (3504) - @!P1 BRA 0xe20 ;
Basic block id 23 - num instructions 5
 Instr 220 @ 0xdc0 (3520) - VOTE.ANY R4, PT, PT ;
 Instr 221 @ 0xdd0 (3536) - YIELD ;
 Instr 222 @ 0xde0 (3552) - VOTEU.ANY UR4, UPT, PT ;
 Instr 223 @ 0xdf0 (3568) - LOP3.LUT P0, RZ, R4, UR4, RZ, 0xc, !PT ;
 Instr 224 @ 0xe00 (3584) - @!P0 BRA.U 0xa40 ;
Basic block id 24 - num instructions 1
 Instr 225 @ 0xe10 (3600) - BRA 0xdc0 ;
Basic block id 25 - num instructions 13
 Instr 226 @ 0xe20 (3616) - BSYNC B1 ;
 Instr 227 @ 0xe30 (3632) - S2R R16, SR_TID.X ;
 Instr 228 @ 0xe40 (3648) - ISETP.NE.AND P1, PT, R23, RZ, PT ;
 Instr 229 @ 0xe50 (3664) - @!P1 IMAD.MOV.U32 R24, RZ, RZ, R25 ;
 Instr 230 @ 0xe60 (3680) - ISETP.NE.AND P0, PT, R16, RZ, PT ;
 Instr 231 @ 0xe70 (3696) - @!P0 IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 232 @ 0xe80 (3712) - @!P0 IMAD.IADD R7, R7, 0x1, R25 ;
 Instr 233 @ 0xe90 (3728) - @!P0 IMAD.WIDE R4, R0, R4, c[0x0][0x188] ;
 Instr 234 @ 0xea0 (3744) - @!P0 IMAD.MOV.U32 R6, RZ, RZ, 0x65 ;
 Instr 235 @ 0xeb0 (3760) - @!P0 ST.E.64.STRONG.GPU [R4+0x100], R6 ;
 Instr 236 @ 0xec0 (3776) - @!P0 STS [0x28], R7 ;
 Instr 237 @ 0xed0 (3792) - @!P0 STS [0x24], R25 ;
 Instr 238 @ 0xee0 (3808) - @!P1 STS [0x14], R25 ;
Basic block id 26 - num instructions 17
 Instr 239 @ 0xef0 (3824) - WARPSYNC 0xffffffff ;
 Instr 240 @ 0xf00 (3840) - BAR.SYNC 0x0 ;
 Instr 241 @ 0xf10 (3856) - LDS.U R23, [0x14] ;
 Instr 242 @ 0xf20 (3872) - ISETP.NE.AND P0, PT, R16, RZ, PT ;
 Instr 243 @ 0xf30 (3888) - IADD3 R17, -R17, 0x280, RZ ;
 Instr 244 @ 0xf40 (3904) - LDS.U.128 R4, [0x20] ;
 Instr 245 @ 0xf50 (3920) - SEL R23, R23, RZ, P0 ;
 Instr 246 @ 0xf60 (3936) - IMAD.IADD R4, R7, 0x1, -R17.reuse ;
 Instr 247 @ 0xf70 (3952) - IMAD.IADD R23, R23, 0x1, R24 ;
 Instr 248 @ 0xf80 (3968) - IMAD.IADD R6, R6, 0x1, -R17 ;
 Instr 249 @ 0xf90 (3984) - ISETP.GT.AND P0, PT, R4, 0x80, PT ;
 Instr 250 @ 0xfa0 (4000) - IMAD.IADD R24, R23, 0x1, R18 ;
 Instr 251 @ 0xfb0 (4016) - IMAD.MOV.U32 R17, RZ, RZ, R16 ;
 Instr 252 @ 0xfc0 (4032) - IMAD.IADD R25, R24, 0x1, R19 ;
 Instr 253 @ 0xfd0 (4048) - IMAD.IADD R26, R25, 0x1, R20 ;
 Instr 254 @ 0xfe0 (4064) - IMAD.IADD R27, R26, 0x1, R21 ;
 Instr 255 @ 0xff0 (4080) - @P0 BRA 0x11b0 ;
Basic block id 27 - num instructions 23
 Instr 256 @ 0x1000 (4096) - ISETP.NE.AND P0, PT, R18, RZ, PT ;
 Instr 257 @ 0x1010 (4112) - ISETP.GE.AND P1, PT, R24, R6.reuse, PT ;
 Instr 258 @ 0x1020 (4128) - ISETP.GE.AND P2, PT, R25, R6.reuse, PT ;
 Instr 259 @ 0x1030 (4144) - ISETP.GE.AND P3, PT, R26, R6.reuse, PT ;
 Instr 260 @ 0x1040 (4160) - ISETP.GE.OR P0, PT, R23, R6, !P0 ;
 Instr 261 @ 0x1050 (4176) - ISETP.EQ.OR P1, PT, R19, RZ, P1 ;
 Instr 262 @ 0x1060 (4192) - ISETP.EQ.OR P2, PT, R20, RZ, P2 ;
 Instr 263 @ 0x1070 (4208) - ISETP.EQ.OR P3, PT, R21, RZ, P3 ;
 Instr 264 @ 0x1080 (4224) - @!P0 IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 265 @ 0x1090 (4240) - @!P1 IMAD.MOV.U32 R18, RZ, RZ, 0x8 ;
 Instr 266 @ 0x10a0 (4256) - @!P2 IMAD.MOV.U32 R20, RZ, RZ, 0x8 ;
 Instr 267 @ 0x10b0 (4272) - @!P3 IMAD.MOV.U32 R0, RZ, RZ, 0x8 ;
 Instr 268 @ 0x10c0 (4288) - @!P0 IMAD.WIDE R4, R23, R4, c[0x0][0x178] ;
 Instr 269 @ 0x10d0 (4304) - @!P1 IMAD.WIDE R18, R24, R18, c[0x0][0x178] ;
 Instr 270 @ 0x10e0 (4320) - @!P2 IMAD.WIDE R20, R25, R20, c[0x0][0x178] ;
 Instr 271 @ 0x10f0 (4336) - @!P0 STG.E.64.SYS [R4], R14 ;
 Instr 272 @ 0x1100 (4352) - ISETP.GE.AND P0, PT, R27, R6, PT ;
 Instr 273 @ 0x1110 (4368) - @!P3 IMAD.WIDE R24, R26, R0, c[0x0][0x178] ;
 Instr 274 @ 0x1120 (4384) - @!P1 STG.E.64.SYS [R18], R12 ;
 Instr 275 @ 0x1130 (4400) - ISETP.EQ.OR P0, PT, R22, RZ, P0 ;
 Instr 276 @ 0x1140 (4416) - @!P2 STG.E.64.SYS [R20], R10 ;
 Instr 277 @ 0x1150 (4432) - @!P3 STG.E.64.SYS [R24], R8 ;
 Instr 278 @ 0x1160 (4448) - @P0 BRA 0x2830 ;
Basic block id 28 - num instructions 4
 Instr 279 @ 0x1170 (4464) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 280 @ 0x1180 (4480) - IMAD.WIDE R4, R27, R4, c[0x0][0x178] ;
 Instr 281 @ 0x1190 (4496) - STG.E.64.SYS [R4], R2 ;
 Instr 282 @ 0x11a0 (4512) - BRA 0x2830 ;
Basic block id 29 - num instructions 19
 Instr 283 @ 0x11b0 (4528) - BAR.SYNC 0x0 ;
 Instr 284 @ 0x11c0 (4544) - ISETP.NE.AND P4, PT, R18, RZ, PT ;
 Instr 285 @ 0x11d0 (4560) - ISETP.NE.AND P0, PT, R19, RZ, PT ;
 Instr 286 @ 0x11e0 (4576) - ISETP.NE.AND P1, PT, R20, RZ, PT ;
 Instr 287 @ 0x11f0 (4592) - ISETP.NE.AND P2, PT, R21, RZ, PT ;
 Instr 288 @ 0x1200 (4608) - ISETP.NE.AND P3, PT, R22, RZ, PT ;
 Instr 289 @ 0x1210 (4624) - @P4 IMAD.IADD R18, R23, 0x1, -R5.reuse ;
 Instr 290 @ 0x1220 (4640) - @P0 IMAD.IADD R19, R24, 0x1, -R5.reuse ;
 Instr 291 @ 0x1230 (4656) - @P1 IMAD.IADD R20, R25, 0x1, -R5.reuse ;
 Instr 292 @ 0x1240 (4672) - @P2 IMAD.IADD R21, R26, 0x1, -R5.reuse ;
 Instr 293 @ 0x1250 (4688) - @P4 STS.64 [R18.X8], R14 ;
 Instr 294 @ 0x1260 (4704) - @P3 IMAD.IADD R22, R27, 0x1, -R5 ;
 Instr 295 @ 0x1270 (4720) - @P0 STS.64 [R19.X8], R12 ;
 Instr 296 @ 0x1280 (4736) - ISETP.GE.AND P0, PT, R17, R4, PT ;
 Instr 297 @ 0x1290 (4752) - @P1 STS.64 [R20.X8], R10 ;
 Instr 298 @ 0x12a0 (4768) - @P2 STS.64 [R21.X8], R8 ;
 Instr 299 @ 0x12b0 (4784) - @P3 STS.64 [R22.X8], R2 ;
 Instr 300 @ 0x12c0 (4800) - BAR.SYNC 0x0 ;
 Instr 301 @ 0x12d0 (4816) - @P0 BRA 0x2830 ;
Basic block id 30 - num instructions 9
 Instr 302 @ 0x12e0 (4832) - IADD3 R7, R7, c[0x0][0x194], RZ ;
 Instr 303 @ 0x12f0 (4848) - BMOV.32.CLEAR RZ, B1 ;
 Instr 304 @ 0x1300 (4864) - BSSY B1, 0x1490 ;
 Instr 305 @ 0x1310 (4880) - IADD3 R7, -R17, -0x281, R7 ;
 Instr 306 @ 0x1320 (4896) - IMAD R7, R0, -0x280, R7 ;
 Instr 307 @ 0x1330 (4912) - LEA.HI R0, R7.reuse, 0x1, RZ, 0x19 ;
 Instr 308 @ 0x1340 (4928) - ISETP.GE.U32.AND P1, PT, R7, 0x180, PT ;
 Instr 309 @ 0x1350 (4944) - LOP3.LUT R0, R0, 0x3, RZ, 0xc0, !PT ;
 Instr 310 @ 0x1360 (4960) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
Basic block id 31 - num instructions 1
 Instr 311 @ 0x1370 (4976) - @!P0 BRA 0x1480 ;
Basic block id 32 - num instructions 7
 Instr 312 @ 0x1380 (4992) - IMAD.IADD R2, R16.reuse, 0x1, R5 ;
 Instr 313 @ 0x1390 (5008) - IMAD.MOV.U32 R3, RZ, RZ, 0x8 ;
 Instr 314 @ 0x13a0 (5024) - IMAD.SHL.U32 R7, R16, 0x8, RZ ;
 Instr 315 @ 0x13b0 (5040) - IMAD.WIDE R2, R2, R3, c[0x0][0x178] ;
 Instr 316 @ 0x13c0 (5056) - IMAD.MOV.U32 R8, RZ, RZ, R2 ;
 Instr 317 @ 0x13d0 (5072) - IMAD.MOV.U32 R9, RZ, RZ, R3 ;
 Instr 318 @ 0x13e0 (5088) - IMAD.MOV.U32 R17, RZ, RZ, R16 ;
Basic block id 33 - num instructions 9
 Instr 319 @ 0x13f0 (5104) - LDS.U.64 R2, [R7] ;
 Instr 320 @ 0x1400 (5120) - IADD3 R0, R0, -0x1, RZ ;
 Instr 321 @ 0x1410 (5136) - IADD3 R17, R17, 0x80, RZ ;
 Instr 322 @ 0x1420 (5152) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 323 @ 0x1430 (5168) - IADD3 R7, R7, 0x400, RZ ;
 Instr 324 @ 0x1440 (5184) - STG.E.64.SYS [R8], R2 ;
 Instr 325 @ 0x1450 (5200) - IADD3 R8, P2, R8, 0x400, RZ ;
 Instr 326 @ 0x1460 (5216) - IMAD.X R9, RZ, RZ, R9, P2 ;
 Instr 327 @ 0x1470 (5232) - @P0 BRA 0x13f0 ;
Basic block id 34 - num instructions 2
 Instr 328 @ 0x1480 (5248) - BSYNC B1 ;
 Instr 329 @ 0x1490 (5264) - @!P1 BRA 0x2830 ;
Basic block id 35 - num instructions 12
 Instr 330 @ 0x14a0 (5280) - IMAD.IADD R0, R4, 0x1, -R17 ;
 Instr 331 @ 0x14b0 (5296) - BMOV.32.CLEAR RZ, B1 ;
 Instr 332 @ 0x14c0 (5312) - IMAD.IADD R2, R17.reuse, 0x1, R5 ;
 Instr 333 @ 0x14d0 (5328) - BSSY B1, 0x1810 ;
 Instr 334 @ 0x14e0 (5344) - IMAD.MOV.U32 R3, RZ, RZ, 0x8 ;
 Instr 335 @ 0x14f0 (5360) - ISETP.GT.AND P1, PT, R0, 0x600, PT ;
 Instr 336 @ 0x1500 (5376) - LEA R0, R17, 0x800, 0x3 ;
 Instr 337 @ 0x1510 (5392) - IMAD.WIDE R2, R2, R3, c[0x0][0x178] ;
 Instr 338 @ 0x1520 (5408) - IADD3 R2, P0, R2, 0x800, RZ ;
 Instr 339 @ 0x1530 (5424) - IMAD.X R3, RZ, RZ, R3, P0 ;
 Instr 340 @ 0x1540 (5440) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 341 @ 0x1550 (5456) - @!P1 BRA 0x1800 ;
Basic block id 36 - num instructions 2
 Instr 342 @ 0x1560 (5472) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 343 @ 0x1570 (5488) - IADD3 R5, R4, -0x600, RZ ;
Basic block id 37 - num instructions 40
 Instr 344 @ 0x1580 (5504) - LDS.U.64 R8, [R0+-0x800] ;
 Instr 345 @ 0x1590 (5520) - IADD3 R17, R17, 0x800, RZ ;
 Instr 346 @ 0x15a0 (5536) - IADD3 R7, P2, R2, 0x4000, RZ ;
 Instr 347 @ 0x15b0 (5552) - LDS.U.64 R10, [R0+-0x400] ;
 Instr 348 @ 0x15c0 (5568) - ISETP.GE.AND P1, PT, R17, R5, PT ;
 Instr 349 @ 0x15d0 (5584) - LDS.U.64 R12, [R0] ;
 Instr 350 @ 0x15e0 (5600) - LDS.U.64 R14, [R0+0x400] ;
 Instr 351 @ 0x15f0 (5616) - LDS.U.64 R18, [R0+0x800] ;
 Instr 352 @ 0x1600 (5632) - LDS.U.64 R20, [R0+0xc00] ;
 Instr 353 @ 0x1610 (5648) - LDS.U.64 R22, [R0+0x1000] ;
 Instr 354 @ 0x1620 (5664) - LDS.U.64 R24, [R0+0x1400] ;
 Instr 355 @ 0x1630 (5680) - LDS.U.64 R26, [R0+0x1800] ;
 Instr 356 @ 0x1640 (5696) - LDS.U.64 R28, [R0+0x1c00] ;
 Instr 357 @ 0x1650 (5712) - LDS.U.64 R30, [R0+0x2000] ;
 Instr 358 @ 0x1660 (5728) - LDS.U.64 R32, [R0+0x2400] ;
 Instr 359 @ 0x1670 (5744) - LDS.U.64 R34, [R0+0x2800] ;
 Instr 360 @ 0x1680 (5760) - LDS.U.64 R36, [R0+0x2c00] ;
 Instr 361 @ 0x1690 (5776) - LDS.U.64 R38, [R0+0x3000] ;
 Instr 362 @ 0x16a0 (5792) - LDS.U.64 R40, [R0+0x3400] ;
 Instr 363 @ 0x16b0 (5808) - STG.E.64.SYS [R2+-0x800], R8 ;
 Instr 364 @ 0x16c0 (5824) - IADD3 R0, R0, 0x4000, RZ ;
 Instr 365 @ 0x16d0 (5840) - STG.E.64.SYS [R2+-0x400], R10 ;
 Instr 366 @ 0x16e0 (5856) - STG.E.64.SYS [R2], R12 ;
 Instr 367 @ 0x16f0 (5872) - STG.E.64.SYS [R2+0x400], R14 ;
 Instr 368 @ 0x1700 (5888) - IMAD.X R8, RZ, RZ, R3, P2 ;
 Instr 369 @ 0x1710 (5904) - STG.E.64.SYS [R2+0x800], R18 ;
 Instr 370 @ 0x1720 (5920) - STG.E.64.SYS [R2+0xc00], R20 ;
 Instr 371 @ 0x1730 (5936) - STG.E.64.SYS [R2+0x1000], R22 ;
 Instr 372 @ 0x1740 (5952) - STG.E.64.SYS [R2+0x1400], R24 ;
 Instr 373 @ 0x1750 (5968) - STG.E.64.SYS [R2+0x1800], R26 ;
 Instr 374 @ 0x1760 (5984) - STG.E.64.SYS [R2+0x1c00], R28 ;
 Instr 375 @ 0x1770 (6000) - STG.E.64.SYS [R2+0x2000], R30 ;
 Instr 376 @ 0x1780 (6016) - STG.E.64.SYS [R2+0x2400], R32 ;
 Instr 377 @ 0x1790 (6032) - STG.E.64.SYS [R2+0x2800], R34 ;
 Instr 378 @ 0x17a0 (6048) - STG.E.64.SYS [R2+0x2c00], R36 ;
 Instr 379 @ 0x17b0 (6064) - STG.E.64.SYS [R2+0x3000], R38 ;
 Instr 380 @ 0x17c0 (6080) - STG.E.64.SYS [R2+0x3400], R40 ;
 Instr 381 @ 0x17d0 (6096) - IMAD.MOV.U32 R2, RZ, RZ, R7 ;
 Instr 382 @ 0x17e0 (6112) - IMAD.MOV.U32 R3, RZ, RZ, R8 ;
 Instr 383 @ 0x17f0 (6128) - @!P1 BRA 0x1580 ;
Basic block id 38 - num instructions 6
 Instr 384 @ 0x1800 (6144) - BSYNC B1 ;
 Instr 385 @ 0x1810 (6160) - IMAD.IADD R5, R4, 0x1, -R17 ;
 Instr 386 @ 0x1820 (6176) - BMOV.32.CLEAR RZ, B1 ;
 Instr 387 @ 0x1830 (6192) - BSSY B1, 0x19c0 ;
 Instr 388 @ 0x1840 (6208) - ISETP.GT.AND P1, PT, R5, 0x200, PT ;
 Instr 389 @ 0x1850 (6224) - @!P1 BRA 0x19b0 ;
Basic block id 39 - num instructions 4
 Instr 390 @ 0x1860 (6240) - LDS.U.64 R8, [R0+-0x800] ;
 Instr 391 @ 0x1870 (6256) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 392 @ 0x1880 (6272) - IADD3 R17, R17, 0x400, RZ ;
 Instr 393 @ 0x1890 (6288) - LDS.U.64 R10, [R0+-0x400] ;
Basic block id 40 - num instructions 17
 Instr 394 @ 0x18a0 (6304) - LDS.U.64 R12, [R0] ;
 Instr 395 @ 0x18b0 (6320) - LDS.U.64 R14, [R0+0x400] ;
 Instr 396 @ 0x18c0 (6336) - LDS.U.64 R18, [R0+0x800] ;
 Instr 397 @ 0x18d0 (6352) - LDS.U.64 R20, [R0+0xc00] ;
 Instr 398 @ 0x18e0 (6368) - LDS.U.64 R22, [R0+0x1000] ;
 Instr 399 @ 0x18f0 (6384) - LDS.U.64 R24, [R0+0x1400] ;
 Instr 400 @ 0x1900 (6400) - IADD3 R0, R0, 0x2000, RZ ;
 Instr 401 @ 0x1910 (6416) - STG.E.64.SYS [R2+-0x800], R8 ;
 Instr 402 @ 0x1920 (6432) - STG.E.64.SYS [R2+-0x400], R10 ;
 Instr 403 @ 0x1930 (6448) - STG.E.64.SYS [R2], R12 ;
 Instr 404 @ 0x1940 (6464) - STG.E.64.SYS [R2+0x400], R14 ;
 Instr 405 @ 0x1950 (6480) - STG.E.64.SYS [R2+0x800], R18 ;
 Instr 406 @ 0x1960 (6496) - STG.E.64.SYS [R2+0xc00], R20 ;
 Instr 407 @ 0x1970 (6512) - STG.E.64.SYS [R2+0x1000], R22 ;
 Instr 408 @ 0x1980 (6528) - STG.E.64.SYS [R2+0x1400], R24 ;
 Instr 409 @ 0x1990 (6544) - IADD3 R2, P1, R2, 0x2000, RZ ;
 Instr 410 @ 0x19a0 (6560) - IMAD.X R3, RZ, RZ, R3, P1 ;
Basic block id 41 - num instructions 3
 Instr 411 @ 0x19b0 (6576) - BSYNC B1 ;
 Instr 412 @ 0x19c0 (6592) - ISETP.LT.OR P0, PT, R17, R4, P0 ;
 Instr 413 @ 0x19d0 (6608) - @!P0 BRA 0x2830 ;
Basic block id 42 - num instructions 9
 Instr 414 @ 0x19e0 (6624) - LDS.U.64 R4, [R0+-0x800] ;
 Instr 415 @ 0x19f0 (6640) - LDS.U.64 R8, [R0+-0x400] ;
 Instr 416 @ 0x1a00 (6656) - LDS.U.64 R10, [R0] ;
 Instr 417 @ 0x1a10 (6672) - LDS.U.64 R12, [R0+0x400] ;
 Instr 418 @ 0x1a20 (6688) - STG.E.64.SYS [R2+-0x800], R4 ;
 Instr 419 @ 0x1a30 (6704) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 420 @ 0x1a40 (6720) - STG.E.64.SYS [R2], R10 ;
 Instr 421 @ 0x1a50 (6736) - STG.E.64.SYS [R2+0x400], R12 ;
 Instr 422 @ 0x1a60 (6752) - BRA 0x2830 ;
Basic block id 43 - num instructions 64
 Instr 423 @ 0x1a70 (6768) - BAR.SYNC 0x0 ;
 Instr 424 @ 0x1a80 (6784) - ISETP.GE.AND P6, PT, R6, R17, PT ;
 Instr 425 @ 0x1a90 (6800) - ISETP.GE.AND P2, PT, R7, R17.reuse, PT ;
 Instr 426 @ 0x1aa0 (6816) - ISETP.GE.AND P0, PT, R18, R17.reuse, PT ;
 Instr 427 @ 0x1ab0 (6832) - ISETP.GE.AND P3, PT, R19, R17.reuse, PT ;
 Instr 428 @ 0x1ac0 (6848) - ISETP.GE.AND P1, PT, R20, R17, PT ;
 Instr 429 @ 0x1ad0 (6864) - @!P6 LDG.E.U8.SYS R18, [R4] ;
 Instr 430 @ 0x1ae0 (6880) - @!P2 LDG.E.U8.SYS R0, [R4+0x1] ;
 Instr 431 @ 0x1af0 (6896) - @!P0 LDG.E.U8.SYS R6, [R4+0x2] ;
 Instr 432 @ 0x1b00 (6912) - @!P3 LDG.E.U8.SYS R7, [R4+0x3] ;
 Instr 433 @ 0x1b10 (6928) - @!P1 LDG.E.U8.SYS R4, [R4+0x4] ;
 Instr 434 @ 0x1b20 (6944) - IMAD.MOV.U32 R20, RZ, RZ, 0x1 ;
 Instr 435 @ 0x1b30 (6960) - IMAD.MOV.U32 R19, RZ, RZ, 0x1 ;
 Instr 436 @ 0x1b40 (6976) - S2R R25, SR_LANEID ;
 Instr 437 @ 0x1b50 (6992) - IMAD.MOV.U32 R24, RZ, RZ, 0x1 ;
 Instr 438 @ 0x1b60 (7008) - BAR.SYNC 0x0 ;
 Instr 439 @ 0x1b70 (7024) - @!P6 ISETP.NE.AND P5, PT, R18, RZ, PT ;
 Instr 440 @ 0x1b80 (7040) - IMAD.MOV.U32 R18, RZ, RZ, 0x1 ;
 Instr 441 @ 0x1b90 (7056) - @!P2 ISETP.NE.AND P4, PT, R0, RZ, PT ;
 Instr 442 @ 0x1ba0 (7072) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 443 @ 0x1bb0 (7088) - @!P6 SEL R18, RZ, 0x1, !P5 ;
 Instr 444 @ 0x1bc0 (7104) - @!P0 ISETP.NE.AND P6, PT, R6, RZ, PT ;
 Instr 445 @ 0x1bd0 (7120) - @!P2 SEL R0, RZ, 0x1, !P4 ;
 Instr 446 @ 0x1be0 (7136) - @!P3 ISETP.NE.AND P5, PT, R7, RZ, PT ;
 Instr 447 @ 0x1bf0 (7152) - @!P0 SEL R20, RZ, 0x1, !P6 ;
 Instr 448 @ 0x1c00 (7168) - @!P3 SEL R19, RZ, 0x1, !P5 ;
 Instr 449 @ 0x1c10 (7184) - @!P1 ISETP.NE.AND P2, PT, R4, RZ, PT ;
 Instr 450 @ 0x1c20 (7200) - IADD3 R4, R20, R0, R18 ;
 Instr 451 @ 0x1c30 (7216) - @!P1 SEL R24, RZ, 0x1, !P2 ;
 Instr 452 @ 0x1c40 (7232) - ISETP.NE.AND P1, PT, R25, 0x1f, PT ;
 Instr 453 @ 0x1c50 (7248) - IADD3 R22, R24, R19, R4 ;
 Instr 454 @ 0x1c60 (7264) - ISETP.NE.AND P2, PT, R25, RZ, PT ;
 Instr 455 @ 0x1c70 (7280) - SHFL.UP P0, R4, R22, 0x1, RZ ;
 Instr 456 @ 0x1c80 (7296) - @P0 IMAD.IADD R4, R22, 0x1, R4 ;
 Instr 457 @ 0x1c90 (7312) - SHFL.UP P0, R5, R4, 0x2, RZ ;
 Instr 458 @ 0x1ca0 (7328) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 459 @ 0x1cb0 (7344) - SHFL.UP P0, R4, R5, 0x4, RZ ;
 Instr 460 @ 0x1cc0 (7360) - @P0 IMAD.IADD R4, R5, 0x1, R4 ;
 Instr 461 @ 0x1cd0 (7376) - SHFL.UP P0, R5, R4, 0x8, RZ ;
 Instr 462 @ 0x1ce0 (7392) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 463 @ 0x1cf0 (7408) - SHFL.UP P0, R21, R5, 0x10, RZ ;
 Instr 464 @ 0x1d00 (7424) - @P0 IMAD.IADD R21, R5, 0x1, R21 ;
 Instr 465 @ 0x1d10 (7440) - ISETP.NE.AND P0, PT, R26, 0x2, PT ;
 Instr 466 @ 0x1d20 (7456) - @!P1 STS [R26.X4], R21 ;
 Instr 467 @ 0x1d30 (7472) - BAR.SYNC 0x0 ;
 Instr 468 @ 0x1d40 (7488) - LDS.U.128 R4, [RZ] ;
 Instr 469 @ 0x1d50 (7504) - ISETP.NE.AND P1, PT, R26, 0x3, PT ;
 Instr 470 @ 0x1d60 (7520) - IMAD.IADD R21, R21, 0x1, -R22 ;
 Instr 471 @ 0x1d70 (7536) - SEL R21, R21, RZ, P2 ;
 Instr 472 @ 0x1d80 (7552) - IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 473 @ 0x1d90 (7568) - SEL R4, R5.reuse, R4, !P0 ;
 Instr 474 @ 0x1da0 (7584) - IMAD.IADD R5, R5, 0x1, R6 ;
 Instr 475 @ 0x1db0 (7600) - ISETP.NE.AND P0, PT, R26, RZ, PT ;
 Instr 476 @ 0x1dc0 (7616) - SEL R4, R5.reuse, R4, !P1 ;
 Instr 477 @ 0x1dd0 (7632) - IADD3 R6, R5, R17, R7 ;
 Instr 478 @ 0x1de0 (7648) - SEL R4, R4, RZ, P0 ;
 Instr 479 @ 0x1df0 (7664) - IADD3 R6, R6, -0x280, RZ ;
 Instr 480 @ 0x1e00 (7680) - IMAD.IADD R4, R4, 0x1, R21 ;
 Instr 481 @ 0x1e10 (7696) - ISETP.GT.AND P0, PT, R6, 0x80, PT ;
 Instr 482 @ 0x1e20 (7712) - IMAD.IADD R17, R4, 0x1, R18 ;
 Instr 483 @ 0x1e30 (7728) - IMAD.IADD R21, R17, 0x1, R0 ;
 Instr 484 @ 0x1e40 (7744) - IMAD.IADD R22, R21, 0x1, R20 ;
 Instr 485 @ 0x1e50 (7760) - IMAD.IADD R25, R22, 0x1, R19 ;
 Instr 486 @ 0x1e60 (7776) - @P0 BRA 0x2020 ;
Basic block id 44 - num instructions 23
 Instr 487 @ 0x1e70 (7792) - ISETP.NE.AND P0, PT, R18, RZ, PT ;
 Instr 488 @ 0x1e80 (7808) - ISETP.GE.AND P1, PT, R17, R6.reuse, PT ;
 Instr 489 @ 0x1e90 (7824) - ISETP.GE.AND P2, PT, R21, R6.reuse, PT ;
 Instr 490 @ 0x1ea0 (7840) - ISETP.GE.AND P3, PT, R22, R6.reuse, PT ;
 Instr 491 @ 0x1eb0 (7856) - ISETP.GE.OR P0, PT, R4, R6, !P0 ;
 Instr 492 @ 0x1ec0 (7872) - ISETP.EQ.OR P1, PT, R0, RZ, P1 ;
 Instr 493 @ 0x1ed0 (7888) - ISETP.EQ.OR P2, PT, R20, RZ, P2 ;
 Instr 494 @ 0x1ee0 (7904) - ISETP.EQ.OR P3, PT, R19, RZ, P3 ;
 Instr 495 @ 0x1ef0 (7920) - @!P0 IMAD.MOV.U32 R5, RZ, RZ, 0x8 ;
 Instr 496 @ 0x1f00 (7936) - @!P1 IMAD.MOV.U32 R18, RZ, RZ, 0x8 ;
 Instr 497 @ 0x1f10 (7952) - @!P2 IMAD.MOV.U32 R20, RZ, RZ, 0x8 ;
 Instr 498 @ 0x1f20 (7968) - @!P3 IMAD.MOV.U32 R23, RZ, RZ, 0x8 ;
 Instr 499 @ 0x1f30 (7984) - @!P0 IMAD.WIDE R4, R4, R5, c[0x0][0x178] ;
 Instr 500 @ 0x1f40 (8000) - @!P1 IMAD.WIDE R18, R17, R18, c[0x0][0x178] ;
 Instr 501 @ 0x1f50 (8016) - @!P2 IMAD.WIDE R20, R21, R20, c[0x0][0x178] ;
 Instr 502 @ 0x1f60 (8032) - @!P0 STG.E.64.SYS [R4], R14 ;
 Instr 503 @ 0x1f70 (8048) - ISETP.GE.AND P0, PT, R25, R6, PT ;
 Instr 504 @ 0x1f80 (8064) - @!P3 IMAD.WIDE R22, R22, R23, c[0x0][0x178] ;
 Instr 505 @ 0x1f90 (8080) - @!P1 STG.E.64.SYS [R18], R12 ;
 Instr 506 @ 0x1fa0 (8096) - ISETP.EQ.OR P0, PT, R24, RZ, P0 ;
 Instr 507 @ 0x1fb0 (8112) - @!P2 STG.E.64.SYS [R20], R10 ;
 Instr 508 @ 0x1fc0 (8128) - @!P3 STG.E.64.SYS [R22], R8 ;
 Instr 509 @ 0x1fd0 (8144) - @P0 BRA 0x2830 ;
Basic block id 45 - num instructions 4
 Instr 510 @ 0x1fe0 (8160) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 511 @ 0x1ff0 (8176) - IMAD.WIDE R4, R25, R4, c[0x0][0x178] ;
 Instr 512 @ 0x2000 (8192) - STG.E.64.SYS [R4], R2 ;
 Instr 513 @ 0x2010 (8208) - BRA 0x2830 ;
Basic block id 46 - num instructions 14
 Instr 514 @ 0x2020 (8224) - BAR.SYNC 0x0 ;
 Instr 515 @ 0x2030 (8240) - ISETP.NE.AND P4, PT, R18, RZ, PT ;
 Instr 516 @ 0x2040 (8256) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 517 @ 0x2050 (8272) - ISETP.NE.AND P1, PT, R20, RZ, PT ;
 Instr 518 @ 0x2060 (8288) - ISETP.NE.AND P2, PT, R19, RZ, PT ;
 Instr 519 @ 0x2070 (8304) - ISETP.NE.AND P3, PT, R24, RZ, PT ;
 Instr 520 @ 0x2080 (8320) - @P4 STS.64 [R4.X8], R14 ;
 Instr 521 @ 0x2090 (8336) - @P0 STS.64 [R17.X8], R12 ;
 Instr 522 @ 0x20a0 (8352) - ISETP.GE.AND P0, PT, R23, R6, PT ;
 Instr 523 @ 0x20b0 (8368) - @P1 STS.64 [R21.X8], R10 ;
 Instr 524 @ 0x20c0 (8384) - @P2 STS.64 [R22.X8], R8 ;
 Instr 525 @ 0x20d0 (8400) - @P3 STS.64 [R25.X8], R2 ;
 Instr 526 @ 0x20e0 (8416) - BAR.SYNC 0x0 ;
 Instr 527 @ 0x20f0 (8432) - @P0 BRA 0x2830 ;
Basic block id 47 - num instructions 9
 Instr 528 @ 0x2100 (8448) - IADD3 R5, R5, c[0x0][0x194], R7 ;
 Instr 529 @ 0x2110 (8464) - BMOV.32.CLEAR RZ, B1 ;
 Instr 530 @ 0x2120 (8480) - BSSY B1, 0x2280 ;
 Instr 531 @ 0x2130 (8496) - IADD3 R5, -R23, -0x281, R5 ;
 Instr 532 @ 0x2140 (8512) - LEA.HI R0, R5.reuse, 0x1, RZ, 0x19 ;
 Instr 533 @ 0x2150 (8528) - ISETP.GE.U32.AND P1, PT, R5, 0x180, PT ;
 Instr 534 @ 0x2160 (8544) - LOP3.LUT R0, R0, 0x3, RZ, 0xc0, !PT ;
 Instr 535 @ 0x2170 (8560) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 536 @ 0x2180 (8576) - @!P0 BRA 0x2270 ;
Basic block id 48 - num instructions 5
 Instr 537 @ 0x2190 (8592) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
 Instr 538 @ 0x21a0 (8608) - IMAD.SHL.U32 R7, R23.reuse, 0x8, RZ ;
 Instr 539 @ 0x21b0 (8624) - IMAD.WIDE R2, R23, R2, c[0x0][0x178] ;
 Instr 540 @ 0x21c0 (8640) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
 Instr 541 @ 0x21d0 (8656) - IMAD.MOV.U32 R5, RZ, RZ, R3 ;
Basic block id 49 - num instructions 9
 Instr 542 @ 0x21e0 (8672) - LDS.U.64 R2, [R7] ;
 Instr 543 @ 0x21f0 (8688) - IADD3 R0, R0, -0x1, RZ ;
 Instr 544 @ 0x2200 (8704) - IADD3 R23, R23, 0x80, RZ ;
 Instr 545 @ 0x2210 (8720) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 546 @ 0x2220 (8736) - IADD3 R7, R7, 0x400, RZ ;
 Instr 547 @ 0x2230 (8752) - STG.E.64.SYS [R4], R2 ;
 Instr 548 @ 0x2240 (8768) - IADD3 R4, P2, R4, 0x400, RZ ;
 Instr 549 @ 0x2250 (8784) - IMAD.X R5, RZ, RZ, R5, P2 ;
 Instr 550 @ 0x2260 (8800) - @P0 BRA 0x21e0 ;
Basic block id 50 - num instructions 2
 Instr 551 @ 0x2270 (8816) - BSYNC B1 ;
 Instr 552 @ 0x2280 (8832) - @!P1 BRA 0x2830 ;
Basic block id 51 - num instructions 11
 Instr 553 @ 0x2290 (8848) - IMAD.IADD R0, R6, 0x1, -R23 ;
 Instr 554 @ 0x22a0 (8864) - BMOV.32.CLEAR RZ, B1 ;
 Instr 555 @ 0x22b0 (8880) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
 Instr 556 @ 0x22c0 (8896) - BSSY B1, 0x25f0 ;
 Instr 557 @ 0x22d0 (8912) - ISETP.GT.AND P1, PT, R0, 0x600, PT ;
 Instr 558 @ 0x22e0 (8928) - IMAD.WIDE R2, R23.reuse, R2, c[0x0][0x178] ;
 Instr 559 @ 0x22f0 (8944) - LEA R0, R23, 0x800, 0x3 ;
 Instr 560 @ 0x2300 (8960) - IADD3 R2, P0, R2, 0x800, RZ ;
 Instr 561 @ 0x2310 (8976) - IMAD.X R3, RZ, RZ, R3, P0 ;
 Instr 562 @ 0x2320 (8992) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 563 @ 0x2330 (9008) - @!P1 BRA 0x25e0 ;
Basic block id 52 - num instructions 2
 Instr 564 @ 0x2340 (9024) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 565 @ 0x2350 (9040) - IADD3 R7, R6, -0x600, RZ ;
Basic block id 53 - num instructions 40
 Instr 566 @ 0x2360 (9056) - LDS.U.64 R4, [R0+-0x800] ;
 Instr 567 @ 0x2370 (9072) - IADD3 R23, R23, 0x800, RZ ;
 Instr 568 @ 0x2380 (9088) - LDS.U.64 R8, [R0+-0x400] ;
 Instr 569 @ 0x2390 (9104) - ISETP.GE.AND P1, PT, R23, R7, PT ;
 Instr 570 @ 0x23a0 (9120) - LDS.U.64 R10, [R0] ;
 Instr 571 @ 0x23b0 (9136) - LDS.U.64 R12, [R0+0x400] ;
 Instr 572 @ 0x23c0 (9152) - LDS.U.64 R14, [R0+0x800] ;
 Instr 573 @ 0x23d0 (9168) - LDS.U.64 R18, [R0+0xc00] ;
 Instr 574 @ 0x23e0 (9184) - LDS.U.64 R20, [R0+0x1000] ;
 Instr 575 @ 0x23f0 (9200) - LDS.U.64 R24, [R0+0x1400] ;
 Instr 576 @ 0x2400 (9216) - LDS.U.64 R26, [R0+0x1800] ;
 Instr 577 @ 0x2410 (9232) - LDS.U.64 R28, [R0+0x1c00] ;
 Instr 578 @ 0x2420 (9248) - LDS.U.64 R30, [R0+0x2000] ;
 Instr 579 @ 0x2430 (9264) - LDS.U.64 R32, [R0+0x2400] ;
 Instr 580 @ 0x2440 (9280) - LDS.U.64 R34, [R0+0x2800] ;
 Instr 581 @ 0x2450 (9296) - LDS.U.64 R36, [R0+0x2c00] ;
 Instr 582 @ 0x2460 (9312) - LDS.U.64 R38, [R0+0x3000] ;
 Instr 583 @ 0x2470 (9328) - LDS.U.64 R40, [R0+0x3400] ;
 Instr 584 @ 0x2480 (9344) - STG.E.64.SYS [R2+-0x800], R4 ;
 Instr 585 @ 0x2490 (9360) - IADD3 R0, R0, 0x4000, RZ ;
 Instr 586 @ 0x24a0 (9376) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 587 @ 0x24b0 (9392) - STG.E.64.SYS [R2], R10 ;
 Instr 588 @ 0x24c0 (9408) - STG.E.64.SYS [R2+0x400], R12 ;
 Instr 589 @ 0x24d0 (9424) - IADD3 R4, P2, R2, 0x4000, RZ ;
 Instr 590 @ 0x24e0 (9440) - STG.E.64.SYS [R2+0x800], R14 ;
 Instr 591 @ 0x24f0 (9456) - IMAD.X R5, RZ, RZ, R3, P2 ;
 Instr 592 @ 0x2500 (9472) - STG.E.64.SYS [R2+0xc00], R18 ;
 Instr 593 @ 0x2510 (9488) - STG.E.64.SYS [R2+0x1000], R20 ;
 Instr 594 @ 0x2520 (9504) - STG.E.64.SYS [R2+0x1400], R24 ;
 Instr 595 @ 0x2530 (9520) - STG.E.64.SYS [R2+0x1800], R26 ;
 Instr 596 @ 0x2540 (9536) - STG.E.64.SYS [R2+0x1c00], R28 ;
 Instr 597 @ 0x2550 (9552) - STG.E.64.SYS [R2+0x2000], R30 ;
 Instr 598 @ 0x2560 (9568) - STG.E.64.SYS [R2+0x2400], R32 ;
 Instr 599 @ 0x2570 (9584) - STG.E.64.SYS [R2+0x2800], R34 ;
 Instr 600 @ 0x2580 (9600) - STG.E.64.SYS [R2+0x2c00], R36 ;
 Instr 601 @ 0x2590 (9616) - STG.E.64.SYS [R2+0x3000], R38 ;
 Instr 602 @ 0x25a0 (9632) - STG.E.64.SYS [R2+0x3400], R40 ;
 Instr 603 @ 0x25b0 (9648) - IMAD.MOV.U32 R2, RZ, RZ, R4 ;
 Instr 604 @ 0x25c0 (9664) - IMAD.MOV.U32 R3, RZ, RZ, R5 ;
 Instr 605 @ 0x25d0 (9680) - @!P1 BRA 0x2360 ;
Basic block id 54 - num instructions 6
 Instr 606 @ 0x25e0 (9696) - BSYNC B1 ;
 Instr 607 @ 0x25f0 (9712) - IMAD.IADD R4, R6, 0x1, -R23 ;
 Instr 608 @ 0x2600 (9728) - BMOV.32.CLEAR RZ, B1 ;
 Instr 609 @ 0x2610 (9744) - BSSY B1, 0x27a0 ;
 Instr 610 @ 0x2620 (9760) - ISETP.GT.AND P1, PT, R4, 0x200, PT ;
 Instr 611 @ 0x2630 (9776) - @!P1 BRA 0x2790 ;
Basic block id 55 - num instructions 4
 Instr 612 @ 0x2640 (9792) - LDS.U.64 R4, [R0+-0x800] ;
 Instr 613 @ 0x2650 (9808) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 614 @ 0x2660 (9824) - IADD3 R23, R23, 0x400, RZ ;
 Instr 615 @ 0x2670 (9840) - LDS.U.64 R8, [R0+-0x400] ;
Basic block id 56 - num instructions 17
 Instr 616 @ 0x2680 (9856) - LDS.U.64 R10, [R0] ;
 Instr 617 @ 0x2690 (9872) - LDS.U.64 R12, [R0+0x400] ;
 Instr 618 @ 0x26a0 (9888) - LDS.U.64 R14, [R0+0x800] ;
 Instr 619 @ 0x26b0 (9904) - LDS.U.64 R18, [R0+0xc00] ;
 Instr 620 @ 0x26c0 (9920) - LDS.U.64 R20, [R0+0x1000] ;
 Instr 621 @ 0x26d0 (9936) - LDS.U.64 R24, [R0+0x1400] ;
 Instr 622 @ 0x26e0 (9952) - IADD3 R0, R0, 0x2000, RZ ;
 Instr 623 @ 0x26f0 (9968) - STG.E.64.SYS [R2+-0x800], R4 ;
 Instr 624 @ 0x2700 (9984) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 625 @ 0x2710 (10000) - STG.E.64.SYS [R2], R10 ;
 Instr 626 @ 0x2720 (10016) - STG.E.64.SYS [R2+0x400], R12 ;
 Instr 627 @ 0x2730 (10032) - STG.E.64.SYS [R2+0x800], R14 ;
 Instr 628 @ 0x2740 (10048) - STG.E.64.SYS [R2+0xc00], R18 ;
 Instr 629 @ 0x2750 (10064) - STG.E.64.SYS [R2+0x1000], R20 ;
 Instr 630 @ 0x2760 (10080) - STG.E.64.SYS [R2+0x1400], R24 ;
 Instr 631 @ 0x2770 (10096) - IADD3 R2, P1, R2, 0x2000, RZ ;
 Instr 632 @ 0x2780 (10112) - IMAD.X R3, RZ, RZ, R3, P1 ;
Basic block id 57 - num instructions 10
 Instr 633 @ 0x2790 (10128) - BSYNC B1 ;
 Instr 634 @ 0x27a0 (10144) - ISETP.LT.OR P0, PT, R23, R6, P0 ;
 Instr 635 @ 0x27b0 (10160) - @P0 LDS.U.64 R4, [R0+-0x800] ;
 Instr 636 @ 0x27c0 (10176) - @P0 LDS.U.64 R8, [R0+-0x400] ;
 Instr 637 @ 0x27d0 (10192) - @P0 LDS.U.64 R10, [R0] ;
 Instr 638 @ 0x27e0 (10208) - @P0 LDS.U.64 R12, [R0+0x400] ;
 Instr 639 @ 0x27f0 (10224) - @P0 STG.E.64.SYS [R2+-0x800], R4 ;
 Instr 640 @ 0x2800 (10240) - @P0 STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 641 @ 0x2810 (10256) - @P0 STG.E.64.SYS [R2], R10 ;
 Instr 642 @ 0x2820 (10272) - @P0 STG.E.64.SYS [R2+0x400], R12 ;
Basic block id 58 - num instructions 3
 Instr 643 @ 0x2830 (10288) - BSYNC B0 ;
 Instr 644 @ 0x2840 (10304) - ISETP.NE.AND P0, PT, R16, RZ, PT ;
 Instr 645 @ 0x2850 (10320) - @P0 EXIT ;
Basic block id 59 - num instructions 3
 Instr 646 @ 0x2860 (10336) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 647 @ 0x2870 (10352) - STG.E.SYS [UR4], R6 ;
 Instr 648 @ 0x2880 (10368) - EXIT ;
Basic block id 60 - num instructions 2
 Instr 649 @ 0x2890 (10384) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 650 @ 0x28a0 (10400) - @!P0 BRA 0x3fb0 ;
Basic block id 61 - num instructions 49
 Instr 651 @ 0x28b0 (10416) - BAR.SYNC 0x0 ;
 Instr 652 @ 0x28c0 (10432) - LDG.E.U8.SYS R32, [R4] ;
 Instr 653 @ 0x28d0 (10448) - LDG.E.U8.SYS R17, [R4+0x1] ;
 Instr 654 @ 0x28e0 (10464) - LDG.E.U8.SYS R18, [R4+0x2] ;
 Instr 655 @ 0x28f0 (10480) - LDG.E.U8.SYS R19, [R4+0x3] ;
 Instr 656 @ 0x2900 (10496) - LDG.E.U8.SYS R21, [R4+0x4] ;
 Instr 657 @ 0x2910 (10512) - S2R R28, SR_LANEID ;
 Instr 658 @ 0x2920 (10528) - BAR.SYNC 0x0 ;
 Instr 659 @ 0x2930 (10544) - ISETP.NE.AND P0, PT, R32, RZ, PT ;
 Instr 660 @ 0x2940 (10560) - ISETP.NE.AND P1, PT, R17, RZ, PT ;
 Instr 661 @ 0x2950 (10576) - SEL R25, RZ, 0x1, !P0 ;
 Instr 662 @ 0x2960 (10592) - ISETP.NE.AND P2, PT, R18, RZ, PT ;
 Instr 663 @ 0x2970 (10608) - SEL R24, RZ, 0x1, !P1 ;
 Instr 664 @ 0x2980 (10624) - ISETP.NE.AND P3, PT, R19, RZ, PT ;
 Instr 665 @ 0x2990 (10640) - SEL R23, RZ, 0x1, !P2 ;
 Instr 666 @ 0x29a0 (10656) - SEL R20, RZ, 0x1, !P3 ;
 Instr 667 @ 0x29b0 (10672) - IADD3 R4, R23, R24, R25 ;
 Instr 668 @ 0x29c0 (10688) - ISETP.NE.AND P0, PT, R21, RZ, PT ;
 Instr 669 @ 0x29d0 (10704) - ISETP.NE.AND P1, PT, R28, 0x1f, PT ;
 Instr 670 @ 0x29e0 (10720) - IMAD.IADD R4, R20, 0x1, R4 ;
 Instr 671 @ 0x29f0 (10736) - ISETP.NE.AND P2, PT, R26.reuse, RZ, PT ;
 Instr 672 @ 0x2a00 (10752) - ISETP.NE.AND P3, PT, R26, RZ, PT ;
 Instr 673 @ 0x2a10 (10768) - IADD3 R22, R4, 0x1, RZ ;
 Instr 674 @ 0x2a20 (10784) - @!P0 IMAD.MOV R22, RZ, RZ, R4 ;
 Instr 675 @ 0x2a30 (10800) - SHFL.UP P0, R4, R22, 0x1, RZ ;
 Instr 676 @ 0x2a40 (10816) - @P0 IMAD.IADD R4, R4, 0x1, R22 ;
 Instr 677 @ 0x2a50 (10832) - SHFL.UP P0, R5, R4, 0x2, RZ ;
 Instr 678 @ 0x2a60 (10848) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 679 @ 0x2a70 (10864) - SHFL.UP P0, R4, R5, 0x4, RZ ;
 Instr 680 @ 0x2a80 (10880) - @P0 IMAD.IADD R4, R5, 0x1, R4 ;
 Instr 681 @ 0x2a90 (10896) - SHFL.UP P0, R5, R4, 0x8, RZ ;
 Instr 682 @ 0x2aa0 (10912) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 683 @ 0x2ab0 (10928) - SHFL.UP P0, R27, R5, 0x10, RZ ;
 Instr 684 @ 0x2ac0 (10944) - @P0 IMAD.IADD R27, R5, 0x1, R27 ;
 Instr 685 @ 0x2ad0 (10960) - ISETP.NE.AND P0, PT, R26, 0x2, PT ;
 Instr 686 @ 0x2ae0 (10976) - IMAD.IADD R22, R27, 0x1, -R22 ;
 Instr 687 @ 0x2af0 (10992) - @!P1 STS [R26.X4], R27 ;
 Instr 688 @ 0x2b00 (11008) - BAR.SYNC 0x0 ;
 Instr 689 @ 0x2b10 (11024) - LDS.U.128 R4, [RZ] ;
 Instr 690 @ 0x2b20 (11040) - ISETP.NE.AND P1, PT, R28, RZ, PT ;
 Instr 691 @ 0x2b30 (11056) - IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 692 @ 0x2b40 (11072) - IMAD.IADD R6, R5.reuse, 0x1, R6 ;
 Instr 693 @ 0x2b50 (11088) - SEL R4, R5, R4, !P0 ;
 Instr 694 @ 0x2b60 (11104) - ISETP.NE.AND P0, PT, R26, 0x3, PT ;
 Instr 695 @ 0x2b70 (11120) - IMAD.IADD R7, R7, 0x1, R6 ;
 Instr 696 @ 0x2b80 (11136) - SEL R5, R22, RZ, P1 ;
 Instr 697 @ 0x2b90 (11152) - SEL R4, R6, R4, !P0 ;
 Instr 698 @ 0x2ba0 (11168) - @P3 IMAD.IADD R22, R4, 0x1, R5 ;
 Instr 699 @ 0x2bb0 (11184) - @P2 BRA 0x3490 ;
Basic block id 62 - num instructions 10
 Instr 700 @ 0x2bc0 (11200) - ISETP.NE.AND P0, PT, R16, RZ, PT ;
 Instr 701 @ 0x2bd0 (11216) - IMAD.MOV.U32 R26, RZ, RZ, 0x8 ;
 Instr 702 @ 0x2be0 (11232) - LOP3.LUT R16, RZ, R16, RZ, 0x33, !PT ;
 Instr 703 @ 0x2bf0 (11248) - BMOV.32.CLEAR RZ, B0 ;
 Instr 704 @ 0x2c00 (11264) - BSSY B0, 0x2d50 ;
 Instr 705 @ 0x2c10 (11280) - IMAD.IADD R16, R0, 0x1, R16 ;
 Instr 706 @ 0x2c20 (11296) - @!P0 IMAD.WIDE R4, R0, R26.reuse, c[0x0][0x188] ;
 Instr 707 @ 0x2c30 (11312) - @!P0 STS [0x2c], R7 ;
 Instr 708 @ 0x2c40 (11328) - @!P0 IMAD.MOV.U32 R6, RZ, RZ, 0x64 ;
 Instr 709 @ 0x2c50 (11344) - IMAD.WIDE R26, R16, R26, c[0x0][0x188] ;
Basic block id 63 - num instructions 1
 Instr 710 @ 0x2c60 (11360) - @!P0 ST.E.64.STRONG.GPU [R4+0x100], R6 ;
Basic block id 64 - num instructions 4
 Instr 711 @ 0x2c70 (11376) - MEMBAR.SC.CTA ;
 Instr 712 @ 0x2c80 (11392) - LD.E.64.STRONG.GPU R30, [R26+0x100] ;
 Instr 713 @ 0x2c90 (11408) - ISETP.NE.AND P1, PT, R30, 0x63, PT ;
 Instr 714 @ 0x2ca0 (11424) - BRA.DIV 0x5520 ;
Basic block id 65 - num instructions 2
 Instr 715 @ 0x2cb0 (11440) - VOTE.ANY R4, PT, !P1 ;
 Instr 716 @ 0x2cc0 (11456) - ISETP.NE.U32.AND P1, PT, R4, RZ, PT ;
Basic block id 66 - num instructions 1
 Instr 717 @ 0x2cd0 (11472) - @!P1 BRA 0x2d40 ;
Basic block id 67 - num instructions 5
 Instr 718 @ 0x2ce0 (11488) - VOTE.ANY R4, PT, PT ;
 Instr 719 @ 0x2cf0 (11504) - YIELD ;
 Instr 720 @ 0x2d00 (11520) - VOTEU.ANY UR4, UPT, PT ;
 Instr 721 @ 0x2d10 (11536) - LOP3.LUT P1, RZ, R4, UR4, RZ, 0xc, !PT ;
 Instr 722 @ 0x2d20 (11552) - @!P1 BRA.U 0x2c70 ;
Basic block id 68 - num instructions 1
 Instr 723 @ 0x2d30 (11568) - BRA 0x2ce0 ;
Basic block id 69 - num instructions 4
 Instr 724 @ 0x2d40 (11584) - BSYNC B0 ;
 Instr 725 @ 0x2d50 (11600) - S2R R26, SR_LANEID ;
 Instr 726 @ 0x2d60 (11616) - ISETP.NE.AND P1, PT, R30, 0x65, PT ;
 Instr 727 @ 0x2d70 (11632) - BRA.DIV 0x5580 ;
Basic block id 70 - num instructions 35
 Instr 728 @ 0x2d80 (11648) - S2R R5, SR_GEMASK ;
 Instr 729 @ 0x2d90 (11664) - VOTE.ANY R4, PT, !P1 ;
 Instr 730 @ 0x2da0 (11680) - VOTEU.ANY UR4, UPT, PT ;
 Instr 731 @ 0x2db0 (11696) - IADD3 R28, R26.reuse, 0x2, RZ ;
 Instr 732 @ 0x2dc0 (11712) - IADD3 R29, R26, 0x10, RZ ;
 Instr 733 @ 0x2dd0 (11728) - LOP3.LUT R4, R4, 0x80000000, R5, 0xec, !PT ;
 Instr 734 @ 0x2de0 (11744) - BREV R4, R4 ;
 Instr 735 @ 0x2df0 (11760) - FLO.U32 R4, R4 ;
 Instr 736 @ 0x2e00 (11776) - IADD3 R4, -R4, 0x1f, RZ ;
 Instr 737 @ 0x2e10 (11792) - ISETP.GE.AND P1, PT, R26, R4, PT ;
 Instr 738 @ 0x2e20 (11808) - SHFL.DOWN PT, R5, R31, 0x1, R4 ;
 Instr 739 @ 0x2e30 (11824) - SEL R5, R5, RZ, !P1 ;
 Instr 740 @ 0x2e40 (11840) - ISETP.GT.AND P1, PT, R28, R4, PT ;
 Instr 741 @ 0x2e50 (11856) - IADD3 R28, R26, 0x4, RZ ;
 Instr 742 @ 0x2e60 (11872) - IMAD.IADD R5, R31, 0x1, R5 ;
 Instr 743 @ 0x2e70 (11888) - SHFL.DOWN PT, R27, R5, 0x2, R4 ;
 Instr 744 @ 0x2e80 (11904) - SEL R27, R27, RZ, !P1 ;
 Instr 745 @ 0x2e90 (11920) - ISETP.GT.AND P1, PT, R28, R4, PT ;
 Instr 746 @ 0x2ea0 (11936) - IADD3 R28, R26, 0x8, RZ ;
 Instr 747 @ 0x2eb0 (11952) - IMAD.IADD R27, R5, 0x1, R27 ;
 Instr 748 @ 0x2ec0 (11968) - SHFL.DOWN PT, R5, R27, 0x4, R4 ;
 Instr 749 @ 0x2ed0 (11984) - SEL R5, R5, RZ, !P1 ;
 Instr 750 @ 0x2ee0 (12000) - ISETP.GT.AND P1, PT, R28, R4, PT ;
 Instr 751 @ 0x2ef0 (12016) - IMAD.IADD R5, R27, 0x1, R5 ;
 Instr 752 @ 0x2f00 (12032) - SHFL.DOWN PT, R27, R5, 0x8, R4 ;
 Instr 753 @ 0x2f10 (12048) - SEL R27, R27, RZ, !P1 ;
 Instr 754 @ 0x2f20 (12064) - ISETP.NE.AND P1, PT, R30, 0x65, PT ;
 Instr 755 @ 0x2f30 (12080) - IMAD.IADD R27, R5, 0x1, R27 ;
 Instr 756 @ 0x2f40 (12096) - SHFL.DOWN PT, R5, R27, 0x10, R4 ;
 Instr 757 @ 0x2f50 (12112) - VOTE.ANY R28, PT, P1 ;
 Instr 758 @ 0x2f60 (12128) - ISETP.GT.AND P1, PT, R29, R4, PT ;
 Instr 759 @ 0x2f70 (12144) - LOP3.LUT R28, R28, UR4, RZ, 0xc0, !PT ;
 Instr 760 @ 0x2f80 (12160) - ISETP.EQ.U32.AND P2, PT, R28, UR4, PT ;
 Instr 761 @ 0x2f90 (12176) - SEL R5, R5, RZ, !P1 ;
 Instr 762 @ 0x2fa0 (12192) - IMAD.IADD R27, R27, 0x1, R5 ;
Basic block id 71 - num instructions 3
 Instr 763 @ 0x2fb0 (12208) - BMOV.32.CLEAR RZ, B0 ;
 Instr 764 @ 0x2fc0 (12224) - BSSY B0, 0x33f0 ;
 Instr 765 @ 0x2fd0 (12240) - @!P2 BRA 0x33e0 ;
Basic block id 72 - num instructions 2
 Instr 766 @ 0x2fe0 (12256) - S2R R26, SR_LANEID ;
 Instr 767 @ 0x2ff0 (12272) - S2R R28, SR_GEMASK ;
Basic block id 73 - num instructions 5
 Instr 768 @ 0x3000 (12288) - IADD3 R16, R16, -0x20, RZ ;
 Instr 769 @ 0x3010 (12304) - IMAD.MOV.U32 R34, RZ, RZ, 0x8 ;
 Instr 770 @ 0x3020 (12320) - BMOV.32.CLEAR RZ, B1 ;
 Instr 771 @ 0x3030 (12336) - BSSY B1, 0x3130 ;
 Instr 772 @ 0x3040 (12352) - IMAD.WIDE R34, R16, R34, c[0x0][0x188] ;
Basic block id 74 - num instructions 4
 Instr 773 @ 0x3050 (12368) - MEMBAR.SC.CTA ;
 Instr 774 @ 0x3060 (12384) - LD.E.64.STRONG.GPU R30, [R34+0x100] ;
 Instr 775 @ 0x3070 (12400) - ISETP.NE.AND P1, PT, R30, 0x63, PT ;
 Instr 776 @ 0x3080 (12416) - BRA.DIV 0x5940 ;
Basic block id 75 - num instructions 2
 Instr 777 @ 0x3090 (12432) - VOTE.ANY R4, PT, !P1 ;
 Instr 778 @ 0x30a0 (12448) - ISETP.NE.U32.AND P1, PT, R4, RZ, PT ;
Basic block id 76 - num instructions 1
 Instr 779 @ 0x30b0 (12464) - @!P1 BRA 0x3120 ;
Basic block id 77 - num instructions 5
 Instr 780 @ 0x30c0 (12480) - VOTE.ANY R4, PT, PT ;
 Instr 781 @ 0x30d0 (12496) - YIELD ;
 Instr 782 @ 0x30e0 (12512) - VOTEU.ANY UR4, UPT, PT ;
 Instr 783 @ 0x30f0 (12528) - LOP3.LUT P1, RZ, R4, UR4, RZ, 0xc, !PT ;
 Instr 784 @ 0x3100 (12544) - @!P1 BRA.U 0x3050 ;
Basic block id 78 - num instructions 1
 Instr 785 @ 0x3110 (12560) - BRA 0x30c0 ;
Basic block id 79 - num instructions 3
 Instr 786 @ 0x3120 (12576) - BSYNC B1 ;
 Instr 787 @ 0x3130 (12592) - ISETP.NE.AND P1, PT, R30, 0x65, PT ;
 Instr 788 @ 0x3140 (12608) - BRA.DIV 0x59a0 ;
Basic block id 80 - num instructions 34
 Instr 789 @ 0x3150 (12624) - VOTE.ANY R4, PT, !P1 ;
 Instr 790 @ 0x3160 (12640) - VOTEU.ANY UR4, UPT, PT ;
 Instr 791 @ 0x3170 (12656) - LOP3.LUT R4, R4, 0x80000000, R28, 0xec, !PT ;
 Instr 792 @ 0x3180 (12672) - BREV R4, R4 ;
 Instr 793 @ 0x3190 (12688) - FLO.U32 R4, R4 ;
 Instr 794 @ 0x31a0 (12704) - IADD3 R4, -R4, 0x1f, RZ ;
 Instr 795 @ 0x31b0 (12720) - ISETP.GE.AND P1, PT, R26, R4, PT ;
 Instr 796 @ 0x31c0 (12736) - SHFL.DOWN PT, R5, R31, 0x1, R4 ;
 Instr 797 @ 0x31d0 (12752) - SEL R5, R5, RZ, !P1 ;
 Instr 798 @ 0x31e0 (12768) - IMAD.IADD R5, R31, 0x1, R5 ;
 Instr 799 @ 0x31f0 (12784) - IADD3 R31, R26, 0x2, RZ ;
 Instr 800 @ 0x3200 (12800) - ISETP.GT.AND P1, PT, R31, R4.reuse, PT ;
 Instr 801 @ 0x3210 (12816) - IADD3 R31, R26.reuse, 0x4, RZ ;
 Instr 802 @ 0x3220 (12832) - SHFL.DOWN PT, R29, R5, 0x2, R4 ;
 Instr 803 @ 0x3230 (12848) - SEL R29, R29, RZ, !P1 ;
 Instr 804 @ 0x3240 (12864) - ISETP.GT.AND P1, PT, R31, R4, PT ;
 Instr 805 @ 0x3250 (12880) - IADD3 R31, R26, 0x8, RZ ;
 Instr 806 @ 0x3260 (12896) - IMAD.IADD R29, R5, 0x1, R29 ;
 Instr 807 @ 0x3270 (12912) - SHFL.DOWN PT, R5, R29, 0x4, R4 ;
 Instr 808 @ 0x3280 (12928) - SEL R5, R5, RZ, !P1 ;
 Instr 809 @ 0x3290 (12944) - ISETP.GT.AND P1, PT, R31, R4, PT ;
 Instr 810 @ 0x32a0 (12960) - IADD3 R31, R26, 0x10, RZ ;
 Instr 811 @ 0x32b0 (12976) - IMAD.IADD R5, R29, 0x1, R5 ;
 Instr 812 @ 0x32c0 (12992) - SHFL.DOWN PT, R29, R5, 0x8, R4 ;
 Instr 813 @ 0x32d0 (13008) - SEL R29, R29, RZ, !P1 ;
 Instr 814 @ 0x32e0 (13024) - ISETP.NE.AND P1, PT, R30, 0x65, PT ;
 Instr 815 @ 0x32f0 (13040) - IMAD.IADD R29, R5, 0x1, R29 ;
 Instr 816 @ 0x3300 (13056) - SHFL.DOWN PT, R5, R29, 0x10, R4 ;
 Instr 817 @ 0x3310 (13072) - VOTE.ANY R30, PT, P1 ;
 Instr 818 @ 0x3320 (13088) - ISETP.GT.AND P1, PT, R31, R4, PT ;
 Instr 819 @ 0x3330 (13104) - LOP3.LUT R30, R30, UR4, RZ, 0xc0, !PT ;
 Instr 820 @ 0x3340 (13120) - ISETP.EQ.U32.AND P2, PT, R30, UR4, PT ;
 Instr 821 @ 0x3350 (13136) - SEL R5, R5, RZ, !P1 ;
 Instr 822 @ 0x3360 (13152) - IADD3 R27, R29, R5, R27 ;
Basic block id 81 - num instructions 1
 Instr 823 @ 0x3370 (13168) - @!P2 BRA 0x33e0 ;
Basic block id 82 - num instructions 5
 Instr 824 @ 0x3380 (13184) - VOTE.ANY R4, PT, PT ;
 Instr 825 @ 0x3390 (13200) - YIELD ;
 Instr 826 @ 0x33a0 (13216) - VOTEU.ANY UR4, UPT, PT ;
 Instr 827 @ 0x33b0 (13232) - LOP3.LUT P1, RZ, R4, UR4, RZ, 0xc, !PT ;
 Instr 828 @ 0x33c0 (13248) - @!P1 BRA.U 0x3000 ;
Basic block id 83 - num instructions 1
 Instr 829 @ 0x33d0 (13264) - BRA 0x3380 ;
Basic block id 84 - num instructions 11
 Instr 830 @ 0x33e0 (13280) - BSYNC B0 ;
 Instr 831 @ 0x33f0 (13296) - @!P0 IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 832 @ 0x3400 (13312) - ISETP.NE.AND P1, PT, R26, RZ, PT ;
 Instr 833 @ 0x3410 (13328) - @!P0 IMAD.IADD R7, R7, 0x1, R27 ;
 Instr 834 @ 0x3420 (13344) - @!P0 IMAD.WIDE R4, R0, R4, c[0x0][0x188] ;
 Instr 835 @ 0x3430 (13360) - @!P0 IMAD.MOV.U32 R6, RZ, RZ, 0x65 ;
 Instr 836 @ 0x3440 (13376) - @!P1 IMAD.MOV.U32 R22, RZ, RZ, R27 ;
 Instr 837 @ 0x3450 (13392) - @!P0 ST.E.64.STRONG.GPU [R4+0x100], R6 ;
 Instr 838 @ 0x3460 (13408) - @!P0 STS [0x28], R7 ;
 Instr 839 @ 0x3470 (13424) - @!P0 STS [0x24], R27 ;
 Instr 840 @ 0x3480 (13440) - @!P1 STS [0x14], R27 ;
Basic block id 85 - num instructions 16
 Instr 841 @ 0x3490 (13456) - WARPSYNC 0xffffffff ;
 Instr 842 @ 0x34a0 (13472) - BAR.SYNC 0x0 ;
 Instr 843 @ 0x34b0 (13488) - LDS.U R4, [0x14] ;
 Instr 844 @ 0x34c0 (13504) - LDS.U R0, [0x2c] ;
 Instr 845 @ 0x34d0 (13520) - S2R R26, SR_TID.X ;
 Instr 846 @ 0x34e0 (13536) - LDS.U R5, [0x24] ;
 Instr 847 @ 0x34f0 (13552) - ISETP.NE.AND P0, PT, R26, RZ, PT ;
 Instr 848 @ 0x3500 (13568) - SEL R4, R4, RZ, P0 ;
 Instr 849 @ 0x3510 (13584) - ISETP.GT.AND P0, PT, R0, 0x80, PT ;
 Instr 850 @ 0x3520 (13600) - IMAD.IADD R6, R4, 0x1, R22 ;
 Instr 851 @ 0x3530 (13616) - IMAD.MOV.U32 R4, RZ, RZ, R26 ;
 Instr 852 @ 0x3540 (13632) - IMAD.IADD R7, R25, 0x1, R6 ;
 Instr 853 @ 0x3550 (13648) - IMAD.IADD R16, R24, 0x1, R7 ;
 Instr 854 @ 0x3560 (13664) - IMAD.IADD R23, R23, 0x1, R16 ;
 Instr 855 @ 0x3570 (13680) - IMAD.IADD R20, R20, 0x1, R23 ;
 Instr 856 @ 0x3580 (13696) - @P0 BRA 0x36f0 ;
Basic block id 86 - num instructions 18
 Instr 857 @ 0x3590 (13712) - ISETP.NE.AND P0, PT, R32, RZ, PT ;
 Instr 858 @ 0x35a0 (13728) - ISETP.NE.AND P1, PT, R17, RZ, PT ;
 Instr 859 @ 0x35b0 (13744) - ISETP.NE.AND P2, PT, R18, RZ, PT ;
 Instr 860 @ 0x35c0 (13760) - ISETP.NE.AND P3, PT, R19, RZ, PT ;
 Instr 861 @ 0x35d0 (13776) - @P0 IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 862 @ 0x35e0 (13792) - @P1 IMAD.MOV.U32 R0, RZ, RZ, 0x8 ;
 Instr 863 @ 0x35f0 (13808) - @P0 IMAD.WIDE R4, R6, R4, c[0x0][0x178] ;
 Instr 864 @ 0x3600 (13824) - @P2 IMAD.MOV.U32 R17, RZ, RZ, 0x8 ;
 Instr 865 @ 0x3610 (13840) - @P3 IMAD.MOV.U32 R18, RZ, RZ, 0x8 ;
 Instr 866 @ 0x3620 (13856) - @P0 STG.E.64.SYS [R4], R14 ;
 Instr 867 @ 0x3630 (13872) - ISETP.NE.AND P0, PT, R21, RZ, PT ;
 Instr 868 @ 0x3640 (13888) - @P1 IMAD.WIDE R6, R7, R0, c[0x0][0x178] ;
 Instr 869 @ 0x3650 (13904) - @P2 IMAD.WIDE R16, R16, R17, c[0x0][0x178] ;
 Instr 870 @ 0x3660 (13920) - @P3 IMAD.WIDE R18, R23, R18, c[0x0][0x178] ;
 Instr 871 @ 0x3670 (13936) - @P1 STG.E.64.SYS [R6], R12 ;
 Instr 872 @ 0x3680 (13952) - @P2 STG.E.64.SYS [R16], R10 ;
 Instr 873 @ 0x3690 (13968) - @P3 STG.E.64.SYS [R18], R8 ;
 Instr 874 @ 0x36a0 (13984) - @!P0 EXIT ;
Basic block id 87 - num instructions 4
 Instr 875 @ 0x36b0 (14000) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 876 @ 0x36c0 (14016) - IMAD.WIDE R4, R20, R4, c[0x0][0x178] ;
 Instr 877 @ 0x36d0 (14032) - STG.E.64.SYS [R4], R2 ;
 Instr 878 @ 0x36e0 (14048) - EXIT ;
Basic block id 88 - num instructions 19
 Instr 879 @ 0x36f0 (14064) - BAR.SYNC 0x0 ;
 Instr 880 @ 0x3700 (14080) - ISETP.NE.AND P0, PT, R32, RZ, PT ;
 Instr 881 @ 0x3710 (14096) - ISETP.NE.AND P1, PT, R17, RZ, PT ;
 Instr 882 @ 0x3720 (14112) - ISETP.NE.AND P2, PT, R18, RZ, PT ;
 Instr 883 @ 0x3730 (14128) - ISETP.NE.AND P3, PT, R19, RZ, PT ;
 Instr 884 @ 0x3740 (14144) - ISETP.NE.AND P4, PT, R21, RZ, PT ;
 Instr 885 @ 0x3750 (14160) - @P0 IMAD.IADD R6, R6, 0x1, -R5.reuse ;
 Instr 886 @ 0x3760 (14176) - @P1 IMAD.IADD R7, R7, 0x1, -R5.reuse ;
 Instr 887 @ 0x3770 (14192) - @P2 IMAD.IADD R16, R16, 0x1, -R5.reuse ;
 Instr 888 @ 0x3780 (14208) - @P3 IMAD.IADD R17, R23, 0x1, -R5.reuse ;
 Instr 889 @ 0x3790 (14224) - @P0 STS.64 [R6.X8], R14 ;
 Instr 890 @ 0x37a0 (14240) - ISETP.GE.AND P0, PT, R4, R0, PT ;
 Instr 891 @ 0x37b0 (14256) - @P4 IMAD.IADD R18, R20, 0x1, -R5 ;
 Instr 892 @ 0x37c0 (14272) - @P1 STS.64 [R7.X8], R12 ;
 Instr 893 @ 0x37d0 (14288) - @P2 STS.64 [R16.X8], R10 ;
 Instr 894 @ 0x37e0 (14304) - @P3 STS.64 [R17.X8], R8 ;
 Instr 895 @ 0x37f0 (14320) - @P4 STS.64 [R18.X8], R2 ;
 Instr 896 @ 0x3800 (14336) - BAR.SYNC 0x0 ;
 Instr 897 @ 0x3810 (14352) - @P0 EXIT ;
Basic block id 89 - num instructions 9
 Instr 898 @ 0x3820 (14368) - LOP3.LUT R2, RZ, R4, RZ, 0x33, !PT ;
 Instr 899 @ 0x3830 (14384) - BMOV.32.CLEAR RZ, B0 ;
 Instr 900 @ 0x3840 (14400) - BSSY B0, 0x39d0 ;
 Instr 901 @ 0x3850 (14416) - IMAD.IADD R3, R2, 0x1, R0 ;
 Instr 902 @ 0x3860 (14432) - LEA.HI R2, R3.reuse, 0x1, RZ, 0x19 ;
 Instr 903 @ 0x3870 (14448) - ISETP.GE.U32.AND P1, PT, R3, 0x180, PT ;
 Instr 904 @ 0x3880 (14464) - LOP3.LUT R6, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 905 @ 0x3890 (14480) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 906 @ 0x38a0 (14496) - @!P0 BRA 0x39c0 ;
Basic block id 90 - num instructions 8
 Instr 907 @ 0x38b0 (14512) - IMAD.IADD R2, R5, 0x1, R26 ;
 Instr 908 @ 0x38c0 (14528) - IMAD.MOV.U32 R3, RZ, RZ, 0x8 ;
 Instr 909 @ 0x38d0 (14544) - IMAD.MOV.U32 R8, RZ, RZ, R6 ;
 Instr 910 @ 0x38e0 (14560) - IMAD.WIDE R2, R2, R3, c[0x0][0x178] ;
 Instr 911 @ 0x38f0 (14576) - IMAD.MOV.U32 R6, RZ, RZ, R2 ;
 Instr 912 @ 0x3900 (14592) - IMAD.MOV.U32 R7, RZ, RZ, R3 ;
 Instr 913 @ 0x3910 (14608) - IMAD.SHL.U32 R9, R26, 0x8, RZ ;
 Instr 914 @ 0x3920 (14624) - IMAD.MOV.U32 R4, RZ, RZ, R26 ;
Basic block id 91 - num instructions 9
 Instr 915 @ 0x3930 (14640) - LDS.U.64 R2, [R9] ;
 Instr 916 @ 0x3940 (14656) - IADD3 R8, R8, -0x1, RZ ;
 Instr 917 @ 0x3950 (14672) - IADD3 R4, R4, 0x80, RZ ;
 Instr 918 @ 0x3960 (14688) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 919 @ 0x3970 (14704) - IADD3 R9, R9, 0x400, RZ ;
 Instr 920 @ 0x3980 (14720) - STG.E.64.SYS [R6], R2 ;
 Instr 921 @ 0x3990 (14736) - IADD3 R6, P2, R6, 0x400, RZ ;
 Instr 922 @ 0x39a0 (14752) - IMAD.X R7, RZ, RZ, R7, P2 ;
 Instr 923 @ 0x39b0 (14768) - @P0 BRA 0x3930 ;
Basic block id 92 - num instructions 2
 Instr 924 @ 0x39c0 (14784) - BSYNC B0 ;
 Instr 925 @ 0x39d0 (14800) - @!P1 EXIT ;
Basic block id 93 - num instructions 12
 Instr 926 @ 0x39e0 (14816) - IMAD.IADD R2, R5, 0x1, R4.reuse ;
 Instr 927 @ 0x39f0 (14832) - BMOV.32.CLEAR RZ, B0 ;
 Instr 928 @ 0x3a00 (14848) - IMAD.IADD R5, R0, 0x1, -R4 ;
 Instr 929 @ 0x3a10 (14864) - BSSY B0, 0x3d50 ;
 Instr 930 @ 0x3a20 (14880) - IMAD.MOV.U32 R3, RZ, RZ, 0x8 ;
 Instr 931 @ 0x3a30 (14896) - ISETP.GT.AND P1, PT, R5, 0x600, PT ;
 Instr 932 @ 0x3a40 (14912) - IMAD.WIDE R2, R2, R3, c[0x0][0x178] ;
 Instr 933 @ 0x3a50 (14928) - LEA R5, R4, 0x800, 0x3 ;
 Instr 934 @ 0x3a60 (14944) - IADD3 R2, P0, R2, 0x800, RZ ;
 Instr 935 @ 0x3a70 (14960) - IMAD.X R3, RZ, RZ, R3, P0 ;
 Instr 936 @ 0x3a80 (14976) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 937 @ 0x3a90 (14992) - @!P1 BRA 0x3d40 ;
Basic block id 94 - num instructions 2
 Instr 938 @ 0x3aa0 (15008) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 939 @ 0x3ab0 (15024) - IADD3 R38, R0, -0x600, RZ ;
Basic block id 95 - num instructions 40
 Instr 940 @ 0x3ac0 (15040) - LDS.U.64 R6, [R5+-0x800] ;
 Instr 941 @ 0x3ad0 (15056) - IADD3 R4, R4, 0x800, RZ ;
 Instr 942 @ 0x3ae0 (15072) - LDS.U.64 R8, [R5+-0x400] ;
 Instr 943 @ 0x3af0 (15088) - ISETP.GE.AND P1, PT, R4, R38, PT ;
 Instr 944 @ 0x3b00 (15104) - LDS.U.64 R10, [R5] ;
 Instr 945 @ 0x3b10 (15120) - LDS.U.64 R12, [R5+0x400] ;
 Instr 946 @ 0x3b20 (15136) - LDS.U.64 R14, [R5+0x800] ;
 Instr 947 @ 0x3b30 (15152) - LDS.U.64 R16, [R5+0xc00] ;
 Instr 948 @ 0x3b40 (15168) - LDS.U.64 R18, [R5+0x1000] ;
 Instr 949 @ 0x3b50 (15184) - LDS.U.64 R20, [R5+0x1400] ;
 Instr 950 @ 0x3b60 (15200) - LDS.U.64 R22, [R5+0x1800] ;
 Instr 951 @ 0x3b70 (15216) - LDS.U.64 R24, [R5+0x1c00] ;
 Instr 952 @ 0x3b80 (15232) - LDS.U.64 R26, [R5+0x2000] ;
 Instr 953 @ 0x3b90 (15248) - LDS.U.64 R28, [R5+0x2400] ;
 Instr 954 @ 0x3ba0 (15264) - LDS.U.64 R30, [R5+0x2800] ;
 Instr 955 @ 0x3bb0 (15280) - LDS.U.64 R32, [R5+0x2c00] ;
 Instr 956 @ 0x3bc0 (15296) - LDS.U.64 R34, [R5+0x3000] ;
 Instr 957 @ 0x3bd0 (15312) - LDS.U.64 R36, [R5+0x3400] ;
 Instr 958 @ 0x3be0 (15328) - STG.E.64.SYS [R2+-0x800], R6 ;
 Instr 959 @ 0x3bf0 (15344) - IADD3 R5, R5, 0x4000, RZ ;
 Instr 960 @ 0x3c00 (15360) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 961 @ 0x3c10 (15376) - STG.E.64.SYS [R2], R10 ;
 Instr 962 @ 0x3c20 (15392) - STG.E.64.SYS [R2+0x400], R12 ;
 Instr 963 @ 0x3c30 (15408) - IADD3 R6, P2, R2, 0x4000, RZ ;
 Instr 964 @ 0x3c40 (15424) - STG.E.64.SYS [R2+0x800], R14 ;
 Instr 965 @ 0x3c50 (15440) - IMAD.X R7, RZ, RZ, R3, P2 ;
 Instr 966 @ 0x3c60 (15456) - STG.E.64.SYS [R2+0xc00], R16 ;
 Instr 967 @ 0x3c70 (15472) - STG.E.64.SYS [R2+0x1000], R18 ;
 Instr 968 @ 0x3c80 (15488) - STG.E.64.SYS [R2+0x1400], R20 ;
 Instr 969 @ 0x3c90 (15504) - STG.E.64.SYS [R2+0x1800], R22 ;
 Instr 970 @ 0x3ca0 (15520) - STG.E.64.SYS [R2+0x1c00], R24 ;
 Instr 971 @ 0x3cb0 (15536) - STG.E.64.SYS [R2+0x2000], R26 ;
 Instr 972 @ 0x3cc0 (15552) - STG.E.64.SYS [R2+0x2400], R28 ;
 Instr 973 @ 0x3cd0 (15568) - STG.E.64.SYS [R2+0x2800], R30 ;
 Instr 974 @ 0x3ce0 (15584) - STG.E.64.SYS [R2+0x2c00], R32 ;
 Instr 975 @ 0x3cf0 (15600) - STG.E.64.SYS [R2+0x3000], R34 ;
 Instr 976 @ 0x3d00 (15616) - STG.E.64.SYS [R2+0x3400], R36 ;
 Instr 977 @ 0x3d10 (15632) - IMAD.MOV.U32 R2, RZ, RZ, R6 ;
 Instr 978 @ 0x3d20 (15648) - IMAD.MOV.U32 R3, RZ, RZ, R7 ;
 Instr 979 @ 0x3d30 (15664) - @!P1 BRA 0x3ac0 ;
Basic block id 96 - num instructions 6
 Instr 980 @ 0x3d40 (15680) - BSYNC B0 ;
 Instr 981 @ 0x3d50 (15696) - IMAD.IADD R6, R0, 0x1, -R4 ;
 Instr 982 @ 0x3d60 (15712) - BMOV.32.CLEAR RZ, B0 ;
 Instr 983 @ 0x3d70 (15728) - BSSY B0, 0x3f00 ;
 Instr 984 @ 0x3d80 (15744) - ISETP.GT.AND P1, PT, R6, 0x200, PT ;
 Instr 985 @ 0x3d90 (15760) - @!P1 BRA 0x3ef0 ;
Basic block id 97 - num instructions 4
 Instr 986 @ 0x3da0 (15776) - LDS.U.64 R6, [R5+-0x800] ;
 Instr 987 @ 0x3db0 (15792) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 988 @ 0x3dc0 (15808) - IADD3 R4, R4, 0x400, RZ ;
 Instr 989 @ 0x3dd0 (15824) - LDS.U.64 R8, [R5+-0x400] ;
Basic block id 98 - num instructions 17
 Instr 990 @ 0x3de0 (15840) - LDS.U.64 R10, [R5] ;
 Instr 991 @ 0x3df0 (15856) - LDS.U.64 R12, [R5+0x400] ;
 Instr 992 @ 0x3e00 (15872) - LDS.U.64 R14, [R5+0x800] ;
 Instr 993 @ 0x3e10 (15888) - LDS.U.64 R16, [R5+0xc00] ;
 Instr 994 @ 0x3e20 (15904) - LDS.U.64 R18, [R5+0x1000] ;
 Instr 995 @ 0x3e30 (15920) - LDS.U.64 R20, [R5+0x1400] ;
 Instr 996 @ 0x3e40 (15936) - IADD3 R5, R5, 0x2000, RZ ;
 Instr 997 @ 0x3e50 (15952) - STG.E.64.SYS [R2+-0x800], R6 ;
 Instr 998 @ 0x3e60 (15968) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 999 @ 0x3e70 (15984) - STG.E.64.SYS [R2], R10 ;
 Instr 1000 @ 0x3e80 (16000) - STG.E.64.SYS [R2+0x400], R12 ;
 Instr 1001 @ 0x3e90 (16016) - STG.E.64.SYS [R2+0x800], R14 ;
 Instr 1002 @ 0x3ea0 (16032) - STG.E.64.SYS [R2+0xc00], R16 ;
 Instr 1003 @ 0x3eb0 (16048) - STG.E.64.SYS [R2+0x1000], R18 ;
 Instr 1004 @ 0x3ec0 (16064) - STG.E.64.SYS [R2+0x1400], R20 ;
 Instr 1005 @ 0x3ed0 (16080) - IADD3 R2, P1, R2, 0x2000, RZ ;
 Instr 1006 @ 0x3ee0 (16096) - IMAD.X R3, RZ, RZ, R3, P1 ;
Basic block id 99 - num instructions 3
 Instr 1007 @ 0x3ef0 (16112) - BSYNC B0 ;
 Instr 1008 @ 0x3f00 (16128) - ISETP.LT.OR P0, PT, R4, R0, P0 ;
 Instr 1009 @ 0x3f10 (16144) - @!P0 EXIT ;
Basic block id 100 - num instructions 9
 Instr 1010 @ 0x3f20 (16160) - LDS.U.64 R6, [R5+-0x800] ;
 Instr 1011 @ 0x3f30 (16176) - LDS.U.64 R8, [R5+-0x400] ;
 Instr 1012 @ 0x3f40 (16192) - LDS.U.64 R10, [R5] ;
 Instr 1013 @ 0x3f50 (16208) - LDS.U.64 R4, [R5+0x400] ;
 Instr 1014 @ 0x3f60 (16224) - STG.E.64.SYS [R2+-0x800], R6 ;
 Instr 1015 @ 0x3f70 (16240) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 1016 @ 0x3f80 (16256) - STG.E.64.SYS [R2], R10 ;
 Instr 1017 @ 0x3f90 (16272) - STG.E.64.SYS [R2+0x400], R4 ;
 Instr 1018 @ 0x3fa0 (16288) - EXIT ;
Basic block id 101 - num instructions 59
 Instr 1019 @ 0x3fb0 (16304) - BAR.SYNC 0x0 ;
 Instr 1020 @ 0x3fc0 (16320) - LDG.E.U8.SYS R28, [R4] ;
 Instr 1021 @ 0x3fd0 (16336) - LDG.E.U8.SYS R17, [R4+0x1] ;
 Instr 1022 @ 0x3fe0 (16352) - LDG.E.U8.SYS R18, [R4+0x2] ;
 Instr 1023 @ 0x3ff0 (16368) - LDG.E.U8.SYS R19, [R4+0x3] ;
 Instr 1024 @ 0x4000 (16384) - LDG.E.U8.SYS R0, [R4+0x4] ;
 Instr 1025 @ 0x4010 (16400) - S2R R27, SR_LANEID ;
 Instr 1026 @ 0x4020 (16416) - BAR.SYNC 0x0 ;
 Instr 1027 @ 0x4030 (16432) - ISETP.NE.AND P0, PT, R28, RZ, PT ;
 Instr 1028 @ 0x4040 (16448) - ISETP.NE.AND P1, PT, R17, RZ, PT ;
 Instr 1029 @ 0x4050 (16464) - SEL R20, RZ, 0x1, !P0 ;
 Instr 1030 @ 0x4060 (16480) - ISETP.NE.AND P2, PT, R18, RZ, PT ;
 Instr 1031 @ 0x4070 (16496) - SEL R21, RZ, 0x1, !P1 ;
 Instr 1032 @ 0x4080 (16512) - ISETP.NE.AND P3, PT, R19, RZ, PT ;
 Instr 1033 @ 0x4090 (16528) - SEL R22, RZ, 0x1, !P2 ;
 Instr 1034 @ 0x40a0 (16544) - SEL R23, RZ, 0x1, !P3 ;
 Instr 1035 @ 0x40b0 (16560) - IADD3 R4, R22, R21, R20 ;
 Instr 1036 @ 0x40c0 (16576) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1037 @ 0x40d0 (16592) - ISETP.NE.AND P1, PT, R27, 0x1f, PT ;
 Instr 1038 @ 0x40e0 (16608) - IMAD.IADD R4, R23, 0x1, R4 ;
 Instr 1039 @ 0x40f0 (16624) - ISETP.NE.AND P2, PT, R27, RZ, PT ;
 Instr 1040 @ 0x4100 (16640) - IADD3 R24, R4, 0x1, RZ ;
 Instr 1041 @ 0x4110 (16656) - @!P0 IMAD.MOV R24, RZ, RZ, R4 ;
 Instr 1042 @ 0x4120 (16672) - SHFL.UP P0, R4, R24, 0x1, RZ ;
 Instr 1043 @ 0x4130 (16688) - @P0 IMAD.IADD R4, R4, 0x1, R24 ;
 Instr 1044 @ 0x4140 (16704) - SHFL.UP P0, R5, R4, 0x2, RZ ;
 Instr 1045 @ 0x4150 (16720) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 1046 @ 0x4160 (16736) - SHFL.UP P0, R4, R5, 0x4, RZ ;
 Instr 1047 @ 0x4170 (16752) - @P0 IMAD.IADD R4, R5, 0x1, R4 ;
 Instr 1048 @ 0x4180 (16768) - SHFL.UP P0, R5, R4, 0x8, RZ ;
 Instr 1049 @ 0x4190 (16784) - @P0 IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 1050 @ 0x41a0 (16800) - SHFL.UP P0, R25, R5, 0x10, RZ ;
 Instr 1051 @ 0x41b0 (16816) - @P0 IMAD.IADD R25, R5, 0x1, R25 ;
 Instr 1052 @ 0x41c0 (16832) - ISETP.NE.AND P0, PT, R26, 0x2, PT ;
 Instr 1053 @ 0x41d0 (16848) - IMAD.IADD R24, R25, 0x1, -R24 ;
 Instr 1054 @ 0x41e0 (16864) - @!P1 STS [R26.X4], R25 ;
 Instr 1055 @ 0x41f0 (16880) - BAR.SYNC 0x0 ;
 Instr 1056 @ 0x4200 (16896) - LDS.U.128 R4, [RZ] ;
 Instr 1057 @ 0x4210 (16912) - ISETP.NE.AND P1, PT, R26, 0x3, PT ;
 Instr 1058 @ 0x4220 (16928) - SEL R24, R24, RZ, P2 ;
 Instr 1059 @ 0x4230 (16944) - IMAD.IADD R5, R4, 0x1, R5 ;
 Instr 1060 @ 0x4240 (16960) - SEL R4, R5.reuse, R4, !P0 ;
 Instr 1061 @ 0x4250 (16976) - IMAD.IADD R5, R5, 0x1, R6 ;
 Instr 1062 @ 0x4260 (16992) - ISETP.NE.AND P0, PT, R26, RZ, PT ;
 Instr 1063 @ 0x4270 (17008) - SEL R4, R5, R4, !P1 ;
 Instr 1064 @ 0x4280 (17024) - IMAD.IADD R5, R7, 0x1, R5 ;
 Instr 1065 @ 0x4290 (17040) - ISETP.NE.AND P1, PT, R16, RZ, PT ;
 Instr 1066 @ 0x42a0 (17056) - SEL R4, R4, RZ, P0 ;
 Instr 1067 @ 0x42b0 (17072) - ISETP.GT.AND P0, PT, R5, 0x80, PT ;
 Instr 1068 @ 0x42c0 (17088) - IMAD.IADD R24, R4, 0x1, R24 ;
 Instr 1069 @ 0x42d0 (17104) - IMAD.IADD R20, R20, 0x1, R24 ;
 Instr 1070 @ 0x42e0 (17120) - @!P1 IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x188] ;
 Instr 1071 @ 0x42f0 (17136) - @!P1 IMAD.MOV.U32 R7, RZ, RZ, c[0x0][0x18c] ;
 Instr 1072 @ 0x4300 (17152) - @!P1 IMAD.MOV.U32 R4, RZ, RZ, 0x65 ;
 Instr 1073 @ 0x4310 (17168) - IMAD.IADD R21, R21, 0x1, R20 ;
 Instr 1074 @ 0x4320 (17184) - IMAD.IADD R22, R22, 0x1, R21 ;
 Instr 1075 @ 0x4330 (17200) - @!P1 ST.E.64.STRONG.GPU [R6+0x100], R4 ;
 Instr 1076 @ 0x4340 (17216) - IMAD.IADD R23, R23, 0x1, R22 ;
 Instr 1077 @ 0x4350 (17232) - @P0 BRA 0x44c0 ;
Basic block id 102 - num instructions 18
 Instr 1078 @ 0x4360 (17248) - ISETP.NE.AND P0, PT, R28, RZ, PT ;
 Instr 1079 @ 0x4370 (17264) - ISETP.NE.AND P1, PT, R17, RZ, PT ;
 Instr 1080 @ 0x4380 (17280) - ISETP.NE.AND P2, PT, R18, RZ, PT ;
 Instr 1081 @ 0x4390 (17296) - ISETP.NE.AND P3, PT, R19, RZ, PT ;
 Instr 1082 @ 0x43a0 (17312) - @P0 IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 1083 @ 0x43b0 (17328) - @P1 IMAD.MOV.U32 R6, RZ, RZ, 0x8 ;
 Instr 1084 @ 0x43c0 (17344) - @P0 IMAD.WIDE R4, R24, R4, c[0x0][0x178] ;
 Instr 1085 @ 0x43d0 (17360) - @P2 IMAD.MOV.U32 R16, RZ, RZ, 0x8 ;
 Instr 1086 @ 0x43e0 (17376) - @P3 IMAD.MOV.U32 R18, RZ, RZ, 0x8 ;
 Instr 1087 @ 0x43f0 (17392) - @P0 STG.E.64.SYS [R4], R14 ;
 Instr 1088 @ 0x4400 (17408) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1089 @ 0x4410 (17424) - @P1 IMAD.WIDE R6, R20, R6, c[0x0][0x178] ;
 Instr 1090 @ 0x4420 (17440) - @P2 IMAD.WIDE R16, R21, R16, c[0x0][0x178] ;
 Instr 1091 @ 0x4430 (17456) - @P3 IMAD.WIDE R18, R22, R18, c[0x0][0x178] ;
 Instr 1092 @ 0x4440 (17472) - @P1 STG.E.64.SYS [R6], R12 ;
 Instr 1093 @ 0x4450 (17488) - @P2 STG.E.64.SYS [R16], R10 ;
 Instr 1094 @ 0x4460 (17504) - @P3 STG.E.64.SYS [R18], R8 ;
 Instr 1095 @ 0x4470 (17520) - @!P0 EXIT ;
Basic block id 103 - num instructions 4
 Instr 1096 @ 0x4480 (17536) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
 Instr 1097 @ 0x4490 (17552) - IMAD.WIDE R4, R23, R4, c[0x0][0x178] ;
 Instr 1098 @ 0x44a0 (17568) - STG.E.64.SYS [R4], R2 ;
 Instr 1099 @ 0x44b0 (17584) - EXIT ;
Basic block id 104 - num instructions 14
 Instr 1100 @ 0x44c0 (17600) - BAR.SYNC 0x0 ;
 Instr 1101 @ 0x44d0 (17616) - ISETP.NE.AND P0, PT, R28, RZ, PT ;
 Instr 1102 @ 0x44e0 (17632) - ISETP.NE.AND P1, PT, R17, RZ, PT ;
 Instr 1103 @ 0x44f0 (17648) - ISETP.NE.AND P2, PT, R18, RZ, PT ;
 Instr 1104 @ 0x4500 (17664) - ISETP.NE.AND P3, PT, R19, RZ, PT ;
 Instr 1105 @ 0x4510 (17680) - ISETP.NE.AND P4, PT, R0, RZ, PT ;
 Instr 1106 @ 0x4520 (17696) - @P0 STS.64 [R24.X8], R14 ;
 Instr 1107 @ 0x4530 (17712) - ISETP.GE.AND P0, PT, R16, R5, PT ;
 Instr 1108 @ 0x4540 (17728) - @P1 STS.64 [R20.X8], R12 ;
 Instr 1109 @ 0x4550 (17744) - @P2 STS.64 [R21.X8], R10 ;
 Instr 1110 @ 0x4560 (17760) - @P3 STS.64 [R22.X8], R8 ;
 Instr 1111 @ 0x4570 (17776) - @P4 STS.64 [R23.X8], R2 ;
 Instr 1112 @ 0x4580 (17792) - BAR.SYNC 0x0 ;
 Instr 1113 @ 0x4590 (17808) - @P0 EXIT ;
Basic block id 105 - num instructions 9
 Instr 1114 @ 0x45a0 (17824) - LOP3.LUT R0, RZ, R16, RZ, 0x33, !PT ;
 Instr 1115 @ 0x45b0 (17840) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1116 @ 0x45c0 (17856) - BSSY B0, 0x4720 ;
 Instr 1117 @ 0x45d0 (17872) - IMAD.IADD R2, R5, 0x1, R0 ;
 Instr 1118 @ 0x45e0 (17888) - LEA.HI R0, R2.reuse, 0x1, RZ, 0x19 ;
 Instr 1119 @ 0x45f0 (17904) - ISETP.GE.U32.AND P1, PT, R2, 0x180, PT ;
 Instr 1120 @ 0x4600 (17920) - LOP3.LUT R0, R0, 0x3, RZ, 0xc0, !PT ;
 Instr 1121 @ 0x4610 (17936) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1122 @ 0x4620 (17952) - @!P0 BRA 0x4710 ;
Basic block id 106 - num instructions 5
 Instr 1123 @ 0x4630 (17968) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
 Instr 1124 @ 0x4640 (17984) - IMAD.SHL.U32 R8, R16.reuse, 0x8, RZ ;
 Instr 1125 @ 0x4650 (18000) - IMAD.WIDE R2, R16, R2, c[0x0][0x178] ;
 Instr 1126 @ 0x4660 (18016) - IMAD.MOV.U32 R6, RZ, RZ, R2 ;
 Instr 1127 @ 0x4670 (18032) - IMAD.MOV.U32 R7, RZ, RZ, R3 ;
Basic block id 107 - num instructions 9
 Instr 1128 @ 0x4680 (18048) - LDS.U.64 R2, [R8] ;
 Instr 1129 @ 0x4690 (18064) - IADD3 R0, R0, -0x1, RZ ;
 Instr 1130 @ 0x46a0 (18080) - IADD3 R16, R16, 0x80, RZ ;
 Instr 1131 @ 0x46b0 (18096) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1132 @ 0x46c0 (18112) - IADD3 R8, R8, 0x400, RZ ;
 Instr 1133 @ 0x46d0 (18128) - STG.E.64.SYS [R6], R2 ;
 Instr 1134 @ 0x46e0 (18144) - IADD3 R6, P2, R6, 0x400, RZ ;
 Instr 1135 @ 0x46f0 (18160) - IMAD.X R7, RZ, RZ, R7, P2 ;
 Instr 1136 @ 0x4700 (18176) - @P0 BRA 0x4680 ;
Basic block id 108 - num instructions 2
 Instr 1137 @ 0x4710 (18192) - BSYNC B0 ;
 Instr 1138 @ 0x4720 (18208) - @!P1 EXIT ;
Basic block id 109 - num instructions 11
 Instr 1139 @ 0x4730 (18224) - IMAD.IADD R0, R5, 0x1, -R16 ;
 Instr 1140 @ 0x4740 (18240) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1141 @ 0x4750 (18256) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
 Instr 1142 @ 0x4760 (18272) - BSSY B0, 0x4a90 ;
 Instr 1143 @ 0x4770 (18288) - ISETP.GT.AND P1, PT, R0, 0x600, PT ;
 Instr 1144 @ 0x4780 (18304) - IMAD.WIDE R2, R16.reuse, R2, c[0x0][0x178] ;
 Instr 1145 @ 0x4790 (18320) - LEA R0, R16, 0x800, 0x3 ;
 Instr 1146 @ 0x47a0 (18336) - IADD3 R2, P0, R2, 0x800, RZ ;
 Instr 1147 @ 0x47b0 (18352) - IMAD.X R3, RZ, RZ, R3, P0 ;
 Instr 1148 @ 0x47c0 (18368) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 1149 @ 0x47d0 (18384) - @!P1 BRA 0x4a80 ;
Basic block id 110 - num instructions 2
 Instr 1150 @ 0x47e0 (18400) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 1151 @ 0x47f0 (18416) - IADD3 R17, R5, -0x600, RZ ;
Basic block id 111 - num instructions 40
 Instr 1152 @ 0x4800 (18432) - LDS.U.64 R6, [R0+-0x800] ;
 Instr 1153 @ 0x4810 (18448) - IADD3 R16, R16, 0x800, RZ ;
 Instr 1154 @ 0x4820 (18464) - LDS.U.64 R8, [R0+-0x400] ;
 Instr 1155 @ 0x4830 (18480) - ISETP.GE.AND P1, PT, R16, R17, PT ;
 Instr 1156 @ 0x4840 (18496) - LDS.U.64 R10, [R0] ;
 Instr 1157 @ 0x4850 (18512) - LDS.U.64 R12, [R0+0x400] ;
 Instr 1158 @ 0x4860 (18528) - LDS.U.64 R14, [R0+0x800] ;
 Instr 1159 @ 0x4870 (18544) - LDS.U.64 R18, [R0+0xc00] ;
 Instr 1160 @ 0x4880 (18560) - LDS.U.64 R20, [R0+0x1000] ;
 Instr 1161 @ 0x4890 (18576) - LDS.U.64 R22, [R0+0x1400] ;
 Instr 1162 @ 0x48a0 (18592) - LDS.U.64 R24, [R0+0x1800] ;
 Instr 1163 @ 0x48b0 (18608) - LDS.U.64 R26, [R0+0x1c00] ;
 Instr 1164 @ 0x48c0 (18624) - LDS.U.64 R28, [R0+0x2000] ;
 Instr 1165 @ 0x48d0 (18640) - LDS.U.64 R30, [R0+0x2400] ;
 Instr 1166 @ 0x48e0 (18656) - LDS.U.64 R32, [R0+0x2800] ;
 Instr 1167 @ 0x48f0 (18672) - LDS.U.64 R34, [R0+0x2c00] ;
 Instr 1168 @ 0x4900 (18688) - LDS.U.64 R36, [R0+0x3000] ;
 Instr 1169 @ 0x4910 (18704) - LDS.U.64 R38, [R0+0x3400] ;
 Instr 1170 @ 0x4920 (18720) - STG.E.64.SYS [R2+-0x800], R6 ;
 Instr 1171 @ 0x4930 (18736) - IADD3 R0, R0, 0x4000, RZ ;
 Instr 1172 @ 0x4940 (18752) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 1173 @ 0x4950 (18768) - STG.E.64.SYS [R2], R10 ;
 Instr 1174 @ 0x4960 (18784) - STG.E.64.SYS [R2+0x400], R12 ;
 Instr 1175 @ 0x4970 (18800) - IADD3 R6, P2, R2, 0x4000, RZ ;
 Instr 1176 @ 0x4980 (18816) - STG.E.64.SYS [R2+0x800], R14 ;
 Instr 1177 @ 0x4990 (18832) - IMAD.X R7, RZ, RZ, R3, P2 ;
 Instr 1178 @ 0x49a0 (18848) - STG.E.64.SYS [R2+0xc00], R18 ;
 Instr 1179 @ 0x49b0 (18864) - STG.E.64.SYS [R2+0x1000], R20 ;
 Instr 1180 @ 0x49c0 (18880) - STG.E.64.SYS [R2+0x1400], R22 ;
 Instr 1181 @ 0x49d0 (18896) - STG.E.64.SYS [R2+0x1800], R24 ;
 Instr 1182 @ 0x49e0 (18912) - STG.E.64.SYS [R2+0x1c00], R26 ;
 Instr 1183 @ 0x49f0 (18928) - STG.E.64.SYS [R2+0x2000], R28 ;
 Instr 1184 @ 0x4a00 (18944) - STG.E.64.SYS [R2+0x2400], R30 ;
 Instr 1185 @ 0x4a10 (18960) - STG.E.64.SYS [R2+0x2800], R32 ;
 Instr 1186 @ 0x4a20 (18976) - STG.E.64.SYS [R2+0x2c00], R34 ;
 Instr 1187 @ 0x4a30 (18992) - STG.E.64.SYS [R2+0x3000], R36 ;
 Instr 1188 @ 0x4a40 (19008) - STG.E.64.SYS [R2+0x3400], R38 ;
 Instr 1189 @ 0x4a50 (19024) - IMAD.MOV.U32 R2, RZ, RZ, R6 ;
 Instr 1190 @ 0x4a60 (19040) - IMAD.MOV.U32 R3, RZ, RZ, R7 ;
 Instr 1191 @ 0x4a70 (19056) - @!P1 BRA 0x4800 ;
Basic block id 112 - num instructions 6
 Instr 1192 @ 0x4a80 (19072) - BSYNC B0 ;
 Instr 1193 @ 0x4a90 (19088) - IMAD.IADD R6, R5, 0x1, -R16 ;
 Instr 1194 @ 0x4aa0 (19104) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1195 @ 0x4ab0 (19120) - BSSY B0, 0x4c40 ;
 Instr 1196 @ 0x4ac0 (19136) - ISETP.GT.AND P1, PT, R6, 0x200, PT ;
 Instr 1197 @ 0x4ad0 (19152) - @!P1 BRA 0x4c30 ;
Basic block id 113 - num instructions 4
 Instr 1198 @ 0x4ae0 (19168) - LDS.U.64 R6, [R0+-0x800] ;
 Instr 1199 @ 0x4af0 (19184) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
 Instr 1200 @ 0x4b00 (19200) - IADD3 R16, R16, 0x400, RZ ;
 Instr 1201 @ 0x4b10 (19216) - LDS.U.64 R8, [R0+-0x400] ;
Basic block id 114 - num instructions 17
 Instr 1202 @ 0x4b20 (19232) - LDS.U.64 R10, [R0] ;
 Instr 1203 @ 0x4b30 (19248) - LDS.U.64 R12, [R0+0x400] ;
 Instr 1204 @ 0x4b40 (19264) - LDS.U.64 R14, [R0+0x800] ;
 Instr 1205 @ 0x4b50 (19280) - LDS.U.64 R18, [R0+0xc00] ;
 Instr 1206 @ 0x4b60 (19296) - LDS.U.64 R20, [R0+0x1000] ;
 Instr 1207 @ 0x4b70 (19312) - LDS.U.64 R22, [R0+0x1400] ;
 Instr 1208 @ 0x4b80 (19328) - IADD3 R0, R0, 0x2000, RZ ;
 Instr 1209 @ 0x4b90 (19344) - STG.E.64.SYS [R2+-0x800], R6 ;
 Instr 1210 @ 0x4ba0 (19360) - STG.E.64.SYS [R2+-0x400], R8 ;
 Instr 1211 @ 0x4bb0 (19376) - STG.E.64.SYS [R2], R10 ;
 Instr 1212 @ 0x4bc0 (19392) - STG.E.64.SYS [R2+0x400], R12 ;
 Instr 1213 @ 0x4bd0 (19408) - STG.E.64.SYS [R2+0x800], R14 ;
 Instr 1214 @ 0x4be0 (19424) - STG.E.64.SYS [R2+0xc00], R18 ;
 Instr 1215 @ 0x4bf0 (19440) - STG.E.64.SYS [R2+0x1000], R20 ;
 Instr 1216 @ 0x4c00 (19456) - STG.E.64.SYS [R2+0x1400], R22 ;
 Instr 1217 @ 0x4c10 (19472) - IADD3 R2, P1, R2, 0x2000, RZ ;
 Instr 1218 @ 0x4c20 (19488) - IMAD.X R3, RZ, RZ, R3, P1 ;
Basic block id 115 - num instructions 3
 Instr 1219 @ 0x4c30 (19504) - BSYNC B0 ;
 Instr 1220 @ 0x4c40 (19520) - ISETP.LT.OR P0, PT, R16, R5, P0 ;
 Instr 1221 @ 0x4c50 (19536) - @!P0 EXIT ;
Basic block id 116 - num instructions 9
 Instr 1222 @ 0x4c60 (19552) - LDS.U.64 R4, [R0+-0x800] ;
 Instr 1223 @ 0x4c70 (19568) - LDS.U.64 R6, [R0+-0x400] ;
 Instr 1224 @ 0x4c80 (19584) - LDS.U.64 R8, [R0] ;
 Instr 1225 @ 0x4c90 (19600) - LDS.U.64 R10, [R0+0x400] ;
 Instr 1226 @ 0x4ca0 (19616) - STG.E.64.SYS [R2+-0x800], R4 ;
 Instr 1227 @ 0x4cb0 (19632) - STG.E.64.SYS [R2+-0x400], R6 ;
 Instr 1228 @ 0x4cc0 (19648) - STG.E.64.SYS [R2], R8 ;
 Instr 1229 @ 0x4cd0 (19664) - STG.E.64.SYS [R2+0x400], R10 ;
 Instr 1230 @ 0x4ce0 (19680) - EXIT ;
Basic block id 117 - num instructions 4
 Instr 1231 @ 0x4cf0 (19696) - SEL R4, RZ, 0x1, P0 ;
 Instr 1232 @ 0x4d00 (19712) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1233 @ 0x4d10 (19728) - MOV R36, 0x4d30 ;
 Instr 1234 @ 0x4d20 (19744) - CALL.REL.NOINC 0x5df0 ;
Basic block id 118 - num instructions 2
 Instr 1235 @ 0x4d30 (19760) - ISETP.EQ.U32.AND P0, PT, R33, 0x1, PT ;
 Instr 1236 @ 0x4d40 (19776) - BRA 0x710 ;
Basic block id 119 - num instructions 4
 Instr 1237 @ 0x4d50 (19792) - SEL R4, RZ, 0x1, P0 ;
 Instr 1238 @ 0x4d60 (19808) - IMAD.MOV.U32 R29, RZ, RZ, -0x1 ;
 Instr 1239 @ 0x4d70 (19824) - MOV R5, 0x4d90 ;
 Instr 1240 @ 0x4d80 (19840) - CALL.REL.NOINC 0x5e70 ;
Basic block id 120 - num instructions 10
 Instr 1241 @ 0x4d90 (19856) - S2R R4, SR_GEMASK ;
 Instr 1242 @ 0x4da0 (19872) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1243 @ 0x4db0 (19888) - LOP3.LUT R4, R29, 0x80000000, R4, 0xec, !PT ;
 Instr 1244 @ 0x4dc0 (19904) - IMAD.MOV.U32 R29, RZ, RZ, 0x1 ;
 Instr 1245 @ 0x4dd0 (19920) - BREV R4, R4 ;
 Instr 1246 @ 0x4de0 (19936) - FLO.U32 R4, R4 ;
 Instr 1247 @ 0x4df0 (19952) - IADD3 R25, -R4, 0x1f, RZ ;
 Instr 1248 @ 0x4e00 (19968) - MOV R4, 0x4e30 ;
 Instr 1249 @ 0x4e10 (19984) - IMAD.MOV.U32 R33, RZ, RZ, R25 ;
 Instr 1250 @ 0x4e20 (20000) - CALL.REL.NOINC 0x5d00 ;
Basic block id 121 - num instructions 8
 Instr 1251 @ 0x4e30 (20016) - ISETP.GE.AND P0, PT, R23, R25, PT ;
 Instr 1252 @ 0x4e40 (20032) - IMAD.MOV.U32 R33, RZ, RZ, R25 ;
 Instr 1253 @ 0x4e50 (20048) - MOV R4, 0x4eb0 ;
 Instr 1254 @ 0x4e60 (20064) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1255 @ 0x4e70 (20080) - SEL R29, R29, RZ, !P0 ;
 Instr 1256 @ 0x4e80 (20096) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1257 @ 0x4e90 (20112) - IMAD.MOV.U32 R29, RZ, RZ, 0x2 ;
 Instr 1258 @ 0x4ea0 (20128) - CALL.REL.NOINC 0x5d00 ;
Basic block id 122 - num instructions 9
 Instr 1259 @ 0x4eb0 (20144) - IADD3 R4, R23, 0x2, RZ ;
 Instr 1260 @ 0x4ec0 (20160) - IMAD.MOV.U32 R33, RZ, RZ, R25 ;
 Instr 1261 @ 0x4ed0 (20176) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1262 @ 0x4ee0 (20192) - ISETP.GT.AND P0, PT, R4, R25, PT ;
 Instr 1263 @ 0x4ef0 (20208) - MOV R4, 0x4f40 ;
 Instr 1264 @ 0x4f00 (20224) - SEL R29, R29, RZ, !P0 ;
 Instr 1265 @ 0x4f10 (20240) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1266 @ 0x4f20 (20256) - IMAD.MOV.U32 R29, RZ, RZ, 0x4 ;
 Instr 1267 @ 0x4f30 (20272) - CALL.REL.NOINC 0x5d00 ;
Basic block id 123 - num instructions 9
 Instr 1268 @ 0x4f40 (20288) - IADD3 R4, R23, 0x4, RZ ;
 Instr 1269 @ 0x4f50 (20304) - IMAD.MOV.U32 R33, RZ, RZ, R25 ;
 Instr 1270 @ 0x4f60 (20320) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1271 @ 0x4f70 (20336) - ISETP.GT.AND P0, PT, R4, R25, PT ;
 Instr 1272 @ 0x4f80 (20352) - MOV R4, 0x4fd0 ;
 Instr 1273 @ 0x4f90 (20368) - SEL R29, R29, RZ, !P0 ;
 Instr 1274 @ 0x4fa0 (20384) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1275 @ 0x4fb0 (20400) - IMAD.MOV.U32 R29, RZ, RZ, 0x8 ;
 Instr 1276 @ 0x4fc0 (20416) - CALL.REL.NOINC 0x5d00 ;
Basic block id 124 - num instructions 9
 Instr 1277 @ 0x4fd0 (20432) - IADD3 R4, R23, 0x8, RZ ;
 Instr 1278 @ 0x4fe0 (20448) - IMAD.MOV.U32 R33, RZ, RZ, R25 ;
 Instr 1279 @ 0x4ff0 (20464) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1280 @ 0x5000 (20480) - ISETP.GT.AND P0, PT, R4, R25, PT ;
 Instr 1281 @ 0x5010 (20496) - MOV R4, 0x5060 ;
 Instr 1282 @ 0x5020 (20512) - SEL R29, R29, RZ, !P0 ;
 Instr 1283 @ 0x5030 (20528) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1284 @ 0x5040 (20544) - IMAD.MOV.U32 R29, RZ, RZ, 0x10 ;
 Instr 1285 @ 0x5050 (20560) - CALL.REL.NOINC 0x5d00 ;
Basic block id 125 - num instructions 9
 Instr 1286 @ 0x5060 (20576) - IADD3 R4, R23, 0x10, RZ ;
 Instr 1287 @ 0x5070 (20592) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1288 @ 0x5080 (20608) - ISETP.NE.AND P1, PT, R30, 0x65, PT ;
 Instr 1289 @ 0x5090 (20624) - ISETP.GT.AND P0, PT, R4, R25, PT ;
 Instr 1290 @ 0x50a0 (20640) - SEL R4, RZ, 0x1, !P1 ;
 Instr 1291 @ 0x50b0 (20656) - SEL R25, R29, RZ, !P0 ;
 Instr 1292 @ 0x50c0 (20672) - MOV R29, 0x50f0 ;
 Instr 1293 @ 0x50d0 (20688) - IMAD.IADD R25, R31, 0x1, R25 ;
 Instr 1294 @ 0x50e0 (20704) - CALL.REL.NOINC 0x5d40 ;
Basic block id 126 - num instructions 2
 Instr 1295 @ 0x50f0 (20720) - ISETP.EQ.U32.AND P1, PT, R30, 0x1, PT ;
 Instr 1296 @ 0x5100 (20736) - BRA 0x9f0 ;
Basic block id 127 - num instructions 4
 Instr 1297 @ 0x5110 (20752) - SEL R4, RZ, 0x1, P0 ;
 Instr 1298 @ 0x5120 (20768) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1299 @ 0x5130 (20784) - MOV R36, 0x5150 ;
 Instr 1300 @ 0x5140 (20800) - CALL.REL.NOINC 0x5df0 ;
Basic block id 128 - num instructions 2
 Instr 1301 @ 0x5150 (20816) - ISETP.EQ.U32.AND P0, PT, R33, 0x1, PT ;
 Instr 1302 @ 0x5160 (20832) - BRA 0xaf0 ;
Basic block id 129 - num instructions 4
 Instr 1303 @ 0x5170 (20848) - SEL R4, RZ, 0x1, P0 ;
 Instr 1304 @ 0x5180 (20864) - IMAD.MOV.U32 R29, RZ, RZ, -0x1 ;
 Instr 1305 @ 0x5190 (20880) - MOV R5, 0x51b0 ;
 Instr 1306 @ 0x51a0 (20896) - CALL.REL.NOINC 0x5e70 ;
Basic block id 130 - num instructions 9
 Instr 1307 @ 0x51b0 (20912) - LOP3.LUT R29, R29, 0x80000000, R26, 0xec, !PT ;
 Instr 1308 @ 0x51c0 (20928) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1309 @ 0x51d0 (20944) - MOV R4, 0x5240 ;
 Instr 1310 @ 0x51e0 (20960) - BREV R29, R29 ;
 Instr 1311 @ 0x51f0 (20976) - FLO.U32 R29, R29 ;
 Instr 1312 @ 0x5200 (20992) - IADD3 R27, -R29, 0x1f, RZ ;
 Instr 1313 @ 0x5210 (21008) - IMAD.MOV.U32 R29, RZ, RZ, 0x1 ;
 Instr 1314 @ 0x5220 (21024) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1315 @ 0x5230 (21040) - CALL.REL.NOINC 0x5d00 ;
Basic block id 131 - num instructions 8
 Instr 1316 @ 0x5240 (21056) - ISETP.GE.AND P0, PT, R23, R27, PT ;
 Instr 1317 @ 0x5250 (21072) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1318 @ 0x5260 (21088) - MOV R4, 0x52c0 ;
 Instr 1319 @ 0x5270 (21104) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1320 @ 0x5280 (21120) - SEL R29, R29, RZ, !P0 ;
 Instr 1321 @ 0x5290 (21136) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1322 @ 0x52a0 (21152) - IMAD.MOV.U32 R29, RZ, RZ, 0x2 ;
 Instr 1323 @ 0x52b0 (21168) - CALL.REL.NOINC 0x5d00 ;
Basic block id 132 - num instructions 9
 Instr 1324 @ 0x52c0 (21184) - IADD3 R4, R23, 0x2, RZ ;
 Instr 1325 @ 0x52d0 (21200) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1326 @ 0x52e0 (21216) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1327 @ 0x52f0 (21232) - ISETP.GT.AND P0, PT, R4, R27, PT ;
 Instr 1328 @ 0x5300 (21248) - MOV R4, 0x5350 ;
 Instr 1329 @ 0x5310 (21264) - SEL R29, R29, RZ, !P0 ;
 Instr 1330 @ 0x5320 (21280) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1331 @ 0x5330 (21296) - IMAD.MOV.U32 R29, RZ, RZ, 0x4 ;
 Instr 1332 @ 0x5340 (21312) - CALL.REL.NOINC 0x5d00 ;
Basic block id 133 - num instructions 9
 Instr 1333 @ 0x5350 (21328) - IADD3 R4, R23, 0x4, RZ ;
 Instr 1334 @ 0x5360 (21344) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1335 @ 0x5370 (21360) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1336 @ 0x5380 (21376) - ISETP.GT.AND P0, PT, R4, R27, PT ;
 Instr 1337 @ 0x5390 (21392) - MOV R4, 0x53e0 ;
 Instr 1338 @ 0x53a0 (21408) - SEL R29, R29, RZ, !P0 ;
 Instr 1339 @ 0x53b0 (21424) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1340 @ 0x53c0 (21440) - IMAD.MOV.U32 R29, RZ, RZ, 0x8 ;
 Instr 1341 @ 0x53d0 (21456) - CALL.REL.NOINC 0x5d00 ;
Basic block id 134 - num instructions 9
 Instr 1342 @ 0x53e0 (21472) - IADD3 R4, R23, 0x8, RZ ;
 Instr 1343 @ 0x53f0 (21488) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1344 @ 0x5400 (21504) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1345 @ 0x5410 (21520) - ISETP.GT.AND P0, PT, R4, R27, PT ;
 Instr 1346 @ 0x5420 (21536) - MOV R4, 0x5470 ;
 Instr 1347 @ 0x5430 (21552) - SEL R29, R29, RZ, !P0 ;
 Instr 1348 @ 0x5440 (21568) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1349 @ 0x5450 (21584) - IMAD.MOV.U32 R29, RZ, RZ, 0x10 ;
 Instr 1350 @ 0x5460 (21600) - CALL.REL.NOINC 0x5d00 ;
Basic block id 135 - num instructions 9
 Instr 1351 @ 0x5470 (21616) - IADD3 R4, R23, 0x10, RZ ;
 Instr 1352 @ 0x5480 (21632) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1353 @ 0x5490 (21648) - ISETP.NE.AND P1, PT, R30, 0x65, PT ;
 Instr 1354 @ 0x54a0 (21664) - ISETP.GT.AND P0, PT, R4, R27, PT ;
 Instr 1355 @ 0x54b0 (21680) - SEL R4, RZ, 0x1, !P1 ;
 Instr 1356 @ 0x54c0 (21696) - SEL R29, R29, RZ, !P0 ;
 Instr 1357 @ 0x54d0 (21712) - IADD3 R25, R31, R29, R25 ;
 Instr 1358 @ 0x54e0 (21728) - MOV R29, 0x5500 ;
 Instr 1359 @ 0x54f0 (21744) - CALL.REL.NOINC 0x5d40 ;
Basic block id 136 - num instructions 2
 Instr 1360 @ 0x5500 (21760) - ISETP.EQ.U32.AND P1, PT, R30, 0x1, PT ;
 Instr 1361 @ 0x5510 (21776) - BRA 0xdb0 ;
Basic block id 137 - num instructions 4
 Instr 1362 @ 0x5520 (21792) - SEL R4, RZ, 0x1, P1 ;
 Instr 1363 @ 0x5530 (21808) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1364 @ 0x5540 (21824) - MOV R36, 0x5560 ;
 Instr 1365 @ 0x5550 (21840) - CALL.REL.NOINC 0x5df0 ;
Basic block id 138 - num instructions 2
 Instr 1366 @ 0x5560 (21856) - ISETP.EQ.U32.AND P1, PT, R33, 0x1, PT ;
 Instr 1367 @ 0x5570 (21872) - BRA 0x2cd0 ;
Basic block id 139 - num instructions 4
 Instr 1368 @ 0x5580 (21888) - SEL R4, RZ, 0x1, P1 ;
 Instr 1369 @ 0x5590 (21904) - IMAD.MOV.U32 R29, RZ, RZ, -0x1 ;
 Instr 1370 @ 0x55a0 (21920) - MOV R5, 0x55c0 ;
 Instr 1371 @ 0x55b0 (21936) - CALL.REL.NOINC 0x5e70 ;
Basic block id 140 - num instructions 10
 Instr 1372 @ 0x55c0 (21952) - S2R R4, SR_GEMASK ;
 Instr 1373 @ 0x55d0 (21968) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1374 @ 0x55e0 (21984) - LOP3.LUT R4, R29, 0x80000000, R4, 0xec, !PT ;
 Instr 1375 @ 0x55f0 (22000) - IMAD.MOV.U32 R29, RZ, RZ, 0x1 ;
 Instr 1376 @ 0x5600 (22016) - BREV R4, R4 ;
 Instr 1377 @ 0x5610 (22032) - FLO.U32 R4, R4 ;
 Instr 1378 @ 0x5620 (22048) - IADD3 R27, -R4, 0x1f, RZ ;
 Instr 1379 @ 0x5630 (22064) - MOV R4, 0x5660 ;
 Instr 1380 @ 0x5640 (22080) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1381 @ 0x5650 (22096) - CALL.REL.NOINC 0x5d00 ;
Basic block id 141 - num instructions 8
 Instr 1382 @ 0x5660 (22112) - ISETP.GE.AND P1, PT, R26, R27, PT ;
 Instr 1383 @ 0x5670 (22128) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1384 @ 0x5680 (22144) - MOV R4, 0x56e0 ;
 Instr 1385 @ 0x5690 (22160) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1386 @ 0x56a0 (22176) - SEL R29, R29, RZ, !P1 ;
 Instr 1387 @ 0x56b0 (22192) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1388 @ 0x56c0 (22208) - IMAD.MOV.U32 R29, RZ, RZ, 0x2 ;
 Instr 1389 @ 0x56d0 (22224) - CALL.REL.NOINC 0x5d00 ;
Basic block id 142 - num instructions 9
 Instr 1390 @ 0x56e0 (22240) - IADD3 R4, R26, 0x2, RZ ;
 Instr 1391 @ 0x56f0 (22256) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1392 @ 0x5700 (22272) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1393 @ 0x5710 (22288) - ISETP.GT.AND P1, PT, R4, R27, PT ;
 Instr 1394 @ 0x5720 (22304) - MOV R4, 0x5770 ;
 Instr 1395 @ 0x5730 (22320) - SEL R29, R29, RZ, !P1 ;
 Instr 1396 @ 0x5740 (22336) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1397 @ 0x5750 (22352) - IMAD.MOV.U32 R29, RZ, RZ, 0x4 ;
 Instr 1398 @ 0x5760 (22368) - CALL.REL.NOINC 0x5d00 ;
Basic block id 143 - num instructions 9
 Instr 1399 @ 0x5770 (22384) - IADD3 R4, R26, 0x4, RZ ;
 Instr 1400 @ 0x5780 (22400) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1401 @ 0x5790 (22416) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1402 @ 0x57a0 (22432) - ISETP.GT.AND P1, PT, R4, R27, PT ;
 Instr 1403 @ 0x57b0 (22448) - MOV R4, 0x5800 ;
 Instr 1404 @ 0x57c0 (22464) - SEL R29, R29, RZ, !P1 ;
 Instr 1405 @ 0x57d0 (22480) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1406 @ 0x57e0 (22496) - IMAD.MOV.U32 R29, RZ, RZ, 0x8 ;
 Instr 1407 @ 0x57f0 (22512) - CALL.REL.NOINC 0x5d00 ;
Basic block id 144 - num instructions 9
 Instr 1408 @ 0x5800 (22528) - IADD3 R4, R26, 0x8, RZ ;
 Instr 1409 @ 0x5810 (22544) - IMAD.MOV.U32 R33, RZ, RZ, R27 ;
 Instr 1410 @ 0x5820 (22560) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1411 @ 0x5830 (22576) - ISETP.GT.AND P1, PT, R4, R27, PT ;
 Instr 1412 @ 0x5840 (22592) - MOV R4, 0x5890 ;
 Instr 1413 @ 0x5850 (22608) - SEL R29, R29, RZ, !P1 ;
 Instr 1414 @ 0x5860 (22624) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1415 @ 0x5870 (22640) - IMAD.MOV.U32 R29, RZ, RZ, 0x10 ;
 Instr 1416 @ 0x5880 (22656) - CALL.REL.NOINC 0x5d00 ;
Basic block id 145 - num instructions 9
 Instr 1417 @ 0x5890 (22672) - IADD3 R4, R26, 0x10, RZ ;
 Instr 1418 @ 0x58a0 (22688) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1419 @ 0x58b0 (22704) - ISETP.NE.AND P2, PT, R30, 0x65, PT ;
 Instr 1420 @ 0x58c0 (22720) - ISETP.GT.AND P1, PT, R4, R27, PT ;
 Instr 1421 @ 0x58d0 (22736) - SEL R4, RZ, 0x1, !P2 ;
 Instr 1422 @ 0x58e0 (22752) - SEL R27, R29, RZ, !P1 ;
 Instr 1423 @ 0x58f0 (22768) - MOV R29, 0x5920 ;
 Instr 1424 @ 0x5900 (22784) - IMAD.IADD R27, R31, 0x1, R27 ;
 Instr 1425 @ 0x5910 (22800) - CALL.REL.NOINC 0x5d40 ;
Basic block id 146 - num instructions 2
 Instr 1426 @ 0x5920 (22816) - ISETP.EQ.U32.AND P2, PT, R30, 0x1, PT ;
 Instr 1427 @ 0x5930 (22832) - BRA 0x2fb0 ;
Basic block id 147 - num instructions 4
 Instr 1428 @ 0x5940 (22848) - SEL R4, RZ, 0x1, P1 ;
 Instr 1429 @ 0x5950 (22864) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1430 @ 0x5960 (22880) - MOV R36, 0x5980 ;
 Instr 1431 @ 0x5970 (22896) - CALL.REL.NOINC 0x5df0 ;
Basic block id 148 - num instructions 2
 Instr 1432 @ 0x5980 (22912) - ISETP.EQ.U32.AND P1, PT, R33, 0x1, PT ;
 Instr 1433 @ 0x5990 (22928) - BRA 0x30b0 ;
Basic block id 149 - num instructions 4
 Instr 1434 @ 0x59a0 (22944) - SEL R4, RZ, 0x1, P1 ;
 Instr 1435 @ 0x59b0 (22960) - IMAD.MOV.U32 R29, RZ, RZ, -0x1 ;
 Instr 1436 @ 0x59c0 (22976) - MOV R5, 0x59e0 ;
 Instr 1437 @ 0x59d0 (22992) - CALL.REL.NOINC 0x5e70 ;
Basic block id 150 - num instructions 8
 Instr 1438 @ 0x59e0 (23008) - LOP3.LUT R29, R29, 0x80000000, R28, 0xec, !PT ;
 Instr 1439 @ 0x59f0 (23024) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1440 @ 0x5a00 (23040) - MOV R4, 0x5a60 ;
 Instr 1441 @ 0x5a10 (23056) - BREV R29, R29 ;
 Instr 1442 @ 0x5a20 (23072) - FLO.U32 R29, R29 ;
 Instr 1443 @ 0x5a30 (23088) - IADD3 R33, -R29, 0x1f, RZ ;
 Instr 1444 @ 0x5a40 (23104) - IMAD.MOV.U32 R29, RZ, RZ, 0x1 ;
 Instr 1445 @ 0x5a50 (23120) - CALL.REL.NOINC 0x5d00 ;
Basic block id 151 - num instructions 7
 Instr 1446 @ 0x5a60 (23136) - ISETP.GE.AND P1, PT, R26, R33, PT ;
 Instr 1447 @ 0x5a70 (23152) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1448 @ 0x5a80 (23168) - MOV R4, 0x5ad0 ;
 Instr 1449 @ 0x5a90 (23184) - SEL R29, R29, RZ, !P1 ;
 Instr 1450 @ 0x5aa0 (23200) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1451 @ 0x5ab0 (23216) - IMAD.MOV.U32 R29, RZ, RZ, 0x2 ;
 Instr 1452 @ 0x5ac0 (23232) - CALL.REL.NOINC 0x5d00 ;
Basic block id 152 - num instructions 8
 Instr 1453 @ 0x5ad0 (23248) - IADD3 R4, R26, 0x2, RZ ;
 Instr 1454 @ 0x5ae0 (23264) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1455 @ 0x5af0 (23280) - ISETP.GT.AND P1, PT, R4, R33, PT ;
 Instr 1456 @ 0x5b00 (23296) - MOV R4, 0x5b50 ;
 Instr 1457 @ 0x5b10 (23312) - SEL R29, R29, RZ, !P1 ;
 Instr 1458 @ 0x5b20 (23328) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1459 @ 0x5b30 (23344) - IMAD.MOV.U32 R29, RZ, RZ, 0x4 ;
 Instr 1460 @ 0x5b40 (23360) - CALL.REL.NOINC 0x5d00 ;
Basic block id 153 - num instructions 8
 Instr 1461 @ 0x5b50 (23376) - IADD3 R4, R26, 0x4, RZ ;
 Instr 1462 @ 0x5b60 (23392) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1463 @ 0x5b70 (23408) - ISETP.GT.AND P1, PT, R4, R33, PT ;
 Instr 1464 @ 0x5b80 (23424) - MOV R4, 0x5bd0 ;
 Instr 1465 @ 0x5b90 (23440) - SEL R29, R29, RZ, !P1 ;
 Instr 1466 @ 0x5ba0 (23456) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1467 @ 0x5bb0 (23472) - IMAD.MOV.U32 R29, RZ, RZ, 0x8 ;
 Instr 1468 @ 0x5bc0 (23488) - CALL.REL.NOINC 0x5d00 ;
Basic block id 154 - num instructions 8
 Instr 1469 @ 0x5bd0 (23504) - IADD3 R4, R26, 0x8, RZ ;
 Instr 1470 @ 0x5be0 (23520) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1471 @ 0x5bf0 (23536) - ISETP.GT.AND P1, PT, R4, R33, PT ;
 Instr 1472 @ 0x5c00 (23552) - MOV R4, 0x5c50 ;
 Instr 1473 @ 0x5c10 (23568) - SEL R29, R29, RZ, !P1 ;
 Instr 1474 @ 0x5c20 (23584) - IMAD.IADD R31, R31, 0x1, R29 ;
 Instr 1475 @ 0x5c30 (23600) - IMAD.MOV.U32 R29, RZ, RZ, 0x10 ;
 Instr 1476 @ 0x5c40 (23616) - CALL.REL.NOINC 0x5d00 ;
Basic block id 155 - num instructions 9
 Instr 1477 @ 0x5c50 (23632) - IADD3 R4, R26, 0x10, RZ ;
 Instr 1478 @ 0x5c60 (23648) - IMAD.MOV.U32 R5, RZ, RZ, -0x1 ;
 Instr 1479 @ 0x5c70 (23664) - ISETP.NE.AND P2, PT, R30, 0x65, PT ;
 Instr 1480 @ 0x5c80 (23680) - ISETP.GT.AND P1, PT, R4, R33, PT ;
 Instr 1481 @ 0x5c90 (23696) - SEL R4, RZ, 0x1, !P2 ;
 Instr 1482 @ 0x5ca0 (23712) - SEL R29, R29, RZ, !P1 ;
 Instr 1483 @ 0x5cb0 (23728) - IADD3 R27, R31, R29, R27 ;
 Instr 1484 @ 0x5cc0 (23744) - MOV R29, 0x5ce0 ;
 Instr 1485 @ 0x5cd0 (23760) - CALL.REL.NOINC 0x5d40 ;
Basic block id 156 - num instructions 2
 Instr 1486 @ 0x5ce0 (23776) - ISETP.EQ.U32.AND P2, PT, R30, 0x1, PT ;
 Instr 1487 @ 0x5cf0 (23792) - BRA 0x3370 ;
Basic block id 157 - num instructions 4
 Instr 1488 @ 0x5d00 (23808) - WARPSYNC R5 ;
 Instr 1489 @ 0x5d10 (23824) - SHFL.DOWN PT, R29, R31, R29, R33 ;
 Instr 1490 @ 0x5d20 (23840) - IMAD.MOV.U32 R5, RZ, RZ, 0x0 ;
 Instr 1491 @ 0x5d30 (23856) - RET.REL.NODEC R4 0x0 ;
Basic block id 158 - num instructions 11
 Instr 1492 @ 0x5d40 (23872) - ISETP.NE.U32.AND P1, PT, R4, 0x1, PT ;
 Instr 1493 @ 0x5d50 (23888) - WARPSYNC R5 ;
 Instr 1494 @ 0x5d60 (23904) - VOTEU.ANY UR4, UPT, PT ;
 Instr 1495 @ 0x5d70 (23920) - LOP3.LUT R5, R5, UR4, RZ, 0xc0, !PT ;
 Instr 1496 @ 0x5d80 (23936) - VOTE.ANY R4, PT, !P1 ;
 Instr 1497 @ 0x5d90 (23952) - LOP3.LUT R4, R4, R5, RZ, 0xc0, !PT ;
 Instr 1498 @ 0x5da0 (23968) - ISETP.NE.U32.AND P1, PT, R4, R5, PT ;
 Instr 1499 @ 0x5db0 (23984) - IMAD.MOV.U32 R4, RZ, RZ, R29 ;
 Instr 1500 @ 0x5dc0 (24000) - IMAD.MOV.U32 R5, RZ, RZ, 0x0 ;
 Instr 1501 @ 0x5dd0 (24016) - SEL R30, RZ, 0x1, P1 ;
 Instr 1502 @ 0x5de0 (24032) - RET.REL.NODEC R4 0x0 ;
Basic block id 159 - num instructions 8
 Instr 1503 @ 0x5df0 (24048) - ISETP.NE.U32.AND P1, PT, R4, 0x1, PT ;
 Instr 1504 @ 0x5e00 (24064) - WARPSYNC R5 ;
 Instr 1505 @ 0x5e10 (24080) - VOTE.ANY R4, PT, !P1 ;
 Instr 1506 @ 0x5e20 (24096) - LOP3.LUT P1, RZ, R4, R5, RZ, 0xc0, !PT ;
 Instr 1507 @ 0x5e30 (24112) - IMAD.MOV.U32 R4, RZ, RZ, R36 ;
 Instr 1508 @ 0x5e40 (24128) - IMAD.MOV.U32 R5, RZ, RZ, 0x0 ;
 Instr 1509 @ 0x5e50 (24144) - SEL R33, RZ, 0x1, !P1 ;
 Instr 1510 @ 0x5e60 (24160) - RET.REL.NODEC R4 0x0 ;
Basic block id 160 - num instructions 7
 Instr 1511 @ 0x5e70 (24176) - ISETP.NE.U32.AND P1, PT, R4, 0x1, PT ;
 Instr 1512 @ 0x5e80 (24192) - WARPSYNC R29 ;
 Instr 1513 @ 0x5e90 (24208) - VOTE.ANY R4, PT, !P1 ;
 Instr 1514 @ 0x5ea0 (24224) - LOP3.LUT R29, R4, R29, RZ, 0xc0, !PT ;
 Instr 1515 @ 0x5eb0 (24240) - IMAD.MOV.U32 R4, RZ, RZ, R5 ;
 Instr 1516 @ 0x5ec0 (24256) - IMAD.MOV.U32 R5, RZ, RZ, 0x0 ;
 Instr 1517 @ 0x5ed0 (24272) - RET.REL.NODEC R4 0x0 ;
Basic block id 161 - num instructions 1
 Instr 1518 @ 0x5ee0 (24288) - BRA 0x5ee0;
inspecting void at_cuda_detail::cub::DeviceSelectSweepKernel<at_cuda_detail::cub::DispatchSelectIf<at_cuda_detail::cub::CountingInputIterator<long, long>, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, long*, int*, at_cuda_detail::cub::NullType, at_cuda_detail::cub::NullType, int, false>::PtxSelectIfPolicyT, at_cuda_detail::cub::CountingInputIterator<long, long>, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, long*, int*, at_cuda_detail::cub::ScanTileState<int, true>, at_cuda_detail::cub::NullType, at_cuda_detail::cub::NullType, int, false>(at_cuda_detail::cub::CountingInputIterator<long, long>, at_cuda_detail::cub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, long*, int*, at_cuda_detail::cub::ScanTileState<int, true>, at_cuda_detail::cub::NullType, at_cuda_detail::cub::NullType, int, int) - number basic blocks 162
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 32 @ 0x200 (512) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
Inject count_instr before - Instr 38 @ 0x260 (608) - ISETP.GE.AND P6, PT, R6, R17.reuse, PT ;
Inject count_instr before - Instr 96 @ 0x600 (1536) - ISETP.NE.AND P0, PT, R23, RZ, PT ;
Inject count_instr before - Instr 106 @ 0x6a0 (1696) - @!P0 ST.E.64.STRONG.GPU [R4+0x100], R6 ;
Inject count_instr before - Instr 107 @ 0x6b0 (1712) - MEMBAR.SC.CTA ;
Inject count_instr before - Instr 111 @ 0x6f0 (1776) - VOTE.ANY R4, PT, !P0 ;
Inject count_instr before - Instr 113 @ 0x710 (1808) - @!P0 BRA 0x780 ;
Inject count_instr before - Instr 114 @ 0x720 (1824) - VOTE.ANY R4, PT, PT ;
Inject count_instr before - Instr 119 @ 0x770 (1904) - BRA 0x720 ;
Inject count_instr before - Instr 120 @ 0x780 (1920) - BSYNC B1 ;
Inject count_instr before - Instr 124 @ 0x7c0 (1984) - S2R R5, SR_GEMASK ;
Inject count_instr before - Instr 159 @ 0x9f0 (2544) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 162 @ 0xa20 (2592) - S2R R23, SR_LANEID ;
Inject count_instr before - Instr 164 @ 0xa40 (2624) - IADD3 R16, R16, -0x20, RZ ;
Inject count_instr before - Instr 169 @ 0xa90 (2704) - MEMBAR.SC.CTA ;
Inject count_instr before - Instr 173 @ 0xad0 (2768) - VOTE.ANY R4, PT, !P0 ;
Inject count_instr before - Instr 175 @ 0xaf0 (2800) - @!P0 BRA 0xb60 ;
Inject count_instr before - Instr 176 @ 0xb00 (2816) - VOTE.ANY R4, PT, PT ;
Inject count_instr before - Instr 181 @ 0xb50 (2896) - BRA 0xb00 ;
Inject count_instr before - Instr 182 @ 0xb60 (2912) - BSYNC B2 ;
Inject count_instr before - Instr 185 @ 0xb90 (2960) - VOTE.ANY R4, PT, !P0 ;
Inject count_instr before - Instr 219 @ 0xdb0 (3504) - @!P1 BRA 0xe20 ;
Inject count_instr before - Instr 220 @ 0xdc0 (3520) - VOTE.ANY R4, PT, PT ;
Inject count_instr before - Instr 225 @ 0xe10 (3600) - BRA 0xdc0 ;
Inject count_instr before - Instr 226 @ 0xe20 (3616) - BSYNC B1 ;
Inject count_instr before - Instr 239 @ 0xef0 (3824) - WARPSYNC 0xffffffff ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - ISETP.NE.AND P0, PT, R18, RZ, PT ;
Inject count_instr before - Instr 279 @ 0x1170 (4464) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 283 @ 0x11b0 (4528) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 302 @ 0x12e0 (4832) - IADD3 R7, R7, c[0x0][0x194], RZ ;
Inject count_instr before - Instr 311 @ 0x1370 (4976) - @!P0 BRA 0x1480 ;
Inject count_instr before - Instr 312 @ 0x1380 (4992) - IMAD.IADD R2, R16.reuse, 0x1, R5 ;
Inject count_instr before - Instr 319 @ 0x13f0 (5104) - LDS.U.64 R2, [R7] ;
Inject count_instr before - Instr 328 @ 0x1480 (5248) - BSYNC B1 ;
Inject count_instr before - Instr 330 @ 0x14a0 (5280) - IMAD.IADD R0, R4, 0x1, -R17 ;
Inject count_instr before - Instr 342 @ 0x1560 (5472) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 344 @ 0x1580 (5504) - LDS.U.64 R8, [R0+-0x800] ;
Inject count_instr before - Instr 384 @ 0x1800 (6144) - BSYNC B1 ;
Inject count_instr before - Instr 390 @ 0x1860 (6240) - LDS.U.64 R8, [R0+-0x800] ;
Inject count_instr before - Instr 394 @ 0x18a0 (6304) - LDS.U.64 R12, [R0] ;
Inject count_instr before - Instr 411 @ 0x19b0 (6576) - BSYNC B1 ;
Inject count_instr before - Instr 414 @ 0x19e0 (6624) - LDS.U.64 R4, [R0+-0x800] ;
Inject count_instr before - Instr 423 @ 0x1a70 (6768) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 487 @ 0x1e70 (7792) - ISETP.NE.AND P0, PT, R18, RZ, PT ;
Inject count_instr before - Instr 510 @ 0x1fe0 (8160) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 514 @ 0x2020 (8224) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 528 @ 0x2100 (8448) - IADD3 R5, R5, c[0x0][0x194], R7 ;
Inject count_instr before - Instr 537 @ 0x2190 (8592) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 542 @ 0x21e0 (8672) - LDS.U.64 R2, [R7] ;
Inject count_instr before - Instr 551 @ 0x2270 (8816) - BSYNC B1 ;
Inject count_instr before - Instr 553 @ 0x2290 (8848) - IMAD.IADD R0, R6, 0x1, -R23 ;
Inject count_instr before - Instr 564 @ 0x2340 (9024) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 566 @ 0x2360 (9056) - LDS.U.64 R4, [R0+-0x800] ;
Inject count_instr before - Instr 606 @ 0x25e0 (9696) - BSYNC B1 ;
Inject count_instr before - Instr 612 @ 0x2640 (9792) - LDS.U.64 R4, [R0+-0x800] ;
Inject count_instr before - Instr 616 @ 0x2680 (9856) - LDS.U.64 R10, [R0] ;
Inject count_instr before - Instr 633 @ 0x2790 (10128) - BSYNC B1 ;
Inject count_instr before - Instr 643 @ 0x2830 (10288) - BSYNC B0 ;
Inject count_instr before - Instr 646 @ 0x2860 (10336) - ULDC.64 UR4, c[0x0][0x180] ;
Inject count_instr before - Instr 649 @ 0x2890 (10384) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
Inject count_instr before - Instr 651 @ 0x28b0 (10416) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 700 @ 0x2bc0 (11200) - ISETP.NE.AND P0, PT, R16, RZ, PT ;
Inject count_instr before - Instr 710 @ 0x2c60 (11360) - @!P0 ST.E.64.STRONG.GPU [R4+0x100], R6 ;
Inject count_instr before - Instr 711 @ 0x2c70 (11376) - MEMBAR.SC.CTA ;
Inject count_instr before - Instr 715 @ 0x2cb0 (11440) - VOTE.ANY R4, PT, !P1 ;
Inject count_instr before - Instr 717 @ 0x2cd0 (11472) - @!P1 BRA 0x2d40 ;
Inject count_instr before - Instr 718 @ 0x2ce0 (11488) - VOTE.ANY R4, PT, PT ;
Inject count_instr before - Instr 723 @ 0x2d30 (11568) - BRA 0x2ce0 ;
Inject count_instr before - Instr 724 @ 0x2d40 (11584) - BSYNC B0 ;
Inject count_instr before - Instr 728 @ 0x2d80 (11648) - S2R R5, SR_GEMASK ;
Inject count_instr before - Instr 763 @ 0x2fb0 (12208) - BMOV.32.CLEAR RZ, B0 ;
Inject count_instr before - Instr 766 @ 0x2fe0 (12256) - S2R R26, SR_LANEID ;
Inject count_instr before - Instr 768 @ 0x3000 (12288) - IADD3 R16, R16, -0x20, RZ ;
Inject count_instr before - Instr 773 @ 0x3050 (12368) - MEMBAR.SC.CTA ;
Inject count_instr before - Instr 777 @ 0x3090 (12432) - VOTE.ANY R4, PT, !P1 ;
Inject count_instr before - Instr 779 @ 0x30b0 (12464) - @!P1 BRA 0x3120 ;
Inject count_instr before - Instr 780 @ 0x30c0 (12480) - VOTE.ANY R4, PT, PT ;
Inject count_instr before - Instr 785 @ 0x3110 (12560) - BRA 0x30c0 ;
Inject count_instr before - Instr 786 @ 0x3120 (12576) - BSYNC B1 ;
Inject count_instr before - Instr 789 @ 0x3150 (12624) - VOTE.ANY R4, PT, !P1 ;
Inject count_instr before - Instr 823 @ 0x3370 (13168) - @!P2 BRA 0x33e0 ;
Inject count_instr before - Instr 824 @ 0x3380 (13184) - VOTE.ANY R4, PT, PT ;
Inject count_instr before - Instr 829 @ 0x33d0 (13264) - BRA 0x3380 ;
Inject count_instr before - Instr 830 @ 0x33e0 (13280) - BSYNC B0 ;
Inject count_instr before - Instr 841 @ 0x3490 (13456) - WARPSYNC 0xffffffff ;
Inject count_instr before - Instr 857 @ 0x3590 (13712) - ISETP.NE.AND P0, PT, R32, RZ, PT ;
Inject count_instr before - Instr 875 @ 0x36b0 (14000) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 879 @ 0x36f0 (14064) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 898 @ 0x3820 (14368) - LOP3.LUT R2, RZ, R4, RZ, 0x33, !PT ;
Inject count_instr before - Instr 907 @ 0x38b0 (14512) - IMAD.IADD R2, R5, 0x1, R26 ;
Inject count_instr before - Instr 915 @ 0x3930 (14640) - LDS.U.64 R2, [R9] ;
Inject count_instr before - Instr 924 @ 0x39c0 (14784) - BSYNC B0 ;
Inject count_instr before - Instr 926 @ 0x39e0 (14816) - IMAD.IADD R2, R5, 0x1, R4.reuse ;
Inject count_instr before - Instr 938 @ 0x3aa0 (15008) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 940 @ 0x3ac0 (15040) - LDS.U.64 R6, [R5+-0x800] ;
Inject count_instr before - Instr 980 @ 0x3d40 (15680) - BSYNC B0 ;
Inject count_instr before - Instr 986 @ 0x3da0 (15776) - LDS.U.64 R6, [R5+-0x800] ;
Inject count_instr before - Instr 990 @ 0x3de0 (15840) - LDS.U.64 R10, [R5] ;
Inject count_instr before - Instr 1007 @ 0x3ef0 (16112) - BSYNC B0 ;
Inject count_instr before - Instr 1010 @ 0x3f20 (16160) - LDS.U.64 R6, [R5+-0x800] ;
Inject count_instr before - Instr 1019 @ 0x3fb0 (16304) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 1078 @ 0x4360 (17248) - ISETP.NE.AND P0, PT, R28, RZ, PT ;
Inject count_instr before - Instr 1096 @ 0x4480 (17536) - IMAD.MOV.U32 R4, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 1100 @ 0x44c0 (17600) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 1114 @ 0x45a0 (17824) - LOP3.LUT R0, RZ, R16, RZ, 0x33, !PT ;
Inject count_instr before - Instr 1123 @ 0x4630 (17968) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 1128 @ 0x4680 (18048) - LDS.U.64 R2, [R8] ;
Inject count_instr before - Instr 1137 @ 0x4710 (18192) - BSYNC B0 ;
Inject count_instr before - Instr 1139 @ 0x4730 (18224) - IMAD.IADD R0, R5, 0x1, -R16 ;
Inject count_instr before - Instr 1150 @ 0x47e0 (18400) - PLOP3.LUT P0, PT, PT, PT, PT, 0x8, 0x0 ;
Inject count_instr before - Instr 1152 @ 0x4800 (18432) - LDS.U.64 R6, [R0+-0x800] ;
Inject count_instr before - Instr 1192 @ 0x4a80 (19072) - BSYNC B0 ;
Inject count_instr before - Instr 1198 @ 0x4ae0 (19168) - LDS.U.64 R6, [R0+-0x800] ;
Inject count_instr before - Instr 1202 @ 0x4b20 (19232) - LDS.U.64 R10, [R0] ;
Inject count_instr before - Instr 1219 @ 0x4c30 (19504) - BSYNC B0 ;
Inject count_instr before - Instr 1222 @ 0x4c60 (19552) - LDS.U.64 R4, [R0+-0x800] ;
Inject count_instr before - Instr 1231 @ 0x4cf0 (19696) - SEL R4, RZ, 0x1, P0 ;
Inject count_instr before - Instr 1235 @ 0x4d30 (19760) - ISETP.EQ.U32.AND P0, PT, R33, 0x1, PT ;
Inject count_instr before - Instr 1237 @ 0x4d50 (19792) - SEL R4, RZ, 0x1, P0 ;
Inject count_instr before - Instr 1241 @ 0x4d90 (19856) - S2R R4, SR_GEMASK ;
Inject count_instr before - Instr 1251 @ 0x4e30 (20016) - ISETP.GE.AND P0, PT, R23, R25, PT ;
Inject count_instr before - Instr 1259 @ 0x4eb0 (20144) - IADD3 R4, R23, 0x2, RZ ;
Inject count_instr before - Instr 1268 @ 0x4f40 (20288) - IADD3 R4, R23, 0x4, RZ ;
Inject count_instr before - Instr 1277 @ 0x4fd0 (20432) - IADD3 R4, R23, 0x8, RZ ;
Inject count_instr before - Instr 1286 @ 0x5060 (20576) - IADD3 R4, R23, 0x10, RZ ;
Inject count_instr before - Instr 1295 @ 0x50f0 (20720) - ISETP.EQ.U32.AND P1, PT, R30, 0x1, PT ;
Inject count_instr before - Instr 1297 @ 0x5110 (20752) - SEL R4, RZ, 0x1, P0 ;
Inject count_instr before - Instr 1301 @ 0x5150 (20816) - ISETP.EQ.U32.AND P0, PT, R33, 0x1, PT ;
Inject count_instr before - Instr 1303 @ 0x5170 (20848) - SEL R4, RZ, 0x1, P0 ;
Inject count_instr before - Instr 1307 @ 0x51b0 (20912) - LOP3.LUT R29, R29, 0x80000000, R26, 0xec, !PT ;
Inject count_instr before - Instr 1316 @ 0x5240 (21056) - ISETP.GE.AND P0, PT, R23, R27, PT ;
Inject count_instr before - Instr 1324 @ 0x52c0 (21184) - IADD3 R4, R23, 0x2, RZ ;
Inject count_instr before - Instr 1333 @ 0x5350 (21328) - IADD3 R4, R23, 0x4, RZ ;
Inject count_instr before - Instr 1342 @ 0x53e0 (21472) - IADD3 R4, R23, 0x8, RZ ;
Inject count_instr before - Instr 1351 @ 0x5470 (21616) - IADD3 R4, R23, 0x10, RZ ;
Inject count_instr before - Instr 1360 @ 0x5500 (21760) - ISETP.EQ.U32.AND P1, PT, R30, 0x1, PT ;
Inject count_instr before - Instr 1362 @ 0x5520 (21792) - SEL R4, RZ, 0x1, P1 ;
Inject count_instr before - Instr 1366 @ 0x5560 (21856) - ISETP.EQ.U32.AND P1, PT, R33, 0x1, PT ;
Inject count_instr before - Instr 1368 @ 0x5580 (21888) - SEL R4, RZ, 0x1, P1 ;
Inject count_instr before - Instr 1372 @ 0x55c0 (21952) - S2R R4, SR_GEMASK ;
Inject count_instr before - Instr 1382 @ 0x5660 (22112) - ISETP.GE.AND P1, PT, R26, R27, PT ;
Inject count_instr before - Instr 1390 @ 0x56e0 (22240) - IADD3 R4, R26, 0x2, RZ ;
Inject count_instr before - Instr 1399 @ 0x5770 (22384) - IADD3 R4, R26, 0x4, RZ ;
Inject count_instr before - Instr 1408 @ 0x5800 (22528) - IADD3 R4, R26, 0x8, RZ ;
Inject count_instr before - Instr 1417 @ 0x5890 (22672) - IADD3 R4, R26, 0x10, RZ ;
Inject count_instr before - Instr 1426 @ 0x5920 (22816) - ISETP.EQ.U32.AND P2, PT, R30, 0x1, PT ;
Inject count_instr before - Instr 1428 @ 0x5940 (22848) - SEL R4, RZ, 0x1, P1 ;
Inject count_instr before - Instr 1432 @ 0x5980 (22912) - ISETP.EQ.U32.AND P1, PT, R33, 0x1, PT ;
Inject count_instr before - Instr 1434 @ 0x59a0 (22944) - SEL R4, RZ, 0x1, P1 ;
Inject count_instr before - Instr 1438 @ 0x59e0 (23008) - LOP3.LUT R29, R29, 0x80000000, R28, 0xec, !PT ;
Inject count_instr before - Instr 1446 @ 0x5a60 (23136) - ISETP.GE.AND P1, PT, R26, R33, PT ;
Inject count_instr before - Instr 1453 @ 0x5ad0 (23248) - IADD3 R4, R26, 0x2, RZ ;
Inject count_instr before - Instr 1461 @ 0x5b50 (23376) - IADD3 R4, R26, 0x4, RZ ;
Inject count_instr before - Instr 1469 @ 0x5bd0 (23504) - IADD3 R4, R26, 0x8, RZ ;
Inject count_instr before - Instr 1477 @ 0x5c50 (23632) - IADD3 R4, R26, 0x10, RZ ;
Inject count_instr before - Instr 1486 @ 0x5ce0 (23776) - ISETP.EQ.U32.AND P2, PT, R30, 0x1, PT ;
Inject count_instr before - Instr 1488 @ 0x5d00 (23808) - WARPSYNC R5 ;
Inject count_instr before - Instr 1492 @ 0x5d40 (23872) - ISETP.NE.U32.AND P1, PT, R4, 0x1, PT ;
Inject count_instr before - Instr 1503 @ 0x5df0 (24048) - ISETP.NE.U32.AND P1, PT, R4, 0x1, PT ;
Inject count_instr before - Instr 1511 @ 0x5e70 (24176) - ISETP.NE.U32.AND P1, PT, R4, 0x1, PT ;
Inject count_instr before - Instr 1518 @ 0x5ee0 (24288) - BRA 0x5ee0;
kernel 276 - _ZN14at_cuda_detail3cub23DeviceSelectSweepKernelINS0_16DispatchSelectIfINS0_21CountingInputIteratorIllEENS0_22TransformInputIteratorIbN2at6native43_GLOBAL__N__e625f313_10_Nonzero_cu_cba1aaa09NonZeroOpIbEEPKblEEPlPiNS0_8NullTypeESG_iLb0EE18PtxSelectIfPolicyTES4_SD_SE_SF_NS0_13ScanTileStateIiLb1EEESG_SG_iLb0EEEvT0_T1_T2_T3_T4_T5_T6_T7_i - #thread-blocks 2,  kernel instructions 1446, total instructions 65666064
Function void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1} const&)::{lambda(int)#1}>(long, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1} const&)::{lambda(int)#1})
Basic block id 0 - num instructions 11
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R23, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - BMOV.32.CLEAR RZ, B8 ;
 Instr 3 @ 0x30 (48) - BSSY B8, 0x27a0 ;
 Instr 4 @ 0x40 (64) - IMAD.MOV.U32 R3, RZ, RZ, RZ ;
 Instr 5 @ 0x50 (80) - S2R R22, SR_TID.X ;
 Instr 6 @ 0x60 (96) - IMAD R2, R23, 0x200, R22 ;
 Instr 7 @ 0x70 (112) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x160], PT ;
 Instr 8 @ 0x80 (128) - MOV R17, R2 ;
 Instr 9 @ 0x90 (144) - ISETP.GE.AND.EX P0, PT, RZ, c[0x0][0x164], PT, P0 ;
 Instr 10 @ 0xa0 (160) - @P0 BRA 0x2790 ;
Basic block id 1 - num instructions 4
 Instr 11 @ 0xb0 (176) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
 Instr 12 @ 0xc0 (192) - CS2R R26, SRZ ;
 Instr 13 @ 0xd0 (208) - IMAD.MOV.U32 R30, RZ, RZ, RZ ;
 Instr 14 @ 0xe0 (224) - @!P0 BRA 0x1080 ;
Basic block id 2 - num instructions 11
 Instr 15 @ 0xf0 (240) - MOV R16, RZ ;
 Instr 16 @ 0x100 (256) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x168] ;
 Instr 17 @ 0x110 (272) - IMAD.HI.U32 R2, R17, c[0x0][0x170], R16 ;
 Instr 18 @ 0x120 (288) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 19 @ 0x130 (304) - SHF.R.U32.HI R3, RZ, c[0x0][0x174], R2 ;
 Instr 20 @ 0x140 (320) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 21 @ 0x150 (336) - IMAD R17, R4, c[0x0][0x16c], R17 ;
 Instr 22 @ 0x160 (352) - IMAD R30, R17.reuse, c[0x0][0x298], RZ ;
 Instr 23 @ 0x170 (368) - IMAD R26, R17.reuse, c[0x0][0x29c], RZ ;
 Instr 24 @ 0x180 (384) - IMAD R27, R17, c[0x0][0x2a0], RZ ;
 Instr 25 @ 0x190 (400) - @!P0 BRA 0x1080 ;
Basic block id 3 - num instructions 10
 Instr 26 @ 0x1a0 (416) - MOV R2, RZ ;
 Instr 27 @ 0x1b0 (432) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 28 @ 0x1c0 (448) - IMAD.HI.U32 R4, R3, c[0x0][0x17c], R2 ;
 Instr 29 @ 0x1d0 (464) - SHF.R.U32.HI R5, RZ, c[0x0][0x180], R4 ;
 Instr 30 @ 0x1e0 (480) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 31 @ 0x1f0 (496) - IMAD R3, R2, c[0x0][0x178], R3 ;
 Instr 32 @ 0x200 (512) - IMAD R30, R3.reuse, c[0x0][0x2a4], R30 ;
 Instr 33 @ 0x210 (528) - IMAD R26, R3.reuse, c[0x0][0x2a8], R26 ;
 Instr 34 @ 0x220 (544) - IMAD R27, R3, c[0x0][0x2ac], R27 ;
 Instr 35 @ 0x230 (560) - @!P0 BRA 0x1080 ;
Basic block id 4 - num instructions 10
 Instr 36 @ 0x240 (576) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 37 @ 0x250 (592) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 38 @ 0x260 (608) - IMAD.HI.U32 R2, R5, c[0x0][0x188], R4 ;
 Instr 39 @ 0x270 (624) - SHF.R.U32.HI R3, RZ, c[0x0][0x18c], R2 ;
 Instr 40 @ 0x280 (640) - IADD3 R4, -R3, RZ, RZ ;
 Instr 41 @ 0x290 (656) - IMAD R5, R4, c[0x0][0x184], R5 ;
 Instr 42 @ 0x2a0 (672) - IMAD R30, R5.reuse, c[0x0][0x2b0], R30 ;
 Instr 43 @ 0x2b0 (688) - IMAD R26, R5.reuse, c[0x0][0x2b4], R26 ;
 Instr 44 @ 0x2c0 (704) - IMAD R27, R5, c[0x0][0x2b8], R27 ;
 Instr 45 @ 0x2d0 (720) - @!P0 BRA 0x1080 ;
Basic block id 5 - num instructions 10
 Instr 46 @ 0x2e0 (736) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 47 @ 0x2f0 (752) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 48 @ 0x300 (768) - IMAD.HI.U32 R4, R3, c[0x0][0x194], R2 ;
 Instr 49 @ 0x310 (784) - SHF.R.U32.HI R5, RZ, c[0x0][0x198], R4 ;
 Instr 50 @ 0x320 (800) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 51 @ 0x330 (816) - IMAD R3, R2, c[0x0][0x190], R3 ;
 Instr 52 @ 0x340 (832) - IMAD R30, R3.reuse, c[0x0][0x2bc], R30 ;
 Instr 53 @ 0x350 (848) - IMAD R26, R3.reuse, c[0x0][0x2c0], R26 ;
 Instr 54 @ 0x360 (864) - IMAD R27, R3, c[0x0][0x2c4], R27 ;
 Instr 55 @ 0x370 (880) - @!P0 BRA 0x1080 ;
Basic block id 6 - num instructions 10
 Instr 56 @ 0x380 (896) - MOV R4, RZ ;
 Instr 57 @ 0x390 (912) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 58 @ 0x3a0 (928) - IMAD.HI.U32 R2, R5, c[0x0][0x1a0], R4 ;
 Instr 59 @ 0x3b0 (944) - SHF.R.U32.HI R3, RZ, c[0x0][0x1a4], R2 ;
 Instr 60 @ 0x3c0 (960) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 61 @ 0x3d0 (976) - IMAD R5, R4, c[0x0][0x19c], R5 ;
 Instr 62 @ 0x3e0 (992) - IMAD R30, R5.reuse, c[0x0][0x2c8], R30 ;
 Instr 63 @ 0x3f0 (1008) - IMAD R26, R5.reuse, c[0x0][0x2cc], R26 ;
 Instr 64 @ 0x400 (1024) - IMAD R27, R5, c[0x0][0x2d0], R27 ;
 Instr 65 @ 0x410 (1040) - @!P0 BRA 0x1080 ;
Basic block id 7 - num instructions 10
 Instr 66 @ 0x420 (1056) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 67 @ 0x430 (1072) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 68 @ 0x440 (1088) - IMAD.HI.U32 R4, R3, c[0x0][0x1ac], R2 ;
 Instr 69 @ 0x450 (1104) - SHF.R.U32.HI R5, RZ, c[0x0][0x1b0], R4 ;
 Instr 70 @ 0x460 (1120) - IADD3 R2, -R5, RZ, RZ ;
 Instr 71 @ 0x470 (1136) - IMAD R3, R2, c[0x0][0x1a8], R3 ;
 Instr 72 @ 0x480 (1152) - IMAD R30, R3.reuse, c[0x0][0x2d4], R30 ;
 Instr 73 @ 0x490 (1168) - IMAD R26, R3.reuse, c[0x0][0x2d8], R26 ;
 Instr 74 @ 0x4a0 (1184) - IMAD R27, R3, c[0x0][0x2dc], R27 ;
 Instr 75 @ 0x4b0 (1200) - @!P0 BRA 0x1080 ;
Basic block id 8 - num instructions 10
 Instr 76 @ 0x4c0 (1216) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 77 @ 0x4d0 (1232) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 78 @ 0x4e0 (1248) - IMAD.HI.U32 R2, R5, c[0x0][0x1b8], R4 ;
 Instr 79 @ 0x4f0 (1264) - SHF.R.U32.HI R3, RZ, c[0x0][0x1bc], R2 ;
 Instr 80 @ 0x500 (1280) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 81 @ 0x510 (1296) - IMAD R5, R4, c[0x0][0x1b4], R5 ;
 Instr 82 @ 0x520 (1312) - IMAD R30, R5.reuse, c[0x0][0x2e0], R30 ;
 Instr 83 @ 0x530 (1328) - IMAD R26, R5.reuse, c[0x0][0x2e4], R26 ;
 Instr 84 @ 0x540 (1344) - IMAD R27, R5, c[0x0][0x2e8], R27 ;
 Instr 85 @ 0x550 (1360) - @!P0 BRA 0x1080 ;
Basic block id 9 - num instructions 10
 Instr 86 @ 0x560 (1376) - MOV R2, RZ ;
 Instr 87 @ 0x570 (1392) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 88 @ 0x580 (1408) - IMAD.HI.U32 R4, R3, c[0x0][0x1c4], R2 ;
 Instr 89 @ 0x590 (1424) - SHF.R.U32.HI R5, RZ, c[0x0][0x1c8], R4 ;
 Instr 90 @ 0x5a0 (1440) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 91 @ 0x5b0 (1456) - IMAD R3, R2, c[0x0][0x1c0], R3 ;
 Instr 92 @ 0x5c0 (1472) - IMAD R30, R3.reuse, c[0x0][0x2ec], R30 ;
 Instr 93 @ 0x5d0 (1488) - IMAD R26, R3.reuse, c[0x0][0x2f0], R26 ;
 Instr 94 @ 0x5e0 (1504) - IMAD R27, R3, c[0x0][0x2f4], R27 ;
 Instr 95 @ 0x5f0 (1520) - @!P0 BRA 0x1080 ;
Basic block id 10 - num instructions 10
 Instr 96 @ 0x600 (1536) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 97 @ 0x610 (1552) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 98 @ 0x620 (1568) - IMAD.HI.U32 R2, R5, c[0x0][0x1d0], R4 ;
 Instr 99 @ 0x630 (1584) - SHF.R.U32.HI R3, RZ, c[0x0][0x1d4], R2 ;
 Instr 100 @ 0x640 (1600) - IADD3 R4, -R3, RZ, RZ ;
 Instr 101 @ 0x650 (1616) - IMAD R5, R4, c[0x0][0x1cc], R5 ;
 Instr 102 @ 0x660 (1632) - IMAD R30, R5.reuse, c[0x0][0x2f8], R30 ;
 Instr 103 @ 0x670 (1648) - IMAD R26, R5.reuse, c[0x0][0x2fc], R26 ;
 Instr 104 @ 0x680 (1664) - IMAD R27, R5, c[0x0][0x300], R27 ;
 Instr 105 @ 0x690 (1680) - @!P0 BRA 0x1080 ;
Basic block id 11 - num instructions 10
 Instr 106 @ 0x6a0 (1696) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 107 @ 0x6b0 (1712) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 108 @ 0x6c0 (1728) - IMAD.HI.U32 R4, R3, c[0x0][0x1dc], R2 ;
 Instr 109 @ 0x6d0 (1744) - SHF.R.U32.HI R5, RZ, c[0x0][0x1e0], R4 ;
 Instr 110 @ 0x6e0 (1760) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 111 @ 0x6f0 (1776) - IMAD R3, R2, c[0x0][0x1d8], R3 ;
 Instr 112 @ 0x700 (1792) - IMAD R30, R3.reuse, c[0x0][0x304], R30 ;
 Instr 113 @ 0x710 (1808) - IMAD R26, R3.reuse, c[0x0][0x308], R26 ;
 Instr 114 @ 0x720 (1824) - IMAD R27, R3, c[0x0][0x30c], R27 ;
 Instr 115 @ 0x730 (1840) - @!P0 BRA 0x1080 ;
Basic block id 12 - num instructions 10
 Instr 116 @ 0x740 (1856) - MOV R4, RZ ;
 Instr 117 @ 0x750 (1872) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 118 @ 0x760 (1888) - IMAD.HI.U32 R2, R5, c[0x0][0x1e8], R4 ;
 Instr 119 @ 0x770 (1904) - SHF.R.U32.HI R3, RZ, c[0x0][0x1ec], R2 ;
 Instr 120 @ 0x780 (1920) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 121 @ 0x790 (1936) - IMAD R5, R4, c[0x0][0x1e4], R5 ;
 Instr 122 @ 0x7a0 (1952) - IMAD R30, R5.reuse, c[0x0][0x310], R30 ;
 Instr 123 @ 0x7b0 (1968) - IMAD R26, R5.reuse, c[0x0][0x314], R26 ;
 Instr 124 @ 0x7c0 (1984) - IMAD R27, R5, c[0x0][0x318], R27 ;
 Instr 125 @ 0x7d0 (2000) - @!P0 BRA 0x1080 ;
Basic block id 13 - num instructions 10
 Instr 126 @ 0x7e0 (2016) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 127 @ 0x7f0 (2032) - ISETP.NE.AND P0, PT, R0, 0xc, PT ;
 Instr 128 @ 0x800 (2048) - IMAD.HI.U32 R4, R3, c[0x0][0x1f4], R2 ;
 Instr 129 @ 0x810 (2064) - SHF.R.U32.HI R5, RZ, c[0x0][0x1f8], R4 ;
 Instr 130 @ 0x820 (2080) - IADD3 R2, -R5, RZ, RZ ;
 Instr 131 @ 0x830 (2096) - IMAD R3, R2, c[0x0][0x1f0], R3 ;
 Instr 132 @ 0x840 (2112) - IMAD R30, R3.reuse, c[0x0][0x31c], R30 ;
 Instr 133 @ 0x850 (2128) - IMAD R26, R3.reuse, c[0x0][0x320], R26 ;
 Instr 134 @ 0x860 (2144) - IMAD R27, R3, c[0x0][0x324], R27 ;
 Instr 135 @ 0x870 (2160) - @!P0 BRA 0x1080 ;
Basic block id 14 - num instructions 10
 Instr 136 @ 0x880 (2176) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 137 @ 0x890 (2192) - ISETP.NE.AND P0, PT, R0, 0xd, PT ;
 Instr 138 @ 0x8a0 (2208) - IMAD.HI.U32 R2, R5, c[0x0][0x200], R4 ;
 Instr 139 @ 0x8b0 (2224) - SHF.R.U32.HI R3, RZ, c[0x0][0x204], R2 ;
 Instr 140 @ 0x8c0 (2240) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 141 @ 0x8d0 (2256) - IMAD R5, R4, c[0x0][0x1fc], R5 ;
 Instr 142 @ 0x8e0 (2272) - IMAD R30, R5.reuse, c[0x0][0x328], R30 ;
 Instr 143 @ 0x8f0 (2288) - IMAD R26, R5.reuse, c[0x0][0x32c], R26 ;
 Instr 144 @ 0x900 (2304) - IMAD R27, R5, c[0x0][0x330], R27 ;
 Instr 145 @ 0x910 (2320) - @!P0 BRA 0x1080 ;
Basic block id 15 - num instructions 10
 Instr 146 @ 0x920 (2336) - MOV R2, RZ ;
 Instr 147 @ 0x930 (2352) - ISETP.NE.AND P0, PT, R0, 0xe, PT ;
 Instr 148 @ 0x940 (2368) - IMAD.HI.U32 R4, R3, c[0x0][0x20c], R2 ;
 Instr 149 @ 0x950 (2384) - SHF.R.U32.HI R5, RZ, c[0x0][0x210], R4 ;
 Instr 150 @ 0x960 (2400) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 151 @ 0x970 (2416) - IMAD R3, R2, c[0x0][0x208], R3 ;
 Instr 152 @ 0x980 (2432) - IMAD R30, R3.reuse, c[0x0][0x334], R30 ;
 Instr 153 @ 0x990 (2448) - IMAD R26, R3.reuse, c[0x0][0x338], R26 ;
 Instr 154 @ 0x9a0 (2464) - IMAD R27, R3, c[0x0][0x33c], R27 ;
 Instr 155 @ 0x9b0 (2480) - @!P0 BRA 0x1080 ;
Basic block id 16 - num instructions 10
 Instr 156 @ 0x9c0 (2496) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 157 @ 0x9d0 (2512) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 158 @ 0x9e0 (2528) - IMAD.HI.U32 R2, R5, c[0x0][0x218], R4 ;
 Instr 159 @ 0x9f0 (2544) - SHF.R.U32.HI R3, RZ, c[0x0][0x21c], R2 ;
 Instr 160 @ 0xa00 (2560) - IADD3 R4, -R3, RZ, RZ ;
 Instr 161 @ 0xa10 (2576) - IMAD R5, R4, c[0x0][0x214], R5 ;
 Instr 162 @ 0xa20 (2592) - IMAD R30, R5.reuse, c[0x0][0x340], R30 ;
 Instr 163 @ 0xa30 (2608) - IMAD R26, R5.reuse, c[0x0][0x344], R26 ;
 Instr 164 @ 0xa40 (2624) - IMAD R27, R5, c[0x0][0x348], R27 ;
 Instr 165 @ 0xa50 (2640) - @!P0 BRA 0x1080 ;
Basic block id 17 - num instructions 10
 Instr 166 @ 0xa60 (2656) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 167 @ 0xa70 (2672) - ISETP.NE.AND P0, PT, R0, 0x10, PT ;
 Instr 168 @ 0xa80 (2688) - IMAD.HI.U32 R4, R3, c[0x0][0x224], R2 ;
 Instr 169 @ 0xa90 (2704) - SHF.R.U32.HI R5, RZ, c[0x0][0x228], R4 ;
 Instr 170 @ 0xaa0 (2720) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 171 @ 0xab0 (2736) - IMAD R3, R2, c[0x0][0x220], R3 ;
 Instr 172 @ 0xac0 (2752) - IMAD R30, R3.reuse, c[0x0][0x34c], R30 ;
 Instr 173 @ 0xad0 (2768) - IMAD R26, R3.reuse, c[0x0][0x350], R26 ;
 Instr 174 @ 0xae0 (2784) - IMAD R27, R3, c[0x0][0x354], R27 ;
 Instr 175 @ 0xaf0 (2800) - @!P0 BRA 0x1080 ;
Basic block id 18 - num instructions 10
 Instr 176 @ 0xb00 (2816) - MOV R4, RZ ;
 Instr 177 @ 0xb10 (2832) - ISETP.NE.AND P0, PT, R0, 0x11, PT ;
 Instr 178 @ 0xb20 (2848) - IMAD.HI.U32 R2, R5, c[0x0][0x230], R4 ;
 Instr 179 @ 0xb30 (2864) - SHF.R.U32.HI R3, RZ, c[0x0][0x234], R2 ;
 Instr 180 @ 0xb40 (2880) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 181 @ 0xb50 (2896) - IMAD R5, R4, c[0x0][0x22c], R5 ;
 Instr 182 @ 0xb60 (2912) - IMAD R30, R5.reuse, c[0x0][0x358], R30 ;
 Instr 183 @ 0xb70 (2928) - IMAD R26, R5.reuse, c[0x0][0x35c], R26 ;
 Instr 184 @ 0xb80 (2944) - IMAD R27, R5, c[0x0][0x360], R27 ;
 Instr 185 @ 0xb90 (2960) - @!P0 BRA 0x1080 ;
Basic block id 19 - num instructions 10
 Instr 186 @ 0xba0 (2976) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 187 @ 0xbb0 (2992) - ISETP.NE.AND P0, PT, R0, 0x12, PT ;
 Instr 188 @ 0xbc0 (3008) - IMAD.HI.U32 R4, R3, c[0x0][0x23c], R2 ;
 Instr 189 @ 0xbd0 (3024) - SHF.R.U32.HI R5, RZ, c[0x0][0x240], R4 ;
 Instr 190 @ 0xbe0 (3040) - IADD3 R2, -R5, RZ, RZ ;
 Instr 191 @ 0xbf0 (3056) - IMAD R3, R2, c[0x0][0x238], R3 ;
 Instr 192 @ 0xc00 (3072) - IMAD R30, R3.reuse, c[0x0][0x364], R30 ;
 Instr 193 @ 0xc10 (3088) - IMAD R26, R3.reuse, c[0x0][0x368], R26 ;
 Instr 194 @ 0xc20 (3104) - IMAD R27, R3, c[0x0][0x36c], R27 ;
 Instr 195 @ 0xc30 (3120) - @!P0 BRA 0x1080 ;
Basic block id 20 - num instructions 10
 Instr 196 @ 0xc40 (3136) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 197 @ 0xc50 (3152) - ISETP.NE.AND P0, PT, R0, 0x13, PT ;
 Instr 198 @ 0xc60 (3168) - IMAD.HI.U32 R2, R5, c[0x0][0x248], R4 ;
 Instr 199 @ 0xc70 (3184) - SHF.R.U32.HI R3, RZ, c[0x0][0x24c], R2 ;
 Instr 200 @ 0xc80 (3200) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 201 @ 0xc90 (3216) - IMAD R5, R4, c[0x0][0x244], R5 ;
 Instr 202 @ 0xca0 (3232) - IMAD R30, R5.reuse, c[0x0][0x370], R30 ;
 Instr 203 @ 0xcb0 (3248) - IMAD R26, R5.reuse, c[0x0][0x374], R26 ;
 Instr 204 @ 0xcc0 (3264) - IMAD R27, R5, c[0x0][0x378], R27 ;
 Instr 205 @ 0xcd0 (3280) - @!P0 BRA 0x1080 ;
Basic block id 21 - num instructions 10
 Instr 206 @ 0xce0 (3296) - MOV R2, RZ ;
 Instr 207 @ 0xcf0 (3312) - ISETP.NE.AND P0, PT, R0, 0x14, PT ;
 Instr 208 @ 0xd00 (3328) - IMAD.HI.U32 R4, R3, c[0x0][0x254], R2 ;
 Instr 209 @ 0xd10 (3344) - SHF.R.U32.HI R5, RZ, c[0x0][0x258], R4 ;
 Instr 210 @ 0xd20 (3360) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 211 @ 0xd30 (3376) - IMAD R3, R2, c[0x0][0x250], R3 ;
 Instr 212 @ 0xd40 (3392) - IMAD R30, R3.reuse, c[0x0][0x37c], R30 ;
 Instr 213 @ 0xd50 (3408) - IMAD R26, R3.reuse, c[0x0][0x380], R26 ;
 Instr 214 @ 0xd60 (3424) - IMAD R27, R3, c[0x0][0x384], R27 ;
 Instr 215 @ 0xd70 (3440) - @!P0 BRA 0x1080 ;
Basic block id 22 - num instructions 10
 Instr 216 @ 0xd80 (3456) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 217 @ 0xd90 (3472) - ISETP.NE.AND P0, PT, R0, 0x15, PT ;
 Instr 218 @ 0xda0 (3488) - IMAD.HI.U32 R2, R5, c[0x0][0x260], R4 ;
 Instr 219 @ 0xdb0 (3504) - SHF.R.U32.HI R3, RZ, c[0x0][0x264], R2 ;
 Instr 220 @ 0xdc0 (3520) - IADD3 R4, -R3, RZ, RZ ;
 Instr 221 @ 0xdd0 (3536) - IMAD R5, R4, c[0x0][0x25c], R5 ;
 Instr 222 @ 0xde0 (3552) - IMAD R30, R5.reuse, c[0x0][0x388], R30 ;
 Instr 223 @ 0xdf0 (3568) - IMAD R26, R5.reuse, c[0x0][0x38c], R26 ;
 Instr 224 @ 0xe00 (3584) - IMAD R27, R5, c[0x0][0x390], R27 ;
 Instr 225 @ 0xe10 (3600) - @!P0 BRA 0x1080 ;
Basic block id 23 - num instructions 10
 Instr 226 @ 0xe20 (3616) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 227 @ 0xe30 (3632) - ISETP.NE.AND P0, PT, R0, 0x16, PT ;
 Instr 228 @ 0xe40 (3648) - IMAD.HI.U32 R4, R3, c[0x0][0x26c], R2 ;
 Instr 229 @ 0xe50 (3664) - SHF.R.U32.HI R5, RZ, c[0x0][0x270], R4 ;
 Instr 230 @ 0xe60 (3680) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 231 @ 0xe70 (3696) - IMAD R3, R2, c[0x0][0x268], R3 ;
 Instr 232 @ 0xe80 (3712) - IMAD R30, R3.reuse, c[0x0][0x394], R30 ;
 Instr 233 @ 0xe90 (3728) - IMAD R26, R3.reuse, c[0x0][0x398], R26 ;
 Instr 234 @ 0xea0 (3744) - IMAD R27, R3, c[0x0][0x39c], R27 ;
 Instr 235 @ 0xeb0 (3760) - @!P0 BRA 0x1080 ;
Basic block id 24 - num instructions 10
 Instr 236 @ 0xec0 (3776) - MOV R4, RZ ;
 Instr 237 @ 0xed0 (3792) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 238 @ 0xee0 (3808) - IMAD.HI.U32 R2, R5, c[0x0][0x278], R4 ;
 Instr 239 @ 0xef0 (3824) - SHF.R.U32.HI R3, RZ, c[0x0][0x27c], R2 ;
 Instr 240 @ 0xf00 (3840) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 241 @ 0xf10 (3856) - IMAD R5, R4, c[0x0][0x274], R5 ;
 Instr 242 @ 0xf20 (3872) - IMAD R30, R5.reuse, c[0x0][0x3a0], R30 ;
 Instr 243 @ 0xf30 (3888) - IMAD R26, R5.reuse, c[0x0][0x3a4], R26 ;
 Instr 244 @ 0xf40 (3904) - IMAD R27, R5, c[0x0][0x3a8], R27 ;
 Instr 245 @ 0xf50 (3920) - @!P0 BRA 0x1080 ;
Basic block id 25 - num instructions 10
 Instr 246 @ 0xf60 (3936) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 247 @ 0xf70 (3952) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 248 @ 0xf80 (3968) - IMAD.HI.U32 R4, R3, c[0x0][0x284], R2 ;
 Instr 249 @ 0xf90 (3984) - SHF.R.U32.HI R5, RZ, c[0x0][0x288], R4 ;
 Instr 250 @ 0xfa0 (4000) - IADD3 R2, -R5, RZ, RZ ;
 Instr 251 @ 0xfb0 (4016) - IMAD R3, R2, c[0x0][0x280], R3 ;
 Instr 252 @ 0xfc0 (4032) - IMAD R30, R3.reuse, c[0x0][0x3ac], R30 ;
 Instr 253 @ 0xfd0 (4048) - IMAD R26, R3.reuse, c[0x0][0x3b0], R26 ;
 Instr 254 @ 0xfe0 (4064) - IMAD R27, R3, c[0x0][0x3b4], R27 ;
 Instr 255 @ 0xff0 (4080) - @!P0 BRA 0x1080 ;
Basic block id 26 - num instructions 8
 Instr 256 @ 0x1000 (4096) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 257 @ 0x1010 (4112) - IMAD.HI.U32 R0, R5, c[0x0][0x290], R4 ;
 Instr 258 @ 0x1020 (4128) - SHF.R.U32.HI R0, RZ, c[0x0][0x294], R0 ;
 Instr 259 @ 0x1030 (4144) - IMAD.MOV R3, RZ, RZ, -R0 ;
 Instr 260 @ 0x1040 (4160) - IMAD R5, R3, c[0x0][0x28c], R5 ;
 Instr 261 @ 0x1050 (4176) - IMAD R30, R5.reuse, c[0x0][0x3b8], R30 ;
 Instr 262 @ 0x1060 (4192) - IMAD R26, R5.reuse, c[0x0][0x3bc], R26 ;
 Instr 263 @ 0x1070 (4208) - IMAD R27, R5, c[0x0][0x3c0], R27 ;
Basic block id 27 - num instructions 6
 Instr 264 @ 0x1080 (4224) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
 Instr 265 @ 0x1090 (4240) - CS2R R18, SRZ ;
 Instr 266 @ 0x10a0 (4256) - IADD3 R30, P1, R30, c[0x0][0x3c8], RZ ;
 Instr 267 @ 0x10b0 (4272) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x3dc], PT, P0 ;
 Instr 268 @ 0x10c0 (4288) - IADD3.X R31, RZ, c[0x0][0x3cc], RZ, P1, !PT ;
 Instr 269 @ 0x10d0 (4304) - @!P0 BRA 0x2700 ;
Basic block id 28 - num instructions 9
 Instr 270 @ 0x10e0 (4320) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 271 @ 0x10f0 (4336) - CS2R R18, SRZ ;
 Instr 272 @ 0x1100 (4352) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x3dc] ;
 Instr 273 @ 0x1110 (4368) - MOV R25, RZ ;
 Instr 274 @ 0x1120 (4384) - IADD3 R0, P1, -R0, c[0x0][0x3d8], RZ ;
 Instr 275 @ 0x1130 (4400) - ISETP.GE.U32.AND P0, PT, R0, 0x3, PT ;
 Instr 276 @ 0x1140 (4416) - IADD3.X R0, R2, -0x1, RZ, P1, !PT ;
 Instr 277 @ 0x1150 (4432) - ISETP.GE.U32.AND.EX P0, PT, R0, RZ, PT, P0 ;
 Instr 278 @ 0x1160 (4448) - @!P0 BRA 0x1dd0 ;
Basic block id 29 - num instructions 6
 Instr 279 @ 0x1170 (4464) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x3d8] ;
 Instr 280 @ 0x1180 (4480) - BMOV.32.CLEAR RZ, B7 ;
 Instr 281 @ 0x1190 (4496) - BSSY B7, 0x1dd0 ;
 Instr 282 @ 0x11a0 (4512) - LOP3.LUT R16, R16, 0x3, RZ, 0xc0, !PT ;
 Instr 283 @ 0x11b0 (4528) - IADD3 R16, P0, -R16, c[0x0][0x3d8], RZ ;
 Instr 284 @ 0x11c0 (4544) - IADD3.X R2, R2, -0x1, RZ, P0, !PT ;
Basic block id 30 - num instructions 17
 Instr 285 @ 0x11d0 (4560) - IMAD.MOV.U32 R24, RZ, RZ, 0x8 ;
 Instr 286 @ 0x11e0 (4576) - IMAD R24, R25, R24, c[0x2][0x0] ;
 Instr 287 @ 0x11f0 (4592) - LDC.64 R4, c[0x0][R24+0x3d8] ;
 Instr 288 @ 0x1200 (4608) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 289 @ 0x1210 (4624) - IADD3.X R7, RZ, R5, RZ, P0, !PT ;
 Instr 290 @ 0x1220 (4640) - LDG.E.64.SYS R28, [R6] ;
 Instr 291 @ 0x1230 (4656) - LDC.64 R4, c[0x0][R24+0x4a0] ;
 Instr 292 @ 0x1240 (4672) - BMOV.32.CLEAR RZ, B6 ;
 Instr 293 @ 0x1250 (4688) - BSSY B6, 0x1410 ;
 Instr 294 @ 0x1260 (4704) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 295 @ 0x1270 (4720) - IMAD.X R3, RZ, RZ, ~R5, P0 ;
 Instr 296 @ 0x1280 (4736) - ISETP.GE.U32.AND P0, PT, R28.reuse, R4, PT ;
 Instr 297 @ 0x1290 (4752) - IMAD.MOV.U32 R17, RZ, RZ, R29 ;
 Instr 298 @ 0x12a0 (4768) - ISETP.GE.U32.AND P1, PT, R28, R0, PT ;
 Instr 299 @ 0x12b0 (4784) - ISETP.GE.AND.EX P0, PT, R29.reuse, R5, PT, P0 ;
 Instr 300 @ 0x12c0 (4800) - ISETP.GE.AND.EX P1, PT, R29, R3, PT, P1 ;
 Instr 301 @ 0x12d0 (4816) - @!P0 BRA P1, 0x1400 ;
Basic block id 31 - num instructions 18
 Instr 302 @ 0x12e0 (4832) - UMOV UR8, 0xd99fbf00 ;
 Instr 303 @ 0x12f0 (4848) - MOV R8, 0x5d ;
 Instr 304 @ 0x1300 (4864) - UMOV UR9, 0x7f88 ;
 Instr 305 @ 0x1310 (4880) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 306 @ 0x1320 (4896) - UMOV UR6, 0xd99fbe00 ;
 Instr 307 @ 0x1330 (4912) - MOV R13, RZ ;
 Instr 308 @ 0x1340 (4928) - UMOV UR7, 0x7f88 ;
 Instr 309 @ 0x1350 (4944) - IMAD.U32 R4, RZ, RZ, UR8 ;
 Instr 310 @ 0x1360 (4960) - UMOV UR4, 0xd99f4600 ;
 Instr 311 @ 0x1370 (4976) - MOV R5, UR9 ;
 Instr 312 @ 0x1380 (4992) - UMOV UR5, 0x7f88 ;
 Instr 313 @ 0x1390 (5008) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 314 @ 0x13a0 (5024) - MOV R7, UR7 ;
 Instr 315 @ 0x13b0 (5040) - IMAD.U32 R10, RZ, RZ, UR4 ;
 Instr 316 @ 0x13c0 (5056) - MOV R11, UR5 ;
 Instr 317 @ 0x13d0 (5072) - MOV R20, 0xae4e400 ;
 Instr 318 @ 0x13e0 (5088) - MOV R21, 0x7f89 ;
 Instr 319 @ 0x13f0 (5104) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 32 - num instructions 18
 Instr 320 @ 0x1400 (5120) - BSYNC B6 ;
 Instr 321 @ 0x1410 (5136) - LDC.64 R4, c[0x0][R24+0x3e0] ;
 Instr 322 @ 0x1420 (5152) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 323 @ 0x1430 (5168) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 324 @ 0x1440 (5184) - LDG.E.64.SYS R36, [R8] ;
 Instr 325 @ 0x1450 (5200) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 326 @ 0x1460 (5216) - LDC.64 R6, c[0x0][R24+0x4a8] ;
 Instr 327 @ 0x1470 (5232) - BMOV.32.CLEAR RZ, B6 ;
 Instr 328 @ 0x1480 (5248) - BSSY B6, 0x16d0 ;
 Instr 329 @ 0x1490 (5264) - ISETP.GT.AND.EX P0, PT, R17, -0x1, PT, P0 ;
 Instr 330 @ 0x14a0 (5280) - LDC.64 R4, c[0x0][R24+0x568] ;
 Instr 331 @ 0x14b0 (5296) - @!P0 LDC.64 R10, c[0x0][R24+0x4a0] ;
 Instr 332 @ 0x14c0 (5312) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 333 @ 0x14d0 (5328) - IMAD.X R3, RZ, RZ, ~R7, P1 ;
 Instr 334 @ 0x14e0 (5344) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 335 @ 0x14f0 (5360) - @!P0 IADD3.X R17, R11, R17, RZ, P2, !PT ;
 Instr 336 @ 0x1500 (5376) - ISETP.GE.U32.AND P0, PT, R36, R0, PT ;
 Instr 337 @ 0x1510 (5392) - IMAD R0, R5, R28, RZ ;
Basic block id 33 - num instructions 8
 Instr 338 @ 0x1520 (5408) - ISETP.GE.U32.AND P2, PT, R36, R6, PT ;
 Instr 339 @ 0x1530 (5424) - IMAD.WIDE.U32 R28, R4.reuse, R28, R18 ;
 Instr 340 @ 0x1540 (5440) - ISETP.GE.AND.EX P0, PT, R37.reuse, R3, PT, P0 ;
 Instr 341 @ 0x1550 (5456) - ISETP.GE.AND.EX P1, PT, R37, R7, PT, P2 ;
 Instr 342 @ 0x1560 (5472) - IMAD R19, R4, R17, R0 ;
 Instr 343 @ 0x1570 (5488) - MOV R17, R37 ;
 Instr 344 @ 0x1580 (5504) - IMAD.IADD R19, R29, 0x1, R19 ;
 Instr 345 @ 0x1590 (5520) - @!P1 BRA P0, 0x16c0 ;
Basic block id 34 - num instructions 18
 Instr 346 @ 0x15a0 (5536) - UMOV UR4, 0xd99fbf00 ;
 Instr 347 @ 0x15b0 (5552) - MOV R8, 0x5d ;
 Instr 348 @ 0x15c0 (5568) - UMOV UR5, 0x7f88 ;
 Instr 349 @ 0x15d0 (5584) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 350 @ 0x15e0 (5600) - UMOV UR6, 0xd99fbe00 ;
 Instr 351 @ 0x15f0 (5616) - MOV R13, RZ ;
 Instr 352 @ 0x1600 (5632) - UMOV UR7, 0x7f88 ;
 Instr 353 @ 0x1610 (5648) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 354 @ 0x1620 (5664) - UMOV UR8, 0xd99f4600 ;
 Instr 355 @ 0x1630 (5680) - MOV R5, UR5 ;
 Instr 356 @ 0x1640 (5696) - UMOV UR9, 0x7f88 ;
 Instr 357 @ 0x1650 (5712) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 358 @ 0x1660 (5728) - MOV R7, UR7 ;
 Instr 359 @ 0x1670 (5744) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 360 @ 0x1680 (5760) - MOV R11, UR9 ;
 Instr 361 @ 0x1690 (5776) - MOV R20, 0xae4e6c0 ;
 Instr 362 @ 0x16a0 (5792) - MOV R21, 0x7f89 ;
 Instr 363 @ 0x16b0 (5808) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 35 - num instructions 20
 Instr 364 @ 0x16c0 (5824) - BSYNC B6 ;
 Instr 365 @ 0x16d0 (5840) - LDC.64 R4, c[0x0][R24+0x3e8] ;
 Instr 366 @ 0x16e0 (5856) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 367 @ 0x16f0 (5872) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 368 @ 0x1700 (5888) - LDG.E.64.SYS R8, [R8] ;
 Instr 369 @ 0x1710 (5904) - ISETP.GT.U32.AND P0, PT, R36, -0x1, PT ;
 Instr 370 @ 0x1720 (5920) - LDC.64 R6, c[0x0][R24+0x4b0] ;
 Instr 371 @ 0x1730 (5936) - MOV R18, R28 ;
 Instr 372 @ 0x1740 (5952) - BMOV.32.CLEAR RZ, B6 ;
 Instr 373 @ 0x1750 (5968) - ISETP.GT.AND.EX P0, PT, R17, -0x1, PT, P0 ;
 Instr 374 @ 0x1760 (5984) - BSSY B6, 0x19b0 ;
 Instr 375 @ 0x1770 (6000) - LDC.64 R4, c[0x0][R24+0x570] ;
 Instr 376 @ 0x1780 (6016) - @!P0 LDC.64 R10, c[0x0][R24+0x4a8] ;
 Instr 377 @ 0x1790 (6032) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 378 @ 0x17a0 (6048) - IADD3.X R3, RZ, ~R7, RZ, P1, !PT ;
 Instr 379 @ 0x17b0 (6064) - @!P0 IADD3 R36, P2, R10, R36, RZ ;
 Instr 380 @ 0x17c0 (6080) - @!P0 IMAD.X R17, R11, 0x1, R17, P2 ;
 Instr 381 @ 0x17d0 (6096) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 382 @ 0x17e0 (6112) - IMAD R0, R5, R36, RZ ;
 Instr 383 @ 0x17f0 (6128) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 36 - num instructions 8
 Instr 384 @ 0x1800 (6144) - IMAD.WIDE.U32 R36, R4.reuse, R36, R18 ;
 Instr 385 @ 0x1810 (6160) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 386 @ 0x1820 (6176) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 387 @ 0x1830 (6192) - IMAD R19, R4, R17, R0 ;
 Instr 388 @ 0x1840 (6208) - MOV R17, R9 ;
 Instr 389 @ 0x1850 (6224) - IMAD.MOV.U32 R28, RZ, RZ, R8 ;
 Instr 390 @ 0x1860 (6240) - IMAD.IADD R19, R37, 0x1, R19 ;
 Instr 391 @ 0x1870 (6256) - @!P1 BRA P0, 0x19a0 ;
Basic block id 37 - num instructions 18
 Instr 392 @ 0x1880 (6272) - UMOV UR4, 0xd99fbf00 ;
 Instr 393 @ 0x1890 (6288) - MOV R8, 0x5d ;
 Instr 394 @ 0x18a0 (6304) - UMOV UR5, 0x7f88 ;
 Instr 395 @ 0x18b0 (6320) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 396 @ 0x18c0 (6336) - UMOV UR6, 0xd99fbe00 ;
 Instr 397 @ 0x18d0 (6352) - MOV R13, RZ ;
 Instr 398 @ 0x18e0 (6368) - UMOV UR7, 0x7f88 ;
 Instr 399 @ 0x18f0 (6384) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 400 @ 0x1900 (6400) - UMOV UR8, 0xd99f4600 ;
 Instr 401 @ 0x1910 (6416) - MOV R5, UR5 ;
 Instr 402 @ 0x1920 (6432) - UMOV UR9, 0x7f88 ;
 Instr 403 @ 0x1930 (6448) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 404 @ 0x1940 (6464) - MOV R7, UR7 ;
 Instr 405 @ 0x1950 (6480) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 406 @ 0x1960 (6496) - MOV R11, UR9 ;
 Instr 407 @ 0x1970 (6512) - MOV R20, 0xae4e9a0 ;
 Instr 408 @ 0x1980 (6528) - MOV R21, 0x7f89 ;
 Instr 409 @ 0x1990 (6544) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 38 - num instructions 20
 Instr 410 @ 0x19a0 (6560) - BSYNC B6 ;
 Instr 411 @ 0x19b0 (6576) - LDC.64 R4, c[0x0][R24+0x3f0] ;
 Instr 412 @ 0x19c0 (6592) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 413 @ 0x19d0 (6608) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 414 @ 0x19e0 (6624) - LDG.E.64.SYS R8, [R8] ;
 Instr 415 @ 0x19f0 (6640) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 416 @ 0x1a00 (6656) - LDC.64 R6, c[0x0][R24+0x4b8] ;
 Instr 417 @ 0x1a10 (6672) - MOV R18, R36 ;
 Instr 418 @ 0x1a20 (6688) - BMOV.32.CLEAR RZ, B6 ;
 Instr 419 @ 0x1a30 (6704) - ISETP.GT.AND.EX P0, PT, R17, -0x1, PT, P0 ;
 Instr 420 @ 0x1a40 (6720) - BSSY B6, 0x1c90 ;
 Instr 421 @ 0x1a50 (6736) - LDC.64 R4, c[0x0][R24+0x578] ;
 Instr 422 @ 0x1a60 (6752) - @!P0 LDC.64 R10, c[0x0][R24+0x4b0] ;
 Instr 423 @ 0x1a70 (6768) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 424 @ 0x1a80 (6784) - IADD3.X R3, RZ, ~R7, RZ, P1, !PT ;
 Instr 425 @ 0x1a90 (6800) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 426 @ 0x1aa0 (6816) - @!P0 IMAD.X R17, R11, 0x1, R17, P2 ;
 Instr 427 @ 0x1ab0 (6832) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 428 @ 0x1ac0 (6848) - IMAD R0, R5, R28, RZ ;
 Instr 429 @ 0x1ad0 (6864) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 39 - num instructions 8
 Instr 430 @ 0x1ae0 (6880) - IMAD.WIDE.U32 R28, R4.reuse, R28, R18 ;
 Instr 431 @ 0x1af0 (6896) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 432 @ 0x1b00 (6912) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 433 @ 0x1b10 (6928) - IMAD R17, R4, R17, R0 ;
 Instr 434 @ 0x1b20 (6944) - MOV R18, R9 ;
 Instr 435 @ 0x1b30 (6960) - IMAD.MOV.U32 R19, RZ, RZ, R8 ;
 Instr 436 @ 0x1b40 (6976) - IMAD.IADD R17, R29, 0x1, R17 ;
 Instr 437 @ 0x1b50 (6992) - @!P1 BRA P0, 0x1c80 ;
Basic block id 40 - num instructions 18
 Instr 438 @ 0x1b60 (7008) - UMOV UR4, 0xd99fbf00 ;
 Instr 439 @ 0x1b70 (7024) - MOV R8, 0x5d ;
 Instr 440 @ 0x1b80 (7040) - UMOV UR5, 0x7f88 ;
 Instr 441 @ 0x1b90 (7056) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 442 @ 0x1ba0 (7072) - UMOV UR6, 0xd99fbe00 ;
 Instr 443 @ 0x1bb0 (7088) - MOV R13, RZ ;
 Instr 444 @ 0x1bc0 (7104) - UMOV UR7, 0x7f88 ;
 Instr 445 @ 0x1bd0 (7120) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 446 @ 0x1be0 (7136) - UMOV UR8, 0xd99f4600 ;
 Instr 447 @ 0x1bf0 (7152) - MOV R5, UR5 ;
 Instr 448 @ 0x1c00 (7168) - UMOV UR9, 0x7f88 ;
 Instr 449 @ 0x1c10 (7184) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 450 @ 0x1c20 (7200) - MOV R7, UR7 ;
 Instr 451 @ 0x1c30 (7216) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 452 @ 0x1c40 (7232) - MOV R11, UR9 ;
 Instr 453 @ 0x1c50 (7248) - MOV R20, 0xae4ec80 ;
 Instr 454 @ 0x1c60 (7264) - MOV R21, 0x7f89 ;
 Instr 455 @ 0x1c70 (7280) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 41 - num instructions 20
 Instr 456 @ 0x1c80 (7296) - BSYNC B6 ;
 Instr 457 @ 0x1c90 (7312) - ISETP.GT.U32.AND P0, PT, R19, -0x1, PT ;
 Instr 458 @ 0x1ca0 (7328) - LDC.64 R4, c[0x0][R24+0x580] ;
 Instr 459 @ 0x1cb0 (7344) - IADD3 R16, P2, R16, -0x4, RZ ;
 Instr 460 @ 0x1cc0 (7360) - IMAD.MOV.U32 R6, RZ, RZ, R28 ;
 Instr 461 @ 0x1cd0 (7376) - ISETP.GT.AND.EX P0, PT, R18, -0x1, PT, P0 ;
 Instr 462 @ 0x1ce0 (7392) - IADD3.X R2, R2, -0x1, RZ, P2, !PT ;
 Instr 463 @ 0x1cf0 (7408) - MOV R7, R17 ;
 Instr 464 @ 0x1d00 (7424) - IADD3 R25, R25, 0x4, RZ ;
 Instr 465 @ 0x1d10 (7440) - @!P0 LDC.64 R8, c[0x0][R24+0x4b8] ;
 Instr 466 @ 0x1d20 (7456) - @!P0 IADD3 R19, P1, R8, R19, RZ ;
 Instr 467 @ 0x1d30 (7472) - @!P0 IMAD.X R18, R9, 0x1, R18, P1 ;
 Instr 468 @ 0x1d40 (7488) - ISETP.NE.U32.AND P0, PT, R16, RZ, PT ;
 Instr 469 @ 0x1d50 (7504) - IMAD R3, R5, R19.reuse, RZ ;
 Instr 470 @ 0x1d60 (7520) - IMAD.WIDE.U32 R6, R4, R19, R6 ;
 Instr 471 @ 0x1d70 (7536) - ISETP.NE.AND.EX P0, PT, R2, RZ, PT, P0 ;
 Instr 472 @ 0x1d80 (7552) - IMAD R3, R4, R18, R3 ;
 Instr 473 @ 0x1d90 (7568) - MOV R18, R6 ;
 Instr 474 @ 0x1da0 (7584) - IMAD.IADD R19, R7, 0x1, R3 ;
 Instr 475 @ 0x1db0 (7600) - @P0 BRA 0x11d0 ;
Basic block id 42 - num instructions 1
 Instr 476 @ 0x1dc0 (7616) - BSYNC B7 ;
Basic block id 43 - num instructions 5
 Instr 477 @ 0x1dd0 (7632) - MOV R2, c[0x0][0x3d8] ;
 Instr 478 @ 0x1de0 (7648) - LOP3.LUT R2, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 479 @ 0x1df0 (7664) - ISETP.NE.U32.AND P0, PT, R2, RZ, PT ;
 Instr 480 @ 0x1e00 (7680) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 481 @ 0x1e10 (7696) - @!P0 BRA 0x2700 ;
Basic block id 44 - num instructions 16
 Instr 482 @ 0x1e20 (7712) - IMAD.MOV.U32 R0, RZ, RZ, 0x8 ;
 Instr 483 @ 0x1e30 (7728) - IMAD R25, R25, R0, c[0x2][0x0] ;
 Instr 484 @ 0x1e40 (7744) - LDC.64 R4, c[0x0][R25+0x3d8] ;
 Instr 485 @ 0x1e50 (7760) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 486 @ 0x1e60 (7776) - IADD3.X R7, RZ, R5, RZ, P0, !PT ;
 Instr 487 @ 0x1e70 (7792) - LDG.E.64.SYS R6, [R6] ;
 Instr 488 @ 0x1e80 (7808) - LDC.64 R4, c[0x0][R25+0x4a0] ;
 Instr 489 @ 0x1e90 (7824) - BMOV.32.CLEAR RZ, B6 ;
 Instr 490 @ 0x1ea0 (7840) - BSSY B6, 0x2070 ;
 Instr 491 @ 0x1eb0 (7856) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 492 @ 0x1ec0 (7872) - IMAD.X R3, RZ, RZ, ~R5, P0 ;
 Instr 493 @ 0x1ed0 (7888) - ISETP.GE.U32.AND P0, PT, R6.reuse, R4, PT ;
 Instr 494 @ 0x1ee0 (7904) - IMAD.MOV.U32 R16, RZ, RZ, R7 ;
 Instr 495 @ 0x1ef0 (7920) - ISETP.GE.U32.AND P1, PT, R6, R0, PT ;
 Instr 496 @ 0x1f00 (7936) - ISETP.GE.AND.EX P0, PT, R7.reuse, R5, PT, P0 ;
 Instr 497 @ 0x1f10 (7952) - ISETP.GE.AND.EX P1, PT, R7, R3, PT, P1 ;
Basic block id 45 - num instructions 2
 Instr 498 @ 0x1f20 (7968) - MOV R17, R6 ;
 Instr 499 @ 0x1f30 (7984) - @!P0 BRA P1, 0x2060 ;
Basic block id 46 - num instructions 18
 Instr 500 @ 0x1f40 (8000) - UMOV UR4, 0xd99fbf00 ;
 Instr 501 @ 0x1f50 (8016) - MOV R8, 0x5d ;
 Instr 502 @ 0x1f60 (8032) - UMOV UR5, 0x7f88 ;
 Instr 503 @ 0x1f70 (8048) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 504 @ 0x1f80 (8064) - UMOV UR6, 0xd99fbe00 ;
 Instr 505 @ 0x1f90 (8080) - MOV R13, RZ ;
 Instr 506 @ 0x1fa0 (8096) - UMOV UR7, 0x7f88 ;
 Instr 507 @ 0x1fb0 (8112) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 508 @ 0x1fc0 (8128) - UMOV UR8, 0xd99f4600 ;
 Instr 509 @ 0x1fd0 (8144) - MOV R5, UR5 ;
 Instr 510 @ 0x1fe0 (8160) - UMOV UR9, 0x7f88 ;
 Instr 511 @ 0x1ff0 (8176) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 512 @ 0x2000 (8192) - MOV R7, UR7 ;
 Instr 513 @ 0x2010 (8208) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 514 @ 0x2020 (8224) - MOV R11, UR9 ;
 Instr 515 @ 0x2030 (8240) - MOV R20, 0xae4f060 ;
 Instr 516 @ 0x2040 (8256) - MOV R21, 0x7f89 ;
 Instr 517 @ 0x2050 (8272) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 47 - num instructions 14
 Instr 518 @ 0x2060 (8288) - BSYNC B6 ;
 Instr 519 @ 0x2070 (8304) - ISETP.GT.U32.AND P0, PT, R17, -0x1, PT ;
 Instr 520 @ 0x2080 (8320) - LDC.64 R4, c[0x0][R25+0x568] ;
 Instr 521 @ 0x2090 (8336) - ISETP.GT.AND.EX P0, PT, R16, -0x1, PT, P0 ;
 Instr 522 @ 0x20a0 (8352) - @!P0 LDC.64 R6, c[0x0][R25+0x4a0] ;
 Instr 523 @ 0x20b0 (8368) - @!P0 IADD3 R17, P1, R6, R17, RZ ;
 Instr 524 @ 0x20c0 (8384) - @!P0 IMAD.X R16, R7, 0x1, R16, P1 ;
 Instr 525 @ 0x20d0 (8400) - ISETP.NE.U32.AND P0, PT, R2, 0x1, PT ;
 Instr 526 @ 0x20e0 (8416) - IMAD R3, R5, R17.reuse, RZ ;
 Instr 527 @ 0x20f0 (8432) - IMAD.WIDE.U32 R18, R4, R17, R18 ;
 Instr 528 @ 0x2100 (8448) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 529 @ 0x2110 (8464) - IMAD R3, R4, R16, R3 ;
 Instr 530 @ 0x2120 (8480) - IADD3 R19, R19, R3, RZ ;
 Instr 531 @ 0x2130 (8496) - @!P0 BRA 0x2700 ;
Basic block id 48 - num instructions 14
 Instr 532 @ 0x2140 (8512) - LDC.64 R4, c[0x0][R25+0x3e0] ;
 Instr 533 @ 0x2150 (8528) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 534 @ 0x2160 (8544) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 535 @ 0x2170 (8560) - LDG.E.64.SYS R6, [R6] ;
 Instr 536 @ 0x2180 (8576) - LDC.64 R4, c[0x0][R25+0x4a8] ;
 Instr 537 @ 0x2190 (8592) - BMOV.32.CLEAR RZ, B6 ;
 Instr 538 @ 0x21a0 (8608) - BSSY B6, 0x2370 ;
 Instr 539 @ 0x21b0 (8624) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 540 @ 0x21c0 (8640) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 541 @ 0x21d0 (8656) - ISETP.GE.U32.AND P0, PT, R6.reuse, R4, PT ;
 Instr 542 @ 0x21e0 (8672) - IMAD.MOV.U32 R17, RZ, RZ, R6 ;
 Instr 543 @ 0x21f0 (8688) - ISETP.GE.U32.AND P1, PT, R6, R0, PT ;
 Instr 544 @ 0x2200 (8704) - ISETP.GE.AND.EX P0, PT, R7.reuse, R5, PT, P0 ;
 Instr 545 @ 0x2210 (8720) - ISETP.GE.AND.EX P1, PT, R7, R3, PT, P1 ;
Basic block id 49 - num instructions 2
 Instr 546 @ 0x2220 (8736) - MOV R16, R7 ;
 Instr 547 @ 0x2230 (8752) - @!P0 BRA P1, 0x2360 ;
Basic block id 50 - num instructions 18
 Instr 548 @ 0x2240 (8768) - UMOV UR4, 0xd99fbf00 ;
 Instr 549 @ 0x2250 (8784) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 550 @ 0x2260 (8800) - UMOV UR5, 0x7f88 ;
 Instr 551 @ 0x2270 (8816) - MOV R12, 0x1 ;
 Instr 552 @ 0x2280 (8832) - UMOV UR6, 0xd99fbe00 ;
 Instr 553 @ 0x2290 (8848) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 554 @ 0x22a0 (8864) - UMOV UR7, 0x7f88 ;
 Instr 555 @ 0x22b0 (8880) - MOV R4, UR4 ;
 Instr 556 @ 0x22c0 (8896) - UMOV UR8, 0xd99f4600 ;
 Instr 557 @ 0x22d0 (8912) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 558 @ 0x22e0 (8928) - UMOV UR9, 0x7f88 ;
 Instr 559 @ 0x22f0 (8944) - MOV R6, UR6 ;
 Instr 560 @ 0x2300 (8960) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 561 @ 0x2310 (8976) - MOV R10, UR8 ;
 Instr 562 @ 0x2320 (8992) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 563 @ 0x2330 (9008) - MOV R20, 0xae4f360 ;
 Instr 564 @ 0x2340 (9024) - MOV R21, 0x7f89 ;
 Instr 565 @ 0x2350 (9040) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 51 - num instructions 14
 Instr 566 @ 0x2360 (9056) - BSYNC B6 ;
 Instr 567 @ 0x2370 (9072) - ISETP.GT.U32.AND P0, PT, R17, -0x1, PT ;
 Instr 568 @ 0x2380 (9088) - LDC.64 R4, c[0x0][R25+0x570] ;
 Instr 569 @ 0x2390 (9104) - ISETP.GT.AND.EX P0, PT, R16, -0x1, PT, P0 ;
 Instr 570 @ 0x23a0 (9120) - @!P0 LDC.64 R6, c[0x0][R25+0x4a8] ;
 Instr 571 @ 0x23b0 (9136) - @!P0 IADD3 R17, P1, R6, R17, RZ ;
 Instr 572 @ 0x23c0 (9152) - @!P0 IADD3.X R16, R7, R16, RZ, P1, !PT ;
 Instr 573 @ 0x23d0 (9168) - IMAD R3, R5, R17.reuse, RZ ;
 Instr 574 @ 0x23e0 (9184) - ISETP.NE.U32.AND P0, PT, R2, 0x2, PT ;
 Instr 575 @ 0x23f0 (9200) - IMAD.WIDE.U32 R18, R4, R17, R18 ;
 Instr 576 @ 0x2400 (9216) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 577 @ 0x2410 (9232) - IMAD R3, R4, R16, R3 ;
 Instr 578 @ 0x2420 (9248) - IMAD.IADD R19, R19, 0x1, R3 ;
 Instr 579 @ 0x2430 (9264) - @!P0 BRA 0x2700 ;
Basic block id 52 - num instructions 15
 Instr 580 @ 0x2440 (9280) - LDC.64 R2, c[0x0][R25+0x3e8] ;
 Instr 581 @ 0x2450 (9296) - IADD3 R4, P0, R2, R27, RZ ;
 Instr 582 @ 0x2460 (9312) - IADD3.X R5, RZ, R3, RZ, P0, !PT ;
 Instr 583 @ 0x2470 (9328) - LDG.E.64.SYS R16, [R4] ;
 Instr 584 @ 0x2480 (9344) - LDC.64 R2, c[0x0][R25+0x4b0] ;
 Instr 585 @ 0x2490 (9360) - BMOV.32.CLEAR RZ, B6 ;
 Instr 586 @ 0x24a0 (9376) - BSSY B6, 0x2660 ;
 Instr 587 @ 0x24b0 (9392) - IADD3 R0, P0, RZ, -R2, RZ ;
 Instr 588 @ 0x24c0 (9408) - IMAD.X R6, RZ, RZ, ~R3, P0 ;
 Instr 589 @ 0x24d0 (9424) - ISETP.GE.U32.AND P0, PT, R16.reuse, R2, PT ;
 Instr 590 @ 0x24e0 (9440) - ISETP.GE.U32.AND P1, PT, R16, R0, PT ;
 Instr 591 @ 0x24f0 (9456) - ISETP.GE.AND.EX P0, PT, R17.reuse, R3, PT, P0 ;
 Instr 592 @ 0x2500 (9472) - ISETP.GE.AND.EX P1, PT, R17, R6, PT, P1 ;
 Instr 593 @ 0x2510 (9488) - MOV R2, R17 ;
 Instr 594 @ 0x2520 (9504) - @!P0 BRA P1, 0x2650 ;
Basic block id 53 - num instructions 18
 Instr 595 @ 0x2530 (9520) - UMOV UR4, 0xd99fbf00 ;
 Instr 596 @ 0x2540 (9536) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 597 @ 0x2550 (9552) - UMOV UR5, 0x7f88 ;
 Instr 598 @ 0x2560 (9568) - MOV R12, 0x1 ;
 Instr 599 @ 0x2570 (9584) - UMOV UR6, 0xd99fbe00 ;
 Instr 600 @ 0x2580 (9600) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 601 @ 0x2590 (9616) - UMOV UR7, 0x7f88 ;
 Instr 602 @ 0x25a0 (9632) - MOV R4, UR4 ;
 Instr 603 @ 0x25b0 (9648) - UMOV UR8, 0xd99f4600 ;
 Instr 604 @ 0x25c0 (9664) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 605 @ 0x25d0 (9680) - UMOV UR9, 0x7f88 ;
 Instr 606 @ 0x25e0 (9696) - MOV R6, UR6 ;
 Instr 607 @ 0x25f0 (9712) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 608 @ 0x2600 (9728) - MOV R10, UR8 ;
 Instr 609 @ 0x2610 (9744) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 610 @ 0x2620 (9760) - MOV R20, 0xae4f650 ;
 Instr 611 @ 0x2630 (9776) - MOV R21, 0x7f89 ;
 Instr 612 @ 0x2640 (9792) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 54 - num instructions 11
 Instr 613 @ 0x2650 (9808) - BSYNC B6 ;
 Instr 614 @ 0x2660 (9824) - ISETP.GT.U32.AND P0, PT, R16, -0x1, PT ;
 Instr 615 @ 0x2670 (9840) - LDC.64 R4, c[0x0][R25+0x578] ;
 Instr 616 @ 0x2680 (9856) - ISETP.GT.AND.EX P0, PT, R2, -0x1, PT, P0 ;
 Instr 617 @ 0x2690 (9872) - @!P0 LDC.64 R6, c[0x0][R25+0x4b0] ;
 Instr 618 @ 0x26a0 (9888) - @!P0 IADD3 R16, P1, R6, R16, RZ ;
 Instr 619 @ 0x26b0 (9904) - @!P0 IADD3.X R2, R7, R2, RZ, P1, !PT ;
 Instr 620 @ 0x26c0 (9920) - IMAD R3, R5, R16.reuse, RZ ;
 Instr 621 @ 0x26d0 (9936) - IMAD.WIDE.U32 R18, R4, R16, R18 ;
 Instr 622 @ 0x26e0 (9952) - IMAD R3, R4, R2, R3 ;
 Instr 623 @ 0x26f0 (9968) - IMAD.IADD R19, R19, 0x1, R3 ;
Basic block id 55 - num instructions 9
 Instr 624 @ 0x2700 (9984) - IADD3 R18, P0, P1, R18, c[0x0][0x3d0], R26 ;
 Instr 625 @ 0x2710 (10000) - IADD3.X R19, R19, c[0x0][0x3d4], RZ, P0, P1 ;
 Instr 626 @ 0x2720 (10016) - LDG.E.U16.SYS R18, [R18] ;
 Instr 627 @ 0x2730 (10032) - LEA R17, R23, R22, 0x9 ;
 Instr 628 @ 0x2740 (10048) - IADD3 R17, R17, 0x80, RZ ;
 Instr 629 @ 0x2750 (10064) - IMAD.MOV.U32 R2, RZ, RZ, R17 ;
 Instr 630 @ 0x2760 (10080) - PRMT R3, R18, 0x7710, RZ ;
 Instr 631 @ 0x2770 (10096) - STG.E.U16.SYS [R30], R3 ;
 Instr 632 @ 0x2780 (10112) - MOV R3, RZ ;
Basic block id 56 - num instructions 6
 Instr 633 @ 0x2790 (10128) - BSYNC B8 ;
 Instr 634 @ 0x27a0 (10144) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x160], PT ;
 Instr 635 @ 0x27b0 (10160) - BMOV.32.CLEAR RZ, B8 ;
 Instr 636 @ 0x27c0 (10176) - BSSY B8, 0x4ea0 ;
 Instr 637 @ 0x27d0 (10192) - ISETP.GE.AND.EX P0, PT, R3, c[0x0][0x164], PT, P0 ;
 Instr 638 @ 0x27e0 (10208) - @P0 BRA 0x4e90 ;
Basic block id 57 - num instructions 4
 Instr 639 @ 0x27f0 (10224) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
 Instr 640 @ 0x2800 (10240) - CS2R R26, SRZ ;
 Instr 641 @ 0x2810 (10256) - IMAD.MOV.U32 R30, RZ, RZ, RZ ;
 Instr 642 @ 0x2820 (10272) - @!P0 BRA 0x37d0 ;
Basic block id 58 - num instructions 11
 Instr 643 @ 0x2830 (10288) - MOV R16, RZ ;
 Instr 644 @ 0x2840 (10304) - MOV R4, 0x1 ;
 Instr 645 @ 0x2850 (10320) - IMAD.HI.U32 R2, R17, c[0x0][0x170], R16 ;
 Instr 646 @ 0x2860 (10336) - ISETP.NE.AND P0, PT, R4, c[0x0][0x168], PT ;
 Instr 647 @ 0x2870 (10352) - SHF.R.U32.HI R3, RZ, c[0x0][0x174], R2 ;
 Instr 648 @ 0x2880 (10368) - IMAD.MOV R0, RZ, RZ, -R3 ;
 Instr 649 @ 0x2890 (10384) - IMAD R27, R0, c[0x0][0x16c], R17 ;
 Instr 650 @ 0x28a0 (10400) - IMAD R30, R27.reuse, c[0x0][0x298], RZ ;
 Instr 651 @ 0x28b0 (10416) - IMAD R26, R27.reuse, c[0x0][0x29c], RZ ;
 Instr 652 @ 0x28c0 (10432) - IMAD R27, R27, c[0x0][0x2a0], RZ ;
 Instr 653 @ 0x28d0 (10448) - @!P0 BRA 0x37d0 ;
Basic block id 59 - num instructions 11
 Instr 654 @ 0x28e0 (10464) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 655 @ 0x28f0 (10480) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x168] ;
 Instr 656 @ 0x2900 (10496) - IMAD.HI.U32 R4, R3, c[0x0][0x17c], R2 ;
 Instr 657 @ 0x2910 (10512) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 658 @ 0x2920 (10528) - SHF.R.U32.HI R5, RZ, c[0x0][0x180], R4 ;
 Instr 659 @ 0x2930 (10544) - IADD3 R2, -R5, RZ, RZ ;
 Instr 660 @ 0x2940 (10560) - IMAD R3, R2, c[0x0][0x178], R3 ;
 Instr 661 @ 0x2950 (10576) - IMAD R30, R3.reuse, c[0x0][0x2a4], R30 ;
 Instr 662 @ 0x2960 (10592) - IMAD R26, R3.reuse, c[0x0][0x2a8], R26 ;
 Instr 663 @ 0x2970 (10608) - IMAD R27, R3, c[0x0][0x2ac], R27 ;
 Instr 664 @ 0x2980 (10624) - @!P0 BRA 0x37d0 ;
Basic block id 60 - num instructions 10
 Instr 665 @ 0x2990 (10640) - MOV R4, RZ ;
 Instr 666 @ 0x29a0 (10656) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 667 @ 0x29b0 (10672) - IMAD.HI.U32 R2, R5, c[0x0][0x188], R4 ;
 Instr 668 @ 0x29c0 (10688) - SHF.R.U32.HI R3, RZ, c[0x0][0x18c], R2 ;
 Instr 669 @ 0x29d0 (10704) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 670 @ 0x29e0 (10720) - IMAD R5, R4, c[0x0][0x184], R5 ;
 Instr 671 @ 0x29f0 (10736) - IMAD R30, R5.reuse, c[0x0][0x2b0], R30 ;
 Instr 672 @ 0x2a00 (10752) - IMAD R26, R5.reuse, c[0x0][0x2b4], R26 ;
 Instr 673 @ 0x2a10 (10768) - IMAD R27, R5, c[0x0][0x2b8], R27 ;
 Instr 674 @ 0x2a20 (10784) - @!P0 BRA 0x37d0 ;
Basic block id 61 - num instructions 10
 Instr 675 @ 0x2a30 (10800) - MOV R2, RZ ;
 Instr 676 @ 0x2a40 (10816) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 677 @ 0x2a50 (10832) - IMAD.HI.U32 R4, R3, c[0x0][0x194], R2 ;
 Instr 678 @ 0x2a60 (10848) - SHF.R.U32.HI R5, RZ, c[0x0][0x198], R4 ;
 Instr 679 @ 0x2a70 (10864) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 680 @ 0x2a80 (10880) - IMAD R3, R2, c[0x0][0x190], R3 ;
 Instr 681 @ 0x2a90 (10896) - IMAD R30, R3.reuse, c[0x0][0x2bc], R30 ;
 Instr 682 @ 0x2aa0 (10912) - IMAD R26, R3.reuse, c[0x0][0x2c0], R26 ;
 Instr 683 @ 0x2ab0 (10928) - IMAD R27, R3, c[0x0][0x2c4], R27 ;
 Instr 684 @ 0x2ac0 (10944) - @!P0 BRA 0x37d0 ;
Basic block id 62 - num instructions 10
 Instr 685 @ 0x2ad0 (10960) - MOV R4, RZ ;
 Instr 686 @ 0x2ae0 (10976) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 687 @ 0x2af0 (10992) - IMAD.HI.U32 R2, R5, c[0x0][0x1a0], R4 ;
 Instr 688 @ 0x2b00 (11008) - SHF.R.U32.HI R3, RZ, c[0x0][0x1a4], R2 ;
 Instr 689 @ 0x2b10 (11024) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 690 @ 0x2b20 (11040) - IMAD R5, R4, c[0x0][0x19c], R5 ;
 Instr 691 @ 0x2b30 (11056) - IMAD R30, R5.reuse, c[0x0][0x2c8], R30 ;
 Instr 692 @ 0x2b40 (11072) - IMAD R26, R5.reuse, c[0x0][0x2cc], R26 ;
 Instr 693 @ 0x2b50 (11088) - IMAD R27, R5, c[0x0][0x2d0], R27 ;
 Instr 694 @ 0x2b60 (11104) - @!P0 BRA 0x37d0 ;
Basic block id 63 - num instructions 10
 Instr 695 @ 0x2b70 (11120) - MOV R2, RZ ;
 Instr 696 @ 0x2b80 (11136) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 697 @ 0x2b90 (11152) - IMAD.HI.U32 R4, R3, c[0x0][0x1ac], R2 ;
 Instr 698 @ 0x2ba0 (11168) - SHF.R.U32.HI R5, RZ, c[0x0][0x1b0], R4 ;
 Instr 699 @ 0x2bb0 (11184) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 700 @ 0x2bc0 (11200) - IMAD R3, R2, c[0x0][0x1a8], R3 ;
 Instr 701 @ 0x2bd0 (11216) - IMAD R30, R3.reuse, c[0x0][0x2d4], R30 ;
 Instr 702 @ 0x2be0 (11232) - IMAD R26, R3.reuse, c[0x0][0x2d8], R26 ;
 Instr 703 @ 0x2bf0 (11248) - IMAD R27, R3, c[0x0][0x2dc], R27 ;
 Instr 704 @ 0x2c00 (11264) - @!P0 BRA 0x37d0 ;
Basic block id 64 - num instructions 10
 Instr 705 @ 0x2c10 (11280) - MOV R4, RZ ;
 Instr 706 @ 0x2c20 (11296) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 707 @ 0x2c30 (11312) - IMAD.HI.U32 R2, R5, c[0x0][0x1b8], R4 ;
 Instr 708 @ 0x2c40 (11328) - SHF.R.U32.HI R3, RZ, c[0x0][0x1bc], R2 ;
 Instr 709 @ 0x2c50 (11344) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 710 @ 0x2c60 (11360) - IMAD R5, R4, c[0x0][0x1b4], R5 ;
 Instr 711 @ 0x2c70 (11376) - IMAD R30, R5.reuse, c[0x0][0x2e0], R30 ;
 Instr 712 @ 0x2c80 (11392) - IMAD R26, R5.reuse, c[0x0][0x2e4], R26 ;
 Instr 713 @ 0x2c90 (11408) - IMAD R27, R5, c[0x0][0x2e8], R27 ;
 Instr 714 @ 0x2ca0 (11424) - @!P0 BRA 0x37d0 ;
Basic block id 65 - num instructions 10
 Instr 715 @ 0x2cb0 (11440) - MOV R2, RZ ;
 Instr 716 @ 0x2cc0 (11456) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 717 @ 0x2cd0 (11472) - IMAD.HI.U32 R4, R3, c[0x0][0x1c4], R2 ;
 Instr 718 @ 0x2ce0 (11488) - SHF.R.U32.HI R5, RZ, c[0x0][0x1c8], R4 ;
 Instr 719 @ 0x2cf0 (11504) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 720 @ 0x2d00 (11520) - IMAD R3, R2, c[0x0][0x1c0], R3 ;
 Instr 721 @ 0x2d10 (11536) - IMAD R30, R3.reuse, c[0x0][0x2ec], R30 ;
 Instr 722 @ 0x2d20 (11552) - IMAD R26, R3.reuse, c[0x0][0x2f0], R26 ;
 Instr 723 @ 0x2d30 (11568) - IMAD R27, R3, c[0x0][0x2f4], R27 ;
 Instr 724 @ 0x2d40 (11584) - @!P0 BRA 0x37d0 ;
Basic block id 66 - num instructions 10
 Instr 725 @ 0x2d50 (11600) - MOV R4, RZ ;
 Instr 726 @ 0x2d60 (11616) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 727 @ 0x2d70 (11632) - IMAD.HI.U32 R2, R5, c[0x0][0x1d0], R4 ;
 Instr 728 @ 0x2d80 (11648) - SHF.R.U32.HI R3, RZ, c[0x0][0x1d4], R2 ;
 Instr 729 @ 0x2d90 (11664) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 730 @ 0x2da0 (11680) - IMAD R5, R4, c[0x0][0x1cc], R5 ;
 Instr 731 @ 0x2db0 (11696) - IMAD R30, R5.reuse, c[0x0][0x2f8], R30 ;
 Instr 732 @ 0x2dc0 (11712) - IMAD R26, R5.reuse, c[0x0][0x2fc], R26 ;
 Instr 733 @ 0x2dd0 (11728) - IMAD R27, R5, c[0x0][0x300], R27 ;
 Instr 734 @ 0x2de0 (11744) - @!P0 BRA 0x37d0 ;
Basic block id 67 - num instructions 10
 Instr 735 @ 0x2df0 (11760) - MOV R2, RZ ;
 Instr 736 @ 0x2e00 (11776) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 737 @ 0x2e10 (11792) - IMAD.HI.U32 R4, R3, c[0x0][0x1dc], R2 ;
 Instr 738 @ 0x2e20 (11808) - SHF.R.U32.HI R5, RZ, c[0x0][0x1e0], R4 ;
 Instr 739 @ 0x2e30 (11824) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 740 @ 0x2e40 (11840) - IMAD R3, R2, c[0x0][0x1d8], R3 ;
 Instr 741 @ 0x2e50 (11856) - IMAD R30, R3.reuse, c[0x0][0x304], R30 ;
 Instr 742 @ 0x2e60 (11872) - IMAD R26, R3.reuse, c[0x0][0x308], R26 ;
 Instr 743 @ 0x2e70 (11888) - IMAD R27, R3, c[0x0][0x30c], R27 ;
 Instr 744 @ 0x2e80 (11904) - @!P0 BRA 0x37d0 ;
Basic block id 68 - num instructions 10
 Instr 745 @ 0x2e90 (11920) - MOV R4, RZ ;
 Instr 746 @ 0x2ea0 (11936) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 747 @ 0x2eb0 (11952) - IMAD.HI.U32 R2, R5, c[0x0][0x1e8], R4 ;
 Instr 748 @ 0x2ec0 (11968) - SHF.R.U32.HI R3, RZ, c[0x0][0x1ec], R2 ;
 Instr 749 @ 0x2ed0 (11984) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 750 @ 0x2ee0 (12000) - IMAD R5, R4, c[0x0][0x1e4], R5 ;
 Instr 751 @ 0x2ef0 (12016) - IMAD R30, R5.reuse, c[0x0][0x310], R30 ;
 Instr 752 @ 0x2f00 (12032) - IMAD R26, R5.reuse, c[0x0][0x314], R26 ;
 Instr 753 @ 0x2f10 (12048) - IMAD R27, R5, c[0x0][0x318], R27 ;
 Instr 754 @ 0x2f20 (12064) - @!P0 BRA 0x37d0 ;
Basic block id 69 - num instructions 10
 Instr 755 @ 0x2f30 (12080) - MOV R2, RZ ;
 Instr 756 @ 0x2f40 (12096) - ISETP.NE.AND P0, PT, R0, 0xc, PT ;
 Instr 757 @ 0x2f50 (12112) - IMAD.HI.U32 R4, R3, c[0x0][0x1f4], R2 ;
 Instr 758 @ 0x2f60 (12128) - SHF.R.U32.HI R5, RZ, c[0x0][0x1f8], R4 ;
 Instr 759 @ 0x2f70 (12144) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 760 @ 0x2f80 (12160) - IMAD R3, R2, c[0x0][0x1f0], R3 ;
 Instr 761 @ 0x2f90 (12176) - IMAD R30, R3.reuse, c[0x0][0x31c], R30 ;
 Instr 762 @ 0x2fa0 (12192) - IMAD R26, R3.reuse, c[0x0][0x320], R26 ;
 Instr 763 @ 0x2fb0 (12208) - IMAD R27, R3, c[0x0][0x324], R27 ;
 Instr 764 @ 0x2fc0 (12224) - @!P0 BRA 0x37d0 ;
Basic block id 70 - num instructions 10
 Instr 765 @ 0x2fd0 (12240) - MOV R4, RZ ;
 Instr 766 @ 0x2fe0 (12256) - ISETP.NE.AND P0, PT, R0, 0xd, PT ;
 Instr 767 @ 0x2ff0 (12272) - IMAD.HI.U32 R2, R5, c[0x0][0x200], R4 ;
 Instr 768 @ 0x3000 (12288) - SHF.R.U32.HI R3, RZ, c[0x0][0x204], R2 ;
 Instr 769 @ 0x3010 (12304) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 770 @ 0x3020 (12320) - IMAD R5, R4, c[0x0][0x1fc], R5 ;
 Instr 771 @ 0x3030 (12336) - IMAD R30, R5.reuse, c[0x0][0x328], R30 ;
 Instr 772 @ 0x3040 (12352) - IMAD R26, R5.reuse, c[0x0][0x32c], R26 ;
 Instr 773 @ 0x3050 (12368) - IMAD R27, R5, c[0x0][0x330], R27 ;
 Instr 774 @ 0x3060 (12384) - @!P0 BRA 0x37d0 ;
Basic block id 71 - num instructions 10
 Instr 775 @ 0x3070 (12400) - MOV R2, RZ ;
 Instr 776 @ 0x3080 (12416) - ISETP.NE.AND P0, PT, R0, 0xe, PT ;
 Instr 777 @ 0x3090 (12432) - IMAD.HI.U32 R4, R3, c[0x0][0x20c], R2 ;
 Instr 778 @ 0x30a0 (12448) - SHF.R.U32.HI R5, RZ, c[0x0][0x210], R4 ;
 Instr 779 @ 0x30b0 (12464) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 780 @ 0x30c0 (12480) - IMAD R3, R2, c[0x0][0x208], R3 ;
 Instr 781 @ 0x30d0 (12496) - IMAD R30, R3.reuse, c[0x0][0x334], R30 ;
 Instr 782 @ 0x30e0 (12512) - IMAD R26, R3.reuse, c[0x0][0x338], R26 ;
 Instr 783 @ 0x30f0 (12528) - IMAD R27, R3, c[0x0][0x33c], R27 ;
 Instr 784 @ 0x3100 (12544) - @!P0 BRA 0x37d0 ;
Basic block id 72 - num instructions 10
 Instr 785 @ 0x3110 (12560) - MOV R4, RZ ;
 Instr 786 @ 0x3120 (12576) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 787 @ 0x3130 (12592) - IMAD.HI.U32 R2, R5, c[0x0][0x218], R4 ;
 Instr 788 @ 0x3140 (12608) - SHF.R.U32.HI R3, RZ, c[0x0][0x21c], R2 ;
 Instr 789 @ 0x3150 (12624) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 790 @ 0x3160 (12640) - IMAD R5, R4, c[0x0][0x214], R5 ;
 Instr 791 @ 0x3170 (12656) - IMAD R30, R5.reuse, c[0x0][0x340], R30 ;
 Instr 792 @ 0x3180 (12672) - IMAD R26, R5.reuse, c[0x0][0x344], R26 ;
 Instr 793 @ 0x3190 (12688) - IMAD R27, R5, c[0x0][0x348], R27 ;
 Instr 794 @ 0x31a0 (12704) - @!P0 BRA 0x37d0 ;
Basic block id 73 - num instructions 10
 Instr 795 @ 0x31b0 (12720) - MOV R2, RZ ;
 Instr 796 @ 0x31c0 (12736) - ISETP.NE.AND P0, PT, R0, 0x10, PT ;
 Instr 797 @ 0x31d0 (12752) - IMAD.HI.U32 R4, R3, c[0x0][0x224], R2 ;
 Instr 798 @ 0x31e0 (12768) - SHF.R.U32.HI R5, RZ, c[0x0][0x228], R4 ;
 Instr 799 @ 0x31f0 (12784) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 800 @ 0x3200 (12800) - IMAD R3, R2, c[0x0][0x220], R3 ;
 Instr 801 @ 0x3210 (12816) - IMAD R30, R3.reuse, c[0x0][0x34c], R30 ;
 Instr 802 @ 0x3220 (12832) - IMAD R26, R3.reuse, c[0x0][0x350], R26 ;
 Instr 803 @ 0x3230 (12848) - IMAD R27, R3, c[0x0][0x354], R27 ;
 Instr 804 @ 0x3240 (12864) - @!P0 BRA 0x37d0 ;
Basic block id 74 - num instructions 10
 Instr 805 @ 0x3250 (12880) - MOV R4, RZ ;
 Instr 806 @ 0x3260 (12896) - ISETP.NE.AND P0, PT, R0, 0x11, PT ;
 Instr 807 @ 0x3270 (12912) - IMAD.HI.U32 R2, R5, c[0x0][0x230], R4 ;
 Instr 808 @ 0x3280 (12928) - SHF.R.U32.HI R3, RZ, c[0x0][0x234], R2 ;
 Instr 809 @ 0x3290 (12944) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 810 @ 0x32a0 (12960) - IMAD R5, R4, c[0x0][0x22c], R5 ;
 Instr 811 @ 0x32b0 (12976) - IMAD R30, R5.reuse, c[0x0][0x358], R30 ;
 Instr 812 @ 0x32c0 (12992) - IMAD R26, R5.reuse, c[0x0][0x35c], R26 ;
 Instr 813 @ 0x32d0 (13008) - IMAD R27, R5, c[0x0][0x360], R27 ;
 Instr 814 @ 0x32e0 (13024) - @!P0 BRA 0x37d0 ;
Basic block id 75 - num instructions 10
 Instr 815 @ 0x32f0 (13040) - MOV R2, RZ ;
 Instr 816 @ 0x3300 (13056) - ISETP.NE.AND P0, PT, R0, 0x12, PT ;
 Instr 817 @ 0x3310 (13072) - IMAD.HI.U32 R4, R3, c[0x0][0x23c], R2 ;
 Instr 818 @ 0x3320 (13088) - SHF.R.U32.HI R5, RZ, c[0x0][0x240], R4 ;
 Instr 819 @ 0x3330 (13104) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 820 @ 0x3340 (13120) - IMAD R3, R2, c[0x0][0x238], R3 ;
 Instr 821 @ 0x3350 (13136) - IMAD R30, R3.reuse, c[0x0][0x364], R30 ;
 Instr 822 @ 0x3360 (13152) - IMAD R26, R3.reuse, c[0x0][0x368], R26 ;
 Instr 823 @ 0x3370 (13168) - IMAD R27, R3, c[0x0][0x36c], R27 ;
 Instr 824 @ 0x3380 (13184) - @!P0 BRA 0x37d0 ;
Basic block id 76 - num instructions 10
 Instr 825 @ 0x3390 (13200) - MOV R4, RZ ;
 Instr 826 @ 0x33a0 (13216) - ISETP.NE.AND P0, PT, R0, 0x13, PT ;
 Instr 827 @ 0x33b0 (13232) - IMAD.HI.U32 R2, R5, c[0x0][0x248], R4 ;
 Instr 828 @ 0x33c0 (13248) - SHF.R.U32.HI R3, RZ, c[0x0][0x24c], R2 ;
 Instr 829 @ 0x33d0 (13264) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 830 @ 0x33e0 (13280) - IMAD R5, R4, c[0x0][0x244], R5 ;
 Instr 831 @ 0x33f0 (13296) - IMAD R30, R5.reuse, c[0x0][0x370], R30 ;
 Instr 832 @ 0x3400 (13312) - IMAD R26, R5.reuse, c[0x0][0x374], R26 ;
 Instr 833 @ 0x3410 (13328) - IMAD R27, R5, c[0x0][0x378], R27 ;
 Instr 834 @ 0x3420 (13344) - @!P0 BRA 0x37d0 ;
Basic block id 77 - num instructions 10
 Instr 835 @ 0x3430 (13360) - MOV R2, RZ ;
 Instr 836 @ 0x3440 (13376) - ISETP.NE.AND P0, PT, R0, 0x14, PT ;
 Instr 837 @ 0x3450 (13392) - IMAD.HI.U32 R4, R3, c[0x0][0x254], R2 ;
 Instr 838 @ 0x3460 (13408) - SHF.R.U32.HI R5, RZ, c[0x0][0x258], R4 ;
 Instr 839 @ 0x3470 (13424) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 840 @ 0x3480 (13440) - IMAD R3, R2, c[0x0][0x250], R3 ;
 Instr 841 @ 0x3490 (13456) - IMAD R30, R3.reuse, c[0x0][0x37c], R30 ;
 Instr 842 @ 0x34a0 (13472) - IMAD R26, R3.reuse, c[0x0][0x380], R26 ;
 Instr 843 @ 0x34b0 (13488) - IMAD R27, R3, c[0x0][0x384], R27 ;
 Instr 844 @ 0x34c0 (13504) - @!P0 BRA 0x37d0 ;
Basic block id 78 - num instructions 10
 Instr 845 @ 0x34d0 (13520) - MOV R4, RZ ;
 Instr 846 @ 0x34e0 (13536) - ISETP.NE.AND P0, PT, R0, 0x15, PT ;
 Instr 847 @ 0x34f0 (13552) - IMAD.HI.U32 R2, R5, c[0x0][0x260], R4 ;
 Instr 848 @ 0x3500 (13568) - SHF.R.U32.HI R3, RZ, c[0x0][0x264], R2 ;
 Instr 849 @ 0x3510 (13584) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 850 @ 0x3520 (13600) - IMAD R5, R4, c[0x0][0x25c], R5 ;
 Instr 851 @ 0x3530 (13616) - IMAD R30, R5.reuse, c[0x0][0x388], R30 ;
 Instr 852 @ 0x3540 (13632) - IMAD R26, R5.reuse, c[0x0][0x38c], R26 ;
 Instr 853 @ 0x3550 (13648) - IMAD R27, R5, c[0x0][0x390], R27 ;
 Instr 854 @ 0x3560 (13664) - @!P0 BRA 0x37d0 ;
Basic block id 79 - num instructions 10
 Instr 855 @ 0x3570 (13680) - MOV R2, RZ ;
 Instr 856 @ 0x3580 (13696) - ISETP.NE.AND P0, PT, R0, 0x16, PT ;
 Instr 857 @ 0x3590 (13712) - IMAD.HI.U32 R4, R3, c[0x0][0x26c], R2 ;
 Instr 858 @ 0x35a0 (13728) - SHF.R.U32.HI R5, RZ, c[0x0][0x270], R4 ;
 Instr 859 @ 0x35b0 (13744) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 860 @ 0x35c0 (13760) - IMAD R3, R2, c[0x0][0x268], R3 ;
 Instr 861 @ 0x35d0 (13776) - IMAD R30, R3.reuse, c[0x0][0x394], R30 ;
 Instr 862 @ 0x35e0 (13792) - IMAD R26, R3.reuse, c[0x0][0x398], R26 ;
 Instr 863 @ 0x35f0 (13808) - IMAD R27, R3, c[0x0][0x39c], R27 ;
 Instr 864 @ 0x3600 (13824) - @!P0 BRA 0x37d0 ;
Basic block id 80 - num instructions 10
 Instr 865 @ 0x3610 (13840) - MOV R4, RZ ;
 Instr 866 @ 0x3620 (13856) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 867 @ 0x3630 (13872) - IMAD.HI.U32 R2, R5, c[0x0][0x278], R4 ;
 Instr 868 @ 0x3640 (13888) - SHF.R.U32.HI R3, RZ, c[0x0][0x27c], R2 ;
 Instr 869 @ 0x3650 (13904) - IMAD.MOV R4, RZ, RZ, -R3 ;
 Instr 870 @ 0x3660 (13920) - IMAD R5, R4, c[0x0][0x274], R5 ;
 Instr 871 @ 0x3670 (13936) - IMAD R30, R5.reuse, c[0x0][0x3a0], R30 ;
 Instr 872 @ 0x3680 (13952) - IMAD R26, R5.reuse, c[0x0][0x3a4], R26 ;
 Instr 873 @ 0x3690 (13968) - IMAD R27, R5, c[0x0][0x3a8], R27 ;
 Instr 874 @ 0x36a0 (13984) - @!P0 BRA 0x37d0 ;
Basic block id 81 - num instructions 10
 Instr 875 @ 0x36b0 (14000) - MOV R2, RZ ;
 Instr 876 @ 0x36c0 (14016) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 877 @ 0x36d0 (14032) - IMAD.HI.U32 R4, R3, c[0x0][0x284], R2 ;
 Instr 878 @ 0x36e0 (14048) - SHF.R.U32.HI R5, RZ, c[0x0][0x288], R4 ;
 Instr 879 @ 0x36f0 (14064) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 880 @ 0x3700 (14080) - IMAD R3, R2, c[0x0][0x280], R3 ;
 Instr 881 @ 0x3710 (14096) - IMAD R30, R3.reuse, c[0x0][0x3ac], R30 ;
 Instr 882 @ 0x3720 (14112) - IMAD R26, R3.reuse, c[0x0][0x3b0], R26 ;
 Instr 883 @ 0x3730 (14128) - IMAD R27, R3, c[0x0][0x3b4], R27 ;
 Instr 884 @ 0x3740 (14144) - @!P0 BRA 0x37d0 ;
Basic block id 82 - num instructions 8
 Instr 885 @ 0x3750 (14160) - MOV R4, RZ ;
 Instr 886 @ 0x3760 (14176) - IMAD.HI.U32 R0, R5, c[0x0][0x290], R4 ;
 Instr 887 @ 0x3770 (14192) - SHF.R.U32.HI R0, RZ, c[0x0][0x294], R0 ;
 Instr 888 @ 0x3780 (14208) - IMAD.MOV R3, RZ, RZ, -R0 ;
 Instr 889 @ 0x3790 (14224) - IMAD R5, R3, c[0x0][0x28c], R5 ;
 Instr 890 @ 0x37a0 (14240) - IMAD R30, R5.reuse, c[0x0][0x3b8], R30 ;
 Instr 891 @ 0x37b0 (14256) - IMAD R26, R5.reuse, c[0x0][0x3bc], R26 ;
 Instr 892 @ 0x37c0 (14272) - IMAD R27, R5, c[0x0][0x3c0], R27 ;
Basic block id 83 - num instructions 6
 Instr 893 @ 0x37d0 (14288) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
 Instr 894 @ 0x37e0 (14304) - CS2R R22, SRZ ;
 Instr 895 @ 0x37f0 (14320) - IADD3 R30, P1, R30, c[0x0][0x3c8], RZ ;
 Instr 896 @ 0x3800 (14336) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x3dc], PT, P0 ;
 Instr 897 @ 0x3810 (14352) - IADD3.X R31, RZ, c[0x0][0x3cc], RZ, P1, !PT ;
 Instr 898 @ 0x3820 (14368) - @!P0 BRA 0x4e10 ;
Basic block id 84 - num instructions 10
 Instr 899 @ 0x3830 (14384) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x3d8] ;
 Instr 900 @ 0x3840 (14400) - MOV R16, c[0x0][0x3dc] ;
 Instr 901 @ 0x3850 (14416) - CS2R R22, SRZ ;
 Instr 902 @ 0x3860 (14432) - IMAD.MOV.U32 R25, RZ, RZ, RZ ;
 Instr 903 @ 0x3870 (14448) - IADD3 R0, P1, R2.reuse, -0x1, RZ ;
 Instr 904 @ 0x3880 (14464) - LOP3.LUT R2, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 905 @ 0x3890 (14480) - ISETP.GE.U32.AND P0, PT, R0, 0x3, PT ;
 Instr 906 @ 0x38a0 (14496) - IADD3.X R0, R16, -0x1, RZ, P1, !PT ;
 Instr 907 @ 0x38b0 (14512) - ISETP.GE.U32.AND.EX P0, PT, R0, RZ, PT, P0 ;
 Instr 908 @ 0x38c0 (14528) - @!P0 BRA 0x4510 ;
Basic block id 85 - num instructions 4
 Instr 909 @ 0x38d0 (14544) - IADD3 R18, P0, -R2, c[0x0][0x3d8], RZ ;
 Instr 910 @ 0x38e0 (14560) - BMOV.32.CLEAR RZ, B7 ;
 Instr 911 @ 0x38f0 (14576) - BSSY B7, 0x4510 ;
 Instr 912 @ 0x3900 (14592) - IADD3.X R16, R16, -0x1, RZ, P0, !PT ;
Basic block id 86 - num instructions 17
 Instr 913 @ 0x3910 (14608) - MOV R24, 0x8 ;
 Instr 914 @ 0x3920 (14624) - IMAD R24, R25, R24, c[0x2][0x0] ;
 Instr 915 @ 0x3930 (14640) - LDC.64 R4, c[0x0][R24+0x3d8] ;
 Instr 916 @ 0x3940 (14656) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 917 @ 0x3950 (14672) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 918 @ 0x3960 (14688) - LDG.E.64.SYS R28, [R6] ;
 Instr 919 @ 0x3970 (14704) - LDC.64 R4, c[0x0][R24+0x4a0] ;
 Instr 920 @ 0x3980 (14720) - BMOV.32.CLEAR RZ, B6 ;
 Instr 921 @ 0x3990 (14736) - BSSY B6, 0x3b50 ;
 Instr 922 @ 0x39a0 (14752) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 923 @ 0x39b0 (14768) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 924 @ 0x39c0 (14784) - ISETP.GE.U32.AND P0, PT, R28.reuse, R4, PT ;
 Instr 925 @ 0x39d0 (14800) - IMAD.MOV.U32 R19, RZ, RZ, R29 ;
 Instr 926 @ 0x39e0 (14816) - ISETP.GE.U32.AND P1, PT, R28, R0, PT ;
 Instr 927 @ 0x39f0 (14832) - ISETP.GE.AND.EX P0, PT, R29.reuse, R5, PT, P0 ;
 Instr 928 @ 0x3a00 (14848) - ISETP.GE.AND.EX P1, PT, R29, R3, PT, P1 ;
 Instr 929 @ 0x3a10 (14864) - @!P0 BRA P1, 0x3b40 ;
Basic block id 87 - num instructions 18
 Instr 930 @ 0x3a20 (14880) - UMOV UR4, 0xd99fbf00 ;
 Instr 931 @ 0x3a30 (14896) - MOV R8, 0x5d ;
 Instr 932 @ 0x3a40 (14912) - UMOV UR5, 0x7f88 ;
 Instr 933 @ 0x3a50 (14928) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 934 @ 0x3a60 (14944) - UMOV UR6, 0xd99fbe00 ;
 Instr 935 @ 0x3a70 (14960) - MOV R13, RZ ;
 Instr 936 @ 0x3a80 (14976) - UMOV UR7, 0x7f88 ;
 Instr 937 @ 0x3a90 (14992) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 938 @ 0x3aa0 (15008) - UMOV UR8, 0xd99f4600 ;
 Instr 939 @ 0x3ab0 (15024) - MOV R5, UR5 ;
 Instr 940 @ 0x3ac0 (15040) - UMOV UR9, 0x7f88 ;
 Instr 941 @ 0x3ad0 (15056) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 942 @ 0x3ae0 (15072) - MOV R7, UR7 ;
 Instr 943 @ 0x3af0 (15088) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 944 @ 0x3b00 (15104) - MOV R11, UR9 ;
 Instr 945 @ 0x3b10 (15120) - MOV R20, 0xae50b40 ;
 Instr 946 @ 0x3b20 (15136) - MOV R21, 0x7f89 ;
 Instr 947 @ 0x3b30 (15152) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 88 - num instructions 18
 Instr 948 @ 0x3b40 (15168) - BSYNC B6 ;
 Instr 949 @ 0x3b50 (15184) - LDC.64 R4, c[0x0][R24+0x3e0] ;
 Instr 950 @ 0x3b60 (15200) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 951 @ 0x3b70 (15216) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 952 @ 0x3b80 (15232) - LDG.E.64.SYS R36, [R8] ;
 Instr 953 @ 0x3b90 (15248) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 954 @ 0x3ba0 (15264) - LDC.64 R6, c[0x0][R24+0x4a8] ;
 Instr 955 @ 0x3bb0 (15280) - BMOV.32.CLEAR RZ, B6 ;
 Instr 956 @ 0x3bc0 (15296) - BSSY B6, 0x3e10 ;
 Instr 957 @ 0x3bd0 (15312) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 958 @ 0x3be0 (15328) - LDC.64 R4, c[0x0][R24+0x568] ;
 Instr 959 @ 0x3bf0 (15344) - @!P0 LDC.64 R10, c[0x0][R24+0x4a0] ;
 Instr 960 @ 0x3c00 (15360) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 961 @ 0x3c10 (15376) - IMAD.X R3, RZ, RZ, ~R7, P1 ;
 Instr 962 @ 0x3c20 (15392) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 963 @ 0x3c30 (15408) - @!P0 IADD3.X R19, R11, R19, RZ, P2, !PT ;
 Instr 964 @ 0x3c40 (15424) - ISETP.GE.U32.AND P0, PT, R36, R0, PT ;
 Instr 965 @ 0x3c50 (15440) - IMAD R0, R5, R28, RZ ;
Basic block id 89 - num instructions 8
 Instr 966 @ 0x3c60 (15456) - ISETP.GE.U32.AND P2, PT, R36, R6, PT ;
 Instr 967 @ 0x3c70 (15472) - IMAD.WIDE.U32 R28, R4.reuse, R28, R22 ;
 Instr 968 @ 0x3c80 (15488) - ISETP.GE.AND.EX P0, PT, R37.reuse, R3, PT, P0 ;
 Instr 969 @ 0x3c90 (15504) - ISETP.GE.AND.EX P1, PT, R37, R7, PT, P2 ;
 Instr 970 @ 0x3ca0 (15520) - IMAD R23, R4, R19, R0 ;
 Instr 971 @ 0x3cb0 (15536) - MOV R19, R37 ;
 Instr 972 @ 0x3cc0 (15552) - IMAD.IADD R23, R29, 0x1, R23 ;
 Instr 973 @ 0x3cd0 (15568) - @!P1 BRA P0, 0x3e00 ;
Basic block id 90 - num instructions 18
 Instr 974 @ 0x3ce0 (15584) - UMOV UR4, 0xd99fbf00 ;
 Instr 975 @ 0x3cf0 (15600) - MOV R8, 0x5d ;
 Instr 976 @ 0x3d00 (15616) - UMOV UR5, 0x7f88 ;
 Instr 977 @ 0x3d10 (15632) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 978 @ 0x3d20 (15648) - UMOV UR6, 0xd99fbe00 ;
 Instr 979 @ 0x3d30 (15664) - MOV R13, RZ ;
 Instr 980 @ 0x3d40 (15680) - UMOV UR7, 0x7f88 ;
 Instr 981 @ 0x3d50 (15696) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 982 @ 0x3d60 (15712) - UMOV UR8, 0xd99f4600 ;
 Instr 983 @ 0x3d70 (15728) - MOV R5, UR5 ;
 Instr 984 @ 0x3d80 (15744) - UMOV UR9, 0x7f88 ;
 Instr 985 @ 0x3d90 (15760) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 986 @ 0x3da0 (15776) - MOV R7, UR7 ;
 Instr 987 @ 0x3db0 (15792) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 988 @ 0x3dc0 (15808) - MOV R11, UR9 ;
 Instr 989 @ 0x3dd0 (15824) - MOV R20, 0xae50e00 ;
 Instr 990 @ 0x3de0 (15840) - MOV R21, 0x7f89 ;
 Instr 991 @ 0x3df0 (15856) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 91 - num instructions 20
 Instr 992 @ 0x3e00 (15872) - BSYNC B6 ;
 Instr 993 @ 0x3e10 (15888) - LDC.64 R4, c[0x0][R24+0x3e8] ;
 Instr 994 @ 0x3e20 (15904) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 995 @ 0x3e30 (15920) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 996 @ 0x3e40 (15936) - LDG.E.64.SYS R8, [R8] ;
 Instr 997 @ 0x3e50 (15952) - ISETP.GT.U32.AND P0, PT, R36, -0x1, PT ;
 Instr 998 @ 0x3e60 (15968) - LDC.64 R6, c[0x0][R24+0x4b0] ;
 Instr 999 @ 0x3e70 (15984) - MOV R22, R28 ;
 Instr 1000 @ 0x3e80 (16000) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1001 @ 0x3e90 (16016) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 1002 @ 0x3ea0 (16032) - BSSY B6, 0x40f0 ;
 Instr 1003 @ 0x3eb0 (16048) - LDC.64 R4, c[0x0][R24+0x570] ;
 Instr 1004 @ 0x3ec0 (16064) - @!P0 LDC.64 R10, c[0x0][R24+0x4a8] ;
 Instr 1005 @ 0x3ed0 (16080) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 1006 @ 0x3ee0 (16096) - IADD3.X R3, RZ, ~R7, RZ, P1, !PT ;
 Instr 1007 @ 0x3ef0 (16112) - @!P0 IADD3 R36, P2, R10, R36, RZ ;
 Instr 1008 @ 0x3f00 (16128) - @!P0 IMAD.X R19, R11, 0x1, R19, P2 ;
 Instr 1009 @ 0x3f10 (16144) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 1010 @ 0x3f20 (16160) - IMAD R0, R5, R36, RZ ;
 Instr 1011 @ 0x3f30 (16176) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 92 - num instructions 8
 Instr 1012 @ 0x3f40 (16192) - IMAD.WIDE.U32 R36, R4.reuse, R36, R22 ;
 Instr 1013 @ 0x3f50 (16208) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 1014 @ 0x3f60 (16224) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 1015 @ 0x3f70 (16240) - IMAD R23, R4, R19, R0 ;
 Instr 1016 @ 0x3f80 (16256) - MOV R19, R9 ;
 Instr 1017 @ 0x3f90 (16272) - IMAD.MOV.U32 R28, RZ, RZ, R8 ;
 Instr 1018 @ 0x3fa0 (16288) - IMAD.IADD R23, R37, 0x1, R23 ;
 Instr 1019 @ 0x3fb0 (16304) - @!P1 BRA P0, 0x40e0 ;
Basic block id 93 - num instructions 18
 Instr 1020 @ 0x3fc0 (16320) - UMOV UR4, 0xd99fbf00 ;
 Instr 1021 @ 0x3fd0 (16336) - MOV R8, 0x5d ;
 Instr 1022 @ 0x3fe0 (16352) - UMOV UR5, 0x7f88 ;
 Instr 1023 @ 0x3ff0 (16368) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1024 @ 0x4000 (16384) - UMOV UR6, 0xd99fbe00 ;
 Instr 1025 @ 0x4010 (16400) - MOV R13, RZ ;
 Instr 1026 @ 0x4020 (16416) - UMOV UR7, 0x7f88 ;
 Instr 1027 @ 0x4030 (16432) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1028 @ 0x4040 (16448) - UMOV UR8, 0xd99f4600 ;
 Instr 1029 @ 0x4050 (16464) - MOV R5, UR5 ;
 Instr 1030 @ 0x4060 (16480) - UMOV UR9, 0x7f88 ;
 Instr 1031 @ 0x4070 (16496) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1032 @ 0x4080 (16512) - MOV R7, UR7 ;
 Instr 1033 @ 0x4090 (16528) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1034 @ 0x40a0 (16544) - MOV R11, UR9 ;
 Instr 1035 @ 0x40b0 (16560) - MOV R20, 0xae510e0 ;
 Instr 1036 @ 0x40c0 (16576) - MOV R21, 0x7f89 ;
 Instr 1037 @ 0x40d0 (16592) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 94 - num instructions 20
 Instr 1038 @ 0x40e0 (16608) - BSYNC B6 ;
 Instr 1039 @ 0x40f0 (16624) - LDC.64 R4, c[0x0][R24+0x3f0] ;
 Instr 1040 @ 0x4100 (16640) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 1041 @ 0x4110 (16656) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 1042 @ 0x4120 (16672) - LDG.E.64.SYS R8, [R8] ;
 Instr 1043 @ 0x4130 (16688) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 1044 @ 0x4140 (16704) - LDC.64 R6, c[0x0][R24+0x4b8] ;
 Instr 1045 @ 0x4150 (16720) - MOV R22, R36 ;
 Instr 1046 @ 0x4160 (16736) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1047 @ 0x4170 (16752) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 1048 @ 0x4180 (16768) - BSSY B6, 0x43d0 ;
 Instr 1049 @ 0x4190 (16784) - LDC.64 R4, c[0x0][R24+0x578] ;
 Instr 1050 @ 0x41a0 (16800) - @!P0 LDC.64 R10, c[0x0][R24+0x4b0] ;
 Instr 1051 @ 0x41b0 (16816) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 1052 @ 0x41c0 (16832) - IADD3.X R3, RZ, ~R7, RZ, P1, !PT ;
 Instr 1053 @ 0x41d0 (16848) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 1054 @ 0x41e0 (16864) - @!P0 IMAD.X R19, R11, 0x1, R19, P2 ;
 Instr 1055 @ 0x41f0 (16880) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 1056 @ 0x4200 (16896) - IMAD R0, R5, R28, RZ ;
 Instr 1057 @ 0x4210 (16912) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 95 - num instructions 8
 Instr 1058 @ 0x4220 (16928) - IMAD.WIDE.U32 R28, R4.reuse, R28, R22 ;
 Instr 1059 @ 0x4230 (16944) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 1060 @ 0x4240 (16960) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 1061 @ 0x4250 (16976) - IMAD R19, R4, R19, R0 ;
 Instr 1062 @ 0x4260 (16992) - MOV R22, R9 ;
 Instr 1063 @ 0x4270 (17008) - IMAD.MOV.U32 R23, RZ, RZ, R8 ;
 Instr 1064 @ 0x4280 (17024) - IMAD.IADD R19, R29, 0x1, R19 ;
 Instr 1065 @ 0x4290 (17040) - @!P1 BRA P0, 0x43c0 ;
Basic block id 96 - num instructions 18
 Instr 1066 @ 0x42a0 (17056) - UMOV UR4, 0xd99fbf00 ;
 Instr 1067 @ 0x42b0 (17072) - MOV R8, 0x5d ;
 Instr 1068 @ 0x42c0 (17088) - UMOV UR5, 0x7f88 ;
 Instr 1069 @ 0x42d0 (17104) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1070 @ 0x42e0 (17120) - UMOV UR6, 0xd99fbe00 ;
 Instr 1071 @ 0x42f0 (17136) - MOV R13, RZ ;
 Instr 1072 @ 0x4300 (17152) - UMOV UR7, 0x7f88 ;
 Instr 1073 @ 0x4310 (17168) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1074 @ 0x4320 (17184) - UMOV UR8, 0xd99f4600 ;
 Instr 1075 @ 0x4330 (17200) - MOV R5, UR5 ;
 Instr 1076 @ 0x4340 (17216) - UMOV UR9, 0x7f88 ;
 Instr 1077 @ 0x4350 (17232) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1078 @ 0x4360 (17248) - MOV R7, UR7 ;
 Instr 1079 @ 0x4370 (17264) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1080 @ 0x4380 (17280) - MOV R11, UR9 ;
 Instr 1081 @ 0x4390 (17296) - MOV R20, 0xae513c0 ;
 Instr 1082 @ 0x43a0 (17312) - MOV R21, 0x7f89 ;
 Instr 1083 @ 0x43b0 (17328) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 97 - num instructions 20
 Instr 1084 @ 0x43c0 (17344) - BSYNC B6 ;
 Instr 1085 @ 0x43d0 (17360) - ISETP.GT.U32.AND P0, PT, R23, -0x1, PT ;
 Instr 1086 @ 0x43e0 (17376) - LDC.64 R4, c[0x0][R24+0x580] ;
 Instr 1087 @ 0x43f0 (17392) - IADD3 R18, P2, R18, -0x4, RZ ;
 Instr 1088 @ 0x4400 (17408) - IMAD.MOV.U32 R6, RZ, RZ, R28 ;
 Instr 1089 @ 0x4410 (17424) - ISETP.GT.AND.EX P0, PT, R22, -0x1, PT, P0 ;
 Instr 1090 @ 0x4420 (17440) - IADD3.X R16, R16, -0x1, RZ, P2, !PT ;
 Instr 1091 @ 0x4430 (17456) - MOV R7, R19 ;
 Instr 1092 @ 0x4440 (17472) - IADD3 R25, R25, 0x4, RZ ;
 Instr 1093 @ 0x4450 (17488) - @!P0 LDC.64 R8, c[0x0][R24+0x4b8] ;
 Instr 1094 @ 0x4460 (17504) - @!P0 IADD3 R23, P1, R8, R23, RZ ;
 Instr 1095 @ 0x4470 (17520) - @!P0 IMAD.X R22, R9, 0x1, R22, P1 ;
 Instr 1096 @ 0x4480 (17536) - ISETP.NE.U32.AND P0, PT, R18, RZ, PT ;
 Instr 1097 @ 0x4490 (17552) - IMAD R3, R5, R23.reuse, RZ ;
 Instr 1098 @ 0x44a0 (17568) - IMAD.WIDE.U32 R6, R4, R23, R6 ;
 Instr 1099 @ 0x44b0 (17584) - ISETP.NE.AND.EX P0, PT, R16, RZ, PT, P0 ;
 Instr 1100 @ 0x44c0 (17600) - IMAD R3, R4, R22, R3 ;
 Instr 1101 @ 0x44d0 (17616) - MOV R22, R6 ;
 Instr 1102 @ 0x44e0 (17632) - IMAD.IADD R23, R7, 0x1, R3 ;
 Instr 1103 @ 0x44f0 (17648) - @P0 BRA 0x3910 ;
Basic block id 98 - num instructions 1
 Instr 1104 @ 0x4500 (17664) - BSYNC B7 ;
Basic block id 99 - num instructions 3
 Instr 1105 @ 0x4510 (17680) - ISETP.NE.U32.AND P0, PT, R2, RZ, PT ;
 Instr 1106 @ 0x4520 (17696) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 1107 @ 0x4530 (17712) - @!P0 BRA 0x4e10 ;
Basic block id 100 - num instructions 17
 Instr 1108 @ 0x4540 (17728) - MOV R0, 0x8 ;
 Instr 1109 @ 0x4550 (17744) - IMAD R25, R25, R0, c[0x2][0x0] ;
 Instr 1110 @ 0x4560 (17760) - LDC.64 R4, c[0x0][R25+0x3d8] ;
 Instr 1111 @ 0x4570 (17776) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 1112 @ 0x4580 (17792) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 1113 @ 0x4590 (17808) - LDG.E.64.SYS R18, [R6] ;
 Instr 1114 @ 0x45a0 (17824) - LDC.64 R4, c[0x0][R25+0x4a0] ;
 Instr 1115 @ 0x45b0 (17840) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1116 @ 0x45c0 (17856) - BSSY B6, 0x4780 ;
 Instr 1117 @ 0x45d0 (17872) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 1118 @ 0x45e0 (17888) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 1119 @ 0x45f0 (17904) - ISETP.GE.U32.AND P0, PT, R18.reuse, R4, PT ;
 Instr 1120 @ 0x4600 (17920) - IMAD.MOV.U32 R16, RZ, RZ, R19 ;
 Instr 1121 @ 0x4610 (17936) - ISETP.GE.U32.AND P1, PT, R18, R0, PT ;
 Instr 1122 @ 0x4620 (17952) - ISETP.GE.AND.EX P0, PT, R19.reuse, R5, PT, P0 ;
 Instr 1123 @ 0x4630 (17968) - ISETP.GE.AND.EX P1, PT, R19, R3, PT, P1 ;
 Instr 1124 @ 0x4640 (17984) - @!P0 BRA P1, 0x4770 ;
Basic block id 101 - num instructions 18
 Instr 1125 @ 0x4650 (18000) - UMOV UR4, 0xd99fbf00 ;
 Instr 1126 @ 0x4660 (18016) - MOV R8, 0x5d ;
 Instr 1127 @ 0x4670 (18032) - UMOV UR5, 0x7f88 ;
 Instr 1128 @ 0x4680 (18048) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1129 @ 0x4690 (18064) - UMOV UR6, 0xd99fbe00 ;
 Instr 1130 @ 0x46a0 (18080) - MOV R13, RZ ;
 Instr 1131 @ 0x46b0 (18096) - UMOV UR7, 0x7f88 ;
 Instr 1132 @ 0x46c0 (18112) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1133 @ 0x46d0 (18128) - UMOV UR8, 0xd99f4600 ;
 Instr 1134 @ 0x46e0 (18144) - MOV R5, UR5 ;
 Instr 1135 @ 0x46f0 (18160) - UMOV UR9, 0x7f88 ;
 Instr 1136 @ 0x4700 (18176) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1137 @ 0x4710 (18192) - MOV R7, UR7 ;
 Instr 1138 @ 0x4720 (18208) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1139 @ 0x4730 (18224) - MOV R11, UR9 ;
 Instr 1140 @ 0x4740 (18240) - MOV R20, 0xae51770 ;
 Instr 1141 @ 0x4750 (18256) - MOV R21, 0x7f89 ;
 Instr 1142 @ 0x4760 (18272) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 102 - num instructions 14
 Instr 1143 @ 0x4770 (18288) - BSYNC B6 ;
 Instr 1144 @ 0x4780 (18304) - ISETP.GT.U32.AND P0, PT, R18, -0x1, PT ;
 Instr 1145 @ 0x4790 (18320) - LDC.64 R4, c[0x0][R25+0x568] ;
 Instr 1146 @ 0x47a0 (18336) - ISETP.GT.AND.EX P0, PT, R16, -0x1, PT, P0 ;
 Instr 1147 @ 0x47b0 (18352) - @!P0 LDC.64 R6, c[0x0][R25+0x4a0] ;
 Instr 1148 @ 0x47c0 (18368) - @!P0 IADD3 R18, P1, R6, R18, RZ ;
 Instr 1149 @ 0x47d0 (18384) - @!P0 IMAD.X R16, R7, 0x1, R16, P1 ;
 Instr 1150 @ 0x47e0 (18400) - ISETP.NE.U32.AND P0, PT, R2, 0x1, PT ;
 Instr 1151 @ 0x47f0 (18416) - IMAD R3, R5, R18.reuse, RZ ;
 Instr 1152 @ 0x4800 (18432) - IMAD.WIDE.U32 R22, R4, R18, R22 ;
 Instr 1153 @ 0x4810 (18448) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 1154 @ 0x4820 (18464) - IMAD R3, R4, R16, R3 ;
 Instr 1155 @ 0x4830 (18480) - IADD3 R23, R23, R3, RZ ;
 Instr 1156 @ 0x4840 (18496) - @!P0 BRA 0x4e10 ;
Basic block id 103 - num instructions 15
 Instr 1157 @ 0x4850 (18512) - LDC.64 R4, c[0x0][R25+0x3e0] ;
 Instr 1158 @ 0x4860 (18528) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 1159 @ 0x4870 (18544) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 1160 @ 0x4880 (18560) - LDG.E.64.SYS R18, [R6] ;
 Instr 1161 @ 0x4890 (18576) - LDC.64 R4, c[0x0][R25+0x4a8] ;
 Instr 1162 @ 0x48a0 (18592) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1163 @ 0x48b0 (18608) - BSSY B6, 0x4a70 ;
 Instr 1164 @ 0x48c0 (18624) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 1165 @ 0x48d0 (18640) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 1166 @ 0x48e0 (18656) - ISETP.GE.U32.AND P0, PT, R18.reuse, R4, PT ;
 Instr 1167 @ 0x48f0 (18672) - IMAD.MOV.U32 R16, RZ, RZ, R19 ;
 Instr 1168 @ 0x4900 (18688) - ISETP.GE.U32.AND P1, PT, R18, R0, PT ;
 Instr 1169 @ 0x4910 (18704) - ISETP.GE.AND.EX P0, PT, R19.reuse, R5, PT, P0 ;
 Instr 1170 @ 0x4920 (18720) - ISETP.GE.AND.EX P1, PT, R19, R3, PT, P1 ;
 Instr 1171 @ 0x4930 (18736) - @!P0 BRA P1, 0x4a60 ;
Basic block id 104 - num instructions 18
 Instr 1172 @ 0x4940 (18752) - UMOV UR4, 0xd99fbf00 ;
 Instr 1173 @ 0x4950 (18768) - MOV R8, 0x5d ;
 Instr 1174 @ 0x4960 (18784) - UMOV UR5, 0x7f88 ;
 Instr 1175 @ 0x4970 (18800) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1176 @ 0x4980 (18816) - UMOV UR6, 0xd99fbe00 ;
 Instr 1177 @ 0x4990 (18832) - MOV R13, RZ ;
 Instr 1178 @ 0x49a0 (18848) - UMOV UR7, 0x7f88 ;
 Instr 1179 @ 0x49b0 (18864) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1180 @ 0x49c0 (18880) - UMOV UR8, 0xd99f4600 ;
 Instr 1181 @ 0x49d0 (18896) - MOV R5, UR5 ;
 Instr 1182 @ 0x49e0 (18912) - UMOV UR9, 0x7f88 ;
 Instr 1183 @ 0x49f0 (18928) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1184 @ 0x4a00 (18944) - MOV R7, UR7 ;
 Instr 1185 @ 0x4a10 (18960) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1186 @ 0x4a20 (18976) - MOV R11, UR9 ;
 Instr 1187 @ 0x4a30 (18992) - MOV R20, 0xae51a60 ;
 Instr 1188 @ 0x4a40 (19008) - MOV R21, 0x7f89 ;
 Instr 1189 @ 0x4a50 (19024) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 105 - num instructions 14
 Instr 1190 @ 0x4a60 (19040) - BSYNC B6 ;
 Instr 1191 @ 0x4a70 (19056) - ISETP.GT.U32.AND P0, PT, R18, -0x1, PT ;
 Instr 1192 @ 0x4a80 (19072) - LDC.64 R4, c[0x0][R25+0x570] ;
 Instr 1193 @ 0x4a90 (19088) - ISETP.GT.AND.EX P0, PT, R16, -0x1, PT, P0 ;
 Instr 1194 @ 0x4aa0 (19104) - @!P0 LDC.64 R6, c[0x0][R25+0x4a8] ;
 Instr 1195 @ 0x4ab0 (19120) - @!P0 IADD3 R18, P1, R6, R18, RZ ;
 Instr 1196 @ 0x4ac0 (19136) - @!P0 IMAD.X R16, R7, 0x1, R16, P1 ;
 Instr 1197 @ 0x4ad0 (19152) - ISETP.NE.U32.AND P0, PT, R2, 0x2, PT ;
 Instr 1198 @ 0x4ae0 (19168) - IMAD R3, R5, R18.reuse, RZ ;
 Instr 1199 @ 0x4af0 (19184) - IMAD.WIDE.U32 R22, R4, R18, R22 ;
 Instr 1200 @ 0x4b00 (19200) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 1201 @ 0x4b10 (19216) - IMAD R3, R4, R16, R3 ;
 Instr 1202 @ 0x4b20 (19232) - IADD3 R23, R23, R3, RZ ;
 Instr 1203 @ 0x4b30 (19248) - @!P0 BRA 0x4e10 ;
Basic block id 106 - num instructions 14
 Instr 1204 @ 0x4b40 (19264) - LDC.64 R2, c[0x0][R25+0x3e8] ;
 Instr 1205 @ 0x4b50 (19280) - IADD3 R4, P0, R2, R27, RZ ;
 Instr 1206 @ 0x4b60 (19296) - IMAD.X R5, RZ, RZ, R3, P0 ;
 Instr 1207 @ 0x4b70 (19312) - LDG.E.64.SYS R4, [R4] ;
 Instr 1208 @ 0x4b80 (19328) - LDC.64 R2, c[0x0][R25+0x4b0] ;
 Instr 1209 @ 0x4b90 (19344) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1210 @ 0x4ba0 (19360) - BSSY B6, 0x4d70 ;
 Instr 1211 @ 0x4bb0 (19376) - IADD3 R0, P0, RZ, -R2, RZ ;
 Instr 1212 @ 0x4bc0 (19392) - IADD3.X R6, RZ, ~R3.reuse, RZ, P0, !PT ;
 Instr 1213 @ 0x4bd0 (19408) - ISETP.GE.U32.AND P0, PT, R4.reuse, R2, PT ;
 Instr 1214 @ 0x4be0 (19424) - IMAD.MOV.U32 R16, RZ, RZ, R4 ;
 Instr 1215 @ 0x4bf0 (19440) - ISETP.GE.U32.AND P1, PT, R4, R0, PT ;
 Instr 1216 @ 0x4c00 (19456) - ISETP.GE.AND.EX P0, PT, R5.reuse, R3, PT, P0 ;
 Instr 1217 @ 0x4c10 (19472) - ISETP.GE.AND.EX P1, PT, R5, R6, PT, P1 ;
Basic block id 107 - num instructions 2
 Instr 1218 @ 0x4c20 (19488) - MOV R2, R5 ;
 Instr 1219 @ 0x4c30 (19504) - @!P0 BRA P1, 0x4d60 ;
Basic block id 108 - num instructions 18
 Instr 1220 @ 0x4c40 (19520) - UMOV UR4, 0xd99fbf00 ;
 Instr 1221 @ 0x4c50 (19536) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 1222 @ 0x4c60 (19552) - UMOV UR5, 0x7f88 ;
 Instr 1223 @ 0x4c70 (19568) - MOV R12, 0x1 ;
 Instr 1224 @ 0x4c80 (19584) - UMOV UR6, 0xd99fbe00 ;
 Instr 1225 @ 0x4c90 (19600) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1226 @ 0x4ca0 (19616) - UMOV UR7, 0x7f88 ;
 Instr 1227 @ 0x4cb0 (19632) - MOV R4, UR4 ;
 Instr 1228 @ 0x4cc0 (19648) - UMOV UR8, 0xd99f4600 ;
 Instr 1229 @ 0x4cd0 (19664) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1230 @ 0x4ce0 (19680) - UMOV UR9, 0x7f88 ;
 Instr 1231 @ 0x4cf0 (19696) - MOV R6, UR6 ;
 Instr 1232 @ 0x4d00 (19712) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1233 @ 0x4d10 (19728) - MOV R10, UR8 ;
 Instr 1234 @ 0x4d20 (19744) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1235 @ 0x4d30 (19760) - MOV R20, 0xae51d60 ;
 Instr 1236 @ 0x4d40 (19776) - MOV R21, 0x7f89 ;
 Instr 1237 @ 0x4d50 (19792) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 109 - num instructions 11
 Instr 1238 @ 0x4d60 (19808) - BSYNC B6 ;
 Instr 1239 @ 0x4d70 (19824) - ISETP.GT.U32.AND P0, PT, R16, -0x1, PT ;
 Instr 1240 @ 0x4d80 (19840) - LDC.64 R4, c[0x0][R25+0x578] ;
 Instr 1241 @ 0x4d90 (19856) - ISETP.GT.AND.EX P0, PT, R2, -0x1, PT, P0 ;
 Instr 1242 @ 0x4da0 (19872) - @!P0 LDC.64 R6, c[0x0][R25+0x4b0] ;
 Instr 1243 @ 0x4db0 (19888) - @!P0 IADD3 R16, P1, R6, R16, RZ ;
 Instr 1244 @ 0x4dc0 (19904) - @!P0 IADD3.X R2, R7, R2, RZ, P1, !PT ;
 Instr 1245 @ 0x4dd0 (19920) - IMAD R3, R5, R16.reuse, RZ ;
 Instr 1246 @ 0x4de0 (19936) - IMAD.WIDE.U32 R22, R4, R16, R22 ;
 Instr 1247 @ 0x4df0 (19952) - IMAD R3, R4, R2, R3 ;
 Instr 1248 @ 0x4e00 (19968) - IMAD.IADD R23, R23, 0x1, R3 ;
Basic block id 110 - num instructions 8
 Instr 1249 @ 0x4e10 (19984) - IADD3 R22, P0, P1, R22, c[0x0][0x3d0], R26 ;
 Instr 1250 @ 0x4e20 (20000) - IADD3.X R23, R23, c[0x0][0x3d4], RZ, P0, P1 ;
 Instr 1251 @ 0x4e30 (20016) - LDG.E.U16.SYS R22, [R22] ;
 Instr 1252 @ 0x4e40 (20032) - IADD3 R17, R17, 0x80, RZ ;
 Instr 1253 @ 0x4e50 (20048) - MOV R2, R17 ;
 Instr 1254 @ 0x4e60 (20064) - PRMT R3, R22, 0x7710, RZ ;
 Instr 1255 @ 0x4e70 (20080) - STG.E.U16.SYS [R30], R3 ;
 Instr 1256 @ 0x4e80 (20096) - IMAD.MOV.U32 R3, RZ, RZ, RZ ;
Basic block id 111 - num instructions 6
 Instr 1257 @ 0x4e90 (20112) - BSYNC B8 ;
 Instr 1258 @ 0x4ea0 (20128) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x160], PT ;
 Instr 1259 @ 0x4eb0 (20144) - BMOV.32.CLEAR RZ, B8 ;
 Instr 1260 @ 0x4ec0 (20160) - BSSY B8, 0x75a0 ;
 Instr 1261 @ 0x4ed0 (20176) - ISETP.GE.AND.EX P0, PT, R3, c[0x0][0x164], PT, P0 ;
 Instr 1262 @ 0x4ee0 (20192) - @P0 BRA 0x7590 ;
Basic block id 112 - num instructions 4
 Instr 1263 @ 0x4ef0 (20208) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
 Instr 1264 @ 0x4f00 (20224) - CS2R R26, SRZ ;
 Instr 1265 @ 0x4f10 (20240) - MOV R30, RZ ;
 Instr 1266 @ 0x4f20 (20256) - @!P0 BRA 0x5ed0 ;
Basic block id 113 - num instructions 11
 Instr 1267 @ 0x4f30 (20272) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1268 @ 0x4f40 (20288) - IMAD.MOV.U32 R4, RZ, RZ, 0x1 ;
 Instr 1269 @ 0x4f50 (20304) - IMAD.HI.U32 R2, R17, c[0x0][0x170], R16 ;
 Instr 1270 @ 0x4f60 (20320) - ISETP.NE.AND P0, PT, R4, c[0x0][0x168], PT ;
 Instr 1271 @ 0x4f70 (20336) - SHF.R.U32.HI R3, RZ, c[0x0][0x174], R2 ;
 Instr 1272 @ 0x4f80 (20352) - IADD3 R0, -R3, RZ, RZ ;
 Instr 1273 @ 0x4f90 (20368) - IMAD R27, R0, c[0x0][0x16c], R17 ;
 Instr 1274 @ 0x4fa0 (20384) - IMAD R30, R27.reuse, c[0x0][0x298], RZ ;
 Instr 1275 @ 0x4fb0 (20400) - IMAD R26, R27.reuse, c[0x0][0x29c], RZ ;
 Instr 1276 @ 0x4fc0 (20416) - IMAD R27, R27, c[0x0][0x2a0], RZ ;
 Instr 1277 @ 0x4fd0 (20432) - @!P0 BRA 0x5ed0 ;
Basic block id 114 - num instructions 11
 Instr 1278 @ 0x4fe0 (20448) - MOV R2, RZ ;
 Instr 1279 @ 0x4ff0 (20464) - MOV R0, c[0x0][0x168] ;
 Instr 1280 @ 0x5000 (20480) - IMAD.HI.U32 R4, R3, c[0x0][0x17c], R2 ;
 Instr 1281 @ 0x5010 (20496) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1282 @ 0x5020 (20512) - SHF.R.U32.HI R5, RZ, c[0x0][0x180], R4 ;
 Instr 1283 @ 0x5030 (20528) - IMAD.MOV R2, RZ, RZ, -R5 ;
 Instr 1284 @ 0x5040 (20544) - IMAD R3, R2, c[0x0][0x178], R3 ;
 Instr 1285 @ 0x5050 (20560) - IMAD R30, R3.reuse, c[0x0][0x2a4], R30 ;
 Instr 1286 @ 0x5060 (20576) - IMAD R26, R3.reuse, c[0x0][0x2a8], R26 ;
 Instr 1287 @ 0x5070 (20592) - IMAD R27, R3, c[0x0][0x2ac], R27 ;
 Instr 1288 @ 0x5080 (20608) - @!P0 BRA 0x5ed0 ;
Basic block id 115 - num instructions 10
 Instr 1289 @ 0x5090 (20624) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1290 @ 0x50a0 (20640) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1291 @ 0x50b0 (20656) - IMAD.HI.U32 R2, R5, c[0x0][0x188], R4 ;
 Instr 1292 @ 0x50c0 (20672) - SHF.R.U32.HI R3, RZ, c[0x0][0x18c], R2 ;
 Instr 1293 @ 0x50d0 (20688) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1294 @ 0x50e0 (20704) - IMAD R5, R4, c[0x0][0x184], R5 ;
 Instr 1295 @ 0x50f0 (20720) - IMAD R30, R5.reuse, c[0x0][0x2b0], R30 ;
 Instr 1296 @ 0x5100 (20736) - IMAD R26, R5.reuse, c[0x0][0x2b4], R26 ;
 Instr 1297 @ 0x5110 (20752) - IMAD R27, R5, c[0x0][0x2b8], R27 ;
 Instr 1298 @ 0x5120 (20768) - @!P0 BRA 0x5ed0 ;
Basic block id 116 - num instructions 10
 Instr 1299 @ 0x5130 (20784) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1300 @ 0x5140 (20800) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1301 @ 0x5150 (20816) - IMAD.HI.U32 R4, R3, c[0x0][0x194], R2 ;
 Instr 1302 @ 0x5160 (20832) - SHF.R.U32.HI R5, RZ, c[0x0][0x198], R4 ;
 Instr 1303 @ 0x5170 (20848) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1304 @ 0x5180 (20864) - IMAD R3, R2, c[0x0][0x190], R3 ;
 Instr 1305 @ 0x5190 (20880) - IMAD R30, R3.reuse, c[0x0][0x2bc], R30 ;
 Instr 1306 @ 0x51a0 (20896) - IMAD R26, R3.reuse, c[0x0][0x2c0], R26 ;
 Instr 1307 @ 0x51b0 (20912) - IMAD R27, R3, c[0x0][0x2c4], R27 ;
 Instr 1308 @ 0x51c0 (20928) - @!P0 BRA 0x5ed0 ;
Basic block id 117 - num instructions 10
 Instr 1309 @ 0x51d0 (20944) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1310 @ 0x51e0 (20960) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1311 @ 0x51f0 (20976) - IMAD.HI.U32 R2, R5, c[0x0][0x1a0], R4 ;
 Instr 1312 @ 0x5200 (20992) - SHF.R.U32.HI R3, RZ, c[0x0][0x1a4], R2 ;
 Instr 1313 @ 0x5210 (21008) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1314 @ 0x5220 (21024) - IMAD R5, R4, c[0x0][0x19c], R5 ;
 Instr 1315 @ 0x5230 (21040) - IMAD R30, R5.reuse, c[0x0][0x2c8], R30 ;
 Instr 1316 @ 0x5240 (21056) - IMAD R26, R5.reuse, c[0x0][0x2cc], R26 ;
 Instr 1317 @ 0x5250 (21072) - IMAD R27, R5, c[0x0][0x2d0], R27 ;
 Instr 1318 @ 0x5260 (21088) - @!P0 BRA 0x5ed0 ;
Basic block id 118 - num instructions 10
 Instr 1319 @ 0x5270 (21104) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1320 @ 0x5280 (21120) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1321 @ 0x5290 (21136) - IMAD.HI.U32 R4, R3, c[0x0][0x1ac], R2 ;
 Instr 1322 @ 0x52a0 (21152) - SHF.R.U32.HI R5, RZ, c[0x0][0x1b0], R4 ;
 Instr 1323 @ 0x52b0 (21168) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1324 @ 0x52c0 (21184) - IMAD R3, R2, c[0x0][0x1a8], R3 ;
 Instr 1325 @ 0x52d0 (21200) - IMAD R30, R3.reuse, c[0x0][0x2d4], R30 ;
 Instr 1326 @ 0x52e0 (21216) - IMAD R26, R3.reuse, c[0x0][0x2d8], R26 ;
 Instr 1327 @ 0x52f0 (21232) - IMAD R27, R3, c[0x0][0x2dc], R27 ;
 Instr 1328 @ 0x5300 (21248) - @!P0 BRA 0x5ed0 ;
Basic block id 119 - num instructions 10
 Instr 1329 @ 0x5310 (21264) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1330 @ 0x5320 (21280) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1331 @ 0x5330 (21296) - IMAD.HI.U32 R2, R5, c[0x0][0x1b8], R4 ;
 Instr 1332 @ 0x5340 (21312) - SHF.R.U32.HI R3, RZ, c[0x0][0x1bc], R2 ;
 Instr 1333 @ 0x5350 (21328) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1334 @ 0x5360 (21344) - IMAD R5, R4, c[0x0][0x1b4], R5 ;
 Instr 1335 @ 0x5370 (21360) - IMAD R30, R5.reuse, c[0x0][0x2e0], R30 ;
 Instr 1336 @ 0x5380 (21376) - IMAD R26, R5.reuse, c[0x0][0x2e4], R26 ;
 Instr 1337 @ 0x5390 (21392) - IMAD R27, R5, c[0x0][0x2e8], R27 ;
 Instr 1338 @ 0x53a0 (21408) - @!P0 BRA 0x5ed0 ;
Basic block id 120 - num instructions 10
 Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1340 @ 0x53c0 (21440) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1341 @ 0x53d0 (21456) - IMAD.HI.U32 R4, R3, c[0x0][0x1c4], R2 ;
 Instr 1342 @ 0x53e0 (21472) - SHF.R.U32.HI R5, RZ, c[0x0][0x1c8], R4 ;
 Instr 1343 @ 0x53f0 (21488) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1344 @ 0x5400 (21504) - IMAD R3, R2, c[0x0][0x1c0], R3 ;
 Instr 1345 @ 0x5410 (21520) - IMAD R30, R3.reuse, c[0x0][0x2ec], R30 ;
 Instr 1346 @ 0x5420 (21536) - IMAD R26, R3.reuse, c[0x0][0x2f0], R26 ;
 Instr 1347 @ 0x5430 (21552) - IMAD R27, R3, c[0x0][0x2f4], R27 ;
 Instr 1348 @ 0x5440 (21568) - @!P0 BRA 0x5ed0 ;
Basic block id 121 - num instructions 10
 Instr 1349 @ 0x5450 (21584) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1350 @ 0x5460 (21600) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1351 @ 0x5470 (21616) - IMAD.HI.U32 R2, R5, c[0x0][0x1d0], R4 ;
 Instr 1352 @ 0x5480 (21632) - SHF.R.U32.HI R3, RZ, c[0x0][0x1d4], R2 ;
 Instr 1353 @ 0x5490 (21648) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1354 @ 0x54a0 (21664) - IMAD R5, R4, c[0x0][0x1cc], R5 ;
 Instr 1355 @ 0x54b0 (21680) - IMAD R30, R5.reuse, c[0x0][0x2f8], R30 ;
 Instr 1356 @ 0x54c0 (21696) - IMAD R26, R5.reuse, c[0x0][0x2fc], R26 ;
 Instr 1357 @ 0x54d0 (21712) - IMAD R27, R5, c[0x0][0x300], R27 ;
 Instr 1358 @ 0x54e0 (21728) - @!P0 BRA 0x5ed0 ;
Basic block id 122 - num instructions 10
 Instr 1359 @ 0x54f0 (21744) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1360 @ 0x5500 (21760) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1361 @ 0x5510 (21776) - IMAD.HI.U32 R4, R3, c[0x0][0x1dc], R2 ;
 Instr 1362 @ 0x5520 (21792) - SHF.R.U32.HI R5, RZ, c[0x0][0x1e0], R4 ;
 Instr 1363 @ 0x5530 (21808) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1364 @ 0x5540 (21824) - IMAD R3, R2, c[0x0][0x1d8], R3 ;
 Instr 1365 @ 0x5550 (21840) - IMAD R30, R3.reuse, c[0x0][0x304], R30 ;
 Instr 1366 @ 0x5560 (21856) - IMAD R26, R3.reuse, c[0x0][0x308], R26 ;
 Instr 1367 @ 0x5570 (21872) - IMAD R27, R3, c[0x0][0x30c], R27 ;
 Instr 1368 @ 0x5580 (21888) - @!P0 BRA 0x5ed0 ;
Basic block id 123 - num instructions 10
 Instr 1369 @ 0x5590 (21904) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1370 @ 0x55a0 (21920) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1371 @ 0x55b0 (21936) - IMAD.HI.U32 R2, R5, c[0x0][0x1e8], R4 ;
 Instr 1372 @ 0x55c0 (21952) - SHF.R.U32.HI R3, RZ, c[0x0][0x1ec], R2 ;
 Instr 1373 @ 0x55d0 (21968) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1374 @ 0x55e0 (21984) - IMAD R5, R4, c[0x0][0x1e4], R5 ;
 Instr 1375 @ 0x55f0 (22000) - IMAD R30, R5.reuse, c[0x0][0x310], R30 ;
 Instr 1376 @ 0x5600 (22016) - IMAD R26, R5.reuse, c[0x0][0x314], R26 ;
 Instr 1377 @ 0x5610 (22032) - IMAD R27, R5, c[0x0][0x318], R27 ;
 Instr 1378 @ 0x5620 (22048) - @!P0 BRA 0x5ed0 ;
Basic block id 124 - num instructions 10
 Instr 1379 @ 0x5630 (22064) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1380 @ 0x5640 (22080) - ISETP.NE.AND P0, PT, R0, 0xc, PT ;
 Instr 1381 @ 0x5650 (22096) - IMAD.HI.U32 R4, R3, c[0x0][0x1f4], R2 ;
 Instr 1382 @ 0x5660 (22112) - SHF.R.U32.HI R5, RZ, c[0x0][0x1f8], R4 ;
 Instr 1383 @ 0x5670 (22128) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1384 @ 0x5680 (22144) - IMAD R3, R2, c[0x0][0x1f0], R3 ;
 Instr 1385 @ 0x5690 (22160) - IMAD R30, R3.reuse, c[0x0][0x31c], R30 ;
 Instr 1386 @ 0x56a0 (22176) - IMAD R26, R3.reuse, c[0x0][0x320], R26 ;
 Instr 1387 @ 0x56b0 (22192) - IMAD R27, R3, c[0x0][0x324], R27 ;
 Instr 1388 @ 0x56c0 (22208) - @!P0 BRA 0x5ed0 ;
Basic block id 125 - num instructions 10
 Instr 1389 @ 0x56d0 (22224) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1390 @ 0x56e0 (22240) - ISETP.NE.AND P0, PT, R0, 0xd, PT ;
 Instr 1391 @ 0x56f0 (22256) - IMAD.HI.U32 R2, R5, c[0x0][0x200], R4 ;
 Instr 1392 @ 0x5700 (22272) - SHF.R.U32.HI R3, RZ, c[0x0][0x204], R2 ;
 Instr 1393 @ 0x5710 (22288) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1394 @ 0x5720 (22304) - IMAD R5, R4, c[0x0][0x1fc], R5 ;
 Instr 1395 @ 0x5730 (22320) - IMAD R30, R5.reuse, c[0x0][0x328], R30 ;
 Instr 1396 @ 0x5740 (22336) - IMAD R26, R5.reuse, c[0x0][0x32c], R26 ;
 Instr 1397 @ 0x5750 (22352) - IMAD R27, R5, c[0x0][0x330], R27 ;
 Instr 1398 @ 0x5760 (22368) - @!P0 BRA 0x5ed0 ;
Basic block id 126 - num instructions 10
 Instr 1399 @ 0x5770 (22384) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1400 @ 0x5780 (22400) - ISETP.NE.AND P0, PT, R0, 0xe, PT ;
 Instr 1401 @ 0x5790 (22416) - IMAD.HI.U32 R4, R3, c[0x0][0x20c], R2 ;
 Instr 1402 @ 0x57a0 (22432) - SHF.R.U32.HI R5, RZ, c[0x0][0x210], R4 ;
 Instr 1403 @ 0x57b0 (22448) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1404 @ 0x57c0 (22464) - IMAD R3, R2, c[0x0][0x208], R3 ;
 Instr 1405 @ 0x57d0 (22480) - IMAD R30, R3.reuse, c[0x0][0x334], R30 ;
 Instr 1406 @ 0x57e0 (22496) - IMAD R26, R3.reuse, c[0x0][0x338], R26 ;
 Instr 1407 @ 0x57f0 (22512) - IMAD R27, R3, c[0x0][0x33c], R27 ;
 Instr 1408 @ 0x5800 (22528) - @!P0 BRA 0x5ed0 ;
Basic block id 127 - num instructions 10
 Instr 1409 @ 0x5810 (22544) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1410 @ 0x5820 (22560) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1411 @ 0x5830 (22576) - IMAD.HI.U32 R2, R5, c[0x0][0x218], R4 ;
 Instr 1412 @ 0x5840 (22592) - SHF.R.U32.HI R3, RZ, c[0x0][0x21c], R2 ;
 Instr 1413 @ 0x5850 (22608) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1414 @ 0x5860 (22624) - IMAD R5, R4, c[0x0][0x214], R5 ;
 Instr 1415 @ 0x5870 (22640) - IMAD R30, R5.reuse, c[0x0][0x340], R30 ;
 Instr 1416 @ 0x5880 (22656) - IMAD R26, R5.reuse, c[0x0][0x344], R26 ;
 Instr 1417 @ 0x5890 (22672) - IMAD R27, R5, c[0x0][0x348], R27 ;
 Instr 1418 @ 0x58a0 (22688) - @!P0 BRA 0x5ed0 ;
Basic block id 128 - num instructions 10
 Instr 1419 @ 0x58b0 (22704) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1420 @ 0x58c0 (22720) - ISETP.NE.AND P0, PT, R0, 0x10, PT ;
 Instr 1421 @ 0x58d0 (22736) - IMAD.HI.U32 R4, R3, c[0x0][0x224], R2 ;
 Instr 1422 @ 0x58e0 (22752) - SHF.R.U32.HI R5, RZ, c[0x0][0x228], R4 ;
 Instr 1423 @ 0x58f0 (22768) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1424 @ 0x5900 (22784) - IMAD R3, R2, c[0x0][0x220], R3 ;
 Instr 1425 @ 0x5910 (22800) - IMAD R30, R3.reuse, c[0x0][0x34c], R30 ;
 Instr 1426 @ 0x5920 (22816) - IMAD R26, R3.reuse, c[0x0][0x350], R26 ;
 Instr 1427 @ 0x5930 (22832) - IMAD R27, R3, c[0x0][0x354], R27 ;
 Instr 1428 @ 0x5940 (22848) - @!P0 BRA 0x5ed0 ;
Basic block id 129 - num instructions 10
 Instr 1429 @ 0x5950 (22864) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1430 @ 0x5960 (22880) - ISETP.NE.AND P0, PT, R0, 0x11, PT ;
 Instr 1431 @ 0x5970 (22896) - IMAD.HI.U32 R2, R5, c[0x0][0x230], R4 ;
 Instr 1432 @ 0x5980 (22912) - SHF.R.U32.HI R3, RZ, c[0x0][0x234], R2 ;
 Instr 1433 @ 0x5990 (22928) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1434 @ 0x59a0 (22944) - IMAD R5, R4, c[0x0][0x22c], R5 ;
 Instr 1435 @ 0x59b0 (22960) - IMAD R30, R5.reuse, c[0x0][0x358], R30 ;
 Instr 1436 @ 0x59c0 (22976) - IMAD R26, R5.reuse, c[0x0][0x35c], R26 ;
 Instr 1437 @ 0x59d0 (22992) - IMAD R27, R5, c[0x0][0x360], R27 ;
 Instr 1438 @ 0x59e0 (23008) - @!P0 BRA 0x5ed0 ;
Basic block id 130 - num instructions 10
 Instr 1439 @ 0x59f0 (23024) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1440 @ 0x5a00 (23040) - ISETP.NE.AND P0, PT, R0, 0x12, PT ;
 Instr 1441 @ 0x5a10 (23056) - IMAD.HI.U32 R4, R3, c[0x0][0x23c], R2 ;
 Instr 1442 @ 0x5a20 (23072) - SHF.R.U32.HI R5, RZ, c[0x0][0x240], R4 ;
 Instr 1443 @ 0x5a30 (23088) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1444 @ 0x5a40 (23104) - IMAD R3, R2, c[0x0][0x238], R3 ;
 Instr 1445 @ 0x5a50 (23120) - IMAD R30, R3.reuse, c[0x0][0x364], R30 ;
 Instr 1446 @ 0x5a60 (23136) - IMAD R26, R3.reuse, c[0x0][0x368], R26 ;
 Instr 1447 @ 0x5a70 (23152) - IMAD R27, R3, c[0x0][0x36c], R27 ;
 Instr 1448 @ 0x5a80 (23168) - @!P0 BRA 0x5ed0 ;
Basic block id 131 - num instructions 10
 Instr 1449 @ 0x5a90 (23184) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1450 @ 0x5aa0 (23200) - ISETP.NE.AND P0, PT, R0, 0x13, PT ;
 Instr 1451 @ 0x5ab0 (23216) - IMAD.HI.U32 R2, R5, c[0x0][0x248], R4 ;
 Instr 1452 @ 0x5ac0 (23232) - SHF.R.U32.HI R3, RZ, c[0x0][0x24c], R2 ;
 Instr 1453 @ 0x5ad0 (23248) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1454 @ 0x5ae0 (23264) - IMAD R5, R4, c[0x0][0x244], R5 ;
 Instr 1455 @ 0x5af0 (23280) - IMAD R30, R5.reuse, c[0x0][0x370], R30 ;
 Instr 1456 @ 0x5b00 (23296) - IMAD R26, R5.reuse, c[0x0][0x374], R26 ;
 Instr 1457 @ 0x5b10 (23312) - IMAD R27, R5, c[0x0][0x378], R27 ;
 Instr 1458 @ 0x5b20 (23328) - @!P0 BRA 0x5ed0 ;
Basic block id 132 - num instructions 10
 Instr 1459 @ 0x5b30 (23344) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1460 @ 0x5b40 (23360) - ISETP.NE.AND P0, PT, R0, 0x14, PT ;
 Instr 1461 @ 0x5b50 (23376) - IMAD.HI.U32 R4, R3, c[0x0][0x254], R2 ;
 Instr 1462 @ 0x5b60 (23392) - SHF.R.U32.HI R5, RZ, c[0x0][0x258], R4 ;
 Instr 1463 @ 0x5b70 (23408) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1464 @ 0x5b80 (23424) - IMAD R3, R2, c[0x0][0x250], R3 ;
 Instr 1465 @ 0x5b90 (23440) - IMAD R30, R3.reuse, c[0x0][0x37c], R30 ;
 Instr 1466 @ 0x5ba0 (23456) - IMAD R26, R3.reuse, c[0x0][0x380], R26 ;
 Instr 1467 @ 0x5bb0 (23472) - IMAD R27, R3, c[0x0][0x384], R27 ;
 Instr 1468 @ 0x5bc0 (23488) - @!P0 BRA 0x5ed0 ;
Basic block id 133 - num instructions 10
 Instr 1469 @ 0x5bd0 (23504) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1470 @ 0x5be0 (23520) - ISETP.NE.AND P0, PT, R0, 0x15, PT ;
 Instr 1471 @ 0x5bf0 (23536) - IMAD.HI.U32 R2, R5, c[0x0][0x260], R4 ;
 Instr 1472 @ 0x5c00 (23552) - SHF.R.U32.HI R3, RZ, c[0x0][0x264], R2 ;
 Instr 1473 @ 0x5c10 (23568) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1474 @ 0x5c20 (23584) - IMAD R5, R4, c[0x0][0x25c], R5 ;
 Instr 1475 @ 0x5c30 (23600) - IMAD R30, R5.reuse, c[0x0][0x388], R30 ;
 Instr 1476 @ 0x5c40 (23616) - IMAD R26, R5.reuse, c[0x0][0x38c], R26 ;
 Instr 1477 @ 0x5c50 (23632) - IMAD R27, R5, c[0x0][0x390], R27 ;
 Instr 1478 @ 0x5c60 (23648) - @!P0 BRA 0x5ed0 ;
Basic block id 134 - num instructions 10
 Instr 1479 @ 0x5c70 (23664) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1480 @ 0x5c80 (23680) - ISETP.NE.AND P0, PT, R0, 0x16, PT ;
 Instr 1481 @ 0x5c90 (23696) - IMAD.HI.U32 R4, R3, c[0x0][0x26c], R2 ;
 Instr 1482 @ 0x5ca0 (23712) - SHF.R.U32.HI R5, RZ, c[0x0][0x270], R4 ;
 Instr 1483 @ 0x5cb0 (23728) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1484 @ 0x5cc0 (23744) - IMAD R3, R2, c[0x0][0x268], R3 ;
 Instr 1485 @ 0x5cd0 (23760) - IMAD R30, R3.reuse, c[0x0][0x394], R30 ;
 Instr 1486 @ 0x5ce0 (23776) - IMAD R26, R3.reuse, c[0x0][0x398], R26 ;
 Instr 1487 @ 0x5cf0 (23792) - IMAD R27, R3, c[0x0][0x39c], R27 ;
 Instr 1488 @ 0x5d00 (23808) - @!P0 BRA 0x5ed0 ;
Basic block id 135 - num instructions 10
 Instr 1489 @ 0x5d10 (23824) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1490 @ 0x5d20 (23840) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1491 @ 0x5d30 (23856) - IMAD.HI.U32 R2, R5, c[0x0][0x278], R4 ;
 Instr 1492 @ 0x5d40 (23872) - SHF.R.U32.HI R3, RZ, c[0x0][0x27c], R2 ;
 Instr 1493 @ 0x5d50 (23888) - IADD3 R4, -R3, RZ, RZ ;
 Instr 1494 @ 0x5d60 (23904) - IMAD R5, R4, c[0x0][0x274], R5 ;
 Instr 1495 @ 0x5d70 (23920) - IMAD R30, R5.reuse, c[0x0][0x3a0], R30 ;
 Instr 1496 @ 0x5d80 (23936) - IMAD R26, R5.reuse, c[0x0][0x3a4], R26 ;
 Instr 1497 @ 0x5d90 (23952) - IMAD R27, R5, c[0x0][0x3a8], R27 ;
 Instr 1498 @ 0x5da0 (23968) - @!P0 BRA 0x5ed0 ;
Basic block id 136 - num instructions 10
 Instr 1499 @ 0x5db0 (23984) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 1500 @ 0x5dc0 (24000) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1501 @ 0x5dd0 (24016) - IMAD.HI.U32 R4, R3, c[0x0][0x284], R2 ;
 Instr 1502 @ 0x5de0 (24032) - SHF.R.U32.HI R5, RZ, c[0x0][0x288], R4 ;
 Instr 1503 @ 0x5df0 (24048) - IADD3 R2, -R5, RZ, RZ ;
 Instr 1504 @ 0x5e00 (24064) - IMAD R3, R2, c[0x0][0x280], R3 ;
 Instr 1505 @ 0x5e10 (24080) - IMAD R30, R3.reuse, c[0x0][0x3ac], R30 ;
 Instr 1506 @ 0x5e20 (24096) - IMAD R26, R3.reuse, c[0x0][0x3b0], R26 ;
 Instr 1507 @ 0x5e30 (24112) - IMAD R27, R3, c[0x0][0x3b4], R27 ;
 Instr 1508 @ 0x5e40 (24128) - @!P0 BRA 0x5ed0 ;
Basic block id 137 - num instructions 8
 Instr 1509 @ 0x5e50 (24144) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1510 @ 0x5e60 (24160) - IMAD.HI.U32 R0, R5, c[0x0][0x290], R4 ;
 Instr 1511 @ 0x5e70 (24176) - SHF.R.U32.HI R0, RZ, c[0x0][0x294], R0 ;
 Instr 1512 @ 0x5e80 (24192) - IADD3 R3, -R0, RZ, RZ ;
 Instr 1513 @ 0x5e90 (24208) - IMAD R5, R3, c[0x0][0x28c], R5 ;
 Instr 1514 @ 0x5ea0 (24224) - IMAD R30, R5.reuse, c[0x0][0x3b8], R30 ;
 Instr 1515 @ 0x5eb0 (24240) - IMAD R26, R5.reuse, c[0x0][0x3bc], R26 ;
 Instr 1516 @ 0x5ec0 (24256) - IMAD R27, R5, c[0x0][0x3c0], R27 ;
Basic block id 138 - num instructions 6
 Instr 1517 @ 0x5ed0 (24272) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
 Instr 1518 @ 0x5ee0 (24288) - CS2R R22, SRZ ;
 Instr 1519 @ 0x5ef0 (24304) - IADD3 R30, P1, R30, c[0x0][0x3c8], RZ ;
 Instr 1520 @ 0x5f00 (24320) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x3dc], PT, P0 ;
 Instr 1521 @ 0x5f10 (24336) - IMAD.X R31, RZ, RZ, c[0x0][0x3cc], P1 ;
 Instr 1522 @ 0x5f20 (24352) - @!P0 BRA 0x7510 ;
Basic block id 139 - num instructions 10
 Instr 1523 @ 0x5f30 (24368) - MOV R2, c[0x0][0x3d8] ;
 Instr 1524 @ 0x5f40 (24384) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x3dc] ;
 Instr 1525 @ 0x5f50 (24400) - CS2R R22, SRZ ;
 Instr 1526 @ 0x5f60 (24416) - MOV R25, RZ ;
 Instr 1527 @ 0x5f70 (24432) - IADD3 R0, P1, R2.reuse, -0x1, RZ ;
 Instr 1528 @ 0x5f80 (24448) - LOP3.LUT R2, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 1529 @ 0x5f90 (24464) - ISETP.GE.U32.AND P0, PT, R0, 0x3, PT ;
 Instr 1530 @ 0x5fa0 (24480) - IADD3.X R0, R16, -0x1, RZ, P1, !PT ;
 Instr 1531 @ 0x5fb0 (24496) - ISETP.GE.U32.AND.EX P0, PT, R0, RZ, PT, P0 ;
 Instr 1532 @ 0x5fc0 (24512) - @!P0 BRA 0x6c10 ;
Basic block id 140 - num instructions 4
 Instr 1533 @ 0x5fd0 (24528) - IADD3 R18, P0, -R2, c[0x0][0x3d8], RZ ;
 Instr 1534 @ 0x5fe0 (24544) - BMOV.32.CLEAR RZ, B7 ;
 Instr 1535 @ 0x5ff0 (24560) - BSSY B7, 0x6c10 ;
 Instr 1536 @ 0x6000 (24576) - IADD3.X R16, R16, -0x1, RZ, P0, !PT ;
Basic block id 141 - num instructions 17
 Instr 1537 @ 0x6010 (24592) - IMAD.MOV.U32 R24, RZ, RZ, 0x8 ;
 Instr 1538 @ 0x6020 (24608) - IMAD R24, R25, R24, c[0x2][0x0] ;
 Instr 1539 @ 0x6030 (24624) - LDC.64 R4, c[0x0][R24+0x3d8] ;
 Instr 1540 @ 0x6040 (24640) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 1541 @ 0x6050 (24656) - IADD3.X R7, RZ, R5, RZ, P0, !PT ;
 Instr 1542 @ 0x6060 (24672) - LDG.E.64.SYS R28, [R6] ;
 Instr 1543 @ 0x6070 (24688) - LDC.64 R4, c[0x0][R24+0x4a0] ;
 Instr 1544 @ 0x6080 (24704) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1545 @ 0x6090 (24720) - BSSY B6, 0x6250 ;
 Instr 1546 @ 0x60a0 (24736) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 1547 @ 0x60b0 (24752) - IMAD.X R3, RZ, RZ, ~R5, P0 ;
 Instr 1548 @ 0x60c0 (24768) - ISETP.GE.U32.AND P0, PT, R28.reuse, R4, PT ;
 Instr 1549 @ 0x60d0 (24784) - ISETP.GE.U32.AND P1, PT, R28, R0, PT ;
 Instr 1550 @ 0x60e0 (24800) - ISETP.GE.AND.EX P0, PT, R29.reuse, R5, PT, P0 ;
 Instr 1551 @ 0x60f0 (24816) - ISETP.GE.AND.EX P1, PT, R29, R3, PT, P1 ;
 Instr 1552 @ 0x6100 (24832) - MOV R19, R29 ;
 Instr 1553 @ 0x6110 (24848) - @!P0 BRA P1, 0x6240 ;
Basic block id 142 - num instructions 18
 Instr 1554 @ 0x6120 (24864) - UMOV UR4, 0xd99fbf00 ;
 Instr 1555 @ 0x6130 (24880) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 1556 @ 0x6140 (24896) - UMOV UR5, 0x7f88 ;
 Instr 1557 @ 0x6150 (24912) - MOV R12, 0x1 ;
 Instr 1558 @ 0x6160 (24928) - UMOV UR6, 0xd99fbe00 ;
 Instr 1559 @ 0x6170 (24944) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1560 @ 0x6180 (24960) - UMOV UR7, 0x7f88 ;
 Instr 1561 @ 0x6190 (24976) - MOV R4, UR4 ;
 Instr 1562 @ 0x61a0 (24992) - UMOV UR8, 0xd99f4600 ;
 Instr 1563 @ 0x61b0 (25008) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1564 @ 0x61c0 (25024) - UMOV UR9, 0x7f88 ;
 Instr 1565 @ 0x61d0 (25040) - MOV R6, UR6 ;
 Instr 1566 @ 0x61e0 (25056) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1567 @ 0x61f0 (25072) - MOV R10, UR8 ;
 Instr 1568 @ 0x6200 (25088) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1569 @ 0x6210 (25104) - MOV R20, 0xae53240 ;
 Instr 1570 @ 0x6220 (25120) - MOV R21, 0x7f89 ;
 Instr 1571 @ 0x6230 (25136) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 143 - num instructions 18
 Instr 1572 @ 0x6240 (25152) - BSYNC B6 ;
 Instr 1573 @ 0x6250 (25168) - LDC.64 R4, c[0x0][R24+0x3e0] ;
 Instr 1574 @ 0x6260 (25184) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 1575 @ 0x6270 (25200) - IADD3.X R9, RZ, R5, RZ, P0, !PT ;
 Instr 1576 @ 0x6280 (25216) - LDG.E.64.SYS R36, [R8] ;
 Instr 1577 @ 0x6290 (25232) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 1578 @ 0x62a0 (25248) - LDC.64 R6, c[0x0][R24+0x4a8] ;
 Instr 1579 @ 0x62b0 (25264) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1580 @ 0x62c0 (25280) - BSSY B6, 0x6510 ;
 Instr 1581 @ 0x62d0 (25296) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 1582 @ 0x62e0 (25312) - LDC.64 R4, c[0x0][R24+0x568] ;
 Instr 1583 @ 0x62f0 (25328) - @!P0 LDC.64 R10, c[0x0][R24+0x4a0] ;
 Instr 1584 @ 0x6300 (25344) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 1585 @ 0x6310 (25360) - IADD3.X R3, RZ, ~R7, RZ, P1, !PT ;
 Instr 1586 @ 0x6320 (25376) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 1587 @ 0x6330 (25392) - @!P0 IMAD.X R19, R11, 0x1, R19, P2 ;
 Instr 1588 @ 0x6340 (25408) - ISETP.GE.U32.AND P0, PT, R36, R0, PT ;
 Instr 1589 @ 0x6350 (25424) - IMAD R0, R5, R28, RZ ;
Basic block id 144 - num instructions 8
 Instr 1590 @ 0x6360 (25440) - ISETP.GE.U32.AND P2, PT, R36, R6, PT ;
 Instr 1591 @ 0x6370 (25456) - IMAD.WIDE.U32 R28, R4.reuse, R28, R22 ;
 Instr 1592 @ 0x6380 (25472) - ISETP.GE.AND.EX P0, PT, R37.reuse, R3, PT, P0 ;
 Instr 1593 @ 0x6390 (25488) - ISETP.GE.AND.EX P1, PT, R37, R7, PT, P2 ;
 Instr 1594 @ 0x63a0 (25504) - IMAD R23, R4, R19, R0 ;
 Instr 1595 @ 0x63b0 (25520) - IMAD.MOV.U32 R19, RZ, RZ, R37 ;
 Instr 1596 @ 0x63c0 (25536) - IADD3 R23, R29, R23, RZ ;
 Instr 1597 @ 0x63d0 (25552) - @!P1 BRA P0, 0x6500 ;
Basic block id 145 - num instructions 18
 Instr 1598 @ 0x63e0 (25568) - UMOV UR4, 0xd99fbf00 ;
 Instr 1599 @ 0x63f0 (25584) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 1600 @ 0x6400 (25600) - UMOV UR5, 0x7f88 ;
 Instr 1601 @ 0x6410 (25616) - MOV R12, 0x1 ;
 Instr 1602 @ 0x6420 (25632) - UMOV UR6, 0xd99fbe00 ;
 Instr 1603 @ 0x6430 (25648) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1604 @ 0x6440 (25664) - UMOV UR7, 0x7f88 ;
 Instr 1605 @ 0x6450 (25680) - MOV R4, UR4 ;
 Instr 1606 @ 0x6460 (25696) - UMOV UR8, 0xd99f4600 ;
 Instr 1607 @ 0x6470 (25712) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1608 @ 0x6480 (25728) - UMOV UR9, 0x7f88 ;
 Instr 1609 @ 0x6490 (25744) - MOV R6, UR6 ;
 Instr 1610 @ 0x64a0 (25760) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1611 @ 0x64b0 (25776) - MOV R10, UR8 ;
 Instr 1612 @ 0x64c0 (25792) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1613 @ 0x64d0 (25808) - MOV R20, 0xae53500 ;
 Instr 1614 @ 0x64e0 (25824) - MOV R21, 0x7f89 ;
 Instr 1615 @ 0x64f0 (25840) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 146 - num instructions 20
 Instr 1616 @ 0x6500 (25856) - BSYNC B6 ;
 Instr 1617 @ 0x6510 (25872) - LDC.64 R4, c[0x0][R24+0x3e8] ;
 Instr 1618 @ 0x6520 (25888) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 1619 @ 0x6530 (25904) - IADD3.X R9, RZ, R5, RZ, P0, !PT ;
 Instr 1620 @ 0x6540 (25920) - LDG.E.64.SYS R8, [R8] ;
 Instr 1621 @ 0x6550 (25936) - ISETP.GT.U32.AND P0, PT, R36, -0x1, PT ;
 Instr 1622 @ 0x6560 (25952) - LDC.64 R6, c[0x0][R24+0x4b0] ;
 Instr 1623 @ 0x6570 (25968) - IMAD.MOV.U32 R22, RZ, RZ, R28 ;
 Instr 1624 @ 0x6580 (25984) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1625 @ 0x6590 (26000) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 1626 @ 0x65a0 (26016) - BSSY B6, 0x67f0 ;
 Instr 1627 @ 0x65b0 (26032) - LDC.64 R4, c[0x0][R24+0x570] ;
 Instr 1628 @ 0x65c0 (26048) - @!P0 LDC.64 R10, c[0x0][R24+0x4a8] ;
 Instr 1629 @ 0x65d0 (26064) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 1630 @ 0x65e0 (26080) - IMAD.X R3, RZ, RZ, ~R7, P1 ;
 Instr 1631 @ 0x65f0 (26096) - @!P0 IADD3 R36, P2, R10, R36, RZ ;
 Instr 1632 @ 0x6600 (26112) - @!P0 IADD3.X R19, R11, R19, RZ, P2, !PT ;
 Instr 1633 @ 0x6610 (26128) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 1634 @ 0x6620 (26144) - IMAD R0, R5, R36, RZ ;
 Instr 1635 @ 0x6630 (26160) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 147 - num instructions 8
 Instr 1636 @ 0x6640 (26176) - IMAD.WIDE.U32 R36, R4.reuse, R36, R22 ;
 Instr 1637 @ 0x6650 (26192) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 1638 @ 0x6660 (26208) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 1639 @ 0x6670 (26224) - IMAD R23, R4, R19, R0 ;
 Instr 1640 @ 0x6680 (26240) - MOV R28, R8 ;
 Instr 1641 @ 0x6690 (26256) - IMAD.MOV.U32 R19, RZ, RZ, R9 ;
 Instr 1642 @ 0x66a0 (26272) - IADD3 R23, R37, R23, RZ ;
 Instr 1643 @ 0x66b0 (26288) - @!P1 BRA P0, 0x67e0 ;
Basic block id 148 - num instructions 18
 Instr 1644 @ 0x66c0 (26304) - UMOV UR4, 0xd99fbf00 ;
 Instr 1645 @ 0x66d0 (26320) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 1646 @ 0x66e0 (26336) - UMOV UR5, 0x7f88 ;
 Instr 1647 @ 0x66f0 (26352) - MOV R12, 0x1 ;
 Instr 1648 @ 0x6700 (26368) - UMOV UR6, 0xd99fbe00 ;
 Instr 1649 @ 0x6710 (26384) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1650 @ 0x6720 (26400) - UMOV UR7, 0x7f88 ;
 Instr 1651 @ 0x6730 (26416) - MOV R4, UR4 ;
 Instr 1652 @ 0x6740 (26432) - UMOV UR8, 0xd99f4600 ;
 Instr 1653 @ 0x6750 (26448) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1654 @ 0x6760 (26464) - UMOV UR9, 0x7f88 ;
 Instr 1655 @ 0x6770 (26480) - MOV R6, UR6 ;
 Instr 1656 @ 0x6780 (26496) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1657 @ 0x6790 (26512) - MOV R10, UR8 ;
 Instr 1658 @ 0x67a0 (26528) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1659 @ 0x67b0 (26544) - MOV R20, 0xae537e0 ;
 Instr 1660 @ 0x67c0 (26560) - MOV R21, 0x7f89 ;
 Instr 1661 @ 0x67d0 (26576) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 149 - num instructions 20
 Instr 1662 @ 0x67e0 (26592) - BSYNC B6 ;
 Instr 1663 @ 0x67f0 (26608) - LDC.64 R4, c[0x0][R24+0x3f0] ;
 Instr 1664 @ 0x6800 (26624) - IADD3 R8, P0, R4, R27, RZ ;
 Instr 1665 @ 0x6810 (26640) - IADD3.X R9, RZ, R5, RZ, P0, !PT ;
 Instr 1666 @ 0x6820 (26656) - LDG.E.64.SYS R8, [R8] ;
 Instr 1667 @ 0x6830 (26672) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 1668 @ 0x6840 (26688) - LDC.64 R6, c[0x0][R24+0x4b8] ;
 Instr 1669 @ 0x6850 (26704) - IMAD.MOV.U32 R22, RZ, RZ, R36 ;
 Instr 1670 @ 0x6860 (26720) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1671 @ 0x6870 (26736) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 1672 @ 0x6880 (26752) - BSSY B6, 0x6ad0 ;
 Instr 1673 @ 0x6890 (26768) - LDC.64 R4, c[0x0][R24+0x578] ;
 Instr 1674 @ 0x68a0 (26784) - @!P0 LDC.64 R10, c[0x0][R24+0x4b0] ;
 Instr 1675 @ 0x68b0 (26800) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 1676 @ 0x68c0 (26816) - IMAD.X R3, RZ, RZ, ~R7, P1 ;
 Instr 1677 @ 0x68d0 (26832) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 1678 @ 0x68e0 (26848) - @!P0 IADD3.X R19, R11, R19, RZ, P2, !PT ;
 Instr 1679 @ 0x68f0 (26864) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 1680 @ 0x6900 (26880) - IMAD R0, R5, R28, RZ ;
 Instr 1681 @ 0x6910 (26896) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 150 - num instructions 8
 Instr 1682 @ 0x6920 (26912) - IMAD.WIDE.U32 R28, R4.reuse, R28, R22 ;
 Instr 1683 @ 0x6930 (26928) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 1684 @ 0x6940 (26944) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 1685 @ 0x6950 (26960) - IMAD R19, R4, R19, R0 ;
 Instr 1686 @ 0x6960 (26976) - MOV R23, R8 ;
 Instr 1687 @ 0x6970 (26992) - IMAD.MOV.U32 R22, RZ, RZ, R9 ;
 Instr 1688 @ 0x6980 (27008) - IADD3 R19, R29, R19, RZ ;
 Instr 1689 @ 0x6990 (27024) - @!P1 BRA P0, 0x6ac0 ;
Basic block id 151 - num instructions 18
 Instr 1690 @ 0x69a0 (27040) - UMOV UR4, 0xd99fbf00 ;
 Instr 1691 @ 0x69b0 (27056) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 1692 @ 0x69c0 (27072) - UMOV UR5, 0x7f88 ;
 Instr 1693 @ 0x69d0 (27088) - MOV R12, 0x1 ;
 Instr 1694 @ 0x69e0 (27104) - UMOV UR6, 0xd99fbe00 ;
 Instr 1695 @ 0x69f0 (27120) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1696 @ 0x6a00 (27136) - UMOV UR7, 0x7f88 ;
 Instr 1697 @ 0x6a10 (27152) - MOV R4, UR4 ;
 Instr 1698 @ 0x6a20 (27168) - UMOV UR8, 0xd99f4600 ;
 Instr 1699 @ 0x6a30 (27184) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1700 @ 0x6a40 (27200) - UMOV UR9, 0x7f88 ;
 Instr 1701 @ 0x6a50 (27216) - MOV R6, UR6 ;
 Instr 1702 @ 0x6a60 (27232) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1703 @ 0x6a70 (27248) - MOV R10, UR8 ;
 Instr 1704 @ 0x6a80 (27264) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1705 @ 0x6a90 (27280) - MOV R20, 0xae53ac0 ;
 Instr 1706 @ 0x6aa0 (27296) - MOV R21, 0x7f89 ;
 Instr 1707 @ 0x6ab0 (27312) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 152 - num instructions 20
 Instr 1708 @ 0x6ac0 (27328) - BSYNC B6 ;
 Instr 1709 @ 0x6ad0 (27344) - ISETP.GT.U32.AND P0, PT, R23, -0x1, PT ;
 Instr 1710 @ 0x6ae0 (27360) - LDC.64 R4, c[0x0][R24+0x580] ;
 Instr 1711 @ 0x6af0 (27376) - IADD3 R18, P2, R18, -0x4, RZ ;
 Instr 1712 @ 0x6b00 (27392) - IMAD.MOV.U32 R7, RZ, RZ, R19 ;
 Instr 1713 @ 0x6b10 (27408) - ISETP.GT.AND.EX P0, PT, R22, -0x1, PT, P0 ;
 Instr 1714 @ 0x6b20 (27424) - IADD3.X R16, R16, -0x1, RZ, P2, !PT ;
 Instr 1715 @ 0x6b30 (27440) - MOV R6, R28 ;
 Instr 1716 @ 0x6b40 (27456) - IADD3 R25, R25, 0x4, RZ ;
 Instr 1717 @ 0x6b50 (27472) - @!P0 LDC.64 R8, c[0x0][R24+0x4b8] ;
 Instr 1718 @ 0x6b60 (27488) - @!P0 IADD3 R23, P1, R8, R23, RZ ;
 Instr 1719 @ 0x6b70 (27504) - @!P0 IADD3.X R22, R9, R22, RZ, P1, !PT ;
 Instr 1720 @ 0x6b80 (27520) - IMAD R3, R5, R23.reuse, RZ ;
 Instr 1721 @ 0x6b90 (27536) - ISETP.NE.U32.AND P0, PT, R18, RZ, PT ;
 Instr 1722 @ 0x6ba0 (27552) - IMAD.WIDE.U32 R6, R4, R23, R6 ;
 Instr 1723 @ 0x6bb0 (27568) - ISETP.NE.AND.EX P0, PT, R16, RZ, PT, P0 ;
 Instr 1724 @ 0x6bc0 (27584) - IMAD R3, R4, R22, R3 ;
 Instr 1725 @ 0x6bd0 (27600) - IMAD.MOV.U32 R22, RZ, RZ, R6 ;
 Instr 1726 @ 0x6be0 (27616) - IADD3 R23, R7, R3, RZ ;
 Instr 1727 @ 0x6bf0 (27632) - @P0 BRA 0x6010 ;
Basic block id 153 - num instructions 1
 Instr 1728 @ 0x6c00 (27648) - BSYNC B7 ;
Basic block id 154 - num instructions 3
 Instr 1729 @ 0x6c10 (27664) - ISETP.NE.U32.AND P0, PT, R2, RZ, PT ;
 Instr 1730 @ 0x6c20 (27680) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 1731 @ 0x6c30 (27696) - @!P0 BRA 0x7510 ;
Basic block id 155 - num instructions 17
 Instr 1732 @ 0x6c40 (27712) - IMAD.MOV.U32 R0, RZ, RZ, 0x8 ;
 Instr 1733 @ 0x6c50 (27728) - IMAD R25, R25, R0, c[0x2][0x0] ;
 Instr 1734 @ 0x6c60 (27744) - LDC.64 R4, c[0x0][R25+0x3d8] ;
 Instr 1735 @ 0x6c70 (27760) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 1736 @ 0x6c80 (27776) - IADD3.X R7, RZ, R5, RZ, P0, !PT ;
 Instr 1737 @ 0x6c90 (27792) - LDG.E.64.SYS R18, [R6] ;
 Instr 1738 @ 0x6ca0 (27808) - LDC.64 R4, c[0x0][R25+0x4a0] ;
 Instr 1739 @ 0x6cb0 (27824) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1740 @ 0x6cc0 (27840) - BSSY B6, 0x6e80 ;
 Instr 1741 @ 0x6cd0 (27856) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 1742 @ 0x6ce0 (27872) - IMAD.X R3, RZ, RZ, ~R5, P0 ;
 Instr 1743 @ 0x6cf0 (27888) - ISETP.GE.U32.AND P0, PT, R18.reuse, R4, PT ;
 Instr 1744 @ 0x6d00 (27904) - ISETP.GE.U32.AND P1, PT, R18, R0, PT ;
 Instr 1745 @ 0x6d10 (27920) - ISETP.GE.AND.EX P0, PT, R19.reuse, R5, PT, P0 ;
 Instr 1746 @ 0x6d20 (27936) - ISETP.GE.AND.EX P1, PT, R19, R3, PT, P1 ;
 Instr 1747 @ 0x6d30 (27952) - MOV R16, R19 ;
 Instr 1748 @ 0x6d40 (27968) - @!P0 BRA P1, 0x6e70 ;
Basic block id 156 - num instructions 18
 Instr 1749 @ 0x6d50 (27984) - UMOV UR4, 0xd99fbf00 ;
 Instr 1750 @ 0x6d60 (28000) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 1751 @ 0x6d70 (28016) - UMOV UR5, 0x7f88 ;
 Instr 1752 @ 0x6d80 (28032) - MOV R12, 0x1 ;
 Instr 1753 @ 0x6d90 (28048) - UMOV UR6, 0xd99fbe00 ;
 Instr 1754 @ 0x6da0 (28064) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1755 @ 0x6db0 (28080) - UMOV UR7, 0x7f88 ;
 Instr 1756 @ 0x6dc0 (28096) - MOV R4, UR4 ;
 Instr 1757 @ 0x6dd0 (28112) - UMOV UR8, 0xd99f4600 ;
 Instr 1758 @ 0x6de0 (28128) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1759 @ 0x6df0 (28144) - UMOV UR9, 0x7f88 ;
 Instr 1760 @ 0x6e00 (28160) - MOV R6, UR6 ;
 Instr 1761 @ 0x6e10 (28176) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1762 @ 0x6e20 (28192) - MOV R10, UR8 ;
 Instr 1763 @ 0x6e30 (28208) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1764 @ 0x6e40 (28224) - MOV R20, 0xae53e70 ;
 Instr 1765 @ 0x6e50 (28240) - MOV R21, 0x7f89 ;
 Instr 1766 @ 0x6e60 (28256) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 157 - num instructions 14
 Instr 1767 @ 0x6e70 (28272) - BSYNC B6 ;
 Instr 1768 @ 0x6e80 (28288) - ISETP.GT.U32.AND P0, PT, R18, -0x1, PT ;
 Instr 1769 @ 0x6e90 (28304) - LDC.64 R4, c[0x0][R25+0x568] ;
 Instr 1770 @ 0x6ea0 (28320) - ISETP.GT.AND.EX P0, PT, R16, -0x1, PT, P0 ;
 Instr 1771 @ 0x6eb0 (28336) - @!P0 LDC.64 R6, c[0x0][R25+0x4a0] ;
 Instr 1772 @ 0x6ec0 (28352) - @!P0 IADD3 R18, P1, R6, R18, RZ ;
 Instr 1773 @ 0x6ed0 (28368) - @!P0 IADD3.X R16, R7, R16, RZ, P1, !PT ;
 Instr 1774 @ 0x6ee0 (28384) - IMAD R3, R5, R18.reuse, RZ ;
 Instr 1775 @ 0x6ef0 (28400) - ISETP.NE.U32.AND P0, PT, R2, 0x1, PT ;
 Instr 1776 @ 0x6f00 (28416) - IMAD.WIDE.U32 R22, R4, R18, R22 ;
 Instr 1777 @ 0x6f10 (28432) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 1778 @ 0x6f20 (28448) - IMAD R3, R4, R16, R3 ;
 Instr 1779 @ 0x6f30 (28464) - IMAD.IADD R23, R23, 0x1, R3 ;
 Instr 1780 @ 0x6f40 (28480) - @!P0 BRA 0x7510 ;
Basic block id 158 - num instructions 15
 Instr 1781 @ 0x6f50 (28496) - LDC.64 R4, c[0x0][R25+0x3e0] ;
 Instr 1782 @ 0x6f60 (28512) - IADD3 R6, P0, R4, R27, RZ ;
 Instr 1783 @ 0x6f70 (28528) - IADD3.X R7, RZ, R5, RZ, P0, !PT ;
 Instr 1784 @ 0x6f80 (28544) - LDG.E.64.SYS R18, [R6] ;
 Instr 1785 @ 0x6f90 (28560) - LDC.64 R4, c[0x0][R25+0x4a8] ;
 Instr 1786 @ 0x6fa0 (28576) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1787 @ 0x6fb0 (28592) - BSSY B6, 0x7170 ;
 Instr 1788 @ 0x6fc0 (28608) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 1789 @ 0x6fd0 (28624) - IMAD.X R3, RZ, RZ, ~R5, P0 ;
 Instr 1790 @ 0x6fe0 (28640) - ISETP.GE.U32.AND P0, PT, R18.reuse, R4, PT ;
 Instr 1791 @ 0x6ff0 (28656) - ISETP.GE.U32.AND P1, PT, R18, R0, PT ;
 Instr 1792 @ 0x7000 (28672) - ISETP.GE.AND.EX P0, PT, R19.reuse, R5, PT, P0 ;
 Instr 1793 @ 0x7010 (28688) - ISETP.GE.AND.EX P1, PT, R19, R3, PT, P1 ;
 Instr 1794 @ 0x7020 (28704) - MOV R16, R19 ;
 Instr 1795 @ 0x7030 (28720) - @!P0 BRA P1, 0x7160 ;
Basic block id 159 - num instructions 18
 Instr 1796 @ 0x7040 (28736) - UMOV UR4, 0xd99fbf00 ;
 Instr 1797 @ 0x7050 (28752) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 1798 @ 0x7060 (28768) - UMOV UR5, 0x7f88 ;
 Instr 1799 @ 0x7070 (28784) - MOV R12, 0x1 ;
 Instr 1800 @ 0x7080 (28800) - UMOV UR6, 0xd99fbe00 ;
 Instr 1801 @ 0x7090 (28816) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1802 @ 0x70a0 (28832) - UMOV UR7, 0x7f88 ;
 Instr 1803 @ 0x70b0 (28848) - MOV R4, UR4 ;
 Instr 1804 @ 0x70c0 (28864) - UMOV UR8, 0xd99f4600 ;
 Instr 1805 @ 0x70d0 (28880) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1806 @ 0x70e0 (28896) - UMOV UR9, 0x7f88 ;
 Instr 1807 @ 0x70f0 (28912) - MOV R6, UR6 ;
 Instr 1808 @ 0x7100 (28928) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1809 @ 0x7110 (28944) - MOV R10, UR8 ;
 Instr 1810 @ 0x7120 (28960) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1811 @ 0x7130 (28976) - MOV R20, 0xae54160 ;
 Instr 1812 @ 0x7140 (28992) - MOV R21, 0x7f89 ;
 Instr 1813 @ 0x7150 (29008) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 160 - num instructions 14
 Instr 1814 @ 0x7160 (29024) - BSYNC B6 ;
 Instr 1815 @ 0x7170 (29040) - ISETP.GT.U32.AND P0, PT, R18, -0x1, PT ;
 Instr 1816 @ 0x7180 (29056) - LDC.64 R4, c[0x0][R25+0x570] ;
 Instr 1817 @ 0x7190 (29072) - ISETP.GT.AND.EX P0, PT, R16, -0x1, PT, P0 ;
 Instr 1818 @ 0x71a0 (29088) - @!P0 LDC.64 R6, c[0x0][R25+0x4a8] ;
 Instr 1819 @ 0x71b0 (29104) - @!P0 IADD3 R18, P1, R6, R18, RZ ;
 Instr 1820 @ 0x71c0 (29120) - @!P0 IADD3.X R16, R7, R16, RZ, P1, !PT ;
 Instr 1821 @ 0x71d0 (29136) - IMAD R3, R5, R18.reuse, RZ ;
 Instr 1822 @ 0x71e0 (29152) - ISETP.NE.U32.AND P0, PT, R2, 0x2, PT ;
 Instr 1823 @ 0x71f0 (29168) - IMAD.WIDE.U32 R22, R4, R18, R22 ;
 Instr 1824 @ 0x7200 (29184) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 1825 @ 0x7210 (29200) - IMAD R3, R4, R16, R3 ;
 Instr 1826 @ 0x7220 (29216) - IMAD.IADD R23, R23, 0x1, R3 ;
 Instr 1827 @ 0x7230 (29232) - @!P0 BRA 0x7510 ;
Basic block id 161 - num instructions 14
 Instr 1828 @ 0x7240 (29248) - LDC.64 R2, c[0x0][R25+0x3e8] ;
 Instr 1829 @ 0x7250 (29264) - IADD3 R4, P0, R2, R27, RZ ;
 Instr 1830 @ 0x7260 (29280) - IADD3.X R5, RZ, R3, RZ, P0, !PT ;
 Instr 1831 @ 0x7270 (29296) - LDG.E.64.SYS R4, [R4] ;
 Instr 1832 @ 0x7280 (29312) - LDC.64 R2, c[0x0][R25+0x4b0] ;
 Instr 1833 @ 0x7290 (29328) - BMOV.32.CLEAR RZ, B6 ;
 Instr 1834 @ 0x72a0 (29344) - BSSY B6, 0x7470 ;
 Instr 1835 @ 0x72b0 (29360) - IADD3 R0, P0, RZ, -R2, RZ ;
 Instr 1836 @ 0x72c0 (29376) - IMAD.X R6, RZ, RZ, ~R3, P0 ;
 Instr 1837 @ 0x72d0 (29392) - ISETP.GE.U32.AND P0, PT, R4.reuse, R2, PT ;
 Instr 1838 @ 0x72e0 (29408) - IMAD.MOV.U32 R2, RZ, RZ, R5 ;
 Instr 1839 @ 0x72f0 (29424) - ISETP.GE.U32.AND P1, PT, R4, R0, PT ;
 Instr 1840 @ 0x7300 (29440) - ISETP.GE.AND.EX P0, PT, R5.reuse, R3, PT, P0 ;
 Instr 1841 @ 0x7310 (29456) - ISETP.GE.AND.EX P1, PT, R5, R6, PT, P1 ;
Basic block id 162 - num instructions 2
 Instr 1842 @ 0x7320 (29472) - MOV R16, R4 ;
 Instr 1843 @ 0x7330 (29488) - @!P0 BRA P1, 0x7460 ;
Basic block id 163 - num instructions 18
 Instr 1844 @ 0x7340 (29504) - UMOV UR4, 0xd99fbf00 ;
 Instr 1845 @ 0x7350 (29520) - MOV R8, 0x5d ;
 Instr 1846 @ 0x7360 (29536) - UMOV UR5, 0x7f88 ;
 Instr 1847 @ 0x7370 (29552) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1848 @ 0x7380 (29568) - UMOV UR6, 0xd99fbe00 ;
 Instr 1849 @ 0x7390 (29584) - MOV R13, RZ ;
 Instr 1850 @ 0x73a0 (29600) - UMOV UR7, 0x7f88 ;
 Instr 1851 @ 0x73b0 (29616) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1852 @ 0x73c0 (29632) - UMOV UR8, 0xd99f4600 ;
 Instr 1853 @ 0x73d0 (29648) - MOV R5, UR5 ;
 Instr 1854 @ 0x73e0 (29664) - UMOV UR9, 0x7f88 ;
 Instr 1855 @ 0x73f0 (29680) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1856 @ 0x7400 (29696) - MOV R7, UR7 ;
 Instr 1857 @ 0x7410 (29712) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1858 @ 0x7420 (29728) - MOV R11, UR9 ;
 Instr 1859 @ 0x7430 (29744) - MOV R20, 0xae54460 ;
 Instr 1860 @ 0x7440 (29760) - MOV R21, 0x7f89 ;
 Instr 1861 @ 0x7450 (29776) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 164 - num instructions 11
 Instr 1862 @ 0x7460 (29792) - BSYNC B6 ;
 Instr 1863 @ 0x7470 (29808) - ISETP.GT.U32.AND P0, PT, R16, -0x1, PT ;
 Instr 1864 @ 0x7480 (29824) - LDC.64 R4, c[0x0][R25+0x578] ;
 Instr 1865 @ 0x7490 (29840) - ISETP.GT.AND.EX P0, PT, R2, -0x1, PT, P0 ;
 Instr 1866 @ 0x74a0 (29856) - @!P0 LDC.64 R6, c[0x0][R25+0x4b0] ;
 Instr 1867 @ 0x74b0 (29872) - @!P0 IADD3 R16, P1, R6, R16, RZ ;
 Instr 1868 @ 0x74c0 (29888) - @!P0 IMAD.X R2, R7, 0x1, R2, P1 ;
 Instr 1869 @ 0x74d0 (29904) - IMAD R3, R5, R16.reuse, RZ ;
 Instr 1870 @ 0x74e0 (29920) - IMAD.WIDE.U32 R22, R4, R16, R22 ;
 Instr 1871 @ 0x74f0 (29936) - IMAD R3, R4, R2, R3 ;
 Instr 1872 @ 0x7500 (29952) - IADD3 R23, R23, R3, RZ ;
Basic block id 165 - num instructions 8
 Instr 1873 @ 0x7510 (29968) - IADD3 R22, P0, P1, R22, c[0x0][0x3d0], R26 ;
 Instr 1874 @ 0x7520 (29984) - IADD3.X R23, R23, c[0x0][0x3d4], RZ, P0, P1 ;
 Instr 1875 @ 0x7530 (30000) - LDG.E.U16.SYS R22, [R22] ;
 Instr 1876 @ 0x7540 (30016) - IADD3 R17, R17, 0x80, RZ ;
 Instr 1877 @ 0x7550 (30032) - IMAD.MOV.U32 R2, RZ, RZ, R17 ;
 Instr 1878 @ 0x7560 (30048) - PRMT R3, R22, 0x7710, RZ ;
 Instr 1879 @ 0x7570 (30064) - STG.E.U16.SYS [R30], R3 ;
 Instr 1880 @ 0x7580 (30080) - MOV R3, RZ ;
Basic block id 166 - num instructions 4
 Instr 1881 @ 0x7590 (30096) - BSYNC B8 ;
 Instr 1882 @ 0x75a0 (30112) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x160], PT ;
 Instr 1883 @ 0x75b0 (30128) - ISETP.GE.AND.EX P0, PT, R3, c[0x0][0x164], PT, P0 ;
 Instr 1884 @ 0x75c0 (30144) - @P0 EXIT ;
Basic block id 167 - num instructions 5
 Instr 1885 @ 0x75d0 (30160) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
 Instr 1886 @ 0x75e0 (30176) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 1887 @ 0x75f0 (30192) - MOV R2, RZ ;
 Instr 1888 @ 0x7600 (30208) - IMAD.MOV.U32 R30, RZ, RZ, RZ ;
 Instr 1889 @ 0x7610 (30224) - @!P0 BRA 0x85c0 ;
Basic block id 168 - num instructions 11
 Instr 1890 @ 0x7620 (30240) - MOV R16, RZ ;
 Instr 1891 @ 0x7630 (30256) - MOV R0, 0x1 ;
 Instr 1892 @ 0x7640 (30272) - IMAD.HI.U32 R4, R17, c[0x0][0x170], R16 ;
 Instr 1893 @ 0x7650 (30288) - ISETP.NE.AND P0, PT, R0, c[0x0][0x168], PT ;
 Instr 1894 @ 0x7660 (30304) - SHF.R.U32.HI R5, RZ, c[0x0][0x174], R4 ;
 Instr 1895 @ 0x7670 (30320) - IMAD.MOV R16, RZ, RZ, -R5 ;
 Instr 1896 @ 0x7680 (30336) - IMAD R16, R16, c[0x0][0x16c], R17 ;
 Instr 1897 @ 0x7690 (30352) - IMAD R30, R16.reuse, c[0x0][0x298], RZ ;
 Instr 1898 @ 0x76a0 (30368) - IMAD R2, R16.reuse, c[0x0][0x29c], RZ ;
 Instr 1899 @ 0x76b0 (30384) - IMAD R16, R16, c[0x0][0x2a0], RZ ;
 Instr 1900 @ 0x76c0 (30400) - @!P0 BRA 0x85c0 ;
Basic block id 169 - num instructions 11
 Instr 1901 @ 0x76d0 (30416) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 1902 @ 0x76e0 (30432) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x168] ;
 Instr 1903 @ 0x76f0 (30448) - IMAD.HI.U32 R6, R5, c[0x0][0x17c], R4 ;
 Instr 1904 @ 0x7700 (30464) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1905 @ 0x7710 (30480) - SHF.R.U32.HI R7, RZ, c[0x0][0x180], R6 ;
 Instr 1906 @ 0x7720 (30496) - IADD3 R3, -R7, RZ, RZ ;
 Instr 1907 @ 0x7730 (30512) - IMAD R5, R3, c[0x0][0x178], R5 ;
 Instr 1908 @ 0x7740 (30528) - IMAD R30, R5.reuse, c[0x0][0x2a4], R30 ;
 Instr 1909 @ 0x7750 (30544) - IMAD R2, R5.reuse, c[0x0][0x2a8], R2 ;
 Instr 1910 @ 0x7760 (30560) - IMAD R16, R5, c[0x0][0x2ac], R16 ;
 Instr 1911 @ 0x7770 (30576) - @!P0 BRA 0x85c0 ;
Basic block id 170 - num instructions 10
 Instr 1912 @ 0x7780 (30592) - MOV R6, RZ ;
 Instr 1913 @ 0x7790 (30608) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1914 @ 0x77a0 (30624) - IMAD.HI.U32 R4, R7, c[0x0][0x188], R6 ;
 Instr 1915 @ 0x77b0 (30640) - SHF.R.U32.HI R5, RZ, c[0x0][0x18c], R4 ;
 Instr 1916 @ 0x77c0 (30656) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 1917 @ 0x77d0 (30672) - IMAD R7, R3, c[0x0][0x184], R7 ;
 Instr 1918 @ 0x77e0 (30688) - IMAD R30, R7.reuse, c[0x0][0x2b0], R30 ;
 Instr 1919 @ 0x77f0 (30704) - IMAD R2, R7.reuse, c[0x0][0x2b4], R2 ;
 Instr 1920 @ 0x7800 (30720) - IMAD R16, R7, c[0x0][0x2b8], R16 ;
 Instr 1921 @ 0x7810 (30736) - @!P0 BRA 0x85c0 ;
Basic block id 171 - num instructions 10
 Instr 1922 @ 0x7820 (30752) - MOV R4, RZ ;
 Instr 1923 @ 0x7830 (30768) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1924 @ 0x7840 (30784) - IMAD.HI.U32 R6, R5, c[0x0][0x194], R4 ;
 Instr 1925 @ 0x7850 (30800) - SHF.R.U32.HI R7, RZ, c[0x0][0x198], R6 ;
 Instr 1926 @ 0x7860 (30816) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 1927 @ 0x7870 (30832) - IMAD R5, R3, c[0x0][0x190], R5 ;
 Instr 1928 @ 0x7880 (30848) - IMAD R30, R5.reuse, c[0x0][0x2bc], R30 ;
 Instr 1929 @ 0x7890 (30864) - IMAD R2, R5.reuse, c[0x0][0x2c0], R2 ;
 Instr 1930 @ 0x78a0 (30880) - IMAD R16, R5, c[0x0][0x2c4], R16 ;
 Instr 1931 @ 0x78b0 (30896) - @!P0 BRA 0x85c0 ;
Basic block id 172 - num instructions 10
 Instr 1932 @ 0x78c0 (30912) - MOV R6, RZ ;
 Instr 1933 @ 0x78d0 (30928) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1934 @ 0x78e0 (30944) - IMAD.HI.U32 R4, R7, c[0x0][0x1a0], R6 ;
 Instr 1935 @ 0x78f0 (30960) - SHF.R.U32.HI R5, RZ, c[0x0][0x1a4], R4 ;
 Instr 1936 @ 0x7900 (30976) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 1937 @ 0x7910 (30992) - IMAD R7, R3, c[0x0][0x19c], R7 ;
 Instr 1938 @ 0x7920 (31008) - IMAD R30, R7.reuse, c[0x0][0x2c8], R30 ;
 Instr 1939 @ 0x7930 (31024) - IMAD R2, R7.reuse, c[0x0][0x2cc], R2 ;
 Instr 1940 @ 0x7940 (31040) - IMAD R16, R7, c[0x0][0x2d0], R16 ;
 Instr 1941 @ 0x7950 (31056) - @!P0 BRA 0x85c0 ;
Basic block id 173 - num instructions 10
 Instr 1942 @ 0x7960 (31072) - MOV R4, RZ ;
 Instr 1943 @ 0x7970 (31088) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1944 @ 0x7980 (31104) - IMAD.HI.U32 R6, R5, c[0x0][0x1ac], R4 ;
 Instr 1945 @ 0x7990 (31120) - SHF.R.U32.HI R7, RZ, c[0x0][0x1b0], R6 ;
 Instr 1946 @ 0x79a0 (31136) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 1947 @ 0x79b0 (31152) - IMAD R5, R3, c[0x0][0x1a8], R5 ;
 Instr 1948 @ 0x79c0 (31168) - IMAD R30, R5.reuse, c[0x0][0x2d4], R30 ;
 Instr 1949 @ 0x79d0 (31184) - IMAD R2, R5.reuse, c[0x0][0x2d8], R2 ;
 Instr 1950 @ 0x79e0 (31200) - IMAD R16, R5, c[0x0][0x2dc], R16 ;
 Instr 1951 @ 0x79f0 (31216) - @!P0 BRA 0x85c0 ;
Basic block id 174 - num instructions 10
 Instr 1952 @ 0x7a00 (31232) - MOV R6, RZ ;
 Instr 1953 @ 0x7a10 (31248) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1954 @ 0x7a20 (31264) - IMAD.HI.U32 R4, R7, c[0x0][0x1b8], R6 ;
 Instr 1955 @ 0x7a30 (31280) - SHF.R.U32.HI R5, RZ, c[0x0][0x1bc], R4 ;
 Instr 1956 @ 0x7a40 (31296) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 1957 @ 0x7a50 (31312) - IMAD R7, R3, c[0x0][0x1b4], R7 ;
 Instr 1958 @ 0x7a60 (31328) - IMAD R30, R7.reuse, c[0x0][0x2e0], R30 ;
 Instr 1959 @ 0x7a70 (31344) - IMAD R2, R7.reuse, c[0x0][0x2e4], R2 ;
 Instr 1960 @ 0x7a80 (31360) - IMAD R16, R7, c[0x0][0x2e8], R16 ;
 Instr 1961 @ 0x7a90 (31376) - @!P0 BRA 0x85c0 ;
Basic block id 175 - num instructions 10
 Instr 1962 @ 0x7aa0 (31392) - MOV R4, RZ ;
 Instr 1963 @ 0x7ab0 (31408) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1964 @ 0x7ac0 (31424) - IMAD.HI.U32 R6, R5, c[0x0][0x1c4], R4 ;
 Instr 1965 @ 0x7ad0 (31440) - SHF.R.U32.HI R7, RZ, c[0x0][0x1c8], R6 ;
 Instr 1966 @ 0x7ae0 (31456) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 1967 @ 0x7af0 (31472) - IMAD R5, R3, c[0x0][0x1c0], R5 ;
 Instr 1968 @ 0x7b00 (31488) - IMAD R30, R5.reuse, c[0x0][0x2ec], R30 ;
 Instr 1969 @ 0x7b10 (31504) - IMAD R2, R5.reuse, c[0x0][0x2f0], R2 ;
 Instr 1970 @ 0x7b20 (31520) - IMAD R16, R5, c[0x0][0x2f4], R16 ;
 Instr 1971 @ 0x7b30 (31536) - @!P0 BRA 0x85c0 ;
Basic block id 176 - num instructions 10
 Instr 1972 @ 0x7b40 (31552) - MOV R6, RZ ;
 Instr 1973 @ 0x7b50 (31568) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1974 @ 0x7b60 (31584) - IMAD.HI.U32 R4, R7, c[0x0][0x1d0], R6 ;
 Instr 1975 @ 0x7b70 (31600) - SHF.R.U32.HI R5, RZ, c[0x0][0x1d4], R4 ;
 Instr 1976 @ 0x7b80 (31616) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 1977 @ 0x7b90 (31632) - IMAD R7, R3, c[0x0][0x1cc], R7 ;
 Instr 1978 @ 0x7ba0 (31648) - IMAD R30, R7.reuse, c[0x0][0x2f8], R30 ;
 Instr 1979 @ 0x7bb0 (31664) - IMAD R2, R7.reuse, c[0x0][0x2fc], R2 ;
 Instr 1980 @ 0x7bc0 (31680) - IMAD R16, R7, c[0x0][0x300], R16 ;
 Instr 1981 @ 0x7bd0 (31696) - @!P0 BRA 0x85c0 ;
Basic block id 177 - num instructions 10
 Instr 1982 @ 0x7be0 (31712) - MOV R4, RZ ;
 Instr 1983 @ 0x7bf0 (31728) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1984 @ 0x7c00 (31744) - IMAD.HI.U32 R6, R5, c[0x0][0x1dc], R4 ;
 Instr 1985 @ 0x7c10 (31760) - SHF.R.U32.HI R7, RZ, c[0x0][0x1e0], R6 ;
 Instr 1986 @ 0x7c20 (31776) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 1987 @ 0x7c30 (31792) - IMAD R5, R3, c[0x0][0x1d8], R5 ;
 Instr 1988 @ 0x7c40 (31808) - IMAD R30, R5.reuse, c[0x0][0x304], R30 ;
 Instr 1989 @ 0x7c50 (31824) - IMAD R2, R5.reuse, c[0x0][0x308], R2 ;
 Instr 1990 @ 0x7c60 (31840) - IMAD R16, R5, c[0x0][0x30c], R16 ;
 Instr 1991 @ 0x7c70 (31856) - @!P0 BRA 0x85c0 ;
Basic block id 178 - num instructions 10
 Instr 1992 @ 0x7c80 (31872) - MOV R6, RZ ;
 Instr 1993 @ 0x7c90 (31888) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1994 @ 0x7ca0 (31904) - IMAD.HI.U32 R4, R7, c[0x0][0x1e8], R6 ;
 Instr 1995 @ 0x7cb0 (31920) - SHF.R.U32.HI R5, RZ, c[0x0][0x1ec], R4 ;
 Instr 1996 @ 0x7cc0 (31936) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 1997 @ 0x7cd0 (31952) - IMAD R7, R3, c[0x0][0x1e4], R7 ;
 Instr 1998 @ 0x7ce0 (31968) - IMAD R30, R7.reuse, c[0x0][0x310], R30 ;
 Instr 1999 @ 0x7cf0 (31984) - IMAD R2, R7.reuse, c[0x0][0x314], R2 ;
 Instr 2000 @ 0x7d00 (32000) - IMAD R16, R7, c[0x0][0x318], R16 ;
 Instr 2001 @ 0x7d10 (32016) - @!P0 BRA 0x85c0 ;
Basic block id 179 - num instructions 10
 Instr 2002 @ 0x7d20 (32032) - MOV R4, RZ ;
 Instr 2003 @ 0x7d30 (32048) - ISETP.NE.AND P0, PT, R0, 0xc, PT ;
 Instr 2004 @ 0x7d40 (32064) - IMAD.HI.U32 R6, R5, c[0x0][0x1f4], R4 ;
 Instr 2005 @ 0x7d50 (32080) - SHF.R.U32.HI R7, RZ, c[0x0][0x1f8], R6 ;
 Instr 2006 @ 0x7d60 (32096) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 2007 @ 0x7d70 (32112) - IMAD R5, R3, c[0x0][0x1f0], R5 ;
 Instr 2008 @ 0x7d80 (32128) - IMAD R30, R5.reuse, c[0x0][0x31c], R30 ;
 Instr 2009 @ 0x7d90 (32144) - IMAD R2, R5.reuse, c[0x0][0x320], R2 ;
 Instr 2010 @ 0x7da0 (32160) - IMAD R16, R5, c[0x0][0x324], R16 ;
 Instr 2011 @ 0x7db0 (32176) - @!P0 BRA 0x85c0 ;
Basic block id 180 - num instructions 10
 Instr 2012 @ 0x7dc0 (32192) - MOV R6, RZ ;
 Instr 2013 @ 0x7dd0 (32208) - ISETP.NE.AND P0, PT, R0, 0xd, PT ;
 Instr 2014 @ 0x7de0 (32224) - IMAD.HI.U32 R4, R7, c[0x0][0x200], R6 ;
 Instr 2015 @ 0x7df0 (32240) - SHF.R.U32.HI R5, RZ, c[0x0][0x204], R4 ;
 Instr 2016 @ 0x7e00 (32256) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 2017 @ 0x7e10 (32272) - IMAD R7, R3, c[0x0][0x1fc], R7 ;
 Instr 2018 @ 0x7e20 (32288) - IMAD R30, R7.reuse, c[0x0][0x328], R30 ;
 Instr 2019 @ 0x7e30 (32304) - IMAD R2, R7.reuse, c[0x0][0x32c], R2 ;
 Instr 2020 @ 0x7e40 (32320) - IMAD R16, R7, c[0x0][0x330], R16 ;
 Instr 2021 @ 0x7e50 (32336) - @!P0 BRA 0x85c0 ;
Basic block id 181 - num instructions 10
 Instr 2022 @ 0x7e60 (32352) - MOV R4, RZ ;
 Instr 2023 @ 0x7e70 (32368) - ISETP.NE.AND P0, PT, R0, 0xe, PT ;
 Instr 2024 @ 0x7e80 (32384) - IMAD.HI.U32 R6, R5, c[0x0][0x20c], R4 ;
 Instr 2025 @ 0x7e90 (32400) - SHF.R.U32.HI R7, RZ, c[0x0][0x210], R6 ;
 Instr 2026 @ 0x7ea0 (32416) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 2027 @ 0x7eb0 (32432) - IMAD R5, R3, c[0x0][0x208], R5 ;
 Instr 2028 @ 0x7ec0 (32448) - IMAD R30, R5.reuse, c[0x0][0x334], R30 ;
 Instr 2029 @ 0x7ed0 (32464) - IMAD R2, R5.reuse, c[0x0][0x338], R2 ;
 Instr 2030 @ 0x7ee0 (32480) - IMAD R16, R5, c[0x0][0x33c], R16 ;
 Instr 2031 @ 0x7ef0 (32496) - @!P0 BRA 0x85c0 ;
Basic block id 182 - num instructions 10
 Instr 2032 @ 0x7f00 (32512) - MOV R6, RZ ;
 Instr 2033 @ 0x7f10 (32528) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2034 @ 0x7f20 (32544) - IMAD.HI.U32 R4, R7, c[0x0][0x218], R6 ;
 Instr 2035 @ 0x7f30 (32560) - SHF.R.U32.HI R5, RZ, c[0x0][0x21c], R4 ;
 Instr 2036 @ 0x7f40 (32576) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 2037 @ 0x7f50 (32592) - IMAD R7, R3, c[0x0][0x214], R7 ;
 Instr 2038 @ 0x7f60 (32608) - IMAD R30, R7.reuse, c[0x0][0x340], R30 ;
 Instr 2039 @ 0x7f70 (32624) - IMAD R2, R7.reuse, c[0x0][0x344], R2 ;
 Instr 2040 @ 0x7f80 (32640) - IMAD R16, R7, c[0x0][0x348], R16 ;
 Instr 2041 @ 0x7f90 (32656) - @!P0 BRA 0x85c0 ;
Basic block id 183 - num instructions 10
 Instr 2042 @ 0x7fa0 (32672) - MOV R4, RZ ;
 Instr 2043 @ 0x7fb0 (32688) - ISETP.NE.AND P0, PT, R0, 0x10, PT ;
 Instr 2044 @ 0x7fc0 (32704) - IMAD.HI.U32 R6, R5, c[0x0][0x224], R4 ;
 Instr 2045 @ 0x7fd0 (32720) - SHF.R.U32.HI R7, RZ, c[0x0][0x228], R6 ;
 Instr 2046 @ 0x7fe0 (32736) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 2047 @ 0x7ff0 (32752) - IMAD R5, R3, c[0x0][0x220], R5 ;
 Instr 2048 @ 0x8000 (32768) - IMAD R30, R5.reuse, c[0x0][0x34c], R30 ;
 Instr 2049 @ 0x8010 (32784) - IMAD R2, R5.reuse, c[0x0][0x350], R2 ;
 Instr 2050 @ 0x8020 (32800) - IMAD R16, R5, c[0x0][0x354], R16 ;
 Instr 2051 @ 0x8030 (32816) - @!P0 BRA 0x85c0 ;
Basic block id 184 - num instructions 10
 Instr 2052 @ 0x8040 (32832) - MOV R6, RZ ;
 Instr 2053 @ 0x8050 (32848) - ISETP.NE.AND P0, PT, R0, 0x11, PT ;
 Instr 2054 @ 0x8060 (32864) - IMAD.HI.U32 R4, R7, c[0x0][0x230], R6 ;
 Instr 2055 @ 0x8070 (32880) - SHF.R.U32.HI R5, RZ, c[0x0][0x234], R4 ;
 Instr 2056 @ 0x8080 (32896) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 2057 @ 0x8090 (32912) - IMAD R7, R3, c[0x0][0x22c], R7 ;
 Instr 2058 @ 0x80a0 (32928) - IMAD R30, R7.reuse, c[0x0][0x358], R30 ;
 Instr 2059 @ 0x80b0 (32944) - IMAD R2, R7.reuse, c[0x0][0x35c], R2 ;
 Instr 2060 @ 0x80c0 (32960) - IMAD R16, R7, c[0x0][0x360], R16 ;
 Instr 2061 @ 0x80d0 (32976) - @!P0 BRA 0x85c0 ;
Basic block id 185 - num instructions 10
 Instr 2062 @ 0x80e0 (32992) - MOV R4, RZ ;
 Instr 2063 @ 0x80f0 (33008) - ISETP.NE.AND P0, PT, R0, 0x12, PT ;
 Instr 2064 @ 0x8100 (33024) - IMAD.HI.U32 R6, R5, c[0x0][0x23c], R4 ;
 Instr 2065 @ 0x8110 (33040) - SHF.R.U32.HI R7, RZ, c[0x0][0x240], R6 ;
 Instr 2066 @ 0x8120 (33056) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 2067 @ 0x8130 (33072) - IMAD R5, R3, c[0x0][0x238], R5 ;
 Instr 2068 @ 0x8140 (33088) - IMAD R30, R5.reuse, c[0x0][0x364], R30 ;
 Instr 2069 @ 0x8150 (33104) - IMAD R2, R5.reuse, c[0x0][0x368], R2 ;
 Instr 2070 @ 0x8160 (33120) - IMAD R16, R5, c[0x0][0x36c], R16 ;
 Instr 2071 @ 0x8170 (33136) - @!P0 BRA 0x85c0 ;
Basic block id 186 - num instructions 10
 Instr 2072 @ 0x8180 (33152) - MOV R6, RZ ;
 Instr 2073 @ 0x8190 (33168) - ISETP.NE.AND P0, PT, R0, 0x13, PT ;
 Instr 2074 @ 0x81a0 (33184) - IMAD.HI.U32 R4, R7, c[0x0][0x248], R6 ;
 Instr 2075 @ 0x81b0 (33200) - SHF.R.U32.HI R5, RZ, c[0x0][0x24c], R4 ;
 Instr 2076 @ 0x81c0 (33216) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 2077 @ 0x81d0 (33232) - IMAD R7, R3, c[0x0][0x244], R7 ;
 Instr 2078 @ 0x81e0 (33248) - IMAD R30, R7.reuse, c[0x0][0x370], R30 ;
 Instr 2079 @ 0x81f0 (33264) - IMAD R2, R7.reuse, c[0x0][0x374], R2 ;
 Instr 2080 @ 0x8200 (33280) - IMAD R16, R7, c[0x0][0x378], R16 ;
 Instr 2081 @ 0x8210 (33296) - @!P0 BRA 0x85c0 ;
Basic block id 187 - num instructions 10
 Instr 2082 @ 0x8220 (33312) - MOV R4, RZ ;
 Instr 2083 @ 0x8230 (33328) - ISETP.NE.AND P0, PT, R0, 0x14, PT ;
 Instr 2084 @ 0x8240 (33344) - IMAD.HI.U32 R6, R5, c[0x0][0x254], R4 ;
 Instr 2085 @ 0x8250 (33360) - SHF.R.U32.HI R7, RZ, c[0x0][0x258], R6 ;
 Instr 2086 @ 0x8260 (33376) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 2087 @ 0x8270 (33392) - IMAD R5, R3, c[0x0][0x250], R5 ;
 Instr 2088 @ 0x8280 (33408) - IMAD R30, R5.reuse, c[0x0][0x37c], R30 ;
 Instr 2089 @ 0x8290 (33424) - IMAD R2, R5.reuse, c[0x0][0x380], R2 ;
 Instr 2090 @ 0x82a0 (33440) - IMAD R16, R5, c[0x0][0x384], R16 ;
 Instr 2091 @ 0x82b0 (33456) - @!P0 BRA 0x85c0 ;
Basic block id 188 - num instructions 10
 Instr 2092 @ 0x82c0 (33472) - MOV R6, RZ ;
 Instr 2093 @ 0x82d0 (33488) - ISETP.NE.AND P0, PT, R0, 0x15, PT ;
 Instr 2094 @ 0x82e0 (33504) - IMAD.HI.U32 R4, R7, c[0x0][0x260], R6 ;
 Instr 2095 @ 0x82f0 (33520) - SHF.R.U32.HI R5, RZ, c[0x0][0x264], R4 ;
 Instr 2096 @ 0x8300 (33536) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 2097 @ 0x8310 (33552) - IMAD R7, R3, c[0x0][0x25c], R7 ;
 Instr 2098 @ 0x8320 (33568) - IMAD R30, R7.reuse, c[0x0][0x388], R30 ;
 Instr 2099 @ 0x8330 (33584) - IMAD R2, R7.reuse, c[0x0][0x38c], R2 ;
 Instr 2100 @ 0x8340 (33600) - IMAD R16, R7, c[0x0][0x390], R16 ;
 Instr 2101 @ 0x8350 (33616) - @!P0 BRA 0x85c0 ;
Basic block id 189 - num instructions 10
 Instr 2102 @ 0x8360 (33632) - MOV R4, RZ ;
 Instr 2103 @ 0x8370 (33648) - ISETP.NE.AND P0, PT, R0, 0x16, PT ;
 Instr 2104 @ 0x8380 (33664) - IMAD.HI.U32 R6, R5, c[0x0][0x26c], R4 ;
 Instr 2105 @ 0x8390 (33680) - SHF.R.U32.HI R7, RZ, c[0x0][0x270], R6 ;
 Instr 2106 @ 0x83a0 (33696) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 2107 @ 0x83b0 (33712) - IMAD R5, R3, c[0x0][0x268], R5 ;
 Instr 2108 @ 0x83c0 (33728) - IMAD R30, R5.reuse, c[0x0][0x394], R30 ;
 Instr 2109 @ 0x83d0 (33744) - IMAD R2, R5.reuse, c[0x0][0x398], R2 ;
 Instr 2110 @ 0x83e0 (33760) - IMAD R16, R5, c[0x0][0x39c], R16 ;
 Instr 2111 @ 0x83f0 (33776) - @!P0 BRA 0x85c0 ;
Basic block id 190 - num instructions 10
 Instr 2112 @ 0x8400 (33792) - MOV R6, RZ ;
 Instr 2113 @ 0x8410 (33808) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2114 @ 0x8420 (33824) - IMAD.HI.U32 R4, R7, c[0x0][0x278], R6 ;
 Instr 2115 @ 0x8430 (33840) - SHF.R.U32.HI R5, RZ, c[0x0][0x27c], R4 ;
 Instr 2116 @ 0x8440 (33856) - IMAD.MOV R3, RZ, RZ, -R5 ;
 Instr 2117 @ 0x8450 (33872) - IMAD R7, R3, c[0x0][0x274], R7 ;
 Instr 2118 @ 0x8460 (33888) - IMAD R30, R7.reuse, c[0x0][0x3a0], R30 ;
 Instr 2119 @ 0x8470 (33904) - IMAD R2, R7.reuse, c[0x0][0x3a4], R2 ;
 Instr 2120 @ 0x8480 (33920) - IMAD R16, R7, c[0x0][0x3a8], R16 ;
 Instr 2121 @ 0x8490 (33936) - @!P0 BRA 0x85c0 ;
Basic block id 191 - num instructions 10
 Instr 2122 @ 0x84a0 (33952) - MOV R4, RZ ;
 Instr 2123 @ 0x84b0 (33968) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2124 @ 0x84c0 (33984) - IMAD.HI.U32 R6, R5, c[0x0][0x284], R4 ;
 Instr 2125 @ 0x84d0 (34000) - SHF.R.U32.HI R7, RZ, c[0x0][0x288], R6 ;
 Instr 2126 @ 0x84e0 (34016) - IMAD.MOV R3, RZ, RZ, -R7 ;
 Instr 2127 @ 0x84f0 (34032) - IMAD R5, R3, c[0x0][0x280], R5 ;
 Instr 2128 @ 0x8500 (34048) - IMAD R30, R5.reuse, c[0x0][0x3ac], R30 ;
 Instr 2129 @ 0x8510 (34064) - IMAD R2, R5.reuse, c[0x0][0x3b0], R2 ;
 Instr 2130 @ 0x8520 (34080) - IMAD R16, R5, c[0x0][0x3b4], R16 ;
 Instr 2131 @ 0x8530 (34096) - @!P0 BRA 0x85c0 ;
Basic block id 192 - num instructions 8
 Instr 2132 @ 0x8540 (34112) - MOV R6, RZ ;
 Instr 2133 @ 0x8550 (34128) - IMAD.HI.U32 R0, R7, c[0x0][0x290], R6 ;
 Instr 2134 @ 0x8560 (34144) - SHF.R.U32.HI R0, RZ, c[0x0][0x294], R0 ;
 Instr 2135 @ 0x8570 (34160) - IMAD.MOV R3, RZ, RZ, -R0 ;
 Instr 2136 @ 0x8580 (34176) - IMAD R7, R3, c[0x0][0x28c], R7 ;
 Instr 2137 @ 0x8590 (34192) - IMAD R30, R7.reuse, c[0x0][0x3b8], R30 ;
 Instr 2138 @ 0x85a0 (34208) - IMAD R2, R7.reuse, c[0x0][0x3bc], R2 ;
 Instr 2139 @ 0x85b0 (34224) - IMAD R16, R7, c[0x0][0x3c0], R16 ;
Basic block id 193 - num instructions 7
 Instr 2140 @ 0x85c0 (34240) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
 Instr 2141 @ 0x85d0 (34256) - IMAD.MOV.U32 R23, RZ, RZ, RZ ;
 Instr 2142 @ 0x85e0 (34272) - IADD3 R30, P1, R30, c[0x0][0x3c8], RZ ;
 Instr 2143 @ 0x85f0 (34288) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x3dc], PT, P0 ;
 Instr 2144 @ 0x8600 (34304) - MOV R24, RZ ;
 Instr 2145 @ 0x8610 (34320) - IADD3.X R31, RZ, c[0x0][0x3cc], RZ, P1, !PT ;
 Instr 2146 @ 0x8620 (34336) - @!P0 BRA 0x9c90 ;
Basic block id 194 - num instructions 11
 Instr 2147 @ 0x8630 (34352) - IMAD.MOV.U32 R17, RZ, RZ, c[0x0][0x3d8] ;
 Instr 2148 @ 0x8640 (34368) - MOV R18, c[0x0][0x3dc] ;
 Instr 2149 @ 0x8650 (34384) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 2150 @ 0x8660 (34400) - MOV R23, RZ ;
 Instr 2151 @ 0x8670 (34416) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 2152 @ 0x8680 (34432) - IADD3 R0, P1, R17.reuse, -0x1, RZ ;
 Instr 2153 @ 0x8690 (34448) - LOP3.LUT R17, R17, 0x3, RZ, 0xc0, !PT ;
 Instr 2154 @ 0x86a0 (34464) - ISETP.GE.U32.AND P0, PT, R0, 0x3, PT ;
 Instr 2155 @ 0x86b0 (34480) - IADD3.X R0, R18, -0x1, RZ, P1, !PT ;
 Instr 2156 @ 0x86c0 (34496) - ISETP.GE.U32.AND.EX P0, PT, R0, RZ, PT, P0 ;
 Instr 2157 @ 0x86d0 (34512) - @!P0 BRA 0x9340 ;
Basic block id 195 - num instructions 4
 Instr 2158 @ 0x86e0 (34528) - IADD3 R22, P0, -R17, c[0x0][0x3d8], RZ ;
 Instr 2159 @ 0x86f0 (34544) - BMOV.32.CLEAR RZ, B7 ;
 Instr 2160 @ 0x8700 (34560) - BSSY B7, 0x9340 ;
 Instr 2161 @ 0x8710 (34576) - IADD3.X R18, R18, -0x1, RZ, P0, !PT ;
Basic block id 196 - num instructions 17
 Instr 2162 @ 0x8720 (34592) - MOV R25, 0x8 ;
 Instr 2163 @ 0x8730 (34608) - IMAD R25, R26, R25, c[0x2][0x0] ;
 Instr 2164 @ 0x8740 (34624) - LDC.64 R4, c[0x0][R25+0x3d8] ;
 Instr 2165 @ 0x8750 (34640) - IADD3 R6, P0, R4, R16, RZ ;
 Instr 2166 @ 0x8760 (34656) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 2167 @ 0x8770 (34672) - LDG.E.64.SYS R28, [R6] ;
 Instr 2168 @ 0x8780 (34688) - LDC.64 R4, c[0x0][R25+0x4a0] ;
 Instr 2169 @ 0x8790 (34704) - BMOV.32.CLEAR RZ, B6 ;
 Instr 2170 @ 0x87a0 (34720) - BSSY B6, 0x8960 ;
 Instr 2171 @ 0x87b0 (34736) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 2172 @ 0x87c0 (34752) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 2173 @ 0x87d0 (34768) - ISETP.GE.U32.AND P0, PT, R28.reuse, R4, PT ;
 Instr 2174 @ 0x87e0 (34784) - IMAD.MOV.U32 R19, RZ, RZ, R29 ;
 Instr 2175 @ 0x87f0 (34800) - ISETP.GE.U32.AND P1, PT, R28, R0, PT ;
 Instr 2176 @ 0x8800 (34816) - ISETP.GE.AND.EX P0, PT, R29.reuse, R5, PT, P0 ;
 Instr 2177 @ 0x8810 (34832) - ISETP.GE.AND.EX P1, PT, R29, R3, PT, P1 ;
 Instr 2178 @ 0x8820 (34848) - @!P0 BRA P1, 0x8950 ;
Basic block id 197 - num instructions 18
 Instr 2179 @ 0x8830 (34864) - UMOV UR4, 0xd99fbf00 ;
 Instr 2180 @ 0x8840 (34880) - MOV R8, 0x5d ;
 Instr 2181 @ 0x8850 (34896) - UMOV UR5, 0x7f88 ;
 Instr 2182 @ 0x8860 (34912) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2183 @ 0x8870 (34928) - UMOV UR6, 0xd99fbe00 ;
 Instr 2184 @ 0x8880 (34944) - MOV R13, RZ ;
 Instr 2185 @ 0x8890 (34960) - UMOV UR7, 0x7f88 ;
 Instr 2186 @ 0x88a0 (34976) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2187 @ 0x88b0 (34992) - UMOV UR8, 0xd99f4600 ;
 Instr 2188 @ 0x88c0 (35008) - MOV R5, UR5 ;
 Instr 2189 @ 0x88d0 (35024) - UMOV UR9, 0x7f88 ;
 Instr 2190 @ 0x88e0 (35040) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2191 @ 0x88f0 (35056) - MOV R7, UR7 ;
 Instr 2192 @ 0x8900 (35072) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2193 @ 0x8910 (35088) - MOV R11, UR9 ;
 Instr 2194 @ 0x8920 (35104) - MOV R20, 0xae55950 ;
 Instr 2195 @ 0x8930 (35120) - MOV R21, 0x7f89 ;
 Instr 2196 @ 0x8940 (35136) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 198 - num instructions 28
 Instr 2197 @ 0x8950 (35152) - BSYNC B6 ;
 Instr 2198 @ 0x8960 (35168) - LDC.64 R4, c[0x0][R25+0x3e0] ;
 Instr 2199 @ 0x8970 (35184) - IADD3 R8, P0, R4, R16, RZ ;
 Instr 2200 @ 0x8980 (35200) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 2201 @ 0x8990 (35216) - LDG.E.64.SYS R36, [R8] ;
 Instr 2202 @ 0x89a0 (35232) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 2203 @ 0x89b0 (35248) - LDC.64 R6, c[0x0][R25+0x4a8] ;
 Instr 2204 @ 0x89c0 (35264) - BMOV.32.CLEAR RZ, B6 ;
 Instr 2205 @ 0x89d0 (35280) - BSSY B6, 0x8c40 ;
 Instr 2206 @ 0x89e0 (35296) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 2207 @ 0x89f0 (35312) - MOV R9, R23 ;
 Instr 2208 @ 0x8a00 (35328) - LDC.64 R4, c[0x0][R25+0x568] ;
 Instr 2209 @ 0x8a10 (35344) - IMAD.MOV.U32 R8, RZ, RZ, R24 ;
 Instr 2210 @ 0x8a20 (35360) - @!P0 LDC.64 R10, c[0x0][R25+0x4a0] ;
 Instr 2211 @ 0x8a30 (35376) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 2212 @ 0x8a40 (35392) - IMAD.X R3, RZ, RZ, ~R7, P1 ;
 Instr 2213 @ 0x8a50 (35408) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 2214 @ 0x8a60 (35424) - @!P0 IADD3.X R19, R11, R19, RZ, P2, !PT ;
 Instr 2215 @ 0x8a70 (35440) - ISETP.GE.U32.AND P0, PT, R36, R0, PT ;
 Instr 2216 @ 0x8a80 (35456) - IMAD R0, R5, R28, RZ ;
 Instr 2217 @ 0x8a90 (35472) - ISETP.GE.U32.AND P2, PT, R36, R6, PT ;
 Instr 2218 @ 0x8aa0 (35488) - IMAD.WIDE.U32 R28, R4.reuse, R28, R8 ;
 Instr 2219 @ 0x8ab0 (35504) - ISETP.GE.AND.EX P0, PT, R37.reuse, R3, PT, P0 ;
 Instr 2220 @ 0x8ac0 (35520) - ISETP.GE.AND.EX P1, PT, R37, R7, PT, P2 ;
 Instr 2221 @ 0x8ad0 (35536) - IMAD R23, R4, R19, R0 ;
 Instr 2222 @ 0x8ae0 (35552) - MOV R19, R37 ;
 Instr 2223 @ 0x8af0 (35568) - IMAD.IADD R23, R29, 0x1, R23 ;
 Instr 2224 @ 0x8b00 (35584) - @!P1 BRA P0, 0x8c30 ;
Basic block id 199 - num instructions 18
 Instr 2225 @ 0x8b10 (35600) - UMOV UR4, 0xd99fbf00 ;
 Instr 2226 @ 0x8b20 (35616) - MOV R8, 0x5d ;
 Instr 2227 @ 0x8b30 (35632) - UMOV UR5, 0x7f88 ;
 Instr 2228 @ 0x8b40 (35648) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2229 @ 0x8b50 (35664) - UMOV UR6, 0xd99fbe00 ;
 Instr 2230 @ 0x8b60 (35680) - MOV R13, RZ ;
 Instr 2231 @ 0x8b70 (35696) - UMOV UR7, 0x7f88 ;
 Instr 2232 @ 0x8b80 (35712) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2233 @ 0x8b90 (35728) - UMOV UR8, 0xd99f4600 ;
 Instr 2234 @ 0x8ba0 (35744) - MOV R5, UR5 ;
 Instr 2235 @ 0x8bb0 (35760) - UMOV UR9, 0x7f88 ;
 Instr 2236 @ 0x8bc0 (35776) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2237 @ 0x8bd0 (35792) - MOV R7, UR7 ;
 Instr 2238 @ 0x8be0 (35808) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2239 @ 0x8bf0 (35824) - MOV R11, UR9 ;
 Instr 2240 @ 0x8c00 (35840) - MOV R20, 0xae55c30 ;
 Instr 2241 @ 0x8c10 (35856) - MOV R21, 0x7f89 ;
 Instr 2242 @ 0x8c20 (35872) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 200 - num instructions 20
 Instr 2243 @ 0x8c30 (35888) - BSYNC B6 ;
 Instr 2244 @ 0x8c40 (35904) - LDC.64 R4, c[0x0][R25+0x3e8] ;
 Instr 2245 @ 0x8c50 (35920) - IADD3 R8, P0, R4, R16, RZ ;
 Instr 2246 @ 0x8c60 (35936) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 2247 @ 0x8c70 (35952) - LDG.E.64.SYS R8, [R8] ;
 Instr 2248 @ 0x8c80 (35968) - ISETP.GT.U32.AND P0, PT, R36, -0x1, PT ;
 Instr 2249 @ 0x8c90 (35984) - LDC.64 R6, c[0x0][R25+0x4b0] ;
 Instr 2250 @ 0x8ca0 (36000) - MOV R29, R23 ;
 Instr 2251 @ 0x8cb0 (36016) - BMOV.32.CLEAR RZ, B6 ;
 Instr 2252 @ 0x8cc0 (36032) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 2253 @ 0x8cd0 (36048) - BSSY B6, 0x8f20 ;
 Instr 2254 @ 0x8ce0 (36064) - LDC.64 R4, c[0x0][R25+0x570] ;
 Instr 2255 @ 0x8cf0 (36080) - @!P0 LDC.64 R10, c[0x0][R25+0x4a8] ;
 Instr 2256 @ 0x8d00 (36096) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 2257 @ 0x8d10 (36112) - IADD3.X R3, RZ, ~R7, RZ, P1, !PT ;
 Instr 2258 @ 0x8d20 (36128) - @!P0 IADD3 R36, P2, R10, R36, RZ ;
 Instr 2259 @ 0x8d30 (36144) - @!P0 IMAD.X R19, R11, 0x1, R19, P2 ;
 Instr 2260 @ 0x8d40 (36160) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 2261 @ 0x8d50 (36176) - IMAD R0, R5, R36, RZ ;
 Instr 2262 @ 0x8d60 (36192) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 201 - num instructions 8
 Instr 2263 @ 0x8d70 (36208) - IMAD.WIDE.U32 R36, R4.reuse, R36, R28 ;
 Instr 2264 @ 0x8d80 (36224) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 2265 @ 0x8d90 (36240) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 2266 @ 0x8da0 (36256) - IMAD R23, R4, R19, R0 ;
 Instr 2267 @ 0x8db0 (36272) - MOV R19, R9 ;
 Instr 2268 @ 0x8dc0 (36288) - IMAD.MOV.U32 R28, RZ, RZ, R8 ;
 Instr 2269 @ 0x8dd0 (36304) - IMAD.IADD R23, R37, 0x1, R23 ;
 Instr 2270 @ 0x8de0 (36320) - @!P1 BRA P0, 0x8f10 ;
Basic block id 202 - num instructions 18
 Instr 2271 @ 0x8df0 (36336) - UMOV UR4, 0xd99fbf00 ;
 Instr 2272 @ 0x8e00 (36352) - MOV R8, 0x5d ;
 Instr 2273 @ 0x8e10 (36368) - UMOV UR5, 0x7f88 ;
 Instr 2274 @ 0x8e20 (36384) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2275 @ 0x8e30 (36400) - UMOV UR6, 0xd99fbe00 ;
 Instr 2276 @ 0x8e40 (36416) - MOV R13, RZ ;
 Instr 2277 @ 0x8e50 (36432) - UMOV UR7, 0x7f88 ;
 Instr 2278 @ 0x8e60 (36448) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2279 @ 0x8e70 (36464) - UMOV UR8, 0xd99f4600 ;
 Instr 2280 @ 0x8e80 (36480) - MOV R5, UR5 ;
 Instr 2281 @ 0x8e90 (36496) - UMOV UR9, 0x7f88 ;
 Instr 2282 @ 0x8ea0 (36512) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2283 @ 0x8eb0 (36528) - MOV R7, UR7 ;
 Instr 2284 @ 0x8ec0 (36544) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2285 @ 0x8ed0 (36560) - MOV R11, UR9 ;
 Instr 2286 @ 0x8ee0 (36576) - MOV R20, 0xae55f10 ;
 Instr 2287 @ 0x8ef0 (36592) - MOV R21, 0x7f89 ;
 Instr 2288 @ 0x8f00 (36608) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 203 - num instructions 20
 Instr 2289 @ 0x8f10 (36624) - BSYNC B6 ;
 Instr 2290 @ 0x8f20 (36640) - LDC.64 R4, c[0x0][R25+0x3f0] ;
 Instr 2291 @ 0x8f30 (36656) - IADD3 R8, P0, R4, R16, RZ ;
 Instr 2292 @ 0x8f40 (36672) - IMAD.X R9, RZ, RZ, R5, P0 ;
 Instr 2293 @ 0x8f50 (36688) - LDG.E.64.SYS R8, [R8] ;
 Instr 2294 @ 0x8f60 (36704) - ISETP.GT.U32.AND P0, PT, R28, -0x1, PT ;
 Instr 2295 @ 0x8f70 (36720) - LDC.64 R6, c[0x0][R25+0x4b8] ;
 Instr 2296 @ 0x8f80 (36736) - MOV R37, R23 ;
 Instr 2297 @ 0x8f90 (36752) - BMOV.32.CLEAR RZ, B6 ;
 Instr 2298 @ 0x8fa0 (36768) - ISETP.GT.AND.EX P0, PT, R19, -0x1, PT, P0 ;
 Instr 2299 @ 0x8fb0 (36784) - BSSY B6, 0x9200 ;
 Instr 2300 @ 0x8fc0 (36800) - LDC.64 R4, c[0x0][R25+0x578] ;
 Instr 2301 @ 0x8fd0 (36816) - @!P0 LDC.64 R10, c[0x0][R25+0x4b0] ;
 Instr 2302 @ 0x8fe0 (36832) - IADD3 R0, P1, RZ, -R6, RZ ;
 Instr 2303 @ 0x8ff0 (36848) - IADD3.X R3, RZ, ~R7, RZ, P1, !PT ;
 Instr 2304 @ 0x9000 (36864) - @!P0 IADD3 R28, P2, R10, R28, RZ ;
 Instr 2305 @ 0x9010 (36880) - @!P0 IMAD.X R19, R11, 0x1, R19, P2 ;
 Instr 2306 @ 0x9020 (36896) - ISETP.GE.U32.AND P0, PT, R8, R0, PT ;
 Instr 2307 @ 0x9030 (36912) - IMAD R0, R5, R28, RZ ;
 Instr 2308 @ 0x9040 (36928) - ISETP.GE.U32.AND P2, PT, R8, R6, PT ;
Basic block id 204 - num instructions 8
 Instr 2309 @ 0x9050 (36944) - IMAD.WIDE.U32 R28, R4.reuse, R28, R36 ;
 Instr 2310 @ 0x9060 (36960) - ISETP.GE.AND.EX P0, PT, R9.reuse, R3, PT, P0 ;
 Instr 2311 @ 0x9070 (36976) - ISETP.GE.AND.EX P1, PT, R9, R7, PT, P2 ;
 Instr 2312 @ 0x9080 (36992) - IMAD R19, R4, R19, R0 ;
 Instr 2313 @ 0x9090 (37008) - MOV R23, R9 ;
 Instr 2314 @ 0x90a0 (37024) - IMAD.MOV.U32 R24, RZ, RZ, R8 ;
 Instr 2315 @ 0x90b0 (37040) - IMAD.IADD R19, R29, 0x1, R19 ;
 Instr 2316 @ 0x90c0 (37056) - @!P1 BRA P0, 0x91f0 ;
Basic block id 205 - num instructions 18
 Instr 2317 @ 0x90d0 (37072) - UMOV UR4, 0xd99fbf00 ;
 Instr 2318 @ 0x90e0 (37088) - MOV R8, 0x5d ;
 Instr 2319 @ 0x90f0 (37104) - UMOV UR5, 0x7f88 ;
 Instr 2320 @ 0x9100 (37120) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2321 @ 0x9110 (37136) - UMOV UR6, 0xd99fbe00 ;
 Instr 2322 @ 0x9120 (37152) - MOV R13, RZ ;
 Instr 2323 @ 0x9130 (37168) - UMOV UR7, 0x7f88 ;
 Instr 2324 @ 0x9140 (37184) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2325 @ 0x9150 (37200) - UMOV UR8, 0xd99f4600 ;
 Instr 2326 @ 0x9160 (37216) - MOV R5, UR5 ;
 Instr 2327 @ 0x9170 (37232) - UMOV UR9, 0x7f88 ;
 Instr 2328 @ 0x9180 (37248) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2329 @ 0x9190 (37264) - MOV R7, UR7 ;
 Instr 2330 @ 0x91a0 (37280) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2331 @ 0x91b0 (37296) - MOV R11, UR9 ;
 Instr 2332 @ 0x91c0 (37312) - MOV R20, 0xae561f0 ;
 Instr 2333 @ 0x91d0 (37328) - MOV R21, 0x7f89 ;
 Instr 2334 @ 0x91e0 (37344) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 206 - num instructions 20
 Instr 2335 @ 0x91f0 (37360) - BSYNC B6 ;
 Instr 2336 @ 0x9200 (37376) - ISETP.GT.U32.AND P0, PT, R24, -0x1, PT ;
 Instr 2337 @ 0x9210 (37392) - LDC.64 R4, c[0x0][R25+0x580] ;
 Instr 2338 @ 0x9220 (37408) - IADD3 R22, P2, R22, -0x4, RZ ;
 Instr 2339 @ 0x9230 (37424) - IMAD.MOV.U32 R6, RZ, RZ, R28 ;
 Instr 2340 @ 0x9240 (37440) - ISETP.GT.AND.EX P0, PT, R23, -0x1, PT, P0 ;
 Instr 2341 @ 0x9250 (37456) - IADD3.X R18, R18, -0x1, RZ, P2, !PT ;
 Instr 2342 @ 0x9260 (37472) - MOV R7, R19 ;
 Instr 2343 @ 0x9270 (37488) - IADD3 R26, R26, 0x4, RZ ;
 Instr 2344 @ 0x9280 (37504) - @!P0 LDC.64 R8, c[0x0][R25+0x4b8] ;
 Instr 2345 @ 0x9290 (37520) - @!P0 IADD3 R24, P1, R8, R24, RZ ;
 Instr 2346 @ 0x92a0 (37536) - @!P0 IMAD.X R23, R9, 0x1, R23, P1 ;
 Instr 2347 @ 0x92b0 (37552) - ISETP.NE.U32.AND P0, PT, R22, RZ, PT ;
 Instr 2348 @ 0x92c0 (37568) - IMAD R0, R5, R24.reuse, RZ ;
 Instr 2349 @ 0x92d0 (37584) - IMAD.WIDE.U32 R6, R4, R24, R6 ;
 Instr 2350 @ 0x92e0 (37600) - ISETP.NE.AND.EX P0, PT, R18, RZ, PT, P0 ;
 Instr 2351 @ 0x92f0 (37616) - IMAD R23, R4, R23, R0 ;
 Instr 2352 @ 0x9300 (37632) - MOV R24, R6 ;
 Instr 2353 @ 0x9310 (37648) - IMAD.IADD R23, R7, 0x1, R23 ;
 Instr 2354 @ 0x9320 (37664) - @P0 BRA 0x8720 ;
Basic block id 207 - num instructions 1
 Instr 2355 @ 0x9330 (37680) - BSYNC B7 ;
Basic block id 208 - num instructions 3
 Instr 2356 @ 0x9340 (37696) - ISETP.NE.U32.AND P0, PT, R17, RZ, PT ;
 Instr 2357 @ 0x9350 (37712) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 2358 @ 0x9360 (37728) - @!P0 BRA 0x9c90 ;
Basic block id 209 - num instructions 16
 Instr 2359 @ 0x9370 (37744) - MOV R3, 0x8 ;
 Instr 2360 @ 0x9380 (37760) - IMAD R26, R26, R3, c[0x2][0x0] ;
 Instr 2361 @ 0x9390 (37776) - LDC.64 R4, c[0x0][R26+0x3d8] ;
 Instr 2362 @ 0x93a0 (37792) - IADD3 R6, P0, R4, R16, RZ ;
 Instr 2363 @ 0x93b0 (37808) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 2364 @ 0x93c0 (37824) - LDG.E.64.SYS R6, [R6] ;
 Instr 2365 @ 0x93d0 (37840) - LDC.64 R4, c[0x0][R26+0x4a0] ;
 Instr 2366 @ 0x93e0 (37856) - BMOV.32.CLEAR RZ, B6 ;
 Instr 2367 @ 0x93f0 (37872) - BSSY B6, 0x95c0 ;
 Instr 2368 @ 0x9400 (37888) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 2369 @ 0x9410 (37904) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 2370 @ 0x9420 (37920) - ISETP.GE.U32.AND P0, PT, R6.reuse, R4, PT ;
 Instr 2371 @ 0x9430 (37936) - IMAD.MOV.U32 R19, RZ, RZ, R6 ;
 Instr 2372 @ 0x9440 (37952) - ISETP.GE.U32.AND P1, PT, R6, R0, PT ;
 Instr 2373 @ 0x9450 (37968) - ISETP.GE.AND.EX P0, PT, R7.reuse, R5, PT, P0 ;
 Instr 2374 @ 0x9460 (37984) - ISETP.GE.AND.EX P1, PT, R7, R3, PT, P1 ;
Basic block id 210 - num instructions 2
 Instr 2375 @ 0x9470 (38000) - MOV R18, R7 ;
 Instr 2376 @ 0x9480 (38016) - @!P0 BRA P1, 0x95b0 ;
Basic block id 211 - num instructions 18
 Instr 2377 @ 0x9490 (38032) - UMOV UR4, 0xd99fbf00 ;
 Instr 2378 @ 0x94a0 (38048) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 2379 @ 0x94b0 (38064) - UMOV UR5, 0x7f88 ;
 Instr 2380 @ 0x94c0 (38080) - MOV R12, 0x1 ;
 Instr 2381 @ 0x94d0 (38096) - UMOV UR6, 0xd99fbe00 ;
 Instr 2382 @ 0x94e0 (38112) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2383 @ 0x94f0 (38128) - UMOV UR7, 0x7f88 ;
 Instr 2384 @ 0x9500 (38144) - MOV R4, UR4 ;
 Instr 2385 @ 0x9510 (38160) - UMOV UR8, 0xd99f4600 ;
 Instr 2386 @ 0x9520 (38176) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2387 @ 0x9530 (38192) - UMOV UR9, 0x7f88 ;
 Instr 2388 @ 0x9540 (38208) - MOV R6, UR6 ;
 Instr 2389 @ 0x9550 (38224) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2390 @ 0x9560 (38240) - MOV R10, UR8 ;
 Instr 2391 @ 0x9570 (38256) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2392 @ 0x9580 (38272) - MOV R20, 0xae565b0 ;
 Instr 2393 @ 0x9590 (38288) - MOV R21, 0x7f89 ;
 Instr 2394 @ 0x95a0 (38304) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 212 - num instructions 15
 Instr 2395 @ 0x95b0 (38320) - BSYNC B6 ;
 Instr 2396 @ 0x95c0 (38336) - ISETP.GT.U32.AND P0, PT, R19, -0x1, PT ;
 Instr 2397 @ 0x95d0 (38352) - LDC.64 R4, c[0x0][R26+0x568] ;
 Instr 2398 @ 0x95e0 (38368) - IMAD.MOV.U32 R25, RZ, RZ, R23 ;
 Instr 2399 @ 0x95f0 (38384) - ISETP.GT.AND.EX P0, PT, R18, -0x1, PT, P0 ;
 Instr 2400 @ 0x9600 (38400) - @!P0 LDC.64 R6, c[0x0][R26+0x4a0] ;
 Instr 2401 @ 0x9610 (38416) - @!P0 IADD3 R19, P1, R6, R19, RZ ;
 Instr 2402 @ 0x9620 (38432) - @!P0 IADD3.X R18, R7, R18, RZ, P1, !PT ;
 Instr 2403 @ 0x9630 (38448) - IMAD R3, R5, R19.reuse, RZ ;
 Instr 2404 @ 0x9640 (38464) - ISETP.NE.U32.AND P0, PT, R17, 0x1, PT ;
 Instr 2405 @ 0x9650 (38480) - IMAD.WIDE.U32 R24, R4, R19, R24 ;
 Instr 2406 @ 0x9660 (38496) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 2407 @ 0x9670 (38512) - IMAD R3, R4, R18, R3 ;
 Instr 2408 @ 0x9680 (38528) - IADD3 R23, R25, R3, RZ ;
 Instr 2409 @ 0x9690 (38544) - @!P0 BRA 0x9c90 ;
Basic block id 213 - num instructions 14
 Instr 2410 @ 0x96a0 (38560) - LDC.64 R4, c[0x0][R26+0x3e0] ;
 Instr 2411 @ 0x96b0 (38576) - IADD3 R6, P0, R4, R16, RZ ;
 Instr 2412 @ 0x96c0 (38592) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 2413 @ 0x96d0 (38608) - LDG.E.64.SYS R6, [R6] ;
 Instr 2414 @ 0x96e0 (38624) - LDC.64 R4, c[0x0][R26+0x4a8] ;
 Instr 2415 @ 0x96f0 (38640) - BMOV.32.CLEAR RZ, B6 ;
 Instr 2416 @ 0x9700 (38656) - BSSY B6, 0x98d0 ;
 Instr 2417 @ 0x9710 (38672) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 2418 @ 0x9720 (38688) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 2419 @ 0x9730 (38704) - ISETP.GE.U32.AND P0, PT, R6.reuse, R4, PT ;
 Instr 2420 @ 0x9740 (38720) - IMAD.MOV.U32 R19, RZ, RZ, R6 ;
 Instr 2421 @ 0x9750 (38736) - ISETP.GE.U32.AND P1, PT, R6, R0, PT ;
 Instr 2422 @ 0x9760 (38752) - ISETP.GE.AND.EX P0, PT, R7.reuse, R5, PT, P0 ;
 Instr 2423 @ 0x9770 (38768) - ISETP.GE.AND.EX P1, PT, R7, R3, PT, P1 ;
Basic block id 214 - num instructions 2
 Instr 2424 @ 0x9780 (38784) - MOV R18, R7 ;
 Instr 2425 @ 0x9790 (38800) - @!P0 BRA P1, 0x98c0 ;
Basic block id 215 - num instructions 18
 Instr 2426 @ 0x97a0 (38816) - UMOV UR4, 0xd99fbf00 ;
 Instr 2427 @ 0x97b0 (38832) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 2428 @ 0x97c0 (38848) - UMOV UR5, 0x7f88 ;
 Instr 2429 @ 0x97d0 (38864) - MOV R12, 0x1 ;
 Instr 2430 @ 0x97e0 (38880) - UMOV UR6, 0xd99fbe00 ;
 Instr 2431 @ 0x97f0 (38896) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2432 @ 0x9800 (38912) - UMOV UR7, 0x7f88 ;
 Instr 2433 @ 0x9810 (38928) - MOV R4, UR4 ;
 Instr 2434 @ 0x9820 (38944) - UMOV UR8, 0xd99f4600 ;
 Instr 2435 @ 0x9830 (38960) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2436 @ 0x9840 (38976) - UMOV UR9, 0x7f88 ;
 Instr 2437 @ 0x9850 (38992) - MOV R6, UR6 ;
 Instr 2438 @ 0x9860 (39008) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2439 @ 0x9870 (39024) - MOV R10, UR8 ;
 Instr 2440 @ 0x9880 (39040) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2441 @ 0x9890 (39056) - MOV R20, 0xae568c0 ;
 Instr 2442 @ 0x98a0 (39072) - MOV R21, 0x7f89 ;
 Instr 2443 @ 0x98b0 (39088) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 216 - num instructions 15
 Instr 2444 @ 0x98c0 (39104) - BSYNC B6 ;
 Instr 2445 @ 0x98d0 (39120) - ISETP.GT.U32.AND P0, PT, R19, -0x1, PT ;
 Instr 2446 @ 0x98e0 (39136) - LDC.64 R4, c[0x0][R26+0x570] ;
 Instr 2447 @ 0x98f0 (39152) - IMAD.MOV.U32 R25, RZ, RZ, R23 ;
 Instr 2448 @ 0x9900 (39168) - ISETP.GT.AND.EX P0, PT, R18, -0x1, PT, P0 ;
 Instr 2449 @ 0x9910 (39184) - @!P0 LDC.64 R6, c[0x0][R26+0x4a8] ;
 Instr 2450 @ 0x9920 (39200) - @!P0 IADD3 R19, P1, R6, R19, RZ ;
 Instr 2451 @ 0x9930 (39216) - @!P0 IADD3.X R18, R7, R18, RZ, P1, !PT ;
 Instr 2452 @ 0x9940 (39232) - IMAD R3, R5, R19.reuse, RZ ;
 Instr 2453 @ 0x9950 (39248) - ISETP.NE.U32.AND P0, PT, R17, 0x2, PT ;
 Instr 2454 @ 0x9960 (39264) - IMAD.WIDE.U32 R24, R4, R19, R24 ;
 Instr 2455 @ 0x9970 (39280) - ISETP.NE.AND.EX P0, PT, RZ, RZ, PT, P0 ;
 Instr 2456 @ 0x9980 (39296) - IMAD R3, R4, R18, R3 ;
 Instr 2457 @ 0x9990 (39312) - IADD3 R23, R25, R3, RZ ;
 Instr 2458 @ 0x99a0 (39328) - @!P0 BRA 0x9c90 ;
Basic block id 217 - num instructions 14
 Instr 2459 @ 0x99b0 (39344) - LDC.64 R4, c[0x0][R26+0x3e8] ;
 Instr 2460 @ 0x99c0 (39360) - IADD3 R6, P0, R4, R16, RZ ;
 Instr 2461 @ 0x99d0 (39376) - IMAD.X R7, RZ, RZ, R5, P0 ;
 Instr 2462 @ 0x99e0 (39392) - LDG.E.64.SYS R6, [R6] ;
 Instr 2463 @ 0x99f0 (39408) - LDC.64 R4, c[0x0][R26+0x4b0] ;
 Instr 2464 @ 0x9a00 (39424) - BMOV.32.CLEAR RZ, B6 ;
 Instr 2465 @ 0x9a10 (39440) - BSSY B6, 0x9be0 ;
 Instr 2466 @ 0x9a20 (39456) - IADD3 R0, P0, RZ, -R4, RZ ;
 Instr 2467 @ 0x9a30 (39472) - IADD3.X R3, RZ, ~R5.reuse, RZ, P0, !PT ;
 Instr 2468 @ 0x9a40 (39488) - ISETP.GE.U32.AND P0, PT, R6.reuse, R4, PT ;
 Instr 2469 @ 0x9a50 (39504) - IMAD.MOV.U32 R17, RZ, RZ, R6 ;
 Instr 2470 @ 0x9a60 (39520) - ISETP.GE.U32.AND P1, PT, R6, R0, PT ;
 Instr 2471 @ 0x9a70 (39536) - ISETP.GE.AND.EX P0, PT, R7.reuse, R5, PT, P0 ;
 Instr 2472 @ 0x9a80 (39552) - ISETP.GE.AND.EX P1, PT, R7, R3, PT, P1 ;
Basic block id 218 - num instructions 2
 Instr 2473 @ 0x9a90 (39568) - MOV R16, R7 ;
 Instr 2474 @ 0x9aa0 (39584) - @!P0 BRA P1, 0x9bd0 ;
Basic block id 219 - num instructions 18
 Instr 2475 @ 0x9ab0 (39600) - UMOV UR4, 0xd99fbf00 ;
 Instr 2476 @ 0x9ac0 (39616) - IMAD.MOV.U32 R8, RZ, RZ, 0x5d ;
 Instr 2477 @ 0x9ad0 (39632) - UMOV UR5, 0x7f88 ;
 Instr 2478 @ 0x9ae0 (39648) - MOV R12, 0x1 ;
 Instr 2479 @ 0x9af0 (39664) - UMOV UR6, 0xd99fbe00 ;
 Instr 2480 @ 0x9b00 (39680) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2481 @ 0x9b10 (39696) - UMOV UR7, 0x7f88 ;
 Instr 2482 @ 0x9b20 (39712) - MOV R4, UR4 ;
 Instr 2483 @ 0x9b30 (39728) - UMOV UR8, 0xd99f4600 ;
 Instr 2484 @ 0x9b40 (39744) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2485 @ 0x9b50 (39760) - UMOV UR9, 0x7f88 ;
 Instr 2486 @ 0x9b60 (39776) - MOV R6, UR6 ;
 Instr 2487 @ 0x9b70 (39792) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2488 @ 0x9b80 (39808) - MOV R10, UR8 ;
 Instr 2489 @ 0x9b90 (39824) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2490 @ 0x9ba0 (39840) - MOV R20, 0xae56bd0 ;
 Instr 2491 @ 0x9bb0 (39856) - MOV R21, 0x7f89 ;
 Instr 2492 @ 0x9bc0 (39872) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 220 - num instructions 12
 Instr 2493 @ 0x9bd0 (39888) - BSYNC B6 ;
 Instr 2494 @ 0x9be0 (39904) - ISETP.GT.U32.AND P0, PT, R17, -0x1, PT ;
 Instr 2495 @ 0x9bf0 (39920) - LDC.64 R4, c[0x0][R26+0x578] ;
 Instr 2496 @ 0x9c00 (39936) - IMAD.MOV.U32 R25, RZ, RZ, R23 ;
 Instr 2497 @ 0x9c10 (39952) - ISETP.GT.AND.EX P0, PT, R16, -0x1, PT, P0 ;
 Instr 2498 @ 0x9c20 (39968) - @!P0 LDC.64 R6, c[0x0][R26+0x4b0] ;
 Instr 2499 @ 0x9c30 (39984) - @!P0 IADD3 R17, P1, R6, R17, RZ ;
 Instr 2500 @ 0x9c40 (40000) - @!P0 IADD3.X R16, R7, R16, RZ, P1, !PT ;
 Instr 2501 @ 0x9c50 (40016) - IMAD R3, R5, R17.reuse, RZ ;
 Instr 2502 @ 0x9c60 (40032) - IMAD.WIDE.U32 R24, R4, R17, R24 ;
 Instr 2503 @ 0x9c70 (40048) - IMAD R3, R4, R16, R3 ;
 Instr 2504 @ 0x9c80 (40064) - IADD3 R23, R25, R3, RZ ;
Basic block id 221 - num instructions 6
 Instr 2505 @ 0x9c90 (40080) - IADD3 R2, P0, P1, R24, c[0x0][0x3d0], R2 ;
 Instr 2506 @ 0x9ca0 (40096) - IADD3.X R3, R23, c[0x0][0x3d4], RZ, P0, P1 ;
 Instr 2507 @ 0x9cb0 (40112) - LDG.E.U16.SYS R2, [R2] ;
 Instr 2508 @ 0x9cc0 (40128) - PRMT R5, R2, 0x7710, RZ ;
 Instr 2509 @ 0x9cd0 (40144) - STG.E.U16.SYS [R30], R5 ;
 Instr 2510 @ 0x9ce0 (40160) - EXIT ;
Basic block id 222 - num instructions 1
 Instr 2511 @ 0x9cf0 (40176) - BRA 0x9cf0;
inspecting void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1} const&)::{lambda(int)#1}>(long, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<2> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char const*, long)#1} const&)::{lambda(int)#1}) - number basic blocks 223
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 11 @ 0xb0 (176) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
Inject count_instr before - Instr 15 @ 0xf0 (240) - MOV R16, RZ ;
Inject count_instr before - Instr 26 @ 0x1a0 (416) - MOV R2, RZ ;
Inject count_instr before - Instr 36 @ 0x240 (576) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 46 @ 0x2e0 (736) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 56 @ 0x380 (896) - MOV R4, RZ ;
Inject count_instr before - Instr 66 @ 0x420 (1056) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 76 @ 0x4c0 (1216) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 86 @ 0x560 (1376) - MOV R2, RZ ;
Inject count_instr before - Instr 96 @ 0x600 (1536) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 106 @ 0x6a0 (1696) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 116 @ 0x740 (1856) - MOV R4, RZ ;
Inject count_instr before - Instr 126 @ 0x7e0 (2016) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 136 @ 0x880 (2176) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 146 @ 0x920 (2336) - MOV R2, RZ ;
Inject count_instr before - Instr 156 @ 0x9c0 (2496) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 166 @ 0xa60 (2656) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 176 @ 0xb00 (2816) - MOV R4, RZ ;
Inject count_instr before - Instr 186 @ 0xba0 (2976) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 196 @ 0xc40 (3136) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 206 @ 0xce0 (3296) - MOV R2, RZ ;
Inject count_instr before - Instr 216 @ 0xd80 (3456) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 226 @ 0xe20 (3616) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 236 @ 0xec0 (3776) - MOV R4, RZ ;
Inject count_instr before - Instr 246 @ 0xf60 (3936) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 264 @ 0x1080 (4224) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
Inject count_instr before - Instr 270 @ 0x10e0 (4320) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 279 @ 0x1170 (4464) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x3d8] ;
Inject count_instr before - Instr 285 @ 0x11d0 (4560) - IMAD.MOV.U32 R24, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 302 @ 0x12e0 (4832) - UMOV UR8, 0xd99fbf00 ;
Inject count_instr before - Instr 320 @ 0x1400 (5120) - BSYNC B6 ;
Inject count_instr before - Instr 338 @ 0x1520 (5408) - ISETP.GE.U32.AND P2, PT, R36, R6, PT ;
Inject count_instr before - Instr 346 @ 0x15a0 (5536) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 364 @ 0x16c0 (5824) - BSYNC B6 ;
Inject count_instr before - Instr 384 @ 0x1800 (6144) - IMAD.WIDE.U32 R36, R4.reuse, R36, R18 ;
Inject count_instr before - Instr 392 @ 0x1880 (6272) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 410 @ 0x19a0 (6560) - BSYNC B6 ;
Inject count_instr before - Instr 430 @ 0x1ae0 (6880) - IMAD.WIDE.U32 R28, R4.reuse, R28, R18 ;
Inject count_instr before - Instr 438 @ 0x1b60 (7008) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 456 @ 0x1c80 (7296) - BSYNC B6 ;
Inject count_instr before - Instr 476 @ 0x1dc0 (7616) - BSYNC B7 ;
Inject count_instr before - Instr 477 @ 0x1dd0 (7632) - MOV R2, c[0x0][0x3d8] ;
Inject count_instr before - Instr 482 @ 0x1e20 (7712) - IMAD.MOV.U32 R0, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 498 @ 0x1f20 (7968) - MOV R17, R6 ;
Inject count_instr before - Instr 500 @ 0x1f40 (8000) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 518 @ 0x2060 (8288) - BSYNC B6 ;
Inject count_instr before - Instr 532 @ 0x2140 (8512) - LDC.64 R4, c[0x0][R25+0x3e0] ;
Inject count_instr before - Instr 546 @ 0x2220 (8736) - MOV R16, R7 ;
Inject count_instr before - Instr 548 @ 0x2240 (8768) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 566 @ 0x2360 (9056) - BSYNC B6 ;
Inject count_instr before - Instr 580 @ 0x2440 (9280) - LDC.64 R2, c[0x0][R25+0x3e8] ;
Inject count_instr before - Instr 595 @ 0x2530 (9520) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 613 @ 0x2650 (9808) - BSYNC B6 ;
Inject count_instr before - Instr 624 @ 0x2700 (9984) - IADD3 R18, P0, P1, R18, c[0x0][0x3d0], R26 ;
Inject count_instr before - Instr 633 @ 0x2790 (10128) - BSYNC B8 ;
Inject count_instr before - Instr 639 @ 0x27f0 (10224) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
Inject count_instr before - Instr 643 @ 0x2830 (10288) - MOV R16, RZ ;
Inject count_instr before - Instr 654 @ 0x28e0 (10464) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 665 @ 0x2990 (10640) - MOV R4, RZ ;
Inject count_instr before - Instr 675 @ 0x2a30 (10800) - MOV R2, RZ ;
Inject count_instr before - Instr 685 @ 0x2ad0 (10960) - MOV R4, RZ ;
Inject count_instr before - Instr 695 @ 0x2b70 (11120) - MOV R2, RZ ;
Inject count_instr before - Instr 705 @ 0x2c10 (11280) - MOV R4, RZ ;
Inject count_instr before - Instr 715 @ 0x2cb0 (11440) - MOV R2, RZ ;
Inject count_instr before - Instr 725 @ 0x2d50 (11600) - MOV R4, RZ ;
Inject count_instr before - Instr 735 @ 0x2df0 (11760) - MOV R2, RZ ;
Inject count_instr before - Instr 745 @ 0x2e90 (11920) - MOV R4, RZ ;
Inject count_instr before - Instr 755 @ 0x2f30 (12080) - MOV R2, RZ ;
Inject count_instr before - Instr 765 @ 0x2fd0 (12240) - MOV R4, RZ ;
Inject count_instr before - Instr 775 @ 0x3070 (12400) - MOV R2, RZ ;
Inject count_instr before - Instr 785 @ 0x3110 (12560) - MOV R4, RZ ;
Inject count_instr before - Instr 795 @ 0x31b0 (12720) - MOV R2, RZ ;
Inject count_instr before - Instr 805 @ 0x3250 (12880) - MOV R4, RZ ;
Inject count_instr before - Instr 815 @ 0x32f0 (13040) - MOV R2, RZ ;
Inject count_instr before - Instr 825 @ 0x3390 (13200) - MOV R4, RZ ;
Inject count_instr before - Instr 835 @ 0x3430 (13360) - MOV R2, RZ ;
Inject count_instr before - Instr 845 @ 0x34d0 (13520) - MOV R4, RZ ;
Inject count_instr before - Instr 855 @ 0x3570 (13680) - MOV R2, RZ ;
Inject count_instr before - Instr 865 @ 0x3610 (13840) - MOV R4, RZ ;
Inject count_instr before - Instr 875 @ 0x36b0 (14000) - MOV R2, RZ ;
Inject count_instr before - Instr 885 @ 0x3750 (14160) - MOV R4, RZ ;
Inject count_instr before - Instr 893 @ 0x37d0 (14288) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
Inject count_instr before - Instr 899 @ 0x3830 (14384) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x3d8] ;
Inject count_instr before - Instr 909 @ 0x38d0 (14544) - IADD3 R18, P0, -R2, c[0x0][0x3d8], RZ ;
Inject count_instr before - Instr 913 @ 0x3910 (14608) - MOV R24, 0x8 ;
Inject count_instr before - Instr 930 @ 0x3a20 (14880) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 948 @ 0x3b40 (15168) - BSYNC B6 ;
Inject count_instr before - Instr 966 @ 0x3c60 (15456) - ISETP.GE.U32.AND P2, PT, R36, R6, PT ;
Inject count_instr before - Instr 974 @ 0x3ce0 (15584) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 992 @ 0x3e00 (15872) - BSYNC B6 ;
Inject count_instr before - Instr 1012 @ 0x3f40 (16192) - IMAD.WIDE.U32 R36, R4.reuse, R36, R22 ;
Inject count_instr before - Instr 1020 @ 0x3fc0 (16320) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1038 @ 0x40e0 (16608) - BSYNC B6 ;
Inject count_instr before - Instr 1058 @ 0x4220 (16928) - IMAD.WIDE.U32 R28, R4.reuse, R28, R22 ;
Inject count_instr before - Instr 1066 @ 0x42a0 (17056) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1084 @ 0x43c0 (17344) - BSYNC B6 ;
Inject count_instr before - Instr 1104 @ 0x4500 (17664) - BSYNC B7 ;
Inject count_instr before - Instr 1105 @ 0x4510 (17680) - ISETP.NE.U32.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 1108 @ 0x4540 (17728) - MOV R0, 0x8 ;
Inject count_instr before - Instr 1125 @ 0x4650 (18000) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1143 @ 0x4770 (18288) - BSYNC B6 ;
Inject count_instr before - Instr 1157 @ 0x4850 (18512) - LDC.64 R4, c[0x0][R25+0x3e0] ;
Inject count_instr before - Instr 1172 @ 0x4940 (18752) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1190 @ 0x4a60 (19040) - BSYNC B6 ;
Inject count_instr before - Instr 1204 @ 0x4b40 (19264) - LDC.64 R2, c[0x0][R25+0x3e8] ;
Inject count_instr before - Instr 1218 @ 0x4c20 (19488) - MOV R2, R5 ;
Inject count_instr before - Instr 1220 @ 0x4c40 (19520) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1238 @ 0x4d60 (19808) - BSYNC B6 ;
Inject count_instr before - Instr 1249 @ 0x4e10 (19984) - IADD3 R22, P0, P1, R22, c[0x0][0x3d0], R26 ;
Inject count_instr before - Instr 1257 @ 0x4e90 (20112) - BSYNC B8 ;
Inject count_instr before - Instr 1263 @ 0x4ef0 (20208) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
Inject count_instr before - Instr 1267 @ 0x4f30 (20272) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
Inject count_instr before - Instr 1278 @ 0x4fe0 (20448) - MOV R2, RZ ;
Inject count_instr before - Instr 1289 @ 0x5090 (20624) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1299 @ 0x5130 (20784) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1309 @ 0x51d0 (20944) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1319 @ 0x5270 (21104) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1329 @ 0x5310 (21264) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1349 @ 0x5450 (21584) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1359 @ 0x54f0 (21744) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1369 @ 0x5590 (21904) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1379 @ 0x5630 (22064) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1389 @ 0x56d0 (22224) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1399 @ 0x5770 (22384) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1409 @ 0x5810 (22544) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1419 @ 0x58b0 (22704) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1429 @ 0x5950 (22864) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1439 @ 0x59f0 (23024) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1449 @ 0x5a90 (23184) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1459 @ 0x5b30 (23344) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1469 @ 0x5bd0 (23504) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1479 @ 0x5c70 (23664) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1489 @ 0x5d10 (23824) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1499 @ 0x5db0 (23984) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 1509 @ 0x5e50 (24144) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1517 @ 0x5ed0 (24272) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
Inject count_instr before - Instr 1523 @ 0x5f30 (24368) - MOV R2, c[0x0][0x3d8] ;
Inject count_instr before - Instr 1533 @ 0x5fd0 (24528) - IADD3 R18, P0, -R2, c[0x0][0x3d8], RZ ;
Inject count_instr before - Instr 1537 @ 0x6010 (24592) - IMAD.MOV.U32 R24, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 1554 @ 0x6120 (24864) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1572 @ 0x6240 (25152) - BSYNC B6 ;
Inject count_instr before - Instr 1590 @ 0x6360 (25440) - ISETP.GE.U32.AND P2, PT, R36, R6, PT ;
Inject count_instr before - Instr 1598 @ 0x63e0 (25568) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1616 @ 0x6500 (25856) - BSYNC B6 ;
Inject count_instr before - Instr 1636 @ 0x6640 (26176) - IMAD.WIDE.U32 R36, R4.reuse, R36, R22 ;
Inject count_instr before - Instr 1644 @ 0x66c0 (26304) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1662 @ 0x67e0 (26592) - BSYNC B6 ;
Inject count_instr before - Instr 1682 @ 0x6920 (26912) - IMAD.WIDE.U32 R28, R4.reuse, R28, R22 ;
Inject count_instr before - Instr 1690 @ 0x69a0 (27040) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1708 @ 0x6ac0 (27328) - BSYNC B6 ;
Inject count_instr before - Instr 1728 @ 0x6c00 (27648) - BSYNC B7 ;
Inject count_instr before - Instr 1729 @ 0x6c10 (27664) - ISETP.NE.U32.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 1732 @ 0x6c40 (27712) - IMAD.MOV.U32 R0, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 1749 @ 0x6d50 (27984) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1767 @ 0x6e70 (28272) - BSYNC B6 ;
Inject count_instr before - Instr 1781 @ 0x6f50 (28496) - LDC.64 R4, c[0x0][R25+0x3e0] ;
Inject count_instr before - Instr 1796 @ 0x7040 (28736) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1814 @ 0x7160 (29024) - BSYNC B6 ;
Inject count_instr before - Instr 1828 @ 0x7240 (29248) - LDC.64 R2, c[0x0][R25+0x3e8] ;
Inject count_instr before - Instr 1842 @ 0x7320 (29472) - MOV R16, R4 ;
Inject count_instr before - Instr 1844 @ 0x7340 (29504) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 1862 @ 0x7460 (29792) - BSYNC B6 ;
Inject count_instr before - Instr 1873 @ 0x7510 (29968) - IADD3 R22, P0, P1, R22, c[0x0][0x3d0], R26 ;
Inject count_instr before - Instr 1881 @ 0x7590 (30096) - BSYNC B8 ;
Inject count_instr before - Instr 1885 @ 0x75d0 (30160) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
Inject count_instr before - Instr 1890 @ 0x7620 (30240) - MOV R16, RZ ;
Inject count_instr before - Instr 1901 @ 0x76d0 (30416) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 1912 @ 0x7780 (30592) - MOV R6, RZ ;
Inject count_instr before - Instr 1922 @ 0x7820 (30752) - MOV R4, RZ ;
Inject count_instr before - Instr 1932 @ 0x78c0 (30912) - MOV R6, RZ ;
Inject count_instr before - Instr 1942 @ 0x7960 (31072) - MOV R4, RZ ;
Inject count_instr before - Instr 1952 @ 0x7a00 (31232) - MOV R6, RZ ;
Inject count_instr before - Instr 1962 @ 0x7aa0 (31392) - MOV R4, RZ ;
Inject count_instr before - Instr 1972 @ 0x7b40 (31552) - MOV R6, RZ ;
Inject count_instr before - Instr 1982 @ 0x7be0 (31712) - MOV R4, RZ ;
Inject count_instr before - Instr 1992 @ 0x7c80 (31872) - MOV R6, RZ ;
Inject count_instr before - Instr 2002 @ 0x7d20 (32032) - MOV R4, RZ ;
Inject count_instr before - Instr 2012 @ 0x7dc0 (32192) - MOV R6, RZ ;
Inject count_instr before - Instr 2022 @ 0x7e60 (32352) - MOV R4, RZ ;
Inject count_instr before - Instr 2032 @ 0x7f00 (32512) - MOV R6, RZ ;
Inject count_instr before - Instr 2042 @ 0x7fa0 (32672) - MOV R4, RZ ;
Inject count_instr before - Instr 2052 @ 0x8040 (32832) - MOV R6, RZ ;
Inject count_instr before - Instr 2062 @ 0x80e0 (32992) - MOV R4, RZ ;
Inject count_instr before - Instr 2072 @ 0x8180 (33152) - MOV R6, RZ ;
Inject count_instr before - Instr 2082 @ 0x8220 (33312) - MOV R4, RZ ;
Inject count_instr before - Instr 2092 @ 0x82c0 (33472) - MOV R6, RZ ;
Inject count_instr before - Instr 2102 @ 0x8360 (33632) - MOV R4, RZ ;
Inject count_instr before - Instr 2112 @ 0x8400 (33792) - MOV R6, RZ ;
Inject count_instr before - Instr 2122 @ 0x84a0 (33952) - MOV R4, RZ ;
Inject count_instr before - Instr 2132 @ 0x8540 (34112) - MOV R6, RZ ;
Inject count_instr before - Instr 2140 @ 0x85c0 (34240) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x3d8], PT ;
Inject count_instr before - Instr 2147 @ 0x8630 (34352) - IMAD.MOV.U32 R17, RZ, RZ, c[0x0][0x3d8] ;
Inject count_instr before - Instr 2158 @ 0x86e0 (34528) - IADD3 R22, P0, -R17, c[0x0][0x3d8], RZ ;
Inject count_instr before - Instr 2162 @ 0x8720 (34592) - MOV R25, 0x8 ;
Inject count_instr before - Instr 2179 @ 0x8830 (34864) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 2197 @ 0x8950 (35152) - BSYNC B6 ;
Inject count_instr before - Instr 2225 @ 0x8b10 (35600) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 2243 @ 0x8c30 (35888) - BSYNC B6 ;
Inject count_instr before - Instr 2263 @ 0x8d70 (36208) - IMAD.WIDE.U32 R36, R4.reuse, R36, R28 ;
Inject count_instr before - Instr 2271 @ 0x8df0 (36336) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 2289 @ 0x8f10 (36624) - BSYNC B6 ;
Inject count_instr before - Instr 2309 @ 0x9050 (36944) - IMAD.WIDE.U32 R28, R4.reuse, R28, R36 ;
Inject count_instr before - Instr 2317 @ 0x90d0 (37072) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 2335 @ 0x91f0 (37360) - BSYNC B6 ;
Inject count_instr before - Instr 2355 @ 0x9330 (37680) - BSYNC B7 ;
Inject count_instr before - Instr 2356 @ 0x9340 (37696) - ISETP.NE.U32.AND P0, PT, R17, RZ, PT ;
Inject count_instr before - Instr 2359 @ 0x9370 (37744) - MOV R3, 0x8 ;
Inject count_instr before - Instr 2375 @ 0x9470 (38000) - MOV R18, R7 ;
Inject count_instr before - Instr 2377 @ 0x9490 (38032) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 2395 @ 0x95b0 (38320) - BSYNC B6 ;
Inject count_instr before - Instr 2410 @ 0x96a0 (38560) - LDC.64 R4, c[0x0][R26+0x3e0] ;
Inject count_instr before - Instr 2424 @ 0x9780 (38784) - MOV R18, R7 ;
Inject count_instr before - Instr 2426 @ 0x97a0 (38816) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 2444 @ 0x98c0 (39104) - BSYNC B6 ;
Inject count_instr before - Instr 2459 @ 0x99b0 (39344) - LDC.64 R4, c[0x0][R26+0x3e8] ;
Inject count_instr before - Instr 2473 @ 0x9a90 (39568) - MOV R16, R7 ;
Inject count_instr before - Instr 2475 @ 0x9ab0 (39600) - UMOV UR4, 0xd99fbf00 ;
Inject count_instr before - Instr 2493 @ 0x9bd0 (39888) - BSYNC B6 ;
Inject count_instr before - Instr 2505 @ 0x9c90 (40080) - IADD3 R2, P0, P1, R24, c[0x0][0x3d0], R2 ;
Inject count_instr before - Instr 2511 @ 0x9cf0 (40176) - BRA 0x9cf0;
kernel 277 - _ZN2at6native24index_elementwise_kernelILi128ELi4EZNS0_16gpu_index_kernelIZNS0_17index_kernel_implINS0_10OpaqueTypeILi2EEEEEvRNS_18TensorIteratorBaseEN3c108ArrayRefIlEESA_EUlPcPKclE_EEvS7_SA_SA_RKT_EUliE_EEvlT1_ - #thread-blocks 2,  kernel instructions 2600, total instructions 65668664
kernel 278 - _ZN2at6native29vectorized_elementwise_kernelILi8ENS0_10AbsFunctorIN3c104HalfEEESt5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 412, total instructions 65669076
Function void at::native::unrolled_elementwise_kernel<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(double)#1}, std::array<char*, 2ul>, 8, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1> >(int, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(double)#1}, std::array<char*, 2ul>, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1>)
Basic block id 0 - num instructions 17
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R27, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - IMAD.MOV.U32 R0, RZ, RZ, -0x400 ;
 Instr 3 @ 0x30 (48) - BMOV.32.CLEAR RZ, B6 ;
 Instr 4 @ 0x40 (64) - BSSY B6, 0x7d00 ;
 Instr 5 @ 0x50 (80) - S2R R22, SR_TID.X ;
 Instr 6 @ 0x60 (96) - CS2R R68, SRZ ;
 Instr 7 @ 0x70 (112) - CS2R R60, SRZ ;
 Instr 8 @ 0x80 (128) - CS2R R52, SRZ ;
 Instr 9 @ 0x90 (144) - CS2R R44, SRZ ;
 Instr 10 @ 0xa0 (160) - CS2R R36, SRZ ;
 Instr 11 @ 0xb0 (176) - CS2R R28, SRZ ;
 Instr 12 @ 0xc0 (192) - CS2R R24, SRZ ;
 Instr 13 @ 0xd0 (208) - IMAD R71, R27, R0, c[0x0][0x160] ;
 Instr 14 @ 0xe0 (224) - ISETP.GE.AND P0, PT, R22, R71, PT ;
 Instr 15 @ 0xf0 (240) - @P0 CS2R R16, SRZ ;
 Instr 16 @ 0x100 (256) - @P0 BRA 0x7cf0 ;
Basic block id 1 - num instructions 9
 Instr 17 @ 0x110 (272) - LDC.U8 R2, c[0x0][0x17c] ;
 Instr 18 @ 0x120 (288) - IMAD R0, R27, 0x400, R22 ;
 Instr 19 @ 0x130 (304) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 20 @ 0x140 (320) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 21 @ 0x150 (336) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 22 @ 0x160 (352) - PRMT R18, R2, 0x9910, RZ ;
 Instr 23 @ 0x170 (368) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 24 @ 0x180 (384) - P2R R0, PR, RZ, 0x2 ;
 Instr 25 @ 0x190 (400) - @P1 BRA 0x530 ;
Basic block id 2 - num instructions 2
 Instr 26 @ 0x1a0 (416) - ISETP.GT.AND P0, PT, R18, 0x4, PT ;
 Instr 27 @ 0x1b0 (432) - @P0 BRA 0x370 ;
Basic block id 3 - num instructions 2
 Instr 28 @ 0x1c0 (448) - ISETP.GT.AND P0, PT, R18, 0x1, PT ;
 Instr 29 @ 0x1d0 (464) - @P0 BRA 0x280 ;
Basic block id 4 - num instructions 2
 Instr 30 @ 0x1e0 (480) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 31 @ 0x1f0 (496) - @!P0 BRA 0x250 ;
Basic block id 5 - num instructions 2
 Instr 32 @ 0x200 (512) - ISETP.NE.AND P0, PT, R18, 0x1, PT ;
 Instr 33 @ 0x210 (528) - @P0 BRA 0xef0 ;
Basic block id 6 - num instructions 3
 Instr 34 @ 0x220 (544) - LDG.E.S8.SYS R4, [R4] ;
 Instr 35 @ 0x230 (560) - I2F.F64.S16 R16, R4 ;
 Instr 36 @ 0x240 (576) - BRA 0x1080 ;
Basic block id 7 - num instructions 3
 Instr 37 @ 0x250 (592) - LDG.E.U8.SYS R4, [R4] ;
 Instr 38 @ 0x260 (608) - I2F.F64.U16 R16, R4 ;
 Instr 39 @ 0x270 (624) - BRA 0x1080 ;
Basic block id 8 - num instructions 2
 Instr 40 @ 0x280 (640) - ISETP.NE.AND P0, PT, R18, 0x2, PT ;
 Instr 41 @ 0x290 (656) - @!P0 BRA 0x340 ;
Basic block id 9 - num instructions 2
 Instr 42 @ 0x2a0 (672) - ISETP.NE.AND P0, PT, R18, 0x3, PT ;
 Instr 43 @ 0x2b0 (688) - @!P0 BRA 0x310 ;
Basic block id 10 - num instructions 2
 Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R18, 0x4, PT ;
 Instr 45 @ 0x2d0 (720) - @P0 BRA 0xef0 ;
Basic block id 11 - num instructions 3
 Instr 46 @ 0x2e0 (736) - LDG.E.64.SYS R4, [R4] ;
 Instr 47 @ 0x2f0 (752) - I2F.F64.S64 R16, R4 ;
 Instr 48 @ 0x300 (768) - BRA 0x1080 ;
Basic block id 12 - num instructions 3
 Instr 49 @ 0x310 (784) - LDG.E.SYS R4, [R4] ;
 Instr 50 @ 0x320 (800) - I2F.F64 R16, R4 ;
 Instr 51 @ 0x330 (816) - BRA 0x1080 ;
Basic block id 13 - num instructions 3
 Instr 52 @ 0x340 (832) - LDG.E.U16.SYS R4, [R4] ;
 Instr 53 @ 0x350 (848) - I2F.F64.S16 R16, R4 ;
 Instr 54 @ 0x360 (864) - BRA 0x1080 ;
Basic block id 14 - num instructions 2
 Instr 55 @ 0x370 (880) - ISETP.GT.AND P0, PT, R18, 0x6, PT ;
 Instr 56 @ 0x380 (896) - @P0 BRA 0x440 ;
Basic block id 15 - num instructions 2
 Instr 57 @ 0x390 (912) - ISETP.NE.AND P0, PT, R18, 0x5, PT ;
 Instr 58 @ 0x3a0 (928) - @!P0 BRA 0x400 ;
Basic block id 16 - num instructions 2
 Instr 59 @ 0x3b0 (944) - ISETP.NE.AND P0, PT, R18, 0x6, PT ;
 Instr 60 @ 0x3c0 (960) - @P0 BRA 0xef0 ;
Basic block id 17 - num instructions 3
 Instr 61 @ 0x3d0 (976) - LDG.E.SYS R4, [R4] ;
 Instr 62 @ 0x3e0 (992) - F2F.F64.F32 R16, R4 ;
 Instr 63 @ 0x3f0 (1008) - BRA 0x1080 ;
Basic block id 18 - num instructions 4
 Instr 64 @ 0x400 (1024) - LDG.E.U16.SYS R16, [R4] ;
 Instr 65 @ 0x410 (1040) - HADD2.F32 R16, R16.H0_H0, -RZ.H0_H0 ;
 Instr 66 @ 0x420 (1056) - F2F.F64.F32 R16, R16 ;
 Instr 67 @ 0x430 (1072) - BRA 0x1080 ;
Basic block id 19 - num instructions 2
 Instr 68 @ 0x440 (1088) - ISETP.NE.AND P0, PT, R18, 0x7, PT ;
 Instr 69 @ 0x450 (1104) - @!P0 BRA 0x510 ;
Basic block id 20 - num instructions 2
 Instr 70 @ 0x460 (1120) - ISETP.NE.AND P0, PT, R18, 0x8, PT ;
 Instr 71 @ 0x470 (1136) - @!P0 BRA 0x4d0 ;
Basic block id 21 - num instructions 2
 Instr 72 @ 0x480 (1152) - ISETP.NE.AND P0, PT, R18, 0x9, PT ;
 Instr 73 @ 0x490 (1168) - @P0 BRA 0xef0 ;
Basic block id 22 - num instructions 3
 Instr 74 @ 0x4a0 (1184) - LDG.E.SYS R4, [R4] ;
 Instr 75 @ 0x4b0 (1200) - F2F.F64.F32 R16, R4 ;
 Instr 76 @ 0x4c0 (1216) - BRA 0x1080 ;
Basic block id 23 - num instructions 4
 Instr 77 @ 0x4d0 (1232) - LDG.E.U16.SYS R4, [R4] ;
 Instr 78 @ 0x4e0 (1248) - HADD2.F32 R16, R4.H0_H0, -RZ.H0_H0 ;
 Instr 79 @ 0x4f0 (1264) - F2F.F64.F32 R16, R16 ;
 Instr 80 @ 0x500 (1280) - BRA 0x1080 ;
Basic block id 24 - num instructions 2
 Instr 81 @ 0x510 (1296) - LDG.E.64.SYS R16, [R4] ;
 Instr 82 @ 0x520 (1312) - BRA 0x1080 ;
Basic block id 25 - num instructions 2
 Instr 83 @ 0x530 (1328) - ISETP.GT.AND P0, PT, R18, 0x18, PT ;
 Instr 84 @ 0x540 (1344) - @P0 BRA 0x900 ;
Basic block id 26 - num instructions 2
 Instr 85 @ 0x550 (1360) - ISETP.GT.AND P0, PT, R18, 0xe, PT ;
 Instr 86 @ 0x560 (1376) - @P0 BRA 0x620 ;
Basic block id 27 - num instructions 2
 Instr 87 @ 0x570 (1392) - ISETP.NE.AND P0, PT, R18, 0xa, PT ;
 Instr 88 @ 0x580 (1408) - @!P0 BRA 0x600 ;
Basic block id 28 - num instructions 2
 Instr 89 @ 0x590 (1424) - ISETP.NE.AND P0, PT, R18, 0xb, PT ;
 Instr 90 @ 0x5a0 (1440) - @P0 BRA 0xef0 ;
Basic block id 29 - num instructions 5
 Instr 91 @ 0x5b0 (1456) - LDG.E.U8.SYS R4, [R4] ;
 Instr 92 @ 0x5c0 (1472) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 93 @ 0x5d0 (1488) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 94 @ 0x5e0 (1504) - FSEL R17, RZ, 1.875, !P0 ;
 Instr 95 @ 0x5f0 (1520) - BRA 0x1080 ;
Basic block id 30 - num instructions 2
 Instr 96 @ 0x600 (1536) - LDG.E.64.SYS R16, [R4] ;
 Instr 97 @ 0x610 (1552) - BRA 0x1080 ;
Basic block id 31 - num instructions 2
 Instr 98 @ 0x620 (1568) - ISETP.NE.AND P0, PT, R18, 0xf, PT ;
 Instr 99 @ 0x630 (1584) - @!P0 BRA 0x8c0 ;
Basic block id 32 - num instructions 2
 Instr 100 @ 0x640 (1600) - ISETP.NE.AND P0, PT, R18, 0x17, PT ;
 Instr 101 @ 0x650 (1616) - @!P0 BRA 0x7d0 ;
Basic block id 33 - num instructions 2
 Instr 102 @ 0x660 (1632) - ISETP.NE.AND P0, PT, R18, 0x18, PT ;
 Instr 103 @ 0x670 (1648) - @P0 BRA 0xef0 ;
Basic block id 34 - num instructions 21
 Instr 104 @ 0x680 (1664) - LDG.E.U8.SYS R0, [R4] ;
 Instr 105 @ 0x690 (1680) - IMAD.MOV.U32 R9, RZ, RZ, -0x800000 ;
 Instr 106 @ 0x6a0 (1696) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 107 @ 0x6b0 (1712) - LOP3.LUT R3, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 108 @ 0x6c0 (1728) - IADD3 R7, R3.reuse, 0x1000000, RZ ;
 Instr 109 @ 0x6d0 (1744) - FLO.U32 R6, R3 ;
 Instr 110 @ 0x6e0 (1760) - IADD3 R4, R3, -0x1, RZ ;
 Instr 111 @ 0x6f0 (1776) - SHF.R.S32.HI R7, RZ, 0x8, R7 ;
 Instr 112 @ 0x700 (1792) - SHF.R.S32.HI R4, RZ, 0x1f, R4 ;
 Instr 113 @ 0x710 (1808) - IADD3 R6, -R6, 0x1f, RZ ;
 Instr 114 @ 0x720 (1824) - ISETP.GT.U32.AND P0, PT, R6.reuse, 0x4, PT ;
 Instr 115 @ 0x730 (1840) - IADD3 R6, R6, -0x4, RZ ;
 Instr 116 @ 0x740 (1856) - SEL R6, R6, RZ, P0 ;
 Instr 117 @ 0x750 (1872) - IMAD R9, R6, R9, 0x3c000000 ;
 Instr 118 @ 0x760 (1888) - SHF.L.U32 R6, R3, R6, RZ ;
 Instr 119 @ 0x770 (1904) - LEA.HI R6, R6, R9, RZ, 0x1c ;
 Instr 120 @ 0x780 (1920) - LOP3.LUT R7, R6, 0x7f800000, R7, 0xf8, !PT ;
 Instr 121 @ 0x790 (1936) - LOP3.LUT R7, R7, R4, RZ, 0x30, !PT ;
 Instr 122 @ 0x7a0 (1952) - LOP3.LUT R7, R7, 0x80000000, R0, 0xf8, !PT ;
 Instr 123 @ 0x7b0 (1968) - F2F.F64.F32 R16, R7 ;
 Instr 124 @ 0x7c0 (1984) - BRA 0x1080 ;
Basic block id 35 - num instructions 15
 Instr 125 @ 0x7d0 (2000) - LDG.E.U8.SYS R4, [R4] ;
 Instr 126 @ 0x7e0 (2016) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 127 @ 0x7f0 (2032) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 128 @ 0x800 (2048) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 129 @ 0x810 (2064) - @!P0 IMAD.SHL.U32 R0, R4.reuse, 0x100, RZ ;
 Instr 130 @ 0x820 (2080) - IMAD.SHL.U32 R4, R4, 0x1000000, RZ ;
 Instr 131 @ 0x830 (2096) - @P0 LOP3.LUT R3, R3, 0xfe00000, RZ, 0xc0, !PT ;
 Instr 132 @ 0x840 (2112) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 133 @ 0x850 (2128) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 134 @ 0x860 (2144) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 135 @ 0x870 (2160) - @P0 FMUL R3, R3, 1.9259299443872358531e-34 ;
 Instr 136 @ 0x880 (2176) - @!P0 FADD R3, R0, -0.5 ;
 Instr 137 @ 0x890 (2192) - LOP3.LUT R3, R3, 0x80000000, R4, 0xf8, !PT ;
 Instr 138 @ 0x8a0 (2208) - F2F.F64.F32 R16, R3 ;
 Instr 139 @ 0x8b0 (2224) - BRA 0x1080 ;
Basic block id 36 - num instructions 4
 Instr 140 @ 0x8c0 (2240) - LDG.E.U16.SYS R16, [R4] ;
 Instr 141 @ 0x8d0 (2256) - PRMT R16, RZ, 0x5410, R16 ;
 Instr 142 @ 0x8e0 (2272) - F2F.F64.F32 R16, R16 ;
 Instr 143 @ 0x8f0 (2288) - BRA 0x1080 ;
Basic block id 37 - num instructions 2
 Instr 144 @ 0x900 (2304) - ISETP.GT.AND P0, PT, R18, 0x1b, PT ;
 Instr 145 @ 0x910 (2320) - @P0 BRA 0xdd0 ;
Basic block id 38 - num instructions 2
 Instr 146 @ 0x920 (2336) - ISETP.NE.AND P0, PT, R18, 0x19, PT ;
 Instr 147 @ 0x930 (2352) - @!P0 BRA 0xbc0 ;
Basic block id 39 - num instructions 2
 Instr 148 @ 0x940 (2368) - ISETP.NE.AND P0, PT, R18, 0x1a, PT ;
 Instr 149 @ 0x950 (2384) - @!P0 BRA 0x9b0 ;
Basic block id 40 - num instructions 2
 Instr 150 @ 0x960 (2400) - ISETP.NE.AND P0, PT, R18, 0x1b, PT ;
 Instr 151 @ 0x970 (2416) - @P0 BRA 0xef0 ;
Basic block id 41 - num instructions 3
 Instr 152 @ 0x980 (2432) - LDG.E.U16.SYS R4, [R4] ;
 Instr 153 @ 0x990 (2448) - I2F.F64.U16 R16, R4 ;
 Instr 154 @ 0x9a0 (2464) - BRA 0x1080 ;
Basic block id 42 - num instructions 6
 Instr 155 @ 0x9b0 (2480) - LDG.E.U8.SYS R4, [R4] ;
 Instr 156 @ 0x9c0 (2496) - BMOV.32.CLEAR RZ, B0 ;
 Instr 157 @ 0x9d0 (2512) - BSSY B0, 0xba0 ;
 Instr 158 @ 0x9e0 (2528) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 159 @ 0x9f0 (2544) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 160 @ 0xa00 (2560) - @!P0 BRA 0xb90 ;
Basic block id 43 - num instructions 3
 Instr 161 @ 0xa10 (2576) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 162 @ 0xa20 (2592) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, 0x7f800001 ;
 Instr 163 @ 0xa30 (2608) - @!P0 BRA 0xb90 ;
Basic block id 44 - num instructions 1
 Instr 164 @ 0xa40 (2624) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 45 - num instructions 10
 Instr 165 @ 0xa50 (2640) - BMOV.32.CLEAR RZ, B1 ;
 Instr 166 @ 0xa60 (2656) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 167 @ 0xa70 (2672) - BSSY B1, 0xb60 ;
 Instr 168 @ 0xa80 (2688) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 169 @ 0xa90 (2704) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 170 @ 0xaa0 (2720) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 171 @ 0xab0 (2736) - IMAD.U32 R16, R3, -0x80000000, RZ ;
 Instr 172 @ 0xac0 (2752) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 173 @ 0xad0 (2768) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 174 @ 0xae0 (2784) - @P0 BRA 0xb50 ;
Basic block id 46 - num instructions 6
 Instr 175 @ 0xaf0 (2800) - FLO.U32 R4, R3 ;
 Instr 176 @ 0xb00 (2816) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 177 @ 0xb10 (2832) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 178 @ 0xb20 (2848) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 179 @ 0xb30 (2864) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 180 @ 0xb40 (2880) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 47 - num instructions 4
 Instr 181 @ 0xb50 (2896) - BSYNC B1 ;
 Instr 182 @ 0xb60 (2912) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 183 @ 0xb70 (2928) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 184 @ 0xb80 (2944) - LOP3.LUT R16, R5, R3, R16, 0xfe, !PT ;
Basic block id 48 - num instructions 3
 Instr 185 @ 0xb90 (2960) - BSYNC B0 ;
 Instr 186 @ 0xba0 (2976) - F2F.F64.F32 R16, R16 ;
 Instr 187 @ 0xbb0 (2992) - BRA 0x1080 ;
Basic block id 49 - num instructions 6
 Instr 188 @ 0xbc0 (3008) - LDG.E.U8.SYS R3, [R4] ;
 Instr 189 @ 0xbd0 (3024) - BMOV.32.CLEAR RZ, B0 ;
 Instr 190 @ 0xbe0 (3040) - BSSY B0, 0xdb0 ;
 Instr 191 @ 0xbf0 (3056) - IMAD.MOV.U32 R16, RZ, RZ, RZ ;
 Instr 192 @ 0xc00 (3072) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 193 @ 0xc10 (3088) - @!P0 BRA 0xda0 ;
Basic block id 50 - num instructions 3
 Instr 194 @ 0xc20 (3104) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 195 @ 0xc30 (3120) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, 0x7f800001 ;
 Instr 196 @ 0xc40 (3136) - @!P0 BRA 0xda0 ;
Basic block id 51 - num instructions 1
 Instr 197 @ 0xc50 (3152) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Basic block id 52 - num instructions 10
 Instr 198 @ 0xc60 (3168) - BMOV.32.CLEAR RZ, B1 ;
 Instr 199 @ 0xc70 (3184) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 200 @ 0xc80 (3200) - BSSY B1, 0xd70 ;
 Instr 201 @ 0xc90 (3216) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 202 @ 0xca0 (3232) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 203 @ 0xcb0 (3248) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 204 @ 0xcc0 (3264) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 205 @ 0xcd0 (3280) - IMAD.U32 R16, R4, -0x80000000, RZ ;
 Instr 206 @ 0xce0 (3296) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 207 @ 0xcf0 (3312) - @P0 BRA 0xd60 ;
Basic block id 53 - num instructions 6
 Instr 208 @ 0xd00 (3328) - FLO.U32 R4, R3 ;
 Instr 209 @ 0xd10 (3344) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 210 @ 0xd20 (3360) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 211 @ 0xd30 (3376) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 212 @ 0xd40 (3392) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 213 @ 0xd50 (3408) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 54 - num instructions 4
 Instr 214 @ 0xd60 (3424) - BSYNC B1 ;
 Instr 215 @ 0xd70 (3440) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 216 @ 0xd80 (3456) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 217 @ 0xd90 (3472) - LOP3.LUT R16, R0, R3, R16, 0xfe, !PT ;
Basic block id 55 - num instructions 3
 Instr 218 @ 0xda0 (3488) - BSYNC B0 ;
 Instr 219 @ 0xdb0 (3504) - F2F.F64.F32 R16, R16 ;
 Instr 220 @ 0xdc0 (3520) - BRA 0x1080 ;
Basic block id 56 - num instructions 2
 Instr 221 @ 0xdd0 (3536) - ISETP.NE.AND P0, PT, R18, 0x1c, PT ;
 Instr 222 @ 0xde0 (3552) - @!P0 BRA 0x1060 ;
Basic block id 57 - num instructions 2
 Instr 223 @ 0xdf0 (3568) - ISETP.NE.AND P0, PT, R18, 0x1d, PT ;
 Instr 224 @ 0xe00 (3584) - @!P0 BRA 0x1030 ;
Basic block id 58 - num instructions 2
 Instr 225 @ 0xe10 (3600) - ISETP.NE.AND P0, PT, R18, 0x2c, PT ;
 Instr 226 @ 0xe20 (3616) - @P0 BRA 0xef0 ;
Basic block id 59 - num instructions 6
 Instr 227 @ 0xe30 (3632) - LDG.E.U8.SYS R4, [R4] ;
 Instr 228 @ 0xe40 (3648) - BMOV.32.CLEAR RZ, B0 ;
 Instr 229 @ 0xe50 (3664) - BSSY B0, 0xed0 ;
 Instr 230 @ 0xe60 (3680) - IMAD.MOV.U32 R16, RZ, RZ, 0x400000 ;
 Instr 231 @ 0xe70 (3696) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 232 @ 0xe80 (3712) - @!P0 BRA 0xec0 ;
Basic block id 60 - num instructions 3
 Instr 233 @ 0xe90 (3728) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 234 @ 0xea0 (3744) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, 0x7f800001 ;
 Instr 235 @ 0xeb0 (3760) - @P0 IMAD.SHL.U32 R16, R4, 0x800000, RZ ;
Basic block id 61 - num instructions 3
 Instr 236 @ 0xec0 (3776) - BSYNC B0 ;
 Instr 237 @ 0xed0 (3792) - F2F.F64.F32 R16, R16 ;
 Instr 238 @ 0xee0 (3808) - BRA 0x1080 ;
Basic block id 62 - num instructions 18
 Instr 239 @ 0xef0 (3824) - UMOV UR8, 0xd33a2700 ;
 Instr 240 @ 0xf00 (3840) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 241 @ 0xf10 (3856) - UMOV UR9, 0x7f88 ;
 Instr 242 @ 0xf20 (3872) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 243 @ 0xf30 (3888) - UMOV UR6, 0xd33a2100 ;
 Instr 244 @ 0xf40 (3904) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 245 @ 0xf50 (3920) - UMOV UR7, 0x7f88 ;
 Instr 246 @ 0xf60 (3936) - IMAD.U32 R4, RZ, RZ, UR8 ;
 Instr 247 @ 0xf70 (3952) - UMOV UR4, 0xd33a0900 ;
 Instr 248 @ 0xf80 (3968) - IMAD.U32 R5, RZ, RZ, UR9 ;
 Instr 249 @ 0xf90 (3984) - UMOV UR5, 0x7f88 ;
 Instr 250 @ 0xfa0 (4000) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 251 @ 0xfb0 (4016) - MOV R20, 0xd7fc3810 ;
 Instr 252 @ 0xfc0 (4032) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 253 @ 0xfd0 (4048) - MOV R21, 0x7f88 ;
 Instr 254 @ 0xfe0 (4064) - IMAD.U32 R10, RZ, RZ, UR4 ;
 Instr 255 @ 0xff0 (4080) - IMAD.U32 R11, RZ, RZ, UR5 ;
 Instr 256 @ 0x1000 (4096) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 63 - num instructions 2
 Instr 257 @ 0x1010 (4112) - CS2R R16, SRZ ;
 Instr 258 @ 0x1020 (4128) - BRA 0x1080 ;
Basic block id 64 - num instructions 3
 Instr 259 @ 0x1030 (4144) - LDG.E.64.SYS R4, [R4] ;
 Instr 260 @ 0x1040 (4160) - I2F.F64.U64 R16, R4 ;
 Instr 261 @ 0x1050 (4176) - BRA 0x1080 ;
Basic block id 65 - num instructions 2
 Instr 262 @ 0x1060 (4192) - LDG.E.SYS R4, [R4] ;
 Instr 263 @ 0x1070 (4208) - I2F.F64.U32 R16, R4 ;
Basic block id 66 - num instructions 3
 Instr 264 @ 0x1080 (4224) - IADD3 R0, R22, 0x80, RZ ;
 Instr 265 @ 0x1090 (4240) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 266 @ 0x10a0 (4256) - @P0 BRA 0x7cf0 ;
Basic block id 67 - num instructions 6
 Instr 267 @ 0x10b0 (4272) - IMAD R0, R27, 0x400, R0 ;
 Instr 268 @ 0x10c0 (4288) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 269 @ 0x10d0 (4304) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 270 @ 0x10e0 (4320) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 271 @ 0x10f0 (4336) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 272 @ 0x1100 (4352) - @P1 BRA 0x14b0 ;
Basic block id 68 - num instructions 3
 Instr 273 @ 0x1110 (4368) - PRMT R0, R2, 0x9910, RZ ;
 Instr 274 @ 0x1120 (4384) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 275 @ 0x1130 (4400) - @P0 BRA 0x12f0 ;
Basic block id 69 - num instructions 2
 Instr 276 @ 0x1140 (4416) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 277 @ 0x1150 (4432) - @P0 BRA 0x1200 ;
Basic block id 70 - num instructions 2
 Instr 278 @ 0x1160 (4448) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 279 @ 0x1170 (4464) - @!P0 BRA 0x11d0 ;
Basic block id 71 - num instructions 2
 Instr 280 @ 0x1180 (4480) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 281 @ 0x1190 (4496) - @P0 BRA 0x1e70 ;
Basic block id 72 - num instructions 3
 Instr 282 @ 0x11a0 (4512) - LDG.E.S8.SYS R4, [R4] ;
 Instr 283 @ 0x11b0 (4528) - I2F.F64.S16 R24, R4 ;
 Instr 284 @ 0x11c0 (4544) - BRA 0x2000 ;
Basic block id 73 - num instructions 3
 Instr 285 @ 0x11d0 (4560) - LDG.E.U8.SYS R4, [R4] ;
 Instr 286 @ 0x11e0 (4576) - I2F.F64.U16 R24, R4 ;
 Instr 287 @ 0x11f0 (4592) - BRA 0x2000 ;
Basic block id 74 - num instructions 2
 Instr 288 @ 0x1200 (4608) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 289 @ 0x1210 (4624) - @!P0 BRA 0x12c0 ;
Basic block id 75 - num instructions 2
 Instr 290 @ 0x1220 (4640) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 291 @ 0x1230 (4656) - @!P0 BRA 0x1290 ;
Basic block id 76 - num instructions 2
 Instr 292 @ 0x1240 (4672) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 293 @ 0x1250 (4688) - @P0 BRA 0x1e70 ;
Basic block id 77 - num instructions 3
 Instr 294 @ 0x1260 (4704) - LDG.E.64.SYS R4, [R4] ;
 Instr 295 @ 0x1270 (4720) - I2F.F64.S64 R24, R4 ;
 Instr 296 @ 0x1280 (4736) - BRA 0x2000 ;
Basic block id 78 - num instructions 3
 Instr 297 @ 0x1290 (4752) - LDG.E.SYS R4, [R4] ;
 Instr 298 @ 0x12a0 (4768) - I2F.F64 R24, R4 ;
 Instr 299 @ 0x12b0 (4784) - BRA 0x2000 ;
Basic block id 79 - num instructions 3
 Instr 300 @ 0x12c0 (4800) - LDG.E.U16.SYS R4, [R4] ;
 Instr 301 @ 0x12d0 (4816) - I2F.F64.S16 R24, R4 ;
 Instr 302 @ 0x12e0 (4832) - BRA 0x2000 ;
Basic block id 80 - num instructions 2
 Instr 303 @ 0x12f0 (4848) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 304 @ 0x1300 (4864) - @P0 BRA 0x13c0 ;
Basic block id 81 - num instructions 2
 Instr 305 @ 0x1310 (4880) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 306 @ 0x1320 (4896) - @!P0 BRA 0x1380 ;
Basic block id 82 - num instructions 2
 Instr 307 @ 0x1330 (4912) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 308 @ 0x1340 (4928) - @P0 BRA 0x1e70 ;
Basic block id 83 - num instructions 3
 Instr 309 @ 0x1350 (4944) - LDG.E.SYS R4, [R4] ;
 Instr 310 @ 0x1360 (4960) - F2F.F64.F32 R24, R4 ;
 Instr 311 @ 0x1370 (4976) - BRA 0x2000 ;
Basic block id 84 - num instructions 4
 Instr 312 @ 0x1380 (4992) - LDG.E.U16.SYS R24, [R4] ;
 Instr 313 @ 0x1390 (5008) - HADD2.F32 R24, R24.H0_H0, -RZ.H0_H0 ;
 Instr 314 @ 0x13a0 (5024) - F2F.F64.F32 R24, R24 ;
 Instr 315 @ 0x13b0 (5040) - BRA 0x2000 ;
Basic block id 85 - num instructions 2
 Instr 316 @ 0x13c0 (5056) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 317 @ 0x13d0 (5072) - @!P0 BRA 0x1490 ;
Basic block id 86 - num instructions 2
 Instr 318 @ 0x13e0 (5088) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 319 @ 0x13f0 (5104) - @!P0 BRA 0x1450 ;
Basic block id 87 - num instructions 2
 Instr 320 @ 0x1400 (5120) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 321 @ 0x1410 (5136) - @P0 BRA 0x1e70 ;
Basic block id 88 - num instructions 3
 Instr 322 @ 0x1420 (5152) - LDG.E.SYS R4, [R4] ;
 Instr 323 @ 0x1430 (5168) - F2F.F64.F32 R24, R4 ;
 Instr 324 @ 0x1440 (5184) - BRA 0x2000 ;
Basic block id 89 - num instructions 4
 Instr 325 @ 0x1450 (5200) - LDG.E.U16.SYS R4, [R4] ;
 Instr 326 @ 0x1460 (5216) - HADD2.F32 R24, R4.H0_H0, -RZ.H0_H0 ;
 Instr 327 @ 0x1470 (5232) - F2F.F64.F32 R24, R24 ;
 Instr 328 @ 0x1480 (5248) - BRA 0x2000 ;
Basic block id 90 - num instructions 2
 Instr 329 @ 0x1490 (5264) - LDG.E.64.SYS R24, [R4] ;
 Instr 330 @ 0x14a0 (5280) - BRA 0x2000 ;
Basic block id 91 - num instructions 3
 Instr 331 @ 0x14b0 (5296) - PRMT R0, R2, 0x9910, RZ ;
 Instr 332 @ 0x14c0 (5312) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 333 @ 0x14d0 (5328) - @P0 BRA 0x1880 ;
Basic block id 92 - num instructions 2
 Instr 334 @ 0x14e0 (5344) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 335 @ 0x14f0 (5360) - @P0 BRA 0x15b0 ;
Basic block id 93 - num instructions 2
 Instr 336 @ 0x1500 (5376) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 337 @ 0x1510 (5392) - @!P0 BRA 0x1590 ;
Basic block id 94 - num instructions 2
 Instr 338 @ 0x1520 (5408) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 339 @ 0x1530 (5424) - @P0 BRA 0x1e70 ;
Basic block id 95 - num instructions 5
 Instr 340 @ 0x1540 (5440) - LDG.E.U8.SYS R4, [R4] ;
 Instr 341 @ 0x1550 (5456) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 342 @ 0x1560 (5472) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 343 @ 0x1570 (5488) - FSEL R25, RZ, 1.875, !P0 ;
 Instr 344 @ 0x1580 (5504) - BRA 0x2000 ;
Basic block id 96 - num instructions 2
 Instr 345 @ 0x1590 (5520) - LDG.E.64.SYS R24, [R4] ;
 Instr 346 @ 0x15a0 (5536) - BRA 0x2000 ;
Basic block id 97 - num instructions 2
 Instr 347 @ 0x15b0 (5552) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 348 @ 0x15c0 (5568) - @!P0 BRA 0x1840 ;
Basic block id 98 - num instructions 2
 Instr 349 @ 0x15d0 (5584) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 350 @ 0x15e0 (5600) - @!P0 BRA 0x1760 ;
Basic block id 99 - num instructions 2
 Instr 351 @ 0x15f0 (5616) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 352 @ 0x1600 (5632) - @P0 BRA 0x1e70 ;
Basic block id 100 - num instructions 21
 Instr 353 @ 0x1610 (5648) - LDG.E.U8.SYS R0, [R4] ;
 Instr 354 @ 0x1620 (5664) - IMAD.MOV.U32 R9, RZ, RZ, -0x800000 ;
 Instr 355 @ 0x1630 (5680) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 356 @ 0x1640 (5696) - LOP3.LUT R3, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 357 @ 0x1650 (5712) - IADD3 R7, R3.reuse, 0x1000000, RZ ;
 Instr 358 @ 0x1660 (5728) - FLO.U32 R6, R3 ;
 Instr 359 @ 0x1670 (5744) - IADD3 R4, R3, -0x1, RZ ;
 Instr 360 @ 0x1680 (5760) - SHF.R.S32.HI R7, RZ, 0x8, R7 ;
 Instr 361 @ 0x1690 (5776) - SHF.R.S32.HI R4, RZ, 0x1f, R4 ;
 Instr 362 @ 0x16a0 (5792) - IADD3 R6, -R6, 0x1f, RZ ;
 Instr 363 @ 0x16b0 (5808) - ISETP.GT.U32.AND P0, PT, R6.reuse, 0x4, PT ;
 Instr 364 @ 0x16c0 (5824) - IADD3 R6, R6, -0x4, RZ ;
 Instr 365 @ 0x16d0 (5840) - SEL R6, R6, RZ, P0 ;
 Instr 366 @ 0x16e0 (5856) - IMAD R9, R6, R9, 0x3c000000 ;
 Instr 367 @ 0x16f0 (5872) - SHF.L.U32 R6, R3, R6, RZ ;
 Instr 368 @ 0x1700 (5888) - LEA.HI R6, R6, R9, RZ, 0x1c ;
 Instr 369 @ 0x1710 (5904) - LOP3.LUT R7, R6, 0x7f800000, R7, 0xf8, !PT ;
 Instr 370 @ 0x1720 (5920) - LOP3.LUT R7, R7, R4, RZ, 0x30, !PT ;
 Instr 371 @ 0x1730 (5936) - LOP3.LUT R7, R7, 0x80000000, R0, 0xf8, !PT ;
 Instr 372 @ 0x1740 (5952) - F2F.F64.F32 R24, R7 ;
 Instr 373 @ 0x1750 (5968) - BRA 0x2000 ;
Basic block id 101 - num instructions 14
 Instr 374 @ 0x1760 (5984) - LDG.E.U8.SYS R4, [R4] ;
 Instr 375 @ 0x1770 (6000) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 376 @ 0x1780 (6016) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 377 @ 0x1790 (6032) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 378 @ 0x17a0 (6048) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 379 @ 0x17b0 (6064) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 380 @ 0x17c0 (6080) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 381 @ 0x17d0 (6096) - @P0 FMUL R3, R3, 1.9259299443872358531e-34 ;
 Instr 382 @ 0x17e0 (6112) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 383 @ 0x17f0 (6128) - @!P0 FADD R3, R0, -0.5 ;
 Instr 384 @ 0x1800 (6144) - IMAD.SHL.U32 R0, R4, 0x1000000, RZ ;
 Instr 385 @ 0x1810 (6160) - LOP3.LUT R3, R3, 0x80000000, R0, 0xf8, !PT ;
 Instr 386 @ 0x1820 (6176) - F2F.F64.F32 R24, R3 ;
 Instr 387 @ 0x1830 (6192) - BRA 0x2000 ;
Basic block id 102 - num instructions 4
 Instr 388 @ 0x1840 (6208) - LDG.E.U16.SYS R24, [R4] ;
 Instr 389 @ 0x1850 (6224) - PRMT R24, RZ, 0x5410, R24 ;
 Instr 390 @ 0x1860 (6240) - F2F.F64.F32 R24, R24 ;
 Instr 391 @ 0x1870 (6256) - BRA 0x2000 ;
Basic block id 103 - num instructions 2
 Instr 392 @ 0x1880 (6272) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 393 @ 0x1890 (6288) - @P0 BRA 0x1d50 ;
Basic block id 104 - num instructions 2
 Instr 394 @ 0x18a0 (6304) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 395 @ 0x18b0 (6320) - @!P0 BRA 0x1b40 ;
Basic block id 105 - num instructions 2
 Instr 396 @ 0x18c0 (6336) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 397 @ 0x18d0 (6352) - @!P0 BRA 0x1930 ;
Basic block id 106 - num instructions 2
 Instr 398 @ 0x18e0 (6368) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 399 @ 0x18f0 (6384) - @P0 BRA 0x1e70 ;
Basic block id 107 - num instructions 3
 Instr 400 @ 0x1900 (6400) - LDG.E.U16.SYS R4, [R4] ;
 Instr 401 @ 0x1910 (6416) - I2F.F64.U16 R24, R4 ;
 Instr 402 @ 0x1920 (6432) - BRA 0x2000 ;
Basic block id 108 - num instructions 6
 Instr 403 @ 0x1930 (6448) - LDG.E.U8.SYS R4, [R4] ;
 Instr 404 @ 0x1940 (6464) - BMOV.32.CLEAR RZ, B0 ;
 Instr 405 @ 0x1950 (6480) - BSSY B0, 0x1b20 ;
 Instr 406 @ 0x1960 (6496) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 407 @ 0x1970 (6512) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 408 @ 0x1980 (6528) - @!P0 BRA 0x1b10 ;
Basic block id 109 - num instructions 3
 Instr 409 @ 0x1990 (6544) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 410 @ 0x19a0 (6560) - @!P0 IMAD.MOV.U32 R24, RZ, RZ, 0x7f800001 ;
 Instr 411 @ 0x19b0 (6576) - @!P0 BRA 0x1b10 ;
Basic block id 110 - num instructions 1
 Instr 412 @ 0x19c0 (6592) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 111 - num instructions 10
 Instr 413 @ 0x19d0 (6608) - BMOV.32.CLEAR RZ, B1 ;
 Instr 414 @ 0x19e0 (6624) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 415 @ 0x19f0 (6640) - BSSY B1, 0x1ae0 ;
 Instr 416 @ 0x1a00 (6656) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 417 @ 0x1a10 (6672) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 418 @ 0x1a20 (6688) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 419 @ 0x1a30 (6704) - IMAD.U32 R24, R3, -0x80000000, RZ ;
 Instr 420 @ 0x1a40 (6720) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 421 @ 0x1a50 (6736) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 422 @ 0x1a60 (6752) - @P0 BRA 0x1ad0 ;
Basic block id 112 - num instructions 6
 Instr 423 @ 0x1a70 (6768) - FLO.U32 R4, R3 ;
 Instr 424 @ 0x1a80 (6784) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 425 @ 0x1a90 (6800) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 426 @ 0x1aa0 (6816) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 427 @ 0x1ab0 (6832) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 428 @ 0x1ac0 (6848) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 113 - num instructions 4
 Instr 429 @ 0x1ad0 (6864) - BSYNC B1 ;
 Instr 430 @ 0x1ae0 (6880) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 431 @ 0x1af0 (6896) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 432 @ 0x1b00 (6912) - LOP3.LUT R24, R5, R3, R24, 0xfe, !PT ;
Basic block id 114 - num instructions 3
 Instr 433 @ 0x1b10 (6928) - BSYNC B0 ;
 Instr 434 @ 0x1b20 (6944) - F2F.F64.F32 R24, R24 ;
 Instr 435 @ 0x1b30 (6960) - BRA 0x2000 ;
Basic block id 115 - num instructions 6
 Instr 436 @ 0x1b40 (6976) - LDG.E.U8.SYS R3, [R4] ;
 Instr 437 @ 0x1b50 (6992) - BMOV.32.CLEAR RZ, B0 ;
 Instr 438 @ 0x1b60 (7008) - BSSY B0, 0x1d30 ;
 Instr 439 @ 0x1b70 (7024) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 440 @ 0x1b80 (7040) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 441 @ 0x1b90 (7056) - @!P0 BRA 0x1d20 ;
Basic block id 116 - num instructions 3
 Instr 442 @ 0x1ba0 (7072) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 443 @ 0x1bb0 (7088) - @!P0 IMAD.MOV.U32 R24, RZ, RZ, 0x7f800001 ;
 Instr 444 @ 0x1bc0 (7104) - @!P0 BRA 0x1d20 ;
Basic block id 117 - num instructions 1
 Instr 445 @ 0x1bd0 (7120) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Basic block id 118 - num instructions 10
 Instr 446 @ 0x1be0 (7136) - BMOV.32.CLEAR RZ, B1 ;
 Instr 447 @ 0x1bf0 (7152) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 448 @ 0x1c00 (7168) - BSSY B1, 0x1cf0 ;
 Instr 449 @ 0x1c10 (7184) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 450 @ 0x1c20 (7200) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 451 @ 0x1c30 (7216) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 452 @ 0x1c40 (7232) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 453 @ 0x1c50 (7248) - IMAD.U32 R24, R4, -0x80000000, RZ ;
 Instr 454 @ 0x1c60 (7264) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 455 @ 0x1c70 (7280) - @P0 BRA 0x1ce0 ;
Basic block id 119 - num instructions 6
 Instr 456 @ 0x1c80 (7296) - FLO.U32 R4, R3 ;
 Instr 457 @ 0x1c90 (7312) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 458 @ 0x1ca0 (7328) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 459 @ 0x1cb0 (7344) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 460 @ 0x1cc0 (7360) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 461 @ 0x1cd0 (7376) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 120 - num instructions 4
 Instr 462 @ 0x1ce0 (7392) - BSYNC B1 ;
 Instr 463 @ 0x1cf0 (7408) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 464 @ 0x1d00 (7424) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 465 @ 0x1d10 (7440) - LOP3.LUT R24, R0, R3, R24, 0xfe, !PT ;
Basic block id 121 - num instructions 3
 Instr 466 @ 0x1d20 (7456) - BSYNC B0 ;
 Instr 467 @ 0x1d30 (7472) - F2F.F64.F32 R24, R24 ;
 Instr 468 @ 0x1d40 (7488) - BRA 0x2000 ;
Basic block id 122 - num instructions 2
 Instr 469 @ 0x1d50 (7504) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 470 @ 0x1d60 (7520) - @!P0 BRA 0x1fe0 ;
Basic block id 123 - num instructions 2
 Instr 471 @ 0x1d70 (7536) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 472 @ 0x1d80 (7552) - @!P0 BRA 0x1fb0 ;
Basic block id 124 - num instructions 2
 Instr 473 @ 0x1d90 (7568) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 474 @ 0x1da0 (7584) - @P0 BRA 0x1e70 ;
Basic block id 125 - num instructions 6
 Instr 475 @ 0x1db0 (7600) - LDG.E.U8.SYS R4, [R4] ;
 Instr 476 @ 0x1dc0 (7616) - BMOV.32.CLEAR RZ, B0 ;
 Instr 477 @ 0x1dd0 (7632) - BSSY B0, 0x1e50 ;
 Instr 478 @ 0x1de0 (7648) - IMAD.MOV.U32 R24, RZ, RZ, 0x400000 ;
 Instr 479 @ 0x1df0 (7664) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 480 @ 0x1e00 (7680) - @!P0 BRA 0x1e40 ;
Basic block id 126 - num instructions 3
 Instr 481 @ 0x1e10 (7696) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 482 @ 0x1e20 (7712) - @!P0 IMAD.MOV.U32 R24, RZ, RZ, 0x7f800001 ;
 Instr 483 @ 0x1e30 (7728) - @P0 IMAD.SHL.U32 R24, R4, 0x800000, RZ ;
Basic block id 127 - num instructions 3
 Instr 484 @ 0x1e40 (7744) - BSYNC B0 ;
 Instr 485 @ 0x1e50 (7760) - F2F.F64.F32 R24, R24 ;
 Instr 486 @ 0x1e60 (7776) - BRA 0x2000 ;
Basic block id 128 - num instructions 18
 Instr 487 @ 0x1e70 (7792) - UMOV UR4, 0xd33a2700 ;
 Instr 488 @ 0x1e80 (7808) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 489 @ 0x1e90 (7824) - UMOV UR5, 0x7f88 ;
 Instr 490 @ 0x1ea0 (7840) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 491 @ 0x1eb0 (7856) - UMOV UR6, 0xd33a2100 ;
 Instr 492 @ 0x1ec0 (7872) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 493 @ 0x1ed0 (7888) - UMOV UR7, 0x7f88 ;
 Instr 494 @ 0x1ee0 (7904) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 495 @ 0x1ef0 (7920) - UMOV UR8, 0xd33a0900 ;
 Instr 496 @ 0x1f00 (7936) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 497 @ 0x1f10 (7952) - UMOV UR9, 0x7f88 ;
 Instr 498 @ 0x1f20 (7968) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 499 @ 0x1f30 (7984) - MOV R20, 0xd7fc4790 ;
 Instr 500 @ 0x1f40 (8000) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 501 @ 0x1f50 (8016) - MOV R21, 0x7f88 ;
 Instr 502 @ 0x1f60 (8032) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 503 @ 0x1f70 (8048) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 504 @ 0x1f80 (8064) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 129 - num instructions 2
 Instr 505 @ 0x1f90 (8080) - CS2R R24, SRZ ;
 Instr 506 @ 0x1fa0 (8096) - BRA 0x2000 ;
Basic block id 130 - num instructions 3
 Instr 507 @ 0x1fb0 (8112) - LDG.E.64.SYS R4, [R4] ;
 Instr 508 @ 0x1fc0 (8128) - I2F.F64.U64 R24, R4 ;
 Instr 509 @ 0x1fd0 (8144) - BRA 0x2000 ;
Basic block id 131 - num instructions 2
 Instr 510 @ 0x1fe0 (8160) - LDG.E.SYS R4, [R4] ;
 Instr 511 @ 0x1ff0 (8176) - I2F.F64.U32 R24, R4 ;
Basic block id 132 - num instructions 3
 Instr 512 @ 0x2000 (8192) - IADD3 R0, R22, 0x100, RZ ;
 Instr 513 @ 0x2010 (8208) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 514 @ 0x2020 (8224) - @P0 BRA 0x7cf0 ;
Basic block id 133 - num instructions 6
 Instr 515 @ 0x2030 (8240) - IMAD R0, R27, 0x400, R0 ;
 Instr 516 @ 0x2040 (8256) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 517 @ 0x2050 (8272) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 518 @ 0x2060 (8288) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 519 @ 0x2070 (8304) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 520 @ 0x2080 (8320) - @P1 BRA 0x2430 ;
Basic block id 134 - num instructions 3
 Instr 521 @ 0x2090 (8336) - PRMT R0, R2, 0x9910, RZ ;
 Instr 522 @ 0x20a0 (8352) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 523 @ 0x20b0 (8368) - @P0 BRA 0x2270 ;
Basic block id 135 - num instructions 2
 Instr 524 @ 0x20c0 (8384) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 525 @ 0x20d0 (8400) - @P0 BRA 0x2180 ;
Basic block id 136 - num instructions 2
 Instr 526 @ 0x20e0 (8416) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 527 @ 0x20f0 (8432) - @!P0 BRA 0x2150 ;
Basic block id 137 - num instructions 2
 Instr 528 @ 0x2100 (8448) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 529 @ 0x2110 (8464) - @P0 BRA 0x2df0 ;
Basic block id 138 - num instructions 3
 Instr 530 @ 0x2120 (8480) - LDG.E.S8.SYS R4, [R4] ;
 Instr 531 @ 0x2130 (8496) - I2F.F64.S16 R28, R4 ;
 Instr 532 @ 0x2140 (8512) - BRA 0x2f80 ;
Basic block id 139 - num instructions 3
 Instr 533 @ 0x2150 (8528) - LDG.E.U8.SYS R4, [R4] ;
 Instr 534 @ 0x2160 (8544) - I2F.F64.U16 R28, R4 ;
 Instr 535 @ 0x2170 (8560) - BRA 0x2f80 ;
Basic block id 140 - num instructions 2
 Instr 536 @ 0x2180 (8576) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 537 @ 0x2190 (8592) - @!P0 BRA 0x2240 ;
Basic block id 141 - num instructions 2
 Instr 538 @ 0x21a0 (8608) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 539 @ 0x21b0 (8624) - @!P0 BRA 0x2210 ;
Basic block id 142 - num instructions 2
 Instr 540 @ 0x21c0 (8640) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 541 @ 0x21d0 (8656) - @P0 BRA 0x2df0 ;
Basic block id 143 - num instructions 3
 Instr 542 @ 0x21e0 (8672) - LDG.E.64.SYS R4, [R4] ;
 Instr 543 @ 0x21f0 (8688) - I2F.F64.S64 R28, R4 ;
 Instr 544 @ 0x2200 (8704) - BRA 0x2f80 ;
Basic block id 144 - num instructions 3
 Instr 545 @ 0x2210 (8720) - LDG.E.SYS R4, [R4] ;
 Instr 546 @ 0x2220 (8736) - I2F.F64 R28, R4 ;
 Instr 547 @ 0x2230 (8752) - BRA 0x2f80 ;
Basic block id 145 - num instructions 3
 Instr 548 @ 0x2240 (8768) - LDG.E.U16.SYS R4, [R4] ;
 Instr 549 @ 0x2250 (8784) - I2F.F64.S16 R28, R4 ;
 Instr 550 @ 0x2260 (8800) - BRA 0x2f80 ;
Basic block id 146 - num instructions 2
 Instr 551 @ 0x2270 (8816) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 552 @ 0x2280 (8832) - @P0 BRA 0x2340 ;
Basic block id 147 - num instructions 2
 Instr 553 @ 0x2290 (8848) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 554 @ 0x22a0 (8864) - @!P0 BRA 0x2300 ;
Basic block id 148 - num instructions 2
 Instr 555 @ 0x22b0 (8880) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 556 @ 0x22c0 (8896) - @P0 BRA 0x2df0 ;
Basic block id 149 - num instructions 3
 Instr 557 @ 0x22d0 (8912) - LDG.E.SYS R4, [R4] ;
 Instr 558 @ 0x22e0 (8928) - F2F.F64.F32 R28, R4 ;
 Instr 559 @ 0x22f0 (8944) - BRA 0x2f80 ;
Basic block id 150 - num instructions 4
 Instr 560 @ 0x2300 (8960) - LDG.E.U16.SYS R28, [R4] ;
 Instr 561 @ 0x2310 (8976) - HADD2.F32 R28, R28.H0_H0, -RZ.H0_H0 ;
 Instr 562 @ 0x2320 (8992) - F2F.F64.F32 R28, R28 ;
 Instr 563 @ 0x2330 (9008) - BRA 0x2f80 ;
Basic block id 151 - num instructions 2
 Instr 564 @ 0x2340 (9024) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 565 @ 0x2350 (9040) - @!P0 BRA 0x2410 ;
Basic block id 152 - num instructions 2
 Instr 566 @ 0x2360 (9056) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 567 @ 0x2370 (9072) - @!P0 BRA 0x23d0 ;
Basic block id 153 - num instructions 2
 Instr 568 @ 0x2380 (9088) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 569 @ 0x2390 (9104) - @P0 BRA 0x2df0 ;
Basic block id 154 - num instructions 3
 Instr 570 @ 0x23a0 (9120) - LDG.E.SYS R4, [R4] ;
 Instr 571 @ 0x23b0 (9136) - F2F.F64.F32 R28, R4 ;
 Instr 572 @ 0x23c0 (9152) - BRA 0x2f80 ;
Basic block id 155 - num instructions 4
 Instr 573 @ 0x23d0 (9168) - LDG.E.U16.SYS R4, [R4] ;
 Instr 574 @ 0x23e0 (9184) - HADD2.F32 R28, R4.H0_H0, -RZ.H0_H0 ;
 Instr 575 @ 0x23f0 (9200) - F2F.F64.F32 R28, R28 ;
 Instr 576 @ 0x2400 (9216) - BRA 0x2f80 ;
Basic block id 156 - num instructions 2
 Instr 577 @ 0x2410 (9232) - LDG.E.64.SYS R28, [R4] ;
 Instr 578 @ 0x2420 (9248) - BRA 0x2f80 ;
Basic block id 157 - num instructions 3
 Instr 579 @ 0x2430 (9264) - PRMT R0, R2, 0x9910, RZ ;
 Instr 580 @ 0x2440 (9280) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 581 @ 0x2450 (9296) - @P0 BRA 0x2800 ;
Basic block id 158 - num instructions 2
 Instr 582 @ 0x2460 (9312) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 583 @ 0x2470 (9328) - @P0 BRA 0x2530 ;
Basic block id 159 - num instructions 2
 Instr 584 @ 0x2480 (9344) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 585 @ 0x2490 (9360) - @!P0 BRA 0x2510 ;
Basic block id 160 - num instructions 2
 Instr 586 @ 0x24a0 (9376) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 587 @ 0x24b0 (9392) - @P0 BRA 0x2df0 ;
Basic block id 161 - num instructions 5
 Instr 588 @ 0x24c0 (9408) - LDG.E.U8.SYS R4, [R4] ;
 Instr 589 @ 0x24d0 (9424) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 590 @ 0x24e0 (9440) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 591 @ 0x24f0 (9456) - FSEL R29, RZ, 1.875, !P0 ;
 Instr 592 @ 0x2500 (9472) - BRA 0x2f80 ;
Basic block id 162 - num instructions 2
 Instr 593 @ 0x2510 (9488) - LDG.E.64.SYS R28, [R4] ;
 Instr 594 @ 0x2520 (9504) - BRA 0x2f80 ;
Basic block id 163 - num instructions 2
 Instr 595 @ 0x2530 (9520) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 596 @ 0x2540 (9536) - @!P0 BRA 0x27c0 ;
Basic block id 164 - num instructions 2
 Instr 597 @ 0x2550 (9552) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 598 @ 0x2560 (9568) - @!P0 BRA 0x26e0 ;
Basic block id 165 - num instructions 2
 Instr 599 @ 0x2570 (9584) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 600 @ 0x2580 (9600) - @P0 BRA 0x2df0 ;
Basic block id 166 - num instructions 21
 Instr 601 @ 0x2590 (9616) - LDG.E.U8.SYS R0, [R4] ;
 Instr 602 @ 0x25a0 (9632) - IMAD.MOV.U32 R9, RZ, RZ, -0x800000 ;
 Instr 603 @ 0x25b0 (9648) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 604 @ 0x25c0 (9664) - LOP3.LUT R3, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 605 @ 0x25d0 (9680) - IADD3 R7, R3.reuse, 0x1000000, RZ ;
 Instr 606 @ 0x25e0 (9696) - FLO.U32 R6, R3 ;
 Instr 607 @ 0x25f0 (9712) - IADD3 R4, R3, -0x1, RZ ;
 Instr 608 @ 0x2600 (9728) - SHF.R.S32.HI R7, RZ, 0x8, R7 ;
 Instr 609 @ 0x2610 (9744) - SHF.R.S32.HI R4, RZ, 0x1f, R4 ;
 Instr 610 @ 0x2620 (9760) - IADD3 R6, -R6, 0x1f, RZ ;
 Instr 611 @ 0x2630 (9776) - ISETP.GT.U32.AND P0, PT, R6.reuse, 0x4, PT ;
 Instr 612 @ 0x2640 (9792) - IADD3 R6, R6, -0x4, RZ ;
 Instr 613 @ 0x2650 (9808) - SEL R6, R6, RZ, P0 ;
 Instr 614 @ 0x2660 (9824) - IMAD R9, R6, R9, 0x3c000000 ;
 Instr 615 @ 0x2670 (9840) - SHF.L.U32 R6, R3, R6, RZ ;
 Instr 616 @ 0x2680 (9856) - LEA.HI R6, R6, R9, RZ, 0x1c ;
 Instr 617 @ 0x2690 (9872) - LOP3.LUT R7, R6, 0x7f800000, R7, 0xf8, !PT ;
 Instr 618 @ 0x26a0 (9888) - LOP3.LUT R7, R7, R4, RZ, 0x30, !PT ;
 Instr 619 @ 0x26b0 (9904) - LOP3.LUT R7, R7, 0x80000000, R0, 0xf8, !PT ;
 Instr 620 @ 0x26c0 (9920) - F2F.F64.F32 R28, R7 ;
 Instr 621 @ 0x26d0 (9936) - BRA 0x2f80 ;
Basic block id 167 - num instructions 14
 Instr 622 @ 0x26e0 (9952) - LDG.E.U8.SYS R4, [R4] ;
 Instr 623 @ 0x26f0 (9968) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 624 @ 0x2700 (9984) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 625 @ 0x2710 (10000) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 626 @ 0x2720 (10016) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 627 @ 0x2730 (10032) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 628 @ 0x2740 (10048) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 629 @ 0x2750 (10064) - @P0 FMUL R3, R3, 1.9259299443872358531e-34 ;
 Instr 630 @ 0x2760 (10080) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 631 @ 0x2770 (10096) - @!P0 FADD R3, R0, -0.5 ;
 Instr 632 @ 0x2780 (10112) - IMAD.SHL.U32 R0, R4, 0x1000000, RZ ;
 Instr 633 @ 0x2790 (10128) - LOP3.LUT R3, R3, 0x80000000, R0, 0xf8, !PT ;
 Instr 634 @ 0x27a0 (10144) - F2F.F64.F32 R28, R3 ;
 Instr 635 @ 0x27b0 (10160) - BRA 0x2f80 ;
Basic block id 168 - num instructions 4
 Instr 636 @ 0x27c0 (10176) - LDG.E.U16.SYS R28, [R4] ;
 Instr 637 @ 0x27d0 (10192) - PRMT R28, RZ, 0x5410, R28 ;
 Instr 638 @ 0x27e0 (10208) - F2F.F64.F32 R28, R28 ;
 Instr 639 @ 0x27f0 (10224) - BRA 0x2f80 ;
Basic block id 169 - num instructions 2
 Instr 640 @ 0x2800 (10240) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 641 @ 0x2810 (10256) - @P0 BRA 0x2cd0 ;
Basic block id 170 - num instructions 2
 Instr 642 @ 0x2820 (10272) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 643 @ 0x2830 (10288) - @!P0 BRA 0x2ac0 ;
Basic block id 171 - num instructions 2
 Instr 644 @ 0x2840 (10304) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 645 @ 0x2850 (10320) - @!P0 BRA 0x28b0 ;
Basic block id 172 - num instructions 2
 Instr 646 @ 0x2860 (10336) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 647 @ 0x2870 (10352) - @P0 BRA 0x2df0 ;
Basic block id 173 - num instructions 3
 Instr 648 @ 0x2880 (10368) - LDG.E.U16.SYS R4, [R4] ;
 Instr 649 @ 0x2890 (10384) - I2F.F64.U16 R28, R4 ;
 Instr 650 @ 0x28a0 (10400) - BRA 0x2f80 ;
Basic block id 174 - num instructions 6
 Instr 651 @ 0x28b0 (10416) - LDG.E.U8.SYS R4, [R4] ;
 Instr 652 @ 0x28c0 (10432) - BMOV.32.CLEAR RZ, B0 ;
 Instr 653 @ 0x28d0 (10448) - BSSY B0, 0x2aa0 ;
 Instr 654 @ 0x28e0 (10464) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 655 @ 0x28f0 (10480) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 656 @ 0x2900 (10496) - @!P0 BRA 0x2a90 ;
Basic block id 175 - num instructions 3
 Instr 657 @ 0x2910 (10512) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 658 @ 0x2920 (10528) - @!P0 IMAD.MOV.U32 R28, RZ, RZ, 0x7f800001 ;
 Instr 659 @ 0x2930 (10544) - @!P0 BRA 0x2a90 ;
Basic block id 176 - num instructions 1
 Instr 660 @ 0x2940 (10560) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 177 - num instructions 10
 Instr 661 @ 0x2950 (10576) - BMOV.32.CLEAR RZ, B1 ;
 Instr 662 @ 0x2960 (10592) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 663 @ 0x2970 (10608) - BSSY B1, 0x2a60 ;
 Instr 664 @ 0x2980 (10624) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 665 @ 0x2990 (10640) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 666 @ 0x29a0 (10656) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 667 @ 0x29b0 (10672) - IMAD.U32 R28, R3, -0x80000000, RZ ;
 Instr 668 @ 0x29c0 (10688) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 669 @ 0x29d0 (10704) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 670 @ 0x29e0 (10720) - @P0 BRA 0x2a50 ;
Basic block id 178 - num instructions 6
 Instr 671 @ 0x29f0 (10736) - FLO.U32 R4, R3 ;
 Instr 672 @ 0x2a00 (10752) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 673 @ 0x2a10 (10768) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 674 @ 0x2a20 (10784) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 675 @ 0x2a30 (10800) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 676 @ 0x2a40 (10816) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 179 - num instructions 4
 Instr 677 @ 0x2a50 (10832) - BSYNC B1 ;
 Instr 678 @ 0x2a60 (10848) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 679 @ 0x2a70 (10864) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 680 @ 0x2a80 (10880) - LOP3.LUT R28, R5, R3, R28, 0xfe, !PT ;
Basic block id 180 - num instructions 3
 Instr 681 @ 0x2a90 (10896) - BSYNC B0 ;
 Instr 682 @ 0x2aa0 (10912) - F2F.F64.F32 R28, R28 ;
 Instr 683 @ 0x2ab0 (10928) - BRA 0x2f80 ;
Basic block id 181 - num instructions 6
 Instr 684 @ 0x2ac0 (10944) - LDG.E.U8.SYS R3, [R4] ;
 Instr 685 @ 0x2ad0 (10960) - BMOV.32.CLEAR RZ, B0 ;
 Instr 686 @ 0x2ae0 (10976) - BSSY B0, 0x2cb0 ;
 Instr 687 @ 0x2af0 (10992) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 688 @ 0x2b00 (11008) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 689 @ 0x2b10 (11024) - @!P0 BRA 0x2ca0 ;
Basic block id 182 - num instructions 3
 Instr 690 @ 0x2b20 (11040) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 691 @ 0x2b30 (11056) - @!P0 IMAD.MOV.U32 R28, RZ, RZ, 0x7f800001 ;
 Instr 692 @ 0x2b40 (11072) - @!P0 BRA 0x2ca0 ;
Basic block id 183 - num instructions 1
 Instr 693 @ 0x2b50 (11088) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Basic block id 184 - num instructions 10
 Instr 694 @ 0x2b60 (11104) - BMOV.32.CLEAR RZ, B1 ;
 Instr 695 @ 0x2b70 (11120) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 696 @ 0x2b80 (11136) - BSSY B1, 0x2c70 ;
 Instr 697 @ 0x2b90 (11152) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 698 @ 0x2ba0 (11168) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 699 @ 0x2bb0 (11184) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 700 @ 0x2bc0 (11200) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 701 @ 0x2bd0 (11216) - IMAD.U32 R28, R4, -0x80000000, RZ ;
 Instr 702 @ 0x2be0 (11232) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 703 @ 0x2bf0 (11248) - @P0 BRA 0x2c60 ;
Basic block id 185 - num instructions 6
 Instr 704 @ 0x2c00 (11264) - FLO.U32 R4, R3 ;
 Instr 705 @ 0x2c10 (11280) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 706 @ 0x2c20 (11296) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 707 @ 0x2c30 (11312) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 708 @ 0x2c40 (11328) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 709 @ 0x2c50 (11344) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 186 - num instructions 4
 Instr 710 @ 0x2c60 (11360) - BSYNC B1 ;
 Instr 711 @ 0x2c70 (11376) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 712 @ 0x2c80 (11392) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 713 @ 0x2c90 (11408) - LOP3.LUT R28, R0, R3, R28, 0xfe, !PT ;
Basic block id 187 - num instructions 3
 Instr 714 @ 0x2ca0 (11424) - BSYNC B0 ;
 Instr 715 @ 0x2cb0 (11440) - F2F.F64.F32 R28, R28 ;
 Instr 716 @ 0x2cc0 (11456) - BRA 0x2f80 ;
Basic block id 188 - num instructions 2
 Instr 717 @ 0x2cd0 (11472) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 718 @ 0x2ce0 (11488) - @!P0 BRA 0x2f60 ;
Basic block id 189 - num instructions 2
 Instr 719 @ 0x2cf0 (11504) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 720 @ 0x2d00 (11520) - @!P0 BRA 0x2f30 ;
Basic block id 190 - num instructions 2
 Instr 721 @ 0x2d10 (11536) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 722 @ 0x2d20 (11552) - @P0 BRA 0x2df0 ;
Basic block id 191 - num instructions 6
 Instr 723 @ 0x2d30 (11568) - LDG.E.U8.SYS R4, [R4] ;
 Instr 724 @ 0x2d40 (11584) - BMOV.32.CLEAR RZ, B0 ;
 Instr 725 @ 0x2d50 (11600) - BSSY B0, 0x2dd0 ;
 Instr 726 @ 0x2d60 (11616) - IMAD.MOV.U32 R28, RZ, RZ, 0x400000 ;
 Instr 727 @ 0x2d70 (11632) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 728 @ 0x2d80 (11648) - @!P0 BRA 0x2dc0 ;
Basic block id 192 - num instructions 3
 Instr 729 @ 0x2d90 (11664) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 730 @ 0x2da0 (11680) - @!P0 IMAD.MOV.U32 R28, RZ, RZ, 0x7f800001 ;
 Instr 731 @ 0x2db0 (11696) - @P0 IMAD.SHL.U32 R28, R4, 0x800000, RZ ;
Basic block id 193 - num instructions 3
 Instr 732 @ 0x2dc0 (11712) - BSYNC B0 ;
 Instr 733 @ 0x2dd0 (11728) - F2F.F64.F32 R28, R28 ;
 Instr 734 @ 0x2de0 (11744) - BRA 0x2f80 ;
Basic block id 194 - num instructions 18
 Instr 735 @ 0x2df0 (11760) - UMOV UR4, 0xd33a2700 ;
 Instr 736 @ 0x2e00 (11776) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 737 @ 0x2e10 (11792) - UMOV UR5, 0x7f88 ;
 Instr 738 @ 0x2e20 (11808) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 739 @ 0x2e30 (11824) - UMOV UR6, 0xd33a2100 ;
 Instr 740 @ 0x2e40 (11840) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 741 @ 0x2e50 (11856) - UMOV UR7, 0x7f88 ;
 Instr 742 @ 0x2e60 (11872) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 743 @ 0x2e70 (11888) - UMOV UR8, 0xd33a0900 ;
 Instr 744 @ 0x2e80 (11904) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 745 @ 0x2e90 (11920) - UMOV UR9, 0x7f88 ;
 Instr 746 @ 0x2ea0 (11936) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 747 @ 0x2eb0 (11952) - MOV R20, 0xd7fc5710 ;
 Instr 748 @ 0x2ec0 (11968) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 749 @ 0x2ed0 (11984) - MOV R21, 0x7f88 ;
 Instr 750 @ 0x2ee0 (12000) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 751 @ 0x2ef0 (12016) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 752 @ 0x2f00 (12032) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 195 - num instructions 2
 Instr 753 @ 0x2f10 (12048) - CS2R R28, SRZ ;
 Instr 754 @ 0x2f20 (12064) - BRA 0x2f80 ;
Basic block id 196 - num instructions 3
 Instr 755 @ 0x2f30 (12080) - LDG.E.64.SYS R4, [R4] ;
 Instr 756 @ 0x2f40 (12096) - I2F.F64.U64 R28, R4 ;
 Instr 757 @ 0x2f50 (12112) - BRA 0x2f80 ;
Basic block id 197 - num instructions 2
 Instr 758 @ 0x2f60 (12128) - LDG.E.SYS R4, [R4] ;
 Instr 759 @ 0x2f70 (12144) - I2F.F64.U32 R28, R4 ;
Basic block id 198 - num instructions 3
 Instr 760 @ 0x2f80 (12160) - IADD3 R0, R22, 0x180, RZ ;
 Instr 761 @ 0x2f90 (12176) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 762 @ 0x2fa0 (12192) - @P0 BRA 0x7cf0 ;
Basic block id 199 - num instructions 6
 Instr 763 @ 0x2fb0 (12208) - IMAD R0, R27, 0x400, R0 ;
 Instr 764 @ 0x2fc0 (12224) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 765 @ 0x2fd0 (12240) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 766 @ 0x2fe0 (12256) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 767 @ 0x2ff0 (12272) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 768 @ 0x3000 (12288) - @P1 BRA 0x33b0 ;
Basic block id 200 - num instructions 3
 Instr 769 @ 0x3010 (12304) - PRMT R0, R2, 0x9910, RZ ;
 Instr 770 @ 0x3020 (12320) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 771 @ 0x3030 (12336) - @P0 BRA 0x31f0 ;
Basic block id 201 - num instructions 2
 Instr 772 @ 0x3040 (12352) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 773 @ 0x3050 (12368) - @P0 BRA 0x3100 ;
Basic block id 202 - num instructions 2
 Instr 774 @ 0x3060 (12384) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 775 @ 0x3070 (12400) - @!P0 BRA 0x30d0 ;
Basic block id 203 - num instructions 2
 Instr 776 @ 0x3080 (12416) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 777 @ 0x3090 (12432) - @P0 BRA 0x3d70 ;
Basic block id 204 - num instructions 3
 Instr 778 @ 0x30a0 (12448) - LDG.E.S8.SYS R4, [R4] ;
 Instr 779 @ 0x30b0 (12464) - I2F.F64.S16 R36, R4 ;
 Instr 780 @ 0x30c0 (12480) - BRA 0x3f00 ;
Basic block id 205 - num instructions 3
 Instr 781 @ 0x30d0 (12496) - LDG.E.U8.SYS R4, [R4] ;
 Instr 782 @ 0x30e0 (12512) - I2F.F64.U16 R36, R4 ;
 Instr 783 @ 0x30f0 (12528) - BRA 0x3f00 ;
Basic block id 206 - num instructions 2
 Instr 784 @ 0x3100 (12544) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 785 @ 0x3110 (12560) - @!P0 BRA 0x31c0 ;
Basic block id 207 - num instructions 2
 Instr 786 @ 0x3120 (12576) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 787 @ 0x3130 (12592) - @!P0 BRA 0x3190 ;
Basic block id 208 - num instructions 2
 Instr 788 @ 0x3140 (12608) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 789 @ 0x3150 (12624) - @P0 BRA 0x3d70 ;
Basic block id 209 - num instructions 3
 Instr 790 @ 0x3160 (12640) - LDG.E.64.SYS R4, [R4] ;
 Instr 791 @ 0x3170 (12656) - I2F.F64.S64 R36, R4 ;
 Instr 792 @ 0x3180 (12672) - BRA 0x3f00 ;
Basic block id 210 - num instructions 3
 Instr 793 @ 0x3190 (12688) - LDG.E.SYS R4, [R4] ;
 Instr 794 @ 0x31a0 (12704) - I2F.F64 R36, R4 ;
 Instr 795 @ 0x31b0 (12720) - BRA 0x3f00 ;
Basic block id 211 - num instructions 3
 Instr 796 @ 0x31c0 (12736) - LDG.E.U16.SYS R4, [R4] ;
 Instr 797 @ 0x31d0 (12752) - I2F.F64.S16 R36, R4 ;
 Instr 798 @ 0x31e0 (12768) - BRA 0x3f00 ;
Basic block id 212 - num instructions 2
 Instr 799 @ 0x31f0 (12784) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 800 @ 0x3200 (12800) - @P0 BRA 0x32c0 ;
Basic block id 213 - num instructions 2
 Instr 801 @ 0x3210 (12816) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 802 @ 0x3220 (12832) - @!P0 BRA 0x3280 ;
Basic block id 214 - num instructions 2
 Instr 803 @ 0x3230 (12848) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 804 @ 0x3240 (12864) - @P0 BRA 0x3d70 ;
Basic block id 215 - num instructions 3
 Instr 805 @ 0x3250 (12880) - LDG.E.SYS R4, [R4] ;
 Instr 806 @ 0x3260 (12896) - F2F.F64.F32 R36, R4 ;
 Instr 807 @ 0x3270 (12912) - BRA 0x3f00 ;
Basic block id 216 - num instructions 4
 Instr 808 @ 0x3280 (12928) - LDG.E.U16.SYS R36, [R4] ;
 Instr 809 @ 0x3290 (12944) - HADD2.F32 R36, R36.H0_H0, -RZ.H0_H0 ;
 Instr 810 @ 0x32a0 (12960) - F2F.F64.F32 R36, R36 ;
 Instr 811 @ 0x32b0 (12976) - BRA 0x3f00 ;
Basic block id 217 - num instructions 2
 Instr 812 @ 0x32c0 (12992) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 813 @ 0x32d0 (13008) - @!P0 BRA 0x3390 ;
Basic block id 218 - num instructions 2
 Instr 814 @ 0x32e0 (13024) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 815 @ 0x32f0 (13040) - @!P0 BRA 0x3350 ;
Basic block id 219 - num instructions 2
 Instr 816 @ 0x3300 (13056) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 817 @ 0x3310 (13072) - @P0 BRA 0x3d70 ;
Basic block id 220 - num instructions 3
 Instr 818 @ 0x3320 (13088) - LDG.E.SYS R4, [R4] ;
 Instr 819 @ 0x3330 (13104) - F2F.F64.F32 R36, R4 ;
 Instr 820 @ 0x3340 (13120) - BRA 0x3f00 ;
Basic block id 221 - num instructions 4
 Instr 821 @ 0x3350 (13136) - LDG.E.U16.SYS R4, [R4] ;
 Instr 822 @ 0x3360 (13152) - HADD2.F32 R36, R4.H0_H0, -RZ.H0_H0 ;
 Instr 823 @ 0x3370 (13168) - F2F.F64.F32 R36, R36 ;
 Instr 824 @ 0x3380 (13184) - BRA 0x3f00 ;
Basic block id 222 - num instructions 2
 Instr 825 @ 0x3390 (13200) - LDG.E.64.SYS R36, [R4] ;
 Instr 826 @ 0x33a0 (13216) - BRA 0x3f00 ;
Basic block id 223 - num instructions 3
 Instr 827 @ 0x33b0 (13232) - PRMT R0, R2, 0x9910, RZ ;
 Instr 828 @ 0x33c0 (13248) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 829 @ 0x33d0 (13264) - @P0 BRA 0x3780 ;
Basic block id 224 - num instructions 2
 Instr 830 @ 0x33e0 (13280) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 831 @ 0x33f0 (13296) - @P0 BRA 0x34b0 ;
Basic block id 225 - num instructions 2
 Instr 832 @ 0x3400 (13312) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 833 @ 0x3410 (13328) - @!P0 BRA 0x3490 ;
Basic block id 226 - num instructions 2
 Instr 834 @ 0x3420 (13344) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 835 @ 0x3430 (13360) - @P0 BRA 0x3d70 ;
Basic block id 227 - num instructions 5
 Instr 836 @ 0x3440 (13376) - LDG.E.U8.SYS R4, [R4] ;
 Instr 837 @ 0x3450 (13392) - IMAD.MOV.U32 R36, RZ, RZ, RZ ;
 Instr 838 @ 0x3460 (13408) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 839 @ 0x3470 (13424) - FSEL R37, RZ, 1.875, !P0 ;
 Instr 840 @ 0x3480 (13440) - BRA 0x3f00 ;
Basic block id 228 - num instructions 2
 Instr 841 @ 0x3490 (13456) - LDG.E.64.SYS R36, [R4] ;
 Instr 842 @ 0x34a0 (13472) - BRA 0x3f00 ;
Basic block id 229 - num instructions 2
 Instr 843 @ 0x34b0 (13488) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 844 @ 0x34c0 (13504) - @!P0 BRA 0x3740 ;
Basic block id 230 - num instructions 2
 Instr 845 @ 0x34d0 (13520) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 846 @ 0x34e0 (13536) - @!P0 BRA 0x3660 ;
Basic block id 231 - num instructions 2
 Instr 847 @ 0x34f0 (13552) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 848 @ 0x3500 (13568) - @P0 BRA 0x3d70 ;
Basic block id 232 - num instructions 21
 Instr 849 @ 0x3510 (13584) - LDG.E.U8.SYS R0, [R4] ;
 Instr 850 @ 0x3520 (13600) - IMAD.MOV.U32 R9, RZ, RZ, -0x800000 ;
 Instr 851 @ 0x3530 (13616) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 852 @ 0x3540 (13632) - LOP3.LUT R3, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 853 @ 0x3550 (13648) - IADD3 R7, R3.reuse, 0x1000000, RZ ;
 Instr 854 @ 0x3560 (13664) - FLO.U32 R6, R3 ;
 Instr 855 @ 0x3570 (13680) - IADD3 R4, R3, -0x1, RZ ;
 Instr 856 @ 0x3580 (13696) - SHF.R.S32.HI R7, RZ, 0x8, R7 ;
 Instr 857 @ 0x3590 (13712) - SHF.R.S32.HI R4, RZ, 0x1f, R4 ;
 Instr 858 @ 0x35a0 (13728) - IADD3 R6, -R6, 0x1f, RZ ;
 Instr 859 @ 0x35b0 (13744) - ISETP.GT.U32.AND P0, PT, R6.reuse, 0x4, PT ;
 Instr 860 @ 0x35c0 (13760) - IADD3 R6, R6, -0x4, RZ ;
 Instr 861 @ 0x35d0 (13776) - SEL R6, R6, RZ, P0 ;
 Instr 862 @ 0x35e0 (13792) - IMAD R9, R6, R9, 0x3c000000 ;
 Instr 863 @ 0x35f0 (13808) - SHF.L.U32 R6, R3, R6, RZ ;
 Instr 864 @ 0x3600 (13824) - LEA.HI R6, R6, R9, RZ, 0x1c ;
 Instr 865 @ 0x3610 (13840) - LOP3.LUT R7, R6, 0x7f800000, R7, 0xf8, !PT ;
 Instr 866 @ 0x3620 (13856) - LOP3.LUT R7, R7, R4, RZ, 0x30, !PT ;
 Instr 867 @ 0x3630 (13872) - LOP3.LUT R7, R7, 0x80000000, R0, 0xf8, !PT ;
 Instr 868 @ 0x3640 (13888) - F2F.F64.F32 R36, R7 ;
 Instr 869 @ 0x3650 (13904) - BRA 0x3f00 ;
Basic block id 233 - num instructions 14
 Instr 870 @ 0x3660 (13920) - LDG.E.U8.SYS R4, [R4] ;
 Instr 871 @ 0x3670 (13936) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 872 @ 0x3680 (13952) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 873 @ 0x3690 (13968) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 874 @ 0x36a0 (13984) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 875 @ 0x36b0 (14000) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 876 @ 0x36c0 (14016) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 877 @ 0x36d0 (14032) - @P0 FMUL R3, R3, 1.9259299443872358531e-34 ;
 Instr 878 @ 0x36e0 (14048) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 879 @ 0x36f0 (14064) - @!P0 FADD R3, R0, -0.5 ;
 Instr 880 @ 0x3700 (14080) - IMAD.SHL.U32 R0, R4, 0x1000000, RZ ;
 Instr 881 @ 0x3710 (14096) - LOP3.LUT R3, R3, 0x80000000, R0, 0xf8, !PT ;
 Instr 882 @ 0x3720 (14112) - F2F.F64.F32 R36, R3 ;
 Instr 883 @ 0x3730 (14128) - BRA 0x3f00 ;
Basic block id 234 - num instructions 4
 Instr 884 @ 0x3740 (14144) - LDG.E.U16.SYS R36, [R4] ;
 Instr 885 @ 0x3750 (14160) - PRMT R36, RZ, 0x5410, R36 ;
 Instr 886 @ 0x3760 (14176) - F2F.F64.F32 R36, R36 ;
 Instr 887 @ 0x3770 (14192) - BRA 0x3f00 ;
Basic block id 235 - num instructions 2
 Instr 888 @ 0x3780 (14208) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 889 @ 0x3790 (14224) - @P0 BRA 0x3c50 ;
Basic block id 236 - num instructions 2
 Instr 890 @ 0x37a0 (14240) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 891 @ 0x37b0 (14256) - @!P0 BRA 0x3a40 ;
Basic block id 237 - num instructions 2
 Instr 892 @ 0x37c0 (14272) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 893 @ 0x37d0 (14288) - @!P0 BRA 0x3830 ;
Basic block id 238 - num instructions 2
 Instr 894 @ 0x37e0 (14304) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 895 @ 0x37f0 (14320) - @P0 BRA 0x3d70 ;
Basic block id 239 - num instructions 3
 Instr 896 @ 0x3800 (14336) - LDG.E.U16.SYS R4, [R4] ;
 Instr 897 @ 0x3810 (14352) - I2F.F64.U16 R36, R4 ;
 Instr 898 @ 0x3820 (14368) - BRA 0x3f00 ;
Basic block id 240 - num instructions 6
 Instr 899 @ 0x3830 (14384) - LDG.E.U8.SYS R4, [R4] ;
 Instr 900 @ 0x3840 (14400) - BMOV.32.CLEAR RZ, B0 ;
 Instr 901 @ 0x3850 (14416) - BSSY B0, 0x3a20 ;
 Instr 902 @ 0x3860 (14432) - IMAD.MOV.U32 R36, RZ, RZ, RZ ;
 Instr 903 @ 0x3870 (14448) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 904 @ 0x3880 (14464) - @!P0 BRA 0x3a10 ;
Basic block id 241 - num instructions 3
 Instr 905 @ 0x3890 (14480) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 906 @ 0x38a0 (14496) - @!P0 IMAD.MOV.U32 R36, RZ, RZ, 0x7f800001 ;
 Instr 907 @ 0x38b0 (14512) - @!P0 BRA 0x3a10 ;
Basic block id 242 - num instructions 1
 Instr 908 @ 0x38c0 (14528) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 243 - num instructions 10
 Instr 909 @ 0x38d0 (14544) - BMOV.32.CLEAR RZ, B1 ;
 Instr 910 @ 0x38e0 (14560) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 911 @ 0x38f0 (14576) - BSSY B1, 0x39e0 ;
 Instr 912 @ 0x3900 (14592) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 913 @ 0x3910 (14608) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 914 @ 0x3920 (14624) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 915 @ 0x3930 (14640) - IMAD.U32 R36, R3, -0x80000000, RZ ;
 Instr 916 @ 0x3940 (14656) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 917 @ 0x3950 (14672) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 918 @ 0x3960 (14688) - @P0 BRA 0x39d0 ;
Basic block id 244 - num instructions 6
 Instr 919 @ 0x3970 (14704) - FLO.U32 R4, R3 ;
 Instr 920 @ 0x3980 (14720) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 921 @ 0x3990 (14736) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 922 @ 0x39a0 (14752) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 923 @ 0x39b0 (14768) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 924 @ 0x39c0 (14784) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 245 - num instructions 4
 Instr 925 @ 0x39d0 (14800) - BSYNC B1 ;
 Instr 926 @ 0x39e0 (14816) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 927 @ 0x39f0 (14832) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 928 @ 0x3a00 (14848) - LOP3.LUT R36, R5, R3, R36, 0xfe, !PT ;
Basic block id 246 - num instructions 3
 Instr 929 @ 0x3a10 (14864) - BSYNC B0 ;
 Instr 930 @ 0x3a20 (14880) - F2F.F64.F32 R36, R36 ;
 Instr 931 @ 0x3a30 (14896) - BRA 0x3f00 ;
Basic block id 247 - num instructions 6
 Instr 932 @ 0x3a40 (14912) - LDG.E.U8.SYS R3, [R4] ;
 Instr 933 @ 0x3a50 (14928) - BMOV.32.CLEAR RZ, B0 ;
 Instr 934 @ 0x3a60 (14944) - BSSY B0, 0x3c30 ;
 Instr 935 @ 0x3a70 (14960) - IMAD.MOV.U32 R36, RZ, RZ, RZ ;
 Instr 936 @ 0x3a80 (14976) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 937 @ 0x3a90 (14992) - @!P0 BRA 0x3c20 ;
Basic block id 248 - num instructions 3
 Instr 938 @ 0x3aa0 (15008) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 939 @ 0x3ab0 (15024) - @!P0 IMAD.MOV.U32 R36, RZ, RZ, 0x7f800001 ;
 Instr 940 @ 0x3ac0 (15040) - @!P0 BRA 0x3c20 ;
Basic block id 249 - num instructions 1
 Instr 941 @ 0x3ad0 (15056) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Basic block id 250 - num instructions 10
 Instr 942 @ 0x3ae0 (15072) - BMOV.32.CLEAR RZ, B1 ;
 Instr 943 @ 0x3af0 (15088) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 944 @ 0x3b00 (15104) - BSSY B1, 0x3bf0 ;
 Instr 945 @ 0x3b10 (15120) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 946 @ 0x3b20 (15136) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 947 @ 0x3b30 (15152) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 948 @ 0x3b40 (15168) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 949 @ 0x3b50 (15184) - IMAD.U32 R36, R4, -0x80000000, RZ ;
 Instr 950 @ 0x3b60 (15200) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 951 @ 0x3b70 (15216) - @P0 BRA 0x3be0 ;
Basic block id 251 - num instructions 6
 Instr 952 @ 0x3b80 (15232) - FLO.U32 R4, R3 ;
 Instr 953 @ 0x3b90 (15248) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 954 @ 0x3ba0 (15264) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 955 @ 0x3bb0 (15280) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 956 @ 0x3bc0 (15296) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 957 @ 0x3bd0 (15312) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 252 - num instructions 4
 Instr 958 @ 0x3be0 (15328) - BSYNC B1 ;
 Instr 959 @ 0x3bf0 (15344) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 960 @ 0x3c00 (15360) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 961 @ 0x3c10 (15376) - LOP3.LUT R36, R0, R3, R36, 0xfe, !PT ;
Basic block id 253 - num instructions 3
 Instr 962 @ 0x3c20 (15392) - BSYNC B0 ;
 Instr 963 @ 0x3c30 (15408) - F2F.F64.F32 R36, R36 ;
 Instr 964 @ 0x3c40 (15424) - BRA 0x3f00 ;
Basic block id 254 - num instructions 2
 Instr 965 @ 0x3c50 (15440) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 966 @ 0x3c60 (15456) - @!P0 BRA 0x3ee0 ;
Basic block id 255 - num instructions 2
 Instr 967 @ 0x3c70 (15472) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 968 @ 0x3c80 (15488) - @!P0 BRA 0x3eb0 ;
Basic block id 256 - num instructions 2
 Instr 969 @ 0x3c90 (15504) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 970 @ 0x3ca0 (15520) - @P0 BRA 0x3d70 ;
Basic block id 257 - num instructions 6
 Instr 971 @ 0x3cb0 (15536) - LDG.E.U8.SYS R4, [R4] ;
 Instr 972 @ 0x3cc0 (15552) - BMOV.32.CLEAR RZ, B0 ;
 Instr 973 @ 0x3cd0 (15568) - BSSY B0, 0x3d50 ;
 Instr 974 @ 0x3ce0 (15584) - IMAD.MOV.U32 R36, RZ, RZ, 0x400000 ;
 Instr 975 @ 0x3cf0 (15600) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 976 @ 0x3d00 (15616) - @!P0 BRA 0x3d40 ;
Basic block id 258 - num instructions 3
 Instr 977 @ 0x3d10 (15632) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 978 @ 0x3d20 (15648) - @!P0 IMAD.MOV.U32 R36, RZ, RZ, 0x7f800001 ;
 Instr 979 @ 0x3d30 (15664) - @P0 IMAD.SHL.U32 R36, R4, 0x800000, RZ ;
Basic block id 259 - num instructions 3
 Instr 980 @ 0x3d40 (15680) - BSYNC B0 ;
 Instr 981 @ 0x3d50 (15696) - F2F.F64.F32 R36, R36 ;
 Instr 982 @ 0x3d60 (15712) - BRA 0x3f00 ;
Basic block id 260 - num instructions 18
 Instr 983 @ 0x3d70 (15728) - UMOV UR4, 0xd33a2700 ;
 Instr 984 @ 0x3d80 (15744) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 985 @ 0x3d90 (15760) - UMOV UR5, 0x7f88 ;
 Instr 986 @ 0x3da0 (15776) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 987 @ 0x3db0 (15792) - UMOV UR6, 0xd33a2100 ;
 Instr 988 @ 0x3dc0 (15808) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 989 @ 0x3dd0 (15824) - UMOV UR7, 0x7f88 ;
 Instr 990 @ 0x3de0 (15840) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 991 @ 0x3df0 (15856) - UMOV UR8, 0xd33a0900 ;
 Instr 992 @ 0x3e00 (15872) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 993 @ 0x3e10 (15888) - UMOV UR9, 0x7f88 ;
 Instr 994 @ 0x3e20 (15904) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 995 @ 0x3e30 (15920) - MOV R20, 0xd7fc6690 ;
 Instr 996 @ 0x3e40 (15936) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 997 @ 0x3e50 (15952) - MOV R21, 0x7f88 ;
 Instr 998 @ 0x3e60 (15968) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 999 @ 0x3e70 (15984) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1000 @ 0x3e80 (16000) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 261 - num instructions 2
 Instr 1001 @ 0x3e90 (16016) - CS2R R36, SRZ ;
 Instr 1002 @ 0x3ea0 (16032) - BRA 0x3f00 ;
Basic block id 262 - num instructions 3
 Instr 1003 @ 0x3eb0 (16048) - LDG.E.64.SYS R4, [R4] ;
 Instr 1004 @ 0x3ec0 (16064) - I2F.F64.U64 R36, R4 ;
 Instr 1005 @ 0x3ed0 (16080) - BRA 0x3f00 ;
Basic block id 263 - num instructions 2
 Instr 1006 @ 0x3ee0 (16096) - LDG.E.SYS R4, [R4] ;
 Instr 1007 @ 0x3ef0 (16112) - I2F.F64.U32 R36, R4 ;
Basic block id 264 - num instructions 3
 Instr 1008 @ 0x3f00 (16128) - IADD3 R0, R22, 0x200, RZ ;
 Instr 1009 @ 0x3f10 (16144) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 1010 @ 0x3f20 (16160) - @P0 BRA 0x7cf0 ;
Basic block id 265 - num instructions 6
 Instr 1011 @ 0x3f30 (16176) - IMAD R0, R27, 0x400, R0 ;
 Instr 1012 @ 0x3f40 (16192) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 1013 @ 0x3f50 (16208) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 1014 @ 0x3f60 (16224) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 1015 @ 0x3f70 (16240) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 1016 @ 0x3f80 (16256) - @P1 BRA 0x4330 ;
Basic block id 266 - num instructions 3
 Instr 1017 @ 0x3f90 (16272) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1018 @ 0x3fa0 (16288) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 1019 @ 0x3fb0 (16304) - @P0 BRA 0x4170 ;
Basic block id 267 - num instructions 2
 Instr 1020 @ 0x3fc0 (16320) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 1021 @ 0x3fd0 (16336) - @P0 BRA 0x4080 ;
Basic block id 268 - num instructions 2
 Instr 1022 @ 0x3fe0 (16352) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 1023 @ 0x3ff0 (16368) - @!P0 BRA 0x4050 ;
Basic block id 269 - num instructions 2
 Instr 1024 @ 0x4000 (16384) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 1025 @ 0x4010 (16400) - @P0 BRA 0x4cf0 ;
Basic block id 270 - num instructions 3
 Instr 1026 @ 0x4020 (16416) - LDG.E.S8.SYS R4, [R4] ;
 Instr 1027 @ 0x4030 (16432) - I2F.F64.S16 R44, R4 ;
 Instr 1028 @ 0x4040 (16448) - BRA 0x4e80 ;
Basic block id 271 - num instructions 3
 Instr 1029 @ 0x4050 (16464) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1030 @ 0x4060 (16480) - I2F.F64.U16 R44, R4 ;
 Instr 1031 @ 0x4070 (16496) - BRA 0x4e80 ;
Basic block id 272 - num instructions 2
 Instr 1032 @ 0x4080 (16512) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1033 @ 0x4090 (16528) - @!P0 BRA 0x4140 ;
Basic block id 273 - num instructions 2
 Instr 1034 @ 0x40a0 (16544) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1035 @ 0x40b0 (16560) - @!P0 BRA 0x4110 ;
Basic block id 274 - num instructions 2
 Instr 1036 @ 0x40c0 (16576) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1037 @ 0x40d0 (16592) - @P0 BRA 0x4cf0 ;
Basic block id 275 - num instructions 3
 Instr 1038 @ 0x40e0 (16608) - LDG.E.64.SYS R4, [R4] ;
 Instr 1039 @ 0x40f0 (16624) - I2F.F64.S64 R44, R4 ;
 Instr 1040 @ 0x4100 (16640) - BRA 0x4e80 ;
Basic block id 276 - num instructions 3
 Instr 1041 @ 0x4110 (16656) - LDG.E.SYS R4, [R4] ;
 Instr 1042 @ 0x4120 (16672) - I2F.F64 R44, R4 ;
 Instr 1043 @ 0x4130 (16688) - BRA 0x4e80 ;
Basic block id 277 - num instructions 3
 Instr 1044 @ 0x4140 (16704) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1045 @ 0x4150 (16720) - I2F.F64.S16 R44, R4 ;
 Instr 1046 @ 0x4160 (16736) - BRA 0x4e80 ;
Basic block id 278 - num instructions 2
 Instr 1047 @ 0x4170 (16752) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 1048 @ 0x4180 (16768) - @P0 BRA 0x4240 ;
Basic block id 279 - num instructions 2
 Instr 1049 @ 0x4190 (16784) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1050 @ 0x41a0 (16800) - @!P0 BRA 0x4200 ;
Basic block id 280 - num instructions 2
 Instr 1051 @ 0x41b0 (16816) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1052 @ 0x41c0 (16832) - @P0 BRA 0x4cf0 ;
Basic block id 281 - num instructions 3
 Instr 1053 @ 0x41d0 (16848) - LDG.E.SYS R4, [R4] ;
 Instr 1054 @ 0x41e0 (16864) - F2F.F64.F32 R44, R4 ;
 Instr 1055 @ 0x41f0 (16880) - BRA 0x4e80 ;
Basic block id 282 - num instructions 4
 Instr 1056 @ 0x4200 (16896) - LDG.E.U16.SYS R44, [R4] ;
 Instr 1057 @ 0x4210 (16912) - HADD2.F32 R44, R44.H0_H0, -RZ.H0_H0 ;
 Instr 1058 @ 0x4220 (16928) - F2F.F64.F32 R44, R44 ;
 Instr 1059 @ 0x4230 (16944) - BRA 0x4e80 ;
Basic block id 283 - num instructions 2
 Instr 1060 @ 0x4240 (16960) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1061 @ 0x4250 (16976) - @!P0 BRA 0x4310 ;
Basic block id 284 - num instructions 2
 Instr 1062 @ 0x4260 (16992) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1063 @ 0x4270 (17008) - @!P0 BRA 0x42d0 ;
Basic block id 285 - num instructions 2
 Instr 1064 @ 0x4280 (17024) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1065 @ 0x4290 (17040) - @P0 BRA 0x4cf0 ;
Basic block id 286 - num instructions 3
 Instr 1066 @ 0x42a0 (17056) - LDG.E.SYS R4, [R4] ;
 Instr 1067 @ 0x42b0 (17072) - F2F.F64.F32 R44, R4 ;
 Instr 1068 @ 0x42c0 (17088) - BRA 0x4e80 ;
Basic block id 287 - num instructions 4
 Instr 1069 @ 0x42d0 (17104) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1070 @ 0x42e0 (17120) - HADD2.F32 R44, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1071 @ 0x42f0 (17136) - F2F.F64.F32 R44, R44 ;
 Instr 1072 @ 0x4300 (17152) - BRA 0x4e80 ;
Basic block id 288 - num instructions 2
 Instr 1073 @ 0x4310 (17168) - LDG.E.64.SYS R44, [R4] ;
 Instr 1074 @ 0x4320 (17184) - BRA 0x4e80 ;
Basic block id 289 - num instructions 3
 Instr 1075 @ 0x4330 (17200) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1076 @ 0x4340 (17216) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1077 @ 0x4350 (17232) - @P0 BRA 0x4700 ;
Basic block id 290 - num instructions 2
 Instr 1078 @ 0x4360 (17248) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1079 @ 0x4370 (17264) - @P0 BRA 0x4430 ;
Basic block id 291 - num instructions 2
 Instr 1080 @ 0x4380 (17280) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1081 @ 0x4390 (17296) - @!P0 BRA 0x4410 ;
Basic block id 292 - num instructions 2
 Instr 1082 @ 0x43a0 (17312) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1083 @ 0x43b0 (17328) - @P0 BRA 0x4cf0 ;
Basic block id 293 - num instructions 5
 Instr 1084 @ 0x43c0 (17344) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1085 @ 0x43d0 (17360) - IMAD.MOV.U32 R44, RZ, RZ, RZ ;
 Instr 1086 @ 0x43e0 (17376) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1087 @ 0x43f0 (17392) - FSEL R45, RZ, 1.875, !P0 ;
 Instr 1088 @ 0x4400 (17408) - BRA 0x4e80 ;
Basic block id 294 - num instructions 2
 Instr 1089 @ 0x4410 (17424) - LDG.E.64.SYS R44, [R4] ;
 Instr 1090 @ 0x4420 (17440) - BRA 0x4e80 ;
Basic block id 295 - num instructions 2
 Instr 1091 @ 0x4430 (17456) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1092 @ 0x4440 (17472) - @!P0 BRA 0x46c0 ;
Basic block id 296 - num instructions 2
 Instr 1093 @ 0x4450 (17488) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1094 @ 0x4460 (17504) - @!P0 BRA 0x45e0 ;
Basic block id 297 - num instructions 2
 Instr 1095 @ 0x4470 (17520) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1096 @ 0x4480 (17536) - @P0 BRA 0x4cf0 ;
Basic block id 298 - num instructions 21
 Instr 1097 @ 0x4490 (17552) - LDG.E.U8.SYS R0, [R4] ;
 Instr 1098 @ 0x44a0 (17568) - IMAD.MOV.U32 R9, RZ, RZ, -0x800000 ;
 Instr 1099 @ 0x44b0 (17584) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 1100 @ 0x44c0 (17600) - LOP3.LUT R3, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1101 @ 0x44d0 (17616) - IADD3 R7, R3.reuse, 0x1000000, RZ ;
 Instr 1102 @ 0x44e0 (17632) - FLO.U32 R6, R3 ;
 Instr 1103 @ 0x44f0 (17648) - IADD3 R4, R3, -0x1, RZ ;
 Instr 1104 @ 0x4500 (17664) - SHF.R.S32.HI R7, RZ, 0x8, R7 ;
 Instr 1105 @ 0x4510 (17680) - SHF.R.S32.HI R4, RZ, 0x1f, R4 ;
 Instr 1106 @ 0x4520 (17696) - IADD3 R6, -R6, 0x1f, RZ ;
 Instr 1107 @ 0x4530 (17712) - ISETP.GT.U32.AND P0, PT, R6.reuse, 0x4, PT ;
 Instr 1108 @ 0x4540 (17728) - IADD3 R6, R6, -0x4, RZ ;
 Instr 1109 @ 0x4550 (17744) - SEL R6, R6, RZ, P0 ;
 Instr 1110 @ 0x4560 (17760) - IMAD R9, R6, R9, 0x3c000000 ;
 Instr 1111 @ 0x4570 (17776) - SHF.L.U32 R6, R3, R6, RZ ;
 Instr 1112 @ 0x4580 (17792) - LEA.HI R6, R6, R9, RZ, 0x1c ;
 Instr 1113 @ 0x4590 (17808) - LOP3.LUT R7, R6, 0x7f800000, R7, 0xf8, !PT ;
 Instr 1114 @ 0x45a0 (17824) - LOP3.LUT R7, R7, R4, RZ, 0x30, !PT ;
 Instr 1115 @ 0x45b0 (17840) - LOP3.LUT R7, R7, 0x80000000, R0, 0xf8, !PT ;
 Instr 1116 @ 0x45c0 (17856) - F2F.F64.F32 R44, R7 ;
 Instr 1117 @ 0x45d0 (17872) - BRA 0x4e80 ;
Basic block id 299 - num instructions 14
 Instr 1118 @ 0x45e0 (17888) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1119 @ 0x45f0 (17904) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 1120 @ 0x4600 (17920) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1121 @ 0x4610 (17936) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 1122 @ 0x4620 (17952) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1123 @ 0x4630 (17968) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1124 @ 0x4640 (17984) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1125 @ 0x4650 (18000) - @P0 FMUL R3, R3, 1.9259299443872358531e-34 ;
 Instr 1126 @ 0x4660 (18016) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1127 @ 0x4670 (18032) - @!P0 FADD R3, R0, -0.5 ;
 Instr 1128 @ 0x4680 (18048) - IMAD.SHL.U32 R0, R4, 0x1000000, RZ ;
 Instr 1129 @ 0x4690 (18064) - LOP3.LUT R3, R3, 0x80000000, R0, 0xf8, !PT ;
 Instr 1130 @ 0x46a0 (18080) - F2F.F64.F32 R44, R3 ;
 Instr 1131 @ 0x46b0 (18096) - BRA 0x4e80 ;
Basic block id 300 - num instructions 4
 Instr 1132 @ 0x46c0 (18112) - LDG.E.U16.SYS R44, [R4] ;
 Instr 1133 @ 0x46d0 (18128) - PRMT R44, RZ, 0x5410, R44 ;
 Instr 1134 @ 0x46e0 (18144) - F2F.F64.F32 R44, R44 ;
 Instr 1135 @ 0x46f0 (18160) - BRA 0x4e80 ;
Basic block id 301 - num instructions 2
 Instr 1136 @ 0x4700 (18176) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1137 @ 0x4710 (18192) - @P0 BRA 0x4bd0 ;
Basic block id 302 - num instructions 2
 Instr 1138 @ 0x4720 (18208) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1139 @ 0x4730 (18224) - @!P0 BRA 0x49c0 ;
Basic block id 303 - num instructions 2
 Instr 1140 @ 0x4740 (18240) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1141 @ 0x4750 (18256) - @!P0 BRA 0x47b0 ;
Basic block id 304 - num instructions 2
 Instr 1142 @ 0x4760 (18272) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1143 @ 0x4770 (18288) - @P0 BRA 0x4cf0 ;
Basic block id 305 - num instructions 3
 Instr 1144 @ 0x4780 (18304) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1145 @ 0x4790 (18320) - I2F.F64.U16 R44, R4 ;
 Instr 1146 @ 0x47a0 (18336) - BRA 0x4e80 ;
Basic block id 306 - num instructions 6
 Instr 1147 @ 0x47b0 (18352) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1148 @ 0x47c0 (18368) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1149 @ 0x47d0 (18384) - BSSY B0, 0x49a0 ;
 Instr 1150 @ 0x47e0 (18400) - IMAD.MOV.U32 R44, RZ, RZ, RZ ;
 Instr 1151 @ 0x47f0 (18416) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1152 @ 0x4800 (18432) - @!P0 BRA 0x4990 ;
Basic block id 307 - num instructions 3
 Instr 1153 @ 0x4810 (18448) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1154 @ 0x4820 (18464) - @!P0 IMAD.MOV.U32 R44, RZ, RZ, 0x7f800001 ;
 Instr 1155 @ 0x4830 (18480) - @!P0 BRA 0x4990 ;
Basic block id 308 - num instructions 1
 Instr 1156 @ 0x4840 (18496) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 309 - num instructions 10
 Instr 1157 @ 0x4850 (18512) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1158 @ 0x4860 (18528) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 1159 @ 0x4870 (18544) - BSSY B1, 0x4960 ;
 Instr 1160 @ 0x4880 (18560) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1161 @ 0x4890 (18576) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1162 @ 0x48a0 (18592) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1163 @ 0x48b0 (18608) - IMAD.U32 R44, R3, -0x80000000, RZ ;
 Instr 1164 @ 0x48c0 (18624) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1165 @ 0x48d0 (18640) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1166 @ 0x48e0 (18656) - @P0 BRA 0x4950 ;
Basic block id 310 - num instructions 6
 Instr 1167 @ 0x48f0 (18672) - FLO.U32 R4, R3 ;
 Instr 1168 @ 0x4900 (18688) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1169 @ 0x4910 (18704) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 1170 @ 0x4920 (18720) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 1171 @ 0x4930 (18736) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1172 @ 0x4940 (18752) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 311 - num instructions 4
 Instr 1173 @ 0x4950 (18768) - BSYNC B1 ;
 Instr 1174 @ 0x4960 (18784) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 1175 @ 0x4970 (18800) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 1176 @ 0x4980 (18816) - LOP3.LUT R44, R5, R3, R44, 0xfe, !PT ;
Basic block id 312 - num instructions 3
 Instr 1177 @ 0x4990 (18832) - BSYNC B0 ;
 Instr 1178 @ 0x49a0 (18848) - F2F.F64.F32 R44, R44 ;
 Instr 1179 @ 0x49b0 (18864) - BRA 0x4e80 ;
Basic block id 313 - num instructions 6
 Instr 1180 @ 0x49c0 (18880) - LDG.E.U8.SYS R3, [R4] ;
 Instr 1181 @ 0x49d0 (18896) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1182 @ 0x49e0 (18912) - BSSY B0, 0x4bb0 ;
 Instr 1183 @ 0x49f0 (18928) - IMAD.MOV.U32 R44, RZ, RZ, RZ ;
 Instr 1184 @ 0x4a00 (18944) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 1185 @ 0x4a10 (18960) - @!P0 BRA 0x4ba0 ;
Basic block id 314 - num instructions 3
 Instr 1186 @ 0x4a20 (18976) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 1187 @ 0x4a30 (18992) - @!P0 IMAD.MOV.U32 R44, RZ, RZ, 0x7f800001 ;
 Instr 1188 @ 0x4a40 (19008) - @!P0 BRA 0x4ba0 ;
Basic block id 315 - num instructions 1
 Instr 1189 @ 0x4a50 (19024) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Basic block id 316 - num instructions 10
 Instr 1190 @ 0x4a60 (19040) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1191 @ 0x4a70 (19056) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 1192 @ 0x4a80 (19072) - BSSY B1, 0x4b70 ;
 Instr 1193 @ 0x4a90 (19088) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1194 @ 0x4aa0 (19104) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 1195 @ 0x4ab0 (19120) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1196 @ 0x4ac0 (19136) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 1197 @ 0x4ad0 (19152) - IMAD.U32 R44, R4, -0x80000000, RZ ;
 Instr 1198 @ 0x4ae0 (19168) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1199 @ 0x4af0 (19184) - @P0 BRA 0x4b60 ;
Basic block id 317 - num instructions 6
 Instr 1200 @ 0x4b00 (19200) - FLO.U32 R4, R3 ;
 Instr 1201 @ 0x4b10 (19216) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1202 @ 0x4b20 (19232) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 1203 @ 0x4b30 (19248) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 1204 @ 0x4b40 (19264) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1205 @ 0x4b50 (19280) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 318 - num instructions 4
 Instr 1206 @ 0x4b60 (19296) - BSYNC B1 ;
 Instr 1207 @ 0x4b70 (19312) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 1208 @ 0x4b80 (19328) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1209 @ 0x4b90 (19344) - LOP3.LUT R44, R0, R3, R44, 0xfe, !PT ;
Basic block id 319 - num instructions 3
 Instr 1210 @ 0x4ba0 (19360) - BSYNC B0 ;
 Instr 1211 @ 0x4bb0 (19376) - F2F.F64.F32 R44, R44 ;
 Instr 1212 @ 0x4bc0 (19392) - BRA 0x4e80 ;
Basic block id 320 - num instructions 2
 Instr 1213 @ 0x4bd0 (19408) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1214 @ 0x4be0 (19424) - @!P0 BRA 0x4e60 ;
Basic block id 321 - num instructions 2
 Instr 1215 @ 0x4bf0 (19440) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1216 @ 0x4c00 (19456) - @!P0 BRA 0x4e30 ;
Basic block id 322 - num instructions 2
 Instr 1217 @ 0x4c10 (19472) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1218 @ 0x4c20 (19488) - @P0 BRA 0x4cf0 ;
Basic block id 323 - num instructions 6
 Instr 1219 @ 0x4c30 (19504) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1220 @ 0x4c40 (19520) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1221 @ 0x4c50 (19536) - BSSY B0, 0x4cd0 ;
 Instr 1222 @ 0x4c60 (19552) - IMAD.MOV.U32 R44, RZ, RZ, 0x400000 ;
 Instr 1223 @ 0x4c70 (19568) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1224 @ 0x4c80 (19584) - @!P0 BRA 0x4cc0 ;
Basic block id 324 - num instructions 3
 Instr 1225 @ 0x4c90 (19600) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1226 @ 0x4ca0 (19616) - @!P0 IMAD.MOV.U32 R44, RZ, RZ, 0x7f800001 ;
 Instr 1227 @ 0x4cb0 (19632) - @P0 IMAD.SHL.U32 R44, R4, 0x800000, RZ ;
Basic block id 325 - num instructions 3
 Instr 1228 @ 0x4cc0 (19648) - BSYNC B0 ;
 Instr 1229 @ 0x4cd0 (19664) - F2F.F64.F32 R44, R44 ;
 Instr 1230 @ 0x4ce0 (19680) - BRA 0x4e80 ;
Basic block id 326 - num instructions 18
 Instr 1231 @ 0x4cf0 (19696) - UMOV UR4, 0xd33a2700 ;
 Instr 1232 @ 0x4d00 (19712) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1233 @ 0x4d10 (19728) - UMOV UR5, 0x7f88 ;
 Instr 1234 @ 0x4d20 (19744) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1235 @ 0x4d30 (19760) - UMOV UR6, 0xd33a2100 ;
 Instr 1236 @ 0x4d40 (19776) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1237 @ 0x4d50 (19792) - UMOV UR7, 0x7f88 ;
 Instr 1238 @ 0x4d60 (19808) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1239 @ 0x4d70 (19824) - UMOV UR8, 0xd33a0900 ;
 Instr 1240 @ 0x4d80 (19840) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1241 @ 0x4d90 (19856) - UMOV UR9, 0x7f88 ;
 Instr 1242 @ 0x4da0 (19872) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1243 @ 0x4db0 (19888) - MOV R20, 0xd7fc7610 ;
 Instr 1244 @ 0x4dc0 (19904) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1245 @ 0x4dd0 (19920) - MOV R21, 0x7f88 ;
 Instr 1246 @ 0x4de0 (19936) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1247 @ 0x4df0 (19952) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1248 @ 0x4e00 (19968) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 327 - num instructions 2
 Instr 1249 @ 0x4e10 (19984) - CS2R R44, SRZ ;
 Instr 1250 @ 0x4e20 (20000) - BRA 0x4e80 ;
Basic block id 328 - num instructions 3
 Instr 1251 @ 0x4e30 (20016) - LDG.E.64.SYS R4, [R4] ;
 Instr 1252 @ 0x4e40 (20032) - I2F.F64.U64 R44, R4 ;
 Instr 1253 @ 0x4e50 (20048) - BRA 0x4e80 ;
Basic block id 329 - num instructions 2
 Instr 1254 @ 0x4e60 (20064) - LDG.E.SYS R4, [R4] ;
 Instr 1255 @ 0x4e70 (20080) - I2F.F64.U32 R44, R4 ;
Basic block id 330 - num instructions 3
 Instr 1256 @ 0x4e80 (20096) - IADD3 R0, R22, 0x280, RZ ;
 Instr 1257 @ 0x4e90 (20112) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 1258 @ 0x4ea0 (20128) - @P0 BRA 0x7cf0 ;
Basic block id 331 - num instructions 6
 Instr 1259 @ 0x4eb0 (20144) - IMAD R0, R27, 0x400, R0 ;
 Instr 1260 @ 0x4ec0 (20160) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 1261 @ 0x4ed0 (20176) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 1262 @ 0x4ee0 (20192) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 1263 @ 0x4ef0 (20208) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 1264 @ 0x4f00 (20224) - @P1 BRA 0x52b0 ;
Basic block id 332 - num instructions 3
 Instr 1265 @ 0x4f10 (20240) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1266 @ 0x4f20 (20256) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 1267 @ 0x4f30 (20272) - @P0 BRA 0x50f0 ;
Basic block id 333 - num instructions 2
 Instr 1268 @ 0x4f40 (20288) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 1269 @ 0x4f50 (20304) - @P0 BRA 0x5000 ;
Basic block id 334 - num instructions 2
 Instr 1270 @ 0x4f60 (20320) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 1271 @ 0x4f70 (20336) - @!P0 BRA 0x4fd0 ;
Basic block id 335 - num instructions 2
 Instr 1272 @ 0x4f80 (20352) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 1273 @ 0x4f90 (20368) - @P0 BRA 0x5c70 ;
Basic block id 336 - num instructions 3
 Instr 1274 @ 0x4fa0 (20384) - LDG.E.S8.SYS R4, [R4] ;
 Instr 1275 @ 0x4fb0 (20400) - I2F.F64.S16 R52, R4 ;
 Instr 1276 @ 0x4fc0 (20416) - BRA 0x5e00 ;
Basic block id 337 - num instructions 3
 Instr 1277 @ 0x4fd0 (20432) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1278 @ 0x4fe0 (20448) - I2F.F64.U16 R52, R4 ;
 Instr 1279 @ 0x4ff0 (20464) - BRA 0x5e00 ;
Basic block id 338 - num instructions 2
 Instr 1280 @ 0x5000 (20480) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1281 @ 0x5010 (20496) - @!P0 BRA 0x50c0 ;
Basic block id 339 - num instructions 2
 Instr 1282 @ 0x5020 (20512) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1283 @ 0x5030 (20528) - @!P0 BRA 0x5090 ;
Basic block id 340 - num instructions 2
 Instr 1284 @ 0x5040 (20544) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1285 @ 0x5050 (20560) - @P0 BRA 0x5c70 ;
Basic block id 341 - num instructions 3
 Instr 1286 @ 0x5060 (20576) - LDG.E.64.SYS R4, [R4] ;
 Instr 1287 @ 0x5070 (20592) - I2F.F64.S64 R52, R4 ;
 Instr 1288 @ 0x5080 (20608) - BRA 0x5e00 ;
Basic block id 342 - num instructions 3
 Instr 1289 @ 0x5090 (20624) - LDG.E.SYS R4, [R4] ;
 Instr 1290 @ 0x50a0 (20640) - I2F.F64 R52, R4 ;
 Instr 1291 @ 0x50b0 (20656) - BRA 0x5e00 ;
Basic block id 343 - num instructions 3
 Instr 1292 @ 0x50c0 (20672) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1293 @ 0x50d0 (20688) - I2F.F64.S16 R52, R4 ;
 Instr 1294 @ 0x50e0 (20704) - BRA 0x5e00 ;
Basic block id 344 - num instructions 2
 Instr 1295 @ 0x50f0 (20720) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 1296 @ 0x5100 (20736) - @P0 BRA 0x51c0 ;
Basic block id 345 - num instructions 2
 Instr 1297 @ 0x5110 (20752) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1298 @ 0x5120 (20768) - @!P0 BRA 0x5180 ;
Basic block id 346 - num instructions 2
 Instr 1299 @ 0x5130 (20784) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1300 @ 0x5140 (20800) - @P0 BRA 0x5c70 ;
Basic block id 347 - num instructions 3
 Instr 1301 @ 0x5150 (20816) - LDG.E.SYS R4, [R4] ;
 Instr 1302 @ 0x5160 (20832) - F2F.F64.F32 R52, R4 ;
 Instr 1303 @ 0x5170 (20848) - BRA 0x5e00 ;
Basic block id 348 - num instructions 4
 Instr 1304 @ 0x5180 (20864) - LDG.E.U16.SYS R52, [R4] ;
 Instr 1305 @ 0x5190 (20880) - HADD2.F32 R52, R52.H0_H0, -RZ.H0_H0 ;
 Instr 1306 @ 0x51a0 (20896) - F2F.F64.F32 R52, R52 ;
 Instr 1307 @ 0x51b0 (20912) - BRA 0x5e00 ;
Basic block id 349 - num instructions 2
 Instr 1308 @ 0x51c0 (20928) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1309 @ 0x51d0 (20944) - @!P0 BRA 0x5290 ;
Basic block id 350 - num instructions 2
 Instr 1310 @ 0x51e0 (20960) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1311 @ 0x51f0 (20976) - @!P0 BRA 0x5250 ;
Basic block id 351 - num instructions 2
 Instr 1312 @ 0x5200 (20992) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1313 @ 0x5210 (21008) - @P0 BRA 0x5c70 ;
Basic block id 352 - num instructions 3
 Instr 1314 @ 0x5220 (21024) - LDG.E.SYS R4, [R4] ;
 Instr 1315 @ 0x5230 (21040) - F2F.F64.F32 R52, R4 ;
 Instr 1316 @ 0x5240 (21056) - BRA 0x5e00 ;
Basic block id 353 - num instructions 4
 Instr 1317 @ 0x5250 (21072) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1318 @ 0x5260 (21088) - HADD2.F32 R52, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1319 @ 0x5270 (21104) - F2F.F64.F32 R52, R52 ;
 Instr 1320 @ 0x5280 (21120) - BRA 0x5e00 ;
Basic block id 354 - num instructions 2
 Instr 1321 @ 0x5290 (21136) - LDG.E.64.SYS R52, [R4] ;
 Instr 1322 @ 0x52a0 (21152) - BRA 0x5e00 ;
Basic block id 355 - num instructions 3
 Instr 1323 @ 0x52b0 (21168) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1324 @ 0x52c0 (21184) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1325 @ 0x52d0 (21200) - @P0 BRA 0x5680 ;
Basic block id 356 - num instructions 2
 Instr 1326 @ 0x52e0 (21216) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1327 @ 0x52f0 (21232) - @P0 BRA 0x53b0 ;
Basic block id 357 - num instructions 2
 Instr 1328 @ 0x5300 (21248) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1329 @ 0x5310 (21264) - @!P0 BRA 0x5390 ;
Basic block id 358 - num instructions 2
 Instr 1330 @ 0x5320 (21280) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1331 @ 0x5330 (21296) - @P0 BRA 0x5c70 ;
Basic block id 359 - num instructions 5
 Instr 1332 @ 0x5340 (21312) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1333 @ 0x5350 (21328) - IMAD.MOV.U32 R52, RZ, RZ, RZ ;
 Instr 1334 @ 0x5360 (21344) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1335 @ 0x5370 (21360) - FSEL R53, RZ, 1.875, !P0 ;
 Instr 1336 @ 0x5380 (21376) - BRA 0x5e00 ;
Basic block id 360 - num instructions 2
 Instr 1337 @ 0x5390 (21392) - LDG.E.64.SYS R52, [R4] ;
 Instr 1338 @ 0x53a0 (21408) - BRA 0x5e00 ;
Basic block id 361 - num instructions 2
 Instr 1339 @ 0x53b0 (21424) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1340 @ 0x53c0 (21440) - @!P0 BRA 0x5640 ;
Basic block id 362 - num instructions 2
 Instr 1341 @ 0x53d0 (21456) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1342 @ 0x53e0 (21472) - @!P0 BRA 0x5560 ;
Basic block id 363 - num instructions 2
 Instr 1343 @ 0x53f0 (21488) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1344 @ 0x5400 (21504) - @P0 BRA 0x5c70 ;
Basic block id 364 - num instructions 21
 Instr 1345 @ 0x5410 (21520) - LDG.E.U8.SYS R0, [R4] ;
 Instr 1346 @ 0x5420 (21536) - IMAD.MOV.U32 R9, RZ, RZ, -0x800000 ;
 Instr 1347 @ 0x5430 (21552) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 1348 @ 0x5440 (21568) - LOP3.LUT R3, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1349 @ 0x5450 (21584) - IADD3 R7, R3.reuse, 0x1000000, RZ ;
 Instr 1350 @ 0x5460 (21600) - FLO.U32 R6, R3 ;
 Instr 1351 @ 0x5470 (21616) - IADD3 R4, R3, -0x1, RZ ;
 Instr 1352 @ 0x5480 (21632) - SHF.R.S32.HI R7, RZ, 0x8, R7 ;
 Instr 1353 @ 0x5490 (21648) - SHF.R.S32.HI R4, RZ, 0x1f, R4 ;
 Instr 1354 @ 0x54a0 (21664) - IADD3 R6, -R6, 0x1f, RZ ;
 Instr 1355 @ 0x54b0 (21680) - ISETP.GT.U32.AND P0, PT, R6.reuse, 0x4, PT ;
 Instr 1356 @ 0x54c0 (21696) - IADD3 R6, R6, -0x4, RZ ;
 Instr 1357 @ 0x54d0 (21712) - SEL R6, R6, RZ, P0 ;
 Instr 1358 @ 0x54e0 (21728) - IMAD R9, R6, R9, 0x3c000000 ;
 Instr 1359 @ 0x54f0 (21744) - SHF.L.U32 R6, R3, R6, RZ ;
 Instr 1360 @ 0x5500 (21760) - LEA.HI R6, R6, R9, RZ, 0x1c ;
 Instr 1361 @ 0x5510 (21776) - LOP3.LUT R7, R6, 0x7f800000, R7, 0xf8, !PT ;
 Instr 1362 @ 0x5520 (21792) - LOP3.LUT R7, R7, R4, RZ, 0x30, !PT ;
 Instr 1363 @ 0x5530 (21808) - LOP3.LUT R7, R7, 0x80000000, R0, 0xf8, !PT ;
 Instr 1364 @ 0x5540 (21824) - F2F.F64.F32 R52, R7 ;
 Instr 1365 @ 0x5550 (21840) - BRA 0x5e00 ;
Basic block id 365 - num instructions 14
 Instr 1366 @ 0x5560 (21856) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1367 @ 0x5570 (21872) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 1368 @ 0x5580 (21888) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1369 @ 0x5590 (21904) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 1370 @ 0x55a0 (21920) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1371 @ 0x55b0 (21936) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1372 @ 0x55c0 (21952) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1373 @ 0x55d0 (21968) - @P0 FMUL R3, R3, 1.9259299443872358531e-34 ;
 Instr 1374 @ 0x55e0 (21984) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1375 @ 0x55f0 (22000) - @!P0 FADD R3, R0, -0.5 ;
 Instr 1376 @ 0x5600 (22016) - IMAD.SHL.U32 R0, R4, 0x1000000, RZ ;
 Instr 1377 @ 0x5610 (22032) - LOP3.LUT R3, R3, 0x80000000, R0, 0xf8, !PT ;
 Instr 1378 @ 0x5620 (22048) - F2F.F64.F32 R52, R3 ;
 Instr 1379 @ 0x5630 (22064) - BRA 0x5e00 ;
Basic block id 366 - num instructions 4
 Instr 1380 @ 0x5640 (22080) - LDG.E.U16.SYS R52, [R4] ;
 Instr 1381 @ 0x5650 (22096) - PRMT R52, RZ, 0x5410, R52 ;
 Instr 1382 @ 0x5660 (22112) - F2F.F64.F32 R52, R52 ;
 Instr 1383 @ 0x5670 (22128) - BRA 0x5e00 ;
Basic block id 367 - num instructions 2
 Instr 1384 @ 0x5680 (22144) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1385 @ 0x5690 (22160) - @P0 BRA 0x5b50 ;
Basic block id 368 - num instructions 2
 Instr 1386 @ 0x56a0 (22176) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1387 @ 0x56b0 (22192) - @!P0 BRA 0x5940 ;
Basic block id 369 - num instructions 2
 Instr 1388 @ 0x56c0 (22208) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1389 @ 0x56d0 (22224) - @!P0 BRA 0x5730 ;
Basic block id 370 - num instructions 2
 Instr 1390 @ 0x56e0 (22240) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1391 @ 0x56f0 (22256) - @P0 BRA 0x5c70 ;
Basic block id 371 - num instructions 3
 Instr 1392 @ 0x5700 (22272) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1393 @ 0x5710 (22288) - I2F.F64.U16 R52, R4 ;
 Instr 1394 @ 0x5720 (22304) - BRA 0x5e00 ;
Basic block id 372 - num instructions 6
 Instr 1395 @ 0x5730 (22320) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1396 @ 0x5740 (22336) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1397 @ 0x5750 (22352) - BSSY B0, 0x5920 ;
 Instr 1398 @ 0x5760 (22368) - IMAD.MOV.U32 R52, RZ, RZ, RZ ;
 Instr 1399 @ 0x5770 (22384) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1400 @ 0x5780 (22400) - @!P0 BRA 0x5910 ;
Basic block id 373 - num instructions 3
 Instr 1401 @ 0x5790 (22416) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1402 @ 0x57a0 (22432) - @!P0 IMAD.MOV.U32 R52, RZ, RZ, 0x7f800001 ;
 Instr 1403 @ 0x57b0 (22448) - @!P0 BRA 0x5910 ;
Basic block id 374 - num instructions 1
 Instr 1404 @ 0x57c0 (22464) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 375 - num instructions 10
 Instr 1405 @ 0x57d0 (22480) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1406 @ 0x57e0 (22496) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 1407 @ 0x57f0 (22512) - BSSY B1, 0x58e0 ;
 Instr 1408 @ 0x5800 (22528) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1409 @ 0x5810 (22544) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1410 @ 0x5820 (22560) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1411 @ 0x5830 (22576) - IMAD.U32 R52, R3, -0x80000000, RZ ;
 Instr 1412 @ 0x5840 (22592) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1413 @ 0x5850 (22608) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1414 @ 0x5860 (22624) - @P0 BRA 0x58d0 ;
Basic block id 376 - num instructions 6
 Instr 1415 @ 0x5870 (22640) - FLO.U32 R4, R3 ;
 Instr 1416 @ 0x5880 (22656) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1417 @ 0x5890 (22672) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 1418 @ 0x58a0 (22688) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 1419 @ 0x58b0 (22704) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1420 @ 0x58c0 (22720) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 377 - num instructions 4
 Instr 1421 @ 0x58d0 (22736) - BSYNC B1 ;
 Instr 1422 @ 0x58e0 (22752) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 1423 @ 0x58f0 (22768) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 1424 @ 0x5900 (22784) - LOP3.LUT R52, R5, R3, R52, 0xfe, !PT ;
Basic block id 378 - num instructions 3
 Instr 1425 @ 0x5910 (22800) - BSYNC B0 ;
 Instr 1426 @ 0x5920 (22816) - F2F.F64.F32 R52, R52 ;
 Instr 1427 @ 0x5930 (22832) - BRA 0x5e00 ;
Basic block id 379 - num instructions 6
 Instr 1428 @ 0x5940 (22848) - LDG.E.U8.SYS R3, [R4] ;
 Instr 1429 @ 0x5950 (22864) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1430 @ 0x5960 (22880) - BSSY B0, 0x5b30 ;
 Instr 1431 @ 0x5970 (22896) - IMAD.MOV.U32 R52, RZ, RZ, RZ ;
 Instr 1432 @ 0x5980 (22912) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 1433 @ 0x5990 (22928) - @!P0 BRA 0x5b20 ;
Basic block id 380 - num instructions 3
 Instr 1434 @ 0x59a0 (22944) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 1435 @ 0x59b0 (22960) - @!P0 IMAD.MOV.U32 R52, RZ, RZ, 0x7f800001 ;
 Instr 1436 @ 0x59c0 (22976) - @!P0 BRA 0x5b20 ;
Basic block id 381 - num instructions 1
 Instr 1437 @ 0x59d0 (22992) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Basic block id 382 - num instructions 10
 Instr 1438 @ 0x59e0 (23008) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1439 @ 0x59f0 (23024) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 1440 @ 0x5a00 (23040) - BSSY B1, 0x5af0 ;
 Instr 1441 @ 0x5a10 (23056) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1442 @ 0x5a20 (23072) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 1443 @ 0x5a30 (23088) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1444 @ 0x5a40 (23104) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 1445 @ 0x5a50 (23120) - IMAD.U32 R52, R4, -0x80000000, RZ ;
 Instr 1446 @ 0x5a60 (23136) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1447 @ 0x5a70 (23152) - @P0 BRA 0x5ae0 ;
Basic block id 383 - num instructions 6
 Instr 1448 @ 0x5a80 (23168) - FLO.U32 R4, R3 ;
 Instr 1449 @ 0x5a90 (23184) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1450 @ 0x5aa0 (23200) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 1451 @ 0x5ab0 (23216) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 1452 @ 0x5ac0 (23232) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1453 @ 0x5ad0 (23248) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 384 - num instructions 4
 Instr 1454 @ 0x5ae0 (23264) - BSYNC B1 ;
 Instr 1455 @ 0x5af0 (23280) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 1456 @ 0x5b00 (23296) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1457 @ 0x5b10 (23312) - LOP3.LUT R52, R0, R3, R52, 0xfe, !PT ;
Basic block id 385 - num instructions 3
 Instr 1458 @ 0x5b20 (23328) - BSYNC B0 ;
 Instr 1459 @ 0x5b30 (23344) - F2F.F64.F32 R52, R52 ;
 Instr 1460 @ 0x5b40 (23360) - BRA 0x5e00 ;
Basic block id 386 - num instructions 2
 Instr 1461 @ 0x5b50 (23376) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1462 @ 0x5b60 (23392) - @!P0 BRA 0x5de0 ;
Basic block id 387 - num instructions 2
 Instr 1463 @ 0x5b70 (23408) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1464 @ 0x5b80 (23424) - @!P0 BRA 0x5db0 ;
Basic block id 388 - num instructions 2
 Instr 1465 @ 0x5b90 (23440) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1466 @ 0x5ba0 (23456) - @P0 BRA 0x5c70 ;
Basic block id 389 - num instructions 6
 Instr 1467 @ 0x5bb0 (23472) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1468 @ 0x5bc0 (23488) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1469 @ 0x5bd0 (23504) - BSSY B0, 0x5c50 ;
 Instr 1470 @ 0x5be0 (23520) - IMAD.MOV.U32 R52, RZ, RZ, 0x400000 ;
 Instr 1471 @ 0x5bf0 (23536) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1472 @ 0x5c00 (23552) - @!P0 BRA 0x5c40 ;
Basic block id 390 - num instructions 3
 Instr 1473 @ 0x5c10 (23568) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1474 @ 0x5c20 (23584) - @!P0 IMAD.MOV.U32 R52, RZ, RZ, 0x7f800001 ;
 Instr 1475 @ 0x5c30 (23600) - @P0 IMAD.SHL.U32 R52, R4, 0x800000, RZ ;
Basic block id 391 - num instructions 3
 Instr 1476 @ 0x5c40 (23616) - BSYNC B0 ;
 Instr 1477 @ 0x5c50 (23632) - F2F.F64.F32 R52, R52 ;
 Instr 1478 @ 0x5c60 (23648) - BRA 0x5e00 ;
Basic block id 392 - num instructions 18
 Instr 1479 @ 0x5c70 (23664) - UMOV UR4, 0xd33a2700 ;
 Instr 1480 @ 0x5c80 (23680) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1481 @ 0x5c90 (23696) - UMOV UR5, 0x7f88 ;
 Instr 1482 @ 0x5ca0 (23712) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1483 @ 0x5cb0 (23728) - UMOV UR6, 0xd33a2100 ;
 Instr 1484 @ 0x5cc0 (23744) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1485 @ 0x5cd0 (23760) - UMOV UR7, 0x7f88 ;
 Instr 1486 @ 0x5ce0 (23776) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1487 @ 0x5cf0 (23792) - UMOV UR8, 0xd33a0900 ;
 Instr 1488 @ 0x5d00 (23808) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1489 @ 0x5d10 (23824) - UMOV UR9, 0x7f88 ;
 Instr 1490 @ 0x5d20 (23840) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1491 @ 0x5d30 (23856) - MOV R20, 0xd7fc8590 ;
 Instr 1492 @ 0x5d40 (23872) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1493 @ 0x5d50 (23888) - MOV R21, 0x7f88 ;
 Instr 1494 @ 0x5d60 (23904) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1495 @ 0x5d70 (23920) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1496 @ 0x5d80 (23936) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 393 - num instructions 2
 Instr 1497 @ 0x5d90 (23952) - CS2R R52, SRZ ;
 Instr 1498 @ 0x5da0 (23968) - BRA 0x5e00 ;
Basic block id 394 - num instructions 3
 Instr 1499 @ 0x5db0 (23984) - LDG.E.64.SYS R4, [R4] ;
 Instr 1500 @ 0x5dc0 (24000) - I2F.F64.U64 R52, R4 ;
 Instr 1501 @ 0x5dd0 (24016) - BRA 0x5e00 ;
Basic block id 395 - num instructions 2
 Instr 1502 @ 0x5de0 (24032) - LDG.E.SYS R4, [R4] ;
 Instr 1503 @ 0x5df0 (24048) - I2F.F64.U32 R52, R4 ;
Basic block id 396 - num instructions 3
 Instr 1504 @ 0x5e00 (24064) - IADD3 R0, R22, 0x300, RZ ;
 Instr 1505 @ 0x5e10 (24080) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 1506 @ 0x5e20 (24096) - @P0 BRA 0x7cf0 ;
Basic block id 397 - num instructions 6
 Instr 1507 @ 0x5e30 (24112) - IMAD R0, R27, 0x400, R0 ;
 Instr 1508 @ 0x5e40 (24128) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 1509 @ 0x5e50 (24144) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 1510 @ 0x5e60 (24160) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 1511 @ 0x5e70 (24176) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 1512 @ 0x5e80 (24192) - @P1 BRA 0x6230 ;
Basic block id 398 - num instructions 3
 Instr 1513 @ 0x5e90 (24208) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1514 @ 0x5ea0 (24224) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 1515 @ 0x5eb0 (24240) - @P0 BRA 0x6070 ;
Basic block id 399 - num instructions 2
 Instr 1516 @ 0x5ec0 (24256) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 1517 @ 0x5ed0 (24272) - @P0 BRA 0x5f80 ;
Basic block id 400 - num instructions 2
 Instr 1518 @ 0x5ee0 (24288) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 1519 @ 0x5ef0 (24304) - @!P0 BRA 0x5f50 ;
Basic block id 401 - num instructions 2
 Instr 1520 @ 0x5f00 (24320) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 1521 @ 0x5f10 (24336) - @P0 BRA 0x6bf0 ;
Basic block id 402 - num instructions 3
 Instr 1522 @ 0x5f20 (24352) - LDG.E.S8.SYS R4, [R4] ;
 Instr 1523 @ 0x5f30 (24368) - I2F.F64.S16 R60, R4 ;
 Instr 1524 @ 0x5f40 (24384) - BRA 0x6d80 ;
Basic block id 403 - num instructions 3
 Instr 1525 @ 0x5f50 (24400) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1526 @ 0x5f60 (24416) - I2F.F64.U16 R60, R4 ;
 Instr 1527 @ 0x5f70 (24432) - BRA 0x6d80 ;
Basic block id 404 - num instructions 2
 Instr 1528 @ 0x5f80 (24448) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1529 @ 0x5f90 (24464) - @!P0 BRA 0x6040 ;
Basic block id 405 - num instructions 2
 Instr 1530 @ 0x5fa0 (24480) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1531 @ 0x5fb0 (24496) - @!P0 BRA 0x6010 ;
Basic block id 406 - num instructions 2
 Instr 1532 @ 0x5fc0 (24512) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1533 @ 0x5fd0 (24528) - @P0 BRA 0x6bf0 ;
Basic block id 407 - num instructions 3
 Instr 1534 @ 0x5fe0 (24544) - LDG.E.64.SYS R4, [R4] ;
 Instr 1535 @ 0x5ff0 (24560) - I2F.F64.S64 R60, R4 ;
 Instr 1536 @ 0x6000 (24576) - BRA 0x6d80 ;
Basic block id 408 - num instructions 3
 Instr 1537 @ 0x6010 (24592) - LDG.E.SYS R4, [R4] ;
 Instr 1538 @ 0x6020 (24608) - I2F.F64 R60, R4 ;
 Instr 1539 @ 0x6030 (24624) - BRA 0x6d80 ;
Basic block id 409 - num instructions 3
 Instr 1540 @ 0x6040 (24640) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1541 @ 0x6050 (24656) - I2F.F64.S16 R60, R4 ;
 Instr 1542 @ 0x6060 (24672) - BRA 0x6d80 ;
Basic block id 410 - num instructions 2
 Instr 1543 @ 0x6070 (24688) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 1544 @ 0x6080 (24704) - @P0 BRA 0x6140 ;
Basic block id 411 - num instructions 2
 Instr 1545 @ 0x6090 (24720) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1546 @ 0x60a0 (24736) - @!P0 BRA 0x6100 ;
Basic block id 412 - num instructions 2
 Instr 1547 @ 0x60b0 (24752) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1548 @ 0x60c0 (24768) - @P0 BRA 0x6bf0 ;
Basic block id 413 - num instructions 3
 Instr 1549 @ 0x60d0 (24784) - LDG.E.SYS R4, [R4] ;
 Instr 1550 @ 0x60e0 (24800) - F2F.F64.F32 R60, R4 ;
 Instr 1551 @ 0x60f0 (24816) - BRA 0x6d80 ;
Basic block id 414 - num instructions 4
 Instr 1552 @ 0x6100 (24832) - LDG.E.U16.SYS R60, [R4] ;
 Instr 1553 @ 0x6110 (24848) - HADD2.F32 R60, R60.H0_H0, -RZ.H0_H0 ;
 Instr 1554 @ 0x6120 (24864) - F2F.F64.F32 R60, R60 ;
 Instr 1555 @ 0x6130 (24880) - BRA 0x6d80 ;
Basic block id 415 - num instructions 2
 Instr 1556 @ 0x6140 (24896) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1557 @ 0x6150 (24912) - @!P0 BRA 0x6210 ;
Basic block id 416 - num instructions 2
 Instr 1558 @ 0x6160 (24928) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1559 @ 0x6170 (24944) - @!P0 BRA 0x61d0 ;
Basic block id 417 - num instructions 2
 Instr 1560 @ 0x6180 (24960) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1561 @ 0x6190 (24976) - @P0 BRA 0x6bf0 ;
Basic block id 418 - num instructions 3
 Instr 1562 @ 0x61a0 (24992) - LDG.E.SYS R4, [R4] ;
 Instr 1563 @ 0x61b0 (25008) - F2F.F64.F32 R60, R4 ;
 Instr 1564 @ 0x61c0 (25024) - BRA 0x6d80 ;
Basic block id 419 - num instructions 4
 Instr 1565 @ 0x61d0 (25040) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1566 @ 0x61e0 (25056) - HADD2.F32 R60, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1567 @ 0x61f0 (25072) - F2F.F64.F32 R60, R60 ;
 Instr 1568 @ 0x6200 (25088) - BRA 0x6d80 ;
Basic block id 420 - num instructions 2
 Instr 1569 @ 0x6210 (25104) - LDG.E.64.SYS R60, [R4] ;
 Instr 1570 @ 0x6220 (25120) - BRA 0x6d80 ;
Basic block id 421 - num instructions 3
 Instr 1571 @ 0x6230 (25136) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1572 @ 0x6240 (25152) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1573 @ 0x6250 (25168) - @P0 BRA 0x6600 ;
Basic block id 422 - num instructions 2
 Instr 1574 @ 0x6260 (25184) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1575 @ 0x6270 (25200) - @P0 BRA 0x6330 ;
Basic block id 423 - num instructions 2
 Instr 1576 @ 0x6280 (25216) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1577 @ 0x6290 (25232) - @!P0 BRA 0x6310 ;
Basic block id 424 - num instructions 2
 Instr 1578 @ 0x62a0 (25248) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1579 @ 0x62b0 (25264) - @P0 BRA 0x6bf0 ;
Basic block id 425 - num instructions 5
 Instr 1580 @ 0x62c0 (25280) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1581 @ 0x62d0 (25296) - IMAD.MOV.U32 R60, RZ, RZ, RZ ;
 Instr 1582 @ 0x62e0 (25312) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1583 @ 0x62f0 (25328) - FSEL R61, RZ, 1.875, !P0 ;
 Instr 1584 @ 0x6300 (25344) - BRA 0x6d80 ;
Basic block id 426 - num instructions 2
 Instr 1585 @ 0x6310 (25360) - LDG.E.64.SYS R60, [R4] ;
 Instr 1586 @ 0x6320 (25376) - BRA 0x6d80 ;
Basic block id 427 - num instructions 2
 Instr 1587 @ 0x6330 (25392) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1588 @ 0x6340 (25408) - @!P0 BRA 0x65c0 ;
Basic block id 428 - num instructions 2
 Instr 1589 @ 0x6350 (25424) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1590 @ 0x6360 (25440) - @!P0 BRA 0x64e0 ;
Basic block id 429 - num instructions 2
 Instr 1591 @ 0x6370 (25456) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1592 @ 0x6380 (25472) - @P0 BRA 0x6bf0 ;
Basic block id 430 - num instructions 21
 Instr 1593 @ 0x6390 (25488) - LDG.E.U8.SYS R0, [R4] ;
 Instr 1594 @ 0x63a0 (25504) - IMAD.MOV.U32 R9, RZ, RZ, -0x800000 ;
 Instr 1595 @ 0x63b0 (25520) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 1596 @ 0x63c0 (25536) - LOP3.LUT R3, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1597 @ 0x63d0 (25552) - IADD3 R7, R3.reuse, 0x1000000, RZ ;
 Instr 1598 @ 0x63e0 (25568) - FLO.U32 R6, R3 ;
 Instr 1599 @ 0x63f0 (25584) - IADD3 R4, R3, -0x1, RZ ;
 Instr 1600 @ 0x6400 (25600) - SHF.R.S32.HI R7, RZ, 0x8, R7 ;
 Instr 1601 @ 0x6410 (25616) - SHF.R.S32.HI R4, RZ, 0x1f, R4 ;
 Instr 1602 @ 0x6420 (25632) - IADD3 R6, -R6, 0x1f, RZ ;
 Instr 1603 @ 0x6430 (25648) - ISETP.GT.U32.AND P0, PT, R6.reuse, 0x4, PT ;
 Instr 1604 @ 0x6440 (25664) - IADD3 R6, R6, -0x4, RZ ;
 Instr 1605 @ 0x6450 (25680) - SEL R6, R6, RZ, P0 ;
 Instr 1606 @ 0x6460 (25696) - IMAD R9, R6, R9, 0x3c000000 ;
 Instr 1607 @ 0x6470 (25712) - SHF.L.U32 R6, R3, R6, RZ ;
 Instr 1608 @ 0x6480 (25728) - LEA.HI R6, R6, R9, RZ, 0x1c ;
 Instr 1609 @ 0x6490 (25744) - LOP3.LUT R7, R6, 0x7f800000, R7, 0xf8, !PT ;
 Instr 1610 @ 0x64a0 (25760) - LOP3.LUT R7, R7, R4, RZ, 0x30, !PT ;
 Instr 1611 @ 0x64b0 (25776) - LOP3.LUT R7, R7, 0x80000000, R0, 0xf8, !PT ;
 Instr 1612 @ 0x64c0 (25792) - F2F.F64.F32 R60, R7 ;
 Instr 1613 @ 0x64d0 (25808) - BRA 0x6d80 ;
Basic block id 431 - num instructions 14
 Instr 1614 @ 0x64e0 (25824) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1615 @ 0x64f0 (25840) - IMAD.SHL.U32 R0, R4, 0x2000000, RZ ;
 Instr 1616 @ 0x6500 (25856) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1617 @ 0x6510 (25872) - @P0 IMAD.SHL.U32 R3, R4.reuse, 0x200000, RZ ;
 Instr 1618 @ 0x6520 (25888) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1619 @ 0x6530 (25904) - @P0 LOP3.LUT R3, R3, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1620 @ 0x6540 (25920) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1621 @ 0x6550 (25936) - @P0 FMUL R3, R3, 1.9259299443872358531e-34 ;
 Instr 1622 @ 0x6560 (25952) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1623 @ 0x6570 (25968) - @!P0 FADD R3, R0, -0.5 ;
 Instr 1624 @ 0x6580 (25984) - IMAD.SHL.U32 R0, R4, 0x1000000, RZ ;
 Instr 1625 @ 0x6590 (26000) - LOP3.LUT R3, R3, 0x80000000, R0, 0xf8, !PT ;
 Instr 1626 @ 0x65a0 (26016) - F2F.F64.F32 R60, R3 ;
 Instr 1627 @ 0x65b0 (26032) - BRA 0x6d80 ;
Basic block id 432 - num instructions 4
 Instr 1628 @ 0x65c0 (26048) - LDG.E.U16.SYS R60, [R4] ;
 Instr 1629 @ 0x65d0 (26064) - PRMT R60, RZ, 0x5410, R60 ;
 Instr 1630 @ 0x65e0 (26080) - F2F.F64.F32 R60, R60 ;
 Instr 1631 @ 0x65f0 (26096) - BRA 0x6d80 ;
Basic block id 433 - num instructions 2
 Instr 1632 @ 0x6600 (26112) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1633 @ 0x6610 (26128) - @P0 BRA 0x6ad0 ;
Basic block id 434 - num instructions 2
 Instr 1634 @ 0x6620 (26144) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1635 @ 0x6630 (26160) - @!P0 BRA 0x68c0 ;
Basic block id 435 - num instructions 2
 Instr 1636 @ 0x6640 (26176) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1637 @ 0x6650 (26192) - @!P0 BRA 0x66b0 ;
Basic block id 436 - num instructions 2
 Instr 1638 @ 0x6660 (26208) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1639 @ 0x6670 (26224) - @P0 BRA 0x6bf0 ;
Basic block id 437 - num instructions 3
 Instr 1640 @ 0x6680 (26240) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1641 @ 0x6690 (26256) - I2F.F64.U16 R60, R4 ;
 Instr 1642 @ 0x66a0 (26272) - BRA 0x6d80 ;
Basic block id 438 - num instructions 6
 Instr 1643 @ 0x66b0 (26288) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1644 @ 0x66c0 (26304) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1645 @ 0x66d0 (26320) - BSSY B0, 0x68a0 ;
 Instr 1646 @ 0x66e0 (26336) - IMAD.MOV.U32 R60, RZ, RZ, RZ ;
 Instr 1647 @ 0x66f0 (26352) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1648 @ 0x6700 (26368) - @!P0 BRA 0x6890 ;
Basic block id 439 - num instructions 3
 Instr 1649 @ 0x6710 (26384) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1650 @ 0x6720 (26400) - @!P0 IMAD.MOV.U32 R60, RZ, RZ, 0x7f800001 ;
 Instr 1651 @ 0x6730 (26416) - @!P0 BRA 0x6890 ;
Basic block id 440 - num instructions 1
 Instr 1652 @ 0x6740 (26432) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 441 - num instructions 10
 Instr 1653 @ 0x6750 (26448) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1654 @ 0x6760 (26464) - SHF.R.U32.HI R3, RZ, 0x7, R4 ;
 Instr 1655 @ 0x6770 (26480) - BSSY B1, 0x6860 ;
 Instr 1656 @ 0x6780 (26496) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1657 @ 0x6790 (26512) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1658 @ 0x67a0 (26528) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1659 @ 0x67b0 (26544) - IMAD.U32 R60, R3, -0x80000000, RZ ;
 Instr 1660 @ 0x67c0 (26560) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1661 @ 0x67d0 (26576) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1662 @ 0x67e0 (26592) - @P0 BRA 0x6850 ;
Basic block id 442 - num instructions 6
 Instr 1663 @ 0x67f0 (26608) - FLO.U32 R4, R3 ;
 Instr 1664 @ 0x6800 (26624) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1665 @ 0x6810 (26640) - IADD3 R4, R5, -0x1c, RZ ;
 Instr 1666 @ 0x6820 (26656) - IADD3 R0, R0, 0x1d, -R5 ;
 Instr 1667 @ 0x6830 (26672) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1668 @ 0x6840 (26688) - LOP3.LUT R3, R4, 0x7, RZ, 0xc0, !PT ;
Basic block id 443 - num instructions 4
 Instr 1669 @ 0x6850 (26704) - BSYNC B1 ;
 Instr 1670 @ 0x6860 (26720) - IMAD.SHL.U32 R3, R3, 0x100000, RZ ;
 Instr 1671 @ 0x6870 (26736) - LEA R5, R0, 0x3b800000, 0x17 ;
 Instr 1672 @ 0x6880 (26752) - LOP3.LUT R60, R5, R3, R60, 0xfe, !PT ;
Basic block id 444 - num instructions 3
 Instr 1673 @ 0x6890 (26768) - BSYNC B0 ;
 Instr 1674 @ 0x68a0 (26784) - F2F.F64.F32 R60, R60 ;
 Instr 1675 @ 0x68b0 (26800) - BRA 0x6d80 ;
Basic block id 445 - num instructions 6
 Instr 1676 @ 0x68c0 (26816) - LDG.E.U8.SYS R3, [R4] ;
 Instr 1677 @ 0x68d0 (26832) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1678 @ 0x68e0 (26848) - BSSY B0, 0x6ab0 ;
 Instr 1679 @ 0x68f0 (26864) - IMAD.MOV.U32 R60, RZ, RZ, RZ ;
 Instr 1680 @ 0x6900 (26880) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 1681 @ 0x6910 (26896) - @!P0 BRA 0x6aa0 ;
Basic block id 446 - num instructions 3
 Instr 1682 @ 0x6920 (26912) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
 Instr 1683 @ 0x6930 (26928) - @!P0 IMAD.MOV.U32 R60, RZ, RZ, 0x7f800001 ;
 Instr 1684 @ 0x6940 (26944) - @!P0 BRA 0x6aa0 ;
Basic block id 447 - num instructions 1
 Instr 1685 @ 0x6950 (26960) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Basic block id 448 - num instructions 10
 Instr 1686 @ 0x6960 (26976) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1687 @ 0x6970 (26992) - SHF.R.U32.HI R4, RZ, 0x7, R3 ;
 Instr 1688 @ 0x6980 (27008) - BSSY B1, 0x6a70 ;
 Instr 1689 @ 0x6990 (27024) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1690 @ 0x69a0 (27040) - LOP3.LUT R4, R4, 0xffff, RZ, 0xc0, !PT ;
 Instr 1691 @ 0x69b0 (27056) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1692 @ 0x69c0 (27072) - LOP3.LUT R3, R3, 0x3, RZ, 0xc0, !PT ;
 Instr 1693 @ 0x69d0 (27088) - IMAD.U32 R60, R4, -0x80000000, RZ ;
 Instr 1694 @ 0x69e0 (27104) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1695 @ 0x69f0 (27120) - @P0 BRA 0x6a60 ;
Basic block id 449 - num instructions 6
 Instr 1696 @ 0x6a00 (27136) - FLO.U32 R4, R3 ;
 Instr 1697 @ 0x6a10 (27152) - IADD3 R5, -R4, 0x1f, RZ ;
 Instr 1698 @ 0x6a20 (27168) - IADD3 R4, R5, -0x1d, RZ ;
 Instr 1699 @ 0x6a30 (27184) - IADD3 R0, R0, 0x1e, -R5 ;
 Instr 1700 @ 0x6a40 (27200) - SHF.L.U32 R4, R3, R4, RZ ;
 Instr 1701 @ 0x6a50 (27216) - LOP3.LUT R3, R4, 0x3, RZ, 0xc0, !PT ;
Basic block id 450 - num instructions 4
 Instr 1702 @ 0x6a60 (27232) - BSYNC B1 ;
 Instr 1703 @ 0x6a70 (27248) - IMAD.SHL.U32 R3, R3, 0x200000, RZ ;
 Instr 1704 @ 0x6a80 (27264) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1705 @ 0x6a90 (27280) - LOP3.LUT R60, R0, R3, R60, 0xfe, !PT ;
Basic block id 451 - num instructions 3
 Instr 1706 @ 0x6aa0 (27296) - BSYNC B0 ;
 Instr 1707 @ 0x6ab0 (27312) - F2F.F64.F32 R60, R60 ;
 Instr 1708 @ 0x6ac0 (27328) - BRA 0x6d80 ;
Basic block id 452 - num instructions 2
 Instr 1709 @ 0x6ad0 (27344) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1710 @ 0x6ae0 (27360) - @!P0 BRA 0x6d60 ;
Basic block id 453 - num instructions 2
 Instr 1711 @ 0x6af0 (27376) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1712 @ 0x6b00 (27392) - @!P0 BRA 0x6d30 ;
Basic block id 454 - num instructions 2
 Instr 1713 @ 0x6b10 (27408) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1714 @ 0x6b20 (27424) - @P0 BRA 0x6bf0 ;
Basic block id 455 - num instructions 6
 Instr 1715 @ 0x6b30 (27440) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1716 @ 0x6b40 (27456) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1717 @ 0x6b50 (27472) - BSSY B0, 0x6bd0 ;
 Instr 1718 @ 0x6b60 (27488) - IMAD.MOV.U32 R60, RZ, RZ, 0x400000 ;
 Instr 1719 @ 0x6b70 (27504) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1720 @ 0x6b80 (27520) - @!P0 BRA 0x6bc0 ;
Basic block id 456 - num instructions 3
 Instr 1721 @ 0x6b90 (27536) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1722 @ 0x6ba0 (27552) - @!P0 IMAD.MOV.U32 R60, RZ, RZ, 0x7f800001 ;
 Instr 1723 @ 0x6bb0 (27568) - @P0 IMAD.SHL.U32 R60, R4, 0x800000, RZ ;
Basic block id 457 - num instructions 3
 Instr 1724 @ 0x6bc0 (27584) - BSYNC B0 ;
 Instr 1725 @ 0x6bd0 (27600) - F2F.F64.F32 R60, R60 ;
 Instr 1726 @ 0x6be0 (27616) - BRA 0x6d80 ;
Basic block id 458 - num instructions 18
 Instr 1727 @ 0x6bf0 (27632) - UMOV UR4, 0xd33a2700 ;
 Instr 1728 @ 0x6c00 (27648) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1729 @ 0x6c10 (27664) - UMOV UR5, 0x7f88 ;
 Instr 1730 @ 0x6c20 (27680) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1731 @ 0x6c30 (27696) - UMOV UR6, 0xd33a2100 ;
 Instr 1732 @ 0x6c40 (27712) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1733 @ 0x6c50 (27728) - UMOV UR7, 0x7f88 ;
 Instr 1734 @ 0x6c60 (27744) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1735 @ 0x6c70 (27760) - UMOV UR8, 0xd33a0900 ;
 Instr 1736 @ 0x6c80 (27776) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1737 @ 0x6c90 (27792) - UMOV UR9, 0x7f88 ;
 Instr 1738 @ 0x6ca0 (27808) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1739 @ 0x6cb0 (27824) - MOV R20, 0xd7fc9510 ;
 Instr 1740 @ 0x6cc0 (27840) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1741 @ 0x6cd0 (27856) - MOV R21, 0x7f88 ;
 Instr 1742 @ 0x6ce0 (27872) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1743 @ 0x6cf0 (27888) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1744 @ 0x6d00 (27904) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 459 - num instructions 2
 Instr 1745 @ 0x6d10 (27920) - CS2R R60, SRZ ;
 Instr 1746 @ 0x6d20 (27936) - BRA 0x6d80 ;
Basic block id 460 - num instructions 3
 Instr 1747 @ 0x6d30 (27952) - LDG.E.64.SYS R4, [R4] ;
 Instr 1748 @ 0x6d40 (27968) - I2F.F64.U64 R60, R4 ;
 Instr 1749 @ 0x6d50 (27984) - BRA 0x6d80 ;
Basic block id 461 - num instructions 2
 Instr 1750 @ 0x6d60 (28000) - LDG.E.SYS R4, [R4] ;
 Instr 1751 @ 0x6d70 (28016) - I2F.F64.U32 R60, R4 ;
Basic block id 462 - num instructions 3
 Instr 1752 @ 0x6d80 (28032) - IADD3 R0, R22, 0x380, RZ ;
 Instr 1753 @ 0x6d90 (28048) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 1754 @ 0x6da0 (28064) - @P0 BRA 0x7cf0 ;
Basic block id 463 - num instructions 6
 Instr 1755 @ 0x6db0 (28080) - IMAD R0, R27, 0x400, R0 ;
 Instr 1756 @ 0x6dc0 (28096) - ISETP.GT.AND P1, PT, R18, 0x9, PT ;
 Instr 1757 @ 0x6dd0 (28112) - IMAD R0, R0, c[0x0][0x180], RZ ;
 Instr 1758 @ 0x6de0 (28128) - IADD3 R4, P0, R0, c[0x0][0x170], RZ ;
 Instr 1759 @ 0x6df0 (28144) - IMAD.X R5, RZ, RZ, c[0x0][0x174], P0 ;
 Instr 1760 @ 0x6e00 (28160) - @P1 BRA 0x71b0 ;
Basic block id 464 - num instructions 3
 Instr 1761 @ 0x6e10 (28176) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1762 @ 0x6e20 (28192) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 1763 @ 0x6e30 (28208) - @P0 BRA 0x6ff0 ;
Basic block id 465 - num instructions 2
 Instr 1764 @ 0x6e40 (28224) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 1765 @ 0x6e50 (28240) - @P0 BRA 0x6f00 ;
Basic block id 466 - num instructions 2
 Instr 1766 @ 0x6e60 (28256) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 1767 @ 0x6e70 (28272) - @!P0 BRA 0x6ed0 ;
Basic block id 467 - num instructions 2
 Instr 1768 @ 0x6e80 (28288) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 1769 @ 0x6e90 (28304) - @P0 BRA 0x7b70 ;
Basic block id 468 - num instructions 3
 Instr 1770 @ 0x6ea0 (28320) - LDG.E.S8.SYS R4, [R4] ;
 Instr 1771 @ 0x6eb0 (28336) - I2F.F64.S16 R68, R4 ;
 Instr 1772 @ 0x6ec0 (28352) - BRA 0x7cf0 ;
Basic block id 469 - num instructions 3
 Instr 1773 @ 0x6ed0 (28368) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1774 @ 0x6ee0 (28384) - I2F.F64.U16 R68, R4 ;
 Instr 1775 @ 0x6ef0 (28400) - BRA 0x7cf0 ;
Basic block id 470 - num instructions 2
 Instr 1776 @ 0x6f00 (28416) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 1777 @ 0x6f10 (28432) - @!P0 BRA 0x6fc0 ;
Basic block id 471 - num instructions 2
 Instr 1778 @ 0x6f20 (28448) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 1779 @ 0x6f30 (28464) - @!P0 BRA 0x6f90 ;
Basic block id 472 - num instructions 2
 Instr 1780 @ 0x6f40 (28480) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 1781 @ 0x6f50 (28496) - @P0 BRA 0x7b70 ;
Basic block id 473 - num instructions 3
 Instr 1782 @ 0x6f60 (28512) - LDG.E.64.SYS R4, [R4] ;
 Instr 1783 @ 0x6f70 (28528) - I2F.F64.S64 R68, R4 ;
 Instr 1784 @ 0x6f80 (28544) - BRA 0x7cf0 ;
Basic block id 474 - num instructions 3
 Instr 1785 @ 0x6f90 (28560) - LDG.E.SYS R4, [R4] ;
 Instr 1786 @ 0x6fa0 (28576) - I2F.F64 R68, R4 ;
 Instr 1787 @ 0x6fb0 (28592) - BRA 0x7cf0 ;
Basic block id 475 - num instructions 3
 Instr 1788 @ 0x6fc0 (28608) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1789 @ 0x6fd0 (28624) - I2F.F64.S16 R68, R4 ;
 Instr 1790 @ 0x6fe0 (28640) - BRA 0x7cf0 ;
Basic block id 476 - num instructions 2
 Instr 1791 @ 0x6ff0 (28656) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 1792 @ 0x7000 (28672) - @P0 BRA 0x70c0 ;
Basic block id 477 - num instructions 2
 Instr 1793 @ 0x7010 (28688) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 1794 @ 0x7020 (28704) - @!P0 BRA 0x7080 ;
Basic block id 478 - num instructions 2
 Instr 1795 @ 0x7030 (28720) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 1796 @ 0x7040 (28736) - @P0 BRA 0x7b70 ;
Basic block id 479 - num instructions 3
 Instr 1797 @ 0x7050 (28752) - LDG.E.SYS R4, [R4] ;
 Instr 1798 @ 0x7060 (28768) - F2F.F64.F32 R68, R4 ;
 Instr 1799 @ 0x7070 (28784) - BRA 0x7cf0 ;
Basic block id 480 - num instructions 4
 Instr 1800 @ 0x7080 (28800) - LDG.E.U16.SYS R68, [R4] ;
 Instr 1801 @ 0x7090 (28816) - HADD2.F32 R68, R68.H0_H0, -RZ.H0_H0 ;
 Instr 1802 @ 0x70a0 (28832) - F2F.F64.F32 R68, R68 ;
 Instr 1803 @ 0x70b0 (28848) - BRA 0x7cf0 ;
Basic block id 481 - num instructions 2
 Instr 1804 @ 0x70c0 (28864) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 1805 @ 0x70d0 (28880) - @!P0 BRA 0x7190 ;
Basic block id 482 - num instructions 2
 Instr 1806 @ 0x70e0 (28896) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 1807 @ 0x70f0 (28912) - @!P0 BRA 0x7150 ;
Basic block id 483 - num instructions 2
 Instr 1808 @ 0x7100 (28928) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 1809 @ 0x7110 (28944) - @P0 BRA 0x7b70 ;
Basic block id 484 - num instructions 3
 Instr 1810 @ 0x7120 (28960) - LDG.E.SYS R4, [R4] ;
 Instr 1811 @ 0x7130 (28976) - F2F.F64.F32 R68, R4 ;
 Instr 1812 @ 0x7140 (28992) - BRA 0x7cf0 ;
Basic block id 485 - num instructions 4
 Instr 1813 @ 0x7150 (29008) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1814 @ 0x7160 (29024) - HADD2.F32 R68, R4.H0_H0, -RZ.H0_H0 ;
 Instr 1815 @ 0x7170 (29040) - F2F.F64.F32 R68, R68 ;
 Instr 1816 @ 0x7180 (29056) - BRA 0x7cf0 ;
Basic block id 486 - num instructions 2
 Instr 1817 @ 0x7190 (29072) - LDG.E.64.SYS R68, [R4] ;
 Instr 1818 @ 0x71a0 (29088) - BRA 0x7cf0 ;
Basic block id 487 - num instructions 3
 Instr 1819 @ 0x71b0 (29104) - PRMT R0, R2, 0x9910, RZ ;
 Instr 1820 @ 0x71c0 (29120) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 1821 @ 0x71d0 (29136) - @P0 BRA 0x7580 ;
Basic block id 488 - num instructions 2
 Instr 1822 @ 0x71e0 (29152) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 1823 @ 0x71f0 (29168) - @P0 BRA 0x72b0 ;
Basic block id 489 - num instructions 2
 Instr 1824 @ 0x7200 (29184) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 1825 @ 0x7210 (29200) - @!P0 BRA 0x7290 ;
Basic block id 490 - num instructions 2
 Instr 1826 @ 0x7220 (29216) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 1827 @ 0x7230 (29232) - @P0 BRA 0x7b70 ;
Basic block id 491 - num instructions 5
 Instr 1828 @ 0x7240 (29248) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1829 @ 0x7250 (29264) - IMAD.MOV.U32 R68, RZ, RZ, RZ ;
 Instr 1830 @ 0x7260 (29280) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1831 @ 0x7270 (29296) - FSEL R69, RZ, 1.875, !P0 ;
 Instr 1832 @ 0x7280 (29312) - BRA 0x7cf0 ;
Basic block id 492 - num instructions 2
 Instr 1833 @ 0x7290 (29328) - LDG.E.64.SYS R68, [R4] ;
 Instr 1834 @ 0x72a0 (29344) - BRA 0x7cf0 ;
Basic block id 493 - num instructions 2
 Instr 1835 @ 0x72b0 (29360) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 1836 @ 0x72c0 (29376) - @!P0 BRA 0x7540 ;
Basic block id 494 - num instructions 2
 Instr 1837 @ 0x72d0 (29392) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 1838 @ 0x72e0 (29408) - @!P0 BRA 0x7460 ;
Basic block id 495 - num instructions 2
 Instr 1839 @ 0x72f0 (29424) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 1840 @ 0x7300 (29440) - @P0 BRA 0x7b70 ;
Basic block id 496 - num instructions 21
 Instr 1841 @ 0x7310 (29456) - LDG.E.U8.SYS R0, [R4] ;
 Instr 1842 @ 0x7320 (29472) - IMAD.MOV.U32 R8, RZ, RZ, -0x800000 ;
 Instr 1843 @ 0x7330 (29488) - IMAD.SHL.U32 R0, R0, 0x1000000, RZ ;
 Instr 1844 @ 0x7340 (29504) - LOP3.LUT R2, R0, 0x7f000000, RZ, 0xc0, !PT ;
 Instr 1845 @ 0x7350 (29520) - IADD3 R6, R2, 0x1000000, RZ ;
 Instr 1846 @ 0x7360 (29536) - FLO.U32 R3, R2 ;
 Instr 1847 @ 0x7370 (29552) - SHF.R.S32.HI R6, RZ, 0x8, R6 ;
 Instr 1848 @ 0x7380 (29568) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 1849 @ 0x7390 (29584) - ISETP.GT.U32.AND P0, PT, R3.reuse, 0x4, PT ;
 Instr 1850 @ 0x73a0 (29600) - IADD3 R3, R3, -0x4, RZ ;
 Instr 1851 @ 0x73b0 (29616) - SEL R3, R3, RZ, P0 ;
 Instr 1852 @ 0x73c0 (29632) - SHF.L.U32 R4, R2.reuse, R3, RZ ;
 Instr 1853 @ 0x73d0 (29648) - IMAD R7, R3, R8, 0x3c000000 ;
 Instr 1854 @ 0x73e0 (29664) - IADD3 R3, R2, -0x1, RZ ;
 Instr 1855 @ 0x73f0 (29680) - LEA.HI R7, R4, R7, RZ, 0x1c ;
 Instr 1856 @ 0x7400 (29696) - SHF.R.S32.HI R3, RZ, 0x1f, R3 ;
 Instr 1857 @ 0x7410 (29712) - LOP3.LUT R6, R7, 0x7f800000, R6, 0xf8, !PT ;
 Instr 1858 @ 0x7420 (29728) - LOP3.LUT R3, R6, R3, RZ, 0x30, !PT ;
 Instr 1859 @ 0x7430 (29744) - LOP3.LUT R3, R3, 0x80000000, R0, 0xf8, !PT ;
 Instr 1860 @ 0x7440 (29760) - F2F.F64.F32 R68, R3 ;
 Instr 1861 @ 0x7450 (29776) - BRA 0x7cf0 ;
Basic block id 497 - num instructions 14
 Instr 1862 @ 0x7460 (29792) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1863 @ 0x7470 (29808) - IMAD.SHL.U32 R0, R4.reuse, 0x2000000, RZ ;
 Instr 1864 @ 0x7480 (29824) - IMAD.SHL.U32 R3, R4, 0x1000000, RZ ;
 Instr 1865 @ 0x7490 (29840) - ISETP.GE.U32.AND P0, PT, R0, 0x8000000, PT ;
 Instr 1866 @ 0x74a0 (29856) - @P0 IMAD.SHL.U32 R2, R4.reuse, 0x200000, RZ ;
 Instr 1867 @ 0x74b0 (29872) - @!P0 IMAD.SHL.U32 R0, R4, 0x100, RZ ;
 Instr 1868 @ 0x74c0 (29888) - @P0 LOP3.LUT R2, R2, 0x70000000, RZ, 0xfc, !PT ;
 Instr 1869 @ 0x74d0 (29904) - @!P0 LOP3.LUT R0, R0, 0x7f00, RZ, 0xc0, !PT ;
 Instr 1870 @ 0x74e0 (29920) - @P0 FMUL R2, R2, 1.9259299443872358531e-34 ;
 Instr 1871 @ 0x74f0 (29936) - @!P0 LOP3.LUT R0, R0, 0x3f000000, RZ, 0xfc, !PT ;
 Instr 1872 @ 0x7500 (29952) - @!P0 FADD R2, R0, -0.5 ;
 Instr 1873 @ 0x7510 (29968) - LOP3.LUT R2, R2, 0x80000000, R3, 0xf8, !PT ;
 Instr 1874 @ 0x7520 (29984) - F2F.F64.F32 R68, R2 ;
 Instr 1875 @ 0x7530 (30000) - BRA 0x7cf0 ;
Basic block id 498 - num instructions 4
 Instr 1876 @ 0x7540 (30016) - LDG.E.U16.SYS R68, [R4] ;
 Instr 1877 @ 0x7550 (30032) - PRMT R68, RZ, 0x5410, R68 ;
 Instr 1878 @ 0x7560 (30048) - F2F.F64.F32 R68, R68 ;
 Instr 1879 @ 0x7570 (30064) - BRA 0x7cf0 ;
Basic block id 499 - num instructions 2
 Instr 1880 @ 0x7580 (30080) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 1881 @ 0x7590 (30096) - @P0 BRA 0x7a50 ;
Basic block id 500 - num instructions 2
 Instr 1882 @ 0x75a0 (30112) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 1883 @ 0x75b0 (30128) - @!P0 BRA 0x7840 ;
Basic block id 501 - num instructions 2
 Instr 1884 @ 0x75c0 (30144) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 1885 @ 0x75d0 (30160) - @!P0 BRA 0x7630 ;
Basic block id 502 - num instructions 2
 Instr 1886 @ 0x75e0 (30176) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 1887 @ 0x75f0 (30192) - @P0 BRA 0x7b70 ;
Basic block id 503 - num instructions 3
 Instr 1888 @ 0x7600 (30208) - LDG.E.U16.SYS R4, [R4] ;
 Instr 1889 @ 0x7610 (30224) - I2F.F64.U16 R68, R4 ;
 Instr 1890 @ 0x7620 (30240) - BRA 0x7cf0 ;
Basic block id 504 - num instructions 6
 Instr 1891 @ 0x7630 (30256) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1892 @ 0x7640 (30272) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1893 @ 0x7650 (30288) - BSSY B0, 0x7820 ;
 Instr 1894 @ 0x7660 (30304) - IMAD.MOV.U32 R68, RZ, RZ, RZ ;
 Instr 1895 @ 0x7670 (30320) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1896 @ 0x7680 (30336) - @!P0 BRA 0x7810 ;
Basic block id 505 - num instructions 3
 Instr 1897 @ 0x7690 (30352) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
 Instr 1898 @ 0x76a0 (30368) - @!P0 IMAD.MOV.U32 R68, RZ, RZ, 0x7f800001 ;
 Instr 1899 @ 0x76b0 (30384) - @!P0 BRA 0x7810 ;
Basic block id 506 - num instructions 1
 Instr 1900 @ 0x76c0 (30400) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Basic block id 507 - num instructions 10
 Instr 1901 @ 0x76d0 (30416) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1902 @ 0x76e0 (30432) - SHF.R.U32.HI R2, RZ, 0x7, R4 ;
 Instr 1903 @ 0x76f0 (30448) - BSSY B1, 0x77e0 ;
 Instr 1904 @ 0x7700 (30464) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1905 @ 0x7710 (30480) - LOP3.LUT R2, R2, 0xffff, RZ, 0xc0, !PT ;
 Instr 1906 @ 0x7720 (30496) - SHF.R.U32.HI R0, RZ, 0x3, R0 ;
 Instr 1907 @ 0x7730 (30512) - IMAD.U32 R68, R2, -0x80000000, RZ ;
 Instr 1908 @ 0x7740 (30528) - LOP3.LUT R2, R4, 0x7, RZ, 0xc0, !PT ;
 Instr 1909 @ 0x7750 (30544) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1910 @ 0x7760 (30560) - @P0 BRA 0x77d0 ;
Basic block id 508 - num instructions 6
 Instr 1911 @ 0x7770 (30576) - FLO.U32 R3, R2 ;
 Instr 1912 @ 0x7780 (30592) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 1913 @ 0x7790 (30608) - IADD3 R5, R3, -0x1c, RZ ;
 Instr 1914 @ 0x77a0 (30624) - IADD3 R0, R0, 0x1d, -R3 ;
 Instr 1915 @ 0x77b0 (30640) - SHF.L.U32 R5, R2, R5, RZ ;
 Instr 1916 @ 0x77c0 (30656) - LOP3.LUT R2, R5, 0x7, RZ, 0xc0, !PT ;
Basic block id 509 - num instructions 4
 Instr 1917 @ 0x77d0 (30672) - BSYNC B1 ;
 Instr 1918 @ 0x77e0 (30688) - IMAD.SHL.U32 R2, R2, 0x100000, RZ ;
 Instr 1919 @ 0x77f0 (30704) - LEA R3, R0, 0x3b800000, 0x17 ;
 Instr 1920 @ 0x7800 (30720) - LOP3.LUT R68, R3, R2, R68, 0xfe, !PT ;
Basic block id 510 - num instructions 3
 Instr 1921 @ 0x7810 (30736) - BSYNC B0 ;
 Instr 1922 @ 0x7820 (30752) - F2F.F64.F32 R68, R68 ;
 Instr 1923 @ 0x7830 (30768) - BRA 0x7cf0 ;
Basic block id 511 - num instructions 6
 Instr 1924 @ 0x7840 (30784) - LDG.E.U8.SYS R2, [R4] ;
 Instr 1925 @ 0x7850 (30800) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1926 @ 0x7860 (30816) - BSSY B0, 0x7a30 ;
 Instr 1927 @ 0x7870 (30832) - IMAD.MOV.U32 R68, RZ, RZ, RZ ;
 Instr 1928 @ 0x7880 (30848) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 1929 @ 0x7890 (30864) - @!P0 BRA 0x7a20 ;
Basic block id 512 - num instructions 3
 Instr 1930 @ 0x78a0 (30880) - ISETP.NE.AND P0, PT, R2, 0x80, PT ;
 Instr 1931 @ 0x78b0 (30896) - @!P0 IMAD.MOV.U32 R68, RZ, RZ, 0x7f800001 ;
 Instr 1932 @ 0x78c0 (30912) - @!P0 BRA 0x7a20 ;
Basic block id 513 - num instructions 1
 Instr 1933 @ 0x78d0 (30928) - LOP3.LUT R0, R2, 0x7c, RZ, 0xc0, !PT ;
Basic block id 514 - num instructions 10
 Instr 1934 @ 0x78e0 (30944) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1935 @ 0x78f0 (30960) - SHF.R.U32.HI R3, RZ, 0x7, R2 ;
 Instr 1936 @ 0x7900 (30976) - BSSY B1, 0x79f0 ;
 Instr 1937 @ 0x7910 (30992) - ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 1938 @ 0x7920 (31008) - LOP3.LUT R3, R3, 0xffff, RZ, 0xc0, !PT ;
 Instr 1939 @ 0x7930 (31024) - SHF.R.U32.HI R0, RZ, 0x2, R0 ;
 Instr 1940 @ 0x7940 (31040) - LOP3.LUT R2, R2, 0x3, RZ, 0xc0, !PT ;
 Instr 1941 @ 0x7950 (31056) - IMAD.U32 R68, R3, -0x80000000, RZ ;
 Instr 1942 @ 0x7960 (31072) - LOP3.LUT R0, R0, 0xffff, RZ, 0xc0, !PT ;
 Instr 1943 @ 0x7970 (31088) - @P0 BRA 0x79e0 ;
Basic block id 515 - num instructions 6
 Instr 1944 @ 0x7980 (31104) - FLO.U32 R3, R2 ;
 Instr 1945 @ 0x7990 (31120) - IADD3 R3, -R3, 0x1f, RZ ;
 Instr 1946 @ 0x79a0 (31136) - IADD3 R5, R3, -0x1d, RZ ;
 Instr 1947 @ 0x79b0 (31152) - IADD3 R0, R0, 0x1e, -R3 ;
 Instr 1948 @ 0x79c0 (31168) - SHF.L.U32 R5, R2, R5, RZ ;
 Instr 1949 @ 0x79d0 (31184) - LOP3.LUT R2, R5, 0x3, RZ, 0xc0, !PT ;
Basic block id 516 - num instructions 4
 Instr 1950 @ 0x79e0 (31200) - BSYNC B1 ;
 Instr 1951 @ 0x79f0 (31216) - IMAD.SHL.U32 R3, R2, 0x200000, RZ ;
 Instr 1952 @ 0x7a00 (31232) - LEA R0, R0, 0x37800000, 0x17 ;
 Instr 1953 @ 0x7a10 (31248) - LOP3.LUT R68, R0, R3, R68, 0xfe, !PT ;
Basic block id 517 - num instructions 3
 Instr 1954 @ 0x7a20 (31264) - BSYNC B0 ;
 Instr 1955 @ 0x7a30 (31280) - F2F.F64.F32 R68, R68 ;
 Instr 1956 @ 0x7a40 (31296) - BRA 0x7cf0 ;
Basic block id 518 - num instructions 2
 Instr 1957 @ 0x7a50 (31312) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 1958 @ 0x7a60 (31328) - @!P0 BRA 0x7cd0 ;
Basic block id 519 - num instructions 2
 Instr 1959 @ 0x7a70 (31344) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 1960 @ 0x7a80 (31360) - @!P0 BRA 0x7ca0 ;
Basic block id 520 - num instructions 2
 Instr 1961 @ 0x7a90 (31376) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 1962 @ 0x7aa0 (31392) - @P0 BRA 0x7b70 ;
Basic block id 521 - num instructions 6
 Instr 1963 @ 0x7ab0 (31408) - LDG.E.U8.SYS R4, [R4] ;
 Instr 1964 @ 0x7ac0 (31424) - BMOV.32.CLEAR RZ, B0 ;
 Instr 1965 @ 0x7ad0 (31440) - BSSY B0, 0x7b50 ;
 Instr 1966 @ 0x7ae0 (31456) - IMAD.MOV.U32 R68, RZ, RZ, 0x400000 ;
 Instr 1967 @ 0x7af0 (31472) - ISETP.NE.AND P0, PT, R4, RZ, PT ;
 Instr 1968 @ 0x7b00 (31488) - @!P0 BRA 0x7b40 ;
Basic block id 522 - num instructions 3
 Instr 1969 @ 0x7b10 (31504) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
 Instr 1970 @ 0x7b20 (31520) - @!P0 IMAD.MOV.U32 R68, RZ, RZ, 0x7f800001 ;
 Instr 1971 @ 0x7b30 (31536) - @P0 IMAD.SHL.U32 R68, R4, 0x800000, RZ ;
Basic block id 523 - num instructions 3
 Instr 1972 @ 0x7b40 (31552) - BSYNC B0 ;
 Instr 1973 @ 0x7b50 (31568) - F2F.F64.F32 R68, R68 ;
 Instr 1974 @ 0x7b60 (31584) - BRA 0x7cf0 ;
Basic block id 524 - num instructions 18
 Instr 1975 @ 0x7b70 (31600) - UMOV UR4, 0xd33a2700 ;
 Instr 1976 @ 0x7b80 (31616) - IMAD.MOV.U32 R8, RZ, RZ, 0x4e ;
 Instr 1977 @ 0x7b90 (31632) - UMOV UR5, 0x7f88 ;
 Instr 1978 @ 0x7ba0 (31648) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 1979 @ 0x7bb0 (31664) - UMOV UR6, 0xd33a2100 ;
 Instr 1980 @ 0x7bc0 (31680) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 1981 @ 0x7bd0 (31696) - UMOV UR7, 0x7f88 ;
 Instr 1982 @ 0x7be0 (31712) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 1983 @ 0x7bf0 (31728) - UMOV UR8, 0xd33a0900 ;
 Instr 1984 @ 0x7c00 (31744) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 1985 @ 0x7c10 (31760) - UMOV UR9, 0x7f88 ;
 Instr 1986 @ 0x7c20 (31776) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 1987 @ 0x7c30 (31792) - MOV R20, 0xd7fca490 ;
 Instr 1988 @ 0x7c40 (31808) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 1989 @ 0x7c50 (31824) - MOV R21, 0x7f88 ;
 Instr 1990 @ 0x7c60 (31840) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 1991 @ 0x7c70 (31856) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 1992 @ 0x7c80 (31872) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 525 - num instructions 1
 Instr 1993 @ 0x7c90 (31888) - BRA 0x7cf0 ;
Basic block id 526 - num instructions 3
 Instr 1994 @ 0x7ca0 (31904) - LDG.E.64.SYS R4, [R4] ;
 Instr 1995 @ 0x7cb0 (31920) - I2F.F64.U64 R68, R4 ;
 Instr 1996 @ 0x7cc0 (31936) - BRA 0x7cf0 ;
Basic block id 527 - num instructions 2
 Instr 1997 @ 0x7cd0 (31952) - LDG.E.SYS R4, [R4] ;
 Instr 1998 @ 0x7ce0 (31968) - I2F.F64.U32 R68, R4 ;
Basic block id 528 - num instructions 3
 Instr 1999 @ 0x7cf0 (31984) - BSYNC B6 ;
 Instr 2000 @ 0x7d00 (32000) - ISETP.GE.AND P0, PT, R22, R71, PT ;
 Instr 2001 @ 0x7d10 (32016) - @P0 EXIT ;
Basic block id 529 - num instructions 11
 Instr 2002 @ 0x7d20 (32032) - LDC.U8 R2, c[0x0][0x184] ;
 Instr 2003 @ 0x7d30 (32048) - IMAD R0, R27, 0x400, R22 ;
 Instr 2004 @ 0x7d40 (32064) - F2F.F32.F64 R6, R16 ;
 Instr 2005 @ 0x7d50 (32080) - IADD3 R26, R22, 0x80, RZ ;
 Instr 2006 @ 0x7d60 (32096) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 2007 @ 0x7d70 (32112) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 2008 @ 0x7d80 (32128) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2009 @ 0x7d90 (32144) - PRMT R23, R2, 0x9910, RZ ;
 Instr 2010 @ 0x7da0 (32160) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 2011 @ 0x7db0 (32176) - P2R R0, PR, RZ, 0x2 ;
 Instr 2012 @ 0x7dc0 (32192) - @P1 BRA 0x8150 ;
Basic block id 530 - num instructions 2
 Instr 2013 @ 0x7dd0 (32208) - ISETP.GT.AND P0, PT, R23, 0x4, PT ;
 Instr 2014 @ 0x7de0 (32224) - @P0 BRA 0x7fb0 ;
Basic block id 531 - num instructions 2
 Instr 2015 @ 0x7df0 (32240) - ISETP.GT.AND P0, PT, R23, 0x1, PT ;
 Instr 2016 @ 0x7e00 (32256) - @P0 BRA 0x7ec0 ;
Basic block id 532 - num instructions 2
 Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 2018 @ 0x7e20 (32288) - @!P0 BRA 0x7e80 ;
Basic block id 533 - num instructions 2
 Instr 2019 @ 0x7e30 (32304) - ISETP.NE.AND P0, PT, R23, 0x1, PT ;
 Instr 2020 @ 0x7e40 (32320) - @P0 BRA 0x8ad0 ;
Basic block id 534 - num instructions 3
 Instr 2021 @ 0x7e50 (32336) - F2I.F64.TRUNC R17, R16 ;
 Instr 2022 @ 0x7e60 (32352) - STG.E.U8.SYS [R4], R17 ;
 Instr 2023 @ 0x7e70 (32368) - BRA 0x8c50 ;
Basic block id 535 - num instructions 4
 Instr 2024 @ 0x7e80 (32384) - F2I.S64.F64.TRUNC R16, R16 ;
 Instr 2025 @ 0x7e90 (32400) - IMAD.MOV.U32 R3, RZ, RZ, R16 ;
 Instr 2026 @ 0x7ea0 (32416) - STG.E.U8.SYS [R4], R3 ;
 Instr 2027 @ 0x7eb0 (32432) - BRA 0x8c50 ;
Basic block id 536 - num instructions 2
 Instr 2028 @ 0x7ec0 (32448) - ISETP.NE.AND P0, PT, R23, 0x2, PT ;
 Instr 2029 @ 0x7ed0 (32464) - @!P0 BRA 0x7f80 ;
Basic block id 537 - num instructions 2
 Instr 2030 @ 0x7ee0 (32480) - ISETP.NE.AND P0, PT, R23, 0x3, PT ;
 Instr 2031 @ 0x7ef0 (32496) - @!P0 BRA 0x7f50 ;
Basic block id 538 - num instructions 2
 Instr 2032 @ 0x7f00 (32512) - ISETP.NE.AND P0, PT, R23, 0x4, PT ;
 Instr 2033 @ 0x7f10 (32528) - @P0 BRA 0x8ad0 ;
Basic block id 539 - num instructions 3
 Instr 2034 @ 0x7f20 (32544) - F2I.S64.F64.TRUNC R16, R16 ;
 Instr 2035 @ 0x7f30 (32560) - STG.E.64.SYS [R4], R16 ;
 Instr 2036 @ 0x7f40 (32576) - BRA 0x8c50 ;
Basic block id 540 - num instructions 3
 Instr 2037 @ 0x7f50 (32592) - F2I.F64.TRUNC R17, R16 ;
 Instr 2038 @ 0x7f60 (32608) - STG.E.SYS [R4], R17 ;
 Instr 2039 @ 0x7f70 (32624) - BRA 0x8c50 ;
Basic block id 541 - num instructions 3
 Instr 2040 @ 0x7f80 (32640) - F2I.F64.TRUNC R17, R16 ;
 Instr 2041 @ 0x7f90 (32656) - STG.E.U16.SYS [R4], R17 ;
 Instr 2042 @ 0x7fa0 (32672) - BRA 0x8c50 ;
Basic block id 542 - num instructions 2
 Instr 2043 @ 0x7fb0 (32688) - ISETP.GT.AND P0, PT, R23, 0x6, PT ;
 Instr 2044 @ 0x7fc0 (32704) - @P0 BRA 0x8060 ;
Basic block id 543 - num instructions 2
 Instr 2045 @ 0x7fd0 (32720) - ISETP.NE.AND P0, PT, R23, 0x5, PT ;
 Instr 2046 @ 0x7fe0 (32736) - @!P0 BRA 0x8030 ;
Basic block id 544 - num instructions 2
 Instr 2047 @ 0x7ff0 (32752) - ISETP.NE.AND P0, PT, R23, 0x6, PT ;
 Instr 2048 @ 0x8000 (32768) - @P0 BRA 0x8ad0 ;
Basic block id 545 - num instructions 2
 Instr 2049 @ 0x8010 (32784) - STG.E.SYS [R4], R6 ;
 Instr 2050 @ 0x8020 (32800) - BRA 0x8c50 ;
Basic block id 546 - num instructions 3
 Instr 2051 @ 0x8030 (32816) - F2F.F16.F32 R3, R6 ;
 Instr 2052 @ 0x8040 (32832) - STG.E.U16.SYS [R4], R3 ;
 Instr 2053 @ 0x8050 (32848) - BRA 0x8c50 ;
Basic block id 547 - num instructions 2
 Instr 2054 @ 0x8060 (32864) - ISETP.NE.AND P0, PT, R23, 0x7, PT ;
 Instr 2055 @ 0x8070 (32880) - @!P0 BRA 0x8130 ;
Basic block id 548 - num instructions 2
 Instr 2056 @ 0x8080 (32896) - ISETP.NE.AND P0, PT, R23, 0x8, PT ;
 Instr 2057 @ 0x8090 (32912) - @!P0 BRA 0x80f0 ;
Basic block id 549 - num instructions 2
 Instr 2058 @ 0x80a0 (32928) - ISETP.NE.AND P0, PT, R23, 0x9, PT ;
 Instr 2059 @ 0x80b0 (32944) - @P0 BRA 0x8ad0 ;
Basic block id 550 - num instructions 3
 Instr 2060 @ 0x80c0 (32960) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 2061 @ 0x80d0 (32976) - STG.E.64.SYS [R4], R6 ;
 Instr 2062 @ 0x80e0 (32992) - BRA 0x8c50 ;
Basic block id 551 - num instructions 4
 Instr 2063 @ 0x80f0 (33008) - F2F.F16.F32 R3, R6 ;
 Instr 2064 @ 0x8100 (33024) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2065 @ 0x8110 (33040) - STG.E.SYS [R4], R3 ;
 Instr 2066 @ 0x8120 (33056) - BRA 0x8c50 ;
Basic block id 552 - num instructions 2
 Instr 2067 @ 0x8130 (33072) - STG.E.64.SYS [R4], R16 ;
 Instr 2068 @ 0x8140 (33088) - BRA 0x8c50 ;
Basic block id 553 - num instructions 2
 Instr 2069 @ 0x8150 (33104) - ISETP.GT.AND P0, PT, R23, 0x18, PT ;
 Instr 2070 @ 0x8160 (33120) - @P0 BRA 0x85b0 ;
Basic block id 554 - num instructions 2
 Instr 2071 @ 0x8170 (33136) - ISETP.GT.AND P0, PT, R23, 0xe, PT ;
 Instr 2072 @ 0x8180 (33152) - @P0 BRA 0x8240 ;
Basic block id 555 - num instructions 2
 Instr 2073 @ 0x8190 (33168) - ISETP.NE.AND P0, PT, R23, 0xa, PT ;
 Instr 2074 @ 0x81a0 (33184) - @!P0 BRA 0x8210 ;
Basic block id 556 - num instructions 2
 Instr 2075 @ 0x81b0 (33200) - ISETP.NE.AND P0, PT, R23, 0xb, PT ;
 Instr 2076 @ 0x81c0 (33216) - @P0 BRA 0x8ad0 ;
Basic block id 557 - num instructions 4
 Instr 2077 @ 0x81d0 (33232) - DSETP.NEU.AND P0, PT, R16, RZ, PT ;
 Instr 2078 @ 0x81e0 (33248) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2079 @ 0x81f0 (33264) - STG.E.U8.SYS [R4], R3 ;
 Instr 2080 @ 0x8200 (33280) - BRA 0x8c50 ;
Basic block id 558 - num instructions 3
 Instr 2081 @ 0x8210 (33296) - CS2R R18, SRZ ;
 Instr 2082 @ 0x8220 (33312) - STG.E.128.SYS [R4], R16 ;
 Instr 2083 @ 0x8230 (33328) - BRA 0x8c50 ;
Basic block id 559 - num instructions 2
 Instr 2084 @ 0x8240 (33344) - ISETP.NE.AND P0, PT, R23, 0xf, PT ;
 Instr 2085 @ 0x8250 (33360) - @!P0 BRA 0x8530 ;
Basic block id 560 - num instructions 2
 Instr 2086 @ 0x8260 (33376) - ISETP.NE.AND P0, PT, R23, 0x17, PT ;
 Instr 2087 @ 0x8270 (33392) - @!P0 BRA 0x83d0 ;
Basic block id 561 - num instructions 2
 Instr 2088 @ 0x8280 (33408) - ISETP.NE.AND P0, PT, R23, 0x18, PT ;
 Instr 2089 @ 0x8290 (33424) - @P0 BRA 0x8ad0 ;
Basic block id 562 - num instructions 7
 Instr 2090 @ 0x82a0 (33440) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2091 @ 0x82b0 (33456) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2092 @ 0x82c0 (33472) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2093 @ 0x82d0 (33488) - BSSY B0, 0x83a0 ;
 Instr 2094 @ 0x82e0 (33504) - ISETP.GT.U32.AND P0, PT, R8, 0x43efffff, PT ;
 Instr 2095 @ 0x82f0 (33520) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2096 @ 0x8300 (33536) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 563 - num instructions 1
 Instr 2097 @ 0x8310 (33552) - @P0 BRA 0x8390 ;
Basic block id 564 - num instructions 7
 Instr 2098 @ 0x8320 (33568) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
 Instr 2099 @ 0x8330 (33584) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 2100 @ 0x8340 (33600) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2101 @ 0x8350 (33616) - @P0 IADD3 R0, R6, 0x407ffff, R3 ;
 Instr 2102 @ 0x8360 (33632) - @!P0 FADD R3, R8, 16384 ;
 Instr 2103 @ 0x8370 (33648) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2104 @ 0x8380 (33664) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 565 - num instructions 4
 Instr 2105 @ 0x8390 (33680) - BSYNC B0 ;
 Instr 2106 @ 0x83a0 (33696) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2107 @ 0x83b0 (33712) - STG.E.U8.SYS [R4], R7 ;
 Instr 2108 @ 0x83c0 (33728) - BRA 0x8c50 ;
Basic block id 566 - num instructions 5
 Instr 2109 @ 0x83d0 (33744) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2110 @ 0x83e0 (33760) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2111 @ 0x83f0 (33776) - BSSY B0, 0x84e0 ;
 Instr 2112 @ 0x8400 (33792) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2113 @ 0x8410 (33808) - @P0 BRA 0x84a0 ;
Basic block id 567 - num instructions 8
 Instr 2114 @ 0x8420 (33824) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
 Instr 2115 @ 0x8430 (33840) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 2116 @ 0x8440 (33856) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2117 @ 0x8450 (33872) - @P0 IADD3 R0, R6, 0x80fffff, R3 ;
 Instr 2118 @ 0x8460 (33888) - @!P0 FADD R3, R7, 128 ;
 Instr 2119 @ 0x8470 (33904) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2120 @ 0x8480 (33920) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2121 @ 0x8490 (33936) - BRA 0x84d0 ;
Basic block id 568 - num instructions 3
 Instr 2122 @ 0x84a0 (33952) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2123 @ 0x84b0 (33968) - ISETP.GT.U32.AND P0, PT, R7, 0x7f800000, PT ;
 Instr 2124 @ 0x84c0 (33984) - SEL R0, R0, 0x7c, P0 ;
Basic block id 569 - num instructions 6
 Instr 2125 @ 0x84d0 (34000) - BSYNC B0 ;
 Instr 2126 @ 0x84e0 (34016) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2127 @ 0x84f0 (34032) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 2128 @ 0x8500 (34048) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2129 @ 0x8510 (34064) - STG.E.U8.SYS [R4], R3 ;
 Instr 2130 @ 0x8520 (34080) - BRA 0x8c50 ;
Basic block id 570 - num instructions 8
 Instr 2131 @ 0x8530 (34096) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 2132 @ 0x8540 (34112) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2133 @ 0x8550 (34128) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 2134 @ 0x8560 (34144) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2135 @ 0x8570 (34160) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 2136 @ 0x8580 (34176) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2137 @ 0x8590 (34192) - STG.E.U16.SYS [R4], R3 ;
 Instr 2138 @ 0x85a0 (34208) - BRA 0x8c50 ;
Basic block id 571 - num instructions 2
 Instr 2139 @ 0x85b0 (34224) - ISETP.GT.AND P0, PT, R23, 0x1b, PT ;
 Instr 2140 @ 0x85c0 (34240) - @P0 BRA 0x8980 ;
Basic block id 572 - num instructions 2
 Instr 2141 @ 0x85d0 (34256) - ISETP.NE.AND P0, PT, R23, 0x19, PT ;
 Instr 2142 @ 0x85e0 (34272) - @!P0 BRA 0x87f0 ;
Basic block id 573 - num instructions 2
 Instr 2143 @ 0x85f0 (34288) - ISETP.NE.AND P0, PT, R23, 0x1a, PT ;
 Instr 2144 @ 0x8600 (34304) - @!P0 BRA 0x8660 ;
Basic block id 574 - num instructions 2
 Instr 2145 @ 0x8610 (34320) - ISETP.NE.AND P0, PT, R23, 0x1b, PT ;
 Instr 2146 @ 0x8620 (34336) - @P0 BRA 0x8ad0 ;
Basic block id 575 - num instructions 3
 Instr 2147 @ 0x8630 (34352) - F2I.U32.F64.TRUNC R17, R16 ;
 Instr 2148 @ 0x8640 (34368) - STG.E.U16.SYS [R4], R17 ;
 Instr 2149 @ 0x8650 (34384) - BRA 0x8c50 ;
Basic block id 576 - num instructions 6
 Instr 2150 @ 0x8660 (34400) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2151 @ 0x8670 (34416) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2152 @ 0x8680 (34432) - BSSY B0, 0x87d0 ;
 Instr 2153 @ 0x8690 (34448) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2154 @ 0x86a0 (34464) - ISETP.GT.U32.AND P0, PT, R7, 0x437fffff, PT ;
 Instr 2155 @ 0x86b0 (34480) - @P0 BRA 0x87c0 ;
Basic block id 577 - num instructions 2
 Instr 2156 @ 0x86c0 (34496) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
 Instr 2157 @ 0x86d0 (34512) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 578 - num instructions 5
 Instr 2158 @ 0x86e0 (34528) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2159 @ 0x86f0 (34544) - @P0 IADD3 R0, R6, 0x487ffff, R3 ;
 Instr 2160 @ 0x8700 (34560) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2161 @ 0x8710 (34576) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2162 @ 0x8720 (34592) - @P0 BRA 0x8780 ;
Basic block id 579 - num instructions 5
 Instr 2163 @ 0x8730 (34608) - FADD R0, R7, 8192 ;
 Instr 2164 @ 0x8740 (34624) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2165 @ 0x8750 (34640) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2166 @ 0x8760 (34656) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2167 @ 0x8770 (34672) - @!P0 BRA 0x87c0 ;
Basic block id 580 - num instructions 4
 Instr 2168 @ 0x8780 (34688) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2169 @ 0x8790 (34704) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2170 @ 0x87a0 (34720) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2171 @ 0x87b0 (34736) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 581 - num instructions 3
 Instr 2172 @ 0x87c0 (34752) - BSYNC B0 ;
 Instr 2173 @ 0x87d0 (34768) - STG.E.U8.SYS [R4], R0 ;
 Instr 2174 @ 0x87e0 (34784) - BRA 0x8c50 ;
Basic block id 582 - num instructions 6
 Instr 2175 @ 0x87f0 (34800) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2176 @ 0x8800 (34816) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2177 @ 0x8810 (34832) - BSSY B0, 0x8960 ;
 Instr 2178 @ 0x8820 (34848) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2179 @ 0x8830 (34864) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2180 @ 0x8840 (34880) - @P0 BRA 0x8950 ;
Basic block id 583 - num instructions 2
 Instr 2181 @ 0x8850 (34896) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
 Instr 2182 @ 0x8860 (34912) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 584 - num instructions 5
 Instr 2183 @ 0x8870 (34928) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2184 @ 0x8880 (34944) - @P0 IADD3 R0, R6, 0x88fffff, R3 ;
 Instr 2185 @ 0x8890 (34960) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2186 @ 0x88a0 (34976) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2187 @ 0x88b0 (34992) - @P0 BRA 0x8910 ;
Basic block id 585 - num instructions 5
 Instr 2188 @ 0x88c0 (35008) - FADD R0, R7, 64 ;
 Instr 2189 @ 0x88d0 (35024) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2190 @ 0x88e0 (35040) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2191 @ 0x88f0 (35056) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2192 @ 0x8900 (35072) - @!P0 BRA 0x8950 ;
Basic block id 586 - num instructions 4
 Instr 2193 @ 0x8910 (35088) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2194 @ 0x8920 (35104) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2195 @ 0x8930 (35120) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2196 @ 0x8940 (35136) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 587 - num instructions 3
 Instr 2197 @ 0x8950 (35152) - BSYNC B0 ;
 Instr 2198 @ 0x8960 (35168) - STG.E.U8.SYS [R4], R0 ;
 Instr 2199 @ 0x8970 (35184) - BRA 0x8c50 ;
Basic block id 588 - num instructions 2
 Instr 2200 @ 0x8980 (35200) - ISETP.NE.AND P0, PT, R23, 0x1c, PT ;
 Instr 2201 @ 0x8990 (35216) - @!P0 BRA 0x8c30 ;
Basic block id 589 - num instructions 2
 Instr 2202 @ 0x89a0 (35232) - ISETP.NE.AND P0, PT, R23, 0x1d, PT ;
 Instr 2203 @ 0x89b0 (35248) - @!P0 BRA 0x8c00 ;
Basic block id 590 - num instructions 2
 Instr 2204 @ 0x89c0 (35264) - ISETP.NE.AND P0, PT, R23, 0x2c, PT ;
 Instr 2205 @ 0x89d0 (35280) - @P0 BRA 0x8ad0 ;
Basic block id 591 - num instructions 15
 Instr 2206 @ 0x89e0 (35296) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
 Instr 2207 @ 0x89f0 (35312) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2208 @ 0x8a00 (35328) - LOP3.LUT R3, R7, 0xff, RZ, 0xc0, !PT ;
 Instr 2209 @ 0x8a10 (35344) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2210 @ 0x8a20 (35360) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 2211 @ 0x8a30 (35376) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 2212 @ 0x8a40 (35392) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2213 @ 0x8a50 (35408) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2214 @ 0x8a60 (35424) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2215 @ 0x8a70 (35440) - @P2 IADD3 R0, R7, 0x1, RZ ;
 Instr 2216 @ 0x8a80 (35456) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2217 @ 0x8a90 (35472) - @!P0 IMAD.MOV R0, RZ, RZ, R7 ;
 Instr 2218 @ 0x8aa0 (35488) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2219 @ 0x8ab0 (35504) - STG.E.U8.SYS [R4], R3 ;
 Instr 2220 @ 0x8ac0 (35520) - BRA 0x8c50 ;
Basic block id 592 - num instructions 18
 Instr 2221 @ 0x8ad0 (35536) - UMOV UR6, 0xd33a2700 ;
 Instr 2222 @ 0x8ae0 (35552) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2223 @ 0x8af0 (35568) - UMOV UR7, 0x7f88 ;
 Instr 2224 @ 0x8b00 (35584) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2225 @ 0x8b10 (35600) - UMOV UR8, 0xd33a2100 ;
 Instr 2226 @ 0x8b20 (35616) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2227 @ 0x8b30 (35632) - UMOV UR9, 0x7f88 ;
 Instr 2228 @ 0x8b40 (35648) - IMAD.U32 R4, RZ, RZ, UR6 ;
 Instr 2229 @ 0x8b50 (35664) - UMOV UR4, 0xd33a0a00 ;
 Instr 2230 @ 0x8b60 (35680) - IMAD.U32 R5, RZ, RZ, UR7 ;
 Instr 2231 @ 0x8b70 (35696) - UMOV UR5, 0x7f88 ;
 Instr 2232 @ 0x8b80 (35712) - IMAD.U32 R6, RZ, RZ, UR8 ;
 Instr 2233 @ 0x8b90 (35728) - MOV R20, 0xd7fcb3f0 ;
 Instr 2234 @ 0x8ba0 (35744) - IMAD.U32 R7, RZ, RZ, UR9 ;
 Instr 2235 @ 0x8bb0 (35760) - MOV R21, 0x7f88 ;
 Instr 2236 @ 0x8bc0 (35776) - IMAD.U32 R10, RZ, RZ, UR4 ;
 Instr 2237 @ 0x8bd0 (35792) - IMAD.U32 R11, RZ, RZ, UR5 ;
 Instr 2238 @ 0x8be0 (35808) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 593 - num instructions 1
 Instr 2239 @ 0x8bf0 (35824) - BRA 0x8c50 ;
Basic block id 594 - num instructions 3
 Instr 2240 @ 0x8c00 (35840) - F2I.U64.F64.TRUNC R16, R16 ;
 Instr 2241 @ 0x8c10 (35856) - STG.E.64.SYS [R4], R16 ;
 Instr 2242 @ 0x8c20 (35872) - BRA 0x8c50 ;
Basic block id 595 - num instructions 2
 Instr 2243 @ 0x8c30 (35888) - F2I.U32.F64.TRUNC R17, R16 ;
 Instr 2244 @ 0x8c40 (35904) - STG.E.SYS [R4], R17 ;
Basic block id 596 - num instructions 2
 Instr 2245 @ 0x8c50 (35920) - ISETP.GE.AND P0, PT, R26, R71, PT ;
 Instr 2246 @ 0x8c60 (35936) - @P0 EXIT ;
Basic block id 597 - num instructions 7
 Instr 2247 @ 0x8c70 (35952) - IMAD R16, R27, 0x400, R26 ;
 Instr 2248 @ 0x8c80 (35968) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 2249 @ 0x8c90 (35984) - F2F.F32.F64 R6, R24 ;
 Instr 2250 @ 0x8ca0 (36000) - IMAD R4, R16, c[0x0][0x188], RZ ;
 Instr 2251 @ 0x8cb0 (36016) - IADD3 R4, P0, R4, c[0x0][0x168], RZ ;
 Instr 2252 @ 0x8cc0 (36032) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2253 @ 0x8cd0 (36048) - @P1 BRA 0x9070 ;
Basic block id 598 - num instructions 3
 Instr 2254 @ 0x8ce0 (36064) - PRMT R0, R2, 0x9910, RZ ;
 Instr 2255 @ 0x8cf0 (36080) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2256 @ 0x8d00 (36096) - @P0 BRA 0x8ed0 ;
Basic block id 599 - num instructions 2
 Instr 2257 @ 0x8d10 (36112) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2258 @ 0x8d20 (36128) - @P0 BRA 0x8de0 ;
Basic block id 600 - num instructions 2
 Instr 2259 @ 0x8d30 (36144) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 2260 @ 0x8d40 (36160) - @!P0 BRA 0x8da0 ;
Basic block id 601 - num instructions 2
 Instr 2261 @ 0x8d50 (36176) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2262 @ 0x8d60 (36192) - @P0 BRA 0x9a00 ;
Basic block id 602 - num instructions 3
 Instr 2263 @ 0x8d70 (36208) - F2I.F64.TRUNC R25, R24 ;
 Instr 2264 @ 0x8d80 (36224) - STG.E.U8.SYS [R4], R25 ;
 Instr 2265 @ 0x8d90 (36240) - BRA 0x9b80 ;
Basic block id 603 - num instructions 4
 Instr 2266 @ 0x8da0 (36256) - F2I.S64.F64.TRUNC R24, R24 ;
 Instr 2267 @ 0x8db0 (36272) - IMAD.MOV.U32 R3, RZ, RZ, R24 ;
 Instr 2268 @ 0x8dc0 (36288) - STG.E.U8.SYS [R4], R3 ;
 Instr 2269 @ 0x8dd0 (36304) - BRA 0x9b80 ;
Basic block id 604 - num instructions 2
 Instr 2270 @ 0x8de0 (36320) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 2271 @ 0x8df0 (36336) - @!P0 BRA 0x8ea0 ;
Basic block id 605 - num instructions 2
 Instr 2272 @ 0x8e00 (36352) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 2273 @ 0x8e10 (36368) - @!P0 BRA 0x8e70 ;
Basic block id 606 - num instructions 2
 Instr 2274 @ 0x8e20 (36384) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 2275 @ 0x8e30 (36400) - @P0 BRA 0x9a00 ;
Basic block id 607 - num instructions 3
 Instr 2276 @ 0x8e40 (36416) - F2I.S64.F64.TRUNC R24, R24 ;
 Instr 2277 @ 0x8e50 (36432) - STG.E.64.SYS [R4], R24 ;
 Instr 2278 @ 0x8e60 (36448) - BRA 0x9b80 ;
Basic block id 608 - num instructions 3
 Instr 2279 @ 0x8e70 (36464) - F2I.F64.TRUNC R25, R24 ;
 Instr 2280 @ 0x8e80 (36480) - STG.E.SYS [R4], R25 ;
 Instr 2281 @ 0x8e90 (36496) - BRA 0x9b80 ;
Basic block id 609 - num instructions 3
 Instr 2282 @ 0x8ea0 (36512) - F2I.F64.TRUNC R25, R24 ;
 Instr 2283 @ 0x8eb0 (36528) - STG.E.U16.SYS [R4], R25 ;
 Instr 2284 @ 0x8ec0 (36544) - BRA 0x9b80 ;
Basic block id 610 - num instructions 2
 Instr 2285 @ 0x8ed0 (36560) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 2286 @ 0x8ee0 (36576) - @P0 BRA 0x8f80 ;
Basic block id 611 - num instructions 2
 Instr 2287 @ 0x8ef0 (36592) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 2288 @ 0x8f00 (36608) - @!P0 BRA 0x8f50 ;
Basic block id 612 - num instructions 2
 Instr 2289 @ 0x8f10 (36624) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 2290 @ 0x8f20 (36640) - @P0 BRA 0x9a00 ;
Basic block id 613 - num instructions 2
 Instr 2291 @ 0x8f30 (36656) - STG.E.SYS [R4], R6 ;
 Instr 2292 @ 0x8f40 (36672) - BRA 0x9b80 ;
Basic block id 614 - num instructions 3
 Instr 2293 @ 0x8f50 (36688) - F2F.F16.F32 R3, R6 ;
 Instr 2294 @ 0x8f60 (36704) - STG.E.U16.SYS [R4], R3 ;
 Instr 2295 @ 0x8f70 (36720) - BRA 0x9b80 ;
Basic block id 615 - num instructions 2
 Instr 2296 @ 0x8f80 (36736) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 2297 @ 0x8f90 (36752) - @!P0 BRA 0x9050 ;
Basic block id 616 - num instructions 2
 Instr 2298 @ 0x8fa0 (36768) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 2299 @ 0x8fb0 (36784) - @!P0 BRA 0x9010 ;
Basic block id 617 - num instructions 2
 Instr 2300 @ 0x8fc0 (36800) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 2301 @ 0x8fd0 (36816) - @P0 BRA 0x9a00 ;
Basic block id 618 - num instructions 3
 Instr 2302 @ 0x8fe0 (36832) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 2303 @ 0x8ff0 (36848) - STG.E.64.SYS [R4], R6 ;
 Instr 2304 @ 0x9000 (36864) - BRA 0x9b80 ;
Basic block id 619 - num instructions 4
 Instr 2305 @ 0x9010 (36880) - F2F.F16.F32 R3, R6 ;
 Instr 2306 @ 0x9020 (36896) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2307 @ 0x9030 (36912) - STG.E.SYS [R4], R3 ;
 Instr 2308 @ 0x9040 (36928) - BRA 0x9b80 ;
Basic block id 620 - num instructions 2
 Instr 2309 @ 0x9050 (36944) - STG.E.64.SYS [R4], R24 ;
 Instr 2310 @ 0x9060 (36960) - BRA 0x9b80 ;
Basic block id 621 - num instructions 3
 Instr 2311 @ 0x9070 (36976) - PRMT R0, R2, 0x9910, RZ ;
 Instr 2312 @ 0x9080 (36992) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 2313 @ 0x9090 (37008) - @P0 BRA 0x94e0 ;
Basic block id 622 - num instructions 2
 Instr 2314 @ 0x90a0 (37024) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 2315 @ 0x90b0 (37040) - @P0 BRA 0x9170 ;
Basic block id 623 - num instructions 2
 Instr 2316 @ 0x90c0 (37056) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 2317 @ 0x90d0 (37072) - @!P0 BRA 0x9140 ;
Basic block id 624 - num instructions 2
 Instr 2318 @ 0x90e0 (37088) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 2319 @ 0x90f0 (37104) - @P0 BRA 0x9a00 ;
Basic block id 625 - num instructions 4
 Instr 2320 @ 0x9100 (37120) - DSETP.NEU.AND P0, PT, R24, RZ, PT ;
 Instr 2321 @ 0x9110 (37136) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2322 @ 0x9120 (37152) - STG.E.U8.SYS [R4], R3 ;
 Instr 2323 @ 0x9130 (37168) - BRA 0x9b80 ;
Basic block id 626 - num instructions 3
 Instr 2324 @ 0x9140 (37184) - CS2R R26, SRZ ;
 Instr 2325 @ 0x9150 (37200) - STG.E.128.SYS [R4], R24 ;
 Instr 2326 @ 0x9160 (37216) - BRA 0x9b80 ;
Basic block id 627 - num instructions 2
 Instr 2327 @ 0x9170 (37232) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2328 @ 0x9180 (37248) - @!P0 BRA 0x9460 ;
Basic block id 628 - num instructions 2
 Instr 2329 @ 0x9190 (37264) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2330 @ 0x91a0 (37280) - @!P0 BRA 0x9300 ;
Basic block id 629 - num instructions 2
 Instr 2331 @ 0x91b0 (37296) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2332 @ 0x91c0 (37312) - @P0 BRA 0x9a00 ;
Basic block id 630 - num instructions 7
 Instr 2333 @ 0x91d0 (37328) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2334 @ 0x91e0 (37344) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2335 @ 0x91f0 (37360) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2336 @ 0x9200 (37376) - BSSY B0, 0x92d0 ;
 Instr 2337 @ 0x9210 (37392) - ISETP.GT.U32.AND P0, PT, R8, 0x43efffff, PT ;
 Instr 2338 @ 0x9220 (37408) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2339 @ 0x9230 (37424) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 631 - num instructions 1
 Instr 2340 @ 0x9240 (37440) - @P0 BRA 0x92c0 ;
Basic block id 632 - num instructions 7
 Instr 2341 @ 0x9250 (37456) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
 Instr 2342 @ 0x9260 (37472) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 2343 @ 0x9270 (37488) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2344 @ 0x9280 (37504) - @P0 IADD3 R0, R6, 0x407ffff, R3 ;
 Instr 2345 @ 0x9290 (37520) - @!P0 FADD R3, R8, 16384 ;
 Instr 2346 @ 0x92a0 (37536) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2347 @ 0x92b0 (37552) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 633 - num instructions 4
 Instr 2348 @ 0x92c0 (37568) - BSYNC B0 ;
 Instr 2349 @ 0x92d0 (37584) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2350 @ 0x92e0 (37600) - STG.E.U8.SYS [R4], R7 ;
 Instr 2351 @ 0x92f0 (37616) - BRA 0x9b80 ;
Basic block id 634 - num instructions 5
 Instr 2352 @ 0x9300 (37632) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2353 @ 0x9310 (37648) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2354 @ 0x9320 (37664) - BSSY B0, 0x9410 ;
 Instr 2355 @ 0x9330 (37680) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2356 @ 0x9340 (37696) - @P0 BRA 0x93d0 ;
Basic block id 635 - num instructions 8
 Instr 2357 @ 0x9350 (37712) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
 Instr 2358 @ 0x9360 (37728) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 2359 @ 0x9370 (37744) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2360 @ 0x9380 (37760) - @P0 IADD3 R0, R6, 0x80fffff, R3 ;
 Instr 2361 @ 0x9390 (37776) - @!P0 FADD R3, R7, 128 ;
 Instr 2362 @ 0x93a0 (37792) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2363 @ 0x93b0 (37808) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2364 @ 0x93c0 (37824) - BRA 0x9400 ;
Basic block id 636 - num instructions 3
 Instr 2365 @ 0x93d0 (37840) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2366 @ 0x93e0 (37856) - ISETP.GT.U32.AND P0, PT, R7, 0x7f800000, PT ;
 Instr 2367 @ 0x93f0 (37872) - SEL R0, R0, 0x7c, P0 ;
Basic block id 637 - num instructions 6
 Instr 2368 @ 0x9400 (37888) - BSYNC B0 ;
 Instr 2369 @ 0x9410 (37904) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2370 @ 0x9420 (37920) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 2371 @ 0x9430 (37936) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2372 @ 0x9440 (37952) - STG.E.U8.SYS [R4], R3 ;
 Instr 2373 @ 0x9450 (37968) - BRA 0x9b80 ;
Basic block id 638 - num instructions 8
 Instr 2374 @ 0x9460 (37984) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 2375 @ 0x9470 (38000) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2376 @ 0x9480 (38016) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 2377 @ 0x9490 (38032) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2378 @ 0x94a0 (38048) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 2379 @ 0x94b0 (38064) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2380 @ 0x94c0 (38080) - STG.E.U16.SYS [R4], R3 ;
 Instr 2381 @ 0x94d0 (38096) - BRA 0x9b80 ;
Basic block id 639 - num instructions 2
 Instr 2382 @ 0x94e0 (38112) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 2383 @ 0x94f0 (38128) - @P0 BRA 0x98b0 ;
Basic block id 640 - num instructions 2
 Instr 2384 @ 0x9500 (38144) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 2385 @ 0x9510 (38160) - @!P0 BRA 0x9720 ;
Basic block id 641 - num instructions 2
 Instr 2386 @ 0x9520 (38176) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 2387 @ 0x9530 (38192) - @!P0 BRA 0x9590 ;
Basic block id 642 - num instructions 2
 Instr 2388 @ 0x9540 (38208) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 2389 @ 0x9550 (38224) - @P0 BRA 0x9a00 ;
Basic block id 643 - num instructions 3
 Instr 2390 @ 0x9560 (38240) - F2I.U32.F64.TRUNC R25, R24 ;
 Instr 2391 @ 0x9570 (38256) - STG.E.U16.SYS [R4], R25 ;
 Instr 2392 @ 0x9580 (38272) - BRA 0x9b80 ;
Basic block id 644 - num instructions 6
 Instr 2393 @ 0x9590 (38288) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2394 @ 0x95a0 (38304) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2395 @ 0x95b0 (38320) - BSSY B0, 0x9700 ;
 Instr 2396 @ 0x95c0 (38336) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2397 @ 0x95d0 (38352) - ISETP.GT.U32.AND P0, PT, R7, 0x437fffff, PT ;
 Instr 2398 @ 0x95e0 (38368) - @P0 BRA 0x96f0 ;
Basic block id 645 - num instructions 2
 Instr 2399 @ 0x95f0 (38384) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
 Instr 2400 @ 0x9600 (38400) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 646 - num instructions 5
 Instr 2401 @ 0x9610 (38416) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2402 @ 0x9620 (38432) - @P0 IADD3 R0, R6, 0x487ffff, R3 ;
 Instr 2403 @ 0x9630 (38448) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2404 @ 0x9640 (38464) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2405 @ 0x9650 (38480) - @P0 BRA 0x96b0 ;
Basic block id 647 - num instructions 5
 Instr 2406 @ 0x9660 (38496) - FADD R0, R7, 8192 ;
 Instr 2407 @ 0x9670 (38512) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2408 @ 0x9680 (38528) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2409 @ 0x9690 (38544) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2410 @ 0x96a0 (38560) - @!P0 BRA 0x96f0 ;
Basic block id 648 - num instructions 4
 Instr 2411 @ 0x96b0 (38576) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2412 @ 0x96c0 (38592) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2413 @ 0x96d0 (38608) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2414 @ 0x96e0 (38624) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 649 - num instructions 3
 Instr 2415 @ 0x96f0 (38640) - BSYNC B0 ;
 Instr 2416 @ 0x9700 (38656) - STG.E.U8.SYS [R4], R0 ;
 Instr 2417 @ 0x9710 (38672) - BRA 0x9b80 ;
Basic block id 650 - num instructions 6
 Instr 2418 @ 0x9720 (38688) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2419 @ 0x9730 (38704) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2420 @ 0x9740 (38720) - BSSY B0, 0x9890 ;
 Instr 2421 @ 0x9750 (38736) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2422 @ 0x9760 (38752) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2423 @ 0x9770 (38768) - @P0 BRA 0x9880 ;
Basic block id 651 - num instructions 2
 Instr 2424 @ 0x9780 (38784) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
 Instr 2425 @ 0x9790 (38800) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 652 - num instructions 5
 Instr 2426 @ 0x97a0 (38816) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2427 @ 0x97b0 (38832) - @P0 IADD3 R0, R6, 0x88fffff, R3 ;
 Instr 2428 @ 0x97c0 (38848) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2429 @ 0x97d0 (38864) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2430 @ 0x97e0 (38880) - @P0 BRA 0x9840 ;
Basic block id 653 - num instructions 5
 Instr 2431 @ 0x97f0 (38896) - FADD R0, R7, 64 ;
 Instr 2432 @ 0x9800 (38912) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2433 @ 0x9810 (38928) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2434 @ 0x9820 (38944) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2435 @ 0x9830 (38960) - @!P0 BRA 0x9880 ;
Basic block id 654 - num instructions 4
 Instr 2436 @ 0x9840 (38976) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2437 @ 0x9850 (38992) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2438 @ 0x9860 (39008) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2439 @ 0x9870 (39024) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 655 - num instructions 3
 Instr 2440 @ 0x9880 (39040) - BSYNC B0 ;
 Instr 2441 @ 0x9890 (39056) - STG.E.U8.SYS [R4], R0 ;
 Instr 2442 @ 0x98a0 (39072) - BRA 0x9b80 ;
Basic block id 656 - num instructions 2
 Instr 2443 @ 0x98b0 (39088) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 2444 @ 0x98c0 (39104) - @!P0 BRA 0x9b60 ;
Basic block id 657 - num instructions 2
 Instr 2445 @ 0x98d0 (39120) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 2446 @ 0x98e0 (39136) - @!P0 BRA 0x9b30 ;
Basic block id 658 - num instructions 2
 Instr 2447 @ 0x98f0 (39152) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 2448 @ 0x9900 (39168) - @P0 BRA 0x9a00 ;
Basic block id 659 - num instructions 15
 Instr 2449 @ 0x9910 (39184) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
 Instr 2450 @ 0x9920 (39200) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2451 @ 0x9930 (39216) - LOP3.LUT R3, R7, 0xff, RZ, 0xc0, !PT ;
 Instr 2452 @ 0x9940 (39232) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2453 @ 0x9950 (39248) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 2454 @ 0x9960 (39264) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 2455 @ 0x9970 (39280) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2456 @ 0x9980 (39296) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2457 @ 0x9990 (39312) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2458 @ 0x99a0 (39328) - @P2 IADD3 R0, R7, 0x1, RZ ;
 Instr 2459 @ 0x99b0 (39344) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2460 @ 0x99c0 (39360) - @!P0 IMAD.MOV R0, RZ, RZ, R7 ;
 Instr 2461 @ 0x99d0 (39376) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2462 @ 0x99e0 (39392) - STG.E.U8.SYS [R4], R3 ;
 Instr 2463 @ 0x99f0 (39408) - BRA 0x9b80 ;
Basic block id 660 - num instructions 18
 Instr 2464 @ 0x9a00 (39424) - UMOV UR4, 0xd33a2700 ;
 Instr 2465 @ 0x9a10 (39440) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2466 @ 0x9a20 (39456) - UMOV UR5, 0x7f88 ;
 Instr 2467 @ 0x9a30 (39472) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2468 @ 0x9a40 (39488) - UMOV UR6, 0xd33a2100 ;
 Instr 2469 @ 0x9a50 (39504) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2470 @ 0x9a60 (39520) - UMOV UR7, 0x7f88 ;
 Instr 2471 @ 0x9a70 (39536) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2472 @ 0x9a80 (39552) - UMOV UR8, 0xd33a0a00 ;
 Instr 2473 @ 0x9a90 (39568) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2474 @ 0x9aa0 (39584) - UMOV UR9, 0x7f88 ;
 Instr 2475 @ 0x9ab0 (39600) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2476 @ 0x9ac0 (39616) - MOV R20, 0xd7fcc320 ;
 Instr 2477 @ 0x9ad0 (39632) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2478 @ 0x9ae0 (39648) - MOV R21, 0x7f88 ;
 Instr 2479 @ 0x9af0 (39664) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2480 @ 0x9b00 (39680) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2481 @ 0x9b10 (39696) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 661 - num instructions 1
 Instr 2482 @ 0x9b20 (39712) - BRA 0x9b80 ;
Basic block id 662 - num instructions 3
 Instr 2483 @ 0x9b30 (39728) - F2I.U64.F64.TRUNC R24, R24 ;
 Instr 2484 @ 0x9b40 (39744) - STG.E.64.SYS [R4], R24 ;
 Instr 2485 @ 0x9b50 (39760) - BRA 0x9b80 ;
Basic block id 663 - num instructions 2
 Instr 2486 @ 0x9b60 (39776) - F2I.U32.F64.TRUNC R25, R24 ;
 Instr 2487 @ 0x9b70 (39792) - STG.E.SYS [R4], R25 ;
Basic block id 664 - num instructions 3
 Instr 2488 @ 0x9b80 (39808) - IADD3 R0, R22, 0x100, RZ ;
 Instr 2489 @ 0x9b90 (39824) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 2490 @ 0x9ba0 (39840) - @P0 EXIT ;
Basic block id 665 - num instructions 7
 Instr 2491 @ 0x9bb0 (39856) - IADD3 R0, R16, 0x80, RZ ;
 Instr 2492 @ 0x9bc0 (39872) - F2F.F32.F64 R6, R28 ;
 Instr 2493 @ 0x9bd0 (39888) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 2494 @ 0x9be0 (39904) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 2495 @ 0x9bf0 (39920) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 2496 @ 0x9c00 (39936) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2497 @ 0x9c10 (39952) - @P1 BRA 0x9fb0 ;
Basic block id 666 - num instructions 3
 Instr 2498 @ 0x9c20 (39968) - PRMT R0, R2, 0x9910, RZ ;
 Instr 2499 @ 0x9c30 (39984) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2500 @ 0x9c40 (40000) - @P0 BRA 0x9e10 ;
Basic block id 667 - num instructions 2
 Instr 2501 @ 0x9c50 (40016) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2502 @ 0x9c60 (40032) - @P0 BRA 0x9d20 ;
Basic block id 668 - num instructions 2
 Instr 2503 @ 0x9c70 (40048) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 2504 @ 0x9c80 (40064) - @!P0 BRA 0x9ce0 ;
Basic block id 669 - num instructions 2
 Instr 2505 @ 0x9c90 (40080) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2506 @ 0x9ca0 (40096) - @P0 BRA 0xa940 ;
Basic block id 670 - num instructions 3
 Instr 2507 @ 0x9cb0 (40112) - F2I.F64.TRUNC R29, R28 ;
 Instr 2508 @ 0x9cc0 (40128) - STG.E.U8.SYS [R4], R29 ;
 Instr 2509 @ 0x9cd0 (40144) - BRA 0xaac0 ;
Basic block id 671 - num instructions 4
 Instr 2510 @ 0x9ce0 (40160) - F2I.S64.F64.TRUNC R28, R28 ;
 Instr 2511 @ 0x9cf0 (40176) - IMAD.MOV.U32 R3, RZ, RZ, R28 ;
 Instr 2512 @ 0x9d00 (40192) - STG.E.U8.SYS [R4], R3 ;
 Instr 2513 @ 0x9d10 (40208) - BRA 0xaac0 ;
Basic block id 672 - num instructions 2
 Instr 2514 @ 0x9d20 (40224) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 2515 @ 0x9d30 (40240) - @!P0 BRA 0x9de0 ;
Basic block id 673 - num instructions 2
 Instr 2516 @ 0x9d40 (40256) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 2517 @ 0x9d50 (40272) - @!P0 BRA 0x9db0 ;
Basic block id 674 - num instructions 2
 Instr 2518 @ 0x9d60 (40288) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 2519 @ 0x9d70 (40304) - @P0 BRA 0xa940 ;
Basic block id 675 - num instructions 3
 Instr 2520 @ 0x9d80 (40320) - F2I.S64.F64.TRUNC R28, R28 ;
 Instr 2521 @ 0x9d90 (40336) - STG.E.64.SYS [R4], R28 ;
 Instr 2522 @ 0x9da0 (40352) - BRA 0xaac0 ;
Basic block id 676 - num instructions 3
 Instr 2523 @ 0x9db0 (40368) - F2I.F64.TRUNC R29, R28 ;
 Instr 2524 @ 0x9dc0 (40384) - STG.E.SYS [R4], R29 ;
 Instr 2525 @ 0x9dd0 (40400) - BRA 0xaac0 ;
Basic block id 677 - num instructions 3
 Instr 2526 @ 0x9de0 (40416) - F2I.F64.TRUNC R29, R28 ;
 Instr 2527 @ 0x9df0 (40432) - STG.E.U16.SYS [R4], R29 ;
 Instr 2528 @ 0x9e00 (40448) - BRA 0xaac0 ;
Basic block id 678 - num instructions 2
 Instr 2529 @ 0x9e10 (40464) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 2530 @ 0x9e20 (40480) - @P0 BRA 0x9ec0 ;
Basic block id 679 - num instructions 2
 Instr 2531 @ 0x9e30 (40496) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 2532 @ 0x9e40 (40512) - @!P0 BRA 0x9e90 ;
Basic block id 680 - num instructions 2
 Instr 2533 @ 0x9e50 (40528) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 2534 @ 0x9e60 (40544) - @P0 BRA 0xa940 ;
Basic block id 681 - num instructions 2
 Instr 2535 @ 0x9e70 (40560) - STG.E.SYS [R4], R6 ;
 Instr 2536 @ 0x9e80 (40576) - BRA 0xaac0 ;
Basic block id 682 - num instructions 3
 Instr 2537 @ 0x9e90 (40592) - F2F.F16.F32 R3, R6 ;
 Instr 2538 @ 0x9ea0 (40608) - STG.E.U16.SYS [R4], R3 ;
 Instr 2539 @ 0x9eb0 (40624) - BRA 0xaac0 ;
Basic block id 683 - num instructions 2
 Instr 2540 @ 0x9ec0 (40640) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 2541 @ 0x9ed0 (40656) - @!P0 BRA 0x9f90 ;
Basic block id 684 - num instructions 2
 Instr 2542 @ 0x9ee0 (40672) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 2543 @ 0x9ef0 (40688) - @!P0 BRA 0x9f50 ;
Basic block id 685 - num instructions 2
 Instr 2544 @ 0x9f00 (40704) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 2545 @ 0x9f10 (40720) - @P0 BRA 0xa940 ;
Basic block id 686 - num instructions 3
 Instr 2546 @ 0x9f20 (40736) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 2547 @ 0x9f30 (40752) - STG.E.64.SYS [R4], R6 ;
 Instr 2548 @ 0x9f40 (40768) - BRA 0xaac0 ;
Basic block id 687 - num instructions 4
 Instr 2549 @ 0x9f50 (40784) - F2F.F16.F32 R3, R6 ;
 Instr 2550 @ 0x9f60 (40800) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2551 @ 0x9f70 (40816) - STG.E.SYS [R4], R3 ;
 Instr 2552 @ 0x9f80 (40832) - BRA 0xaac0 ;
Basic block id 688 - num instructions 2
 Instr 2553 @ 0x9f90 (40848) - STG.E.64.SYS [R4], R28 ;
 Instr 2554 @ 0x9fa0 (40864) - BRA 0xaac0 ;
Basic block id 689 - num instructions 3
 Instr 2555 @ 0x9fb0 (40880) - PRMT R0, R2, 0x9910, RZ ;
 Instr 2556 @ 0x9fc0 (40896) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 2557 @ 0x9fd0 (40912) - @P0 BRA 0xa420 ;
Basic block id 690 - num instructions 2
 Instr 2558 @ 0x9fe0 (40928) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 2559 @ 0x9ff0 (40944) - @P0 BRA 0xa0b0 ;
Basic block id 691 - num instructions 2
 Instr 2560 @ 0xa000 (40960) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 2561 @ 0xa010 (40976) - @!P0 BRA 0xa080 ;
Basic block id 692 - num instructions 2
 Instr 2562 @ 0xa020 (40992) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 2563 @ 0xa030 (41008) - @P0 BRA 0xa940 ;
Basic block id 693 - num instructions 4
 Instr 2564 @ 0xa040 (41024) - DSETP.NEU.AND P0, PT, R28, RZ, PT ;
 Instr 2565 @ 0xa050 (41040) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2566 @ 0xa060 (41056) - STG.E.U8.SYS [R4], R3 ;
 Instr 2567 @ 0xa070 (41072) - BRA 0xaac0 ;
Basic block id 694 - num instructions 3
 Instr 2568 @ 0xa080 (41088) - CS2R R30, SRZ ;
 Instr 2569 @ 0xa090 (41104) - STG.E.128.SYS [R4], R28 ;
 Instr 2570 @ 0xa0a0 (41120) - BRA 0xaac0 ;
Basic block id 695 - num instructions 2
 Instr 2571 @ 0xa0b0 (41136) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2572 @ 0xa0c0 (41152) - @!P0 BRA 0xa3a0 ;
Basic block id 696 - num instructions 2
 Instr 2573 @ 0xa0d0 (41168) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2574 @ 0xa0e0 (41184) - @!P0 BRA 0xa240 ;
Basic block id 697 - num instructions 2
 Instr 2575 @ 0xa0f0 (41200) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2576 @ 0xa100 (41216) - @P0 BRA 0xa940 ;
Basic block id 698 - num instructions 7
 Instr 2577 @ 0xa110 (41232) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2578 @ 0xa120 (41248) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2579 @ 0xa130 (41264) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2580 @ 0xa140 (41280) - BSSY B0, 0xa210 ;
 Instr 2581 @ 0xa150 (41296) - ISETP.GT.U32.AND P0, PT, R8, 0x43efffff, PT ;
 Instr 2582 @ 0xa160 (41312) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2583 @ 0xa170 (41328) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 699 - num instructions 1
 Instr 2584 @ 0xa180 (41344) - @P0 BRA 0xa200 ;
Basic block id 700 - num instructions 7
 Instr 2585 @ 0xa190 (41360) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
 Instr 2586 @ 0xa1a0 (41376) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 2587 @ 0xa1b0 (41392) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2588 @ 0xa1c0 (41408) - @P0 IADD3 R0, R6, 0x407ffff, R3 ;
 Instr 2589 @ 0xa1d0 (41424) - @!P0 FADD R3, R8, 16384 ;
 Instr 2590 @ 0xa1e0 (41440) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2591 @ 0xa1f0 (41456) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 701 - num instructions 4
 Instr 2592 @ 0xa200 (41472) - BSYNC B0 ;
 Instr 2593 @ 0xa210 (41488) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2594 @ 0xa220 (41504) - STG.E.U8.SYS [R4], R7 ;
 Instr 2595 @ 0xa230 (41520) - BRA 0xaac0 ;
Basic block id 702 - num instructions 5
 Instr 2596 @ 0xa240 (41536) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2597 @ 0xa250 (41552) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2598 @ 0xa260 (41568) - BSSY B0, 0xa350 ;
 Instr 2599 @ 0xa270 (41584) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2600 @ 0xa280 (41600) - @P0 BRA 0xa310 ;
Basic block id 703 - num instructions 8
 Instr 2601 @ 0xa290 (41616) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
 Instr 2602 @ 0xa2a0 (41632) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 2603 @ 0xa2b0 (41648) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2604 @ 0xa2c0 (41664) - @P0 IADD3 R0, R6, 0x80fffff, R3 ;
 Instr 2605 @ 0xa2d0 (41680) - @!P0 FADD R3, R7, 128 ;
 Instr 2606 @ 0xa2e0 (41696) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2607 @ 0xa2f0 (41712) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2608 @ 0xa300 (41728) - BRA 0xa340 ;
Basic block id 704 - num instructions 3
 Instr 2609 @ 0xa310 (41744) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2610 @ 0xa320 (41760) - ISETP.GT.U32.AND P0, PT, R7, 0x7f800000, PT ;
 Instr 2611 @ 0xa330 (41776) - SEL R0, R0, 0x7c, P0 ;
Basic block id 705 - num instructions 6
 Instr 2612 @ 0xa340 (41792) - BSYNC B0 ;
 Instr 2613 @ 0xa350 (41808) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2614 @ 0xa360 (41824) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 2615 @ 0xa370 (41840) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2616 @ 0xa380 (41856) - STG.E.U8.SYS [R4], R3 ;
 Instr 2617 @ 0xa390 (41872) - BRA 0xaac0 ;
Basic block id 706 - num instructions 8
 Instr 2618 @ 0xa3a0 (41888) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 2619 @ 0xa3b0 (41904) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2620 @ 0xa3c0 (41920) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 2621 @ 0xa3d0 (41936) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2622 @ 0xa3e0 (41952) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 2623 @ 0xa3f0 (41968) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2624 @ 0xa400 (41984) - STG.E.U16.SYS [R4], R3 ;
 Instr 2625 @ 0xa410 (42000) - BRA 0xaac0 ;
Basic block id 707 - num instructions 2
 Instr 2626 @ 0xa420 (42016) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 2627 @ 0xa430 (42032) - @P0 BRA 0xa7f0 ;
Basic block id 708 - num instructions 2
 Instr 2628 @ 0xa440 (42048) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 2629 @ 0xa450 (42064) - @!P0 BRA 0xa660 ;
Basic block id 709 - num instructions 2
 Instr 2630 @ 0xa460 (42080) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 2631 @ 0xa470 (42096) - @!P0 BRA 0xa4d0 ;
Basic block id 710 - num instructions 2
 Instr 2632 @ 0xa480 (42112) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 2633 @ 0xa490 (42128) - @P0 BRA 0xa940 ;
Basic block id 711 - num instructions 3
 Instr 2634 @ 0xa4a0 (42144) - F2I.U32.F64.TRUNC R29, R28 ;
 Instr 2635 @ 0xa4b0 (42160) - STG.E.U16.SYS [R4], R29 ;
 Instr 2636 @ 0xa4c0 (42176) - BRA 0xaac0 ;
Basic block id 712 - num instructions 6
 Instr 2637 @ 0xa4d0 (42192) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2638 @ 0xa4e0 (42208) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2639 @ 0xa4f0 (42224) - BSSY B0, 0xa640 ;
 Instr 2640 @ 0xa500 (42240) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2641 @ 0xa510 (42256) - ISETP.GT.U32.AND P0, PT, R7, 0x437fffff, PT ;
 Instr 2642 @ 0xa520 (42272) - @P0 BRA 0xa630 ;
Basic block id 713 - num instructions 2
 Instr 2643 @ 0xa530 (42288) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
 Instr 2644 @ 0xa540 (42304) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 714 - num instructions 5
 Instr 2645 @ 0xa550 (42320) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2646 @ 0xa560 (42336) - @P0 IADD3 R0, R6, 0x487ffff, R3 ;
 Instr 2647 @ 0xa570 (42352) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2648 @ 0xa580 (42368) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2649 @ 0xa590 (42384) - @P0 BRA 0xa5f0 ;
Basic block id 715 - num instructions 5
 Instr 2650 @ 0xa5a0 (42400) - FADD R0, R7, 8192 ;
 Instr 2651 @ 0xa5b0 (42416) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2652 @ 0xa5c0 (42432) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2653 @ 0xa5d0 (42448) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2654 @ 0xa5e0 (42464) - @!P0 BRA 0xa630 ;
Basic block id 716 - num instructions 4
 Instr 2655 @ 0xa5f0 (42480) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2656 @ 0xa600 (42496) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2657 @ 0xa610 (42512) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2658 @ 0xa620 (42528) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 717 - num instructions 3
 Instr 2659 @ 0xa630 (42544) - BSYNC B0 ;
 Instr 2660 @ 0xa640 (42560) - STG.E.U8.SYS [R4], R0 ;
 Instr 2661 @ 0xa650 (42576) - BRA 0xaac0 ;
Basic block id 718 - num instructions 6
 Instr 2662 @ 0xa660 (42592) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2663 @ 0xa670 (42608) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2664 @ 0xa680 (42624) - BSSY B0, 0xa7d0 ;
 Instr 2665 @ 0xa690 (42640) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2666 @ 0xa6a0 (42656) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2667 @ 0xa6b0 (42672) - @P0 BRA 0xa7c0 ;
Basic block id 719 - num instructions 2
 Instr 2668 @ 0xa6c0 (42688) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
 Instr 2669 @ 0xa6d0 (42704) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 720 - num instructions 5
 Instr 2670 @ 0xa6e0 (42720) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2671 @ 0xa6f0 (42736) - @P0 IADD3 R0, R6, 0x88fffff, R3 ;
 Instr 2672 @ 0xa700 (42752) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2673 @ 0xa710 (42768) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2674 @ 0xa720 (42784) - @P0 BRA 0xa780 ;
Basic block id 721 - num instructions 5
 Instr 2675 @ 0xa730 (42800) - FADD R0, R7, 64 ;
 Instr 2676 @ 0xa740 (42816) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2677 @ 0xa750 (42832) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2678 @ 0xa760 (42848) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2679 @ 0xa770 (42864) - @!P0 BRA 0xa7c0 ;
Basic block id 722 - num instructions 4
 Instr 2680 @ 0xa780 (42880) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2681 @ 0xa790 (42896) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2682 @ 0xa7a0 (42912) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2683 @ 0xa7b0 (42928) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 723 - num instructions 3
 Instr 2684 @ 0xa7c0 (42944) - BSYNC B0 ;
 Instr 2685 @ 0xa7d0 (42960) - STG.E.U8.SYS [R4], R0 ;
 Instr 2686 @ 0xa7e0 (42976) - BRA 0xaac0 ;
Basic block id 724 - num instructions 2
 Instr 2687 @ 0xa7f0 (42992) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 2688 @ 0xa800 (43008) - @!P0 BRA 0xaaa0 ;
Basic block id 725 - num instructions 2
 Instr 2689 @ 0xa810 (43024) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 2690 @ 0xa820 (43040) - @!P0 BRA 0xaa70 ;
Basic block id 726 - num instructions 2
 Instr 2691 @ 0xa830 (43056) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 2692 @ 0xa840 (43072) - @P0 BRA 0xa940 ;
Basic block id 727 - num instructions 15
 Instr 2693 @ 0xa850 (43088) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
 Instr 2694 @ 0xa860 (43104) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2695 @ 0xa870 (43120) - LOP3.LUT R3, R7, 0xff, RZ, 0xc0, !PT ;
 Instr 2696 @ 0xa880 (43136) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2697 @ 0xa890 (43152) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 2698 @ 0xa8a0 (43168) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 2699 @ 0xa8b0 (43184) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2700 @ 0xa8c0 (43200) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2701 @ 0xa8d0 (43216) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2702 @ 0xa8e0 (43232) - @P2 IADD3 R0, R7, 0x1, RZ ;
 Instr 2703 @ 0xa8f0 (43248) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2704 @ 0xa900 (43264) - @!P0 IMAD.MOV R0, RZ, RZ, R7 ;
 Instr 2705 @ 0xa910 (43280) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2706 @ 0xa920 (43296) - STG.E.U8.SYS [R4], R3 ;
 Instr 2707 @ 0xa930 (43312) - BRA 0xaac0 ;
Basic block id 728 - num instructions 18
 Instr 2708 @ 0xa940 (43328) - UMOV UR4, 0xd33a2700 ;
 Instr 2709 @ 0xa950 (43344) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2710 @ 0xa960 (43360) - UMOV UR5, 0x7f88 ;
 Instr 2711 @ 0xa970 (43376) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2712 @ 0xa980 (43392) - UMOV UR6, 0xd33a2100 ;
 Instr 2713 @ 0xa990 (43408) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2714 @ 0xa9a0 (43424) - UMOV UR7, 0x7f88 ;
 Instr 2715 @ 0xa9b0 (43440) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2716 @ 0xa9c0 (43456) - UMOV UR8, 0xd33a0a00 ;
 Instr 2717 @ 0xa9d0 (43472) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2718 @ 0xa9e0 (43488) - UMOV UR9, 0x7f88 ;
 Instr 2719 @ 0xa9f0 (43504) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2720 @ 0xaa00 (43520) - MOV R20, 0xd7fcd260 ;
 Instr 2721 @ 0xaa10 (43536) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2722 @ 0xaa20 (43552) - MOV R21, 0x7f88 ;
 Instr 2723 @ 0xaa30 (43568) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2724 @ 0xaa40 (43584) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2725 @ 0xaa50 (43600) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 729 - num instructions 1
 Instr 2726 @ 0xaa60 (43616) - BRA 0xaac0 ;
Basic block id 730 - num instructions 3
 Instr 2727 @ 0xaa70 (43632) - F2I.U64.F64.TRUNC R28, R28 ;
 Instr 2728 @ 0xaa80 (43648) - STG.E.64.SYS [R4], R28 ;
 Instr 2729 @ 0xaa90 (43664) - BRA 0xaac0 ;
Basic block id 731 - num instructions 2
 Instr 2730 @ 0xaaa0 (43680) - F2I.U32.F64.TRUNC R29, R28 ;
 Instr 2731 @ 0xaab0 (43696) - STG.E.SYS [R4], R29 ;
Basic block id 732 - num instructions 3
 Instr 2732 @ 0xaac0 (43712) - IADD3 R0, R22, 0x180, RZ ;
 Instr 2733 @ 0xaad0 (43728) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 2734 @ 0xaae0 (43744) - @P0 EXIT ;
Basic block id 733 - num instructions 7
 Instr 2735 @ 0xaaf0 (43760) - IADD3 R0, R16, 0x100, RZ ;
 Instr 2736 @ 0xab00 (43776) - F2F.F32.F64 R6, R36 ;
 Instr 2737 @ 0xab10 (43792) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 2738 @ 0xab20 (43808) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 2739 @ 0xab30 (43824) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 2740 @ 0xab40 (43840) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2741 @ 0xab50 (43856) - @P1 BRA 0xaef0 ;
Basic block id 734 - num instructions 3
 Instr 2742 @ 0xab60 (43872) - PRMT R0, R2, 0x9910, RZ ;
 Instr 2743 @ 0xab70 (43888) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2744 @ 0xab80 (43904) - @P0 BRA 0xad50 ;
Basic block id 735 - num instructions 2
 Instr 2745 @ 0xab90 (43920) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2746 @ 0xaba0 (43936) - @P0 BRA 0xac60 ;
Basic block id 736 - num instructions 2
 Instr 2747 @ 0xabb0 (43952) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 2748 @ 0xabc0 (43968) - @!P0 BRA 0xac20 ;
Basic block id 737 - num instructions 2
 Instr 2749 @ 0xabd0 (43984) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2750 @ 0xabe0 (44000) - @P0 BRA 0xb880 ;
Basic block id 738 - num instructions 3
 Instr 2751 @ 0xabf0 (44016) - F2I.F64.TRUNC R37, R36 ;
 Instr 2752 @ 0xac00 (44032) - STG.E.U8.SYS [R4], R37 ;
 Instr 2753 @ 0xac10 (44048) - BRA 0xba00 ;
Basic block id 739 - num instructions 4
 Instr 2754 @ 0xac20 (44064) - F2I.S64.F64.TRUNC R36, R36 ;
 Instr 2755 @ 0xac30 (44080) - IMAD.MOV.U32 R3, RZ, RZ, R36 ;
 Instr 2756 @ 0xac40 (44096) - STG.E.U8.SYS [R4], R3 ;
 Instr 2757 @ 0xac50 (44112) - BRA 0xba00 ;
Basic block id 740 - num instructions 2
 Instr 2758 @ 0xac60 (44128) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 2759 @ 0xac70 (44144) - @!P0 BRA 0xad20 ;
Basic block id 741 - num instructions 2
 Instr 2760 @ 0xac80 (44160) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 2761 @ 0xac90 (44176) - @!P0 BRA 0xacf0 ;
Basic block id 742 - num instructions 2
 Instr 2762 @ 0xaca0 (44192) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 2763 @ 0xacb0 (44208) - @P0 BRA 0xb880 ;
Basic block id 743 - num instructions 3
 Instr 2764 @ 0xacc0 (44224) - F2I.S64.F64.TRUNC R36, R36 ;
 Instr 2765 @ 0xacd0 (44240) - STG.E.64.SYS [R4], R36 ;
 Instr 2766 @ 0xace0 (44256) - BRA 0xba00 ;
Basic block id 744 - num instructions 3
 Instr 2767 @ 0xacf0 (44272) - F2I.F64.TRUNC R37, R36 ;
 Instr 2768 @ 0xad00 (44288) - STG.E.SYS [R4], R37 ;
 Instr 2769 @ 0xad10 (44304) - BRA 0xba00 ;
Basic block id 745 - num instructions 3
 Instr 2770 @ 0xad20 (44320) - F2I.F64.TRUNC R37, R36 ;
 Instr 2771 @ 0xad30 (44336) - STG.E.U16.SYS [R4], R37 ;
 Instr 2772 @ 0xad40 (44352) - BRA 0xba00 ;
Basic block id 746 - num instructions 2
 Instr 2773 @ 0xad50 (44368) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 2774 @ 0xad60 (44384) - @P0 BRA 0xae00 ;
Basic block id 747 - num instructions 2
 Instr 2775 @ 0xad70 (44400) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 2776 @ 0xad80 (44416) - @!P0 BRA 0xadd0 ;
Basic block id 748 - num instructions 2
 Instr 2777 @ 0xad90 (44432) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 2778 @ 0xada0 (44448) - @P0 BRA 0xb880 ;
Basic block id 749 - num instructions 2
 Instr 2779 @ 0xadb0 (44464) - STG.E.SYS [R4], R6 ;
 Instr 2780 @ 0xadc0 (44480) - BRA 0xba00 ;
Basic block id 750 - num instructions 3
 Instr 2781 @ 0xadd0 (44496) - F2F.F16.F32 R3, R6 ;
 Instr 2782 @ 0xade0 (44512) - STG.E.U16.SYS [R4], R3 ;
 Instr 2783 @ 0xadf0 (44528) - BRA 0xba00 ;
Basic block id 751 - num instructions 2
 Instr 2784 @ 0xae00 (44544) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 2785 @ 0xae10 (44560) - @!P0 BRA 0xaed0 ;
Basic block id 752 - num instructions 2
 Instr 2786 @ 0xae20 (44576) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 2787 @ 0xae30 (44592) - @!P0 BRA 0xae90 ;
Basic block id 753 - num instructions 2
 Instr 2788 @ 0xae40 (44608) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 2789 @ 0xae50 (44624) - @P0 BRA 0xb880 ;
Basic block id 754 - num instructions 3
 Instr 2790 @ 0xae60 (44640) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 2791 @ 0xae70 (44656) - STG.E.64.SYS [R4], R6 ;
 Instr 2792 @ 0xae80 (44672) - BRA 0xba00 ;
Basic block id 755 - num instructions 4
 Instr 2793 @ 0xae90 (44688) - F2F.F16.F32 R3, R6 ;
 Instr 2794 @ 0xaea0 (44704) - PRMT R3, R3, 0x5410, RZ ;
 Instr 2795 @ 0xaeb0 (44720) - STG.E.SYS [R4], R3 ;
 Instr 2796 @ 0xaec0 (44736) - BRA 0xba00 ;
Basic block id 756 - num instructions 2
 Instr 2797 @ 0xaed0 (44752) - STG.E.64.SYS [R4], R36 ;
 Instr 2798 @ 0xaee0 (44768) - BRA 0xba00 ;
Basic block id 757 - num instructions 3
 Instr 2799 @ 0xaef0 (44784) - PRMT R0, R2, 0x9910, RZ ;
 Instr 2800 @ 0xaf00 (44800) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 2801 @ 0xaf10 (44816) - @P0 BRA 0xb360 ;
Basic block id 758 - num instructions 2
 Instr 2802 @ 0xaf20 (44832) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 2803 @ 0xaf30 (44848) - @P0 BRA 0xaff0 ;
Basic block id 759 - num instructions 2
 Instr 2804 @ 0xaf40 (44864) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 2805 @ 0xaf50 (44880) - @!P0 BRA 0xafc0 ;
Basic block id 760 - num instructions 2
 Instr 2806 @ 0xaf60 (44896) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 2807 @ 0xaf70 (44912) - @P0 BRA 0xb880 ;
Basic block id 761 - num instructions 4
 Instr 2808 @ 0xaf80 (44928) - DSETP.NEU.AND P0, PT, R36, RZ, PT ;
 Instr 2809 @ 0xaf90 (44944) - SEL R3, RZ, 0x1, !P0 ;
 Instr 2810 @ 0xafa0 (44960) - STG.E.U8.SYS [R4], R3 ;
 Instr 2811 @ 0xafb0 (44976) - BRA 0xba00 ;
Basic block id 762 - num instructions 3
 Instr 2812 @ 0xafc0 (44992) - CS2R R38, SRZ ;
 Instr 2813 @ 0xafd0 (45008) - STG.E.128.SYS [R4], R36 ;
 Instr 2814 @ 0xafe0 (45024) - BRA 0xba00 ;
Basic block id 763 - num instructions 2
 Instr 2815 @ 0xaff0 (45040) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 2816 @ 0xb000 (45056) - @!P0 BRA 0xb2e0 ;
Basic block id 764 - num instructions 2
 Instr 2817 @ 0xb010 (45072) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 2818 @ 0xb020 (45088) - @!P0 BRA 0xb180 ;
Basic block id 765 - num instructions 2
 Instr 2819 @ 0xb030 (45104) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 2820 @ 0xb040 (45120) - @P0 BRA 0xb880 ;
Basic block id 766 - num instructions 7
 Instr 2821 @ 0xb050 (45136) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2822 @ 0xb060 (45152) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2823 @ 0xb070 (45168) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2824 @ 0xb080 (45184) - BSSY B0, 0xb150 ;
 Instr 2825 @ 0xb090 (45200) - ISETP.GT.U32.AND P0, PT, R8, 0x43efffff, PT ;
 Instr 2826 @ 0xb0a0 (45216) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 2827 @ 0xb0b0 (45232) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 767 - num instructions 1
 Instr 2828 @ 0xb0c0 (45248) - @P0 BRA 0xb140 ;
Basic block id 768 - num instructions 7
 Instr 2829 @ 0xb0d0 (45264) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
 Instr 2830 @ 0xb0e0 (45280) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 2831 @ 0xb0f0 (45296) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2832 @ 0xb100 (45312) - @P0 IADD3 R0, R6, 0x407ffff, R3 ;
 Instr 2833 @ 0xb110 (45328) - @!P0 FADD R3, R8, 16384 ;
 Instr 2834 @ 0xb120 (45344) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2835 @ 0xb130 (45360) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 769 - num instructions 4
 Instr 2836 @ 0xb140 (45376) - BSYNC B0 ;
 Instr 2837 @ 0xb150 (45392) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 2838 @ 0xb160 (45408) - STG.E.U8.SYS [R4], R7 ;
 Instr 2839 @ 0xb170 (45424) - BRA 0xba00 ;
Basic block id 770 - num instructions 5
 Instr 2840 @ 0xb180 (45440) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2841 @ 0xb190 (45456) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2842 @ 0xb1a0 (45472) - BSSY B0, 0xb290 ;
 Instr 2843 @ 0xb1b0 (45488) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2844 @ 0xb1c0 (45504) - @P0 BRA 0xb250 ;
Basic block id 771 - num instructions 8
 Instr 2845 @ 0xb1d0 (45520) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
 Instr 2846 @ 0xb1e0 (45536) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 2847 @ 0xb1f0 (45552) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2848 @ 0xb200 (45568) - @P0 IADD3 R0, R6, 0x80fffff, R3 ;
 Instr 2849 @ 0xb210 (45584) - @!P0 FADD R3, R7, 128 ;
 Instr 2850 @ 0xb220 (45600) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2851 @ 0xb230 (45616) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 2852 @ 0xb240 (45632) - BRA 0xb280 ;
Basic block id 772 - num instructions 3
 Instr 2853 @ 0xb250 (45648) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 2854 @ 0xb260 (45664) - ISETP.GT.U32.AND P0, PT, R7, 0x7f800000, PT ;
 Instr 2855 @ 0xb270 (45680) - SEL R0, R0, 0x7c, P0 ;
Basic block id 773 - num instructions 6
 Instr 2856 @ 0xb280 (45696) - BSYNC B0 ;
 Instr 2857 @ 0xb290 (45712) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2858 @ 0xb2a0 (45728) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 2859 @ 0xb2b0 (45744) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 2860 @ 0xb2c0 (45760) - STG.E.U8.SYS [R4], R3 ;
 Instr 2861 @ 0xb2d0 (45776) - BRA 0xba00 ;
Basic block id 774 - num instructions 8
 Instr 2862 @ 0xb2e0 (45792) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 2863 @ 0xb2f0 (45808) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 2864 @ 0xb300 (45824) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 2865 @ 0xb310 (45840) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2866 @ 0xb320 (45856) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 2867 @ 0xb330 (45872) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 2868 @ 0xb340 (45888) - STG.E.U16.SYS [R4], R3 ;
 Instr 2869 @ 0xb350 (45904) - BRA 0xba00 ;
Basic block id 775 - num instructions 2
 Instr 2870 @ 0xb360 (45920) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 2871 @ 0xb370 (45936) - @P0 BRA 0xb730 ;
Basic block id 776 - num instructions 2
 Instr 2872 @ 0xb380 (45952) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 2873 @ 0xb390 (45968) - @!P0 BRA 0xb5a0 ;
Basic block id 777 - num instructions 2
 Instr 2874 @ 0xb3a0 (45984) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 2875 @ 0xb3b0 (46000) - @!P0 BRA 0xb410 ;
Basic block id 778 - num instructions 2
 Instr 2876 @ 0xb3c0 (46016) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 2877 @ 0xb3d0 (46032) - @P0 BRA 0xb880 ;
Basic block id 779 - num instructions 3
 Instr 2878 @ 0xb3e0 (46048) - F2I.U32.F64.TRUNC R37, R36 ;
 Instr 2879 @ 0xb3f0 (46064) - STG.E.U16.SYS [R4], R37 ;
 Instr 2880 @ 0xb400 (46080) - BRA 0xba00 ;
Basic block id 780 - num instructions 6
 Instr 2881 @ 0xb410 (46096) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2882 @ 0xb420 (46112) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2883 @ 0xb430 (46128) - BSSY B0, 0xb580 ;
 Instr 2884 @ 0xb440 (46144) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2885 @ 0xb450 (46160) - ISETP.GT.U32.AND P0, PT, R7, 0x437fffff, PT ;
 Instr 2886 @ 0xb460 (46176) - @P0 BRA 0xb570 ;
Basic block id 781 - num instructions 2
 Instr 2887 @ 0xb470 (46192) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
 Instr 2888 @ 0xb480 (46208) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 782 - num instructions 5
 Instr 2889 @ 0xb490 (46224) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2890 @ 0xb4a0 (46240) - @P0 IADD3 R0, R6, 0x487ffff, R3 ;
 Instr 2891 @ 0xb4b0 (46256) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 2892 @ 0xb4c0 (46272) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2893 @ 0xb4d0 (46288) - @P0 BRA 0xb530 ;
Basic block id 783 - num instructions 5
 Instr 2894 @ 0xb4e0 (46304) - FADD R0, R7, 8192 ;
 Instr 2895 @ 0xb4f0 (46320) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2896 @ 0xb500 (46336) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2897 @ 0xb510 (46352) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2898 @ 0xb520 (46368) - @!P0 BRA 0xb570 ;
Basic block id 784 - num instructions 4
 Instr 2899 @ 0xb530 (46384) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2900 @ 0xb540 (46400) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2901 @ 0xb550 (46416) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2902 @ 0xb560 (46432) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 785 - num instructions 3
 Instr 2903 @ 0xb570 (46448) - BSYNC B0 ;
 Instr 2904 @ 0xb580 (46464) - STG.E.U8.SYS [R4], R0 ;
 Instr 2905 @ 0xb590 (46480) - BRA 0xba00 ;
Basic block id 786 - num instructions 6
 Instr 2906 @ 0xb5a0 (46496) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 2907 @ 0xb5b0 (46512) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2908 @ 0xb5c0 (46528) - BSSY B0, 0xb710 ;
 Instr 2909 @ 0xb5d0 (46544) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 2910 @ 0xb5e0 (46560) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 2911 @ 0xb5f0 (46576) - @P0 BRA 0xb700 ;
Basic block id 787 - num instructions 2
 Instr 2912 @ 0xb600 (46592) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
 Instr 2913 @ 0xb610 (46608) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 788 - num instructions 5
 Instr 2914 @ 0xb620 (46624) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2915 @ 0xb630 (46640) - @P0 IADD3 R0, R6, 0x88fffff, R3 ;
 Instr 2916 @ 0xb640 (46656) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 2917 @ 0xb650 (46672) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2918 @ 0xb660 (46688) - @P0 BRA 0xb6c0 ;
Basic block id 789 - num instructions 5
 Instr 2919 @ 0xb670 (46704) - FADD R0, R7, 64 ;
 Instr 2920 @ 0xb680 (46720) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 2921 @ 0xb690 (46736) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 2922 @ 0xb6a0 (46752) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2923 @ 0xb6b0 (46768) - @!P0 BRA 0xb700 ;
Basic block id 790 - num instructions 4
 Instr 2924 @ 0xb6c0 (46784) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 2925 @ 0xb6d0 (46800) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 2926 @ 0xb6e0 (46816) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 2927 @ 0xb6f0 (46832) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 791 - num instructions 3
 Instr 2928 @ 0xb700 (46848) - BSYNC B0 ;
 Instr 2929 @ 0xb710 (46864) - STG.E.U8.SYS [R4], R0 ;
 Instr 2930 @ 0xb720 (46880) - BRA 0xba00 ;
Basic block id 792 - num instructions 2
 Instr 2931 @ 0xb730 (46896) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 2932 @ 0xb740 (46912) - @!P0 BRA 0xb9e0 ;
Basic block id 793 - num instructions 2
 Instr 2933 @ 0xb750 (46928) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 2934 @ 0xb760 (46944) - @!P0 BRA 0xb9b0 ;
Basic block id 794 - num instructions 2
 Instr 2935 @ 0xb770 (46960) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 2936 @ 0xb780 (46976) - @P0 BRA 0xb880 ;
Basic block id 795 - num instructions 15
 Instr 2937 @ 0xb790 (46992) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
 Instr 2938 @ 0xb7a0 (47008) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 2939 @ 0xb7b0 (47024) - LOP3.LUT R3, R7, 0xff, RZ, 0xc0, !PT ;
 Instr 2940 @ 0xb7c0 (47040) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 2941 @ 0xb7d0 (47056) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 2942 @ 0xb7e0 (47072) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 2943 @ 0xb7f0 (47088) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 2944 @ 0xb800 (47104) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 2945 @ 0xb810 (47120) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 2946 @ 0xb820 (47136) - @P2 IADD3 R0, R7, 0x1, RZ ;
 Instr 2947 @ 0xb830 (47152) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 2948 @ 0xb840 (47168) - @!P0 IMAD.MOV R0, RZ, RZ, R7 ;
 Instr 2949 @ 0xb850 (47184) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 2950 @ 0xb860 (47200) - STG.E.U8.SYS [R4], R3 ;
 Instr 2951 @ 0xb870 (47216) - BRA 0xba00 ;
Basic block id 796 - num instructions 18
 Instr 2952 @ 0xb880 (47232) - UMOV UR4, 0xd33a2700 ;
 Instr 2953 @ 0xb890 (47248) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 2954 @ 0xb8a0 (47264) - UMOV UR5, 0x7f88 ;
 Instr 2955 @ 0xb8b0 (47280) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 2956 @ 0xb8c0 (47296) - UMOV UR6, 0xd33a2100 ;
 Instr 2957 @ 0xb8d0 (47312) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 2958 @ 0xb8e0 (47328) - UMOV UR7, 0x7f88 ;
 Instr 2959 @ 0xb8f0 (47344) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 2960 @ 0xb900 (47360) - UMOV UR8, 0xd33a0a00 ;
 Instr 2961 @ 0xb910 (47376) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 2962 @ 0xb920 (47392) - UMOV UR9, 0x7f88 ;
 Instr 2963 @ 0xb930 (47408) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 2964 @ 0xb940 (47424) - MOV R20, 0xd7fce1a0 ;
 Instr 2965 @ 0xb950 (47440) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 2966 @ 0xb960 (47456) - MOV R21, 0x7f88 ;
 Instr 2967 @ 0xb970 (47472) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 2968 @ 0xb980 (47488) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 2969 @ 0xb990 (47504) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 797 - num instructions 1
 Instr 2970 @ 0xb9a0 (47520) - BRA 0xba00 ;
Basic block id 798 - num instructions 3
 Instr 2971 @ 0xb9b0 (47536) - F2I.U64.F64.TRUNC R36, R36 ;
 Instr 2972 @ 0xb9c0 (47552) - STG.E.64.SYS [R4], R36 ;
 Instr 2973 @ 0xb9d0 (47568) - BRA 0xba00 ;
Basic block id 799 - num instructions 2
 Instr 2974 @ 0xb9e0 (47584) - F2I.U32.F64.TRUNC R37, R36 ;
 Instr 2975 @ 0xb9f0 (47600) - STG.E.SYS [R4], R37 ;
Basic block id 800 - num instructions 3
 Instr 2976 @ 0xba00 (47616) - IADD3 R0, R22, 0x200, RZ ;
 Instr 2977 @ 0xba10 (47632) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 2978 @ 0xba20 (47648) - @P0 EXIT ;
Basic block id 801 - num instructions 7
 Instr 2979 @ 0xba30 (47664) - IADD3 R0, R16, 0x180, RZ ;
 Instr 2980 @ 0xba40 (47680) - F2F.F32.F64 R6, R44 ;
 Instr 2981 @ 0xba50 (47696) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 2982 @ 0xba60 (47712) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 2983 @ 0xba70 (47728) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 2984 @ 0xba80 (47744) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 2985 @ 0xba90 (47760) - @P1 BRA 0xbe30 ;
Basic block id 802 - num instructions 3
 Instr 2986 @ 0xbaa0 (47776) - PRMT R0, R2, 0x9910, RZ ;
 Instr 2987 @ 0xbab0 (47792) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 2988 @ 0xbac0 (47808) - @P0 BRA 0xbc90 ;
Basic block id 803 - num instructions 2
 Instr 2989 @ 0xbad0 (47824) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 2990 @ 0xbae0 (47840) - @P0 BRA 0xbba0 ;
Basic block id 804 - num instructions 2
 Instr 2991 @ 0xbaf0 (47856) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 2992 @ 0xbb00 (47872) - @!P0 BRA 0xbb60 ;
Basic block id 805 - num instructions 2
 Instr 2993 @ 0xbb10 (47888) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 2994 @ 0xbb20 (47904) - @P0 BRA 0xc7c0 ;
Basic block id 806 - num instructions 3
 Instr 2995 @ 0xbb30 (47920) - F2I.F64.TRUNC R45, R44 ;
 Instr 2996 @ 0xbb40 (47936) - STG.E.U8.SYS [R4], R45 ;
 Instr 2997 @ 0xbb50 (47952) - BRA 0xc940 ;
Basic block id 807 - num instructions 4
 Instr 2998 @ 0xbb60 (47968) - F2I.S64.F64.TRUNC R44, R44 ;
 Instr 2999 @ 0xbb70 (47984) - IMAD.MOV.U32 R3, RZ, RZ, R44 ;
 Instr 3000 @ 0xbb80 (48000) - STG.E.U8.SYS [R4], R3 ;
 Instr 3001 @ 0xbb90 (48016) - BRA 0xc940 ;
Basic block id 808 - num instructions 2
 Instr 3002 @ 0xbba0 (48032) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 3003 @ 0xbbb0 (48048) - @!P0 BRA 0xbc60 ;
Basic block id 809 - num instructions 2
 Instr 3004 @ 0xbbc0 (48064) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 3005 @ 0xbbd0 (48080) - @!P0 BRA 0xbc30 ;
Basic block id 810 - num instructions 2
 Instr 3006 @ 0xbbe0 (48096) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 3007 @ 0xbbf0 (48112) - @P0 BRA 0xc7c0 ;
Basic block id 811 - num instructions 3
 Instr 3008 @ 0xbc00 (48128) - F2I.S64.F64.TRUNC R44, R44 ;
 Instr 3009 @ 0xbc10 (48144) - STG.E.64.SYS [R4], R44 ;
 Instr 3010 @ 0xbc20 (48160) - BRA 0xc940 ;
Basic block id 812 - num instructions 3
 Instr 3011 @ 0xbc30 (48176) - F2I.F64.TRUNC R45, R44 ;
 Instr 3012 @ 0xbc40 (48192) - STG.E.SYS [R4], R45 ;
 Instr 3013 @ 0xbc50 (48208) - BRA 0xc940 ;
Basic block id 813 - num instructions 3
 Instr 3014 @ 0xbc60 (48224) - F2I.F64.TRUNC R45, R44 ;
 Instr 3015 @ 0xbc70 (48240) - STG.E.U16.SYS [R4], R45 ;
 Instr 3016 @ 0xbc80 (48256) - BRA 0xc940 ;
Basic block id 814 - num instructions 2
 Instr 3017 @ 0xbc90 (48272) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 3018 @ 0xbca0 (48288) - @P0 BRA 0xbd40 ;
Basic block id 815 - num instructions 2
 Instr 3019 @ 0xbcb0 (48304) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 3020 @ 0xbcc0 (48320) - @!P0 BRA 0xbd10 ;
Basic block id 816 - num instructions 2
 Instr 3021 @ 0xbcd0 (48336) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 3022 @ 0xbce0 (48352) - @P0 BRA 0xc7c0 ;
Basic block id 817 - num instructions 2
 Instr 3023 @ 0xbcf0 (48368) - STG.E.SYS [R4], R6 ;
 Instr 3024 @ 0xbd00 (48384) - BRA 0xc940 ;
Basic block id 818 - num instructions 3
 Instr 3025 @ 0xbd10 (48400) - F2F.F16.F32 R3, R6 ;
 Instr 3026 @ 0xbd20 (48416) - STG.E.U16.SYS [R4], R3 ;
 Instr 3027 @ 0xbd30 (48432) - BRA 0xc940 ;
Basic block id 819 - num instructions 2
 Instr 3028 @ 0xbd40 (48448) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 3029 @ 0xbd50 (48464) - @!P0 BRA 0xbe10 ;
Basic block id 820 - num instructions 2
 Instr 3030 @ 0xbd60 (48480) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 3031 @ 0xbd70 (48496) - @!P0 BRA 0xbdd0 ;
Basic block id 821 - num instructions 2
 Instr 3032 @ 0xbd80 (48512) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 3033 @ 0xbd90 (48528) - @P0 BRA 0xc7c0 ;
Basic block id 822 - num instructions 3
 Instr 3034 @ 0xbda0 (48544) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 3035 @ 0xbdb0 (48560) - STG.E.64.SYS [R4], R6 ;
 Instr 3036 @ 0xbdc0 (48576) - BRA 0xc940 ;
Basic block id 823 - num instructions 4
 Instr 3037 @ 0xbdd0 (48592) - F2F.F16.F32 R3, R6 ;
 Instr 3038 @ 0xbde0 (48608) - PRMT R3, R3, 0x5410, RZ ;
 Instr 3039 @ 0xbdf0 (48624) - STG.E.SYS [R4], R3 ;
 Instr 3040 @ 0xbe00 (48640) - BRA 0xc940 ;
Basic block id 824 - num instructions 2
 Instr 3041 @ 0xbe10 (48656) - STG.E.64.SYS [R4], R44 ;
 Instr 3042 @ 0xbe20 (48672) - BRA 0xc940 ;
Basic block id 825 - num instructions 3
 Instr 3043 @ 0xbe30 (48688) - PRMT R0, R2, 0x9910, RZ ;
 Instr 3044 @ 0xbe40 (48704) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 3045 @ 0xbe50 (48720) - @P0 BRA 0xc2a0 ;
Basic block id 826 - num instructions 2
 Instr 3046 @ 0xbe60 (48736) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 3047 @ 0xbe70 (48752) - @P0 BRA 0xbf30 ;
Basic block id 827 - num instructions 2
 Instr 3048 @ 0xbe80 (48768) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 3049 @ 0xbe90 (48784) - @!P0 BRA 0xbf00 ;
Basic block id 828 - num instructions 2
 Instr 3050 @ 0xbea0 (48800) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 3051 @ 0xbeb0 (48816) - @P0 BRA 0xc7c0 ;
Basic block id 829 - num instructions 4
 Instr 3052 @ 0xbec0 (48832) - DSETP.NEU.AND P0, PT, R44, RZ, PT ;
 Instr 3053 @ 0xbed0 (48848) - SEL R3, RZ, 0x1, !P0 ;
 Instr 3054 @ 0xbee0 (48864) - STG.E.U8.SYS [R4], R3 ;
 Instr 3055 @ 0xbef0 (48880) - BRA 0xc940 ;
Basic block id 830 - num instructions 3
 Instr 3056 @ 0xbf00 (48896) - CS2R R46, SRZ ;
 Instr 3057 @ 0xbf10 (48912) - STG.E.128.SYS [R4], R44 ;
 Instr 3058 @ 0xbf20 (48928) - BRA 0xc940 ;
Basic block id 831 - num instructions 2
 Instr 3059 @ 0xbf30 (48944) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 3060 @ 0xbf40 (48960) - @!P0 BRA 0xc220 ;
Basic block id 832 - num instructions 2
 Instr 3061 @ 0xbf50 (48976) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 3062 @ 0xbf60 (48992) - @!P0 BRA 0xc0c0 ;
Basic block id 833 - num instructions 2
 Instr 3063 @ 0xbf70 (49008) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 3064 @ 0xbf80 (49024) - @P0 BRA 0xc7c0 ;
Basic block id 834 - num instructions 7
 Instr 3065 @ 0xbf90 (49040) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3066 @ 0xbfa0 (49056) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3067 @ 0xbfb0 (49072) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3068 @ 0xbfc0 (49088) - BSSY B0, 0xc090 ;
 Instr 3069 @ 0xbfd0 (49104) - ISETP.GT.U32.AND P0, PT, R8, 0x43efffff, PT ;
 Instr 3070 @ 0xbfe0 (49120) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 3071 @ 0xbff0 (49136) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 835 - num instructions 1
 Instr 3072 @ 0xc000 (49152) - @P0 BRA 0xc080 ;
Basic block id 836 - num instructions 7
 Instr 3073 @ 0xc010 (49168) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
 Instr 3074 @ 0xc020 (49184) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 3075 @ 0xc030 (49200) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3076 @ 0xc040 (49216) - @P0 IADD3 R0, R6, 0x407ffff, R3 ;
 Instr 3077 @ 0xc050 (49232) - @!P0 FADD R3, R8, 16384 ;
 Instr 3078 @ 0xc060 (49248) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3079 @ 0xc070 (49264) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 837 - num instructions 4
 Instr 3080 @ 0xc080 (49280) - BSYNC B0 ;
 Instr 3081 @ 0xc090 (49296) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 3082 @ 0xc0a0 (49312) - STG.E.U8.SYS [R4], R7 ;
 Instr 3083 @ 0xc0b0 (49328) - BRA 0xc940 ;
Basic block id 838 - num instructions 5
 Instr 3084 @ 0xc0c0 (49344) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3085 @ 0xc0d0 (49360) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3086 @ 0xc0e0 (49376) - BSSY B0, 0xc1d0 ;
 Instr 3087 @ 0xc0f0 (49392) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 3088 @ 0xc100 (49408) - @P0 BRA 0xc190 ;
Basic block id 839 - num instructions 8
 Instr 3089 @ 0xc110 (49424) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
 Instr 3090 @ 0xc120 (49440) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 3091 @ 0xc130 (49456) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3092 @ 0xc140 (49472) - @P0 IADD3 R0, R6, 0x80fffff, R3 ;
 Instr 3093 @ 0xc150 (49488) - @!P0 FADD R3, R7, 128 ;
 Instr 3094 @ 0xc160 (49504) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3095 @ 0xc170 (49520) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 3096 @ 0xc180 (49536) - BRA 0xc1c0 ;
Basic block id 840 - num instructions 3
 Instr 3097 @ 0xc190 (49552) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 3098 @ 0xc1a0 (49568) - ISETP.GT.U32.AND P0, PT, R7, 0x7f800000, PT ;
 Instr 3099 @ 0xc1b0 (49584) - SEL R0, R0, 0x7c, P0 ;
Basic block id 841 - num instructions 6
 Instr 3100 @ 0xc1c0 (49600) - BSYNC B0 ;
 Instr 3101 @ 0xc1d0 (49616) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3102 @ 0xc1e0 (49632) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 3103 @ 0xc1f0 (49648) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 3104 @ 0xc200 (49664) - STG.E.U8.SYS [R4], R3 ;
 Instr 3105 @ 0xc210 (49680) - BRA 0xc940 ;
Basic block id 842 - num instructions 8
 Instr 3106 @ 0xc220 (49696) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 3107 @ 0xc230 (49712) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 3108 @ 0xc240 (49728) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 3109 @ 0xc250 (49744) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3110 @ 0xc260 (49760) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 3111 @ 0xc270 (49776) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 3112 @ 0xc280 (49792) - STG.E.U16.SYS [R4], R3 ;
 Instr 3113 @ 0xc290 (49808) - BRA 0xc940 ;
Basic block id 843 - num instructions 2
 Instr 3114 @ 0xc2a0 (49824) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 3115 @ 0xc2b0 (49840) - @P0 BRA 0xc670 ;
Basic block id 844 - num instructions 2
 Instr 3116 @ 0xc2c0 (49856) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 3117 @ 0xc2d0 (49872) - @!P0 BRA 0xc4e0 ;
Basic block id 845 - num instructions 2
 Instr 3118 @ 0xc2e0 (49888) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 3119 @ 0xc2f0 (49904) - @!P0 BRA 0xc350 ;
Basic block id 846 - num instructions 2
 Instr 3120 @ 0xc300 (49920) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3121 @ 0xc310 (49936) - @P0 BRA 0xc7c0 ;
Basic block id 847 - num instructions 3
 Instr 3122 @ 0xc320 (49952) - F2I.U32.F64.TRUNC R45, R44 ;
 Instr 3123 @ 0xc330 (49968) - STG.E.U16.SYS [R4], R45 ;
 Instr 3124 @ 0xc340 (49984) - BRA 0xc940 ;
Basic block id 848 - num instructions 6
 Instr 3125 @ 0xc350 (50000) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3126 @ 0xc360 (50016) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3127 @ 0xc370 (50032) - BSSY B0, 0xc4c0 ;
 Instr 3128 @ 0xc380 (50048) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3129 @ 0xc390 (50064) - ISETP.GT.U32.AND P0, PT, R7, 0x437fffff, PT ;
 Instr 3130 @ 0xc3a0 (50080) - @P0 BRA 0xc4b0 ;
Basic block id 849 - num instructions 2
 Instr 3131 @ 0xc3b0 (50096) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
 Instr 3132 @ 0xc3c0 (50112) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 850 - num instructions 5
 Instr 3133 @ 0xc3d0 (50128) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3134 @ 0xc3e0 (50144) - @P0 IADD3 R0, R6, 0x487ffff, R3 ;
 Instr 3135 @ 0xc3f0 (50160) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3136 @ 0xc400 (50176) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3137 @ 0xc410 (50192) - @P0 BRA 0xc470 ;
Basic block id 851 - num instructions 5
 Instr 3138 @ 0xc420 (50208) - FADD R0, R7, 8192 ;
 Instr 3139 @ 0xc430 (50224) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3140 @ 0xc440 (50240) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3141 @ 0xc450 (50256) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3142 @ 0xc460 (50272) - @!P0 BRA 0xc4b0 ;
Basic block id 852 - num instructions 4
 Instr 3143 @ 0xc470 (50288) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3144 @ 0xc480 (50304) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 3145 @ 0xc490 (50320) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 3146 @ 0xc4a0 (50336) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 853 - num instructions 3
 Instr 3147 @ 0xc4b0 (50352) - BSYNC B0 ;
 Instr 3148 @ 0xc4c0 (50368) - STG.E.U8.SYS [R4], R0 ;
 Instr 3149 @ 0xc4d0 (50384) - BRA 0xc940 ;
Basic block id 854 - num instructions 6
 Instr 3150 @ 0xc4e0 (50400) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3151 @ 0xc4f0 (50416) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3152 @ 0xc500 (50432) - BSSY B0, 0xc650 ;
 Instr 3153 @ 0xc510 (50448) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3154 @ 0xc520 (50464) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 3155 @ 0xc530 (50480) - @P0 BRA 0xc640 ;
Basic block id 855 - num instructions 2
 Instr 3156 @ 0xc540 (50496) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
 Instr 3157 @ 0xc550 (50512) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 856 - num instructions 5
 Instr 3158 @ 0xc560 (50528) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3159 @ 0xc570 (50544) - @P0 IADD3 R0, R6, 0x88fffff, R3 ;
 Instr 3160 @ 0xc580 (50560) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3161 @ 0xc590 (50576) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3162 @ 0xc5a0 (50592) - @P0 BRA 0xc600 ;
Basic block id 857 - num instructions 5
 Instr 3163 @ 0xc5b0 (50608) - FADD R0, R7, 64 ;
 Instr 3164 @ 0xc5c0 (50624) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3165 @ 0xc5d0 (50640) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3166 @ 0xc5e0 (50656) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3167 @ 0xc5f0 (50672) - @!P0 BRA 0xc640 ;
Basic block id 858 - num instructions 4
 Instr 3168 @ 0xc600 (50688) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3169 @ 0xc610 (50704) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 3170 @ 0xc620 (50720) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 3171 @ 0xc630 (50736) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 859 - num instructions 3
 Instr 3172 @ 0xc640 (50752) - BSYNC B0 ;
 Instr 3173 @ 0xc650 (50768) - STG.E.U8.SYS [R4], R0 ;
 Instr 3174 @ 0xc660 (50784) - BRA 0xc940 ;
Basic block id 860 - num instructions 2
 Instr 3175 @ 0xc670 (50800) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3176 @ 0xc680 (50816) - @!P0 BRA 0xc920 ;
Basic block id 861 - num instructions 2
 Instr 3177 @ 0xc690 (50832) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3178 @ 0xc6a0 (50848) - @!P0 BRA 0xc8f0 ;
Basic block id 862 - num instructions 2
 Instr 3179 @ 0xc6b0 (50864) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3180 @ 0xc6c0 (50880) - @P0 BRA 0xc7c0 ;
Basic block id 863 - num instructions 15
 Instr 3181 @ 0xc6d0 (50896) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
 Instr 3182 @ 0xc6e0 (50912) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3183 @ 0xc6f0 (50928) - LOP3.LUT R3, R7, 0xff, RZ, 0xc0, !PT ;
 Instr 3184 @ 0xc700 (50944) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 3185 @ 0xc710 (50960) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 3186 @ 0xc720 (50976) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 3187 @ 0xc730 (50992) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 3188 @ 0xc740 (51008) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3189 @ 0xc750 (51024) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3190 @ 0xc760 (51040) - @P2 IADD3 R0, R7, 0x1, RZ ;
 Instr 3191 @ 0xc770 (51056) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3192 @ 0xc780 (51072) - @!P0 IMAD.MOV R0, RZ, RZ, R7 ;
 Instr 3193 @ 0xc790 (51088) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 3194 @ 0xc7a0 (51104) - STG.E.U8.SYS [R4], R3 ;
 Instr 3195 @ 0xc7b0 (51120) - BRA 0xc940 ;
Basic block id 864 - num instructions 18
 Instr 3196 @ 0xc7c0 (51136) - UMOV UR4, 0xd33a2700 ;
 Instr 3197 @ 0xc7d0 (51152) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3198 @ 0xc7e0 (51168) - UMOV UR5, 0x7f88 ;
 Instr 3199 @ 0xc7f0 (51184) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3200 @ 0xc800 (51200) - UMOV UR6, 0xd33a2100 ;
 Instr 3201 @ 0xc810 (51216) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3202 @ 0xc820 (51232) - UMOV UR7, 0x7f88 ;
 Instr 3203 @ 0xc830 (51248) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3204 @ 0xc840 (51264) - UMOV UR8, 0xd33a0a00 ;
 Instr 3205 @ 0xc850 (51280) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3206 @ 0xc860 (51296) - UMOV UR9, 0x7f88 ;
 Instr 3207 @ 0xc870 (51312) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3208 @ 0xc880 (51328) - MOV R20, 0xd7fcf0e0 ;
 Instr 3209 @ 0xc890 (51344) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3210 @ 0xc8a0 (51360) - MOV R21, 0x7f88 ;
 Instr 3211 @ 0xc8b0 (51376) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3212 @ 0xc8c0 (51392) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3213 @ 0xc8d0 (51408) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 865 - num instructions 1
 Instr 3214 @ 0xc8e0 (51424) - BRA 0xc940 ;
Basic block id 866 - num instructions 3
 Instr 3215 @ 0xc8f0 (51440) - F2I.U64.F64.TRUNC R44, R44 ;
 Instr 3216 @ 0xc900 (51456) - STG.E.64.SYS [R4], R44 ;
 Instr 3217 @ 0xc910 (51472) - BRA 0xc940 ;
Basic block id 867 - num instructions 2
 Instr 3218 @ 0xc920 (51488) - F2I.U32.F64.TRUNC R45, R44 ;
 Instr 3219 @ 0xc930 (51504) - STG.E.SYS [R4], R45 ;
Basic block id 868 - num instructions 3
 Instr 3220 @ 0xc940 (51520) - IADD3 R0, R22, 0x280, RZ ;
 Instr 3221 @ 0xc950 (51536) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 3222 @ 0xc960 (51552) - @P0 EXIT ;
Basic block id 869 - num instructions 7
 Instr 3223 @ 0xc970 (51568) - IADD3 R0, R16, 0x200, RZ ;
 Instr 3224 @ 0xc980 (51584) - F2F.F32.F64 R6, R52 ;
 Instr 3225 @ 0xc990 (51600) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 3226 @ 0xc9a0 (51616) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 3227 @ 0xc9b0 (51632) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 3228 @ 0xc9c0 (51648) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 3229 @ 0xc9d0 (51664) - @P1 BRA 0xcd70 ;
Basic block id 870 - num instructions 3
 Instr 3230 @ 0xc9e0 (51680) - PRMT R0, R2, 0x9910, RZ ;
 Instr 3231 @ 0xc9f0 (51696) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 3232 @ 0xca00 (51712) - @P0 BRA 0xcbd0 ;
Basic block id 871 - num instructions 2
 Instr 3233 @ 0xca10 (51728) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 3234 @ 0xca20 (51744) - @P0 BRA 0xcae0 ;
Basic block id 872 - num instructions 2
 Instr 3235 @ 0xca30 (51760) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 3236 @ 0xca40 (51776) - @!P0 BRA 0xcaa0 ;
Basic block id 873 - num instructions 2
 Instr 3237 @ 0xca50 (51792) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 3238 @ 0xca60 (51808) - @P0 BRA 0xd700 ;
Basic block id 874 - num instructions 3
 Instr 3239 @ 0xca70 (51824) - F2I.F64.TRUNC R53, R52 ;
 Instr 3240 @ 0xca80 (51840) - STG.E.U8.SYS [R4], R53 ;
 Instr 3241 @ 0xca90 (51856) - BRA 0xd880 ;
Basic block id 875 - num instructions 4
 Instr 3242 @ 0xcaa0 (51872) - F2I.S64.F64.TRUNC R52, R52 ;
 Instr 3243 @ 0xcab0 (51888) - IMAD.MOV.U32 R3, RZ, RZ, R52 ;
 Instr 3244 @ 0xcac0 (51904) - STG.E.U8.SYS [R4], R3 ;
 Instr 3245 @ 0xcad0 (51920) - BRA 0xd880 ;
Basic block id 876 - num instructions 2
 Instr 3246 @ 0xcae0 (51936) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 3247 @ 0xcaf0 (51952) - @!P0 BRA 0xcba0 ;
Basic block id 877 - num instructions 2
 Instr 3248 @ 0xcb00 (51968) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 3249 @ 0xcb10 (51984) - @!P0 BRA 0xcb70 ;
Basic block id 878 - num instructions 2
 Instr 3250 @ 0xcb20 (52000) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 3251 @ 0xcb30 (52016) - @P0 BRA 0xd700 ;
Basic block id 879 - num instructions 3
 Instr 3252 @ 0xcb40 (52032) - F2I.S64.F64.TRUNC R52, R52 ;
 Instr 3253 @ 0xcb50 (52048) - STG.E.64.SYS [R4], R52 ;
 Instr 3254 @ 0xcb60 (52064) - BRA 0xd880 ;
Basic block id 880 - num instructions 3
 Instr 3255 @ 0xcb70 (52080) - F2I.F64.TRUNC R53, R52 ;
 Instr 3256 @ 0xcb80 (52096) - STG.E.SYS [R4], R53 ;
 Instr 3257 @ 0xcb90 (52112) - BRA 0xd880 ;
Basic block id 881 - num instructions 3
 Instr 3258 @ 0xcba0 (52128) - F2I.F64.TRUNC R53, R52 ;
 Instr 3259 @ 0xcbb0 (52144) - STG.E.U16.SYS [R4], R53 ;
 Instr 3260 @ 0xcbc0 (52160) - BRA 0xd880 ;
Basic block id 882 - num instructions 2
 Instr 3261 @ 0xcbd0 (52176) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 3262 @ 0xcbe0 (52192) - @P0 BRA 0xcc80 ;
Basic block id 883 - num instructions 2
 Instr 3263 @ 0xcbf0 (52208) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 3264 @ 0xcc00 (52224) - @!P0 BRA 0xcc50 ;
Basic block id 884 - num instructions 2
 Instr 3265 @ 0xcc10 (52240) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 3266 @ 0xcc20 (52256) - @P0 BRA 0xd700 ;
Basic block id 885 - num instructions 2
 Instr 3267 @ 0xcc30 (52272) - STG.E.SYS [R4], R6 ;
 Instr 3268 @ 0xcc40 (52288) - BRA 0xd880 ;
Basic block id 886 - num instructions 3
 Instr 3269 @ 0xcc50 (52304) - F2F.F16.F32 R3, R6 ;
 Instr 3270 @ 0xcc60 (52320) - STG.E.U16.SYS [R4], R3 ;
 Instr 3271 @ 0xcc70 (52336) - BRA 0xd880 ;
Basic block id 887 - num instructions 2
 Instr 3272 @ 0xcc80 (52352) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 3273 @ 0xcc90 (52368) - @!P0 BRA 0xcd50 ;
Basic block id 888 - num instructions 2
 Instr 3274 @ 0xcca0 (52384) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 3275 @ 0xccb0 (52400) - @!P0 BRA 0xcd10 ;
Basic block id 889 - num instructions 2
 Instr 3276 @ 0xccc0 (52416) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 3277 @ 0xccd0 (52432) - @P0 BRA 0xd700 ;
Basic block id 890 - num instructions 3
 Instr 3278 @ 0xcce0 (52448) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 3279 @ 0xccf0 (52464) - STG.E.64.SYS [R4], R6 ;
 Instr 3280 @ 0xcd00 (52480) - BRA 0xd880 ;
Basic block id 891 - num instructions 4
 Instr 3281 @ 0xcd10 (52496) - F2F.F16.F32 R3, R6 ;
 Instr 3282 @ 0xcd20 (52512) - PRMT R3, R3, 0x5410, RZ ;
 Instr 3283 @ 0xcd30 (52528) - STG.E.SYS [R4], R3 ;
 Instr 3284 @ 0xcd40 (52544) - BRA 0xd880 ;
Basic block id 892 - num instructions 2
 Instr 3285 @ 0xcd50 (52560) - STG.E.64.SYS [R4], R52 ;
 Instr 3286 @ 0xcd60 (52576) - BRA 0xd880 ;
Basic block id 893 - num instructions 3
 Instr 3287 @ 0xcd70 (52592) - PRMT R0, R2, 0x9910, RZ ;
 Instr 3288 @ 0xcd80 (52608) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 3289 @ 0xcd90 (52624) - @P0 BRA 0xd1e0 ;
Basic block id 894 - num instructions 2
 Instr 3290 @ 0xcda0 (52640) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 3291 @ 0xcdb0 (52656) - @P0 BRA 0xce70 ;
Basic block id 895 - num instructions 2
 Instr 3292 @ 0xcdc0 (52672) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 3293 @ 0xcdd0 (52688) - @!P0 BRA 0xce40 ;
Basic block id 896 - num instructions 2
 Instr 3294 @ 0xcde0 (52704) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 3295 @ 0xcdf0 (52720) - @P0 BRA 0xd700 ;
Basic block id 897 - num instructions 4
 Instr 3296 @ 0xce00 (52736) - DSETP.NEU.AND P0, PT, R52, RZ, PT ;
 Instr 3297 @ 0xce10 (52752) - SEL R3, RZ, 0x1, !P0 ;
 Instr 3298 @ 0xce20 (52768) - STG.E.U8.SYS [R4], R3 ;
 Instr 3299 @ 0xce30 (52784) - BRA 0xd880 ;
Basic block id 898 - num instructions 3
 Instr 3300 @ 0xce40 (52800) - CS2R R54, SRZ ;
 Instr 3301 @ 0xce50 (52816) - STG.E.128.SYS [R4], R52 ;
 Instr 3302 @ 0xce60 (52832) - BRA 0xd880 ;
Basic block id 899 - num instructions 2
 Instr 3303 @ 0xce70 (52848) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 3304 @ 0xce80 (52864) - @!P0 BRA 0xd160 ;
Basic block id 900 - num instructions 2
 Instr 3305 @ 0xce90 (52880) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 3306 @ 0xcea0 (52896) - @!P0 BRA 0xd000 ;
Basic block id 901 - num instructions 2
 Instr 3307 @ 0xceb0 (52912) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 3308 @ 0xcec0 (52928) - @P0 BRA 0xd700 ;
Basic block id 902 - num instructions 7
 Instr 3309 @ 0xced0 (52944) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3310 @ 0xcee0 (52960) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3311 @ 0xcef0 (52976) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3312 @ 0xcf00 (52992) - BSSY B0, 0xcfd0 ;
 Instr 3313 @ 0xcf10 (53008) - ISETP.GT.U32.AND P0, PT, R8, 0x43efffff, PT ;
 Instr 3314 @ 0xcf20 (53024) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 3315 @ 0xcf30 (53040) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 903 - num instructions 1
 Instr 3316 @ 0xcf40 (53056) - @P0 BRA 0xcfc0 ;
Basic block id 904 - num instructions 7
 Instr 3317 @ 0xcf50 (53072) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
 Instr 3318 @ 0xcf60 (53088) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 3319 @ 0xcf70 (53104) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3320 @ 0xcf80 (53120) - @P0 IADD3 R0, R6, 0x407ffff, R3 ;
 Instr 3321 @ 0xcf90 (53136) - @!P0 FADD R3, R8, 16384 ;
 Instr 3322 @ 0xcfa0 (53152) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3323 @ 0xcfb0 (53168) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 905 - num instructions 4
 Instr 3324 @ 0xcfc0 (53184) - BSYNC B0 ;
 Instr 3325 @ 0xcfd0 (53200) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 3326 @ 0xcfe0 (53216) - STG.E.U8.SYS [R4], R7 ;
 Instr 3327 @ 0xcff0 (53232) - BRA 0xd880 ;
Basic block id 906 - num instructions 5
 Instr 3328 @ 0xd000 (53248) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3329 @ 0xd010 (53264) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3330 @ 0xd020 (53280) - BSSY B0, 0xd110 ;
 Instr 3331 @ 0xd030 (53296) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 3332 @ 0xd040 (53312) - @P0 BRA 0xd0d0 ;
Basic block id 907 - num instructions 8
 Instr 3333 @ 0xd050 (53328) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
 Instr 3334 @ 0xd060 (53344) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 3335 @ 0xd070 (53360) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3336 @ 0xd080 (53376) - @P0 IADD3 R0, R6, 0x80fffff, R3 ;
 Instr 3337 @ 0xd090 (53392) - @!P0 FADD R3, R7, 128 ;
 Instr 3338 @ 0xd0a0 (53408) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3339 @ 0xd0b0 (53424) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 3340 @ 0xd0c0 (53440) - BRA 0xd100 ;
Basic block id 908 - num instructions 3
 Instr 3341 @ 0xd0d0 (53456) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 3342 @ 0xd0e0 (53472) - ISETP.GT.U32.AND P0, PT, R7, 0x7f800000, PT ;
 Instr 3343 @ 0xd0f0 (53488) - SEL R0, R0, 0x7c, P0 ;
Basic block id 909 - num instructions 6
 Instr 3344 @ 0xd100 (53504) - BSYNC B0 ;
 Instr 3345 @ 0xd110 (53520) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3346 @ 0xd120 (53536) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 3347 @ 0xd130 (53552) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 3348 @ 0xd140 (53568) - STG.E.U8.SYS [R4], R3 ;
 Instr 3349 @ 0xd150 (53584) - BRA 0xd880 ;
Basic block id 910 - num instructions 8
 Instr 3350 @ 0xd160 (53600) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 3351 @ 0xd170 (53616) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 3352 @ 0xd180 (53632) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 3353 @ 0xd190 (53648) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3354 @ 0xd1a0 (53664) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 3355 @ 0xd1b0 (53680) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 3356 @ 0xd1c0 (53696) - STG.E.U16.SYS [R4], R3 ;
 Instr 3357 @ 0xd1d0 (53712) - BRA 0xd880 ;
Basic block id 911 - num instructions 2
 Instr 3358 @ 0xd1e0 (53728) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 3359 @ 0xd1f0 (53744) - @P0 BRA 0xd5b0 ;
Basic block id 912 - num instructions 2
 Instr 3360 @ 0xd200 (53760) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 3361 @ 0xd210 (53776) - @!P0 BRA 0xd420 ;
Basic block id 913 - num instructions 2
 Instr 3362 @ 0xd220 (53792) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 3363 @ 0xd230 (53808) - @!P0 BRA 0xd290 ;
Basic block id 914 - num instructions 2
 Instr 3364 @ 0xd240 (53824) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3365 @ 0xd250 (53840) - @P0 BRA 0xd700 ;
Basic block id 915 - num instructions 3
 Instr 3366 @ 0xd260 (53856) - F2I.U32.F64.TRUNC R53, R52 ;
 Instr 3367 @ 0xd270 (53872) - STG.E.U16.SYS [R4], R53 ;
 Instr 3368 @ 0xd280 (53888) - BRA 0xd880 ;
Basic block id 916 - num instructions 6
 Instr 3369 @ 0xd290 (53904) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3370 @ 0xd2a0 (53920) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3371 @ 0xd2b0 (53936) - BSSY B0, 0xd400 ;
 Instr 3372 @ 0xd2c0 (53952) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3373 @ 0xd2d0 (53968) - ISETP.GT.U32.AND P0, PT, R7, 0x437fffff, PT ;
 Instr 3374 @ 0xd2e0 (53984) - @P0 BRA 0xd3f0 ;
Basic block id 917 - num instructions 2
 Instr 3375 @ 0xd2f0 (54000) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
 Instr 3376 @ 0xd300 (54016) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 918 - num instructions 5
 Instr 3377 @ 0xd310 (54032) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3378 @ 0xd320 (54048) - @P0 IADD3 R0, R6, 0x487ffff, R3 ;
 Instr 3379 @ 0xd330 (54064) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3380 @ 0xd340 (54080) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3381 @ 0xd350 (54096) - @P0 BRA 0xd3b0 ;
Basic block id 919 - num instructions 5
 Instr 3382 @ 0xd360 (54112) - FADD R0, R7, 8192 ;
 Instr 3383 @ 0xd370 (54128) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3384 @ 0xd380 (54144) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3385 @ 0xd390 (54160) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3386 @ 0xd3a0 (54176) - @!P0 BRA 0xd3f0 ;
Basic block id 920 - num instructions 4
 Instr 3387 @ 0xd3b0 (54192) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3388 @ 0xd3c0 (54208) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 3389 @ 0xd3d0 (54224) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 3390 @ 0xd3e0 (54240) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 921 - num instructions 3
 Instr 3391 @ 0xd3f0 (54256) - BSYNC B0 ;
 Instr 3392 @ 0xd400 (54272) - STG.E.U8.SYS [R4], R0 ;
 Instr 3393 @ 0xd410 (54288) - BRA 0xd880 ;
Basic block id 922 - num instructions 6
 Instr 3394 @ 0xd420 (54304) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3395 @ 0xd430 (54320) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3396 @ 0xd440 (54336) - BSSY B0, 0xd590 ;
 Instr 3397 @ 0xd450 (54352) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3398 @ 0xd460 (54368) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 3399 @ 0xd470 (54384) - @P0 BRA 0xd580 ;
Basic block id 923 - num instructions 2
 Instr 3400 @ 0xd480 (54400) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
 Instr 3401 @ 0xd490 (54416) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 924 - num instructions 5
 Instr 3402 @ 0xd4a0 (54432) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3403 @ 0xd4b0 (54448) - @P0 IADD3 R0, R6, 0x88fffff, R3 ;
 Instr 3404 @ 0xd4c0 (54464) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3405 @ 0xd4d0 (54480) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3406 @ 0xd4e0 (54496) - @P0 BRA 0xd540 ;
Basic block id 925 - num instructions 5
 Instr 3407 @ 0xd4f0 (54512) - FADD R0, R7, 64 ;
 Instr 3408 @ 0xd500 (54528) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3409 @ 0xd510 (54544) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3410 @ 0xd520 (54560) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3411 @ 0xd530 (54576) - @!P0 BRA 0xd580 ;
Basic block id 926 - num instructions 4
 Instr 3412 @ 0xd540 (54592) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3413 @ 0xd550 (54608) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 3414 @ 0xd560 (54624) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 3415 @ 0xd570 (54640) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 927 - num instructions 3
 Instr 3416 @ 0xd580 (54656) - BSYNC B0 ;
 Instr 3417 @ 0xd590 (54672) - STG.E.U8.SYS [R4], R0 ;
 Instr 3418 @ 0xd5a0 (54688) - BRA 0xd880 ;
Basic block id 928 - num instructions 2
 Instr 3419 @ 0xd5b0 (54704) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3420 @ 0xd5c0 (54720) - @!P0 BRA 0xd860 ;
Basic block id 929 - num instructions 2
 Instr 3421 @ 0xd5d0 (54736) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3422 @ 0xd5e0 (54752) - @!P0 BRA 0xd830 ;
Basic block id 930 - num instructions 2
 Instr 3423 @ 0xd5f0 (54768) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3424 @ 0xd600 (54784) - @P0 BRA 0xd700 ;
Basic block id 931 - num instructions 15
 Instr 3425 @ 0xd610 (54800) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
 Instr 3426 @ 0xd620 (54816) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3427 @ 0xd630 (54832) - LOP3.LUT R3, R7, 0xff, RZ, 0xc0, !PT ;
 Instr 3428 @ 0xd640 (54848) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 3429 @ 0xd650 (54864) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 3430 @ 0xd660 (54880) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 3431 @ 0xd670 (54896) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 3432 @ 0xd680 (54912) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3433 @ 0xd690 (54928) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3434 @ 0xd6a0 (54944) - @P2 IADD3 R0, R7, 0x1, RZ ;
 Instr 3435 @ 0xd6b0 (54960) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3436 @ 0xd6c0 (54976) - @!P0 IMAD.MOV R0, RZ, RZ, R7 ;
 Instr 3437 @ 0xd6d0 (54992) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 3438 @ 0xd6e0 (55008) - STG.E.U8.SYS [R4], R3 ;
 Instr 3439 @ 0xd6f0 (55024) - BRA 0xd880 ;
Basic block id 932 - num instructions 18
 Instr 3440 @ 0xd700 (55040) - UMOV UR4, 0xd33a2700 ;
 Instr 3441 @ 0xd710 (55056) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3442 @ 0xd720 (55072) - UMOV UR5, 0x7f88 ;
 Instr 3443 @ 0xd730 (55088) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3444 @ 0xd740 (55104) - UMOV UR6, 0xd33a2100 ;
 Instr 3445 @ 0xd750 (55120) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3446 @ 0xd760 (55136) - UMOV UR7, 0x7f88 ;
 Instr 3447 @ 0xd770 (55152) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3448 @ 0xd780 (55168) - UMOV UR8, 0xd33a0a00 ;
 Instr 3449 @ 0xd790 (55184) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3450 @ 0xd7a0 (55200) - UMOV UR9, 0x7f88 ;
 Instr 3451 @ 0xd7b0 (55216) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3452 @ 0xd7c0 (55232) - MOV R20, 0xd7fd0020 ;
 Instr 3453 @ 0xd7d0 (55248) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3454 @ 0xd7e0 (55264) - MOV R21, 0x7f88 ;
 Instr 3455 @ 0xd7f0 (55280) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3456 @ 0xd800 (55296) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3457 @ 0xd810 (55312) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 933 - num instructions 1
 Instr 3458 @ 0xd820 (55328) - BRA 0xd880 ;
Basic block id 934 - num instructions 3
 Instr 3459 @ 0xd830 (55344) - F2I.U64.F64.TRUNC R52, R52 ;
 Instr 3460 @ 0xd840 (55360) - STG.E.64.SYS [R4], R52 ;
 Instr 3461 @ 0xd850 (55376) - BRA 0xd880 ;
Basic block id 935 - num instructions 2
 Instr 3462 @ 0xd860 (55392) - F2I.U32.F64.TRUNC R53, R52 ;
 Instr 3463 @ 0xd870 (55408) - STG.E.SYS [R4], R53 ;
Basic block id 936 - num instructions 3
 Instr 3464 @ 0xd880 (55424) - IADD3 R0, R22, 0x300, RZ ;
 Instr 3465 @ 0xd890 (55440) - ISETP.GE.AND P0, PT, R0, R71, PT ;
 Instr 3466 @ 0xd8a0 (55456) - @P0 EXIT ;
Basic block id 937 - num instructions 7
 Instr 3467 @ 0xd8b0 (55472) - IADD3 R0, R16, 0x280, RZ ;
 Instr 3468 @ 0xd8c0 (55488) - F2F.F32.F64 R6, R60 ;
 Instr 3469 @ 0xd8d0 (55504) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 3470 @ 0xd8e0 (55520) - IMAD R0, R0, c[0x0][0x188], RZ ;
 Instr 3471 @ 0xd8f0 (55536) - IADD3 R4, P0, R0, c[0x0][0x168], RZ ;
 Instr 3472 @ 0xd900 (55552) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 3473 @ 0xd910 (55568) - @P1 BRA 0xdcb0 ;
Basic block id 938 - num instructions 3
 Instr 3474 @ 0xd920 (55584) - PRMT R0, R2, 0x9910, RZ ;
 Instr 3475 @ 0xd930 (55600) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 3476 @ 0xd940 (55616) - @P0 BRA 0xdb10 ;
Basic block id 939 - num instructions 2
 Instr 3477 @ 0xd950 (55632) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 3478 @ 0xd960 (55648) - @P0 BRA 0xda20 ;
Basic block id 940 - num instructions 2
 Instr 3479 @ 0xd970 (55664) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 3480 @ 0xd980 (55680) - @!P0 BRA 0xd9e0 ;
Basic block id 941 - num instructions 2
 Instr 3481 @ 0xd990 (55696) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 3482 @ 0xd9a0 (55712) - @P0 BRA 0xe640 ;
Basic block id 942 - num instructions 3
 Instr 3483 @ 0xd9b0 (55728) - F2I.F64.TRUNC R61, R60 ;
 Instr 3484 @ 0xd9c0 (55744) - STG.E.U8.SYS [R4], R61 ;
 Instr 3485 @ 0xd9d0 (55760) - BRA 0xe7c0 ;
Basic block id 943 - num instructions 4
 Instr 3486 @ 0xd9e0 (55776) - F2I.S64.F64.TRUNC R60, R60 ;
 Instr 3487 @ 0xd9f0 (55792) - IMAD.MOV.U32 R3, RZ, RZ, R60 ;
 Instr 3488 @ 0xda00 (55808) - STG.E.U8.SYS [R4], R3 ;
 Instr 3489 @ 0xda10 (55824) - BRA 0xe7c0 ;
Basic block id 944 - num instructions 2
 Instr 3490 @ 0xda20 (55840) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 3491 @ 0xda30 (55856) - @!P0 BRA 0xdae0 ;
Basic block id 945 - num instructions 2
 Instr 3492 @ 0xda40 (55872) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 3493 @ 0xda50 (55888) - @!P0 BRA 0xdab0 ;
Basic block id 946 - num instructions 2
 Instr 3494 @ 0xda60 (55904) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 3495 @ 0xda70 (55920) - @P0 BRA 0xe640 ;
Basic block id 947 - num instructions 3
 Instr 3496 @ 0xda80 (55936) - F2I.S64.F64.TRUNC R60, R60 ;
 Instr 3497 @ 0xda90 (55952) - STG.E.64.SYS [R4], R60 ;
 Instr 3498 @ 0xdaa0 (55968) - BRA 0xe7c0 ;
Basic block id 948 - num instructions 3
 Instr 3499 @ 0xdab0 (55984) - F2I.F64.TRUNC R61, R60 ;
 Instr 3500 @ 0xdac0 (56000) - STG.E.SYS [R4], R61 ;
 Instr 3501 @ 0xdad0 (56016) - BRA 0xe7c0 ;
Basic block id 949 - num instructions 3
 Instr 3502 @ 0xdae0 (56032) - F2I.F64.TRUNC R61, R60 ;
 Instr 3503 @ 0xdaf0 (56048) - STG.E.U16.SYS [R4], R61 ;
 Instr 3504 @ 0xdb00 (56064) - BRA 0xe7c0 ;
Basic block id 950 - num instructions 2
 Instr 3505 @ 0xdb10 (56080) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 3506 @ 0xdb20 (56096) - @P0 BRA 0xdbc0 ;
Basic block id 951 - num instructions 2
 Instr 3507 @ 0xdb30 (56112) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 3508 @ 0xdb40 (56128) - @!P0 BRA 0xdb90 ;
Basic block id 952 - num instructions 2
 Instr 3509 @ 0xdb50 (56144) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 3510 @ 0xdb60 (56160) - @P0 BRA 0xe640 ;
Basic block id 953 - num instructions 2
 Instr 3511 @ 0xdb70 (56176) - STG.E.SYS [R4], R6 ;
 Instr 3512 @ 0xdb80 (56192) - BRA 0xe7c0 ;
Basic block id 954 - num instructions 3
 Instr 3513 @ 0xdb90 (56208) - F2F.F16.F32 R3, R6 ;
 Instr 3514 @ 0xdba0 (56224) - STG.E.U16.SYS [R4], R3 ;
 Instr 3515 @ 0xdbb0 (56240) - BRA 0xe7c0 ;
Basic block id 955 - num instructions 2
 Instr 3516 @ 0xdbc0 (56256) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 3517 @ 0xdbd0 (56272) - @!P0 BRA 0xdc90 ;
Basic block id 956 - num instructions 2
 Instr 3518 @ 0xdbe0 (56288) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 3519 @ 0xdbf0 (56304) - @!P0 BRA 0xdc50 ;
Basic block id 957 - num instructions 2
 Instr 3520 @ 0xdc00 (56320) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 3521 @ 0xdc10 (56336) - @P0 BRA 0xe640 ;
Basic block id 958 - num instructions 3
 Instr 3522 @ 0xdc20 (56352) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 3523 @ 0xdc30 (56368) - STG.E.64.SYS [R4], R6 ;
 Instr 3524 @ 0xdc40 (56384) - BRA 0xe7c0 ;
Basic block id 959 - num instructions 4
 Instr 3525 @ 0xdc50 (56400) - F2F.F16.F32 R3, R6 ;
 Instr 3526 @ 0xdc60 (56416) - PRMT R3, R3, 0x5410, RZ ;
 Instr 3527 @ 0xdc70 (56432) - STG.E.SYS [R4], R3 ;
 Instr 3528 @ 0xdc80 (56448) - BRA 0xe7c0 ;
Basic block id 960 - num instructions 2
 Instr 3529 @ 0xdc90 (56464) - STG.E.64.SYS [R4], R60 ;
 Instr 3530 @ 0xdca0 (56480) - BRA 0xe7c0 ;
Basic block id 961 - num instructions 3
 Instr 3531 @ 0xdcb0 (56496) - PRMT R0, R2, 0x9910, RZ ;
 Instr 3532 @ 0xdcc0 (56512) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 3533 @ 0xdcd0 (56528) - @P0 BRA 0xe120 ;
Basic block id 962 - num instructions 2
 Instr 3534 @ 0xdce0 (56544) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 3535 @ 0xdcf0 (56560) - @P0 BRA 0xddb0 ;
Basic block id 963 - num instructions 2
 Instr 3536 @ 0xdd00 (56576) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 3537 @ 0xdd10 (56592) - @!P0 BRA 0xdd80 ;
Basic block id 964 - num instructions 2
 Instr 3538 @ 0xdd20 (56608) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 3539 @ 0xdd30 (56624) - @P0 BRA 0xe640 ;
Basic block id 965 - num instructions 4
 Instr 3540 @ 0xdd40 (56640) - DSETP.NEU.AND P0, PT, R60, RZ, PT ;
 Instr 3541 @ 0xdd50 (56656) - SEL R3, RZ, 0x1, !P0 ;
 Instr 3542 @ 0xdd60 (56672) - STG.E.U8.SYS [R4], R3 ;
 Instr 3543 @ 0xdd70 (56688) - BRA 0xe7c0 ;
Basic block id 966 - num instructions 3
 Instr 3544 @ 0xdd80 (56704) - CS2R R62, SRZ ;
 Instr 3545 @ 0xdd90 (56720) - STG.E.128.SYS [R4], R60 ;
 Instr 3546 @ 0xdda0 (56736) - BRA 0xe7c0 ;
Basic block id 967 - num instructions 2
 Instr 3547 @ 0xddb0 (56752) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 3548 @ 0xddc0 (56768) - @!P0 BRA 0xe0a0 ;
Basic block id 968 - num instructions 2
 Instr 3549 @ 0xddd0 (56784) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 3550 @ 0xdde0 (56800) - @!P0 BRA 0xdf40 ;
Basic block id 969 - num instructions 2
 Instr 3551 @ 0xddf0 (56816) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 3552 @ 0xde00 (56832) - @P0 BRA 0xe640 ;
Basic block id 970 - num instructions 7
 Instr 3553 @ 0xde10 (56848) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3554 @ 0xde20 (56864) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3555 @ 0xde30 (56880) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3556 @ 0xde40 (56896) - BSSY B0, 0xdf10 ;
 Instr 3557 @ 0xde50 (56912) - ISETP.GT.U32.AND P0, PT, R8, 0x43efffff, PT ;
 Instr 3558 @ 0xde60 (56928) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 3559 @ 0xde70 (56944) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 971 - num instructions 1
 Instr 3560 @ 0xde80 (56960) - @P0 BRA 0xdf00 ;
Basic block id 972 - num instructions 7
 Instr 3561 @ 0xde90 (56976) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
 Instr 3562 @ 0xdea0 (56992) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 3563 @ 0xdeb0 (57008) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3564 @ 0xdec0 (57024) - @P0 IADD3 R0, R6, 0x407ffff, R3 ;
 Instr 3565 @ 0xded0 (57040) - @!P0 FADD R3, R8, 16384 ;
 Instr 3566 @ 0xdee0 (57056) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3567 @ 0xdef0 (57072) - @!P0 IADD3 R0, R3, -0x46800000, RZ ;
Basic block id 973 - num instructions 4
 Instr 3568 @ 0xdf00 (57088) - BSYNC B0 ;
 Instr 3569 @ 0xdf10 (57104) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 3570 @ 0xdf20 (57120) - STG.E.U8.SYS [R4], R7 ;
 Instr 3571 @ 0xdf30 (57136) - BRA 0xe7c0 ;
Basic block id 974 - num instructions 5
 Instr 3572 @ 0xdf40 (57152) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3573 @ 0xdf50 (57168) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3574 @ 0xdf60 (57184) - BSSY B0, 0xe050 ;
 Instr 3575 @ 0xdf70 (57200) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 3576 @ 0xdf80 (57216) - @P0 BRA 0xe010 ;
Basic block id 975 - num instructions 8
 Instr 3577 @ 0xdf90 (57232) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
 Instr 3578 @ 0xdfa0 (57248) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 3579 @ 0xdfb0 (57264) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3580 @ 0xdfc0 (57280) - @P0 IADD3 R0, R6, 0x80fffff, R3 ;
 Instr 3581 @ 0xdfd0 (57296) - @!P0 FADD R3, R7, 128 ;
 Instr 3582 @ 0xdfe0 (57312) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3583 @ 0xdff0 (57328) - @!P0 IADD3 R0, R3, -0x43000000, RZ ;
 Instr 3584 @ 0xe000 (57344) - BRA 0xe040 ;
Basic block id 976 - num instructions 3
 Instr 3585 @ 0xe010 (57360) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 3586 @ 0xe020 (57376) - ISETP.GT.U32.AND P0, PT, R7, 0x7f800000, PT ;
 Instr 3587 @ 0xe030 (57392) - SEL R0, R0, 0x7c, P0 ;
Basic block id 977 - num instructions 6
 Instr 3588 @ 0xe040 (57408) - BSYNC B0 ;
 Instr 3589 @ 0xe050 (57424) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3590 @ 0xe060 (57440) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 3591 @ 0xe070 (57456) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 3592 @ 0xe080 (57472) - STG.E.U8.SYS [R4], R3 ;
 Instr 3593 @ 0xe090 (57488) - BRA 0xe7c0 ;
Basic block id 978 - num instructions 8
 Instr 3594 @ 0xe0a0 (57504) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 3595 @ 0xe0b0 (57520) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 3596 @ 0xe0c0 (57536) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 3597 @ 0xe0d0 (57552) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3598 @ 0xe0e0 (57568) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 3599 @ 0xe0f0 (57584) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 3600 @ 0xe100 (57600) - STG.E.U16.SYS [R4], R3 ;
 Instr 3601 @ 0xe110 (57616) - BRA 0xe7c0 ;
Basic block id 979 - num instructions 2
 Instr 3602 @ 0xe120 (57632) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 3603 @ 0xe130 (57648) - @P0 BRA 0xe4f0 ;
Basic block id 980 - num instructions 2
 Instr 3604 @ 0xe140 (57664) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 3605 @ 0xe150 (57680) - @!P0 BRA 0xe360 ;
Basic block id 981 - num instructions 2
 Instr 3606 @ 0xe160 (57696) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 3607 @ 0xe170 (57712) - @!P0 BRA 0xe1d0 ;
Basic block id 982 - num instructions 2
 Instr 3608 @ 0xe180 (57728) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3609 @ 0xe190 (57744) - @P0 BRA 0xe640 ;
Basic block id 983 - num instructions 3
 Instr 3610 @ 0xe1a0 (57760) - F2I.U32.F64.TRUNC R61, R60 ;
 Instr 3611 @ 0xe1b0 (57776) - STG.E.U16.SYS [R4], R61 ;
 Instr 3612 @ 0xe1c0 (57792) - BRA 0xe7c0 ;
Basic block id 984 - num instructions 6
 Instr 3613 @ 0xe1d0 (57808) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3614 @ 0xe1e0 (57824) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3615 @ 0xe1f0 (57840) - BSSY B0, 0xe340 ;
 Instr 3616 @ 0xe200 (57856) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3617 @ 0xe210 (57872) - ISETP.GT.U32.AND P0, PT, R7, 0x437fffff, PT ;
 Instr 3618 @ 0xe220 (57888) - @P0 BRA 0xe330 ;
Basic block id 985 - num instructions 2
 Instr 3619 @ 0xe230 (57904) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
 Instr 3620 @ 0xe240 (57920) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 986 - num instructions 5
 Instr 3621 @ 0xe250 (57936) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3622 @ 0xe260 (57952) - @P0 IADD3 R0, R6, 0x487ffff, R3 ;
 Instr 3623 @ 0xe270 (57968) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3624 @ 0xe280 (57984) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3625 @ 0xe290 (58000) - @P0 BRA 0xe2f0 ;
Basic block id 987 - num instructions 5
 Instr 3626 @ 0xe2a0 (58016) - FADD R0, R7, 8192 ;
 Instr 3627 @ 0xe2b0 (58032) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3628 @ 0xe2c0 (58048) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3629 @ 0xe2d0 (58064) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3630 @ 0xe2e0 (58080) - @!P0 BRA 0xe330 ;
Basic block id 988 - num instructions 4
 Instr 3631 @ 0xe2f0 (58096) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3632 @ 0xe300 (58112) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 3633 @ 0xe310 (58128) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 3634 @ 0xe320 (58144) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 989 - num instructions 3
 Instr 3635 @ 0xe330 (58160) - BSYNC B0 ;
 Instr 3636 @ 0xe340 (58176) - STG.E.U8.SYS [R4], R0 ;
 Instr 3637 @ 0xe350 (58192) - BRA 0xe7c0 ;
Basic block id 990 - num instructions 6
 Instr 3638 @ 0xe360 (58208) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3639 @ 0xe370 (58224) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3640 @ 0xe380 (58240) - BSSY B0, 0xe4d0 ;
 Instr 3641 @ 0xe390 (58256) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3642 @ 0xe3a0 (58272) - ISETP.GT.U32.AND P0, PT, R7, 0x477fffff, PT ;
 Instr 3643 @ 0xe3b0 (58288) - @P0 BRA 0xe4c0 ;
Basic block id 991 - num instructions 2
 Instr 3644 @ 0xe3c0 (58304) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
 Instr 3645 @ 0xe3d0 (58320) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 992 - num instructions 5
 Instr 3646 @ 0xe3e0 (58336) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3647 @ 0xe3f0 (58352) - @P0 IADD3 R0, R6, 0x88fffff, R3 ;
 Instr 3648 @ 0xe400 (58368) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3649 @ 0xe410 (58384) - @P0 LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3650 @ 0xe420 (58400) - @P0 BRA 0xe480 ;
Basic block id 993 - num instructions 5
 Instr 3651 @ 0xe430 (58416) - FADD R0, R7, 64 ;
 Instr 3652 @ 0xe440 (58432) - LOP3.LUT R3, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3653 @ 0xe450 (58448) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3654 @ 0xe460 (58464) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 3655 @ 0xe470 (58480) - @!P0 BRA 0xe4c0 ;
Basic block id 994 - num instructions 4
 Instr 3656 @ 0xe480 (58496) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3657 @ 0xe490 (58512) - SHF.R.U32.HI R6, RZ, 0x18, R6 ;
 Instr 3658 @ 0xe4a0 (58528) - LOP3.LUT R3, R3, R6, RZ, 0xfc, !PT ;
 Instr 3659 @ 0xe4b0 (58544) - PRMT R0, R3, 0x7610, R0 ;
Basic block id 995 - num instructions 3
 Instr 3660 @ 0xe4c0 (58560) - BSYNC B0 ;
 Instr 3661 @ 0xe4d0 (58576) - STG.E.U8.SYS [R4], R0 ;
 Instr 3662 @ 0xe4e0 (58592) - BRA 0xe7c0 ;
Basic block id 996 - num instructions 2
 Instr 3663 @ 0xe4f0 (58608) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3664 @ 0xe500 (58624) - @!P0 BRA 0xe7a0 ;
Basic block id 997 - num instructions 2
 Instr 3665 @ 0xe510 (58640) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3666 @ 0xe520 (58656) - @!P0 BRA 0xe770 ;
Basic block id 998 - num instructions 2
 Instr 3667 @ 0xe530 (58672) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3668 @ 0xe540 (58688) - @P0 BRA 0xe640 ;
Basic block id 999 - num instructions 15
 Instr 3669 @ 0xe550 (58704) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
 Instr 3670 @ 0xe560 (58720) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3671 @ 0xe570 (58736) - LOP3.LUT R3, R7, 0xff, RZ, 0xc0, !PT ;
 Instr 3672 @ 0xe580 (58752) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 3673 @ 0xe590 (58768) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 3674 @ 0xe5a0 (58784) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 3675 @ 0xe5b0 (58800) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 3676 @ 0xe5c0 (58816) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3677 @ 0xe5d0 (58832) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3678 @ 0xe5e0 (58848) - @P2 IADD3 R0, R7, 0x1, RZ ;
 Instr 3679 @ 0xe5f0 (58864) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3680 @ 0xe600 (58880) - @!P0 IMAD.MOV R0, RZ, RZ, R7 ;
 Instr 3681 @ 0xe610 (58896) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 3682 @ 0xe620 (58912) - STG.E.U8.SYS [R4], R3 ;
 Instr 3683 @ 0xe630 (58928) - BRA 0xe7c0 ;
Basic block id 1000 - num instructions 18
 Instr 3684 @ 0xe640 (58944) - UMOV UR4, 0xd33a2700 ;
 Instr 3685 @ 0xe650 (58960) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3686 @ 0xe660 (58976) - UMOV UR5, 0x7f88 ;
 Instr 3687 @ 0xe670 (58992) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3688 @ 0xe680 (59008) - UMOV UR6, 0xd33a2100 ;
 Instr 3689 @ 0xe690 (59024) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3690 @ 0xe6a0 (59040) - UMOV UR7, 0x7f88 ;
 Instr 3691 @ 0xe6b0 (59056) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3692 @ 0xe6c0 (59072) - UMOV UR8, 0xd33a0a00 ;
 Instr 3693 @ 0xe6d0 (59088) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3694 @ 0xe6e0 (59104) - UMOV UR9, 0x7f88 ;
 Instr 3695 @ 0xe6f0 (59120) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3696 @ 0xe700 (59136) - MOV R20, 0xd7fd0f60 ;
 Instr 3697 @ 0xe710 (59152) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3698 @ 0xe720 (59168) - MOV R21, 0x7f88 ;
 Instr 3699 @ 0xe730 (59184) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3700 @ 0xe740 (59200) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3701 @ 0xe750 (59216) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 1001 - num instructions 1
 Instr 3702 @ 0xe760 (59232) - BRA 0xe7c0 ;
Basic block id 1002 - num instructions 3
 Instr 3703 @ 0xe770 (59248) - F2I.U64.F64.TRUNC R60, R60 ;
 Instr 3704 @ 0xe780 (59264) - STG.E.64.SYS [R4], R60 ;
 Instr 3705 @ 0xe790 (59280) - BRA 0xe7c0 ;
Basic block id 1003 - num instructions 2
 Instr 3706 @ 0xe7a0 (59296) - F2I.U32.F64.TRUNC R61, R60 ;
 Instr 3707 @ 0xe7b0 (59312) - STG.E.SYS [R4], R61 ;
Basic block id 1004 - num instructions 3
 Instr 3708 @ 0xe7c0 (59328) - IADD3 R22, R22, 0x380, RZ ;
 Instr 3709 @ 0xe7d0 (59344) - ISETP.GE.AND P0, PT, R22, R71, PT ;
 Instr 3710 @ 0xe7e0 (59360) - @P0 EXIT ;
Basic block id 1005 - num instructions 7
 Instr 3711 @ 0xe7f0 (59376) - IADD3 R16, R16, 0x300, RZ ;
 Instr 3712 @ 0xe800 (59392) - F2F.F32.F64 R6, R68 ;
 Instr 3713 @ 0xe810 (59408) - ISETP.GT.AND P1, PT, R23, 0x9, PT ;
 Instr 3714 @ 0xe820 (59424) - IMAD R16, R16, c[0x0][0x188], RZ ;
 Instr 3715 @ 0xe830 (59440) - IADD3 R4, P0, R16, c[0x0][0x168], RZ ;
 Instr 3716 @ 0xe840 (59456) - IMAD.X R5, RZ, RZ, c[0x0][0x16c], P0 ;
 Instr 3717 @ 0xe850 (59472) - @P1 BRA 0xebf0 ;
Basic block id 1006 - num instructions 3
 Instr 3718 @ 0xe860 (59488) - PRMT R0, R2, 0x9910, RZ ;
 Instr 3719 @ 0xe870 (59504) - ISETP.GT.AND P0, PT, R0, 0x4, PT ;
 Instr 3720 @ 0xe880 (59520) - @P0 BRA 0xea50 ;
Basic block id 1007 - num instructions 2
 Instr 3721 @ 0xe890 (59536) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
 Instr 3722 @ 0xe8a0 (59552) - @P0 BRA 0xe960 ;
Basic block id 1008 - num instructions 2
 Instr 3723 @ 0xe8b0 (59568) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 3724 @ 0xe8c0 (59584) - @!P0 BRA 0xe920 ;
Basic block id 1009 - num instructions 2
 Instr 3725 @ 0xe8d0 (59600) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 3726 @ 0xe8e0 (59616) - @P0 BRA 0xf580 ;
Basic block id 1010 - num instructions 3
 Instr 3727 @ 0xe8f0 (59632) - F2I.F64.TRUNC R69, R68 ;
 Instr 3728 @ 0xe900 (59648) - STG.E.U8.SYS [R4], R69 ;
 Instr 3729 @ 0xe910 (59664) - EXIT ;
Basic block id 1011 - num instructions 4
 Instr 3730 @ 0xe920 (59680) - F2I.S64.F64.TRUNC R68, R68 ;
 Instr 3731 @ 0xe930 (59696) - IMAD.MOV.U32 R3, RZ, RZ, R68 ;
 Instr 3732 @ 0xe940 (59712) - STG.E.U8.SYS [R4], R3 ;
 Instr 3733 @ 0xe950 (59728) - EXIT ;
Basic block id 1012 - num instructions 2
 Instr 3734 @ 0xe960 (59744) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 3735 @ 0xe970 (59760) - @!P0 BRA 0xea20 ;
Basic block id 1013 - num instructions 2
 Instr 3736 @ 0xe980 (59776) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 3737 @ 0xe990 (59792) - @!P0 BRA 0xe9f0 ;
Basic block id 1014 - num instructions 2
 Instr 3738 @ 0xe9a0 (59808) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 3739 @ 0xe9b0 (59824) - @P0 BRA 0xf580 ;
Basic block id 1015 - num instructions 3
 Instr 3740 @ 0xe9c0 (59840) - F2I.S64.F64.TRUNC R68, R68 ;
 Instr 3741 @ 0xe9d0 (59856) - STG.E.64.SYS [R4], R68 ;
 Instr 3742 @ 0xe9e0 (59872) - EXIT ;
Basic block id 1016 - num instructions 3
 Instr 3743 @ 0xe9f0 (59888) - F2I.F64.TRUNC R69, R68 ;
 Instr 3744 @ 0xea00 (59904) - STG.E.SYS [R4], R69 ;
 Instr 3745 @ 0xea10 (59920) - EXIT ;
Basic block id 1017 - num instructions 3
 Instr 3746 @ 0xea20 (59936) - F2I.F64.TRUNC R69, R68 ;
 Instr 3747 @ 0xea30 (59952) - STG.E.U16.SYS [R4], R69 ;
 Instr 3748 @ 0xea40 (59968) - EXIT ;
Basic block id 1018 - num instructions 2
 Instr 3749 @ 0xea50 (59984) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
 Instr 3750 @ 0xea60 (60000) - @P0 BRA 0xeb00 ;
Basic block id 1019 - num instructions 2
 Instr 3751 @ 0xea70 (60016) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 3752 @ 0xea80 (60032) - @!P0 BRA 0xead0 ;
Basic block id 1020 - num instructions 2
 Instr 3753 @ 0xea90 (60048) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 3754 @ 0xeaa0 (60064) - @P0 BRA 0xf580 ;
Basic block id 1021 - num instructions 2
 Instr 3755 @ 0xeab0 (60080) - STG.E.SYS [R4], R6 ;
 Instr 3756 @ 0xeac0 (60096) - EXIT ;
Basic block id 1022 - num instructions 3
 Instr 3757 @ 0xead0 (60112) - F2F.F16.F32 R3, R6 ;
 Instr 3758 @ 0xeae0 (60128) - STG.E.U16.SYS [R4], R3 ;
 Instr 3759 @ 0xeaf0 (60144) - EXIT ;
Basic block id 1023 - num instructions 2
 Instr 3760 @ 0xeb00 (60160) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 3761 @ 0xeb10 (60176) - @!P0 BRA 0xebd0 ;
Basic block id 1024 - num instructions 2
 Instr 3762 @ 0xeb20 (60192) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 3763 @ 0xeb30 (60208) - @!P0 BRA 0xeb90 ;
Basic block id 1025 - num instructions 2
 Instr 3764 @ 0xeb40 (60224) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 3765 @ 0xeb50 (60240) - @P0 BRA 0xf580 ;
Basic block id 1026 - num instructions 3
 Instr 3766 @ 0xeb60 (60256) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
 Instr 3767 @ 0xeb70 (60272) - STG.E.64.SYS [R4], R6 ;
 Instr 3768 @ 0xeb80 (60288) - EXIT ;
Basic block id 1027 - num instructions 4
 Instr 3769 @ 0xeb90 (60304) - F2F.F16.F32 R3, R6 ;
 Instr 3770 @ 0xeba0 (60320) - PRMT R3, R3, 0x5410, RZ ;
 Instr 3771 @ 0xebb0 (60336) - STG.E.SYS [R4], R3 ;
 Instr 3772 @ 0xebc0 (60352) - EXIT ;
Basic block id 1028 - num instructions 2
 Instr 3773 @ 0xebd0 (60368) - STG.E.64.SYS [R4], R68 ;
 Instr 3774 @ 0xebe0 (60384) - EXIT ;
Basic block id 1029 - num instructions 3
 Instr 3775 @ 0xebf0 (60400) - PRMT R0, R2, 0x9910, RZ ;
 Instr 3776 @ 0xec00 (60416) - ISETP.GT.AND P0, PT, R0, 0x18, PT ;
 Instr 3777 @ 0xec10 (60432) - @P0 BRA 0xf060 ;
Basic block id 1030 - num instructions 2
 Instr 3778 @ 0xec20 (60448) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
 Instr 3779 @ 0xec30 (60464) - @P0 BRA 0xecf0 ;
Basic block id 1031 - num instructions 2
 Instr 3780 @ 0xec40 (60480) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 3781 @ 0xec50 (60496) - @!P0 BRA 0xecc0 ;
Basic block id 1032 - num instructions 2
 Instr 3782 @ 0xec60 (60512) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 3783 @ 0xec70 (60528) - @P0 BRA 0xf580 ;
Basic block id 1033 - num instructions 4
 Instr 3784 @ 0xec80 (60544) - DSETP.NEU.AND P0, PT, R68, RZ, PT ;
 Instr 3785 @ 0xec90 (60560) - SEL R3, RZ, 0x1, !P0 ;
 Instr 3786 @ 0xeca0 (60576) - STG.E.U8.SYS [R4], R3 ;
 Instr 3787 @ 0xecb0 (60592) - EXIT ;
Basic block id 1034 - num instructions 3
 Instr 3788 @ 0xecc0 (60608) - CS2R R70, SRZ ;
 Instr 3789 @ 0xecd0 (60624) - STG.E.128.SYS [R4], R68 ;
 Instr 3790 @ 0xece0 (60640) - EXIT ;
Basic block id 1035 - num instructions 2
 Instr 3791 @ 0xecf0 (60656) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 3792 @ 0xed00 (60672) - @!P0 BRA 0xefe0 ;
Basic block id 1036 - num instructions 2
 Instr 3793 @ 0xed10 (60688) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 3794 @ 0xed20 (60704) - @!P0 BRA 0xee80 ;
Basic block id 1037 - num instructions 2
 Instr 3795 @ 0xed30 (60720) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 3796 @ 0xed40 (60736) - @P0 BRA 0xf580 ;
Basic block id 1038 - num instructions 7
 Instr 3797 @ 0xed50 (60752) - LOP3.LUT R2, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3798 @ 0xed60 (60768) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3799 @ 0xed70 (60784) - LOP3.LUT R0, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3800 @ 0xed80 (60800) - BSSY B0, 0xee50 ;
 Instr 3801 @ 0xed90 (60816) - ISETP.GT.U32.AND P0, PT, R2, 0x43efffff, PT ;
 Instr 3802 @ 0xeda0 (60832) - SHF.R.U32.HI R7, RZ, 0x18, R0 ;
 Instr 3803 @ 0xedb0 (60848) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Basic block id 1039 - num instructions 1
 Instr 3804 @ 0xedc0 (60864) - @P0 BRA 0xee40 ;
Basic block id 1040 - num instructions 7
 Instr 3805 @ 0xedd0 (60880) - ISETP.GE.U32.AND P0, PT, R2, 0x3c800000, PT ;
 Instr 3806 @ 0xede0 (60896) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
 Instr 3807 @ 0xedf0 (60912) - @!P0 FADD R2, R2, 16384 ;
 Instr 3808 @ 0xee00 (60928) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3809 @ 0xee10 (60944) - @P0 IADD3 R3, R6, 0x407ffff, R3 ;
 Instr 3810 @ 0xee20 (60960) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R3 ;
 Instr 3811 @ 0xee30 (60976) - @!P0 IADD3 R0, R2, -0x46800000, RZ ;
Basic block id 1041 - num instructions 4
 Instr 3812 @ 0xee40 (60992) - BSYNC B0 ;
 Instr 3813 @ 0xee50 (61008) - LOP3.LUT R7, R0, R7, RZ, 0xfc, !PT ;
 Instr 3814 @ 0xee60 (61024) - STG.E.U8.SYS [R4], R7 ;
 Instr 3815 @ 0xee70 (61040) - EXIT ;
Basic block id 1042 - num instructions 5
 Instr 3816 @ 0xee80 (61056) - LOP3.LUT R2, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3817 @ 0xee90 (61072) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3818 @ 0xeea0 (61088) - BSSY B0, 0xef90 ;
 Instr 3819 @ 0xeeb0 (61104) - ISETP.GT.U32.AND P0, PT, R2, 0x477fffff, PT ;
 Instr 3820 @ 0xeec0 (61120) - @P0 BRA 0xef50 ;
Basic block id 1043 - num instructions 8
 Instr 3821 @ 0xeed0 (61136) - ISETP.GE.U32.AND P0, PT, R2, 0x38800000, PT ;
 Instr 3822 @ 0xeee0 (61152) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
 Instr 3823 @ 0xeef0 (61168) - @!P0 FADD R2, R2, 128 ;
 Instr 3824 @ 0xef00 (61184) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3825 @ 0xef10 (61200) - @P0 IADD3 R3, R6, 0x80fffff, R3 ;
 Instr 3826 @ 0xef20 (61216) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R3 ;
 Instr 3827 @ 0xef30 (61232) - @!P0 IADD3 R0, R2, -0x43000000, RZ ;
 Instr 3828 @ 0xef40 (61248) - BRA 0xef80 ;
Basic block id 1044 - num instructions 3
 Instr 3829 @ 0xef50 (61264) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
 Instr 3830 @ 0xef60 (61280) - ISETP.GT.U32.AND P0, PT, R2, 0x7f800000, PT ;
 Instr 3831 @ 0xef70 (61296) - SEL R0, R0, 0x7c, P0 ;
Basic block id 1045 - num instructions 6
 Instr 3832 @ 0xef80 (61312) - BSYNC B0 ;
 Instr 3833 @ 0xef90 (61328) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3834 @ 0xefa0 (61344) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 3835 @ 0xefb0 (61360) - LOP3.LUT R3, R0, R3, RZ, 0xfc, !PT ;
 Instr 3836 @ 0xefc0 (61376) - STG.E.U8.SYS [R4], R3 ;
 Instr 3837 @ 0xefd0 (61392) - EXIT ;
Basic block id 1046 - num instructions 8
 Instr 3838 @ 0xefe0 (61408) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
 Instr 3839 @ 0xeff0 (61424) - IMAD.MOV.U32 R3, RZ, RZ, 0x7fc0 ;
 Instr 3840 @ 0xf000 (61440) - @!P0 SHF.R.U32.HI R0, RZ, 0x10, R6 ;
 Instr 3841 @ 0xf010 (61456) - @!P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3842 @ 0xf020 (61472) - @!P0 IADD3 R7, R6, 0x7fff, R7 ;
 Instr 3843 @ 0xf030 (61488) - @!P0 SHF.R.U32.HI R3, RZ, 0x10, R7 ;
 Instr 3844 @ 0xf040 (61504) - STG.E.U16.SYS [R4], R3 ;
 Instr 3845 @ 0xf050 (61520) - EXIT ;
Basic block id 1047 - num instructions 2
 Instr 3846 @ 0xf060 (61536) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
 Instr 3847 @ 0xf070 (61552) - @P0 BRA 0xf430 ;
Basic block id 1048 - num instructions 2
 Instr 3848 @ 0xf080 (61568) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
 Instr 3849 @ 0xf090 (61584) - @!P0 BRA 0xf2a0 ;
Basic block id 1049 - num instructions 2
 Instr 3850 @ 0xf0a0 (61600) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
 Instr 3851 @ 0xf0b0 (61616) - @!P0 BRA 0xf110 ;
Basic block id 1050 - num instructions 2
 Instr 3852 @ 0xf0c0 (61632) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
 Instr 3853 @ 0xf0d0 (61648) - @P0 BRA 0xf580 ;
Basic block id 1051 - num instructions 3
 Instr 3854 @ 0xf0e0 (61664) - F2I.U32.F64.TRUNC R69, R68 ;
 Instr 3855 @ 0xf0f0 (61680) - STG.E.U16.SYS [R4], R69 ;
 Instr 3856 @ 0xf100 (61696) - EXIT ;
Basic block id 1052 - num instructions 6
 Instr 3857 @ 0xf110 (61712) - LOP3.LUT R3, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3858 @ 0xf120 (61728) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3859 @ 0xf130 (61744) - BSSY B0, 0xf280 ;
 Instr 3860 @ 0xf140 (61760) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3861 @ 0xf150 (61776) - ISETP.GT.U32.AND P0, PT, R3, 0x437fffff, PT ;
 Instr 3862 @ 0xf160 (61792) - @P0 BRA 0xf270 ;
Basic block id 1053 - num instructions 2
 Instr 3863 @ 0xf170 (61808) - ISETP.GE.U32.AND P0, PT, R3, 0x3c000000, PT ;
 Instr 3864 @ 0xf180 (61824) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R6 ;
Basic block id 1054 - num instructions 5
 Instr 3865 @ 0xf190 (61840) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3866 @ 0xf1a0 (61856) - @P0 IADD3 R0, R6, 0x487ffff, R7 ;
 Instr 3867 @ 0xf1b0 (61872) - @P0 SHF.R.U32.HI R0, RZ, 0x14, R0 ;
 Instr 3868 @ 0xf1c0 (61888) - @P0 LOP3.LUT R2, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3869 @ 0xf1d0 (61904) - @P0 BRA 0xf230 ;
Basic block id 1055 - num instructions 5
 Instr 3870 @ 0xf1e0 (61920) - FADD R0, R3, 8192 ;
 Instr 3871 @ 0xf1f0 (61936) - LOP3.LUT R2, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3872 @ 0xf200 (61952) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3873 @ 0xf210 (61968) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 3874 @ 0xf220 (61984) - @!P0 BRA 0xf270 ;
Basic block id 1056 - num instructions 4
 Instr 3875 @ 0xf230 (62000) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3876 @ 0xf240 (62016) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 3877 @ 0xf250 (62032) - LOP3.LUT R2, R2, R3, RZ, 0xfc, !PT ;
 Instr 3878 @ 0xf260 (62048) - PRMT R0, R2, 0x7610, R0 ;
Basic block id 1057 - num instructions 3
 Instr 3879 @ 0xf270 (62064) - BSYNC B0 ;
 Instr 3880 @ 0xf280 (62080) - STG.E.U8.SYS [R4], R0 ;
 Instr 3881 @ 0xf290 (62096) - EXIT ;
Basic block id 1058 - num instructions 6
 Instr 3882 @ 0xf2a0 (62112) - LOP3.LUT R3, R6, 0x7fffffff, RZ, 0xc0, !PT ;
 Instr 3883 @ 0xf2b0 (62128) - BMOV.32.CLEAR RZ, B0 ;
 Instr 3884 @ 0xf2c0 (62144) - BSSY B0, 0xf410 ;
 Instr 3885 @ 0xf2d0 (62160) - IMAD.MOV.U32 R0, RZ, RZ, 0x80 ;
 Instr 3886 @ 0xf2e0 (62176) - ISETP.GT.U32.AND P0, PT, R3, 0x477fffff, PT ;
 Instr 3887 @ 0xf2f0 (62192) - @P0 BRA 0xf400 ;
Basic block id 1059 - num instructions 2
 Instr 3888 @ 0xf300 (62208) - ISETP.GE.U32.AND P0, PT, R3, 0x38000000, PT ;
 Instr 3889 @ 0xf310 (62224) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R6 ;
Basic block id 1060 - num instructions 5
 Instr 3890 @ 0xf320 (62240) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3891 @ 0xf330 (62256) - @P0 IADD3 R0, R6, 0x88fffff, R7 ;
 Instr 3892 @ 0xf340 (62272) - @P0 SHF.R.U32.HI R0, RZ, 0x15, R0 ;
 Instr 3893 @ 0xf350 (62288) - @P0 LOP3.LUT R2, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3894 @ 0xf360 (62304) - @P0 BRA 0xf3c0 ;
Basic block id 1061 - num instructions 5
 Instr 3895 @ 0xf370 (62320) - FADD R0, R3, 64 ;
 Instr 3896 @ 0xf380 (62336) - LOP3.LUT R2, R0, 0xff, RZ, 0xc0, !PT ;
 Instr 3897 @ 0xf390 (62352) - PRMT R0, RZ, 0x7610, R0 ;
 Instr 3898 @ 0xf3a0 (62368) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
 Instr 3899 @ 0xf3b0 (62384) - @!P0 BRA 0xf400 ;
Basic block id 1062 - num instructions 4
 Instr 3900 @ 0xf3c0 (62400) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
 Instr 3901 @ 0xf3d0 (62416) - SHF.R.U32.HI R3, RZ, 0x18, R6 ;
 Instr 3902 @ 0xf3e0 (62432) - LOP3.LUT R2, R2, R3, RZ, 0xfc, !PT ;
 Instr 3903 @ 0xf3f0 (62448) - PRMT R0, R2, 0x7610, R0 ;
Basic block id 1063 - num instructions 3
 Instr 3904 @ 0xf400 (62464) - BSYNC B0 ;
 Instr 3905 @ 0xf410 (62480) - STG.E.U8.SYS [R4], R0 ;
 Instr 3906 @ 0xf420 (62496) - EXIT ;
Basic block id 1064 - num instructions 2
 Instr 3907 @ 0xf430 (62512) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
 Instr 3908 @ 0xf440 (62528) - @!P0 BRA 0xf6e0 ;
Basic block id 1065 - num instructions 2
 Instr 3909 @ 0xf450 (62544) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
 Instr 3910 @ 0xf460 (62560) - @!P0 BRA 0xf6b0 ;
Basic block id 1066 - num instructions 2
 Instr 3911 @ 0xf470 (62576) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
 Instr 3912 @ 0xf480 (62592) - @P0 BRA 0xf580 ;
Basic block id 1067 - num instructions 15
 Instr 3913 @ 0xf490 (62608) - SHF.R.U32.HI R2, RZ, 0x17, R6 ;
 Instr 3914 @ 0xf4a0 (62624) - PLOP3.LUT P0, PT, PT, PT, PT, 0x80, 0x0 ;
 Instr 3915 @ 0xf4b0 (62640) - LOP3.LUT R3, R2, 0xff, RZ, 0xc0, !PT ;
 Instr 3916 @ 0xf4c0 (62656) - ISETP.NE.AND P2, PT, R3, 0xff, PT ;
 Instr 3917 @ 0xf4d0 (62672) - @P2 SHF.R.U32.HI R0, RZ, 0x16, R6.reuse ;
 Instr 3918 @ 0xf4e0 (62688) - @P2 LOP3.LUT P1, RZ, R3, 0x3fffff, R6, 0xf8, !PT ;
 Instr 3919 @ 0xf4f0 (62704) - IMAD.MOV.U32 R3, RZ, RZ, 0xff ;
 Instr 3920 @ 0xf500 (62720) - @P2 LOP3.LUT R0, R0, 0x1, RZ, 0xc0, !PT ;
 Instr 3921 @ 0xf510 (62736) - @P2 ISETP.EQ.U32.AND P1, PT, R0, 0x1, P1 ;
 Instr 3922 @ 0xf520 (62752) - @P2 IADD3 R0, R2, 0x1, RZ ;
 Instr 3923 @ 0xf530 (62768) - @P2 PLOP3.LUT P0, PT, P1, PT, PT, 0x80, 0x0 ;
 Instr 3924 @ 0xf540 (62784) - @!P0 IMAD.MOV R0, RZ, RZ, R2 ;
 Instr 3925 @ 0xf550 (62800) - @P2 IMAD.MOV.U32 R3, RZ, RZ, R0 ;
 Instr 3926 @ 0xf560 (62816) - STG.E.U8.SYS [R4], R3 ;
 Instr 3927 @ 0xf570 (62832) - EXIT ;
Basic block id 1068 - num instructions 18
 Instr 3928 @ 0xf580 (62848) - UMOV UR4, 0xd33a2700 ;
 Instr 3929 @ 0xf590 (62864) - IMAD.MOV.U32 R8, RZ, RZ, 0x65 ;
 Instr 3930 @ 0xf5a0 (62880) - UMOV UR5, 0x7f88 ;
 Instr 3931 @ 0xf5b0 (62896) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3932 @ 0xf5c0 (62912) - UMOV UR6, 0xd33a2100 ;
 Instr 3933 @ 0xf5d0 (62928) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3934 @ 0xf5e0 (62944) - UMOV UR7, 0x7f88 ;
 Instr 3935 @ 0xf5f0 (62960) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3936 @ 0xf600 (62976) - UMOV UR8, 0xd33a0a00 ;
 Instr 3937 @ 0xf610 (62992) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3938 @ 0xf620 (63008) - UMOV UR9, 0x7f88 ;
 Instr 3939 @ 0xf630 (63024) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3940 @ 0xf640 (63040) - MOV R20, 0xd7fd1ea0 ;
 Instr 3941 @ 0xf650 (63056) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3942 @ 0xf660 (63072) - MOV R21, 0x7f88 ;
 Instr 3943 @ 0xf670 (63088) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3944 @ 0xf680 (63104) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3945 @ 0xf690 (63120) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 1069 - num instructions 1
 Instr 3946 @ 0xf6a0 (63136) - EXIT ;
Basic block id 1070 - num instructions 3
 Instr 3947 @ 0xf6b0 (63152) - F2I.U64.F64.TRUNC R68, R68 ;
 Instr 3948 @ 0xf6c0 (63168) - STG.E.64.SYS [R4], R68 ;
 Instr 3949 @ 0xf6d0 (63184) - EXIT ;
Basic block id 1071 - num instructions 3
 Instr 3950 @ 0xf6e0 (63200) - F2I.U32.F64.TRUNC R69, R68 ;
 Instr 3951 @ 0xf6f0 (63216) - STG.E.SYS [R4], R69 ;
 Instr 3952 @ 0xf700 (63232) - EXIT ;
Basic block id 1072 - num instructions 1
 Instr 3953 @ 0xf710 (63248) - BRA 0xf710;
inspecting void at::native::unrolled_elementwise_kernel<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(double)#1}, std::array<char*, 2ul>, 8, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1> >(int, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#6}::operator()() const::{lambda(double)#1}, std::array<char*, 2ul>, TrivialOffsetCalculator<1, unsigned int>, TrivialOffsetCalculator<1, unsigned int>, at::native::memory::LoadWithCast<1>, at::native::memory::StoreWithCast<1>) - number basic blocks 1073
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 17 @ 0x110 (272) - LDC.U8 R2, c[0x0][0x17c] ;
Inject count_instr before - Instr 26 @ 0x1a0 (416) - ISETP.GT.AND P0, PT, R18, 0x4, PT ;
Inject count_instr before - Instr 28 @ 0x1c0 (448) - ISETP.GT.AND P0, PT, R18, 0x1, PT ;
Inject count_instr before - Instr 30 @ 0x1e0 (480) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 32 @ 0x200 (512) - ISETP.NE.AND P0, PT, R18, 0x1, PT ;
Inject count_instr before - Instr 34 @ 0x220 (544) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 37 @ 0x250 (592) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 40 @ 0x280 (640) - ISETP.NE.AND P0, PT, R18, 0x2, PT ;
Inject count_instr before - Instr 42 @ 0x2a0 (672) - ISETP.NE.AND P0, PT, R18, 0x3, PT ;
Inject count_instr before - Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R18, 0x4, PT ;
Inject count_instr before - Instr 46 @ 0x2e0 (736) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 49 @ 0x310 (784) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 52 @ 0x340 (832) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 55 @ 0x370 (880) - ISETP.GT.AND P0, PT, R18, 0x6, PT ;
Inject count_instr before - Instr 57 @ 0x390 (912) - ISETP.NE.AND P0, PT, R18, 0x5, PT ;
Inject count_instr before - Instr 59 @ 0x3b0 (944) - ISETP.NE.AND P0, PT, R18, 0x6, PT ;
Inject count_instr before - Instr 61 @ 0x3d0 (976) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 64 @ 0x400 (1024) - LDG.E.U16.SYS R16, [R4] ;
Inject count_instr before - Instr 68 @ 0x440 (1088) - ISETP.NE.AND P0, PT, R18, 0x7, PT ;
Inject count_instr before - Instr 70 @ 0x460 (1120) - ISETP.NE.AND P0, PT, R18, 0x8, PT ;
Inject count_instr before - Instr 72 @ 0x480 (1152) - ISETP.NE.AND P0, PT, R18, 0x9, PT ;
Inject count_instr before - Instr 74 @ 0x4a0 (1184) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 77 @ 0x4d0 (1232) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 81 @ 0x510 (1296) - LDG.E.64.SYS R16, [R4] ;
Inject count_instr before - Instr 83 @ 0x530 (1328) - ISETP.GT.AND P0, PT, R18, 0x18, PT ;
Inject count_instr before - Instr 85 @ 0x550 (1360) - ISETP.GT.AND P0, PT, R18, 0xe, PT ;
Inject count_instr before - Instr 87 @ 0x570 (1392) - ISETP.NE.AND P0, PT, R18, 0xa, PT ;
Inject count_instr before - Instr 89 @ 0x590 (1424) - ISETP.NE.AND P0, PT, R18, 0xb, PT ;
Inject count_instr before - Instr 91 @ 0x5b0 (1456) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 96 @ 0x600 (1536) - LDG.E.64.SYS R16, [R4] ;
Inject count_instr before - Instr 98 @ 0x620 (1568) - ISETP.NE.AND P0, PT, R18, 0xf, PT ;
Inject count_instr before - Instr 100 @ 0x640 (1600) - ISETP.NE.AND P0, PT, R18, 0x17, PT ;
Inject count_instr before - Instr 102 @ 0x660 (1632) - ISETP.NE.AND P0, PT, R18, 0x18, PT ;
Inject count_instr before - Instr 104 @ 0x680 (1664) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 125 @ 0x7d0 (2000) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 140 @ 0x8c0 (2240) - LDG.E.U16.SYS R16, [R4] ;
Inject count_instr before - Instr 144 @ 0x900 (2304) - ISETP.GT.AND P0, PT, R18, 0x1b, PT ;
Inject count_instr before - Instr 146 @ 0x920 (2336) - ISETP.NE.AND P0, PT, R18, 0x19, PT ;
Inject count_instr before - Instr 148 @ 0x940 (2368) - ISETP.NE.AND P0, PT, R18, 0x1a, PT ;
Inject count_instr before - Instr 150 @ 0x960 (2400) - ISETP.NE.AND P0, PT, R18, 0x1b, PT ;
Inject count_instr before - Instr 152 @ 0x980 (2432) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 155 @ 0x9b0 (2480) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 161 @ 0xa10 (2576) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 164 @ 0xa40 (2624) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 165 @ 0xa50 (2640) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 175 @ 0xaf0 (2800) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 181 @ 0xb50 (2896) - BSYNC B1 ;
Inject count_instr before - Instr 185 @ 0xb90 (2960) - BSYNC B0 ;
Inject count_instr before - Instr 188 @ 0xbc0 (3008) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 194 @ 0xc20 (3104) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 197 @ 0xc50 (3152) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 198 @ 0xc60 (3168) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 208 @ 0xd00 (3328) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 214 @ 0xd60 (3424) - BSYNC B1 ;
Inject count_instr before - Instr 218 @ 0xda0 (3488) - BSYNC B0 ;
Inject count_instr before - Instr 221 @ 0xdd0 (3536) - ISETP.NE.AND P0, PT, R18, 0x1c, PT ;
Inject count_instr before - Instr 223 @ 0xdf0 (3568) - ISETP.NE.AND P0, PT, R18, 0x1d, PT ;
Inject count_instr before - Instr 225 @ 0xe10 (3600) - ISETP.NE.AND P0, PT, R18, 0x2c, PT ;
Inject count_instr before - Instr 227 @ 0xe30 (3632) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 233 @ 0xe90 (3728) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 236 @ 0xec0 (3776) - BSYNC B0 ;
Inject count_instr before - Instr 239 @ 0xef0 (3824) - UMOV UR8, 0xd33a2700 ;
Inject count_instr before - Instr 257 @ 0x1010 (4112) - CS2R R16, SRZ ;
Inject count_instr before - Instr 259 @ 0x1030 (4144) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 262 @ 0x1060 (4192) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 264 @ 0x1080 (4224) - IADD3 R0, R22, 0x80, RZ ;
Inject count_instr before - Instr 267 @ 0x10b0 (4272) - IMAD R0, R27, 0x400, R0 ;
Inject count_instr before - Instr 273 @ 0x1110 (4368) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 276 @ 0x1140 (4416) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 278 @ 0x1160 (4448) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 280 @ 0x1180 (4480) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 282 @ 0x11a0 (4512) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 285 @ 0x11d0 (4560) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 288 @ 0x1200 (4608) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 290 @ 0x1220 (4640) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 292 @ 0x1240 (4672) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 294 @ 0x1260 (4704) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 297 @ 0x1290 (4752) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 300 @ 0x12c0 (4800) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 303 @ 0x12f0 (4848) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 305 @ 0x1310 (4880) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 307 @ 0x1330 (4912) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 309 @ 0x1350 (4944) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 312 @ 0x1380 (4992) - LDG.E.U16.SYS R24, [R4] ;
Inject count_instr before - Instr 316 @ 0x13c0 (5056) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 318 @ 0x13e0 (5088) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 320 @ 0x1400 (5120) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 322 @ 0x1420 (5152) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 325 @ 0x1450 (5200) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 329 @ 0x1490 (5264) - LDG.E.64.SYS R24, [R4] ;
Inject count_instr before - Instr 331 @ 0x14b0 (5296) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 334 @ 0x14e0 (5344) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 336 @ 0x1500 (5376) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 338 @ 0x1520 (5408) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 340 @ 0x1540 (5440) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 345 @ 0x1590 (5520) - LDG.E.64.SYS R24, [R4] ;
Inject count_instr before - Instr 347 @ 0x15b0 (5552) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 349 @ 0x15d0 (5584) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 351 @ 0x15f0 (5616) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 353 @ 0x1610 (5648) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 374 @ 0x1760 (5984) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 388 @ 0x1840 (6208) - LDG.E.U16.SYS R24, [R4] ;
Inject count_instr before - Instr 392 @ 0x1880 (6272) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 394 @ 0x18a0 (6304) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 396 @ 0x18c0 (6336) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 398 @ 0x18e0 (6368) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 400 @ 0x1900 (6400) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 403 @ 0x1930 (6448) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 409 @ 0x1990 (6544) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 412 @ 0x19c0 (6592) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 413 @ 0x19d0 (6608) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 423 @ 0x1a70 (6768) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 429 @ 0x1ad0 (6864) - BSYNC B1 ;
Inject count_instr before - Instr 433 @ 0x1b10 (6928) - BSYNC B0 ;
Inject count_instr before - Instr 436 @ 0x1b40 (6976) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 442 @ 0x1ba0 (7072) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 445 @ 0x1bd0 (7120) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 446 @ 0x1be0 (7136) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 456 @ 0x1c80 (7296) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 462 @ 0x1ce0 (7392) - BSYNC B1 ;
Inject count_instr before - Instr 466 @ 0x1d20 (7456) - BSYNC B0 ;
Inject count_instr before - Instr 469 @ 0x1d50 (7504) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 471 @ 0x1d70 (7536) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 473 @ 0x1d90 (7568) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 475 @ 0x1db0 (7600) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 481 @ 0x1e10 (7696) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 484 @ 0x1e40 (7744) - BSYNC B0 ;
Inject count_instr before - Instr 487 @ 0x1e70 (7792) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 505 @ 0x1f90 (8080) - CS2R R24, SRZ ;
Inject count_instr before - Instr 507 @ 0x1fb0 (8112) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 510 @ 0x1fe0 (8160) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 512 @ 0x2000 (8192) - IADD3 R0, R22, 0x100, RZ ;
Inject count_instr before - Instr 515 @ 0x2030 (8240) - IMAD R0, R27, 0x400, R0 ;
Inject count_instr before - Instr 521 @ 0x2090 (8336) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 524 @ 0x20c0 (8384) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 526 @ 0x20e0 (8416) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 528 @ 0x2100 (8448) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 530 @ 0x2120 (8480) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 533 @ 0x2150 (8528) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 536 @ 0x2180 (8576) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 538 @ 0x21a0 (8608) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 540 @ 0x21c0 (8640) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 542 @ 0x21e0 (8672) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 545 @ 0x2210 (8720) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 548 @ 0x2240 (8768) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 551 @ 0x2270 (8816) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 553 @ 0x2290 (8848) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 555 @ 0x22b0 (8880) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 557 @ 0x22d0 (8912) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 560 @ 0x2300 (8960) - LDG.E.U16.SYS R28, [R4] ;
Inject count_instr before - Instr 564 @ 0x2340 (9024) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 566 @ 0x2360 (9056) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 568 @ 0x2380 (9088) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 570 @ 0x23a0 (9120) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 573 @ 0x23d0 (9168) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 577 @ 0x2410 (9232) - LDG.E.64.SYS R28, [R4] ;
Inject count_instr before - Instr 579 @ 0x2430 (9264) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 582 @ 0x2460 (9312) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 584 @ 0x2480 (9344) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 586 @ 0x24a0 (9376) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 588 @ 0x24c0 (9408) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 593 @ 0x2510 (9488) - LDG.E.64.SYS R28, [R4] ;
Inject count_instr before - Instr 595 @ 0x2530 (9520) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 597 @ 0x2550 (9552) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 599 @ 0x2570 (9584) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 601 @ 0x2590 (9616) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 622 @ 0x26e0 (9952) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 636 @ 0x27c0 (10176) - LDG.E.U16.SYS R28, [R4] ;
Inject count_instr before - Instr 640 @ 0x2800 (10240) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 642 @ 0x2820 (10272) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 644 @ 0x2840 (10304) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 646 @ 0x2860 (10336) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 648 @ 0x2880 (10368) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 651 @ 0x28b0 (10416) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 657 @ 0x2910 (10512) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 660 @ 0x2940 (10560) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 661 @ 0x2950 (10576) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 671 @ 0x29f0 (10736) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 677 @ 0x2a50 (10832) - BSYNC B1 ;
Inject count_instr before - Instr 681 @ 0x2a90 (10896) - BSYNC B0 ;
Inject count_instr before - Instr 684 @ 0x2ac0 (10944) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 690 @ 0x2b20 (11040) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 693 @ 0x2b50 (11088) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 694 @ 0x2b60 (11104) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 704 @ 0x2c00 (11264) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 710 @ 0x2c60 (11360) - BSYNC B1 ;
Inject count_instr before - Instr 714 @ 0x2ca0 (11424) - BSYNC B0 ;
Inject count_instr before - Instr 717 @ 0x2cd0 (11472) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 719 @ 0x2cf0 (11504) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 721 @ 0x2d10 (11536) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 723 @ 0x2d30 (11568) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 729 @ 0x2d90 (11664) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 732 @ 0x2dc0 (11712) - BSYNC B0 ;
Inject count_instr before - Instr 735 @ 0x2df0 (11760) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 753 @ 0x2f10 (12048) - CS2R R28, SRZ ;
Inject count_instr before - Instr 755 @ 0x2f30 (12080) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 758 @ 0x2f60 (12128) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 760 @ 0x2f80 (12160) - IADD3 R0, R22, 0x180, RZ ;
Inject count_instr before - Instr 763 @ 0x2fb0 (12208) - IMAD R0, R27, 0x400, R0 ;
Inject count_instr before - Instr 769 @ 0x3010 (12304) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 772 @ 0x3040 (12352) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 774 @ 0x3060 (12384) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 776 @ 0x3080 (12416) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 778 @ 0x30a0 (12448) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 781 @ 0x30d0 (12496) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 784 @ 0x3100 (12544) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 786 @ 0x3120 (12576) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 788 @ 0x3140 (12608) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 790 @ 0x3160 (12640) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 793 @ 0x3190 (12688) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 796 @ 0x31c0 (12736) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 799 @ 0x31f0 (12784) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 801 @ 0x3210 (12816) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 803 @ 0x3230 (12848) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 805 @ 0x3250 (12880) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 808 @ 0x3280 (12928) - LDG.E.U16.SYS R36, [R4] ;
Inject count_instr before - Instr 812 @ 0x32c0 (12992) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 814 @ 0x32e0 (13024) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 816 @ 0x3300 (13056) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 818 @ 0x3320 (13088) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 821 @ 0x3350 (13136) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 825 @ 0x3390 (13200) - LDG.E.64.SYS R36, [R4] ;
Inject count_instr before - Instr 827 @ 0x33b0 (13232) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 830 @ 0x33e0 (13280) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 832 @ 0x3400 (13312) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 834 @ 0x3420 (13344) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 836 @ 0x3440 (13376) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 841 @ 0x3490 (13456) - LDG.E.64.SYS R36, [R4] ;
Inject count_instr before - Instr 843 @ 0x34b0 (13488) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 845 @ 0x34d0 (13520) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 847 @ 0x34f0 (13552) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 849 @ 0x3510 (13584) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 870 @ 0x3660 (13920) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 884 @ 0x3740 (14144) - LDG.E.U16.SYS R36, [R4] ;
Inject count_instr before - Instr 888 @ 0x3780 (14208) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 890 @ 0x37a0 (14240) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 892 @ 0x37c0 (14272) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 894 @ 0x37e0 (14304) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 896 @ 0x3800 (14336) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 899 @ 0x3830 (14384) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 905 @ 0x3890 (14480) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 908 @ 0x38c0 (14528) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 909 @ 0x38d0 (14544) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 919 @ 0x3970 (14704) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 925 @ 0x39d0 (14800) - BSYNC B1 ;
Inject count_instr before - Instr 929 @ 0x3a10 (14864) - BSYNC B0 ;
Inject count_instr before - Instr 932 @ 0x3a40 (14912) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 938 @ 0x3aa0 (15008) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 941 @ 0x3ad0 (15056) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 942 @ 0x3ae0 (15072) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 952 @ 0x3b80 (15232) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 958 @ 0x3be0 (15328) - BSYNC B1 ;
Inject count_instr before - Instr 962 @ 0x3c20 (15392) - BSYNC B0 ;
Inject count_instr before - Instr 965 @ 0x3c50 (15440) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 967 @ 0x3c70 (15472) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 969 @ 0x3c90 (15504) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 971 @ 0x3cb0 (15536) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 977 @ 0x3d10 (15632) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 980 @ 0x3d40 (15680) - BSYNC B0 ;
Inject count_instr before - Instr 983 @ 0x3d70 (15728) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1001 @ 0x3e90 (16016) - CS2R R36, SRZ ;
Inject count_instr before - Instr 1003 @ 0x3eb0 (16048) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1006 @ 0x3ee0 (16096) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1008 @ 0x3f00 (16128) - IADD3 R0, R22, 0x200, RZ ;
Inject count_instr before - Instr 1011 @ 0x3f30 (16176) - IMAD R0, R27, 0x400, R0 ;
Inject count_instr before - Instr 1017 @ 0x3f90 (16272) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1020 @ 0x3fc0 (16320) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1022 @ 0x3fe0 (16352) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 1024 @ 0x4000 (16384) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1026 @ 0x4020 (16416) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 1029 @ 0x4050 (16464) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1032 @ 0x4080 (16512) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 1034 @ 0x40a0 (16544) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 1036 @ 0x40c0 (16576) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 1038 @ 0x40e0 (16608) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1041 @ 0x4110 (16656) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1044 @ 0x4140 (16704) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1047 @ 0x4170 (16752) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1049 @ 0x4190 (16784) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 1051 @ 0x41b0 (16816) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1053 @ 0x41d0 (16848) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1056 @ 0x4200 (16896) - LDG.E.U16.SYS R44, [R4] ;
Inject count_instr before - Instr 1060 @ 0x4240 (16960) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1062 @ 0x4260 (16992) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1064 @ 0x4280 (17024) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1066 @ 0x42a0 (17056) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1069 @ 0x42d0 (17104) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1073 @ 0x4310 (17168) - LDG.E.64.SYS R44, [R4] ;
Inject count_instr before - Instr 1075 @ 0x4330 (17200) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1078 @ 0x4360 (17248) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1080 @ 0x4380 (17280) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1082 @ 0x43a0 (17312) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1084 @ 0x43c0 (17344) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1089 @ 0x4410 (17424) - LDG.E.64.SYS R44, [R4] ;
Inject count_instr before - Instr 1091 @ 0x4430 (17456) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1093 @ 0x4450 (17488) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1095 @ 0x4470 (17520) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1097 @ 0x4490 (17552) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 1118 @ 0x45e0 (17888) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1132 @ 0x46c0 (18112) - LDG.E.U16.SYS R44, [R4] ;
Inject count_instr before - Instr 1136 @ 0x4700 (18176) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1138 @ 0x4720 (18208) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1140 @ 0x4740 (18240) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1142 @ 0x4760 (18272) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1144 @ 0x4780 (18304) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1147 @ 0x47b0 (18352) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1153 @ 0x4810 (18448) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1156 @ 0x4840 (18496) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1157 @ 0x4850 (18512) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1167 @ 0x48f0 (18672) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1173 @ 0x4950 (18768) - BSYNC B1 ;
Inject count_instr before - Instr 1177 @ 0x4990 (18832) - BSYNC B0 ;
Inject count_instr before - Instr 1180 @ 0x49c0 (18880) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 1186 @ 0x4a20 (18976) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 1189 @ 0x4a50 (19024) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1190 @ 0x4a60 (19040) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1200 @ 0x4b00 (19200) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1206 @ 0x4b60 (19296) - BSYNC B1 ;
Inject count_instr before - Instr 1210 @ 0x4ba0 (19360) - BSYNC B0 ;
Inject count_instr before - Instr 1213 @ 0x4bd0 (19408) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1215 @ 0x4bf0 (19440) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1217 @ 0x4c10 (19472) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1219 @ 0x4c30 (19504) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1225 @ 0x4c90 (19600) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1228 @ 0x4cc0 (19648) - BSYNC B0 ;
Inject count_instr before - Instr 1231 @ 0x4cf0 (19696) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1249 @ 0x4e10 (19984) - CS2R R44, SRZ ;
Inject count_instr before - Instr 1251 @ 0x4e30 (20016) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1254 @ 0x4e60 (20064) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1256 @ 0x4e80 (20096) - IADD3 R0, R22, 0x280, RZ ;
Inject count_instr before - Instr 1259 @ 0x4eb0 (20144) - IMAD R0, R27, 0x400, R0 ;
Inject count_instr before - Instr 1265 @ 0x4f10 (20240) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1268 @ 0x4f40 (20288) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1270 @ 0x4f60 (20320) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 1272 @ 0x4f80 (20352) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1274 @ 0x4fa0 (20384) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 1277 @ 0x4fd0 (20432) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1280 @ 0x5000 (20480) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 1282 @ 0x5020 (20512) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 1284 @ 0x5040 (20544) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 1286 @ 0x5060 (20576) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1289 @ 0x5090 (20624) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1292 @ 0x50c0 (20672) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1295 @ 0x50f0 (20720) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1297 @ 0x5110 (20752) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 1299 @ 0x5130 (20784) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1301 @ 0x5150 (20816) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1304 @ 0x5180 (20864) - LDG.E.U16.SYS R52, [R4] ;
Inject count_instr before - Instr 1308 @ 0x51c0 (20928) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1310 @ 0x51e0 (20960) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1312 @ 0x5200 (20992) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1314 @ 0x5220 (21024) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1317 @ 0x5250 (21072) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1321 @ 0x5290 (21136) - LDG.E.64.SYS R52, [R4] ;
Inject count_instr before - Instr 1323 @ 0x52b0 (21168) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1326 @ 0x52e0 (21216) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1328 @ 0x5300 (21248) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1330 @ 0x5320 (21280) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1332 @ 0x5340 (21312) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1337 @ 0x5390 (21392) - LDG.E.64.SYS R52, [R4] ;
Inject count_instr before - Instr 1339 @ 0x53b0 (21424) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1341 @ 0x53d0 (21456) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1343 @ 0x53f0 (21488) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1345 @ 0x5410 (21520) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 1366 @ 0x5560 (21856) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1380 @ 0x5640 (22080) - LDG.E.U16.SYS R52, [R4] ;
Inject count_instr before - Instr 1384 @ 0x5680 (22144) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1386 @ 0x56a0 (22176) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1388 @ 0x56c0 (22208) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1390 @ 0x56e0 (22240) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1392 @ 0x5700 (22272) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1395 @ 0x5730 (22320) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1401 @ 0x5790 (22416) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1404 @ 0x57c0 (22464) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1405 @ 0x57d0 (22480) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1415 @ 0x5870 (22640) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1421 @ 0x58d0 (22736) - BSYNC B1 ;
Inject count_instr before - Instr 1425 @ 0x5910 (22800) - BSYNC B0 ;
Inject count_instr before - Instr 1428 @ 0x5940 (22848) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 1434 @ 0x59a0 (22944) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 1437 @ 0x59d0 (22992) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1438 @ 0x59e0 (23008) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1448 @ 0x5a80 (23168) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1454 @ 0x5ae0 (23264) - BSYNC B1 ;
Inject count_instr before - Instr 1458 @ 0x5b20 (23328) - BSYNC B0 ;
Inject count_instr before - Instr 1461 @ 0x5b50 (23376) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1463 @ 0x5b70 (23408) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1465 @ 0x5b90 (23440) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1467 @ 0x5bb0 (23472) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1473 @ 0x5c10 (23568) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1476 @ 0x5c40 (23616) - BSYNC B0 ;
Inject count_instr before - Instr 1479 @ 0x5c70 (23664) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1497 @ 0x5d90 (23952) - CS2R R52, SRZ ;
Inject count_instr before - Instr 1499 @ 0x5db0 (23984) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1502 @ 0x5de0 (24032) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1504 @ 0x5e00 (24064) - IADD3 R0, R22, 0x300, RZ ;
Inject count_instr before - Instr 1507 @ 0x5e30 (24112) - IMAD R0, R27, 0x400, R0 ;
Inject count_instr before - Instr 1513 @ 0x5e90 (24208) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1516 @ 0x5ec0 (24256) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1518 @ 0x5ee0 (24288) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 1520 @ 0x5f00 (24320) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1522 @ 0x5f20 (24352) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 1525 @ 0x5f50 (24400) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1528 @ 0x5f80 (24448) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 1530 @ 0x5fa0 (24480) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 1532 @ 0x5fc0 (24512) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 1534 @ 0x5fe0 (24544) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1537 @ 0x6010 (24592) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1540 @ 0x6040 (24640) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1543 @ 0x6070 (24688) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1545 @ 0x6090 (24720) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 1547 @ 0x60b0 (24752) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1549 @ 0x60d0 (24784) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1552 @ 0x6100 (24832) - LDG.E.U16.SYS R60, [R4] ;
Inject count_instr before - Instr 1556 @ 0x6140 (24896) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1558 @ 0x6160 (24928) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1560 @ 0x6180 (24960) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1562 @ 0x61a0 (24992) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1565 @ 0x61d0 (25040) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1569 @ 0x6210 (25104) - LDG.E.64.SYS R60, [R4] ;
Inject count_instr before - Instr 1571 @ 0x6230 (25136) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1574 @ 0x6260 (25184) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1576 @ 0x6280 (25216) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1578 @ 0x62a0 (25248) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1580 @ 0x62c0 (25280) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1585 @ 0x6310 (25360) - LDG.E.64.SYS R60, [R4] ;
Inject count_instr before - Instr 1587 @ 0x6330 (25392) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1589 @ 0x6350 (25424) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1591 @ 0x6370 (25456) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1593 @ 0x6390 (25488) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 1614 @ 0x64e0 (25824) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1628 @ 0x65c0 (26048) - LDG.E.U16.SYS R60, [R4] ;
Inject count_instr before - Instr 1632 @ 0x6600 (26112) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1634 @ 0x6620 (26144) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1636 @ 0x6640 (26176) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1638 @ 0x6660 (26208) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1640 @ 0x6680 (26240) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1643 @ 0x66b0 (26288) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1649 @ 0x6710 (26384) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1652 @ 0x6740 (26432) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1653 @ 0x6750 (26448) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1663 @ 0x67f0 (26608) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1669 @ 0x6850 (26704) - BSYNC B1 ;
Inject count_instr before - Instr 1673 @ 0x6890 (26768) - BSYNC B0 ;
Inject count_instr before - Instr 1676 @ 0x68c0 (26816) - LDG.E.U8.SYS R3, [R4] ;
Inject count_instr before - Instr 1682 @ 0x6920 (26912) - ISETP.NE.AND P0, PT, R3, 0x80, PT ;
Inject count_instr before - Instr 1685 @ 0x6950 (26960) - LOP3.LUT R0, R3.reuse, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1686 @ 0x6960 (26976) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1696 @ 0x6a00 (27136) - FLO.U32 R4, R3 ;
Inject count_instr before - Instr 1702 @ 0x6a60 (27232) - BSYNC B1 ;
Inject count_instr before - Instr 1706 @ 0x6aa0 (27296) - BSYNC B0 ;
Inject count_instr before - Instr 1709 @ 0x6ad0 (27344) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1711 @ 0x6af0 (27376) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1713 @ 0x6b10 (27408) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1715 @ 0x6b30 (27440) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1721 @ 0x6b90 (27536) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1724 @ 0x6bc0 (27584) - BSYNC B0 ;
Inject count_instr before - Instr 1727 @ 0x6bf0 (27632) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1745 @ 0x6d10 (27920) - CS2R R60, SRZ ;
Inject count_instr before - Instr 1747 @ 0x6d30 (27952) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1750 @ 0x6d60 (28000) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1752 @ 0x6d80 (28032) - IADD3 R0, R22, 0x380, RZ ;
Inject count_instr before - Instr 1755 @ 0x6db0 (28080) - IMAD R0, R27, 0x400, R0 ;
Inject count_instr before - Instr 1761 @ 0x6e10 (28176) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1764 @ 0x6e40 (28224) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1766 @ 0x6e60 (28256) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 1768 @ 0x6e80 (28288) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 1770 @ 0x6ea0 (28320) - LDG.E.S8.SYS R4, [R4] ;
Inject count_instr before - Instr 1773 @ 0x6ed0 (28368) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1776 @ 0x6f00 (28416) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 1778 @ 0x6f20 (28448) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 1780 @ 0x6f40 (28480) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 1782 @ 0x6f60 (28512) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1785 @ 0x6f90 (28560) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1788 @ 0x6fc0 (28608) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1791 @ 0x6ff0 (28656) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1793 @ 0x7010 (28688) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 1795 @ 0x7030 (28720) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 1797 @ 0x7050 (28752) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1800 @ 0x7080 (28800) - LDG.E.U16.SYS R68, [R4] ;
Inject count_instr before - Instr 1804 @ 0x70c0 (28864) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 1806 @ 0x70e0 (28896) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 1808 @ 0x7100 (28928) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 1810 @ 0x7120 (28960) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1813 @ 0x7150 (29008) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1817 @ 0x7190 (29072) - LDG.E.64.SYS R68, [R4] ;
Inject count_instr before - Instr 1819 @ 0x71b0 (29104) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 1822 @ 0x71e0 (29152) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 1824 @ 0x7200 (29184) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 1826 @ 0x7220 (29216) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 1828 @ 0x7240 (29248) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1833 @ 0x7290 (29328) - LDG.E.64.SYS R68, [R4] ;
Inject count_instr before - Instr 1835 @ 0x72b0 (29360) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 1837 @ 0x72d0 (29392) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 1839 @ 0x72f0 (29424) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 1841 @ 0x7310 (29456) - LDG.E.U8.SYS R0, [R4] ;
Inject count_instr before - Instr 1862 @ 0x7460 (29792) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1876 @ 0x7540 (30016) - LDG.E.U16.SYS R68, [R4] ;
Inject count_instr before - Instr 1880 @ 0x7580 (30080) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1882 @ 0x75a0 (30112) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 1884 @ 0x75c0 (30144) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 1886 @ 0x75e0 (30176) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 1888 @ 0x7600 (30208) - LDG.E.U16.SYS R4, [R4] ;
Inject count_instr before - Instr 1891 @ 0x7630 (30256) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1897 @ 0x7690 (30352) - ISETP.NE.AND P0, PT, R4, 0x80, PT ;
Inject count_instr before - Instr 1900 @ 0x76c0 (30400) - LOP3.LUT R0, R4, 0x78, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1901 @ 0x76d0 (30416) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1911 @ 0x7770 (30576) - FLO.U32 R3, R2 ;
Inject count_instr before - Instr 1917 @ 0x77d0 (30672) - BSYNC B1 ;
Inject count_instr before - Instr 1921 @ 0x7810 (30736) - BSYNC B0 ;
Inject count_instr before - Instr 1924 @ 0x7840 (30784) - LDG.E.U8.SYS R2, [R4] ;
Inject count_instr before - Instr 1930 @ 0x78a0 (30880) - ISETP.NE.AND P0, PT, R2, 0x80, PT ;
Inject count_instr before - Instr 1933 @ 0x78d0 (30928) - LOP3.LUT R0, R2, 0x7c, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1934 @ 0x78e0 (30944) - BMOV.32.CLEAR RZ, B1 ;
Inject count_instr before - Instr 1944 @ 0x7980 (31104) - FLO.U32 R3, R2 ;
Inject count_instr before - Instr 1950 @ 0x79e0 (31200) - BSYNC B1 ;
Inject count_instr before - Instr 1954 @ 0x7a20 (31264) - BSYNC B0 ;
Inject count_instr before - Instr 1957 @ 0x7a50 (31312) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 1959 @ 0x7a70 (31344) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 1961 @ 0x7a90 (31376) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 1963 @ 0x7ab0 (31408) - LDG.E.U8.SYS R4, [R4] ;
Inject count_instr before - Instr 1969 @ 0x7b10 (31504) - ISETP.NE.AND P0, PT, R4, 0xff, PT ;
Inject count_instr before - Instr 1972 @ 0x7b40 (31552) - BSYNC B0 ;
Inject count_instr before - Instr 1975 @ 0x7b70 (31600) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 1993 @ 0x7c90 (31888) - BRA 0x7cf0 ;
Inject count_instr before - Instr 1994 @ 0x7ca0 (31904) - LDG.E.64.SYS R4, [R4] ;
Inject count_instr before - Instr 1997 @ 0x7cd0 (31952) - LDG.E.SYS R4, [R4] ;
Inject count_instr before - Instr 1999 @ 0x7cf0 (31984) - BSYNC B6 ;
Inject count_instr before - Instr 2002 @ 0x7d20 (32032) - LDC.U8 R2, c[0x0][0x184] ;
Inject count_instr before - Instr 2013 @ 0x7dd0 (32208) - ISETP.GT.AND P0, PT, R23, 0x4, PT ;
Inject count_instr before - Instr 2015 @ 0x7df0 (32240) - ISETP.GT.AND P0, PT, R23, 0x1, PT ;
Inject count_instr before - Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 2019 @ 0x7e30 (32304) - ISETP.NE.AND P0, PT, R23, 0x1, PT ;
Inject count_instr before - Instr 2021 @ 0x7e50 (32336) - F2I.F64.TRUNC R17, R16 ;
Inject count_instr before - Instr 2024 @ 0x7e80 (32384) - F2I.S64.F64.TRUNC R16, R16 ;
Inject count_instr before - Instr 2028 @ 0x7ec0 (32448) - ISETP.NE.AND P0, PT, R23, 0x2, PT ;
Inject count_instr before - Instr 2030 @ 0x7ee0 (32480) - ISETP.NE.AND P0, PT, R23, 0x3, PT ;
Inject count_instr before - Instr 2032 @ 0x7f00 (32512) - ISETP.NE.AND P0, PT, R23, 0x4, PT ;
Inject count_instr before - Instr 2034 @ 0x7f20 (32544) - F2I.S64.F64.TRUNC R16, R16 ;
Inject count_instr before - Instr 2037 @ 0x7f50 (32592) - F2I.F64.TRUNC R17, R16 ;
Inject count_instr before - Instr 2040 @ 0x7f80 (32640) - F2I.F64.TRUNC R17, R16 ;
Inject count_instr before - Instr 2043 @ 0x7fb0 (32688) - ISETP.GT.AND P0, PT, R23, 0x6, PT ;
Inject count_instr before - Instr 2045 @ 0x7fd0 (32720) - ISETP.NE.AND P0, PT, R23, 0x5, PT ;
Inject count_instr before - Instr 2047 @ 0x7ff0 (32752) - ISETP.NE.AND P0, PT, R23, 0x6, PT ;
Inject count_instr before - Instr 2049 @ 0x8010 (32784) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 2051 @ 0x8030 (32816) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2054 @ 0x8060 (32864) - ISETP.NE.AND P0, PT, R23, 0x7, PT ;
Inject count_instr before - Instr 2056 @ 0x8080 (32896) - ISETP.NE.AND P0, PT, R23, 0x8, PT ;
Inject count_instr before - Instr 2058 @ 0x80a0 (32928) - ISETP.NE.AND P0, PT, R23, 0x9, PT ;
Inject count_instr before - Instr 2060 @ 0x80c0 (32960) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 2063 @ 0x80f0 (33008) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2067 @ 0x8130 (33072) - STG.E.64.SYS [R4], R16 ;
Inject count_instr before - Instr 2069 @ 0x8150 (33104) - ISETP.GT.AND P0, PT, R23, 0x18, PT ;
Inject count_instr before - Instr 2071 @ 0x8170 (33136) - ISETP.GT.AND P0, PT, R23, 0xe, PT ;
Inject count_instr before - Instr 2073 @ 0x8190 (33168) - ISETP.NE.AND P0, PT, R23, 0xa, PT ;
Inject count_instr before - Instr 2075 @ 0x81b0 (33200) - ISETP.NE.AND P0, PT, R23, 0xb, PT ;
Inject count_instr before - Instr 2077 @ 0x81d0 (33232) - DSETP.NEU.AND P0, PT, R16, RZ, PT ;
Inject count_instr before - Instr 2081 @ 0x8210 (33296) - CS2R R18, SRZ ;
Inject count_instr before - Instr 2084 @ 0x8240 (33344) - ISETP.NE.AND P0, PT, R23, 0xf, PT ;
Inject count_instr before - Instr 2086 @ 0x8260 (33376) - ISETP.NE.AND P0, PT, R23, 0x17, PT ;
Inject count_instr before - Instr 2088 @ 0x8280 (33408) - ISETP.NE.AND P0, PT, R23, 0x18, PT ;
Inject count_instr before - Instr 2090 @ 0x82a0 (33440) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2097 @ 0x8310 (33552) - @P0 BRA 0x8390 ;
Inject count_instr before - Instr 2098 @ 0x8320 (33568) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
Inject count_instr before - Instr 2105 @ 0x8390 (33680) - BSYNC B0 ;
Inject count_instr before - Instr 2109 @ 0x83d0 (33744) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2114 @ 0x8420 (33824) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
Inject count_instr before - Instr 2122 @ 0x84a0 (33952) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2125 @ 0x84d0 (34000) - BSYNC B0 ;
Inject count_instr before - Instr 2131 @ 0x8530 (34096) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 2139 @ 0x85b0 (34224) - ISETP.GT.AND P0, PT, R23, 0x1b, PT ;
Inject count_instr before - Instr 2141 @ 0x85d0 (34256) - ISETP.NE.AND P0, PT, R23, 0x19, PT ;
Inject count_instr before - Instr 2143 @ 0x85f0 (34288) - ISETP.NE.AND P0, PT, R23, 0x1a, PT ;
Inject count_instr before - Instr 2145 @ 0x8610 (34320) - ISETP.NE.AND P0, PT, R23, 0x1b, PT ;
Inject count_instr before - Instr 2147 @ 0x8630 (34352) - F2I.U32.F64.TRUNC R17, R16 ;
Inject count_instr before - Instr 2150 @ 0x8660 (34400) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2156 @ 0x86c0 (34496) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
Inject count_instr before - Instr 2158 @ 0x86e0 (34528) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2163 @ 0x8730 (34608) - FADD R0, R7, 8192 ;
Inject count_instr before - Instr 2168 @ 0x8780 (34688) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2172 @ 0x87c0 (34752) - BSYNC B0 ;
Inject count_instr before - Instr 2175 @ 0x87f0 (34800) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2181 @ 0x8850 (34896) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
Inject count_instr before - Instr 2183 @ 0x8870 (34928) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2188 @ 0x88c0 (35008) - FADD R0, R7, 64 ;
Inject count_instr before - Instr 2193 @ 0x8910 (35088) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2197 @ 0x8950 (35152) - BSYNC B0 ;
Inject count_instr before - Instr 2200 @ 0x8980 (35200) - ISETP.NE.AND P0, PT, R23, 0x1c, PT ;
Inject count_instr before - Instr 2202 @ 0x89a0 (35232) - ISETP.NE.AND P0, PT, R23, 0x1d, PT ;
Inject count_instr before - Instr 2204 @ 0x89c0 (35264) - ISETP.NE.AND P0, PT, R23, 0x2c, PT ;
Inject count_instr before - Instr 2206 @ 0x89e0 (35296) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
Inject count_instr before - Instr 2221 @ 0x8ad0 (35536) - UMOV UR6, 0xd33a2700 ;
Inject count_instr before - Instr 2239 @ 0x8bf0 (35824) - BRA 0x8c50 ;
Inject count_instr before - Instr 2240 @ 0x8c00 (35840) - F2I.U64.F64.TRUNC R16, R16 ;
Inject count_instr before - Instr 2243 @ 0x8c30 (35888) - F2I.U32.F64.TRUNC R17, R16 ;
Inject count_instr before - Instr 2245 @ 0x8c50 (35920) - ISETP.GE.AND P0, PT, R26, R71, PT ;
Inject count_instr before - Instr 2247 @ 0x8c70 (35952) - IMAD R16, R27, 0x400, R26 ;
Inject count_instr before - Instr 2254 @ 0x8ce0 (36064) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 2257 @ 0x8d10 (36112) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2259 @ 0x8d30 (36144) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 2261 @ 0x8d50 (36176) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2263 @ 0x8d70 (36208) - F2I.F64.TRUNC R25, R24 ;
Inject count_instr before - Instr 2266 @ 0x8da0 (36256) - F2I.S64.F64.TRUNC R24, R24 ;
Inject count_instr before - Instr 2270 @ 0x8de0 (36320) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 2272 @ 0x8e00 (36352) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 2274 @ 0x8e20 (36384) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 2276 @ 0x8e40 (36416) - F2I.S64.F64.TRUNC R24, R24 ;
Inject count_instr before - Instr 2279 @ 0x8e70 (36464) - F2I.F64.TRUNC R25, R24 ;
Inject count_instr before - Instr 2282 @ 0x8ea0 (36512) - F2I.F64.TRUNC R25, R24 ;
Inject count_instr before - Instr 2285 @ 0x8ed0 (36560) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2287 @ 0x8ef0 (36592) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 2289 @ 0x8f10 (36624) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2291 @ 0x8f30 (36656) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 2293 @ 0x8f50 (36688) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2296 @ 0x8f80 (36736) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 2298 @ 0x8fa0 (36768) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 2300 @ 0x8fc0 (36800) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 2302 @ 0x8fe0 (36832) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 2305 @ 0x9010 (36880) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2309 @ 0x9050 (36944) - STG.E.64.SYS [R4], R24 ;
Inject count_instr before - Instr 2311 @ 0x9070 (36976) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 2314 @ 0x90a0 (37024) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 2316 @ 0x90c0 (37056) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 2318 @ 0x90e0 (37088) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 2320 @ 0x9100 (37120) - DSETP.NEU.AND P0, PT, R24, RZ, PT ;
Inject count_instr before - Instr 2324 @ 0x9140 (37184) - CS2R R26, SRZ ;
Inject count_instr before - Instr 2327 @ 0x9170 (37232) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 2329 @ 0x9190 (37264) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 2331 @ 0x91b0 (37296) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 2333 @ 0x91d0 (37328) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2340 @ 0x9240 (37440) - @P0 BRA 0x92c0 ;
Inject count_instr before - Instr 2341 @ 0x9250 (37456) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
Inject count_instr before - Instr 2348 @ 0x92c0 (37568) - BSYNC B0 ;
Inject count_instr before - Instr 2352 @ 0x9300 (37632) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2357 @ 0x9350 (37712) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
Inject count_instr before - Instr 2365 @ 0x93d0 (37840) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2368 @ 0x9400 (37888) - BSYNC B0 ;
Inject count_instr before - Instr 2374 @ 0x9460 (37984) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 2382 @ 0x94e0 (38112) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2384 @ 0x9500 (38144) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 2386 @ 0x9520 (38176) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 2388 @ 0x9540 (38208) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2390 @ 0x9560 (38240) - F2I.U32.F64.TRUNC R25, R24 ;
Inject count_instr before - Instr 2393 @ 0x9590 (38288) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2399 @ 0x95f0 (38384) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
Inject count_instr before - Instr 2401 @ 0x9610 (38416) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2406 @ 0x9660 (38496) - FADD R0, R7, 8192 ;
Inject count_instr before - Instr 2411 @ 0x96b0 (38576) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2415 @ 0x96f0 (38640) - BSYNC B0 ;
Inject count_instr before - Instr 2418 @ 0x9720 (38688) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2424 @ 0x9780 (38784) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
Inject count_instr before - Instr 2426 @ 0x97a0 (38816) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2431 @ 0x97f0 (38896) - FADD R0, R7, 64 ;
Inject count_instr before - Instr 2436 @ 0x9840 (38976) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2440 @ 0x9880 (39040) - BSYNC B0 ;
Inject count_instr before - Instr 2443 @ 0x98b0 (39088) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 2445 @ 0x98d0 (39120) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 2447 @ 0x98f0 (39152) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 2449 @ 0x9910 (39184) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
Inject count_instr before - Instr 2464 @ 0x9a00 (39424) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 2482 @ 0x9b20 (39712) - BRA 0x9b80 ;
Inject count_instr before - Instr 2483 @ 0x9b30 (39728) - F2I.U64.F64.TRUNC R24, R24 ;
Inject count_instr before - Instr 2486 @ 0x9b60 (39776) - F2I.U32.F64.TRUNC R25, R24 ;
Inject count_instr before - Instr 2488 @ 0x9b80 (39808) - IADD3 R0, R22, 0x100, RZ ;
Inject count_instr before - Instr 2491 @ 0x9bb0 (39856) - IADD3 R0, R16, 0x80, RZ ;
Inject count_instr before - Instr 2498 @ 0x9c20 (39968) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 2501 @ 0x9c50 (40016) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2503 @ 0x9c70 (40048) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 2505 @ 0x9c90 (40080) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2507 @ 0x9cb0 (40112) - F2I.F64.TRUNC R29, R28 ;
Inject count_instr before - Instr 2510 @ 0x9ce0 (40160) - F2I.S64.F64.TRUNC R28, R28 ;
Inject count_instr before - Instr 2514 @ 0x9d20 (40224) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 2516 @ 0x9d40 (40256) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 2518 @ 0x9d60 (40288) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 2520 @ 0x9d80 (40320) - F2I.S64.F64.TRUNC R28, R28 ;
Inject count_instr before - Instr 2523 @ 0x9db0 (40368) - F2I.F64.TRUNC R29, R28 ;
Inject count_instr before - Instr 2526 @ 0x9de0 (40416) - F2I.F64.TRUNC R29, R28 ;
Inject count_instr before - Instr 2529 @ 0x9e10 (40464) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2531 @ 0x9e30 (40496) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 2533 @ 0x9e50 (40528) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2535 @ 0x9e70 (40560) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 2537 @ 0x9e90 (40592) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2540 @ 0x9ec0 (40640) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 2542 @ 0x9ee0 (40672) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 2544 @ 0x9f00 (40704) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 2546 @ 0x9f20 (40736) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 2549 @ 0x9f50 (40784) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2553 @ 0x9f90 (40848) - STG.E.64.SYS [R4], R28 ;
Inject count_instr before - Instr 2555 @ 0x9fb0 (40880) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 2558 @ 0x9fe0 (40928) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 2560 @ 0xa000 (40960) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 2562 @ 0xa020 (40992) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 2564 @ 0xa040 (41024) - DSETP.NEU.AND P0, PT, R28, RZ, PT ;
Inject count_instr before - Instr 2568 @ 0xa080 (41088) - CS2R R30, SRZ ;
Inject count_instr before - Instr 2571 @ 0xa0b0 (41136) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 2573 @ 0xa0d0 (41168) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 2575 @ 0xa0f0 (41200) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 2577 @ 0xa110 (41232) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2584 @ 0xa180 (41344) - @P0 BRA 0xa200 ;
Inject count_instr before - Instr 2585 @ 0xa190 (41360) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
Inject count_instr before - Instr 2592 @ 0xa200 (41472) - BSYNC B0 ;
Inject count_instr before - Instr 2596 @ 0xa240 (41536) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2601 @ 0xa290 (41616) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
Inject count_instr before - Instr 2609 @ 0xa310 (41744) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2612 @ 0xa340 (41792) - BSYNC B0 ;
Inject count_instr before - Instr 2618 @ 0xa3a0 (41888) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 2626 @ 0xa420 (42016) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2628 @ 0xa440 (42048) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 2630 @ 0xa460 (42080) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 2632 @ 0xa480 (42112) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2634 @ 0xa4a0 (42144) - F2I.U32.F64.TRUNC R29, R28 ;
Inject count_instr before - Instr 2637 @ 0xa4d0 (42192) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2643 @ 0xa530 (42288) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
Inject count_instr before - Instr 2645 @ 0xa550 (42320) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2650 @ 0xa5a0 (42400) - FADD R0, R7, 8192 ;
Inject count_instr before - Instr 2655 @ 0xa5f0 (42480) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2659 @ 0xa630 (42544) - BSYNC B0 ;
Inject count_instr before - Instr 2662 @ 0xa660 (42592) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2668 @ 0xa6c0 (42688) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
Inject count_instr before - Instr 2670 @ 0xa6e0 (42720) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2675 @ 0xa730 (42800) - FADD R0, R7, 64 ;
Inject count_instr before - Instr 2680 @ 0xa780 (42880) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2684 @ 0xa7c0 (42944) - BSYNC B0 ;
Inject count_instr before - Instr 2687 @ 0xa7f0 (42992) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 2689 @ 0xa810 (43024) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 2691 @ 0xa830 (43056) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 2693 @ 0xa850 (43088) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
Inject count_instr before - Instr 2708 @ 0xa940 (43328) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 2726 @ 0xaa60 (43616) - BRA 0xaac0 ;
Inject count_instr before - Instr 2727 @ 0xaa70 (43632) - F2I.U64.F64.TRUNC R28, R28 ;
Inject count_instr before - Instr 2730 @ 0xaaa0 (43680) - F2I.U32.F64.TRUNC R29, R28 ;
Inject count_instr before - Instr 2732 @ 0xaac0 (43712) - IADD3 R0, R22, 0x180, RZ ;
Inject count_instr before - Instr 2735 @ 0xaaf0 (43760) - IADD3 R0, R16, 0x100, RZ ;
Inject count_instr before - Instr 2742 @ 0xab60 (43872) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 2745 @ 0xab90 (43920) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2747 @ 0xabb0 (43952) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 2749 @ 0xabd0 (43984) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2751 @ 0xabf0 (44016) - F2I.F64.TRUNC R37, R36 ;
Inject count_instr before - Instr 2754 @ 0xac20 (44064) - F2I.S64.F64.TRUNC R36, R36 ;
Inject count_instr before - Instr 2758 @ 0xac60 (44128) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 2760 @ 0xac80 (44160) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 2762 @ 0xaca0 (44192) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 2764 @ 0xacc0 (44224) - F2I.S64.F64.TRUNC R36, R36 ;
Inject count_instr before - Instr 2767 @ 0xacf0 (44272) - F2I.F64.TRUNC R37, R36 ;
Inject count_instr before - Instr 2770 @ 0xad20 (44320) - F2I.F64.TRUNC R37, R36 ;
Inject count_instr before - Instr 2773 @ 0xad50 (44368) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2775 @ 0xad70 (44400) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 2777 @ 0xad90 (44432) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 2779 @ 0xadb0 (44464) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 2781 @ 0xadd0 (44496) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2784 @ 0xae00 (44544) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 2786 @ 0xae20 (44576) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 2788 @ 0xae40 (44608) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 2790 @ 0xae60 (44640) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 2793 @ 0xae90 (44688) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 2797 @ 0xaed0 (44752) - STG.E.64.SYS [R4], R36 ;
Inject count_instr before - Instr 2799 @ 0xaef0 (44784) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 2802 @ 0xaf20 (44832) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 2804 @ 0xaf40 (44864) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 2806 @ 0xaf60 (44896) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 2808 @ 0xaf80 (44928) - DSETP.NEU.AND P0, PT, R36, RZ, PT ;
Inject count_instr before - Instr 2812 @ 0xafc0 (44992) - CS2R R38, SRZ ;
Inject count_instr before - Instr 2815 @ 0xaff0 (45040) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 2817 @ 0xb010 (45072) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 2819 @ 0xb030 (45104) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 2821 @ 0xb050 (45136) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2828 @ 0xb0c0 (45248) - @P0 BRA 0xb140 ;
Inject count_instr before - Instr 2829 @ 0xb0d0 (45264) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
Inject count_instr before - Instr 2836 @ 0xb140 (45376) - BSYNC B0 ;
Inject count_instr before - Instr 2840 @ 0xb180 (45440) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2845 @ 0xb1d0 (45520) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
Inject count_instr before - Instr 2853 @ 0xb250 (45648) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 2856 @ 0xb280 (45696) - BSYNC B0 ;
Inject count_instr before - Instr 2862 @ 0xb2e0 (45792) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 2870 @ 0xb360 (45920) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2872 @ 0xb380 (45952) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 2874 @ 0xb3a0 (45984) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 2876 @ 0xb3c0 (46016) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 2878 @ 0xb3e0 (46048) - F2I.U32.F64.TRUNC R37, R36 ;
Inject count_instr before - Instr 2881 @ 0xb410 (46096) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2887 @ 0xb470 (46192) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
Inject count_instr before - Instr 2889 @ 0xb490 (46224) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2894 @ 0xb4e0 (46304) - FADD R0, R7, 8192 ;
Inject count_instr before - Instr 2899 @ 0xb530 (46384) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2903 @ 0xb570 (46448) - BSYNC B0 ;
Inject count_instr before - Instr 2906 @ 0xb5a0 (46496) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2912 @ 0xb600 (46592) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
Inject count_instr before - Instr 2914 @ 0xb620 (46624) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2919 @ 0xb670 (46704) - FADD R0, R7, 64 ;
Inject count_instr before - Instr 2924 @ 0xb6c0 (46784) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2928 @ 0xb700 (46848) - BSYNC B0 ;
Inject count_instr before - Instr 2931 @ 0xb730 (46896) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 2933 @ 0xb750 (46928) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 2935 @ 0xb770 (46960) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 2937 @ 0xb790 (46992) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
Inject count_instr before - Instr 2952 @ 0xb880 (47232) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 2970 @ 0xb9a0 (47520) - BRA 0xba00 ;
Inject count_instr before - Instr 2971 @ 0xb9b0 (47536) - F2I.U64.F64.TRUNC R36, R36 ;
Inject count_instr before - Instr 2974 @ 0xb9e0 (47584) - F2I.U32.F64.TRUNC R37, R36 ;
Inject count_instr before - Instr 2976 @ 0xba00 (47616) - IADD3 R0, R22, 0x200, RZ ;
Inject count_instr before - Instr 2979 @ 0xba30 (47664) - IADD3 R0, R16, 0x180, RZ ;
Inject count_instr before - Instr 2986 @ 0xbaa0 (47776) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 2989 @ 0xbad0 (47824) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2991 @ 0xbaf0 (47856) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 2993 @ 0xbb10 (47888) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 2995 @ 0xbb30 (47920) - F2I.F64.TRUNC R45, R44 ;
Inject count_instr before - Instr 2998 @ 0xbb60 (47968) - F2I.S64.F64.TRUNC R44, R44 ;
Inject count_instr before - Instr 3002 @ 0xbba0 (48032) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 3004 @ 0xbbc0 (48064) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 3006 @ 0xbbe0 (48096) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 3008 @ 0xbc00 (48128) - F2I.S64.F64.TRUNC R44, R44 ;
Inject count_instr before - Instr 3011 @ 0xbc30 (48176) - F2I.F64.TRUNC R45, R44 ;
Inject count_instr before - Instr 3014 @ 0xbc60 (48224) - F2I.F64.TRUNC R45, R44 ;
Inject count_instr before - Instr 3017 @ 0xbc90 (48272) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3019 @ 0xbcb0 (48304) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 3021 @ 0xbcd0 (48336) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3023 @ 0xbcf0 (48368) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 3025 @ 0xbd10 (48400) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3028 @ 0xbd40 (48448) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 3030 @ 0xbd60 (48480) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 3032 @ 0xbd80 (48512) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 3034 @ 0xbda0 (48544) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 3037 @ 0xbdd0 (48592) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3041 @ 0xbe10 (48656) - STG.E.64.SYS [R4], R44 ;
Inject count_instr before - Instr 3043 @ 0xbe30 (48688) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 3046 @ 0xbe60 (48736) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 3048 @ 0xbe80 (48768) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 3050 @ 0xbea0 (48800) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 3052 @ 0xbec0 (48832) - DSETP.NEU.AND P0, PT, R44, RZ, PT ;
Inject count_instr before - Instr 3056 @ 0xbf00 (48896) - CS2R R46, SRZ ;
Inject count_instr before - Instr 3059 @ 0xbf30 (48944) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 3061 @ 0xbf50 (48976) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 3063 @ 0xbf70 (49008) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 3065 @ 0xbf90 (49040) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3072 @ 0xc000 (49152) - @P0 BRA 0xc080 ;
Inject count_instr before - Instr 3073 @ 0xc010 (49168) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
Inject count_instr before - Instr 3080 @ 0xc080 (49280) - BSYNC B0 ;
Inject count_instr before - Instr 3084 @ 0xc0c0 (49344) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3089 @ 0xc110 (49424) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
Inject count_instr before - Instr 3097 @ 0xc190 (49552) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 3100 @ 0xc1c0 (49600) - BSYNC B0 ;
Inject count_instr before - Instr 3106 @ 0xc220 (49696) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 3114 @ 0xc2a0 (49824) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3116 @ 0xc2c0 (49856) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 3118 @ 0xc2e0 (49888) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3120 @ 0xc300 (49920) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3122 @ 0xc320 (49952) - F2I.U32.F64.TRUNC R45, R44 ;
Inject count_instr before - Instr 3125 @ 0xc350 (50000) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3131 @ 0xc3b0 (50096) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
Inject count_instr before - Instr 3133 @ 0xc3d0 (50128) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3138 @ 0xc420 (50208) - FADD R0, R7, 8192 ;
Inject count_instr before - Instr 3143 @ 0xc470 (50288) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3147 @ 0xc4b0 (50352) - BSYNC B0 ;
Inject count_instr before - Instr 3150 @ 0xc4e0 (50400) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3156 @ 0xc540 (50496) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
Inject count_instr before - Instr 3158 @ 0xc560 (50528) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3163 @ 0xc5b0 (50608) - FADD R0, R7, 64 ;
Inject count_instr before - Instr 3168 @ 0xc600 (50688) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3172 @ 0xc640 (50752) - BSYNC B0 ;
Inject count_instr before - Instr 3175 @ 0xc670 (50800) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3177 @ 0xc690 (50832) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3179 @ 0xc6b0 (50864) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3181 @ 0xc6d0 (50896) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
Inject count_instr before - Instr 3196 @ 0xc7c0 (51136) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3214 @ 0xc8e0 (51424) - BRA 0xc940 ;
Inject count_instr before - Instr 3215 @ 0xc8f0 (51440) - F2I.U64.F64.TRUNC R44, R44 ;
Inject count_instr before - Instr 3218 @ 0xc920 (51488) - F2I.U32.F64.TRUNC R45, R44 ;
Inject count_instr before - Instr 3220 @ 0xc940 (51520) - IADD3 R0, R22, 0x280, RZ ;
Inject count_instr before - Instr 3223 @ 0xc970 (51568) - IADD3 R0, R16, 0x200, RZ ;
Inject count_instr before - Instr 3230 @ 0xc9e0 (51680) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 3233 @ 0xca10 (51728) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3235 @ 0xca30 (51760) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 3237 @ 0xca50 (51792) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3239 @ 0xca70 (51824) - F2I.F64.TRUNC R53, R52 ;
Inject count_instr before - Instr 3242 @ 0xcaa0 (51872) - F2I.S64.F64.TRUNC R52, R52 ;
Inject count_instr before - Instr 3246 @ 0xcae0 (51936) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 3248 @ 0xcb00 (51968) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 3250 @ 0xcb20 (52000) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 3252 @ 0xcb40 (52032) - F2I.S64.F64.TRUNC R52, R52 ;
Inject count_instr before - Instr 3255 @ 0xcb70 (52080) - F2I.F64.TRUNC R53, R52 ;
Inject count_instr before - Instr 3258 @ 0xcba0 (52128) - F2I.F64.TRUNC R53, R52 ;
Inject count_instr before - Instr 3261 @ 0xcbd0 (52176) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3263 @ 0xcbf0 (52208) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 3265 @ 0xcc10 (52240) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3267 @ 0xcc30 (52272) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 3269 @ 0xcc50 (52304) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3272 @ 0xcc80 (52352) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 3274 @ 0xcca0 (52384) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 3276 @ 0xccc0 (52416) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 3278 @ 0xcce0 (52448) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 3281 @ 0xcd10 (52496) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3285 @ 0xcd50 (52560) - STG.E.64.SYS [R4], R52 ;
Inject count_instr before - Instr 3287 @ 0xcd70 (52592) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 3290 @ 0xcda0 (52640) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 3292 @ 0xcdc0 (52672) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 3294 @ 0xcde0 (52704) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 3296 @ 0xce00 (52736) - DSETP.NEU.AND P0, PT, R52, RZ, PT ;
Inject count_instr before - Instr 3300 @ 0xce40 (52800) - CS2R R54, SRZ ;
Inject count_instr before - Instr 3303 @ 0xce70 (52848) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 3305 @ 0xce90 (52880) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 3307 @ 0xceb0 (52912) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 3309 @ 0xced0 (52944) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3316 @ 0xcf40 (53056) - @P0 BRA 0xcfc0 ;
Inject count_instr before - Instr 3317 @ 0xcf50 (53072) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
Inject count_instr before - Instr 3324 @ 0xcfc0 (53184) - BSYNC B0 ;
Inject count_instr before - Instr 3328 @ 0xd000 (53248) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3333 @ 0xd050 (53328) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
Inject count_instr before - Instr 3341 @ 0xd0d0 (53456) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 3344 @ 0xd100 (53504) - BSYNC B0 ;
Inject count_instr before - Instr 3350 @ 0xd160 (53600) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 3358 @ 0xd1e0 (53728) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3360 @ 0xd200 (53760) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 3362 @ 0xd220 (53792) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3364 @ 0xd240 (53824) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3366 @ 0xd260 (53856) - F2I.U32.F64.TRUNC R53, R52 ;
Inject count_instr before - Instr 3369 @ 0xd290 (53904) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3375 @ 0xd2f0 (54000) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
Inject count_instr before - Instr 3377 @ 0xd310 (54032) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3382 @ 0xd360 (54112) - FADD R0, R7, 8192 ;
Inject count_instr before - Instr 3387 @ 0xd3b0 (54192) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3391 @ 0xd3f0 (54256) - BSYNC B0 ;
Inject count_instr before - Instr 3394 @ 0xd420 (54304) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3400 @ 0xd480 (54400) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
Inject count_instr before - Instr 3402 @ 0xd4a0 (54432) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3407 @ 0xd4f0 (54512) - FADD R0, R7, 64 ;
Inject count_instr before - Instr 3412 @ 0xd540 (54592) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3416 @ 0xd580 (54656) - BSYNC B0 ;
Inject count_instr before - Instr 3419 @ 0xd5b0 (54704) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3421 @ 0xd5d0 (54736) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3423 @ 0xd5f0 (54768) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3425 @ 0xd610 (54800) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
Inject count_instr before - Instr 3440 @ 0xd700 (55040) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3458 @ 0xd820 (55328) - BRA 0xd880 ;
Inject count_instr before - Instr 3459 @ 0xd830 (55344) - F2I.U64.F64.TRUNC R52, R52 ;
Inject count_instr before - Instr 3462 @ 0xd860 (55392) - F2I.U32.F64.TRUNC R53, R52 ;
Inject count_instr before - Instr 3464 @ 0xd880 (55424) - IADD3 R0, R22, 0x300, RZ ;
Inject count_instr before - Instr 3467 @ 0xd8b0 (55472) - IADD3 R0, R16, 0x280, RZ ;
Inject count_instr before - Instr 3474 @ 0xd920 (55584) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 3477 @ 0xd950 (55632) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3479 @ 0xd970 (55664) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 3481 @ 0xd990 (55696) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3483 @ 0xd9b0 (55728) - F2I.F64.TRUNC R61, R60 ;
Inject count_instr before - Instr 3486 @ 0xd9e0 (55776) - F2I.S64.F64.TRUNC R60, R60 ;
Inject count_instr before - Instr 3490 @ 0xda20 (55840) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 3492 @ 0xda40 (55872) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 3494 @ 0xda60 (55904) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 3496 @ 0xda80 (55936) - F2I.S64.F64.TRUNC R60, R60 ;
Inject count_instr before - Instr 3499 @ 0xdab0 (55984) - F2I.F64.TRUNC R61, R60 ;
Inject count_instr before - Instr 3502 @ 0xdae0 (56032) - F2I.F64.TRUNC R61, R60 ;
Inject count_instr before - Instr 3505 @ 0xdb10 (56080) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3507 @ 0xdb30 (56112) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 3509 @ 0xdb50 (56144) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3511 @ 0xdb70 (56176) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 3513 @ 0xdb90 (56208) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3516 @ 0xdbc0 (56256) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 3518 @ 0xdbe0 (56288) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 3520 @ 0xdc00 (56320) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 3522 @ 0xdc20 (56352) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 3525 @ 0xdc50 (56400) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3529 @ 0xdc90 (56464) - STG.E.64.SYS [R4], R60 ;
Inject count_instr before - Instr 3531 @ 0xdcb0 (56496) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 3534 @ 0xdce0 (56544) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 3536 @ 0xdd00 (56576) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 3538 @ 0xdd20 (56608) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 3540 @ 0xdd40 (56640) - DSETP.NEU.AND P0, PT, R60, RZ, PT ;
Inject count_instr before - Instr 3544 @ 0xdd80 (56704) - CS2R R62, SRZ ;
Inject count_instr before - Instr 3547 @ 0xddb0 (56752) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 3549 @ 0xddd0 (56784) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 3551 @ 0xddf0 (56816) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 3553 @ 0xde10 (56848) - LOP3.LUT R8, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3560 @ 0xde80 (56960) - @P0 BRA 0xdf00 ;
Inject count_instr before - Instr 3561 @ 0xde90 (56976) - ISETP.GE.U32.AND P0, PT, R8, 0x3c800000, PT ;
Inject count_instr before - Instr 3568 @ 0xdf00 (57088) - BSYNC B0 ;
Inject count_instr before - Instr 3572 @ 0xdf40 (57152) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3577 @ 0xdf90 (57232) - ISETP.GE.U32.AND P0, PT, R7, 0x38800000, PT ;
Inject count_instr before - Instr 3585 @ 0xe010 (57360) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 3588 @ 0xe040 (57408) - BSYNC B0 ;
Inject count_instr before - Instr 3594 @ 0xe0a0 (57504) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 3602 @ 0xe120 (57632) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3604 @ 0xe140 (57664) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 3606 @ 0xe160 (57696) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3608 @ 0xe180 (57728) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3610 @ 0xe1a0 (57760) - F2I.U32.F64.TRUNC R61, R60 ;
Inject count_instr before - Instr 3613 @ 0xe1d0 (57808) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3619 @ 0xe230 (57904) - ISETP.GE.U32.AND P0, PT, R7, 0x3c000000, PT ;
Inject count_instr before - Instr 3621 @ 0xe250 (57936) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3626 @ 0xe2a0 (58016) - FADD R0, R7, 8192 ;
Inject count_instr before - Instr 3631 @ 0xe2f0 (58096) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3635 @ 0xe330 (58160) - BSYNC B0 ;
Inject count_instr before - Instr 3638 @ 0xe360 (58208) - LOP3.LUT R7, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3644 @ 0xe3c0 (58304) - ISETP.GE.U32.AND P0, PT, R7, 0x38000000, PT ;
Inject count_instr before - Instr 3646 @ 0xe3e0 (58336) - @P0 LOP3.LUT R3, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3651 @ 0xe430 (58416) - FADD R0, R7, 64 ;
Inject count_instr before - Instr 3656 @ 0xe480 (58496) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3660 @ 0xe4c0 (58560) - BSYNC B0 ;
Inject count_instr before - Instr 3663 @ 0xe4f0 (58608) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3665 @ 0xe510 (58640) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3667 @ 0xe530 (58672) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3669 @ 0xe550 (58704) - SHF.R.U32.HI R7, RZ, 0x17, R6 ;
Inject count_instr before - Instr 3684 @ 0xe640 (58944) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3702 @ 0xe760 (59232) - BRA 0xe7c0 ;
Inject count_instr before - Instr 3703 @ 0xe770 (59248) - F2I.U64.F64.TRUNC R60, R60 ;
Inject count_instr before - Instr 3706 @ 0xe7a0 (59296) - F2I.U32.F64.TRUNC R61, R60 ;
Inject count_instr before - Instr 3708 @ 0xe7c0 (59328) - IADD3 R22, R22, 0x380, RZ ;
Inject count_instr before - Instr 3711 @ 0xe7f0 (59376) - IADD3 R16, R16, 0x300, RZ ;
Inject count_instr before - Instr 3718 @ 0xe860 (59488) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 3721 @ 0xe890 (59536) - ISETP.GT.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3723 @ 0xe8b0 (59568) - ISETP.NE.AND P0, PT, R2, RZ, PT ;
Inject count_instr before - Instr 3725 @ 0xe8d0 (59600) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
Inject count_instr before - Instr 3727 @ 0xe8f0 (59632) - F2I.F64.TRUNC R69, R68 ;
Inject count_instr before - Instr 3730 @ 0xe920 (59680) - F2I.S64.F64.TRUNC R68, R68 ;
Inject count_instr before - Instr 3734 @ 0xe960 (59744) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
Inject count_instr before - Instr 3736 @ 0xe980 (59776) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
Inject count_instr before - Instr 3738 @ 0xe9a0 (59808) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
Inject count_instr before - Instr 3740 @ 0xe9c0 (59840) - F2I.S64.F64.TRUNC R68, R68 ;
Inject count_instr before - Instr 3743 @ 0xe9f0 (59888) - F2I.F64.TRUNC R69, R68 ;
Inject count_instr before - Instr 3746 @ 0xea20 (59936) - F2I.F64.TRUNC R69, R68 ;
Inject count_instr before - Instr 3749 @ 0xea50 (59984) - ISETP.GT.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3751 @ 0xea70 (60016) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
Inject count_instr before - Instr 3753 @ 0xea90 (60048) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
Inject count_instr before - Instr 3755 @ 0xeab0 (60080) - STG.E.SYS [R4], R6 ;
Inject count_instr before - Instr 3757 @ 0xead0 (60112) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3760 @ 0xeb00 (60160) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
Inject count_instr before - Instr 3762 @ 0xeb20 (60192) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
Inject count_instr before - Instr 3764 @ 0xeb40 (60224) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
Inject count_instr before - Instr 3766 @ 0xeb60 (60256) - IMAD.MOV.U32 R7, RZ, RZ, RZ ;
Inject count_instr before - Instr 3769 @ 0xeb90 (60304) - F2F.F16.F32 R3, R6 ;
Inject count_instr before - Instr 3773 @ 0xebd0 (60368) - STG.E.64.SYS [R4], R68 ;
Inject count_instr before - Instr 3775 @ 0xebf0 (60400) - PRMT R0, R2, 0x9910, RZ ;
Inject count_instr before - Instr 3778 @ 0xec20 (60448) - ISETP.GT.AND P0, PT, R0, 0xe, PT ;
Inject count_instr before - Instr 3780 @ 0xec40 (60480) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
Inject count_instr before - Instr 3782 @ 0xec60 (60512) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
Inject count_instr before - Instr 3784 @ 0xec80 (60544) - DSETP.NEU.AND P0, PT, R68, RZ, PT ;
Inject count_instr before - Instr 3788 @ 0xecc0 (60608) - CS2R R70, SRZ ;
Inject count_instr before - Instr 3791 @ 0xecf0 (60656) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
Inject count_instr before - Instr 3793 @ 0xed10 (60688) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
Inject count_instr before - Instr 3795 @ 0xed30 (60720) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 3797 @ 0xed50 (60752) - LOP3.LUT R2, R6.reuse, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3804 @ 0xedc0 (60864) - @P0 BRA 0xee40 ;
Inject count_instr before - Instr 3805 @ 0xedd0 (60880) - ISETP.GE.U32.AND P0, PT, R2, 0x3c800000, PT ;
Inject count_instr before - Instr 3812 @ 0xee40 (60992) - BSYNC B0 ;
Inject count_instr before - Instr 3816 @ 0xee80 (61056) - LOP3.LUT R2, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3821 @ 0xeed0 (61136) - ISETP.GE.U32.AND P0, PT, R2, 0x38800000, PT ;
Inject count_instr before - Instr 3829 @ 0xef50 (61264) - IMAD.MOV.U32 R0, RZ, RZ, 0x7f ;
Inject count_instr before - Instr 3832 @ 0xef80 (61312) - BSYNC B0 ;
Inject count_instr before - Instr 3838 @ 0xefe0 (61408) - FSETP.GTU.AND P0, PT, |R6|, +INF , PT ;
Inject count_instr before - Instr 3846 @ 0xf060 (61536) - ISETP.GT.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3848 @ 0xf080 (61568) - ISETP.NE.AND P0, PT, R0, 0x19, PT ;
Inject count_instr before - Instr 3850 @ 0xf0a0 (61600) - ISETP.NE.AND P0, PT, R0, 0x1a, PT ;
Inject count_instr before - Instr 3852 @ 0xf0c0 (61632) - ISETP.NE.AND P0, PT, R0, 0x1b, PT ;
Inject count_instr before - Instr 3854 @ 0xf0e0 (61664) - F2I.U32.F64.TRUNC R69, R68 ;
Inject count_instr before - Instr 3857 @ 0xf110 (61712) - LOP3.LUT R3, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3863 @ 0xf170 (61808) - ISETP.GE.U32.AND P0, PT, R3, 0x3c000000, PT ;
Inject count_instr before - Instr 3865 @ 0xf190 (61840) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3870 @ 0xf1e0 (61920) - FADD R0, R3, 8192 ;
Inject count_instr before - Instr 3875 @ 0xf230 (62000) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3879 @ 0xf270 (62064) - BSYNC B0 ;
Inject count_instr before - Instr 3882 @ 0xf2a0 (62112) - LOP3.LUT R3, R6, 0x7fffffff, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3888 @ 0xf300 (62208) - ISETP.GE.U32.AND P0, PT, R3, 0x38000000, PT ;
Inject count_instr before - Instr 3890 @ 0xf320 (62240) - @P0 LOP3.LUT R7, R0, 0x1, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3895 @ 0xf370 (62320) - FADD R0, R3, 64 ;
Inject count_instr before - Instr 3900 @ 0xf3c0 (62400) - LOP3.LUT R6, R6, 0x80000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 3904 @ 0xf400 (62464) - BSYNC B0 ;
Inject count_instr before - Instr 3907 @ 0xf430 (62512) - ISETP.NE.AND P0, PT, R0, 0x1c, PT ;
Inject count_instr before - Instr 3909 @ 0xf450 (62544) - ISETP.NE.AND P0, PT, R0, 0x1d, PT ;
Inject count_instr before - Instr 3911 @ 0xf470 (62576) - ISETP.NE.AND P0, PT, R0, 0x2c, PT ;
Inject count_instr before - Instr 3913 @ 0xf490 (62608) - SHF.R.U32.HI R2, RZ, 0x17, R6 ;
Inject count_instr before - Instr 3928 @ 0xf580 (62848) - UMOV UR4, 0xd33a2700 ;
Inject count_instr before - Instr 3946 @ 0xf6a0 (63136) - EXIT ;
Inject count_instr before - Instr 3947 @ 0xf6b0 (63152) - F2I.U64.F64.TRUNC R68, R68 ;
Inject count_instr before - Instr 3950 @ 0xf6e0 (63200) - F2I.U32.F64.TRUNC R69, R68 ;
Inject count_instr before - Instr 3953 @ 0xf710 (63248) - BRA 0xf710;
kernel 279 - _ZN2at6native27unrolled_elementwise_kernelIZZZNS0_23direct_copy_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE1_clEvENKUlvE4_clEvEUldE_St5arrayIPcLm2EELi8E23TrivialOffsetCalculatorILi1EjESB_NS0_6memory12LoadWithCastILi1EEENSC_13StoreWithCastILi1EEEEEviT_T0_T2_T3_T4_T5_ - #thread-blocks 1,  kernel instructions 1323, total instructions 65670399
Function void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MinNanFunctor<double> >, unsigned int, double, 4, 4> >(at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MinNanFunctor<double> >, unsigned int, double, 4, 4>)
Basic block id 0 - num instructions 5
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R7, SR_TID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x344], PT ;
 Instr 3 @ 0x30 (48) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 4 @ 0x40 (64) - @!P0 BRA 0xd00 ;
Basic block id 1 - num instructions 14
 Instr 5 @ 0x50 (80) - S2R R3, SR_TID.Y ;
 Instr 6 @ 0x60 (96) - IMAD R0, R7, c[0x0][0x194], RZ ;
 Instr 7 @ 0x70 (112) - MOV R2, RZ ;
 Instr 8 @ 0x80 (128) - S2R R5, SR_CTAID.X ;
 Instr 9 @ 0x90 (144) - IMAD R0, R3, c[0x0][0x198], R0 ;
 Instr 10 @ 0xa0 (160) - IMAD R3, R5, c[0x0][0x180], R0 ;
 Instr 11 @ 0xb0 (176) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x344] ;
 Instr 12 @ 0xc0 (192) - IMAD.HI.U32 R4, R3, c[0x0][0x34c], R2 ;
 Instr 13 @ 0xd0 (208) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 14 @ 0xe0 (224) - SHF.R.U32.HI R5, RZ, c[0x0][0x350], R4 ;
 Instr 15 @ 0xf0 (240) - IADD3 R2, -R5, RZ, RZ ;
 Instr 16 @ 0x100 (256) - IMAD R2, R2, c[0x0][0x348], R3 ;
 Instr 17 @ 0x110 (272) - IMAD R2, R2, c[0x0][0x478], RZ ;
 Instr 18 @ 0x120 (288) - @!P0 BRA 0xd00 ;
Basic block id 2 - num instructions 8
 Instr 19 @ 0x130 (304) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 20 @ 0x140 (320) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 21 @ 0x150 (336) - IMAD.HI.U32 R8, R5, c[0x0][0x358], R4 ;
 Instr 22 @ 0x160 (352) - SHF.R.U32.HI R9, RZ, c[0x0][0x35c], R8 ;
 Instr 23 @ 0x170 (368) - IADD3 R3, -R9, RZ, RZ ;
 Instr 24 @ 0x180 (384) - IMAD R5, R3, c[0x0][0x354], R5 ;
 Instr 25 @ 0x190 (400) - IMAD R2, R5, c[0x0][0x480], R2 ;
 Instr 26 @ 0x1a0 (416) - @!P0 BRA 0xd00 ;
Basic block id 3 - num instructions 8
 Instr 27 @ 0x1b0 (432) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 28 @ 0x1c0 (448) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 29 @ 0x1d0 (464) - IMAD.HI.U32 R4, R9, c[0x0][0x364], R8 ;
 Instr 30 @ 0x1e0 (480) - SHF.R.U32.HI R5, RZ, c[0x0][0x368], R4 ;
 Instr 31 @ 0x1f0 (496) - IADD3 R3, -R5, RZ, RZ ;
 Instr 32 @ 0x200 (512) - IMAD R9, R3, c[0x0][0x360], R9 ;
 Instr 33 @ 0x210 (528) - IMAD R2, R9, c[0x0][0x488], R2 ;
 Instr 34 @ 0x220 (544) - @!P0 BRA 0xd00 ;
Basic block id 4 - num instructions 8
 Instr 35 @ 0x230 (560) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 36 @ 0x240 (576) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 37 @ 0x250 (592) - IMAD.HI.U32 R8, R5, c[0x0][0x370], R4 ;
 Instr 38 @ 0x260 (608) - SHF.R.U32.HI R9, RZ, c[0x0][0x374], R8 ;
 Instr 39 @ 0x270 (624) - IADD3 R3, -R9, RZ, RZ ;
 Instr 40 @ 0x280 (640) - IMAD R5, R3, c[0x0][0x36c], R5 ;
 Instr 41 @ 0x290 (656) - IMAD R2, R5, c[0x0][0x490], R2 ;
 Instr 42 @ 0x2a0 (672) - @!P0 BRA 0xd00 ;
Basic block id 5 - num instructions 8
 Instr 43 @ 0x2b0 (688) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 45 @ 0x2d0 (720) - IMAD.HI.U32 R4, R9, c[0x0][0x37c], R8 ;
 Instr 46 @ 0x2e0 (736) - SHF.R.U32.HI R5, RZ, c[0x0][0x380], R4 ;
 Instr 47 @ 0x2f0 (752) - IADD3 R3, -R5, RZ, RZ ;
 Instr 48 @ 0x300 (768) - IMAD R9, R3, c[0x0][0x378], R9 ;
 Instr 49 @ 0x310 (784) - IMAD R2, R9, c[0x0][0x498], R2 ;
 Instr 50 @ 0x320 (800) - @!P0 BRA 0xd00 ;
Basic block id 6 - num instructions 8
 Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 52 @ 0x340 (832) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 53 @ 0x350 (848) - IMAD.HI.U32 R8, R5, c[0x0][0x388], R4 ;
 Instr 54 @ 0x360 (864) - SHF.R.U32.HI R9, RZ, c[0x0][0x38c], R8 ;
 Instr 55 @ 0x370 (880) - IADD3 R3, -R9, RZ, RZ ;
 Instr 56 @ 0x380 (896) - IMAD R5, R3, c[0x0][0x384], R5 ;
 Instr 57 @ 0x390 (912) - IMAD R2, R5, c[0x0][0x4a0], R2 ;
 Instr 58 @ 0x3a0 (928) - @!P0 BRA 0xd00 ;
Basic block id 7 - num instructions 8
 Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 60 @ 0x3c0 (960) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 61 @ 0x3d0 (976) - IMAD.HI.U32 R4, R9, c[0x0][0x394], R8 ;
 Instr 62 @ 0x3e0 (992) - SHF.R.U32.HI R5, RZ, c[0x0][0x398], R4 ;
 Instr 63 @ 0x3f0 (1008) - IADD3 R3, -R5, RZ, RZ ;
 Instr 64 @ 0x400 (1024) - IMAD R9, R3, c[0x0][0x390], R9 ;
 Instr 65 @ 0x410 (1040) - IMAD R2, R9, c[0x0][0x4a8], R2 ;
 Instr 66 @ 0x420 (1056) - @!P0 BRA 0xd00 ;
Basic block id 8 - num instructions 8
 Instr 67 @ 0x430 (1072) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 68 @ 0x440 (1088) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 69 @ 0x450 (1104) - IMAD.HI.U32 R8, R5, c[0x0][0x3a0], R4 ;
 Instr 70 @ 0x460 (1120) - SHF.R.U32.HI R9, RZ, c[0x0][0x3a4], R8 ;
 Instr 71 @ 0x470 (1136) - IADD3 R3, -R9, RZ, RZ ;
 Instr 72 @ 0x480 (1152) - IMAD R5, R3, c[0x0][0x39c], R5 ;
 Instr 73 @ 0x490 (1168) - IMAD R2, R5, c[0x0][0x4b0], R2 ;
 Instr 74 @ 0x4a0 (1184) - @!P0 BRA 0xd00 ;
Basic block id 9 - num instructions 8
 Instr 75 @ 0x4b0 (1200) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 76 @ 0x4c0 (1216) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 77 @ 0x4d0 (1232) - IMAD.HI.U32 R4, R9, c[0x0][0x3ac], R8 ;
 Instr 78 @ 0x4e0 (1248) - SHF.R.U32.HI R5, RZ, c[0x0][0x3b0], R4 ;
 Instr 79 @ 0x4f0 (1264) - IADD3 R3, -R5, RZ, RZ ;
 Instr 80 @ 0x500 (1280) - IMAD R9, R3, c[0x0][0x3a8], R9 ;
 Instr 81 @ 0x510 (1296) - IMAD R2, R9, c[0x0][0x4b8], R2 ;
 Instr 82 @ 0x520 (1312) - @!P0 BRA 0xd00 ;
Basic block id 10 - num instructions 8
 Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 84 @ 0x540 (1344) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 85 @ 0x550 (1360) - IMAD.HI.U32 R8, R5, c[0x0][0x3b8], R4 ;
 Instr 86 @ 0x560 (1376) - SHF.R.U32.HI R9, RZ, c[0x0][0x3bc], R8 ;
 Instr 87 @ 0x570 (1392) - IADD3 R3, -R9, RZ, RZ ;
 Instr 88 @ 0x580 (1408) - IMAD R5, R3, c[0x0][0x3b4], R5 ;
 Instr 89 @ 0x590 (1424) - IMAD R2, R5, c[0x0][0x4c0], R2 ;
 Instr 90 @ 0x5a0 (1440) - @!P0 BRA 0xd00 ;
Basic block id 11 - num instructions 8
 Instr 91 @ 0x5b0 (1456) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 92 @ 0x5c0 (1472) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 93 @ 0x5d0 (1488) - IMAD.HI.U32 R4, R9, c[0x0][0x3c4], R8 ;
 Instr 94 @ 0x5e0 (1504) - SHF.R.U32.HI R5, RZ, c[0x0][0x3c8], R4 ;
 Instr 95 @ 0x5f0 (1520) - IADD3 R3, -R5, RZ, RZ ;
 Instr 96 @ 0x600 (1536) - IMAD R9, R3, c[0x0][0x3c0], R9 ;
 Instr 97 @ 0x610 (1552) - IMAD R2, R9, c[0x0][0x4c8], R2 ;
 Instr 98 @ 0x620 (1568) - @!P0 BRA 0xd00 ;
Basic block id 12 - num instructions 8
 Instr 99 @ 0x630 (1584) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 100 @ 0x640 (1600) - ISETP.NE.AND P0, PT, R0, 0xc, PT ;
 Instr 101 @ 0x650 (1616) - IMAD.HI.U32 R8, R5, c[0x0][0x3d0], R4 ;
 Instr 102 @ 0x660 (1632) - SHF.R.U32.HI R9, RZ, c[0x0][0x3d4], R8 ;
 Instr 103 @ 0x670 (1648) - IADD3 R3, -R9, RZ, RZ ;
 Instr 104 @ 0x680 (1664) - IMAD R5, R3, c[0x0][0x3cc], R5 ;
 Instr 105 @ 0x690 (1680) - IMAD R2, R5, c[0x0][0x4d0], R2 ;
 Instr 106 @ 0x6a0 (1696) - @!P0 BRA 0xd00 ;
Basic block id 13 - num instructions 8
 Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 108 @ 0x6c0 (1728) - ISETP.NE.AND P0, PT, R0, 0xd, PT ;
 Instr 109 @ 0x6d0 (1744) - IMAD.HI.U32 R4, R9, c[0x0][0x3dc], R8 ;
 Instr 110 @ 0x6e0 (1760) - SHF.R.U32.HI R5, RZ, c[0x0][0x3e0], R4 ;
 Instr 111 @ 0x6f0 (1776) - IADD3 R3, -R5, RZ, RZ ;
 Instr 112 @ 0x700 (1792) - IMAD R9, R3, c[0x0][0x3d8], R9 ;
 Instr 113 @ 0x710 (1808) - IMAD R2, R9, c[0x0][0x4d8], R2 ;
 Instr 114 @ 0x720 (1824) - @!P0 BRA 0xd00 ;
Basic block id 14 - num instructions 8
 Instr 115 @ 0x730 (1840) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 116 @ 0x740 (1856) - ISETP.NE.AND P0, PT, R0, 0xe, PT ;
 Instr 117 @ 0x750 (1872) - IMAD.HI.U32 R8, R5, c[0x0][0x3e8], R4 ;
 Instr 118 @ 0x760 (1888) - SHF.R.U32.HI R9, RZ, c[0x0][0x3ec], R8 ;
 Instr 119 @ 0x770 (1904) - IADD3 R3, -R9, RZ, RZ ;
 Instr 120 @ 0x780 (1920) - IMAD R5, R3, c[0x0][0x3e4], R5 ;
 Instr 121 @ 0x790 (1936) - IMAD R2, R5, c[0x0][0x4e0], R2 ;
 Instr 122 @ 0x7a0 (1952) - @!P0 BRA 0xd00 ;
Basic block id 15 - num instructions 8
 Instr 123 @ 0x7b0 (1968) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 124 @ 0x7c0 (1984) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 125 @ 0x7d0 (2000) - IMAD.HI.U32 R4, R9, c[0x0][0x3f4], R8 ;
 Instr 126 @ 0x7e0 (2016) - SHF.R.U32.HI R5, RZ, c[0x0][0x3f8], R4 ;
 Instr 127 @ 0x7f0 (2032) - IADD3 R3, -R5, RZ, RZ ;
 Instr 128 @ 0x800 (2048) - IMAD R9, R3, c[0x0][0x3f0], R9 ;
 Instr 129 @ 0x810 (2064) - IMAD R2, R9, c[0x0][0x4e8], R2 ;
 Instr 130 @ 0x820 (2080) - @!P0 BRA 0xd00 ;
Basic block id 16 - num instructions 8
 Instr 131 @ 0x830 (2096) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 132 @ 0x840 (2112) - ISETP.NE.AND P0, PT, R0, 0x10, PT ;
 Instr 133 @ 0x850 (2128) - IMAD.HI.U32 R8, R5, c[0x0][0x400], R4 ;
 Instr 134 @ 0x860 (2144) - SHF.R.U32.HI R9, RZ, c[0x0][0x404], R8 ;
 Instr 135 @ 0x870 (2160) - IADD3 R3, -R9, RZ, RZ ;
 Instr 136 @ 0x880 (2176) - IMAD R5, R3, c[0x0][0x3fc], R5 ;
 Instr 137 @ 0x890 (2192) - IMAD R2, R5, c[0x0][0x4f0], R2 ;
 Instr 138 @ 0x8a0 (2208) - @!P0 BRA 0xd00 ;
Basic block id 17 - num instructions 8
 Instr 139 @ 0x8b0 (2224) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 140 @ 0x8c0 (2240) - ISETP.NE.AND P0, PT, R0, 0x11, PT ;
 Instr 141 @ 0x8d0 (2256) - IMAD.HI.U32 R4, R9, c[0x0][0x40c], R8 ;
 Instr 142 @ 0x8e0 (2272) - SHF.R.U32.HI R5, RZ, c[0x0][0x410], R4 ;
 Instr 143 @ 0x8f0 (2288) - IADD3 R3, -R5, RZ, RZ ;
 Instr 144 @ 0x900 (2304) - IMAD R9, R3, c[0x0][0x408], R9 ;
 Instr 145 @ 0x910 (2320) - IMAD R2, R9, c[0x0][0x4f8], R2 ;
 Instr 146 @ 0x920 (2336) - @!P0 BRA 0xd00 ;
Basic block id 18 - num instructions 8
 Instr 147 @ 0x930 (2352) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 148 @ 0x940 (2368) - ISETP.NE.AND P0, PT, R0, 0x12, PT ;
 Instr 149 @ 0x950 (2384) - IMAD.HI.U32 R8, R5, c[0x0][0x418], R4 ;
 Instr 150 @ 0x960 (2400) - SHF.R.U32.HI R9, RZ, c[0x0][0x41c], R8 ;
 Instr 151 @ 0x970 (2416) - IADD3 R3, -R9, RZ, RZ ;
 Instr 152 @ 0x980 (2432) - IMAD R5, R3, c[0x0][0x414], R5 ;
 Instr 153 @ 0x990 (2448) - IMAD R2, R5, c[0x0][0x500], R2 ;
 Instr 154 @ 0x9a0 (2464) - @!P0 BRA 0xd00 ;
Basic block id 19 - num instructions 8
 Instr 155 @ 0x9b0 (2480) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 156 @ 0x9c0 (2496) - ISETP.NE.AND P0, PT, R0, 0x13, PT ;
 Instr 157 @ 0x9d0 (2512) - IMAD.HI.U32 R4, R9, c[0x0][0x424], R8 ;
 Instr 158 @ 0x9e0 (2528) - SHF.R.U32.HI R5, RZ, c[0x0][0x428], R4 ;
 Instr 159 @ 0x9f0 (2544) - IADD3 R3, -R5, RZ, RZ ;
 Instr 160 @ 0xa00 (2560) - IMAD R9, R3, c[0x0][0x420], R9 ;
 Instr 161 @ 0xa10 (2576) - IMAD R2, R9, c[0x0][0x508], R2 ;
 Instr 162 @ 0xa20 (2592) - @!P0 BRA 0xd00 ;
Basic block id 20 - num instructions 8
 Instr 163 @ 0xa30 (2608) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 164 @ 0xa40 (2624) - ISETP.NE.AND P0, PT, R0, 0x14, PT ;
 Instr 165 @ 0xa50 (2640) - IMAD.HI.U32 R8, R5, c[0x0][0x430], R4 ;
 Instr 166 @ 0xa60 (2656) - SHF.R.U32.HI R9, RZ, c[0x0][0x434], R8 ;
 Instr 167 @ 0xa70 (2672) - IADD3 R3, -R9, RZ, RZ ;
 Instr 168 @ 0xa80 (2688) - IMAD R5, R3, c[0x0][0x42c], R5 ;
 Instr 169 @ 0xa90 (2704) - IMAD R2, R5, c[0x0][0x510], R2 ;
 Instr 170 @ 0xaa0 (2720) - @!P0 BRA 0xd00 ;
Basic block id 21 - num instructions 8
 Instr 171 @ 0xab0 (2736) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 172 @ 0xac0 (2752) - ISETP.NE.AND P0, PT, R0, 0x15, PT ;
 Instr 173 @ 0xad0 (2768) - IMAD.HI.U32 R4, R9, c[0x0][0x43c], R8 ;
 Instr 174 @ 0xae0 (2784) - SHF.R.U32.HI R5, RZ, c[0x0][0x440], R4 ;
 Instr 175 @ 0xaf0 (2800) - IADD3 R3, -R5, RZ, RZ ;
 Instr 176 @ 0xb00 (2816) - IMAD R9, R3, c[0x0][0x438], R9 ;
 Instr 177 @ 0xb10 (2832) - IMAD R2, R9, c[0x0][0x518], R2 ;
 Instr 178 @ 0xb20 (2848) - @!P0 BRA 0xd00 ;
Basic block id 22 - num instructions 8
 Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 180 @ 0xb40 (2880) - ISETP.NE.AND P0, PT, R0, 0x16, PT ;
 Instr 181 @ 0xb50 (2896) - IMAD.HI.U32 R8, R5, c[0x0][0x448], R4 ;
 Instr 182 @ 0xb60 (2912) - SHF.R.U32.HI R9, RZ, c[0x0][0x44c], R8 ;
 Instr 183 @ 0xb70 (2928) - IADD3 R3, -R9, RZ, RZ ;
 Instr 184 @ 0xb80 (2944) - IMAD R5, R3, c[0x0][0x444], R5 ;
 Instr 185 @ 0xb90 (2960) - IMAD R2, R5, c[0x0][0x520], R2 ;
 Instr 186 @ 0xba0 (2976) - @!P0 BRA 0xd00 ;
Basic block id 23 - num instructions 8
 Instr 187 @ 0xbb0 (2992) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 188 @ 0xbc0 (3008) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 189 @ 0xbd0 (3024) - IMAD.HI.U32 R4, R9, c[0x0][0x454], R8 ;
 Instr 190 @ 0xbe0 (3040) - SHF.R.U32.HI R5, RZ, c[0x0][0x458], R4 ;
 Instr 191 @ 0xbf0 (3056) - IADD3 R3, -R5, RZ, RZ ;
 Instr 192 @ 0xc00 (3072) - IMAD R9, R3, c[0x0][0x450], R9 ;
 Instr 193 @ 0xc10 (3088) - IMAD R2, R9, c[0x0][0x528], R2 ;
 Instr 194 @ 0xc20 (3104) - @!P0 BRA 0xd00 ;
Basic block id 24 - num instructions 13
 Instr 195 @ 0xc30 (3120) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 196 @ 0xc40 (3136) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 197 @ 0xc50 (3152) - IMAD.HI.U32 R8, R5, c[0x0][0x460], R4 ;
 Instr 198 @ 0xc60 (3168) - SHF.R.U32.HI R9, RZ, c[0x0][0x464], R8 ;
 Instr 199 @ 0xc70 (3184) - @P0 MOV R8, RZ ;
 Instr 200 @ 0xc80 (3200) - IMAD.MOV R3, RZ, RZ, -R9.reuse ;
 Instr 201 @ 0xc90 (3216) - @P0 IMAD.HI.U32 R0, R9, c[0x0][0x46c], R8 ;
 Instr 202 @ 0xca0 (3232) - IMAD R5, R3, c[0x0][0x45c], R5 ;
 Instr 203 @ 0xcb0 (3248) - @P0 SHF.R.U32.HI R0, RZ, c[0x0][0x470], R0 ;
 Instr 204 @ 0xcc0 (3264) - IMAD R2, R5, c[0x0][0x530], R2 ;
 Instr 205 @ 0xcd0 (3280) - @P0 IADD3 R3, -R0, RZ, RZ ;
 Instr 206 @ 0xce0 (3296) - @P0 IMAD R9, R3, c[0x0][0x468], R9 ;
 Instr 207 @ 0xcf0 (3312) - @P0 IMAD R2, R9, c[0x0][0x538], R2 ;
Basic block id 25 - num instructions 14
 Instr 208 @ 0xd00 (3328) - S2R R0, SR_TID.Y ;
 Instr 209 @ 0xd10 (3344) - IMAD R3, R7.reuse, c[0x0][0x188], RZ ;
 Instr 210 @ 0xd20 (3360) - BMOV.32.CLEAR RZ, B0 ;
 Instr 211 @ 0xd30 (3376) - IMAD R5, R7, c[0x0][0x194], RZ ;
 Instr 212 @ 0xd40 (3392) - S2R R6, SR_CTAID.Y ;
 Instr 213 @ 0xd50 (3408) - BSSY B0, 0x98c0 ;
 Instr 214 @ 0xd60 (3424) - S2R R4, SR_CTAID.X ;
 Instr 215 @ 0xd70 (3440) - IMAD R3, R0.reuse, c[0x0][0x18c], R3 ;
 Instr 216 @ 0xd80 (3456) - IMAD R5, R0, c[0x0][0x198], R5 ;
 Instr 217 @ 0xd90 (3472) - IMAD R12, R6, c[0x0][0x190], R3 ;
 Instr 218 @ 0xda0 (3488) - IMAD R3, R4, c[0x0][0x180], R5 ;
 Instr 219 @ 0xdb0 (3504) - ISETP.GE.U32.AND P0, PT, R12, c[0x0][0x174], PT ;
 Instr 220 @ 0xdc0 (3520) - ISETP.GE.U32.OR P0, PT, R3, c[0x0][0x178], P0 ;
 Instr 221 @ 0xdd0 (3536) - @P0 BRA 0x98b0 ;
Basic block id 26 - num instructions 5
 Instr 222 @ 0xde0 (3552) - ULDC.U8 UR4, c[0x0][0x1a8] ;
 Instr 223 @ 0xdf0 (3568) - IADD3 R4, P1, R2, c[0x0][0x540], RZ ;
 Instr 224 @ 0xe00 (3584) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 225 @ 0xe10 (3600) - IMAD.X R5, RZ, RZ, c[0x0][0x544], P1 ;
 Instr 226 @ 0xe20 (3616) - @!P0 BRA 0x1640 ;
Basic block id 27 - num instructions 9
 Instr 227 @ 0xe30 (3632) - SHF.R.U64 R8, R4, 0x3, R5 ;
 Instr 228 @ 0xe40 (3648) - BMOV.32.CLEAR RZ, B1 ;
 Instr 229 @ 0xe50 (3664) - BSSY B1, 0x1130 ;
 Instr 230 @ 0xe60 (3680) - MOV R26, c[0x0][0x174] ;
 Instr 231 @ 0xe70 (3696) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 232 @ 0xe80 (3712) - LOP3.LUT R14, R8, 0x3, RZ, 0xc0, !PT ;
 Instr 233 @ 0xe90 (3728) - MOV R17, c[0x0][0x16c] ;
 Instr 234 @ 0xea0 (3744) - ISETP.NE.AND P0, PT, R14, RZ, PT ;
 Instr 235 @ 0xeb0 (3760) - @!P0 BRA 0x1120 ;
Basic block id 28 - num instructions 5
 Instr 236 @ 0xec0 (3776) - ISETP.GE.U32.AND P0, PT, R7.reuse, R14, PT ;
 Instr 237 @ 0xed0 (3792) - BMOV.32.CLEAR RZ, B2 ;
 Instr 238 @ 0xee0 (3808) - BSSY B2, 0x10c0 ;
 Instr 239 @ 0xef0 (3824) - ISETP.GT.U32.OR P0, PT, R7, 0x3, !P0 ;
 Instr 240 @ 0xf00 (3840) - @P0 BRA 0x10b0 ;
Basic block id 29 - num instructions 6
 Instr 241 @ 0xf10 (3856) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
 Instr 242 @ 0xf20 (3872) - BMOV.32.CLEAR RZ, B3 ;
 Instr 243 @ 0xf30 (3888) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
 Instr 244 @ 0xf40 (3904) - BSSY B3, 0xfd0 ;
 Instr 245 @ 0xf50 (3920) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 246 @ 0xf60 (3936) - @P0 BRA P1, 0xfc0 ;
Basic block id 30 - num instructions 5
 Instr 247 @ 0xf70 (3952) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
 Instr 248 @ 0xf80 (3968) - IMAD.MOV.U32 R8, RZ, RZ, 0x1 ;
 Instr 249 @ 0xf90 (3984) - @P0 ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 250 @ 0xfa0 (4000) - @P0 SEL R9, RZ, 0x1, P1 ;
 Instr 251 @ 0xfb0 (4016) - @P0 PRMT R8, R9, 0x7610, R8 ;
Basic block id 31 - num instructions 4
 Instr 252 @ 0xfc0 (4032) - BSYNC B3 ;
 Instr 253 @ 0xfd0 (4048) - PRMT R8, R8, 0x9910, RZ ;
 Instr 254 @ 0xfe0 (4064) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 255 @ 0xff0 (4080) - @!P0 BRA 0x10b0 ;
Basic block id 32 - num instructions 11
 Instr 256 @ 0x1000 (4096) - IADD3 R9, P0, R7, -R14, RZ ;
 Instr 257 @ 0x1010 (4112) - IADD3.X R10, RZ, -0x1, RZ, P0, !PT ;
 Instr 258 @ 0x1020 (4128) - LEA R8, P0, R9, R4, 0x3 ;
 Instr 259 @ 0x1030 (4144) - LEA.HI.X R9, R9, R5, R10, 0x3, P0 ;
 Instr 260 @ 0x1040 (4160) - LDG.E.64.SYS R8, [R8] ;
 Instr 261 @ 0x1050 (4176) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x168] ;
 Instr 262 @ 0x1060 (4192) - MOV R11, c[0x0][0x16c] ;
 Instr 263 @ 0x1070 (4208) - DSETP.GTU.AND P0, PT, |R10|, +INF , PT ;
 Instr 264 @ 0x1080 (4224) - DSETP.GT.OR P0, PT, R8, c[0x0][0x168], P0 ;
 Instr 265 @ 0x1090 (4240) - FSEL R16, R8, c[0x0][0x168], !P0 ;
 Instr 266 @ 0x10a0 (4256) - FSEL R17, R9, c[0x0][0x16c], !P0 ;
Basic block id 33 - num instructions 7
 Instr 267 @ 0x10b0 (4272) - BSYNC B2 ;
 Instr 268 @ 0x10c0 (4288) - IADD3 R9, P0, -R14.reuse, 0x4, RZ ;
 Instr 269 @ 0x10d0 (4304) - IADD3 R26, R14, c[0x0][0x174], RZ ;
 Instr 270 @ 0x10e0 (4320) - IMAD.X R8, RZ, RZ, -0x1, P0 ;
 Instr 271 @ 0x10f0 (4336) - LEA R4, P0, R9.reuse, R4, 0x3 ;
 Instr 272 @ 0x1100 (4352) - IADD3 R26, R26, -0x4, RZ ;
 Instr 273 @ 0x1110 (4368) - LEA.HI.X R5, R9, R5, R8, 0x3, P0 ;
Basic block id 34 - num instructions 14
 Instr 274 @ 0x1120 (4384) - BSYNC B1 ;
 Instr 275 @ 0x1130 (4400) - LEA R9, R12, 0x3, 0x2 ;
 Instr 276 @ 0x1140 (4416) - BMOV.32.CLEAR RZ, B1 ;
 Instr 277 @ 0x1150 (4432) - BSSY B1, 0x13d0 ;
 Instr 278 @ 0x1160 (4448) - ISETP.NE.AND P4, PT, RZ, c[0x0][0x18c], PT ;
 Instr 279 @ 0x1170 (4464) - IMAD.MOV.U32 R19, RZ, RZ, c[0x0][0x16c] ;
 Instr 280 @ 0x1180 (4480) - ISETP.GE.U32.AND P0, PT, R9, R26, PT ;
 Instr 281 @ 0x1190 (4496) - IMAD.MOV.U32 R21, RZ, RZ, c[0x0][0x16c] ;
 Instr 282 @ 0x11a0 (4512) - ISETP.NE.AND P5, PT, R0, RZ, PT ;
 Instr 283 @ 0x11b0 (4528) - IMAD.MOV.U32 R23, RZ, RZ, c[0x0][0x16c] ;
 Instr 284 @ 0x11c0 (4544) - MOV R18, c[0x0][0x168] ;
 Instr 285 @ 0x11d0 (4560) - MOV R20, c[0x0][0x168] ;
 Instr 286 @ 0x11e0 (4576) - MOV R22, c[0x0][0x168] ;
 Instr 287 @ 0x11f0 (4592) - @P0 BRA 0x13c0 ;
Basic block id 35 - num instructions 5
 Instr 288 @ 0x1200 (4608) - MOV R27, R12 ;
 Instr 289 @ 0x1210 (4624) - IMAD.MOV.U32 R20, RZ, RZ, c[0x0][0x168] ;
 Instr 290 @ 0x1220 (4640) - MOV R21, c[0x0][0x16c] ;
 Instr 291 @ 0x1230 (4656) - IMAD.MOV.U32 R22, RZ, RZ, c[0x0][0x168] ;
 Instr 292 @ 0x1240 (4672) - MOV R23, c[0x0][0x16c] ;
Basic block id 36 - num instructions 23
 Instr 293 @ 0x1250 (4688) - IMAD.WIDE.U32 R24, R27, 0x20, R4 ;
 Instr 294 @ 0x1260 (4704) - LDG.E.128.SYS R8, [R24] ;
 Instr 295 @ 0x1270 (4720) - LDG.E.128.SYS R12, [R24+0x10] ;
 Instr 296 @ 0x1280 (4736) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 297 @ 0x1290 (4752) - DSETP.GTU.AND P2, PT, |R16|, +INF , PT ;
 Instr 298 @ 0x12a0 (4768) - LEA R29, R27, 0x3, 0x2 ;
 Instr 299 @ 0x12b0 (4784) - DSETP.GTU.AND P3, PT, |R22|, +INF , PT ;
 Instr 300 @ 0x12c0 (4800) - ISETP.GE.U32.AND P6, PT, R29, R26, PT ;
 Instr 301 @ 0x12d0 (4816) - DSETP.GTU.AND P1, PT, |R20|, +INF , PT ;
 Instr 302 @ 0x12e0 (4832) - DSETP.GTU.AND P0, PT, |R18|, +INF , PT ;
 Instr 303 @ 0x12f0 (4848) - DSETP.LT.OR P2, PT, R16, R8, P2 ;
 Instr 304 @ 0x1300 (4864) - DSETP.LT.OR P3, PT, R22, R10, P3 ;
 Instr 305 @ 0x1310 (4880) - DSETP.LT.OR P1, PT, R20, R12, P1 ;
 Instr 306 @ 0x1320 (4896) - FSEL R16, R16, R8, P2 ;
 Instr 307 @ 0x1330 (4912) - FSEL R17, R17, R9, P2 ;
 Instr 308 @ 0x1340 (4928) - DSETP.LT.OR P0, PT, R18, R14, P0 ;
 Instr 309 @ 0x1350 (4944) - FSEL R22, R22, R10, P3 ;
 Instr 310 @ 0x1360 (4960) - FSEL R23, R23, R11, P3 ;
 Instr 311 @ 0x1370 (4976) - FSEL R20, R20, R12, P1 ;
 Instr 312 @ 0x1380 (4992) - FSEL R21, R21, R13, P1 ;
 Instr 313 @ 0x1390 (5008) - FSEL R18, R18, R14, P0 ;
 Instr 314 @ 0x13a0 (5024) - FSEL R19, R19, R15, P0 ;
 Instr 315 @ 0x13b0 (5040) - @!P6 BRA 0x1250 ;
Basic block id 37 - num instructions 5
 Instr 316 @ 0x13c0 (5056) - BSYNC B1 ;
 Instr 317 @ 0x13d0 (5072) - BMOV.32.CLEAR RZ, B1 ;
 Instr 318 @ 0x13e0 (5088) - BSSY B1, 0x1470 ;
 Instr 319 @ 0x13f0 (5104) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 320 @ 0x1400 (5120) - @P4 BRA P5, 0x1460 ;
Basic block id 38 - num instructions 5
 Instr 321 @ 0x1410 (5136) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
 Instr 322 @ 0x1420 (5152) - IMAD.MOV.U32 R8, RZ, RZ, 0x1 ;
 Instr 323 @ 0x1430 (5168) - @P0 ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 324 @ 0x1440 (5184) - @P0 SEL R6, RZ, 0x1, P1 ;
 Instr 325 @ 0x1450 (5200) - @P0 PRMT R8, R6, 0x7610, R8 ;
Basic block id 39 - num instructions 6
 Instr 326 @ 0x1460 (5216) - BSYNC B1 ;
 Instr 327 @ 0x1470 (5232) - PRMT R6, R8, 0x9910, RZ ;
 Instr 328 @ 0x1480 (5248) - BMOV.32.CLEAR RZ, B1 ;
 Instr 329 @ 0x1490 (5264) - BSSY B1, 0x1570 ;
 Instr 330 @ 0x14a0 (5280) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 331 @ 0x14b0 (5296) - @!P0 BRA 0x1560 ;
Basic block id 40 - num instructions 4
 Instr 332 @ 0x14c0 (5312) - LOP3.LUT R6, R26, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 333 @ 0x14d0 (5328) - IADD3 R9, R6, R7, RZ ;
 Instr 334 @ 0x14e0 (5344) - ISETP.GE.U32.AND P0, PT, R9, R26, PT ;
 Instr 335 @ 0x14f0 (5360) - @P0 BRA 0x1560 ;
Basic block id 41 - num instructions 6
 Instr 336 @ 0x1500 (5376) - IMAD.WIDE R4, R9, 0x8, R4 ;
 Instr 337 @ 0x1510 (5392) - LDG.E.64.SYS R4, [R4] ;
 Instr 338 @ 0x1520 (5408) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 339 @ 0x1530 (5424) - DSETP.LT.OR P0, PT, R16, R4, P0 ;
 Instr 340 @ 0x1540 (5440) - FSEL R16, R16, R4, P0 ;
 Instr 341 @ 0x1550 (5456) - FSEL R17, R17, R5, P0 ;
Basic block id 42 - num instructions 14
 Instr 342 @ 0x1560 (5472) - BSYNC B1 ;
 Instr 343 @ 0x1570 (5488) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 344 @ 0x1580 (5504) - DSETP.LT.OR P0, PT, R16, R22, P0 ;
 Instr 345 @ 0x1590 (5520) - FSEL R4, R16, R22, P0 ;
 Instr 346 @ 0x15a0 (5536) - FSEL R5, R17, R23, P0 ;
 Instr 347 @ 0x15b0 (5552) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 348 @ 0x15c0 (5568) - DSETP.LT.OR P0, PT, R4, R20, P0 ;
 Instr 349 @ 0x15d0 (5584) - FSEL R4, R4, R20, P0 ;
 Instr 350 @ 0x15e0 (5600) - FSEL R5, R5, R21, P0 ;
 Instr 351 @ 0x15f0 (5616) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 352 @ 0x1600 (5632) - DSETP.LT.OR P0, PT, R4, R18, P0 ;
 Instr 353 @ 0x1610 (5648) - FSEL R16, R4, R18, P0 ;
 Instr 354 @ 0x1620 (5664) - FSEL R17, R5, R19, P0 ;
 Instr 355 @ 0x1630 (5680) - BRA 0x98b0 ;
Basic block id 43 - num instructions 7
 Instr 356 @ 0x1640 (5696) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x2e0] ;
 Instr 357 @ 0x1650 (5712) - MOV R8, 0x1 ;
 Instr 358 @ 0x1660 (5728) - SHF.R.U32.HI R6, RZ, 0x3, R6 ;
 Instr 359 @ 0x1670 (5744) - ISETP.EQ.AND P2, PT, R8, c[0x0][0x1b0], PT ;
 Instr 360 @ 0x1680 (5760) - ISETP.NE.AND P0, PT, R6, 0x1, PT ;
 Instr 361 @ 0x1690 (5776) - ISETP.NE.AND P1, PT, R8, c[0x0][0x1b0], PT ;
 Instr 362 @ 0x16a0 (5792) - @!P0 BRA P2, 0x9140 ;
Basic block id 44 - num instructions 6
 Instr 363 @ 0x16b0 (5808) - IMAD.MOV.U32 R26, RZ, RZ, c[0x0][0x17c] ;
 Instr 364 @ 0x16c0 (5824) - MOV R11, R12 ;
 Instr 365 @ 0x16d0 (5840) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x168] ;
 Instr 366 @ 0x16e0 (5856) - MOV R9, c[0x0][0x16c] ;
 Instr 367 @ 0x16f0 (5872) - IMAD R10, R26, 0x3, R12 ;
 Instr 368 @ 0x1700 (5888) - @!P1 BRA 0x8950 ;
Basic block id 45 - num instructions 10
 Instr 369 @ 0x1710 (5904) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
 Instr 370 @ 0x1720 (5920) - BMOV.32.CLEAR RZ, B1 ;
 Instr 371 @ 0x1730 (5936) - BSSY B1, 0x52b0 ;
 Instr 372 @ 0x1740 (5952) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 373 @ 0x1750 (5968) - MOV R13, c[0x0][0x16c] ;
 Instr 374 @ 0x1760 (5984) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 375 @ 0x1770 (6000) - MOV R15, c[0x0][0x16c] ;
 Instr 376 @ 0x1780 (6016) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 377 @ 0x1790 (6032) - MOV R17, c[0x0][0x16c] ;
 Instr 378 @ 0x17a0 (6048) - @P0 BRA 0x52a0 ;
Basic block id 46 - num instructions 9
 Instr 379 @ 0x17b0 (6064) - BMOV.32.CLEAR RZ, B2 ;
 Instr 380 @ 0x17c0 (6080) - BSSY B2, 0x52a0 ;
 Instr 381 @ 0x17d0 (6096) - ISETP.NE.AND P4, PT, RZ, c[0x0][0x1b0], PT ;
 Instr 382 @ 0x17e0 (6112) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 383 @ 0x17f0 (6128) - MOV R13, c[0x0][0x16c] ;
 Instr 384 @ 0x1800 (6144) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 385 @ 0x1810 (6160) - MOV R15, c[0x0][0x16c] ;
 Instr 386 @ 0x1820 (6176) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 387 @ 0x1830 (6192) - MOV R17, c[0x0][0x16c] ;
Basic block id 47 - num instructions 3
 Instr 388 @ 0x1840 (6208) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 389 @ 0x1850 (6224) - MOV R10, RZ ;
 Instr 390 @ 0x1860 (6240) - @!P4 BRA 0x2650 ;
Basic block id 48 - num instructions 9
 Instr 391 @ 0x1870 (6256) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 392 @ 0x1880 (6272) - MOV R18, 0x1 ;
 Instr 393 @ 0x1890 (6288) - IMAD.HI.U32 R10, R11, c[0x0][0x1b8], R10 ;
 Instr 394 @ 0x18a0 (6304) - ISETP.NE.AND P0, PT, R18, c[0x0][0x1b0], PT ;
 Instr 395 @ 0x18b0 (6320) - SHF.R.U32.HI R21, RZ, c[0x0][0x1bc], R10 ;
 Instr 396 @ 0x18c0 (6336) - IMAD.MOV R10, RZ, RZ, -R21 ;
 Instr 397 @ 0x18d0 (6352) - IMAD R10, R10, c[0x0][0x1b4], R11 ;
 Instr 398 @ 0x18e0 (6368) - IMAD R10, R10, c[0x0][0x2e0], RZ ;
 Instr 399 @ 0x18f0 (6384) - @!P0 BRA 0x2650 ;
Basic block id 49 - num instructions 10
 Instr 400 @ 0x1900 (6400) - MOV R18, RZ ;
 Instr 401 @ 0x1910 (6416) - IMAD.MOV.U32 R19, RZ, RZ, R21 ;
 Instr 402 @ 0x1920 (6432) - MOV R20, c[0x0][0x1b0] ;
 Instr 403 @ 0x1930 (6448) - IMAD.HI.U32 R18, R21, c[0x0][0x1c4], R18 ;
 Instr 404 @ 0x1940 (6464) - ISETP.NE.AND P0, PT, R20, 0x2, PT ;
 Instr 405 @ 0x1950 (6480) - SHF.R.U32.HI R22, RZ, c[0x0][0x1c8], R18 ;
 Instr 406 @ 0x1960 (6496) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 407 @ 0x1970 (6512) - IMAD R19, R19, c[0x0][0x1c0], R21 ;
 Instr 408 @ 0x1980 (6528) - IMAD R10, R19, c[0x0][0x2e4], R10 ;
 Instr 409 @ 0x1990 (6544) - @!P0 BRA 0x2650 ;
Basic block id 50 - num instructions 9
 Instr 410 @ 0x19a0 (6560) - MOV R18, RZ ;
 Instr 411 @ 0x19b0 (6576) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 412 @ 0x19c0 (6592) - ISETP.NE.AND P0, PT, R20, 0x3, PT ;
 Instr 413 @ 0x19d0 (6608) - IMAD.HI.U32 R18, R22, c[0x0][0x1d0], R18 ;
 Instr 414 @ 0x19e0 (6624) - SHF.R.U32.HI R21, RZ, c[0x0][0x1d4], R18 ;
 Instr 415 @ 0x19f0 (6640) - IADD3 R19, -R21, RZ, RZ ;
 Instr 416 @ 0x1a00 (6656) - IMAD R19, R19, c[0x0][0x1cc], R22 ;
 Instr 417 @ 0x1a10 (6672) - IMAD R10, R19, c[0x0][0x2e8], R10 ;
 Instr 418 @ 0x1a20 (6688) - @!P0 BRA 0x2650 ;
Basic block id 51 - num instructions 9
 Instr 419 @ 0x1a30 (6704) - MOV R19, R21 ;
 Instr 420 @ 0x1a40 (6720) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 421 @ 0x1a50 (6736) - ISETP.NE.AND P0, PT, R20, 0x4, PT ;
 Instr 422 @ 0x1a60 (6752) - IMAD.HI.U32 R18, R21, c[0x0][0x1dc], R18 ;
 Instr 423 @ 0x1a70 (6768) - SHF.R.U32.HI R22, RZ, c[0x0][0x1e0], R18 ;
 Instr 424 @ 0x1a80 (6784) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 425 @ 0x1a90 (6800) - IMAD R19, R19, c[0x0][0x1d8], R21 ;
 Instr 426 @ 0x1aa0 (6816) - IMAD R10, R19, c[0x0][0x2ec], R10 ;
 Instr 427 @ 0x1ab0 (6832) - @!P0 BRA 0x2650 ;
Basic block id 52 - num instructions 9
 Instr 428 @ 0x1ac0 (6848) - MOV R18, RZ ;
 Instr 429 @ 0x1ad0 (6864) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 430 @ 0x1ae0 (6880) - ISETP.NE.AND P0, PT, R20, 0x5, PT ;
 Instr 431 @ 0x1af0 (6896) - IMAD.HI.U32 R18, R22, c[0x0][0x1e8], R18 ;
 Instr 432 @ 0x1b00 (6912) - SHF.R.U32.HI R21, RZ, c[0x0][0x1ec], R18 ;
 Instr 433 @ 0x1b10 (6928) - IADD3 R19, -R21, RZ, RZ ;
 Instr 434 @ 0x1b20 (6944) - IMAD R19, R19, c[0x0][0x1e4], R22 ;
 Instr 435 @ 0x1b30 (6960) - IMAD R10, R19, c[0x0][0x2f0], R10 ;
 Instr 436 @ 0x1b40 (6976) - @!P0 BRA 0x2650 ;
Basic block id 53 - num instructions 9
 Instr 437 @ 0x1b50 (6992) - MOV R19, R21 ;
 Instr 438 @ 0x1b60 (7008) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 439 @ 0x1b70 (7024) - ISETP.NE.AND P0, PT, R20, 0x6, PT ;
 Instr 440 @ 0x1b80 (7040) - IMAD.HI.U32 R18, R21, c[0x0][0x1f4], R18 ;
 Instr 441 @ 0x1b90 (7056) - SHF.R.U32.HI R22, RZ, c[0x0][0x1f8], R18 ;
 Instr 442 @ 0x1ba0 (7072) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 443 @ 0x1bb0 (7088) - IMAD R19, R19, c[0x0][0x1f0], R21 ;
 Instr 444 @ 0x1bc0 (7104) - IMAD R10, R19, c[0x0][0x2f4], R10 ;
 Instr 445 @ 0x1bd0 (7120) - @!P0 BRA 0x2650 ;
Basic block id 54 - num instructions 9
 Instr 446 @ 0x1be0 (7136) - MOV R18, RZ ;
 Instr 447 @ 0x1bf0 (7152) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 448 @ 0x1c00 (7168) - ISETP.NE.AND P0, PT, R20, 0x7, PT ;
 Instr 449 @ 0x1c10 (7184) - IMAD.HI.U32 R18, R22, c[0x0][0x200], R18 ;
 Instr 450 @ 0x1c20 (7200) - SHF.R.U32.HI R21, RZ, c[0x0][0x204], R18 ;
 Instr 451 @ 0x1c30 (7216) - IADD3 R19, -R21, RZ, RZ ;
 Instr 452 @ 0x1c40 (7232) - IMAD R19, R19, c[0x0][0x1fc], R22 ;
 Instr 453 @ 0x1c50 (7248) - IMAD R10, R19, c[0x0][0x2f8], R10 ;
 Instr 454 @ 0x1c60 (7264) - @!P0 BRA 0x2650 ;
Basic block id 55 - num instructions 9
 Instr 455 @ 0x1c70 (7280) - MOV R19, R21 ;
 Instr 456 @ 0x1c80 (7296) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 457 @ 0x1c90 (7312) - ISETP.NE.AND P0, PT, R20, 0x8, PT ;
 Instr 458 @ 0x1ca0 (7328) - IMAD.HI.U32 R18, R21, c[0x0][0x20c], R18 ;
 Instr 459 @ 0x1cb0 (7344) - SHF.R.U32.HI R22, RZ, c[0x0][0x210], R18 ;
 Instr 460 @ 0x1cc0 (7360) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 461 @ 0x1cd0 (7376) - IMAD R19, R19, c[0x0][0x208], R21 ;
 Instr 462 @ 0x1ce0 (7392) - IMAD R10, R19, c[0x0][0x2fc], R10 ;
 Instr 463 @ 0x1cf0 (7408) - @!P0 BRA 0x2650 ;
Basic block id 56 - num instructions 9
 Instr 464 @ 0x1d00 (7424) - MOV R18, RZ ;
 Instr 465 @ 0x1d10 (7440) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 466 @ 0x1d20 (7456) - ISETP.NE.AND P0, PT, R20, 0x9, PT ;
 Instr 467 @ 0x1d30 (7472) - IMAD.HI.U32 R18, R22, c[0x0][0x218], R18 ;
 Instr 468 @ 0x1d40 (7488) - SHF.R.U32.HI R21, RZ, c[0x0][0x21c], R18 ;
 Instr 469 @ 0x1d50 (7504) - IADD3 R19, -R21, RZ, RZ ;
 Instr 470 @ 0x1d60 (7520) - IMAD R19, R19, c[0x0][0x214], R22 ;
 Instr 471 @ 0x1d70 (7536) - IMAD R10, R19, c[0x0][0x300], R10 ;
 Instr 472 @ 0x1d80 (7552) - @!P0 BRA 0x2650 ;
Basic block id 57 - num instructions 9
 Instr 473 @ 0x1d90 (7568) - MOV R19, R21 ;
 Instr 474 @ 0x1da0 (7584) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 475 @ 0x1db0 (7600) - ISETP.NE.AND P0, PT, R20, 0xa, PT ;
 Instr 476 @ 0x1dc0 (7616) - IMAD.HI.U32 R18, R21, c[0x0][0x224], R18 ;
 Instr 477 @ 0x1dd0 (7632) - SHF.R.U32.HI R22, RZ, c[0x0][0x228], R18 ;
 Instr 478 @ 0x1de0 (7648) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 479 @ 0x1df0 (7664) - IMAD R19, R19, c[0x0][0x220], R21 ;
 Instr 480 @ 0x1e00 (7680) - IMAD R10, R19, c[0x0][0x304], R10 ;
 Instr 481 @ 0x1e10 (7696) - @!P0 BRA 0x2650 ;
Basic block id 58 - num instructions 9
 Instr 482 @ 0x1e20 (7712) - MOV R18, RZ ;
 Instr 483 @ 0x1e30 (7728) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 484 @ 0x1e40 (7744) - ISETP.NE.AND P0, PT, R20, 0xb, PT ;
 Instr 485 @ 0x1e50 (7760) - IMAD.HI.U32 R18, R22, c[0x0][0x230], R18 ;
 Instr 486 @ 0x1e60 (7776) - SHF.R.U32.HI R21, RZ, c[0x0][0x234], R18 ;
 Instr 487 @ 0x1e70 (7792) - IADD3 R19, -R21, RZ, RZ ;
 Instr 488 @ 0x1e80 (7808) - IMAD R19, R19, c[0x0][0x22c], R22 ;
 Instr 489 @ 0x1e90 (7824) - IMAD R10, R19, c[0x0][0x308], R10 ;
 Instr 490 @ 0x1ea0 (7840) - @!P0 BRA 0x2650 ;
Basic block id 59 - num instructions 9
 Instr 491 @ 0x1eb0 (7856) - MOV R19, R21 ;
 Instr 492 @ 0x1ec0 (7872) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 493 @ 0x1ed0 (7888) - ISETP.NE.AND P0, PT, R20, 0xc, PT ;
 Instr 494 @ 0x1ee0 (7904) - IMAD.HI.U32 R18, R21, c[0x0][0x23c], R18 ;
 Instr 495 @ 0x1ef0 (7920) - SHF.R.U32.HI R22, RZ, c[0x0][0x240], R18 ;
 Instr 496 @ 0x1f00 (7936) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 497 @ 0x1f10 (7952) - IMAD R19, R19, c[0x0][0x238], R21 ;
 Instr 498 @ 0x1f20 (7968) - IMAD R10, R19, c[0x0][0x30c], R10 ;
 Instr 499 @ 0x1f30 (7984) - @!P0 BRA 0x2650 ;
Basic block id 60 - num instructions 9
 Instr 500 @ 0x1f40 (8000) - MOV R18, RZ ;
 Instr 501 @ 0x1f50 (8016) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 502 @ 0x1f60 (8032) - ISETP.NE.AND P0, PT, R20, 0xd, PT ;
 Instr 503 @ 0x1f70 (8048) - IMAD.HI.U32 R18, R22, c[0x0][0x248], R18 ;
 Instr 504 @ 0x1f80 (8064) - SHF.R.U32.HI R21, RZ, c[0x0][0x24c], R18 ;
 Instr 505 @ 0x1f90 (8080) - IADD3 R19, -R21, RZ, RZ ;
 Instr 506 @ 0x1fa0 (8096) - IMAD R19, R19, c[0x0][0x244], R22 ;
 Instr 507 @ 0x1fb0 (8112) - IMAD R10, R19, c[0x0][0x310], R10 ;
 Instr 508 @ 0x1fc0 (8128) - @!P0 BRA 0x2650 ;
Basic block id 61 - num instructions 9
 Instr 509 @ 0x1fd0 (8144) - MOV R19, R21 ;
 Instr 510 @ 0x1fe0 (8160) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 511 @ 0x1ff0 (8176) - ISETP.NE.AND P0, PT, R20, 0xe, PT ;
 Instr 512 @ 0x2000 (8192) - IMAD.HI.U32 R18, R21, c[0x0][0x254], R18 ;
 Instr 513 @ 0x2010 (8208) - SHF.R.U32.HI R22, RZ, c[0x0][0x258], R18 ;
 Instr 514 @ 0x2020 (8224) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 515 @ 0x2030 (8240) - IMAD R19, R19, c[0x0][0x250], R21 ;
 Instr 516 @ 0x2040 (8256) - IMAD R10, R19, c[0x0][0x314], R10 ;
 Instr 517 @ 0x2050 (8272) - @!P0 BRA 0x2650 ;
Basic block id 62 - num instructions 9
 Instr 518 @ 0x2060 (8288) - MOV R18, RZ ;
 Instr 519 @ 0x2070 (8304) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 520 @ 0x2080 (8320) - ISETP.NE.AND P0, PT, R20, 0xf, PT ;
 Instr 521 @ 0x2090 (8336) - IMAD.HI.U32 R18, R22, c[0x0][0x260], R18 ;
 Instr 522 @ 0x20a0 (8352) - SHF.R.U32.HI R21, RZ, c[0x0][0x264], R18 ;
 Instr 523 @ 0x20b0 (8368) - IADD3 R19, -R21, RZ, RZ ;
 Instr 524 @ 0x20c0 (8384) - IMAD R19, R19, c[0x0][0x25c], R22 ;
 Instr 525 @ 0x20d0 (8400) - IMAD R10, R19, c[0x0][0x318], R10 ;
 Instr 526 @ 0x20e0 (8416) - @!P0 BRA 0x2650 ;
Basic block id 63 - num instructions 9
 Instr 527 @ 0x20f0 (8432) - MOV R19, R21 ;
 Instr 528 @ 0x2100 (8448) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 529 @ 0x2110 (8464) - ISETP.NE.AND P0, PT, R20, 0x10, PT ;
 Instr 530 @ 0x2120 (8480) - IMAD.HI.U32 R18, R21, c[0x0][0x26c], R18 ;
 Instr 531 @ 0x2130 (8496) - SHF.R.U32.HI R22, RZ, c[0x0][0x270], R18 ;
 Instr 532 @ 0x2140 (8512) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 533 @ 0x2150 (8528) - IMAD R19, R19, c[0x0][0x268], R21 ;
 Instr 534 @ 0x2160 (8544) - IMAD R10, R19, c[0x0][0x31c], R10 ;
 Instr 535 @ 0x2170 (8560) - @!P0 BRA 0x2650 ;
Basic block id 64 - num instructions 9
 Instr 536 @ 0x2180 (8576) - MOV R18, RZ ;
 Instr 537 @ 0x2190 (8592) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 538 @ 0x21a0 (8608) - ISETP.NE.AND P0, PT, R20, 0x11, PT ;
 Instr 539 @ 0x21b0 (8624) - IMAD.HI.U32 R18, R22, c[0x0][0x278], R18 ;
 Instr 540 @ 0x21c0 (8640) - SHF.R.U32.HI R21, RZ, c[0x0][0x27c], R18 ;
 Instr 541 @ 0x21d0 (8656) - IADD3 R19, -R21, RZ, RZ ;
 Instr 542 @ 0x21e0 (8672) - IMAD R19, R19, c[0x0][0x274], R22 ;
 Instr 543 @ 0x21f0 (8688) - IMAD R10, R19, c[0x0][0x320], R10 ;
 Instr 544 @ 0x2200 (8704) - @!P0 BRA 0x2650 ;
Basic block id 65 - num instructions 9
 Instr 545 @ 0x2210 (8720) - MOV R19, R21 ;
 Instr 546 @ 0x2220 (8736) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 547 @ 0x2230 (8752) - ISETP.NE.AND P0, PT, R20, 0x12, PT ;
 Instr 548 @ 0x2240 (8768) - IMAD.HI.U32 R18, R21, c[0x0][0x284], R18 ;
 Instr 549 @ 0x2250 (8784) - SHF.R.U32.HI R22, RZ, c[0x0][0x288], R18 ;
 Instr 550 @ 0x2260 (8800) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 551 @ 0x2270 (8816) - IMAD R19, R19, c[0x0][0x280], R21 ;
 Instr 552 @ 0x2280 (8832) - IMAD R10, R19, c[0x0][0x324], R10 ;
 Instr 553 @ 0x2290 (8848) - @!P0 BRA 0x2650 ;
Basic block id 66 - num instructions 9
 Instr 554 @ 0x22a0 (8864) - MOV R18, RZ ;
 Instr 555 @ 0x22b0 (8880) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 556 @ 0x22c0 (8896) - ISETP.NE.AND P0, PT, R20, 0x13, PT ;
 Instr 557 @ 0x22d0 (8912) - IMAD.HI.U32 R18, R22, c[0x0][0x290], R18 ;
 Instr 558 @ 0x22e0 (8928) - SHF.R.U32.HI R21, RZ, c[0x0][0x294], R18 ;
 Instr 559 @ 0x22f0 (8944) - IADD3 R19, -R21, RZ, RZ ;
 Instr 560 @ 0x2300 (8960) - IMAD R19, R19, c[0x0][0x28c], R22 ;
 Instr 561 @ 0x2310 (8976) - IMAD R10, R19, c[0x0][0x328], R10 ;
 Instr 562 @ 0x2320 (8992) - @!P0 BRA 0x2650 ;
Basic block id 67 - num instructions 9
 Instr 563 @ 0x2330 (9008) - MOV R19, R21 ;
 Instr 564 @ 0x2340 (9024) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 565 @ 0x2350 (9040) - ISETP.NE.AND P0, PT, R20, 0x14, PT ;
 Instr 566 @ 0x2360 (9056) - IMAD.HI.U32 R18, R21, c[0x0][0x29c], R18 ;
 Instr 567 @ 0x2370 (9072) - SHF.R.U32.HI R22, RZ, c[0x0][0x2a0], R18 ;
 Instr 568 @ 0x2380 (9088) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 569 @ 0x2390 (9104) - IMAD R19, R19, c[0x0][0x298], R21 ;
 Instr 570 @ 0x23a0 (9120) - IMAD R10, R19, c[0x0][0x32c], R10 ;
 Instr 571 @ 0x23b0 (9136) - @!P0 BRA 0x2650 ;
Basic block id 68 - num instructions 9
 Instr 572 @ 0x23c0 (9152) - MOV R18, RZ ;
 Instr 573 @ 0x23d0 (9168) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 574 @ 0x23e0 (9184) - ISETP.NE.AND P0, PT, R20, 0x15, PT ;
 Instr 575 @ 0x23f0 (9200) - IMAD.HI.U32 R18, R22, c[0x0][0x2a8], R18 ;
 Instr 576 @ 0x2400 (9216) - SHF.R.U32.HI R21, RZ, c[0x0][0x2ac], R18 ;
 Instr 577 @ 0x2410 (9232) - IADD3 R19, -R21, RZ, RZ ;
 Instr 578 @ 0x2420 (9248) - IMAD R19, R19, c[0x0][0x2a4], R22 ;
 Instr 579 @ 0x2430 (9264) - IMAD R10, R19, c[0x0][0x330], R10 ;
 Instr 580 @ 0x2440 (9280) - @!P0 BRA 0x2650 ;
Basic block id 69 - num instructions 9
 Instr 581 @ 0x2450 (9296) - MOV R19, R21 ;
 Instr 582 @ 0x2460 (9312) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 583 @ 0x2470 (9328) - ISETP.NE.AND P0, PT, R20, 0x16, PT ;
 Instr 584 @ 0x2480 (9344) - IMAD.HI.U32 R18, R21, c[0x0][0x2b4], R18 ;
 Instr 585 @ 0x2490 (9360) - SHF.R.U32.HI R22, RZ, c[0x0][0x2b8], R18 ;
 Instr 586 @ 0x24a0 (9376) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 587 @ 0x24b0 (9392) - IMAD R19, R19, c[0x0][0x2b0], R21 ;
 Instr 588 @ 0x24c0 (9408) - IMAD R10, R19, c[0x0][0x334], R10 ;
 Instr 589 @ 0x24d0 (9424) - @!P0 BRA 0x2650 ;
Basic block id 70 - num instructions 9
 Instr 590 @ 0x24e0 (9440) - MOV R18, RZ ;
 Instr 591 @ 0x24f0 (9456) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 592 @ 0x2500 (9472) - ISETP.NE.AND P0, PT, R20, 0x17, PT ;
 Instr 593 @ 0x2510 (9488) - IMAD.HI.U32 R18, R22, c[0x0][0x2c0], R18 ;
 Instr 594 @ 0x2520 (9504) - SHF.R.U32.HI R23, RZ, c[0x0][0x2c4], R18 ;
 Instr 595 @ 0x2530 (9520) - IADD3 R19, -R23, RZ, RZ ;
 Instr 596 @ 0x2540 (9536) - IMAD R19, R19, c[0x0][0x2bc], R22 ;
 Instr 597 @ 0x2550 (9552) - IMAD R10, R19, c[0x0][0x338], R10 ;
 Instr 598 @ 0x2560 (9568) - @!P0 BRA 0x2650 ;
Basic block id 71 - num instructions 14
 Instr 599 @ 0x2570 (9584) - ISETP.NE.AND P0, PT, R20, 0x18, PT ;
 Instr 600 @ 0x2580 (9600) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 601 @ 0x2590 (9616) - MOV R19, R23 ;
 Instr 602 @ 0x25a0 (9632) - IMAD.HI.U32 R18, R23, c[0x0][0x2cc], R18 ;
 Instr 603 @ 0x25b0 (9648) - SHF.R.U32.HI R19, RZ, c[0x0][0x2d0], R18 ;
 Instr 604 @ 0x25c0 (9664) - @P0 IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 605 @ 0x25d0 (9680) - IADD3 R21, -R19.reuse, RZ, RZ ;
 Instr 606 @ 0x25e0 (9696) - @P0 IMAD.HI.U32 R18, R19, c[0x0][0x2d8], R18 ;
 Instr 607 @ 0x25f0 (9712) - IMAD R21, R21, c[0x0][0x2c8], R23 ;
 Instr 608 @ 0x2600 (9728) - @P0 SHF.R.U32.HI R18, RZ, c[0x0][0x2dc], R18 ;
 Instr 609 @ 0x2610 (9744) - IMAD R10, R21, c[0x0][0x33c], R10 ;
 Instr 610 @ 0x2620 (9760) - @P0 IMAD.MOV R18, RZ, RZ, -R18 ;
 Instr 611 @ 0x2630 (9776) - @P0 IMAD R19, R18, c[0x0][0x2d4], R19 ;
 Instr 612 @ 0x2640 (9792) - @P0 IMAD R10, R19, c[0x0][0x340], R10 ;
Basic block id 72 - num instructions 6
 Instr 613 @ 0x2650 (9808) - LOP3.LUT R19, R10, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 614 @ 0x2660 (9824) - IADD3 R18, P0, R4, R19, RZ ;
 Instr 615 @ 0x2670 (9840) - IADD3.X R19, RZ, R5, RZ, P0, !PT ;
 Instr 616 @ 0x2680 (9856) - LDG.E.64.SYS R18, [R18] ;
 Instr 617 @ 0x2690 (9872) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 618 @ 0x26a0 (9888) - @!P4 BRA 0x3480 ;
Basic block id 73 - num instructions 9
 Instr 619 @ 0x26b0 (9904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 620 @ 0x26c0 (9920) - IMAD.HI.U32 R6, R11, c[0x0][0x1b8], R10 ;
 Instr 621 @ 0x26d0 (9936) - MOV R10, c[0x0][0x1b0] ;
 Instr 622 @ 0x26e0 (9952) - ISETP.NE.AND P0, PT, R10, 0x1, PT ;
 Instr 623 @ 0x26f0 (9968) - SHF.R.U32.HI R22, RZ, c[0x0][0x1bc], R6 ;
 Instr 624 @ 0x2700 (9984) - IMAD.MOV R6, RZ, RZ, -R22 ;
 Instr 625 @ 0x2710 (10000) - IMAD R6, R6, c[0x0][0x1b4], R11 ;
 Instr 626 @ 0x2720 (10016) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 627 @ 0x2730 (10032) - @!P0 BRA 0x3480 ;
Basic block id 74 - num instructions 9
 Instr 628 @ 0x2740 (10048) - MOV R20, RZ ;
 Instr 629 @ 0x2750 (10064) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 630 @ 0x2760 (10080) - ISETP.NE.AND P0, PT, R10, 0x2, PT ;
 Instr 631 @ 0x2770 (10096) - IMAD.HI.U32 R20, R22, c[0x0][0x1c4], R20 ;
 Instr 632 @ 0x2780 (10112) - SHF.R.U32.HI R23, RZ, c[0x0][0x1c8], R20 ;
 Instr 633 @ 0x2790 (10128) - IADD3 R21, -R23, RZ, RZ ;
 Instr 634 @ 0x27a0 (10144) - IMAD R21, R21, c[0x0][0x1c0], R22 ;
 Instr 635 @ 0x27b0 (10160) - IMAD R6, R21, c[0x0][0x2e4], R6 ;
 Instr 636 @ 0x27c0 (10176) - @!P0 BRA 0x3480 ;
Basic block id 75 - num instructions 9
 Instr 637 @ 0x27d0 (10192) - MOV R21, R23 ;
 Instr 638 @ 0x27e0 (10208) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 639 @ 0x27f0 (10224) - ISETP.NE.AND P0, PT, R10, 0x3, PT ;
 Instr 640 @ 0x2800 (10240) - IMAD.HI.U32 R20, R23, c[0x0][0x1d0], R20 ;
 Instr 641 @ 0x2810 (10256) - SHF.R.U32.HI R22, RZ, c[0x0][0x1d4], R20 ;
 Instr 642 @ 0x2820 (10272) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 643 @ 0x2830 (10288) - IMAD R21, R21, c[0x0][0x1cc], R23 ;
 Instr 644 @ 0x2840 (10304) - IMAD R6, R21, c[0x0][0x2e8], R6 ;
 Instr 645 @ 0x2850 (10320) - @!P0 BRA 0x3480 ;
Basic block id 76 - num instructions 9
 Instr 646 @ 0x2860 (10336) - MOV R20, RZ ;
 Instr 647 @ 0x2870 (10352) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 648 @ 0x2880 (10368) - ISETP.NE.AND P0, PT, R10, 0x4, PT ;
 Instr 649 @ 0x2890 (10384) - IMAD.HI.U32 R20, R22, c[0x0][0x1dc], R20 ;
 Instr 650 @ 0x28a0 (10400) - SHF.R.U32.HI R23, RZ, c[0x0][0x1e0], R20 ;
 Instr 651 @ 0x28b0 (10416) - IADD3 R21, -R23, RZ, RZ ;
 Instr 652 @ 0x28c0 (10432) - IMAD R21, R21, c[0x0][0x1d8], R22 ;
 Instr 653 @ 0x28d0 (10448) - IMAD R6, R21, c[0x0][0x2ec], R6 ;
 Instr 654 @ 0x28e0 (10464) - @!P0 BRA 0x3480 ;
Basic block id 77 - num instructions 9
 Instr 655 @ 0x28f0 (10480) - MOV R21, R23 ;
 Instr 656 @ 0x2900 (10496) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 657 @ 0x2910 (10512) - ISETP.NE.AND P0, PT, R10, 0x5, PT ;
 Instr 658 @ 0x2920 (10528) - IMAD.HI.U32 R20, R23, c[0x0][0x1e8], R20 ;
 Instr 659 @ 0x2930 (10544) - SHF.R.U32.HI R22, RZ, c[0x0][0x1ec], R20 ;
 Instr 660 @ 0x2940 (10560) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 661 @ 0x2950 (10576) - IMAD R21, R21, c[0x0][0x1e4], R23 ;
 Instr 662 @ 0x2960 (10592) - IMAD R6, R21, c[0x0][0x2f0], R6 ;
 Instr 663 @ 0x2970 (10608) - @!P0 BRA 0x3480 ;
Basic block id 78 - num instructions 9
 Instr 664 @ 0x2980 (10624) - MOV R20, RZ ;
 Instr 665 @ 0x2990 (10640) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 666 @ 0x29a0 (10656) - ISETP.NE.AND P0, PT, R10, 0x6, PT ;
 Instr 667 @ 0x29b0 (10672) - IMAD.HI.U32 R20, R22, c[0x0][0x1f4], R20 ;
 Instr 668 @ 0x29c0 (10688) - SHF.R.U32.HI R23, RZ, c[0x0][0x1f8], R20 ;
 Instr 669 @ 0x29d0 (10704) - IADD3 R21, -R23, RZ, RZ ;
 Instr 670 @ 0x29e0 (10720) - IMAD R21, R21, c[0x0][0x1f0], R22 ;
 Instr 671 @ 0x29f0 (10736) - IMAD R6, R21, c[0x0][0x2f4], R6 ;
 Instr 672 @ 0x2a00 (10752) - @!P0 BRA 0x3480 ;
Basic block id 79 - num instructions 9
 Instr 673 @ 0x2a10 (10768) - MOV R21, R23 ;
 Instr 674 @ 0x2a20 (10784) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 675 @ 0x2a30 (10800) - ISETP.NE.AND P0, PT, R10, 0x7, PT ;
 Instr 676 @ 0x2a40 (10816) - IMAD.HI.U32 R20, R23, c[0x0][0x200], R20 ;
 Instr 677 @ 0x2a50 (10832) - SHF.R.U32.HI R22, RZ, c[0x0][0x204], R20 ;
 Instr 678 @ 0x2a60 (10848) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 679 @ 0x2a70 (10864) - IMAD R21, R21, c[0x0][0x1fc], R23 ;
 Instr 680 @ 0x2a80 (10880) - IMAD R6, R21, c[0x0][0x2f8], R6 ;
 Instr 681 @ 0x2a90 (10896) - @!P0 BRA 0x3480 ;
Basic block id 80 - num instructions 9
 Instr 682 @ 0x2aa0 (10912) - MOV R20, RZ ;
 Instr 683 @ 0x2ab0 (10928) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 684 @ 0x2ac0 (10944) - ISETP.NE.AND P0, PT, R10, 0x8, PT ;
 Instr 685 @ 0x2ad0 (10960) - IMAD.HI.U32 R20, R22, c[0x0][0x20c], R20 ;
 Instr 686 @ 0x2ae0 (10976) - SHF.R.U32.HI R23, RZ, c[0x0][0x210], R20 ;
 Instr 687 @ 0x2af0 (10992) - IADD3 R21, -R23, RZ, RZ ;
 Instr 688 @ 0x2b00 (11008) - IMAD R21, R21, c[0x0][0x208], R22 ;
 Instr 689 @ 0x2b10 (11024) - IMAD R6, R21, c[0x0][0x2fc], R6 ;
 Instr 690 @ 0x2b20 (11040) - @!P0 BRA 0x3480 ;
Basic block id 81 - num instructions 9
 Instr 691 @ 0x2b30 (11056) - MOV R21, R23 ;
 Instr 692 @ 0x2b40 (11072) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 693 @ 0x2b50 (11088) - ISETP.NE.AND P0, PT, R10, 0x9, PT ;
 Instr 694 @ 0x2b60 (11104) - IMAD.HI.U32 R20, R23, c[0x0][0x218], R20 ;
 Instr 695 @ 0x2b70 (11120) - SHF.R.U32.HI R22, RZ, c[0x0][0x21c], R20 ;
 Instr 696 @ 0x2b80 (11136) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 697 @ 0x2b90 (11152) - IMAD R21, R21, c[0x0][0x214], R23 ;
 Instr 698 @ 0x2ba0 (11168) - IMAD R6, R21, c[0x0][0x300], R6 ;
 Instr 699 @ 0x2bb0 (11184) - @!P0 BRA 0x3480 ;
Basic block id 82 - num instructions 9
 Instr 700 @ 0x2bc0 (11200) - MOV R20, RZ ;
 Instr 701 @ 0x2bd0 (11216) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 702 @ 0x2be0 (11232) - ISETP.NE.AND P0, PT, R10, 0xa, PT ;
 Instr 703 @ 0x2bf0 (11248) - IMAD.HI.U32 R20, R22, c[0x0][0x224], R20 ;
 Instr 704 @ 0x2c00 (11264) - SHF.R.U32.HI R23, RZ, c[0x0][0x228], R20 ;
 Instr 705 @ 0x2c10 (11280) - IADD3 R21, -R23, RZ, RZ ;
 Instr 706 @ 0x2c20 (11296) - IMAD R21, R21, c[0x0][0x220], R22 ;
 Instr 707 @ 0x2c30 (11312) - IMAD R6, R21, c[0x0][0x304], R6 ;
 Instr 708 @ 0x2c40 (11328) - @!P0 BRA 0x3480 ;
Basic block id 83 - num instructions 9
 Instr 709 @ 0x2c50 (11344) - MOV R21, R23 ;
 Instr 710 @ 0x2c60 (11360) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 711 @ 0x2c70 (11376) - ISETP.NE.AND P0, PT, R10, 0xb, PT ;
 Instr 712 @ 0x2c80 (11392) - IMAD.HI.U32 R20, R23, c[0x0][0x230], R20 ;
 Instr 713 @ 0x2c90 (11408) - SHF.R.U32.HI R22, RZ, c[0x0][0x234], R20 ;
 Instr 714 @ 0x2ca0 (11424) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 715 @ 0x2cb0 (11440) - IMAD R21, R21, c[0x0][0x22c], R23 ;
 Instr 716 @ 0x2cc0 (11456) - IMAD R6, R21, c[0x0][0x308], R6 ;
 Instr 717 @ 0x2cd0 (11472) - @!P0 BRA 0x3480 ;
Basic block id 84 - num instructions 9
 Instr 718 @ 0x2ce0 (11488) - MOV R20, RZ ;
 Instr 719 @ 0x2cf0 (11504) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 720 @ 0x2d00 (11520) - ISETP.NE.AND P0, PT, R10, 0xc, PT ;
 Instr 721 @ 0x2d10 (11536) - IMAD.HI.U32 R20, R22, c[0x0][0x23c], R20 ;
 Instr 722 @ 0x2d20 (11552) - SHF.R.U32.HI R23, RZ, c[0x0][0x240], R20 ;
 Instr 723 @ 0x2d30 (11568) - IADD3 R21, -R23, RZ, RZ ;
 Instr 724 @ 0x2d40 (11584) - IMAD R21, R21, c[0x0][0x238], R22 ;
 Instr 725 @ 0x2d50 (11600) - IMAD R6, R21, c[0x0][0x30c], R6 ;
 Instr 726 @ 0x2d60 (11616) - @!P0 BRA 0x3480 ;
Basic block id 85 - num instructions 9
 Instr 727 @ 0x2d70 (11632) - MOV R21, R23 ;
 Instr 728 @ 0x2d80 (11648) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 729 @ 0x2d90 (11664) - ISETP.NE.AND P0, PT, R10, 0xd, PT ;
 Instr 730 @ 0x2da0 (11680) - IMAD.HI.U32 R20, R23, c[0x0][0x248], R20 ;
 Instr 731 @ 0x2db0 (11696) - SHF.R.U32.HI R22, RZ, c[0x0][0x24c], R20 ;
 Instr 732 @ 0x2dc0 (11712) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 733 @ 0x2dd0 (11728) - IMAD R21, R21, c[0x0][0x244], R23 ;
 Instr 734 @ 0x2de0 (11744) - IMAD R6, R21, c[0x0][0x310], R6 ;
 Instr 735 @ 0x2df0 (11760) - @!P0 BRA 0x3480 ;
Basic block id 86 - num instructions 9
 Instr 736 @ 0x2e00 (11776) - MOV R20, RZ ;
 Instr 737 @ 0x2e10 (11792) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 738 @ 0x2e20 (11808) - ISETP.NE.AND P0, PT, R10, 0xe, PT ;
 Instr 739 @ 0x2e30 (11824) - IMAD.HI.U32 R20, R22, c[0x0][0x254], R20 ;
 Instr 740 @ 0x2e40 (11840) - SHF.R.U32.HI R23, RZ, c[0x0][0x258], R20 ;
 Instr 741 @ 0x2e50 (11856) - IADD3 R21, -R23, RZ, RZ ;
 Instr 742 @ 0x2e60 (11872) - IMAD R21, R21, c[0x0][0x250], R22 ;
 Instr 743 @ 0x2e70 (11888) - IMAD R6, R21, c[0x0][0x314], R6 ;
 Instr 744 @ 0x2e80 (11904) - @!P0 BRA 0x3480 ;
Basic block id 87 - num instructions 9
 Instr 745 @ 0x2e90 (11920) - MOV R21, R23 ;
 Instr 746 @ 0x2ea0 (11936) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 747 @ 0x2eb0 (11952) - ISETP.NE.AND P0, PT, R10, 0xf, PT ;
 Instr 748 @ 0x2ec0 (11968) - IMAD.HI.U32 R20, R23, c[0x0][0x260], R20 ;
 Instr 749 @ 0x2ed0 (11984) - SHF.R.U32.HI R22, RZ, c[0x0][0x264], R20 ;
 Instr 750 @ 0x2ee0 (12000) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 751 @ 0x2ef0 (12016) - IMAD R21, R21, c[0x0][0x25c], R23 ;
 Instr 752 @ 0x2f00 (12032) - IMAD R6, R21, c[0x0][0x318], R6 ;
 Instr 753 @ 0x2f10 (12048) - @!P0 BRA 0x3480 ;
Basic block id 88 - num instructions 9
 Instr 754 @ 0x2f20 (12064) - MOV R20, RZ ;
 Instr 755 @ 0x2f30 (12080) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 756 @ 0x2f40 (12096) - ISETP.NE.AND P0, PT, R10, 0x10, PT ;
 Instr 757 @ 0x2f50 (12112) - IMAD.HI.U32 R20, R22, c[0x0][0x26c], R20 ;
 Instr 758 @ 0x2f60 (12128) - SHF.R.U32.HI R23, RZ, c[0x0][0x270], R20 ;
 Instr 759 @ 0x2f70 (12144) - IADD3 R21, -R23, RZ, RZ ;
 Instr 760 @ 0x2f80 (12160) - IMAD R21, R21, c[0x0][0x268], R22 ;
 Instr 761 @ 0x2f90 (12176) - IMAD R6, R21, c[0x0][0x31c], R6 ;
 Instr 762 @ 0x2fa0 (12192) - @!P0 BRA 0x3480 ;
Basic block id 89 - num instructions 9
 Instr 763 @ 0x2fb0 (12208) - MOV R21, R23 ;
 Instr 764 @ 0x2fc0 (12224) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 765 @ 0x2fd0 (12240) - ISETP.NE.AND P0, PT, R10, 0x11, PT ;
 Instr 766 @ 0x2fe0 (12256) - IMAD.HI.U32 R20, R23, c[0x0][0x278], R20 ;
 Instr 767 @ 0x2ff0 (12272) - SHF.R.U32.HI R22, RZ, c[0x0][0x27c], R20 ;
 Instr 768 @ 0x3000 (12288) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 769 @ 0x3010 (12304) - IMAD R21, R21, c[0x0][0x274], R23 ;
 Instr 770 @ 0x3020 (12320) - IMAD R6, R21, c[0x0][0x320], R6 ;
 Instr 771 @ 0x3030 (12336) - @!P0 BRA 0x3480 ;
Basic block id 90 - num instructions 9
 Instr 772 @ 0x3040 (12352) - MOV R20, RZ ;
 Instr 773 @ 0x3050 (12368) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 774 @ 0x3060 (12384) - ISETP.NE.AND P0, PT, R10, 0x12, PT ;
 Instr 775 @ 0x3070 (12400) - IMAD.HI.U32 R20, R22, c[0x0][0x284], R20 ;
 Instr 776 @ 0x3080 (12416) - SHF.R.U32.HI R23, RZ, c[0x0][0x288], R20 ;
 Instr 777 @ 0x3090 (12432) - IADD3 R21, -R23, RZ, RZ ;
 Instr 778 @ 0x30a0 (12448) - IMAD R21, R21, c[0x0][0x280], R22 ;
 Instr 779 @ 0x30b0 (12464) - IMAD R6, R21, c[0x0][0x324], R6 ;
 Instr 780 @ 0x30c0 (12480) - @!P0 BRA 0x3480 ;
Basic block id 91 - num instructions 9
 Instr 781 @ 0x30d0 (12496) - MOV R21, R23 ;
 Instr 782 @ 0x30e0 (12512) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 783 @ 0x30f0 (12528) - ISETP.NE.AND P0, PT, R10, 0x13, PT ;
 Instr 784 @ 0x3100 (12544) - IMAD.HI.U32 R20, R23, c[0x0][0x290], R20 ;
 Instr 785 @ 0x3110 (12560) - SHF.R.U32.HI R22, RZ, c[0x0][0x294], R20 ;
 Instr 786 @ 0x3120 (12576) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 787 @ 0x3130 (12592) - IMAD R21, R21, c[0x0][0x28c], R23 ;
 Instr 788 @ 0x3140 (12608) - IMAD R6, R21, c[0x0][0x328], R6 ;
 Instr 789 @ 0x3150 (12624) - @!P0 BRA 0x3480 ;
Basic block id 92 - num instructions 9
 Instr 790 @ 0x3160 (12640) - MOV R20, RZ ;
 Instr 791 @ 0x3170 (12656) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 792 @ 0x3180 (12672) - ISETP.NE.AND P0, PT, R10, 0x14, PT ;
 Instr 793 @ 0x3190 (12688) - IMAD.HI.U32 R20, R22, c[0x0][0x29c], R20 ;
 Instr 794 @ 0x31a0 (12704) - SHF.R.U32.HI R23, RZ, c[0x0][0x2a0], R20 ;
 Instr 795 @ 0x31b0 (12720) - IADD3 R21, -R23, RZ, RZ ;
 Instr 796 @ 0x31c0 (12736) - IMAD R21, R21, c[0x0][0x298], R22 ;
 Instr 797 @ 0x31d0 (12752) - IMAD R6, R21, c[0x0][0x32c], R6 ;
 Instr 798 @ 0x31e0 (12768) - @!P0 BRA 0x3480 ;
Basic block id 93 - num instructions 9
 Instr 799 @ 0x31f0 (12784) - MOV R21, R23 ;
 Instr 800 @ 0x3200 (12800) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 801 @ 0x3210 (12816) - ISETP.NE.AND P0, PT, R10, 0x15, PT ;
 Instr 802 @ 0x3220 (12832) - IMAD.HI.U32 R20, R23, c[0x0][0x2a8], R20 ;
 Instr 803 @ 0x3230 (12848) - SHF.R.U32.HI R22, RZ, c[0x0][0x2ac], R20 ;
 Instr 804 @ 0x3240 (12864) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 805 @ 0x3250 (12880) - IMAD R21, R21, c[0x0][0x2a4], R23 ;
 Instr 806 @ 0x3260 (12896) - IMAD R6, R21, c[0x0][0x330], R6 ;
 Instr 807 @ 0x3270 (12912) - @!P0 BRA 0x3480 ;
Basic block id 94 - num instructions 9
 Instr 808 @ 0x3280 (12928) - MOV R20, RZ ;
 Instr 809 @ 0x3290 (12944) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 810 @ 0x32a0 (12960) - ISETP.NE.AND P0, PT, R10, 0x16, PT ;
 Instr 811 @ 0x32b0 (12976) - IMAD.HI.U32 R20, R22, c[0x0][0x2b4], R20 ;
 Instr 812 @ 0x32c0 (12992) - SHF.R.U32.HI R23, RZ, c[0x0][0x2b8], R20 ;
 Instr 813 @ 0x32d0 (13008) - IADD3 R21, -R23, RZ, RZ ;
 Instr 814 @ 0x32e0 (13024) - IMAD R21, R21, c[0x0][0x2b0], R22 ;
 Instr 815 @ 0x32f0 (13040) - IMAD R6, R21, c[0x0][0x334], R6 ;
 Instr 816 @ 0x3300 (13056) - @!P0 BRA 0x3480 ;
Basic block id 95 - num instructions 9
 Instr 817 @ 0x3310 (13072) - MOV R21, R23 ;
 Instr 818 @ 0x3320 (13088) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 819 @ 0x3330 (13104) - ISETP.NE.AND P0, PT, R10, 0x17, PT ;
 Instr 820 @ 0x3340 (13120) - IMAD.HI.U32 R20, R23, c[0x0][0x2c0], R20 ;
 Instr 821 @ 0x3350 (13136) - SHF.R.U32.HI R22, RZ, c[0x0][0x2c4], R20 ;
 Instr 822 @ 0x3360 (13152) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 823 @ 0x3370 (13168) - IMAD R21, R21, c[0x0][0x2bc], R23 ;
 Instr 824 @ 0x3380 (13184) - IMAD R6, R21, c[0x0][0x338], R6 ;
 Instr 825 @ 0x3390 (13200) - @!P0 BRA 0x3480 ;
Basic block id 96 - num instructions 14
 Instr 826 @ 0x33a0 (13216) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
 Instr 827 @ 0x33b0 (13232) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 828 @ 0x33c0 (13248) - MOV R20, RZ ;
 Instr 829 @ 0x33d0 (13264) - IMAD.HI.U32 R20, R22, c[0x0][0x2cc], R20 ;
 Instr 830 @ 0x33e0 (13280) - SHF.R.U32.HI R21, RZ, c[0x0][0x2d0], R20 ;
 Instr 831 @ 0x33f0 (13296) - @P0 MOV R20, RZ ;
 Instr 832 @ 0x3400 (13312) - IMAD.MOV R23, RZ, RZ, -R21.reuse ;
 Instr 833 @ 0x3410 (13328) - @P0 IMAD.HI.U32 R10, R21, c[0x0][0x2d8], R20 ;
 Instr 834 @ 0x3420 (13344) - IMAD R23, R23, c[0x0][0x2c8], R22 ;
 Instr 835 @ 0x3430 (13360) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 836 @ 0x3440 (13376) - IMAD R6, R23, c[0x0][0x33c], R6 ;
 Instr 837 @ 0x3450 (13392) - @P0 IADD3 R20, -R10, RZ, RZ ;
 Instr 838 @ 0x3460 (13408) - @P0 IMAD R21, R20, c[0x0][0x2d4], R21 ;
 Instr 839 @ 0x3470 (13424) - @P0 IMAD R6, R21, c[0x0][0x340], R6 ;
Basic block id 97 - num instructions 8
 Instr 840 @ 0x3480 (13440) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 841 @ 0x3490 (13456) - IADD3 R20, P0, R4, R21, RZ ;
 Instr 842 @ 0x34a0 (13472) - IMAD.X R21, RZ, RZ, R5, P0 ;
 Instr 843 @ 0x34b0 (13488) - LDG.E.64.SYS R20, [R20] ;
 Instr 844 @ 0x34c0 (13504) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 845 @ 0x34d0 (13520) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 846 @ 0x34e0 (13536) - MOV R6, RZ ;
 Instr 847 @ 0x34f0 (13552) - @!P4 BRA 0x42d0 ;
Basic block id 98 - num instructions 9
 Instr 848 @ 0x3500 (13568) - MOV R10, RZ ;
 Instr 849 @ 0x3510 (13584) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x1b0] ;
 Instr 850 @ 0x3520 (13600) - IMAD.HI.U32 R10, R11, c[0x0][0x1b8], R10 ;
 Instr 851 @ 0x3530 (13616) - ISETP.NE.AND P0, PT, R24, 0x1, PT ;
 Instr 852 @ 0x3540 (13632) - SHF.R.U32.HI R25, RZ, c[0x0][0x1bc], R10 ;
 Instr 853 @ 0x3550 (13648) - IADD3 R10, -R25, RZ, RZ ;
 Instr 854 @ 0x3560 (13664) - IMAD R10, R10, c[0x0][0x1b4], R11 ;
 Instr 855 @ 0x3570 (13680) - IMAD R10, R10, c[0x0][0x2e0], RZ ;
 Instr 856 @ 0x3580 (13696) - @!P0 BRA 0x42d0 ;
Basic block id 99 - num instructions 9
 Instr 857 @ 0x3590 (13712) - MOV R23, R25 ;
 Instr 858 @ 0x35a0 (13728) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 859 @ 0x35b0 (13744) - ISETP.NE.AND P0, PT, R24, 0x2, PT ;
 Instr 860 @ 0x35c0 (13760) - IMAD.HI.U32 R22, R25, c[0x0][0x1c4], R22 ;
 Instr 861 @ 0x35d0 (13776) - SHF.R.U32.HI R26, RZ, c[0x0][0x1c8], R22 ;
 Instr 862 @ 0x35e0 (13792) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 863 @ 0x35f0 (13808) - IMAD R23, R23, c[0x0][0x1c0], R25 ;
 Instr 864 @ 0x3600 (13824) - IMAD R10, R23, c[0x0][0x2e4], R10 ;
 Instr 865 @ 0x3610 (13840) - @!P0 BRA 0x42d0 ;
Basic block id 100 - num instructions 9
 Instr 866 @ 0x3620 (13856) - MOV R22, RZ ;
 Instr 867 @ 0x3630 (13872) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 868 @ 0x3640 (13888) - ISETP.NE.AND P0, PT, R24, 0x3, PT ;
 Instr 869 @ 0x3650 (13904) - IMAD.HI.U32 R22, R26, c[0x0][0x1d0], R22 ;
 Instr 870 @ 0x3660 (13920) - SHF.R.U32.HI R25, RZ, c[0x0][0x1d4], R22 ;
 Instr 871 @ 0x3670 (13936) - IADD3 R23, -R25, RZ, RZ ;
 Instr 872 @ 0x3680 (13952) - IMAD R23, R23, c[0x0][0x1cc], R26 ;
 Instr 873 @ 0x3690 (13968) - IMAD R10, R23, c[0x0][0x2e8], R10 ;
 Instr 874 @ 0x36a0 (13984) - @!P0 BRA 0x42d0 ;
Basic block id 101 - num instructions 9
 Instr 875 @ 0x36b0 (14000) - MOV R23, R25 ;
 Instr 876 @ 0x36c0 (14016) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 877 @ 0x36d0 (14032) - ISETP.NE.AND P0, PT, R24, 0x4, PT ;
 Instr 878 @ 0x36e0 (14048) - IMAD.HI.U32 R22, R25, c[0x0][0x1dc], R22 ;
 Instr 879 @ 0x36f0 (14064) - SHF.R.U32.HI R26, RZ, c[0x0][0x1e0], R22 ;
 Instr 880 @ 0x3700 (14080) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 881 @ 0x3710 (14096) - IMAD R23, R23, c[0x0][0x1d8], R25 ;
 Instr 882 @ 0x3720 (14112) - IMAD R10, R23, c[0x0][0x2ec], R10 ;
 Instr 883 @ 0x3730 (14128) - @!P0 BRA 0x42d0 ;
Basic block id 102 - num instructions 9
 Instr 884 @ 0x3740 (14144) - MOV R22, RZ ;
 Instr 885 @ 0x3750 (14160) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 886 @ 0x3760 (14176) - ISETP.NE.AND P0, PT, R24, 0x5, PT ;
 Instr 887 @ 0x3770 (14192) - IMAD.HI.U32 R22, R26, c[0x0][0x1e8], R22 ;
 Instr 888 @ 0x3780 (14208) - SHF.R.U32.HI R25, RZ, c[0x0][0x1ec], R22 ;
 Instr 889 @ 0x3790 (14224) - IADD3 R23, -R25, RZ, RZ ;
 Instr 890 @ 0x37a0 (14240) - IMAD R23, R23, c[0x0][0x1e4], R26 ;
 Instr 891 @ 0x37b0 (14256) - IMAD R10, R23, c[0x0][0x2f0], R10 ;
 Instr 892 @ 0x37c0 (14272) - @!P0 BRA 0x42d0 ;
Basic block id 103 - num instructions 9
 Instr 893 @ 0x37d0 (14288) - MOV R23, R25 ;
 Instr 894 @ 0x37e0 (14304) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 895 @ 0x37f0 (14320) - ISETP.NE.AND P0, PT, R24, 0x6, PT ;
 Instr 896 @ 0x3800 (14336) - IMAD.HI.U32 R22, R25, c[0x0][0x1f4], R22 ;
 Instr 897 @ 0x3810 (14352) - SHF.R.U32.HI R26, RZ, c[0x0][0x1f8], R22 ;
 Instr 898 @ 0x3820 (14368) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 899 @ 0x3830 (14384) - IMAD R23, R23, c[0x0][0x1f0], R25 ;
 Instr 900 @ 0x3840 (14400) - IMAD R10, R23, c[0x0][0x2f4], R10 ;
 Instr 901 @ 0x3850 (14416) - @!P0 BRA 0x42d0 ;
Basic block id 104 - num instructions 9
 Instr 902 @ 0x3860 (14432) - MOV R22, RZ ;
 Instr 903 @ 0x3870 (14448) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 904 @ 0x3880 (14464) - ISETP.NE.AND P0, PT, R24, 0x7, PT ;
 Instr 905 @ 0x3890 (14480) - IMAD.HI.U32 R22, R26, c[0x0][0x200], R22 ;
 Instr 906 @ 0x38a0 (14496) - SHF.R.U32.HI R25, RZ, c[0x0][0x204], R22 ;
 Instr 907 @ 0x38b0 (14512) - IADD3 R23, -R25, RZ, RZ ;
 Instr 908 @ 0x38c0 (14528) - IMAD R23, R23, c[0x0][0x1fc], R26 ;
 Instr 909 @ 0x38d0 (14544) - IMAD R10, R23, c[0x0][0x2f8], R10 ;
 Instr 910 @ 0x38e0 (14560) - @!P0 BRA 0x42d0 ;
Basic block id 105 - num instructions 9
 Instr 911 @ 0x38f0 (14576) - MOV R23, R25 ;
 Instr 912 @ 0x3900 (14592) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 913 @ 0x3910 (14608) - ISETP.NE.AND P0, PT, R24, 0x8, PT ;
 Instr 914 @ 0x3920 (14624) - IMAD.HI.U32 R22, R25, c[0x0][0x20c], R22 ;
 Instr 915 @ 0x3930 (14640) - SHF.R.U32.HI R26, RZ, c[0x0][0x210], R22 ;
 Instr 916 @ 0x3940 (14656) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 917 @ 0x3950 (14672) - IMAD R23, R23, c[0x0][0x208], R25 ;
 Instr 918 @ 0x3960 (14688) - IMAD R10, R23, c[0x0][0x2fc], R10 ;
 Instr 919 @ 0x3970 (14704) - @!P0 BRA 0x42d0 ;
Basic block id 106 - num instructions 9
 Instr 920 @ 0x3980 (14720) - MOV R22, RZ ;
 Instr 921 @ 0x3990 (14736) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 922 @ 0x39a0 (14752) - ISETP.NE.AND P0, PT, R24, 0x9, PT ;
 Instr 923 @ 0x39b0 (14768) - IMAD.HI.U32 R22, R26, c[0x0][0x218], R22 ;
 Instr 924 @ 0x39c0 (14784) - SHF.R.U32.HI R25, RZ, c[0x0][0x21c], R22 ;
 Instr 925 @ 0x39d0 (14800) - IADD3 R23, -R25, RZ, RZ ;
 Instr 926 @ 0x39e0 (14816) - IMAD R23, R23, c[0x0][0x214], R26 ;
 Instr 927 @ 0x39f0 (14832) - IMAD R10, R23, c[0x0][0x300], R10 ;
 Instr 928 @ 0x3a00 (14848) - @!P0 BRA 0x42d0 ;
Basic block id 107 - num instructions 9
 Instr 929 @ 0x3a10 (14864) - MOV R23, R25 ;
 Instr 930 @ 0x3a20 (14880) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 931 @ 0x3a30 (14896) - ISETP.NE.AND P0, PT, R24, 0xa, PT ;
 Instr 932 @ 0x3a40 (14912) - IMAD.HI.U32 R22, R25, c[0x0][0x224], R22 ;
 Instr 933 @ 0x3a50 (14928) - SHF.R.U32.HI R26, RZ, c[0x0][0x228], R22 ;
 Instr 934 @ 0x3a60 (14944) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 935 @ 0x3a70 (14960) - IMAD R23, R23, c[0x0][0x220], R25 ;
 Instr 936 @ 0x3a80 (14976) - IMAD R10, R23, c[0x0][0x304], R10 ;
 Instr 937 @ 0x3a90 (14992) - @!P0 BRA 0x42d0 ;
Basic block id 108 - num instructions 9
 Instr 938 @ 0x3aa0 (15008) - MOV R22, RZ ;
 Instr 939 @ 0x3ab0 (15024) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 940 @ 0x3ac0 (15040) - ISETP.NE.AND P0, PT, R24, 0xb, PT ;
 Instr 941 @ 0x3ad0 (15056) - IMAD.HI.U32 R22, R26, c[0x0][0x230], R22 ;
 Instr 942 @ 0x3ae0 (15072) - SHF.R.U32.HI R25, RZ, c[0x0][0x234], R22 ;
 Instr 943 @ 0x3af0 (15088) - IADD3 R23, -R25, RZ, RZ ;
 Instr 944 @ 0x3b00 (15104) - IMAD R23, R23, c[0x0][0x22c], R26 ;
 Instr 945 @ 0x3b10 (15120) - IMAD R10, R23, c[0x0][0x308], R10 ;
 Instr 946 @ 0x3b20 (15136) - @!P0 BRA 0x42d0 ;
Basic block id 109 - num instructions 9
 Instr 947 @ 0x3b30 (15152) - MOV R23, R25 ;
 Instr 948 @ 0x3b40 (15168) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 949 @ 0x3b50 (15184) - ISETP.NE.AND P0, PT, R24, 0xc, PT ;
 Instr 950 @ 0x3b60 (15200) - IMAD.HI.U32 R22, R25, c[0x0][0x23c], R22 ;
 Instr 951 @ 0x3b70 (15216) - SHF.R.U32.HI R26, RZ, c[0x0][0x240], R22 ;
 Instr 952 @ 0x3b80 (15232) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 953 @ 0x3b90 (15248) - IMAD R23, R23, c[0x0][0x238], R25 ;
 Instr 954 @ 0x3ba0 (15264) - IMAD R10, R23, c[0x0][0x30c], R10 ;
 Instr 955 @ 0x3bb0 (15280) - @!P0 BRA 0x42d0 ;
Basic block id 110 - num instructions 9
 Instr 956 @ 0x3bc0 (15296) - MOV R22, RZ ;
 Instr 957 @ 0x3bd0 (15312) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 958 @ 0x3be0 (15328) - ISETP.NE.AND P0, PT, R24, 0xd, PT ;
 Instr 959 @ 0x3bf0 (15344) - IMAD.HI.U32 R22, R26, c[0x0][0x248], R22 ;
 Instr 960 @ 0x3c00 (15360) - SHF.R.U32.HI R25, RZ, c[0x0][0x24c], R22 ;
 Instr 961 @ 0x3c10 (15376) - IADD3 R23, -R25, RZ, RZ ;
 Instr 962 @ 0x3c20 (15392) - IMAD R23, R23, c[0x0][0x244], R26 ;
 Instr 963 @ 0x3c30 (15408) - IMAD R10, R23, c[0x0][0x310], R10 ;
 Instr 964 @ 0x3c40 (15424) - @!P0 BRA 0x42d0 ;
Basic block id 111 - num instructions 9
 Instr 965 @ 0x3c50 (15440) - MOV R23, R25 ;
 Instr 966 @ 0x3c60 (15456) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 967 @ 0x3c70 (15472) - ISETP.NE.AND P0, PT, R24, 0xe, PT ;
 Instr 968 @ 0x3c80 (15488) - IMAD.HI.U32 R22, R25, c[0x0][0x254], R22 ;
 Instr 969 @ 0x3c90 (15504) - SHF.R.U32.HI R26, RZ, c[0x0][0x258], R22 ;
 Instr 970 @ 0x3ca0 (15520) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 971 @ 0x3cb0 (15536) - IMAD R23, R23, c[0x0][0x250], R25 ;
 Instr 972 @ 0x3cc0 (15552) - IMAD R10, R23, c[0x0][0x314], R10 ;
 Instr 973 @ 0x3cd0 (15568) - @!P0 BRA 0x42d0 ;
Basic block id 112 - num instructions 9
 Instr 974 @ 0x3ce0 (15584) - MOV R22, RZ ;
 Instr 975 @ 0x3cf0 (15600) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 976 @ 0x3d00 (15616) - ISETP.NE.AND P0, PT, R24, 0xf, PT ;
 Instr 977 @ 0x3d10 (15632) - IMAD.HI.U32 R22, R26, c[0x0][0x260], R22 ;
 Instr 978 @ 0x3d20 (15648) - SHF.R.U32.HI R25, RZ, c[0x0][0x264], R22 ;
 Instr 979 @ 0x3d30 (15664) - IADD3 R23, -R25, RZ, RZ ;
 Instr 980 @ 0x3d40 (15680) - IMAD R23, R23, c[0x0][0x25c], R26 ;
 Instr 981 @ 0x3d50 (15696) - IMAD R10, R23, c[0x0][0x318], R10 ;
 Instr 982 @ 0x3d60 (15712) - @!P0 BRA 0x42d0 ;
Basic block id 113 - num instructions 9
 Instr 983 @ 0x3d70 (15728) - MOV R23, R25 ;
 Instr 984 @ 0x3d80 (15744) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 985 @ 0x3d90 (15760) - ISETP.NE.AND P0, PT, R24, 0x10, PT ;
 Instr 986 @ 0x3da0 (15776) - IMAD.HI.U32 R22, R25, c[0x0][0x26c], R22 ;
 Instr 987 @ 0x3db0 (15792) - SHF.R.U32.HI R26, RZ, c[0x0][0x270], R22 ;
 Instr 988 @ 0x3dc0 (15808) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 989 @ 0x3dd0 (15824) - IMAD R23, R23, c[0x0][0x268], R25 ;
 Instr 990 @ 0x3de0 (15840) - IMAD R10, R23, c[0x0][0x31c], R10 ;
 Instr 991 @ 0x3df0 (15856) - @!P0 BRA 0x42d0 ;
Basic block id 114 - num instructions 9
 Instr 992 @ 0x3e00 (15872) - MOV R22, RZ ;
 Instr 993 @ 0x3e10 (15888) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 994 @ 0x3e20 (15904) - ISETP.NE.AND P0, PT, R24, 0x11, PT ;
 Instr 995 @ 0x3e30 (15920) - IMAD.HI.U32 R22, R26, c[0x0][0x278], R22 ;
 Instr 996 @ 0x3e40 (15936) - SHF.R.U32.HI R25, RZ, c[0x0][0x27c], R22 ;
 Instr 997 @ 0x3e50 (15952) - IADD3 R23, -R25, RZ, RZ ;
 Instr 998 @ 0x3e60 (15968) - IMAD R23, R23, c[0x0][0x274], R26 ;
 Instr 999 @ 0x3e70 (15984) - IMAD R10, R23, c[0x0][0x320], R10 ;
 Instr 1000 @ 0x3e80 (16000) - @!P0 BRA 0x42d0 ;
Basic block id 115 - num instructions 9
 Instr 1001 @ 0x3e90 (16016) - MOV R23, R25 ;
 Instr 1002 @ 0x3ea0 (16032) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1003 @ 0x3eb0 (16048) - ISETP.NE.AND P0, PT, R24, 0x12, PT ;
 Instr 1004 @ 0x3ec0 (16064) - IMAD.HI.U32 R22, R25, c[0x0][0x284], R22 ;
 Instr 1005 @ 0x3ed0 (16080) - SHF.R.U32.HI R26, RZ, c[0x0][0x288], R22 ;
 Instr 1006 @ 0x3ee0 (16096) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 1007 @ 0x3ef0 (16112) - IMAD R23, R23, c[0x0][0x280], R25 ;
 Instr 1008 @ 0x3f00 (16128) - IMAD R10, R23, c[0x0][0x324], R10 ;
 Instr 1009 @ 0x3f10 (16144) - @!P0 BRA 0x42d0 ;
Basic block id 116 - num instructions 9
 Instr 1010 @ 0x3f20 (16160) - MOV R22, RZ ;
 Instr 1011 @ 0x3f30 (16176) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 1012 @ 0x3f40 (16192) - ISETP.NE.AND P0, PT, R24, 0x13, PT ;
 Instr 1013 @ 0x3f50 (16208) - IMAD.HI.U32 R22, R26, c[0x0][0x290], R22 ;
 Instr 1014 @ 0x3f60 (16224) - SHF.R.U32.HI R25, RZ, c[0x0][0x294], R22 ;
 Instr 1015 @ 0x3f70 (16240) - IADD3 R23, -R25, RZ, RZ ;
 Instr 1016 @ 0x3f80 (16256) - IMAD R23, R23, c[0x0][0x28c], R26 ;
 Instr 1017 @ 0x3f90 (16272) - IMAD R10, R23, c[0x0][0x328], R10 ;
 Instr 1018 @ 0x3fa0 (16288) - @!P0 BRA 0x42d0 ;
Basic block id 117 - num instructions 9
 Instr 1019 @ 0x3fb0 (16304) - MOV R23, R25 ;
 Instr 1020 @ 0x3fc0 (16320) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1021 @ 0x3fd0 (16336) - ISETP.NE.AND P0, PT, R24, 0x14, PT ;
 Instr 1022 @ 0x3fe0 (16352) - IMAD.HI.U32 R22, R25, c[0x0][0x29c], R22 ;
 Instr 1023 @ 0x3ff0 (16368) - SHF.R.U32.HI R26, RZ, c[0x0][0x2a0], R22 ;
 Instr 1024 @ 0x4000 (16384) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 1025 @ 0x4010 (16400) - IMAD R23, R23, c[0x0][0x298], R25 ;
 Instr 1026 @ 0x4020 (16416) - IMAD R10, R23, c[0x0][0x32c], R10 ;
 Instr 1027 @ 0x4030 (16432) - @!P0 BRA 0x42d0 ;
Basic block id 118 - num instructions 9
 Instr 1028 @ 0x4040 (16448) - MOV R22, RZ ;
 Instr 1029 @ 0x4050 (16464) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 1030 @ 0x4060 (16480) - ISETP.NE.AND P0, PT, R24, 0x15, PT ;
 Instr 1031 @ 0x4070 (16496) - IMAD.HI.U32 R22, R26, c[0x0][0x2a8], R22 ;
 Instr 1032 @ 0x4080 (16512) - SHF.R.U32.HI R25, RZ, c[0x0][0x2ac], R22 ;
 Instr 1033 @ 0x4090 (16528) - IADD3 R23, -R25, RZ, RZ ;
 Instr 1034 @ 0x40a0 (16544) - IMAD R23, R23, c[0x0][0x2a4], R26 ;
 Instr 1035 @ 0x40b0 (16560) - IMAD R10, R23, c[0x0][0x330], R10 ;
 Instr 1036 @ 0x40c0 (16576) - @!P0 BRA 0x42d0 ;
Basic block id 119 - num instructions 9
 Instr 1037 @ 0x40d0 (16592) - MOV R23, R25 ;
 Instr 1038 @ 0x40e0 (16608) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1039 @ 0x40f0 (16624) - ISETP.NE.AND P0, PT, R24, 0x16, PT ;
 Instr 1040 @ 0x4100 (16640) - IMAD.HI.U32 R22, R25, c[0x0][0x2b4], R22 ;
 Instr 1041 @ 0x4110 (16656) - SHF.R.U32.HI R26, RZ, c[0x0][0x2b8], R22 ;
 Instr 1042 @ 0x4120 (16672) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 1043 @ 0x4130 (16688) - IMAD R23, R23, c[0x0][0x2b0], R25 ;
 Instr 1044 @ 0x4140 (16704) - IMAD R10, R23, c[0x0][0x334], R10 ;
 Instr 1045 @ 0x4150 (16720) - @!P0 BRA 0x42d0 ;
Basic block id 120 - num instructions 9
 Instr 1046 @ 0x4160 (16736) - MOV R22, RZ ;
 Instr 1047 @ 0x4170 (16752) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 1048 @ 0x4180 (16768) - ISETP.NE.AND P0, PT, R24, 0x17, PT ;
 Instr 1049 @ 0x4190 (16784) - IMAD.HI.U32 R22, R26, c[0x0][0x2c0], R22 ;
 Instr 1050 @ 0x41a0 (16800) - SHF.R.U32.HI R27, RZ, c[0x0][0x2c4], R22 ;
 Instr 1051 @ 0x41b0 (16816) - IADD3 R23, -R27, RZ, RZ ;
 Instr 1052 @ 0x41c0 (16832) - IMAD R23, R23, c[0x0][0x2bc], R26 ;
 Instr 1053 @ 0x41d0 (16848) - IMAD R10, R23, c[0x0][0x338], R10 ;
 Instr 1054 @ 0x41e0 (16864) - @!P0 BRA 0x42d0 ;
Basic block id 121 - num instructions 14
 Instr 1055 @ 0x41f0 (16880) - ISETP.NE.AND P0, PT, R24, 0x18, PT ;
 Instr 1056 @ 0x4200 (16896) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1057 @ 0x4210 (16912) - MOV R23, R27 ;
 Instr 1058 @ 0x4220 (16928) - IMAD.HI.U32 R22, R27, c[0x0][0x2cc], R22 ;
 Instr 1059 @ 0x4230 (16944) - SHF.R.U32.HI R23, RZ, c[0x0][0x2d0], R22 ;
 Instr 1060 @ 0x4240 (16960) - @P0 IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1061 @ 0x4250 (16976) - IADD3 R25, -R23.reuse, RZ, RZ ;
 Instr 1062 @ 0x4260 (16992) - @P0 IMAD.HI.U32 R22, R23, c[0x0][0x2d8], R22 ;
 Instr 1063 @ 0x4270 (17008) - IMAD R25, R25, c[0x0][0x2c8], R27 ;
 Instr 1064 @ 0x4280 (17024) - @P0 SHF.R.U32.HI R22, RZ, c[0x0][0x2dc], R22 ;
 Instr 1065 @ 0x4290 (17040) - IMAD R10, R25, c[0x0][0x33c], R10 ;
 Instr 1066 @ 0x42a0 (17056) - @P0 IMAD.MOV R22, RZ, RZ, -R22 ;
 Instr 1067 @ 0x42b0 (17072) - @P0 IMAD R23, R22, c[0x0][0x2d4], R23 ;
 Instr 1068 @ 0x42c0 (17088) - @P0 IMAD R10, R23, c[0x0][0x340], R10 ;
Basic block id 122 - num instructions 6
 Instr 1069 @ 0x42d0 (17104) - LOP3.LUT R23, R10, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1070 @ 0x42e0 (17120) - IADD3 R22, P0, R4, R23, RZ ;
 Instr 1071 @ 0x42f0 (17136) - IADD3.X R23, RZ, R5, RZ, P0, !PT ;
 Instr 1072 @ 0x4300 (17152) - LDG.E.64.SYS R22, [R22] ;
 Instr 1073 @ 0x4310 (17168) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 1074 @ 0x4320 (17184) - @!P4 BRA 0x5100 ;
Basic block id 123 - num instructions 9
 Instr 1075 @ 0x4330 (17200) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 1076 @ 0x4340 (17216) - IMAD.HI.U32 R6, R11, c[0x0][0x1b8], R10 ;
 Instr 1077 @ 0x4350 (17232) - MOV R10, c[0x0][0x1b0] ;
 Instr 1078 @ 0x4360 (17248) - ISETP.NE.AND P0, PT, R10, 0x1, PT ;
 Instr 1079 @ 0x4370 (17264) - SHF.R.U32.HI R26, RZ, c[0x0][0x1bc], R6 ;
 Instr 1080 @ 0x4380 (17280) - IMAD.MOV R6, RZ, RZ, -R26 ;
 Instr 1081 @ 0x4390 (17296) - IMAD R6, R6, c[0x0][0x1b4], R11 ;
 Instr 1082 @ 0x43a0 (17312) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1083 @ 0x43b0 (17328) - @!P0 BRA 0x5100 ;
Basic block id 124 - num instructions 9
 Instr 1084 @ 0x43c0 (17344) - MOV R24, RZ ;
 Instr 1085 @ 0x43d0 (17360) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1086 @ 0x43e0 (17376) - ISETP.NE.AND P0, PT, R10, 0x2, PT ;
 Instr 1087 @ 0x43f0 (17392) - IMAD.HI.U32 R24, R26, c[0x0][0x1c4], R24 ;
 Instr 1088 @ 0x4400 (17408) - SHF.R.U32.HI R27, RZ, c[0x0][0x1c8], R24 ;
 Instr 1089 @ 0x4410 (17424) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1090 @ 0x4420 (17440) - IMAD R25, R25, c[0x0][0x1c0], R26 ;
 Instr 1091 @ 0x4430 (17456) - IMAD R6, R25, c[0x0][0x2e4], R6 ;
 Instr 1092 @ 0x4440 (17472) - @!P0 BRA 0x5100 ;
Basic block id 125 - num instructions 9
 Instr 1093 @ 0x4450 (17488) - MOV R25, R27 ;
 Instr 1094 @ 0x4460 (17504) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1095 @ 0x4470 (17520) - ISETP.NE.AND P0, PT, R10, 0x3, PT ;
 Instr 1096 @ 0x4480 (17536) - IMAD.HI.U32 R24, R27, c[0x0][0x1d0], R24 ;
 Instr 1097 @ 0x4490 (17552) - SHF.R.U32.HI R26, RZ, c[0x0][0x1d4], R24 ;
 Instr 1098 @ 0x44a0 (17568) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1099 @ 0x44b0 (17584) - IMAD R25, R25, c[0x0][0x1cc], R27 ;
 Instr 1100 @ 0x44c0 (17600) - IMAD R6, R25, c[0x0][0x2e8], R6 ;
 Instr 1101 @ 0x44d0 (17616) - @!P0 BRA 0x5100 ;
Basic block id 126 - num instructions 9
 Instr 1102 @ 0x44e0 (17632) - MOV R24, RZ ;
 Instr 1103 @ 0x44f0 (17648) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1104 @ 0x4500 (17664) - ISETP.NE.AND P0, PT, R10, 0x4, PT ;
 Instr 1105 @ 0x4510 (17680) - IMAD.HI.U32 R24, R26, c[0x0][0x1dc], R24 ;
 Instr 1106 @ 0x4520 (17696) - SHF.R.U32.HI R27, RZ, c[0x0][0x1e0], R24 ;
 Instr 1107 @ 0x4530 (17712) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1108 @ 0x4540 (17728) - IMAD R25, R25, c[0x0][0x1d8], R26 ;
 Instr 1109 @ 0x4550 (17744) - IMAD R6, R25, c[0x0][0x2ec], R6 ;
 Instr 1110 @ 0x4560 (17760) - @!P0 BRA 0x5100 ;
Basic block id 127 - num instructions 9
 Instr 1111 @ 0x4570 (17776) - MOV R25, R27 ;
 Instr 1112 @ 0x4580 (17792) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1113 @ 0x4590 (17808) - ISETP.NE.AND P0, PT, R10, 0x5, PT ;
 Instr 1114 @ 0x45a0 (17824) - IMAD.HI.U32 R24, R27, c[0x0][0x1e8], R24 ;
 Instr 1115 @ 0x45b0 (17840) - SHF.R.U32.HI R26, RZ, c[0x0][0x1ec], R24 ;
 Instr 1116 @ 0x45c0 (17856) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1117 @ 0x45d0 (17872) - IMAD R25, R25, c[0x0][0x1e4], R27 ;
 Instr 1118 @ 0x45e0 (17888) - IMAD R6, R25, c[0x0][0x2f0], R6 ;
 Instr 1119 @ 0x45f0 (17904) - @!P0 BRA 0x5100 ;
Basic block id 128 - num instructions 9
 Instr 1120 @ 0x4600 (17920) - MOV R24, RZ ;
 Instr 1121 @ 0x4610 (17936) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1122 @ 0x4620 (17952) - ISETP.NE.AND P0, PT, R10, 0x6, PT ;
 Instr 1123 @ 0x4630 (17968) - IMAD.HI.U32 R24, R26, c[0x0][0x1f4], R24 ;
 Instr 1124 @ 0x4640 (17984) - SHF.R.U32.HI R27, RZ, c[0x0][0x1f8], R24 ;
 Instr 1125 @ 0x4650 (18000) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1126 @ 0x4660 (18016) - IMAD R25, R25, c[0x0][0x1f0], R26 ;
 Instr 1127 @ 0x4670 (18032) - IMAD R6, R25, c[0x0][0x2f4], R6 ;
 Instr 1128 @ 0x4680 (18048) - @!P0 BRA 0x5100 ;
Basic block id 129 - num instructions 9
 Instr 1129 @ 0x4690 (18064) - MOV R25, R27 ;
 Instr 1130 @ 0x46a0 (18080) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1131 @ 0x46b0 (18096) - ISETP.NE.AND P0, PT, R10, 0x7, PT ;
 Instr 1132 @ 0x46c0 (18112) - IMAD.HI.U32 R24, R27, c[0x0][0x200], R24 ;
 Instr 1133 @ 0x46d0 (18128) - SHF.R.U32.HI R26, RZ, c[0x0][0x204], R24 ;
 Instr 1134 @ 0x46e0 (18144) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1135 @ 0x46f0 (18160) - IMAD R25, R25, c[0x0][0x1fc], R27 ;
 Instr 1136 @ 0x4700 (18176) - IMAD R6, R25, c[0x0][0x2f8], R6 ;
 Instr 1137 @ 0x4710 (18192) - @!P0 BRA 0x5100 ;
Basic block id 130 - num instructions 9
 Instr 1138 @ 0x4720 (18208) - MOV R24, RZ ;
 Instr 1139 @ 0x4730 (18224) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1140 @ 0x4740 (18240) - ISETP.NE.AND P0, PT, R10, 0x8, PT ;
 Instr 1141 @ 0x4750 (18256) - IMAD.HI.U32 R24, R26, c[0x0][0x20c], R24 ;
 Instr 1142 @ 0x4760 (18272) - SHF.R.U32.HI R27, RZ, c[0x0][0x210], R24 ;
 Instr 1143 @ 0x4770 (18288) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1144 @ 0x4780 (18304) - IMAD R25, R25, c[0x0][0x208], R26 ;
 Instr 1145 @ 0x4790 (18320) - IMAD R6, R25, c[0x0][0x2fc], R6 ;
 Instr 1146 @ 0x47a0 (18336) - @!P0 BRA 0x5100 ;
Basic block id 131 - num instructions 9
 Instr 1147 @ 0x47b0 (18352) - MOV R25, R27 ;
 Instr 1148 @ 0x47c0 (18368) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1149 @ 0x47d0 (18384) - ISETP.NE.AND P0, PT, R10, 0x9, PT ;
 Instr 1150 @ 0x47e0 (18400) - IMAD.HI.U32 R24, R27, c[0x0][0x218], R24 ;
 Instr 1151 @ 0x47f0 (18416) - SHF.R.U32.HI R26, RZ, c[0x0][0x21c], R24 ;
 Instr 1152 @ 0x4800 (18432) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1153 @ 0x4810 (18448) - IMAD R25, R25, c[0x0][0x214], R27 ;
 Instr 1154 @ 0x4820 (18464) - IMAD R6, R25, c[0x0][0x300], R6 ;
 Instr 1155 @ 0x4830 (18480) - @!P0 BRA 0x5100 ;
Basic block id 132 - num instructions 9
 Instr 1156 @ 0x4840 (18496) - MOV R24, RZ ;
 Instr 1157 @ 0x4850 (18512) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1158 @ 0x4860 (18528) - ISETP.NE.AND P0, PT, R10, 0xa, PT ;
 Instr 1159 @ 0x4870 (18544) - IMAD.HI.U32 R24, R26, c[0x0][0x224], R24 ;
 Instr 1160 @ 0x4880 (18560) - SHF.R.U32.HI R27, RZ, c[0x0][0x228], R24 ;
 Instr 1161 @ 0x4890 (18576) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1162 @ 0x48a0 (18592) - IMAD R25, R25, c[0x0][0x220], R26 ;
 Instr 1163 @ 0x48b0 (18608) - IMAD R6, R25, c[0x0][0x304], R6 ;
 Instr 1164 @ 0x48c0 (18624) - @!P0 BRA 0x5100 ;
Basic block id 133 - num instructions 9
 Instr 1165 @ 0x48d0 (18640) - MOV R25, R27 ;
 Instr 1166 @ 0x48e0 (18656) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1167 @ 0x48f0 (18672) - ISETP.NE.AND P0, PT, R10, 0xb, PT ;
 Instr 1168 @ 0x4900 (18688) - IMAD.HI.U32 R24, R27, c[0x0][0x230], R24 ;
 Instr 1169 @ 0x4910 (18704) - SHF.R.U32.HI R26, RZ, c[0x0][0x234], R24 ;
 Instr 1170 @ 0x4920 (18720) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1171 @ 0x4930 (18736) - IMAD R25, R25, c[0x0][0x22c], R27 ;
 Instr 1172 @ 0x4940 (18752) - IMAD R6, R25, c[0x0][0x308], R6 ;
 Instr 1173 @ 0x4950 (18768) - @!P0 BRA 0x5100 ;
Basic block id 134 - num instructions 9
 Instr 1174 @ 0x4960 (18784) - MOV R24, RZ ;
 Instr 1175 @ 0x4970 (18800) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1176 @ 0x4980 (18816) - ISETP.NE.AND P0, PT, R10, 0xc, PT ;
 Instr 1177 @ 0x4990 (18832) - IMAD.HI.U32 R24, R26, c[0x0][0x23c], R24 ;
 Instr 1178 @ 0x49a0 (18848) - SHF.R.U32.HI R27, RZ, c[0x0][0x240], R24 ;
 Instr 1179 @ 0x49b0 (18864) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1180 @ 0x49c0 (18880) - IMAD R25, R25, c[0x0][0x238], R26 ;
 Instr 1181 @ 0x49d0 (18896) - IMAD R6, R25, c[0x0][0x30c], R6 ;
 Instr 1182 @ 0x49e0 (18912) - @!P0 BRA 0x5100 ;
Basic block id 135 - num instructions 9
 Instr 1183 @ 0x49f0 (18928) - MOV R25, R27 ;
 Instr 1184 @ 0x4a00 (18944) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1185 @ 0x4a10 (18960) - ISETP.NE.AND P0, PT, R10, 0xd, PT ;
 Instr 1186 @ 0x4a20 (18976) - IMAD.HI.U32 R24, R27, c[0x0][0x248], R24 ;
 Instr 1187 @ 0x4a30 (18992) - SHF.R.U32.HI R26, RZ, c[0x0][0x24c], R24 ;
 Instr 1188 @ 0x4a40 (19008) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1189 @ 0x4a50 (19024) - IMAD R25, R25, c[0x0][0x244], R27 ;
 Instr 1190 @ 0x4a60 (19040) - IMAD R6, R25, c[0x0][0x310], R6 ;
 Instr 1191 @ 0x4a70 (19056) - @!P0 BRA 0x5100 ;
Basic block id 136 - num instructions 9
 Instr 1192 @ 0x4a80 (19072) - MOV R24, RZ ;
 Instr 1193 @ 0x4a90 (19088) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1194 @ 0x4aa0 (19104) - ISETP.NE.AND P0, PT, R10, 0xe, PT ;
 Instr 1195 @ 0x4ab0 (19120) - IMAD.HI.U32 R24, R26, c[0x0][0x254], R24 ;
 Instr 1196 @ 0x4ac0 (19136) - SHF.R.U32.HI R27, RZ, c[0x0][0x258], R24 ;
 Instr 1197 @ 0x4ad0 (19152) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1198 @ 0x4ae0 (19168) - IMAD R25, R25, c[0x0][0x250], R26 ;
 Instr 1199 @ 0x4af0 (19184) - IMAD R6, R25, c[0x0][0x314], R6 ;
 Instr 1200 @ 0x4b00 (19200) - @!P0 BRA 0x5100 ;
Basic block id 137 - num instructions 9
 Instr 1201 @ 0x4b10 (19216) - MOV R25, R27 ;
 Instr 1202 @ 0x4b20 (19232) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1203 @ 0x4b30 (19248) - ISETP.NE.AND P0, PT, R10, 0xf, PT ;
 Instr 1204 @ 0x4b40 (19264) - IMAD.HI.U32 R24, R27, c[0x0][0x260], R24 ;
 Instr 1205 @ 0x4b50 (19280) - SHF.R.U32.HI R26, RZ, c[0x0][0x264], R24 ;
 Instr 1206 @ 0x4b60 (19296) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1207 @ 0x4b70 (19312) - IMAD R25, R25, c[0x0][0x25c], R27 ;
 Instr 1208 @ 0x4b80 (19328) - IMAD R6, R25, c[0x0][0x318], R6 ;
 Instr 1209 @ 0x4b90 (19344) - @!P0 BRA 0x5100 ;
Basic block id 138 - num instructions 9
 Instr 1210 @ 0x4ba0 (19360) - MOV R24, RZ ;
 Instr 1211 @ 0x4bb0 (19376) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1212 @ 0x4bc0 (19392) - ISETP.NE.AND P0, PT, R10, 0x10, PT ;
 Instr 1213 @ 0x4bd0 (19408) - IMAD.HI.U32 R24, R26, c[0x0][0x26c], R24 ;
 Instr 1214 @ 0x4be0 (19424) - SHF.R.U32.HI R27, RZ, c[0x0][0x270], R24 ;
 Instr 1215 @ 0x4bf0 (19440) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1216 @ 0x4c00 (19456) - IMAD R25, R25, c[0x0][0x268], R26 ;
 Instr 1217 @ 0x4c10 (19472) - IMAD R6, R25, c[0x0][0x31c], R6 ;
 Instr 1218 @ 0x4c20 (19488) - @!P0 BRA 0x5100 ;
Basic block id 139 - num instructions 9
 Instr 1219 @ 0x4c30 (19504) - MOV R25, R27 ;
 Instr 1220 @ 0x4c40 (19520) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1221 @ 0x4c50 (19536) - ISETP.NE.AND P0, PT, R10, 0x11, PT ;
 Instr 1222 @ 0x4c60 (19552) - IMAD.HI.U32 R24, R27, c[0x0][0x278], R24 ;
 Instr 1223 @ 0x4c70 (19568) - SHF.R.U32.HI R26, RZ, c[0x0][0x27c], R24 ;
 Instr 1224 @ 0x4c80 (19584) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1225 @ 0x4c90 (19600) - IMAD R25, R25, c[0x0][0x274], R27 ;
 Instr 1226 @ 0x4ca0 (19616) - IMAD R6, R25, c[0x0][0x320], R6 ;
 Instr 1227 @ 0x4cb0 (19632) - @!P0 BRA 0x5100 ;
Basic block id 140 - num instructions 9
 Instr 1228 @ 0x4cc0 (19648) - MOV R24, RZ ;
 Instr 1229 @ 0x4cd0 (19664) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1230 @ 0x4ce0 (19680) - ISETP.NE.AND P0, PT, R10, 0x12, PT ;
 Instr 1231 @ 0x4cf0 (19696) - IMAD.HI.U32 R24, R26, c[0x0][0x284], R24 ;
 Instr 1232 @ 0x4d00 (19712) - SHF.R.U32.HI R27, RZ, c[0x0][0x288], R24 ;
 Instr 1233 @ 0x4d10 (19728) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1234 @ 0x4d20 (19744) - IMAD R25, R25, c[0x0][0x280], R26 ;
 Instr 1235 @ 0x4d30 (19760) - IMAD R6, R25, c[0x0][0x324], R6 ;
 Instr 1236 @ 0x4d40 (19776) - @!P0 BRA 0x5100 ;
Basic block id 141 - num instructions 9
 Instr 1237 @ 0x4d50 (19792) - MOV R25, R27 ;
 Instr 1238 @ 0x4d60 (19808) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1239 @ 0x4d70 (19824) - ISETP.NE.AND P0, PT, R10, 0x13, PT ;
 Instr 1240 @ 0x4d80 (19840) - IMAD.HI.U32 R24, R27, c[0x0][0x290], R24 ;
 Instr 1241 @ 0x4d90 (19856) - SHF.R.U32.HI R26, RZ, c[0x0][0x294], R24 ;
 Instr 1242 @ 0x4da0 (19872) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1243 @ 0x4db0 (19888) - IMAD R25, R25, c[0x0][0x28c], R27 ;
 Instr 1244 @ 0x4dc0 (19904) - IMAD R6, R25, c[0x0][0x328], R6 ;
 Instr 1245 @ 0x4dd0 (19920) - @!P0 BRA 0x5100 ;
Basic block id 142 - num instructions 9
 Instr 1246 @ 0x4de0 (19936) - MOV R24, RZ ;
 Instr 1247 @ 0x4df0 (19952) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1248 @ 0x4e00 (19968) - ISETP.NE.AND P0, PT, R10, 0x14, PT ;
 Instr 1249 @ 0x4e10 (19984) - IMAD.HI.U32 R24, R26, c[0x0][0x29c], R24 ;
 Instr 1250 @ 0x4e20 (20000) - SHF.R.U32.HI R27, RZ, c[0x0][0x2a0], R24 ;
 Instr 1251 @ 0x4e30 (20016) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1252 @ 0x4e40 (20032) - IMAD R25, R25, c[0x0][0x298], R26 ;
 Instr 1253 @ 0x4e50 (20048) - IMAD R6, R25, c[0x0][0x32c], R6 ;
 Instr 1254 @ 0x4e60 (20064) - @!P0 BRA 0x5100 ;
Basic block id 143 - num instructions 9
 Instr 1255 @ 0x4e70 (20080) - MOV R25, R27 ;
 Instr 1256 @ 0x4e80 (20096) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1257 @ 0x4e90 (20112) - ISETP.NE.AND P0, PT, R10, 0x15, PT ;
 Instr 1258 @ 0x4ea0 (20128) - IMAD.HI.U32 R24, R27, c[0x0][0x2a8], R24 ;
 Instr 1259 @ 0x4eb0 (20144) - SHF.R.U32.HI R26, RZ, c[0x0][0x2ac], R24 ;
 Instr 1260 @ 0x4ec0 (20160) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1261 @ 0x4ed0 (20176) - IMAD R25, R25, c[0x0][0x2a4], R27 ;
 Instr 1262 @ 0x4ee0 (20192) - IMAD R6, R25, c[0x0][0x330], R6 ;
 Instr 1263 @ 0x4ef0 (20208) - @!P0 BRA 0x5100 ;
Basic block id 144 - num instructions 9
 Instr 1264 @ 0x4f00 (20224) - MOV R24, RZ ;
 Instr 1265 @ 0x4f10 (20240) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1266 @ 0x4f20 (20256) - ISETP.NE.AND P0, PT, R10, 0x16, PT ;
 Instr 1267 @ 0x4f30 (20272) - IMAD.HI.U32 R24, R26, c[0x0][0x2b4], R24 ;
 Instr 1268 @ 0x4f40 (20288) - SHF.R.U32.HI R27, RZ, c[0x0][0x2b8], R24 ;
 Instr 1269 @ 0x4f50 (20304) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1270 @ 0x4f60 (20320) - IMAD R25, R25, c[0x0][0x2b0], R26 ;
 Instr 1271 @ 0x4f70 (20336) - IMAD R6, R25, c[0x0][0x334], R6 ;
 Instr 1272 @ 0x4f80 (20352) - @!P0 BRA 0x5100 ;
Basic block id 145 - num instructions 9
 Instr 1273 @ 0x4f90 (20368) - MOV R25, R27 ;
 Instr 1274 @ 0x4fa0 (20384) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1275 @ 0x4fb0 (20400) - ISETP.NE.AND P0, PT, R10, 0x17, PT ;
 Instr 1276 @ 0x4fc0 (20416) - IMAD.HI.U32 R24, R27, c[0x0][0x2c0], R24 ;
 Instr 1277 @ 0x4fd0 (20432) - SHF.R.U32.HI R26, RZ, c[0x0][0x2c4], R24 ;
 Instr 1278 @ 0x4fe0 (20448) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1279 @ 0x4ff0 (20464) - IMAD R25, R25, c[0x0][0x2bc], R27 ;
 Instr 1280 @ 0x5000 (20480) - IMAD R6, R25, c[0x0][0x338], R6 ;
 Instr 1281 @ 0x5010 (20496) - @!P0 BRA 0x5100 ;
Basic block id 146 - num instructions 14
 Instr 1282 @ 0x5020 (20512) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
 Instr 1283 @ 0x5030 (20528) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1284 @ 0x5040 (20544) - MOV R24, RZ ;
 Instr 1285 @ 0x5050 (20560) - IMAD.HI.U32 R24, R26, c[0x0][0x2cc], R24 ;
 Instr 1286 @ 0x5060 (20576) - SHF.R.U32.HI R25, RZ, c[0x0][0x2d0], R24 ;
 Instr 1287 @ 0x5070 (20592) - @P0 MOV R24, RZ ;
 Instr 1288 @ 0x5080 (20608) - IMAD.MOV R27, RZ, RZ, -R25.reuse ;
 Instr 1289 @ 0x5090 (20624) - @P0 IMAD.HI.U32 R10, R25, c[0x0][0x2d8], R24 ;
 Instr 1290 @ 0x50a0 (20640) - IMAD R27, R27, c[0x0][0x2c8], R26 ;
 Instr 1291 @ 0x50b0 (20656) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1292 @ 0x50c0 (20672) - IMAD R6, R27, c[0x0][0x33c], R6 ;
 Instr 1293 @ 0x50d0 (20688) - @P0 IADD3 R24, -R10, RZ, RZ ;
 Instr 1294 @ 0x50e0 (20704) - @P0 IMAD R25, R24, c[0x0][0x2d4], R25 ;
 Instr 1295 @ 0x50f0 (20720) - @P0 IMAD R6, R25, c[0x0][0x340], R6 ;
Basic block id 147 - num instructions 25
 Instr 1296 @ 0x5100 (20736) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1297 @ 0x5110 (20752) - IADD3 R24, P0, R4, R25, RZ ;
 Instr 1298 @ 0x5120 (20768) - IMAD.X R25, RZ, RZ, R5, P0 ;
 Instr 1299 @ 0x5130 (20784) - LDG.E.64.SYS R24, [R24] ;
 Instr 1300 @ 0x5140 (20800) - DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 1301 @ 0x5150 (20816) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 1302 @ 0x5160 (20832) - MOV R6, c[0x0][0x17c] ;
 Instr 1303 @ 0x5170 (20848) - DSETP.GTU.AND P2, PT, |R14|, +INF , PT ;
 Instr 1304 @ 0x5180 (20864) - DSETP.LT.OR P1, PT, R16, R18, P1 ;
 Instr 1305 @ 0x5190 (20880) - IMAD R6, R6, 0x3, R11 ;
 Instr 1306 @ 0x51a0 (20896) - DSETP.GTU.AND P3, PT, |R12|, +INF , PT ;
 Instr 1307 @ 0x51b0 (20912) - DSETP.GTU.AND P0, PT, |R8|, +INF , PT ;
 Instr 1308 @ 0x51c0 (20928) - FSEL R16, R16, R18, P1 ;
 Instr 1309 @ 0x51d0 (20944) - FSEL R17, R17, R19, P1 ;
 Instr 1310 @ 0x51e0 (20960) - DSETP.LT.OR P2, PT, R14, R20, P2 ;
 Instr 1311 @ 0x51f0 (20976) - ISETP.GE.U32.AND P1, PT, R6, c[0x0][0x174], PT ;
 Instr 1312 @ 0x5200 (20992) - DSETP.LT.OR P3, PT, R12, R22, P3 ;
 Instr 1313 @ 0x5210 (21008) - FSEL R14, R14, R20, P2 ;
 Instr 1314 @ 0x5220 (21024) - FSEL R15, R15, R21, P2 ;
 Instr 1315 @ 0x5230 (21040) - FSEL R12, R12, R22, P3 ;
 Instr 1316 @ 0x5240 (21056) - FSEL R13, R13, R23, P3 ;
 Instr 1317 @ 0x5250 (21072) - DSETP.LT.OR P0, PT, R8, R24, P0 ;
 Instr 1318 @ 0x5260 (21088) - FSEL R8, R8, R24, P0 ;
 Instr 1319 @ 0x5270 (21104) - FSEL R9, R9, R25, P0 ;
 Instr 1320 @ 0x5280 (21120) - @!P1 BRA 0x1840 ;
Basic block id 148 - num instructions 1
 Instr 1321 @ 0x5290 (21136) - BSYNC B2 ;
Basic block id 149 - num instructions 5
 Instr 1322 @ 0x52a0 (21152) - BSYNC B1 ;
 Instr 1323 @ 0x52b0 (21168) - ISETP.GE.U32.AND P0, PT, R11, c[0x0][0x174], PT ;
 Instr 1324 @ 0x52c0 (21184) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1325 @ 0x52d0 (21200) - BSSY B1, 0x86a0 ;
 Instr 1326 @ 0x52e0 (21216) - @P0 BRA 0x8690 ;
Basic block id 150 - num instructions 3
 Instr 1327 @ 0x52f0 (21232) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x1b0], PT ;
 Instr 1328 @ 0x5300 (21248) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 1329 @ 0x5310 (21264) - @!P1 BRA 0x5f80 ;
Basic block id 151 - num instructions 9
 Instr 1330 @ 0x5320 (21280) - MOV R10, RZ ;
 Instr 1331 @ 0x5330 (21296) - IMAD.HI.U32 R18, R11, c[0x0][0x1b8], R10 ;
 Instr 1332 @ 0x5340 (21312) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x1b0] ;
 Instr 1333 @ 0x5350 (21328) - SHF.R.U32.HI R19, RZ, c[0x0][0x1bc], R18 ;
 Instr 1334 @ 0x5360 (21344) - ISETP.NE.AND P2, PT, R10, 0x1, PT ;
 Instr 1335 @ 0x5370 (21360) - IADD3 R6, -R19, RZ, RZ ;
 Instr 1336 @ 0x5380 (21376) - IMAD R6, R6, c[0x0][0x1b4], R11 ;
 Instr 1337 @ 0x5390 (21392) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1338 @ 0x53a0 (21408) - @!P2 BRA 0x5f80 ;
Basic block id 152 - num instructions 8
 Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1340 @ 0x53c0 (21440) - ISETP.NE.AND P2, PT, R10, 0x2, PT ;
 Instr 1341 @ 0x53d0 (21456) - IMAD.HI.U32 R26, R19, c[0x0][0x1c4], R18 ;
 Instr 1342 @ 0x53e0 (21472) - SHF.R.U32.HI R27, RZ, c[0x0][0x1c8], R26 ;
 Instr 1343 @ 0x53f0 (21488) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1344 @ 0x5400 (21504) - IMAD R19, R18, c[0x0][0x1c0], R19 ;
 Instr 1345 @ 0x5410 (21520) - IMAD R6, R19, c[0x0][0x2e4], R6 ;
 Instr 1346 @ 0x5420 (21536) - @!P2 BRA 0x5f80 ;
Basic block id 153 - num instructions 8
 Instr 1347 @ 0x5430 (21552) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1348 @ 0x5440 (21568) - ISETP.NE.AND P2, PT, R10, 0x3, PT ;
 Instr 1349 @ 0x5450 (21584) - IMAD.HI.U32 R18, R27, c[0x0][0x1d0], R26 ;
 Instr 1350 @ 0x5460 (21600) - SHF.R.U32.HI R19, RZ, c[0x0][0x1d4], R18 ;
 Instr 1351 @ 0x5470 (21616) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1352 @ 0x5480 (21632) - IMAD R27, R26, c[0x0][0x1cc], R27 ;
 Instr 1353 @ 0x5490 (21648) - IMAD R6, R27, c[0x0][0x2e8], R6 ;
 Instr 1354 @ 0x54a0 (21664) - @!P2 BRA 0x5f80 ;
Basic block id 154 - num instructions 8
 Instr 1355 @ 0x54b0 (21680) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1356 @ 0x54c0 (21696) - ISETP.NE.AND P2, PT, R10, 0x4, PT ;
 Instr 1357 @ 0x54d0 (21712) - IMAD.HI.U32 R26, R19, c[0x0][0x1dc], R18 ;
 Instr 1358 @ 0x54e0 (21728) - SHF.R.U32.HI R27, RZ, c[0x0][0x1e0], R26 ;
 Instr 1359 @ 0x54f0 (21744) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1360 @ 0x5500 (21760) - IMAD R19, R18, c[0x0][0x1d8], R19 ;
 Instr 1361 @ 0x5510 (21776) - IMAD R6, R19, c[0x0][0x2ec], R6 ;
 Instr 1362 @ 0x5520 (21792) - @!P2 BRA 0x5f80 ;
Basic block id 155 - num instructions 8
 Instr 1363 @ 0x5530 (21808) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1364 @ 0x5540 (21824) - ISETP.NE.AND P2, PT, R10, 0x5, PT ;
 Instr 1365 @ 0x5550 (21840) - IMAD.HI.U32 R18, R27, c[0x0][0x1e8], R26 ;
 Instr 1366 @ 0x5560 (21856) - SHF.R.U32.HI R19, RZ, c[0x0][0x1ec], R18 ;
 Instr 1367 @ 0x5570 (21872) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1368 @ 0x5580 (21888) - IMAD R27, R26, c[0x0][0x1e4], R27 ;
 Instr 1369 @ 0x5590 (21904) - IMAD R6, R27, c[0x0][0x2f0], R6 ;
 Instr 1370 @ 0x55a0 (21920) - @!P2 BRA 0x5f80 ;
Basic block id 156 - num instructions 8
 Instr 1371 @ 0x55b0 (21936) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1372 @ 0x55c0 (21952) - ISETP.NE.AND P2, PT, R10, 0x6, PT ;
 Instr 1373 @ 0x55d0 (21968) - IMAD.HI.U32 R26, R19, c[0x0][0x1f4], R18 ;
 Instr 1374 @ 0x55e0 (21984) - SHF.R.U32.HI R27, RZ, c[0x0][0x1f8], R26 ;
 Instr 1375 @ 0x55f0 (22000) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1376 @ 0x5600 (22016) - IMAD R19, R18, c[0x0][0x1f0], R19 ;
 Instr 1377 @ 0x5610 (22032) - IMAD R6, R19, c[0x0][0x2f4], R6 ;
 Instr 1378 @ 0x5620 (22048) - @!P2 BRA 0x5f80 ;
Basic block id 157 - num instructions 8
 Instr 1379 @ 0x5630 (22064) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1380 @ 0x5640 (22080) - ISETP.NE.AND P2, PT, R10, 0x7, PT ;
 Instr 1381 @ 0x5650 (22096) - IMAD.HI.U32 R18, R27, c[0x0][0x200], R26 ;
 Instr 1382 @ 0x5660 (22112) - SHF.R.U32.HI R19, RZ, c[0x0][0x204], R18 ;
 Instr 1383 @ 0x5670 (22128) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1384 @ 0x5680 (22144) - IMAD R27, R26, c[0x0][0x1fc], R27 ;
 Instr 1385 @ 0x5690 (22160) - IMAD R6, R27, c[0x0][0x2f8], R6 ;
 Instr 1386 @ 0x56a0 (22176) - @!P2 BRA 0x5f80 ;
Basic block id 158 - num instructions 8
 Instr 1387 @ 0x56b0 (22192) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1388 @ 0x56c0 (22208) - ISETP.NE.AND P2, PT, R10, 0x8, PT ;
 Instr 1389 @ 0x56d0 (22224) - IMAD.HI.U32 R26, R19, c[0x0][0x20c], R18 ;
 Instr 1390 @ 0x56e0 (22240) - SHF.R.U32.HI R27, RZ, c[0x0][0x210], R26 ;
 Instr 1391 @ 0x56f0 (22256) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1392 @ 0x5700 (22272) - IMAD R19, R18, c[0x0][0x208], R19 ;
 Instr 1393 @ 0x5710 (22288) - IMAD R6, R19, c[0x0][0x2fc], R6 ;
 Instr 1394 @ 0x5720 (22304) - @!P2 BRA 0x5f80 ;
Basic block id 159 - num instructions 8
 Instr 1395 @ 0x5730 (22320) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1396 @ 0x5740 (22336) - ISETP.NE.AND P2, PT, R10, 0x9, PT ;
 Instr 1397 @ 0x5750 (22352) - IMAD.HI.U32 R18, R27, c[0x0][0x218], R26 ;
 Instr 1398 @ 0x5760 (22368) - SHF.R.U32.HI R19, RZ, c[0x0][0x21c], R18 ;
 Instr 1399 @ 0x5770 (22384) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1400 @ 0x5780 (22400) - IMAD R27, R26, c[0x0][0x214], R27 ;
 Instr 1401 @ 0x5790 (22416) - IMAD R6, R27, c[0x0][0x300], R6 ;
 Instr 1402 @ 0x57a0 (22432) - @!P2 BRA 0x5f80 ;
Basic block id 160 - num instructions 8
 Instr 1403 @ 0x57b0 (22448) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1404 @ 0x57c0 (22464) - ISETP.NE.AND P2, PT, R10, 0xa, PT ;
 Instr 1405 @ 0x57d0 (22480) - IMAD.HI.U32 R26, R19, c[0x0][0x224], R18 ;
 Instr 1406 @ 0x57e0 (22496) - SHF.R.U32.HI R27, RZ, c[0x0][0x228], R26 ;
 Instr 1407 @ 0x57f0 (22512) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1408 @ 0x5800 (22528) - IMAD R19, R18, c[0x0][0x220], R19 ;
 Instr 1409 @ 0x5810 (22544) - IMAD R6, R19, c[0x0][0x304], R6 ;
 Instr 1410 @ 0x5820 (22560) - @!P2 BRA 0x5f80 ;
Basic block id 161 - num instructions 8
 Instr 1411 @ 0x5830 (22576) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1412 @ 0x5840 (22592) - ISETP.NE.AND P2, PT, R10, 0xb, PT ;
 Instr 1413 @ 0x5850 (22608) - IMAD.HI.U32 R18, R27, c[0x0][0x230], R26 ;
 Instr 1414 @ 0x5860 (22624) - SHF.R.U32.HI R19, RZ, c[0x0][0x234], R18 ;
 Instr 1415 @ 0x5870 (22640) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1416 @ 0x5880 (22656) - IMAD R27, R26, c[0x0][0x22c], R27 ;
 Instr 1417 @ 0x5890 (22672) - IMAD R6, R27, c[0x0][0x308], R6 ;
 Instr 1418 @ 0x58a0 (22688) - @!P2 BRA 0x5f80 ;
Basic block id 162 - num instructions 8
 Instr 1419 @ 0x58b0 (22704) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1420 @ 0x58c0 (22720) - ISETP.NE.AND P2, PT, R10, 0xc, PT ;
 Instr 1421 @ 0x58d0 (22736) - IMAD.HI.U32 R26, R19, c[0x0][0x23c], R18 ;
 Instr 1422 @ 0x58e0 (22752) - SHF.R.U32.HI R27, RZ, c[0x0][0x240], R26 ;
 Instr 1423 @ 0x58f0 (22768) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1424 @ 0x5900 (22784) - IMAD R19, R18, c[0x0][0x238], R19 ;
 Instr 1425 @ 0x5910 (22800) - IMAD R6, R19, c[0x0][0x30c], R6 ;
 Instr 1426 @ 0x5920 (22816) - @!P2 BRA 0x5f80 ;
Basic block id 163 - num instructions 8
 Instr 1427 @ 0x5930 (22832) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1428 @ 0x5940 (22848) - ISETP.NE.AND P2, PT, R10, 0xd, PT ;
 Instr 1429 @ 0x5950 (22864) - IMAD.HI.U32 R18, R27, c[0x0][0x248], R26 ;
 Instr 1430 @ 0x5960 (22880) - SHF.R.U32.HI R19, RZ, c[0x0][0x24c], R18 ;
 Instr 1431 @ 0x5970 (22896) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1432 @ 0x5980 (22912) - IMAD R27, R26, c[0x0][0x244], R27 ;
 Instr 1433 @ 0x5990 (22928) - IMAD R6, R27, c[0x0][0x310], R6 ;
 Instr 1434 @ 0x59a0 (22944) - @!P2 BRA 0x5f80 ;
Basic block id 164 - num instructions 8
 Instr 1435 @ 0x59b0 (22960) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1436 @ 0x59c0 (22976) - ISETP.NE.AND P2, PT, R10, 0xe, PT ;
 Instr 1437 @ 0x59d0 (22992) - IMAD.HI.U32 R26, R19, c[0x0][0x254], R18 ;
 Instr 1438 @ 0x59e0 (23008) - SHF.R.U32.HI R27, RZ, c[0x0][0x258], R26 ;
 Instr 1439 @ 0x59f0 (23024) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1440 @ 0x5a00 (23040) - IMAD R19, R18, c[0x0][0x250], R19 ;
 Instr 1441 @ 0x5a10 (23056) - IMAD R6, R19, c[0x0][0x314], R6 ;
 Instr 1442 @ 0x5a20 (23072) - @!P2 BRA 0x5f80 ;
Basic block id 165 - num instructions 8
 Instr 1443 @ 0x5a30 (23088) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1444 @ 0x5a40 (23104) - ISETP.NE.AND P2, PT, R10, 0xf, PT ;
 Instr 1445 @ 0x5a50 (23120) - IMAD.HI.U32 R18, R27, c[0x0][0x260], R26 ;
 Instr 1446 @ 0x5a60 (23136) - SHF.R.U32.HI R19, RZ, c[0x0][0x264], R18 ;
 Instr 1447 @ 0x5a70 (23152) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1448 @ 0x5a80 (23168) - IMAD R27, R26, c[0x0][0x25c], R27 ;
 Instr 1449 @ 0x5a90 (23184) - IMAD R6, R27, c[0x0][0x318], R6 ;
 Instr 1450 @ 0x5aa0 (23200) - @!P2 BRA 0x5f80 ;
Basic block id 166 - num instructions 8
 Instr 1451 @ 0x5ab0 (23216) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1452 @ 0x5ac0 (23232) - ISETP.NE.AND P2, PT, R10, 0x10, PT ;
 Instr 1453 @ 0x5ad0 (23248) - IMAD.HI.U32 R26, R19, c[0x0][0x26c], R18 ;
 Instr 1454 @ 0x5ae0 (23264) - SHF.R.U32.HI R27, RZ, c[0x0][0x270], R26 ;
 Instr 1455 @ 0x5af0 (23280) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1456 @ 0x5b00 (23296) - IMAD R19, R18, c[0x0][0x268], R19 ;
 Instr 1457 @ 0x5b10 (23312) - IMAD R6, R19, c[0x0][0x31c], R6 ;
 Instr 1458 @ 0x5b20 (23328) - @!P2 BRA 0x5f80 ;
Basic block id 167 - num instructions 8
 Instr 1459 @ 0x5b30 (23344) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1460 @ 0x5b40 (23360) - ISETP.NE.AND P2, PT, R10, 0x11, PT ;
 Instr 1461 @ 0x5b50 (23376) - IMAD.HI.U32 R18, R27, c[0x0][0x278], R26 ;
 Instr 1462 @ 0x5b60 (23392) - SHF.R.U32.HI R19, RZ, c[0x0][0x27c], R18 ;
 Instr 1463 @ 0x5b70 (23408) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1464 @ 0x5b80 (23424) - IMAD R27, R26, c[0x0][0x274], R27 ;
 Instr 1465 @ 0x5b90 (23440) - IMAD R6, R27, c[0x0][0x320], R6 ;
 Instr 1466 @ 0x5ba0 (23456) - @!P2 BRA 0x5f80 ;
Basic block id 168 - num instructions 8
 Instr 1467 @ 0x5bb0 (23472) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1468 @ 0x5bc0 (23488) - ISETP.NE.AND P2, PT, R10, 0x12, PT ;
 Instr 1469 @ 0x5bd0 (23504) - IMAD.HI.U32 R26, R19, c[0x0][0x284], R18 ;
 Instr 1470 @ 0x5be0 (23520) - SHF.R.U32.HI R27, RZ, c[0x0][0x288], R26 ;
 Instr 1471 @ 0x5bf0 (23536) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1472 @ 0x5c00 (23552) - IMAD R19, R18, c[0x0][0x280], R19 ;
 Instr 1473 @ 0x5c10 (23568) - IMAD R6, R19, c[0x0][0x324], R6 ;
 Instr 1474 @ 0x5c20 (23584) - @!P2 BRA 0x5f80 ;
Basic block id 169 - num instructions 8
 Instr 1475 @ 0x5c30 (23600) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1476 @ 0x5c40 (23616) - ISETP.NE.AND P2, PT, R10, 0x13, PT ;
 Instr 1477 @ 0x5c50 (23632) - IMAD.HI.U32 R18, R27, c[0x0][0x290], R26 ;
 Instr 1478 @ 0x5c60 (23648) - SHF.R.U32.HI R19, RZ, c[0x0][0x294], R18 ;
 Instr 1479 @ 0x5c70 (23664) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1480 @ 0x5c80 (23680) - IMAD R27, R26, c[0x0][0x28c], R27 ;
 Instr 1481 @ 0x5c90 (23696) - IMAD R6, R27, c[0x0][0x328], R6 ;
 Instr 1482 @ 0x5ca0 (23712) - @!P2 BRA 0x5f80 ;
Basic block id 170 - num instructions 8
 Instr 1483 @ 0x5cb0 (23728) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1484 @ 0x5cc0 (23744) - ISETP.NE.AND P2, PT, R10, 0x14, PT ;
 Instr 1485 @ 0x5cd0 (23760) - IMAD.HI.U32 R26, R19, c[0x0][0x29c], R18 ;
 Instr 1486 @ 0x5ce0 (23776) - SHF.R.U32.HI R27, RZ, c[0x0][0x2a0], R26 ;
 Instr 1487 @ 0x5cf0 (23792) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1488 @ 0x5d00 (23808) - IMAD R19, R18, c[0x0][0x298], R19 ;
 Instr 1489 @ 0x5d10 (23824) - IMAD R6, R19, c[0x0][0x32c], R6 ;
 Instr 1490 @ 0x5d20 (23840) - @!P2 BRA 0x5f80 ;
Basic block id 171 - num instructions 8
 Instr 1491 @ 0x5d30 (23856) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1492 @ 0x5d40 (23872) - ISETP.NE.AND P2, PT, R10, 0x15, PT ;
 Instr 1493 @ 0x5d50 (23888) - IMAD.HI.U32 R18, R27, c[0x0][0x2a8], R26 ;
 Instr 1494 @ 0x5d60 (23904) - SHF.R.U32.HI R19, RZ, c[0x0][0x2ac], R18 ;
 Instr 1495 @ 0x5d70 (23920) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1496 @ 0x5d80 (23936) - IMAD R27, R26, c[0x0][0x2a4], R27 ;
 Instr 1497 @ 0x5d90 (23952) - IMAD R6, R27, c[0x0][0x330], R6 ;
 Instr 1498 @ 0x5da0 (23968) - @!P2 BRA 0x5f80 ;
Basic block id 172 - num instructions 8
 Instr 1499 @ 0x5db0 (23984) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1500 @ 0x5dc0 (24000) - ISETP.NE.AND P2, PT, R10, 0x16, PT ;
 Instr 1501 @ 0x5dd0 (24016) - IMAD.HI.U32 R26, R19, c[0x0][0x2b4], R18 ;
 Instr 1502 @ 0x5de0 (24032) - SHF.R.U32.HI R27, RZ, c[0x0][0x2b8], R26 ;
 Instr 1503 @ 0x5df0 (24048) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1504 @ 0x5e00 (24064) - IMAD R19, R18, c[0x0][0x2b0], R19 ;
 Instr 1505 @ 0x5e10 (24080) - IMAD R6, R19, c[0x0][0x334], R6 ;
 Instr 1506 @ 0x5e20 (24096) - @!P2 BRA 0x5f80 ;
Basic block id 173 - num instructions 8
 Instr 1507 @ 0x5e30 (24112) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1508 @ 0x5e40 (24128) - ISETP.NE.AND P2, PT, R10, 0x17, PT ;
 Instr 1509 @ 0x5e50 (24144) - IMAD.HI.U32 R18, R27, c[0x0][0x2c0], R26 ;
 Instr 1510 @ 0x5e60 (24160) - SHF.R.U32.HI R19, RZ, c[0x0][0x2c4], R18 ;
 Instr 1511 @ 0x5e70 (24176) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1512 @ 0x5e80 (24192) - IMAD R27, R26, c[0x0][0x2bc], R27 ;
 Instr 1513 @ 0x5e90 (24208) - IMAD R6, R27, c[0x0][0x338], R6 ;
 Instr 1514 @ 0x5ea0 (24224) - @!P2 BRA 0x5f80 ;
Basic block id 174 - num instructions 13
 Instr 1515 @ 0x5eb0 (24240) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
 Instr 1516 @ 0x5ec0 (24256) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1517 @ 0x5ed0 (24272) - IMAD.HI.U32 R26, R19, c[0x0][0x2cc], R18 ;
 Instr 1518 @ 0x5ee0 (24288) - SHF.R.U32.HI R27, RZ, c[0x0][0x2d0], R26 ;
 Instr 1519 @ 0x5ef0 (24304) - @P2 MOV R26, RZ ;
 Instr 1520 @ 0x5f00 (24320) - IMAD.MOV R18, RZ, RZ, -R27.reuse ;
 Instr 1521 @ 0x5f10 (24336) - @P2 IMAD.HI.U32 R10, R27, c[0x0][0x2d8], R26 ;
 Instr 1522 @ 0x5f20 (24352) - IMAD R19, R18, c[0x0][0x2c8], R19 ;
 Instr 1523 @ 0x5f30 (24368) - @P2 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1524 @ 0x5f40 (24384) - IMAD R6, R19, c[0x0][0x33c], R6 ;
 Instr 1525 @ 0x5f50 (24400) - @P2 IADD3 R26, -R10, RZ, RZ ;
 Instr 1526 @ 0x5f60 (24416) - @P2 IMAD R27, R26, c[0x0][0x2d4], R27 ;
 Instr 1527 @ 0x5f70 (24432) - @P2 IMAD R6, R27, c[0x0][0x340], R6 ;
Basic block id 175 - num instructions 5
 Instr 1528 @ 0x5f80 (24448) - LOP3.LUT R19, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1529 @ 0x5f90 (24464) - IADD3 R18, P2, R4, R19, RZ ;
 Instr 1530 @ 0x5fa0 (24480) - IMAD.X R19, RZ, RZ, R5, P2 ;
 Instr 1531 @ 0x5fb0 (24496) - LDG.E.64.SYS R18, [R18] ;
 Instr 1532 @ 0x5fc0 (24512) - IADD3 R27, R11, c[0x0][0x17c], RZ ;
Basic block id 176 - num instructions 2
 Instr 1533 @ 0x5fd0 (24528) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
 Instr 1534 @ 0x5fe0 (24544) - @P2 BRA 0x8690 ;
Basic block id 177 - num instructions 2
 Instr 1535 @ 0x5ff0 (24560) - MOV R6, RZ ;
 Instr 1536 @ 0x6000 (24576) - @!P1 BRA 0x6c70 ;
Basic block id 178 - num instructions 9
 Instr 1537 @ 0x6010 (24592) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1538 @ 0x6020 (24608) - MOV R10, c[0x0][0x1b0] ;
 Instr 1539 @ 0x6030 (24624) - IMAD.HI.U32 R20, R27, c[0x0][0x1b8], R26 ;
 Instr 1540 @ 0x6040 (24640) - ISETP.NE.AND P2, PT, R10, 0x1, PT ;
 Instr 1541 @ 0x6050 (24656) - SHF.R.U32.HI R21, RZ, c[0x0][0x1bc], R20 ;
 Instr 1542 @ 0x6060 (24672) - IMAD.MOV R29, RZ, RZ, -R21 ;
 Instr 1543 @ 0x6070 (24688) - IMAD R6, R29, c[0x0][0x1b4], R27 ;
 Instr 1544 @ 0x6080 (24704) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1545 @ 0x6090 (24720) - @!P2 BRA 0x6c70 ;
Basic block id 179 - num instructions 8
 Instr 1546 @ 0x60a0 (24736) - MOV R20, RZ ;
 Instr 1547 @ 0x60b0 (24752) - ISETP.NE.AND P2, PT, R10, 0x2, PT ;
 Instr 1548 @ 0x60c0 (24768) - IMAD.HI.U32 R28, R21, c[0x0][0x1c4], R20 ;
 Instr 1549 @ 0x60d0 (24784) - SHF.R.U32.HI R29, RZ, c[0x0][0x1c8], R28 ;
 Instr 1550 @ 0x60e0 (24800) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1551 @ 0x60f0 (24816) - IMAD R21, R20, c[0x0][0x1c0], R21 ;
 Instr 1552 @ 0x6100 (24832) - IMAD R6, R21, c[0x0][0x2e4], R6 ;
 Instr 1553 @ 0x6110 (24848) - @!P2 BRA 0x6c70 ;
Basic block id 180 - num instructions 8
 Instr 1554 @ 0x6120 (24864) - MOV R28, RZ ;
 Instr 1555 @ 0x6130 (24880) - ISETP.NE.AND P2, PT, R10, 0x3, PT ;
 Instr 1556 @ 0x6140 (24896) - IMAD.HI.U32 R20, R29, c[0x0][0x1d0], R28 ;
 Instr 1557 @ 0x6150 (24912) - SHF.R.U32.HI R21, RZ, c[0x0][0x1d4], R20 ;
 Instr 1558 @ 0x6160 (24928) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1559 @ 0x6170 (24944) - IMAD R29, R28, c[0x0][0x1cc], R29 ;
 Instr 1560 @ 0x6180 (24960) - IMAD R6, R29, c[0x0][0x2e8], R6 ;
 Instr 1561 @ 0x6190 (24976) - @!P2 BRA 0x6c70 ;
Basic block id 181 - num instructions 8
 Instr 1562 @ 0x61a0 (24992) - MOV R20, RZ ;
 Instr 1563 @ 0x61b0 (25008) - ISETP.NE.AND P2, PT, R10, 0x4, PT ;
 Instr 1564 @ 0x61c0 (25024) - IMAD.HI.U32 R28, R21, c[0x0][0x1dc], R20 ;
 Instr 1565 @ 0x61d0 (25040) - SHF.R.U32.HI R29, RZ, c[0x0][0x1e0], R28 ;
 Instr 1566 @ 0x61e0 (25056) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1567 @ 0x61f0 (25072) - IMAD R21, R20, c[0x0][0x1d8], R21 ;
 Instr 1568 @ 0x6200 (25088) - IMAD R6, R21, c[0x0][0x2ec], R6 ;
 Instr 1569 @ 0x6210 (25104) - @!P2 BRA 0x6c70 ;
Basic block id 182 - num instructions 8
 Instr 1570 @ 0x6220 (25120) - MOV R28, RZ ;
 Instr 1571 @ 0x6230 (25136) - ISETP.NE.AND P2, PT, R10, 0x5, PT ;
 Instr 1572 @ 0x6240 (25152) - IMAD.HI.U32 R20, R29, c[0x0][0x1e8], R28 ;
 Instr 1573 @ 0x6250 (25168) - SHF.R.U32.HI R21, RZ, c[0x0][0x1ec], R20 ;
 Instr 1574 @ 0x6260 (25184) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1575 @ 0x6270 (25200) - IMAD R29, R28, c[0x0][0x1e4], R29 ;
 Instr 1576 @ 0x6280 (25216) - IMAD R6, R29, c[0x0][0x2f0], R6 ;
 Instr 1577 @ 0x6290 (25232) - @!P2 BRA 0x6c70 ;
Basic block id 183 - num instructions 8
 Instr 1578 @ 0x62a0 (25248) - MOV R20, RZ ;
 Instr 1579 @ 0x62b0 (25264) - ISETP.NE.AND P2, PT, R10, 0x6, PT ;
 Instr 1580 @ 0x62c0 (25280) - IMAD.HI.U32 R28, R21, c[0x0][0x1f4], R20 ;
 Instr 1581 @ 0x62d0 (25296) - SHF.R.U32.HI R29, RZ, c[0x0][0x1f8], R28 ;
 Instr 1582 @ 0x62e0 (25312) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1583 @ 0x62f0 (25328) - IMAD R21, R20, c[0x0][0x1f0], R21 ;
 Instr 1584 @ 0x6300 (25344) - IMAD R6, R21, c[0x0][0x2f4], R6 ;
 Instr 1585 @ 0x6310 (25360) - @!P2 BRA 0x6c70 ;
Basic block id 184 - num instructions 8
 Instr 1586 @ 0x6320 (25376) - MOV R28, RZ ;
 Instr 1587 @ 0x6330 (25392) - ISETP.NE.AND P2, PT, R10, 0x7, PT ;
 Instr 1588 @ 0x6340 (25408) - IMAD.HI.U32 R20, R29, c[0x0][0x200], R28 ;
 Instr 1589 @ 0x6350 (25424) - SHF.R.U32.HI R21, RZ, c[0x0][0x204], R20 ;
 Instr 1590 @ 0x6360 (25440) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1591 @ 0x6370 (25456) - IMAD R29, R28, c[0x0][0x1fc], R29 ;
 Instr 1592 @ 0x6380 (25472) - IMAD R6, R29, c[0x0][0x2f8], R6 ;
 Instr 1593 @ 0x6390 (25488) - @!P2 BRA 0x6c70 ;
Basic block id 185 - num instructions 8
 Instr 1594 @ 0x63a0 (25504) - MOV R20, RZ ;
 Instr 1595 @ 0x63b0 (25520) - ISETP.NE.AND P2, PT, R10, 0x8, PT ;
 Instr 1596 @ 0x63c0 (25536) - IMAD.HI.U32 R28, R21, c[0x0][0x20c], R20 ;
 Instr 1597 @ 0x63d0 (25552) - SHF.R.U32.HI R29, RZ, c[0x0][0x210], R28 ;
 Instr 1598 @ 0x63e0 (25568) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1599 @ 0x63f0 (25584) - IMAD R21, R20, c[0x0][0x208], R21 ;
 Instr 1600 @ 0x6400 (25600) - IMAD R6, R21, c[0x0][0x2fc], R6 ;
 Instr 1601 @ 0x6410 (25616) - @!P2 BRA 0x6c70 ;
Basic block id 186 - num instructions 8
 Instr 1602 @ 0x6420 (25632) - MOV R28, RZ ;
 Instr 1603 @ 0x6430 (25648) - ISETP.NE.AND P2, PT, R10, 0x9, PT ;
 Instr 1604 @ 0x6440 (25664) - IMAD.HI.U32 R20, R29, c[0x0][0x218], R28 ;
 Instr 1605 @ 0x6450 (25680) - SHF.R.U32.HI R21, RZ, c[0x0][0x21c], R20 ;
 Instr 1606 @ 0x6460 (25696) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1607 @ 0x6470 (25712) - IMAD R29, R28, c[0x0][0x214], R29 ;
 Instr 1608 @ 0x6480 (25728) - IMAD R6, R29, c[0x0][0x300], R6 ;
 Instr 1609 @ 0x6490 (25744) - @!P2 BRA 0x6c70 ;
Basic block id 187 - num instructions 8
 Instr 1610 @ 0x64a0 (25760) - MOV R20, RZ ;
 Instr 1611 @ 0x64b0 (25776) - ISETP.NE.AND P2, PT, R10, 0xa, PT ;
 Instr 1612 @ 0x64c0 (25792) - IMAD.HI.U32 R28, R21, c[0x0][0x224], R20 ;
 Instr 1613 @ 0x64d0 (25808) - SHF.R.U32.HI R29, RZ, c[0x0][0x228], R28 ;
 Instr 1614 @ 0x64e0 (25824) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1615 @ 0x64f0 (25840) - IMAD R21, R20, c[0x0][0x220], R21 ;
 Instr 1616 @ 0x6500 (25856) - IMAD R6, R21, c[0x0][0x304], R6 ;
 Instr 1617 @ 0x6510 (25872) - @!P2 BRA 0x6c70 ;
Basic block id 188 - num instructions 8
 Instr 1618 @ 0x6520 (25888) - MOV R28, RZ ;
 Instr 1619 @ 0x6530 (25904) - ISETP.NE.AND P2, PT, R10, 0xb, PT ;
 Instr 1620 @ 0x6540 (25920) - IMAD.HI.U32 R20, R29, c[0x0][0x230], R28 ;
 Instr 1621 @ 0x6550 (25936) - SHF.R.U32.HI R21, RZ, c[0x0][0x234], R20 ;
 Instr 1622 @ 0x6560 (25952) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1623 @ 0x6570 (25968) - IMAD R29, R28, c[0x0][0x22c], R29 ;
 Instr 1624 @ 0x6580 (25984) - IMAD R6, R29, c[0x0][0x308], R6 ;
 Instr 1625 @ 0x6590 (26000) - @!P2 BRA 0x6c70 ;
Basic block id 189 - num instructions 8
 Instr 1626 @ 0x65a0 (26016) - MOV R20, RZ ;
 Instr 1627 @ 0x65b0 (26032) - ISETP.NE.AND P2, PT, R10, 0xc, PT ;
 Instr 1628 @ 0x65c0 (26048) - IMAD.HI.U32 R28, R21, c[0x0][0x23c], R20 ;
 Instr 1629 @ 0x65d0 (26064) - SHF.R.U32.HI R29, RZ, c[0x0][0x240], R28 ;
 Instr 1630 @ 0x65e0 (26080) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1631 @ 0x65f0 (26096) - IMAD R21, R20, c[0x0][0x238], R21 ;
 Instr 1632 @ 0x6600 (26112) - IMAD R6, R21, c[0x0][0x30c], R6 ;
 Instr 1633 @ 0x6610 (26128) - @!P2 BRA 0x6c70 ;
Basic block id 190 - num instructions 8
 Instr 1634 @ 0x6620 (26144) - MOV R28, RZ ;
 Instr 1635 @ 0x6630 (26160) - ISETP.NE.AND P2, PT, R10, 0xd, PT ;
 Instr 1636 @ 0x6640 (26176) - IMAD.HI.U32 R20, R29, c[0x0][0x248], R28 ;
 Instr 1637 @ 0x6650 (26192) - SHF.R.U32.HI R21, RZ, c[0x0][0x24c], R20 ;
 Instr 1638 @ 0x6660 (26208) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1639 @ 0x6670 (26224) - IMAD R29, R28, c[0x0][0x244], R29 ;
 Instr 1640 @ 0x6680 (26240) - IMAD R6, R29, c[0x0][0x310], R6 ;
 Instr 1641 @ 0x6690 (26256) - @!P2 BRA 0x6c70 ;
Basic block id 191 - num instructions 8
 Instr 1642 @ 0x66a0 (26272) - MOV R20, RZ ;
 Instr 1643 @ 0x66b0 (26288) - ISETP.NE.AND P2, PT, R10, 0xe, PT ;
 Instr 1644 @ 0x66c0 (26304) - IMAD.HI.U32 R28, R21, c[0x0][0x254], R20 ;
 Instr 1645 @ 0x66d0 (26320) - SHF.R.U32.HI R29, RZ, c[0x0][0x258], R28 ;
 Instr 1646 @ 0x66e0 (26336) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1647 @ 0x66f0 (26352) - IMAD R21, R20, c[0x0][0x250], R21 ;
 Instr 1648 @ 0x6700 (26368) - IMAD R6, R21, c[0x0][0x314], R6 ;
 Instr 1649 @ 0x6710 (26384) - @!P2 BRA 0x6c70 ;
Basic block id 192 - num instructions 8
 Instr 1650 @ 0x6720 (26400) - MOV R28, RZ ;
 Instr 1651 @ 0x6730 (26416) - ISETP.NE.AND P2, PT, R10, 0xf, PT ;
 Instr 1652 @ 0x6740 (26432) - IMAD.HI.U32 R20, R29, c[0x0][0x260], R28 ;
 Instr 1653 @ 0x6750 (26448) - SHF.R.U32.HI R21, RZ, c[0x0][0x264], R20 ;
 Instr 1654 @ 0x6760 (26464) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1655 @ 0x6770 (26480) - IMAD R29, R28, c[0x0][0x25c], R29 ;
 Instr 1656 @ 0x6780 (26496) - IMAD R6, R29, c[0x0][0x318], R6 ;
 Instr 1657 @ 0x6790 (26512) - @!P2 BRA 0x6c70 ;
Basic block id 193 - num instructions 8
 Instr 1658 @ 0x67a0 (26528) - MOV R20, RZ ;
 Instr 1659 @ 0x67b0 (26544) - ISETP.NE.AND P2, PT, R10, 0x10, PT ;
 Instr 1660 @ 0x67c0 (26560) - IMAD.HI.U32 R28, R21, c[0x0][0x26c], R20 ;
 Instr 1661 @ 0x67d0 (26576) - SHF.R.U32.HI R29, RZ, c[0x0][0x270], R28 ;
 Instr 1662 @ 0x67e0 (26592) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1663 @ 0x67f0 (26608) - IMAD R21, R20, c[0x0][0x268], R21 ;
 Instr 1664 @ 0x6800 (26624) - IMAD R6, R21, c[0x0][0x31c], R6 ;
 Instr 1665 @ 0x6810 (26640) - @!P2 BRA 0x6c70 ;
Basic block id 194 - num instructions 8
 Instr 1666 @ 0x6820 (26656) - MOV R28, RZ ;
 Instr 1667 @ 0x6830 (26672) - ISETP.NE.AND P2, PT, R10, 0x11, PT ;
 Instr 1668 @ 0x6840 (26688) - IMAD.HI.U32 R20, R29, c[0x0][0x278], R28 ;
 Instr 1669 @ 0x6850 (26704) - SHF.R.U32.HI R21, RZ, c[0x0][0x27c], R20 ;
 Instr 1670 @ 0x6860 (26720) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1671 @ 0x6870 (26736) - IMAD R29, R28, c[0x0][0x274], R29 ;
 Instr 1672 @ 0x6880 (26752) - IMAD R6, R29, c[0x0][0x320], R6 ;
 Instr 1673 @ 0x6890 (26768) - @!P2 BRA 0x6c70 ;
Basic block id 195 - num instructions 8
 Instr 1674 @ 0x68a0 (26784) - MOV R20, RZ ;
 Instr 1675 @ 0x68b0 (26800) - ISETP.NE.AND P2, PT, R10, 0x12, PT ;
 Instr 1676 @ 0x68c0 (26816) - IMAD.HI.U32 R28, R21, c[0x0][0x284], R20 ;
 Instr 1677 @ 0x68d0 (26832) - SHF.R.U32.HI R29, RZ, c[0x0][0x288], R28 ;
 Instr 1678 @ 0x68e0 (26848) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1679 @ 0x68f0 (26864) - IMAD R21, R20, c[0x0][0x280], R21 ;
 Instr 1680 @ 0x6900 (26880) - IMAD R6, R21, c[0x0][0x324], R6 ;
 Instr 1681 @ 0x6910 (26896) - @!P2 BRA 0x6c70 ;
Basic block id 196 - num instructions 8
 Instr 1682 @ 0x6920 (26912) - MOV R28, RZ ;
 Instr 1683 @ 0x6930 (26928) - ISETP.NE.AND P2, PT, R10, 0x13, PT ;
 Instr 1684 @ 0x6940 (26944) - IMAD.HI.U32 R20, R29, c[0x0][0x290], R28 ;
 Instr 1685 @ 0x6950 (26960) - SHF.R.U32.HI R21, RZ, c[0x0][0x294], R20 ;
 Instr 1686 @ 0x6960 (26976) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1687 @ 0x6970 (26992) - IMAD R29, R28, c[0x0][0x28c], R29 ;
 Instr 1688 @ 0x6980 (27008) - IMAD R6, R29, c[0x0][0x328], R6 ;
 Instr 1689 @ 0x6990 (27024) - @!P2 BRA 0x6c70 ;
Basic block id 197 - num instructions 8
 Instr 1690 @ 0x69a0 (27040) - MOV R20, RZ ;
 Instr 1691 @ 0x69b0 (27056) - ISETP.NE.AND P2, PT, R10, 0x14, PT ;
 Instr 1692 @ 0x69c0 (27072) - IMAD.HI.U32 R28, R21, c[0x0][0x29c], R20 ;
 Instr 1693 @ 0x69d0 (27088) - SHF.R.U32.HI R29, RZ, c[0x0][0x2a0], R28 ;
 Instr 1694 @ 0x69e0 (27104) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1695 @ 0x69f0 (27120) - IMAD R21, R20, c[0x0][0x298], R21 ;
 Instr 1696 @ 0x6a00 (27136) - IMAD R6, R21, c[0x0][0x32c], R6 ;
 Instr 1697 @ 0x6a10 (27152) - @!P2 BRA 0x6c70 ;
Basic block id 198 - num instructions 8
 Instr 1698 @ 0x6a20 (27168) - MOV R28, RZ ;
 Instr 1699 @ 0x6a30 (27184) - ISETP.NE.AND P2, PT, R10, 0x15, PT ;
 Instr 1700 @ 0x6a40 (27200) - IMAD.HI.U32 R20, R29, c[0x0][0x2a8], R28 ;
 Instr 1701 @ 0x6a50 (27216) - SHF.R.U32.HI R21, RZ, c[0x0][0x2ac], R20 ;
 Instr 1702 @ 0x6a60 (27232) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1703 @ 0x6a70 (27248) - IMAD R29, R28, c[0x0][0x2a4], R29 ;
 Instr 1704 @ 0x6a80 (27264) - IMAD R6, R29, c[0x0][0x330], R6 ;
 Instr 1705 @ 0x6a90 (27280) - @!P2 BRA 0x6c70 ;
Basic block id 199 - num instructions 8
 Instr 1706 @ 0x6aa0 (27296) - MOV R20, RZ ;
 Instr 1707 @ 0x6ab0 (27312) - ISETP.NE.AND P2, PT, R10, 0x16, PT ;
 Instr 1708 @ 0x6ac0 (27328) - IMAD.HI.U32 R28, R21, c[0x0][0x2b4], R20 ;
 Instr 1709 @ 0x6ad0 (27344) - SHF.R.U32.HI R29, RZ, c[0x0][0x2b8], R28 ;
 Instr 1710 @ 0x6ae0 (27360) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1711 @ 0x6af0 (27376) - IMAD R21, R20, c[0x0][0x2b0], R21 ;
 Instr 1712 @ 0x6b00 (27392) - IMAD R6, R21, c[0x0][0x334], R6 ;
 Instr 1713 @ 0x6b10 (27408) - @!P2 BRA 0x6c70 ;
Basic block id 200 - num instructions 8
 Instr 1714 @ 0x6b20 (27424) - MOV R28, RZ ;
 Instr 1715 @ 0x6b30 (27440) - ISETP.NE.AND P2, PT, R10, 0x17, PT ;
 Instr 1716 @ 0x6b40 (27456) - IMAD.HI.U32 R20, R29, c[0x0][0x2c0], R28 ;
 Instr 1717 @ 0x6b50 (27472) - SHF.R.U32.HI R21, RZ, c[0x0][0x2c4], R20 ;
 Instr 1718 @ 0x6b60 (27488) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1719 @ 0x6b70 (27504) - IMAD R29, R28, c[0x0][0x2bc], R29 ;
 Instr 1720 @ 0x6b80 (27520) - IMAD R6, R29, c[0x0][0x338], R6 ;
 Instr 1721 @ 0x6b90 (27536) - @!P2 BRA 0x6c70 ;
Basic block id 201 - num instructions 13
 Instr 1722 @ 0x6ba0 (27552) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
 Instr 1723 @ 0x6bb0 (27568) - MOV R20, RZ ;
 Instr 1724 @ 0x6bc0 (27584) - IMAD.HI.U32 R28, R21, c[0x0][0x2cc], R20 ;
 Instr 1725 @ 0x6bd0 (27600) - SHF.R.U32.HI R29, RZ, c[0x0][0x2d0], R28 ;
 Instr 1726 @ 0x6be0 (27616) - @P2 IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1727 @ 0x6bf0 (27632) - IADD3 R20, -R29.reuse, RZ, RZ ;
 Instr 1728 @ 0x6c00 (27648) - @P2 IMAD.HI.U32 R10, R29, c[0x0][0x2d8], R28 ;
 Instr 1729 @ 0x6c10 (27664) - IMAD R21, R20, c[0x0][0x2c8], R21 ;
 Instr 1730 @ 0x6c20 (27680) - @P2 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1731 @ 0x6c30 (27696) - IMAD R6, R21, c[0x0][0x33c], R6 ;
 Instr 1732 @ 0x6c40 (27712) - @P2 IMAD.MOV R28, RZ, RZ, -R10 ;
 Instr 1733 @ 0x6c50 (27728) - @P2 IMAD R29, R28, c[0x0][0x2d4], R29 ;
 Instr 1734 @ 0x6c60 (27744) - @P2 IMAD R6, R29, c[0x0][0x340], R6 ;
Basic block id 202 - num instructions 7
 Instr 1735 @ 0x6c70 (27760) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1736 @ 0x6c80 (27776) - IADD3 R20, P2, R4, R21, RZ ;
 Instr 1737 @ 0x6c90 (27792) - IADD3.X R21, RZ, R5, RZ, P2, !PT ;
 Instr 1738 @ 0x6ca0 (27808) - LDG.E.64.SYS R20, [R20] ;
 Instr 1739 @ 0x6cb0 (27824) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 1740 @ 0x6cc0 (27840) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
 Instr 1741 @ 0x6cd0 (27856) - @P2 BRA 0x8690 ;
Basic block id 203 - num instructions 2
 Instr 1742 @ 0x6ce0 (27872) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 1743 @ 0x6cf0 (27888) - @!P1 BRA 0x7960 ;
Basic block id 204 - num instructions 9
 Instr 1744 @ 0x6d00 (27904) - MOV R26, RZ ;
 Instr 1745 @ 0x6d10 (27920) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x1b0] ;
 Instr 1746 @ 0x6d20 (27936) - IMAD.HI.U32 R22, R27, c[0x0][0x1b8], R26 ;
 Instr 1747 @ 0x6d30 (27952) - ISETP.NE.AND P2, PT, R10, 0x1, PT ;
 Instr 1748 @ 0x6d40 (27968) - SHF.R.U32.HI R23, RZ, c[0x0][0x1bc], R22 ;
 Instr 1749 @ 0x6d50 (27984) - IADD3 R29, -R23, RZ, RZ ;
 Instr 1750 @ 0x6d60 (28000) - IMAD R6, R29, c[0x0][0x1b4], R27 ;
 Instr 1751 @ 0x6d70 (28016) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1752 @ 0x6d80 (28032) - @!P2 BRA 0x7960 ;
Basic block id 205 - num instructions 8
 Instr 1753 @ 0x6d90 (28048) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1754 @ 0x6da0 (28064) - ISETP.NE.AND P2, PT, R10, 0x2, PT ;
 Instr 1755 @ 0x6db0 (28080) - IMAD.HI.U32 R28, R23, c[0x0][0x1c4], R22 ;
 Instr 1756 @ 0x6dc0 (28096) - SHF.R.U32.HI R29, RZ, c[0x0][0x1c8], R28 ;
 Instr 1757 @ 0x6dd0 (28112) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1758 @ 0x6de0 (28128) - IMAD R23, R22, c[0x0][0x1c0], R23 ;
 Instr 1759 @ 0x6df0 (28144) - IMAD R6, R23, c[0x0][0x2e4], R6 ;
 Instr 1760 @ 0x6e00 (28160) - @!P2 BRA 0x7960 ;
Basic block id 206 - num instructions 8
 Instr 1761 @ 0x6e10 (28176) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1762 @ 0x6e20 (28192) - ISETP.NE.AND P2, PT, R10, 0x3, PT ;
 Instr 1763 @ 0x6e30 (28208) - IMAD.HI.U32 R22, R29, c[0x0][0x1d0], R28 ;
 Instr 1764 @ 0x6e40 (28224) - SHF.R.U32.HI R23, RZ, c[0x0][0x1d4], R22 ;
 Instr 1765 @ 0x6e50 (28240) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1766 @ 0x6e60 (28256) - IMAD R29, R28, c[0x0][0x1cc], R29 ;
 Instr 1767 @ 0x6e70 (28272) - IMAD R6, R29, c[0x0][0x2e8], R6 ;
 Instr 1768 @ 0x6e80 (28288) - @!P2 BRA 0x7960 ;
Basic block id 207 - num instructions 8
 Instr 1769 @ 0x6e90 (28304) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1770 @ 0x6ea0 (28320) - ISETP.NE.AND P2, PT, R10, 0x4, PT ;
 Instr 1771 @ 0x6eb0 (28336) - IMAD.HI.U32 R28, R23, c[0x0][0x1dc], R22 ;
 Instr 1772 @ 0x6ec0 (28352) - SHF.R.U32.HI R29, RZ, c[0x0][0x1e0], R28 ;
 Instr 1773 @ 0x6ed0 (28368) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1774 @ 0x6ee0 (28384) - IMAD R23, R22, c[0x0][0x1d8], R23 ;
 Instr 1775 @ 0x6ef0 (28400) - IMAD R6, R23, c[0x0][0x2ec], R6 ;
 Instr 1776 @ 0x6f00 (28416) - @!P2 BRA 0x7960 ;
Basic block id 208 - num instructions 8
 Instr 1777 @ 0x6f10 (28432) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1778 @ 0x6f20 (28448) - ISETP.NE.AND P2, PT, R10, 0x5, PT ;
 Instr 1779 @ 0x6f30 (28464) - IMAD.HI.U32 R22, R29, c[0x0][0x1e8], R28 ;
 Instr 1780 @ 0x6f40 (28480) - SHF.R.U32.HI R23, RZ, c[0x0][0x1ec], R22 ;
 Instr 1781 @ 0x6f50 (28496) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1782 @ 0x6f60 (28512) - IMAD R29, R28, c[0x0][0x1e4], R29 ;
 Instr 1783 @ 0x6f70 (28528) - IMAD R6, R29, c[0x0][0x2f0], R6 ;
 Instr 1784 @ 0x6f80 (28544) - @!P2 BRA 0x7960 ;
Basic block id 209 - num instructions 8
 Instr 1785 @ 0x6f90 (28560) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1786 @ 0x6fa0 (28576) - ISETP.NE.AND P2, PT, R10, 0x6, PT ;
 Instr 1787 @ 0x6fb0 (28592) - IMAD.HI.U32 R28, R23, c[0x0][0x1f4], R22 ;
 Instr 1788 @ 0x6fc0 (28608) - SHF.R.U32.HI R29, RZ, c[0x0][0x1f8], R28 ;
 Instr 1789 @ 0x6fd0 (28624) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1790 @ 0x6fe0 (28640) - IMAD R23, R22, c[0x0][0x1f0], R23 ;
 Instr 1791 @ 0x6ff0 (28656) - IMAD R6, R23, c[0x0][0x2f4], R6 ;
 Instr 1792 @ 0x7000 (28672) - @!P2 BRA 0x7960 ;
Basic block id 210 - num instructions 8
 Instr 1793 @ 0x7010 (28688) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1794 @ 0x7020 (28704) - ISETP.NE.AND P2, PT, R10, 0x7, PT ;
 Instr 1795 @ 0x7030 (28720) - IMAD.HI.U32 R22, R29, c[0x0][0x200], R28 ;
 Instr 1796 @ 0x7040 (28736) - SHF.R.U32.HI R23, RZ, c[0x0][0x204], R22 ;
 Instr 1797 @ 0x7050 (28752) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1798 @ 0x7060 (28768) - IMAD R29, R28, c[0x0][0x1fc], R29 ;
 Instr 1799 @ 0x7070 (28784) - IMAD R6, R29, c[0x0][0x2f8], R6 ;
 Instr 1800 @ 0x7080 (28800) - @!P2 BRA 0x7960 ;
Basic block id 211 - num instructions 8
 Instr 1801 @ 0x7090 (28816) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1802 @ 0x70a0 (28832) - ISETP.NE.AND P2, PT, R10, 0x8, PT ;
 Instr 1803 @ 0x70b0 (28848) - IMAD.HI.U32 R28, R23, c[0x0][0x20c], R22 ;
 Instr 1804 @ 0x70c0 (28864) - SHF.R.U32.HI R29, RZ, c[0x0][0x210], R28 ;
 Instr 1805 @ 0x70d0 (28880) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1806 @ 0x70e0 (28896) - IMAD R23, R22, c[0x0][0x208], R23 ;
 Instr 1807 @ 0x70f0 (28912) - IMAD R6, R23, c[0x0][0x2fc], R6 ;
 Instr 1808 @ 0x7100 (28928) - @!P2 BRA 0x7960 ;
Basic block id 212 - num instructions 8
 Instr 1809 @ 0x7110 (28944) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1810 @ 0x7120 (28960) - ISETP.NE.AND P2, PT, R10, 0x9, PT ;
 Instr 1811 @ 0x7130 (28976) - IMAD.HI.U32 R22, R29, c[0x0][0x218], R28 ;
 Instr 1812 @ 0x7140 (28992) - SHF.R.U32.HI R23, RZ, c[0x0][0x21c], R22 ;
 Instr 1813 @ 0x7150 (29008) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1814 @ 0x7160 (29024) - IMAD R29, R28, c[0x0][0x214], R29 ;
 Instr 1815 @ 0x7170 (29040) - IMAD R6, R29, c[0x0][0x300], R6 ;
 Instr 1816 @ 0x7180 (29056) - @!P2 BRA 0x7960 ;
Basic block id 213 - num instructions 8
 Instr 1817 @ 0x7190 (29072) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1818 @ 0x71a0 (29088) - ISETP.NE.AND P2, PT, R10, 0xa, PT ;
 Instr 1819 @ 0x71b0 (29104) - IMAD.HI.U32 R28, R23, c[0x0][0x224], R22 ;
 Instr 1820 @ 0x71c0 (29120) - SHF.R.U32.HI R29, RZ, c[0x0][0x228], R28 ;
 Instr 1821 @ 0x71d0 (29136) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1822 @ 0x71e0 (29152) - IMAD R23, R22, c[0x0][0x220], R23 ;
 Instr 1823 @ 0x71f0 (29168) - IMAD R6, R23, c[0x0][0x304], R6 ;
 Instr 1824 @ 0x7200 (29184) - @!P2 BRA 0x7960 ;
Basic block id 214 - num instructions 8
 Instr 1825 @ 0x7210 (29200) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1826 @ 0x7220 (29216) - ISETP.NE.AND P2, PT, R10, 0xb, PT ;
 Instr 1827 @ 0x7230 (29232) - IMAD.HI.U32 R22, R29, c[0x0][0x230], R28 ;
 Instr 1828 @ 0x7240 (29248) - SHF.R.U32.HI R23, RZ, c[0x0][0x234], R22 ;
 Instr 1829 @ 0x7250 (29264) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1830 @ 0x7260 (29280) - IMAD R29, R28, c[0x0][0x22c], R29 ;
 Instr 1831 @ 0x7270 (29296) - IMAD R6, R29, c[0x0][0x308], R6 ;
 Instr 1832 @ 0x7280 (29312) - @!P2 BRA 0x7960 ;
Basic block id 215 - num instructions 8
 Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1834 @ 0x72a0 (29344) - ISETP.NE.AND P2, PT, R10, 0xc, PT ;
 Instr 1835 @ 0x72b0 (29360) - IMAD.HI.U32 R28, R23, c[0x0][0x23c], R22 ;
 Instr 1836 @ 0x72c0 (29376) - SHF.R.U32.HI R29, RZ, c[0x0][0x240], R28 ;
 Instr 1837 @ 0x72d0 (29392) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1838 @ 0x72e0 (29408) - IMAD R23, R22, c[0x0][0x238], R23 ;
 Instr 1839 @ 0x72f0 (29424) - IMAD R6, R23, c[0x0][0x30c], R6 ;
 Instr 1840 @ 0x7300 (29440) - @!P2 BRA 0x7960 ;
Basic block id 216 - num instructions 8
 Instr 1841 @ 0x7310 (29456) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1842 @ 0x7320 (29472) - ISETP.NE.AND P2, PT, R10, 0xd, PT ;
 Instr 1843 @ 0x7330 (29488) - IMAD.HI.U32 R22, R29, c[0x0][0x248], R28 ;
 Instr 1844 @ 0x7340 (29504) - SHF.R.U32.HI R23, RZ, c[0x0][0x24c], R22 ;
 Instr 1845 @ 0x7350 (29520) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1846 @ 0x7360 (29536) - IMAD R29, R28, c[0x0][0x244], R29 ;
 Instr 1847 @ 0x7370 (29552) - IMAD R6, R29, c[0x0][0x310], R6 ;
 Instr 1848 @ 0x7380 (29568) - @!P2 BRA 0x7960 ;
Basic block id 217 - num instructions 8
 Instr 1849 @ 0x7390 (29584) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1850 @ 0x73a0 (29600) - ISETP.NE.AND P2, PT, R10, 0xe, PT ;
 Instr 1851 @ 0x73b0 (29616) - IMAD.HI.U32 R28, R23, c[0x0][0x254], R22 ;
 Instr 1852 @ 0x73c0 (29632) - SHF.R.U32.HI R29, RZ, c[0x0][0x258], R28 ;
 Instr 1853 @ 0x73d0 (29648) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1854 @ 0x73e0 (29664) - IMAD R23, R22, c[0x0][0x250], R23 ;
 Instr 1855 @ 0x73f0 (29680) - IMAD R6, R23, c[0x0][0x314], R6 ;
 Instr 1856 @ 0x7400 (29696) - @!P2 BRA 0x7960 ;
Basic block id 218 - num instructions 8
 Instr 1857 @ 0x7410 (29712) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1858 @ 0x7420 (29728) - ISETP.NE.AND P2, PT, R10, 0xf, PT ;
 Instr 1859 @ 0x7430 (29744) - IMAD.HI.U32 R22, R29, c[0x0][0x260], R28 ;
 Instr 1860 @ 0x7440 (29760) - SHF.R.U32.HI R23, RZ, c[0x0][0x264], R22 ;
 Instr 1861 @ 0x7450 (29776) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1862 @ 0x7460 (29792) - IMAD R29, R28, c[0x0][0x25c], R29 ;
 Instr 1863 @ 0x7470 (29808) - IMAD R6, R29, c[0x0][0x318], R6 ;
 Instr 1864 @ 0x7480 (29824) - @!P2 BRA 0x7960 ;
Basic block id 219 - num instructions 8
 Instr 1865 @ 0x7490 (29840) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1866 @ 0x74a0 (29856) - ISETP.NE.AND P2, PT, R10, 0x10, PT ;
 Instr 1867 @ 0x74b0 (29872) - IMAD.HI.U32 R28, R23, c[0x0][0x26c], R22 ;
 Instr 1868 @ 0x74c0 (29888) - SHF.R.U32.HI R29, RZ, c[0x0][0x270], R28 ;
 Instr 1869 @ 0x74d0 (29904) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1870 @ 0x74e0 (29920) - IMAD R23, R22, c[0x0][0x268], R23 ;
 Instr 1871 @ 0x74f0 (29936) - IMAD R6, R23, c[0x0][0x31c], R6 ;
 Instr 1872 @ 0x7500 (29952) - @!P2 BRA 0x7960 ;
Basic block id 220 - num instructions 8
 Instr 1873 @ 0x7510 (29968) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1874 @ 0x7520 (29984) - ISETP.NE.AND P2, PT, R10, 0x11, PT ;
 Instr 1875 @ 0x7530 (30000) - IMAD.HI.U32 R22, R29, c[0x0][0x278], R28 ;
 Instr 1876 @ 0x7540 (30016) - SHF.R.U32.HI R23, RZ, c[0x0][0x27c], R22 ;
 Instr 1877 @ 0x7550 (30032) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1878 @ 0x7560 (30048) - IMAD R29, R28, c[0x0][0x274], R29 ;
 Instr 1879 @ 0x7570 (30064) - IMAD R6, R29, c[0x0][0x320], R6 ;
 Instr 1880 @ 0x7580 (30080) - @!P2 BRA 0x7960 ;
Basic block id 221 - num instructions 8
 Instr 1881 @ 0x7590 (30096) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1882 @ 0x75a0 (30112) - ISETP.NE.AND P2, PT, R10, 0x12, PT ;
 Instr 1883 @ 0x75b0 (30128) - IMAD.HI.U32 R28, R23, c[0x0][0x284], R22 ;
 Instr 1884 @ 0x75c0 (30144) - SHF.R.U32.HI R29, RZ, c[0x0][0x288], R28 ;
 Instr 1885 @ 0x75d0 (30160) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1886 @ 0x75e0 (30176) - IMAD R23, R22, c[0x0][0x280], R23 ;
 Instr 1887 @ 0x75f0 (30192) - IMAD R6, R23, c[0x0][0x324], R6 ;
 Instr 1888 @ 0x7600 (30208) - @!P2 BRA 0x7960 ;
Basic block id 222 - num instructions 8
 Instr 1889 @ 0x7610 (30224) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1890 @ 0x7620 (30240) - ISETP.NE.AND P2, PT, R10, 0x13, PT ;
 Instr 1891 @ 0x7630 (30256) - IMAD.HI.U32 R22, R29, c[0x0][0x290], R28 ;
 Instr 1892 @ 0x7640 (30272) - SHF.R.U32.HI R23, RZ, c[0x0][0x294], R22 ;
 Instr 1893 @ 0x7650 (30288) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1894 @ 0x7660 (30304) - IMAD R29, R28, c[0x0][0x28c], R29 ;
 Instr 1895 @ 0x7670 (30320) - IMAD R6, R29, c[0x0][0x328], R6 ;
 Instr 1896 @ 0x7680 (30336) - @!P2 BRA 0x7960 ;
Basic block id 223 - num instructions 8
 Instr 1897 @ 0x7690 (30352) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1898 @ 0x76a0 (30368) - ISETP.NE.AND P2, PT, R10, 0x14, PT ;
 Instr 1899 @ 0x76b0 (30384) - IMAD.HI.U32 R28, R23, c[0x0][0x29c], R22 ;
 Instr 1900 @ 0x76c0 (30400) - SHF.R.U32.HI R29, RZ, c[0x0][0x2a0], R28 ;
 Instr 1901 @ 0x76d0 (30416) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1902 @ 0x76e0 (30432) - IMAD R23, R22, c[0x0][0x298], R23 ;
 Instr 1903 @ 0x76f0 (30448) - IMAD R6, R23, c[0x0][0x32c], R6 ;
 Instr 1904 @ 0x7700 (30464) - @!P2 BRA 0x7960 ;
Basic block id 224 - num instructions 8
 Instr 1905 @ 0x7710 (30480) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1906 @ 0x7720 (30496) - ISETP.NE.AND P2, PT, R10, 0x15, PT ;
 Instr 1907 @ 0x7730 (30512) - IMAD.HI.U32 R22, R29, c[0x0][0x2a8], R28 ;
 Instr 1908 @ 0x7740 (30528) - SHF.R.U32.HI R23, RZ, c[0x0][0x2ac], R22 ;
 Instr 1909 @ 0x7750 (30544) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1910 @ 0x7760 (30560) - IMAD R29, R28, c[0x0][0x2a4], R29 ;
 Instr 1911 @ 0x7770 (30576) - IMAD R6, R29, c[0x0][0x330], R6 ;
 Instr 1912 @ 0x7780 (30592) - @!P2 BRA 0x7960 ;
Basic block id 225 - num instructions 8
 Instr 1913 @ 0x7790 (30608) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1914 @ 0x77a0 (30624) - ISETP.NE.AND P2, PT, R10, 0x16, PT ;
 Instr 1915 @ 0x77b0 (30640) - IMAD.HI.U32 R28, R23, c[0x0][0x2b4], R22 ;
 Instr 1916 @ 0x77c0 (30656) - SHF.R.U32.HI R29, RZ, c[0x0][0x2b8], R28 ;
 Instr 1917 @ 0x77d0 (30672) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1918 @ 0x77e0 (30688) - IMAD R23, R22, c[0x0][0x2b0], R23 ;
 Instr 1919 @ 0x77f0 (30704) - IMAD R6, R23, c[0x0][0x334], R6 ;
 Instr 1920 @ 0x7800 (30720) - @!P2 BRA 0x7960 ;
Basic block id 226 - num instructions 8
 Instr 1921 @ 0x7810 (30736) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1922 @ 0x7820 (30752) - ISETP.NE.AND P2, PT, R10, 0x17, PT ;
 Instr 1923 @ 0x7830 (30768) - IMAD.HI.U32 R22, R29, c[0x0][0x2c0], R28 ;
 Instr 1924 @ 0x7840 (30784) - SHF.R.U32.HI R23, RZ, c[0x0][0x2c4], R22 ;
 Instr 1925 @ 0x7850 (30800) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1926 @ 0x7860 (30816) - IMAD R29, R28, c[0x0][0x2bc], R29 ;
 Instr 1927 @ 0x7870 (30832) - IMAD R6, R29, c[0x0][0x338], R6 ;
 Instr 1928 @ 0x7880 (30848) - @!P2 BRA 0x7960 ;
Basic block id 227 - num instructions 13
 Instr 1929 @ 0x7890 (30864) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
 Instr 1930 @ 0x78a0 (30880) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1931 @ 0x78b0 (30896) - IMAD.HI.U32 R28, R23, c[0x0][0x2cc], R22 ;
 Instr 1932 @ 0x78c0 (30912) - SHF.R.U32.HI R29, RZ, c[0x0][0x2d0], R28 ;
 Instr 1933 @ 0x78d0 (30928) - @P2 MOV R28, RZ ;
 Instr 1934 @ 0x78e0 (30944) - IMAD.MOV R22, RZ, RZ, -R29.reuse ;
 Instr 1935 @ 0x78f0 (30960) - @P2 IMAD.HI.U32 R10, R29, c[0x0][0x2d8], R28 ;
 Instr 1936 @ 0x7900 (30976) - IMAD R23, R22, c[0x0][0x2c8], R23 ;
 Instr 1937 @ 0x7910 (30992) - @P2 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1938 @ 0x7920 (31008) - IMAD R6, R23, c[0x0][0x33c], R6 ;
 Instr 1939 @ 0x7930 (31024) - @P2 IADD3 R28, -R10, RZ, RZ ;
 Instr 1940 @ 0x7940 (31040) - @P2 IMAD R29, R28, c[0x0][0x2d4], R29 ;
 Instr 1941 @ 0x7950 (31056) - @P2 IMAD R6, R29, c[0x0][0x340], R6 ;
Basic block id 228 - num instructions 7
 Instr 1942 @ 0x7960 (31072) - LOP3.LUT R23, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1943 @ 0x7970 (31088) - IADD3 R22, P2, R4, R23, RZ ;
 Instr 1944 @ 0x7980 (31104) - IMAD.X R23, RZ, RZ, R5, P2 ;
 Instr 1945 @ 0x7990 (31120) - LDG.E.64.SYS R22, [R22] ;
 Instr 1946 @ 0x79a0 (31136) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 1947 @ 0x79b0 (31152) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
 Instr 1948 @ 0x79c0 (31168) - @P2 BRA 0x8690 ;
Basic block id 229 - num instructions 2
 Instr 1949 @ 0x79d0 (31184) - MOV R6, RZ ;
 Instr 1950 @ 0x79e0 (31200) - @!P1 BRA 0x8650 ;
Basic block id 230 - num instructions 9
 Instr 1951 @ 0x79f0 (31216) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1952 @ 0x7a00 (31232) - MOV R10, c[0x0][0x1b0] ;
 Instr 1953 @ 0x7a10 (31248) - IMAD.HI.U32 R24, R27, c[0x0][0x1b8], R26 ;
 Instr 1954 @ 0x7a20 (31264) - ISETP.NE.AND P1, PT, R10, 0x1, PT ;
 Instr 1955 @ 0x7a30 (31280) - SHF.R.U32.HI R25, RZ, c[0x0][0x1bc], R24 ;
 Instr 1956 @ 0x7a40 (31296) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 1957 @ 0x7a50 (31312) - IMAD R6, R26, c[0x0][0x1b4], R27 ;
 Instr 1958 @ 0x7a60 (31328) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1959 @ 0x7a70 (31344) - @!P1 BRA 0x8650 ;
Basic block id 231 - num instructions 8
 Instr 1960 @ 0x7a80 (31360) - MOV R24, RZ ;
 Instr 1961 @ 0x7a90 (31376) - ISETP.NE.AND P1, PT, R10, 0x2, PT ;
 Instr 1962 @ 0x7aa0 (31392) - IMAD.HI.U32 R26, R25, c[0x0][0x1c4], R24 ;
 Instr 1963 @ 0x7ab0 (31408) - SHF.R.U32.HI R27, RZ, c[0x0][0x1c8], R26 ;
 Instr 1964 @ 0x7ac0 (31424) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 1965 @ 0x7ad0 (31440) - IMAD R25, R24, c[0x0][0x1c0], R25 ;
 Instr 1966 @ 0x7ae0 (31456) - IMAD R6, R25, c[0x0][0x2e4], R6 ;
 Instr 1967 @ 0x7af0 (31472) - @!P1 BRA 0x8650 ;
Basic block id 232 - num instructions 8
 Instr 1968 @ 0x7b00 (31488) - MOV R26, RZ ;
 Instr 1969 @ 0x7b10 (31504) - ISETP.NE.AND P1, PT, R10, 0x3, PT ;
 Instr 1970 @ 0x7b20 (31520) - IMAD.HI.U32 R24, R27, c[0x0][0x1d0], R26 ;
 Instr 1971 @ 0x7b30 (31536) - SHF.R.U32.HI R25, RZ, c[0x0][0x1d4], R24 ;
 Instr 1972 @ 0x7b40 (31552) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 1973 @ 0x7b50 (31568) - IMAD R27, R26, c[0x0][0x1cc], R27 ;
 Instr 1974 @ 0x7b60 (31584) - IMAD R6, R27, c[0x0][0x2e8], R6 ;
 Instr 1975 @ 0x7b70 (31600) - @!P1 BRA 0x8650 ;
Basic block id 233 - num instructions 8
 Instr 1976 @ 0x7b80 (31616) - MOV R24, RZ ;
 Instr 1977 @ 0x7b90 (31632) - ISETP.NE.AND P1, PT, R10, 0x4, PT ;
 Instr 1978 @ 0x7ba0 (31648) - IMAD.HI.U32 R26, R25, c[0x0][0x1dc], R24 ;
 Instr 1979 @ 0x7bb0 (31664) - SHF.R.U32.HI R27, RZ, c[0x0][0x1e0], R26 ;
 Instr 1980 @ 0x7bc0 (31680) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 1981 @ 0x7bd0 (31696) - IMAD R25, R24, c[0x0][0x1d8], R25 ;
 Instr 1982 @ 0x7be0 (31712) - IMAD R6, R25, c[0x0][0x2ec], R6 ;
 Instr 1983 @ 0x7bf0 (31728) - @!P1 BRA 0x8650 ;
Basic block id 234 - num instructions 8
 Instr 1984 @ 0x7c00 (31744) - MOV R26, RZ ;
 Instr 1985 @ 0x7c10 (31760) - ISETP.NE.AND P1, PT, R10, 0x5, PT ;
 Instr 1986 @ 0x7c20 (31776) - IMAD.HI.U32 R24, R27, c[0x0][0x1e8], R26 ;
 Instr 1987 @ 0x7c30 (31792) - SHF.R.U32.HI R25, RZ, c[0x0][0x1ec], R24 ;
 Instr 1988 @ 0x7c40 (31808) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 1989 @ 0x7c50 (31824) - IMAD R27, R26, c[0x0][0x1e4], R27 ;
 Instr 1990 @ 0x7c60 (31840) - IMAD R6, R27, c[0x0][0x2f0], R6 ;
 Instr 1991 @ 0x7c70 (31856) - @!P1 BRA 0x8650 ;
Basic block id 235 - num instructions 8
 Instr 1992 @ 0x7c80 (31872) - MOV R24, RZ ;
 Instr 1993 @ 0x7c90 (31888) - ISETP.NE.AND P1, PT, R10, 0x6, PT ;
 Instr 1994 @ 0x7ca0 (31904) - IMAD.HI.U32 R26, R25, c[0x0][0x1f4], R24 ;
 Instr 1995 @ 0x7cb0 (31920) - SHF.R.U32.HI R27, RZ, c[0x0][0x1f8], R26 ;
 Instr 1996 @ 0x7cc0 (31936) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 1997 @ 0x7cd0 (31952) - IMAD R25, R24, c[0x0][0x1f0], R25 ;
 Instr 1998 @ 0x7ce0 (31968) - IMAD R6, R25, c[0x0][0x2f4], R6 ;
 Instr 1999 @ 0x7cf0 (31984) - @!P1 BRA 0x8650 ;
Basic block id 236 - num instructions 8
 Instr 2000 @ 0x7d00 (32000) - MOV R26, RZ ;
 Instr 2001 @ 0x7d10 (32016) - ISETP.NE.AND P1, PT, R10, 0x7, PT ;
 Instr 2002 @ 0x7d20 (32032) - IMAD.HI.U32 R24, R27, c[0x0][0x200], R26 ;
 Instr 2003 @ 0x7d30 (32048) - SHF.R.U32.HI R25, RZ, c[0x0][0x204], R24 ;
 Instr 2004 @ 0x7d40 (32064) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2005 @ 0x7d50 (32080) - IMAD R27, R26, c[0x0][0x1fc], R27 ;
 Instr 2006 @ 0x7d60 (32096) - IMAD R6, R27, c[0x0][0x2f8], R6 ;
 Instr 2007 @ 0x7d70 (32112) - @!P1 BRA 0x8650 ;
Basic block id 237 - num instructions 8
 Instr 2008 @ 0x7d80 (32128) - MOV R24, RZ ;
 Instr 2009 @ 0x7d90 (32144) - ISETP.NE.AND P1, PT, R10, 0x8, PT ;
 Instr 2010 @ 0x7da0 (32160) - IMAD.HI.U32 R26, R25, c[0x0][0x20c], R24 ;
 Instr 2011 @ 0x7db0 (32176) - SHF.R.U32.HI R27, RZ, c[0x0][0x210], R26 ;
 Instr 2012 @ 0x7dc0 (32192) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2013 @ 0x7dd0 (32208) - IMAD R25, R24, c[0x0][0x208], R25 ;
 Instr 2014 @ 0x7de0 (32224) - IMAD R6, R25, c[0x0][0x2fc], R6 ;
 Instr 2015 @ 0x7df0 (32240) - @!P1 BRA 0x8650 ;
Basic block id 238 - num instructions 8
 Instr 2016 @ 0x7e00 (32256) - MOV R26, RZ ;
 Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P1, PT, R10, 0x9, PT ;
 Instr 2018 @ 0x7e20 (32288) - IMAD.HI.U32 R24, R27, c[0x0][0x218], R26 ;
 Instr 2019 @ 0x7e30 (32304) - SHF.R.U32.HI R25, RZ, c[0x0][0x21c], R24 ;
 Instr 2020 @ 0x7e40 (32320) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2021 @ 0x7e50 (32336) - IMAD R27, R26, c[0x0][0x214], R27 ;
 Instr 2022 @ 0x7e60 (32352) - IMAD R6, R27, c[0x0][0x300], R6 ;
 Instr 2023 @ 0x7e70 (32368) - @!P1 BRA 0x8650 ;
Basic block id 239 - num instructions 8
 Instr 2024 @ 0x7e80 (32384) - MOV R24, RZ ;
 Instr 2025 @ 0x7e90 (32400) - ISETP.NE.AND P1, PT, R10, 0xa, PT ;
 Instr 2026 @ 0x7ea0 (32416) - IMAD.HI.U32 R26, R25, c[0x0][0x224], R24 ;
 Instr 2027 @ 0x7eb0 (32432) - SHF.R.U32.HI R27, RZ, c[0x0][0x228], R26 ;
 Instr 2028 @ 0x7ec0 (32448) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2029 @ 0x7ed0 (32464) - IMAD R25, R24, c[0x0][0x220], R25 ;
 Instr 2030 @ 0x7ee0 (32480) - IMAD R6, R25, c[0x0][0x304], R6 ;
 Instr 2031 @ 0x7ef0 (32496) - @!P1 BRA 0x8650 ;
Basic block id 240 - num instructions 8
 Instr 2032 @ 0x7f00 (32512) - MOV R26, RZ ;
 Instr 2033 @ 0x7f10 (32528) - ISETP.NE.AND P1, PT, R10, 0xb, PT ;
 Instr 2034 @ 0x7f20 (32544) - IMAD.HI.U32 R24, R27, c[0x0][0x230], R26 ;
 Instr 2035 @ 0x7f30 (32560) - SHF.R.U32.HI R25, RZ, c[0x0][0x234], R24 ;
 Instr 2036 @ 0x7f40 (32576) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2037 @ 0x7f50 (32592) - IMAD R27, R26, c[0x0][0x22c], R27 ;
 Instr 2038 @ 0x7f60 (32608) - IMAD R6, R27, c[0x0][0x308], R6 ;
 Instr 2039 @ 0x7f70 (32624) - @!P1 BRA 0x8650 ;
Basic block id 241 - num instructions 8
 Instr 2040 @ 0x7f80 (32640) - MOV R24, RZ ;
 Instr 2041 @ 0x7f90 (32656) - ISETP.NE.AND P1, PT, R10, 0xc, PT ;
 Instr 2042 @ 0x7fa0 (32672) - IMAD.HI.U32 R26, R25, c[0x0][0x23c], R24 ;
 Instr 2043 @ 0x7fb0 (32688) - SHF.R.U32.HI R27, RZ, c[0x0][0x240], R26 ;
 Instr 2044 @ 0x7fc0 (32704) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2045 @ 0x7fd0 (32720) - IMAD R25, R24, c[0x0][0x238], R25 ;
 Instr 2046 @ 0x7fe0 (32736) - IMAD R6, R25, c[0x0][0x30c], R6 ;
 Instr 2047 @ 0x7ff0 (32752) - @!P1 BRA 0x8650 ;
Basic block id 242 - num instructions 8
 Instr 2048 @ 0x8000 (32768) - MOV R26, RZ ;
 Instr 2049 @ 0x8010 (32784) - ISETP.NE.AND P1, PT, R10, 0xd, PT ;
 Instr 2050 @ 0x8020 (32800) - IMAD.HI.U32 R24, R27, c[0x0][0x248], R26 ;
 Instr 2051 @ 0x8030 (32816) - SHF.R.U32.HI R25, RZ, c[0x0][0x24c], R24 ;
 Instr 2052 @ 0x8040 (32832) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2053 @ 0x8050 (32848) - IMAD R27, R26, c[0x0][0x244], R27 ;
 Instr 2054 @ 0x8060 (32864) - IMAD R6, R27, c[0x0][0x310], R6 ;
 Instr 2055 @ 0x8070 (32880) - @!P1 BRA 0x8650 ;
Basic block id 243 - num instructions 8
 Instr 2056 @ 0x8080 (32896) - MOV R24, RZ ;
 Instr 2057 @ 0x8090 (32912) - ISETP.NE.AND P1, PT, R10, 0xe, PT ;
 Instr 2058 @ 0x80a0 (32928) - IMAD.HI.U32 R26, R25, c[0x0][0x254], R24 ;
 Instr 2059 @ 0x80b0 (32944) - SHF.R.U32.HI R27, RZ, c[0x0][0x258], R26 ;
 Instr 2060 @ 0x80c0 (32960) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2061 @ 0x80d0 (32976) - IMAD R25, R24, c[0x0][0x250], R25 ;
 Instr 2062 @ 0x80e0 (32992) - IMAD R6, R25, c[0x0][0x314], R6 ;
 Instr 2063 @ 0x80f0 (33008) - @!P1 BRA 0x8650 ;
Basic block id 244 - num instructions 8
 Instr 2064 @ 0x8100 (33024) - MOV R26, RZ ;
 Instr 2065 @ 0x8110 (33040) - ISETP.NE.AND P1, PT, R10, 0xf, PT ;
 Instr 2066 @ 0x8120 (33056) - IMAD.HI.U32 R24, R27, c[0x0][0x260], R26 ;
 Instr 2067 @ 0x8130 (33072) - SHF.R.U32.HI R25, RZ, c[0x0][0x264], R24 ;
 Instr 2068 @ 0x8140 (33088) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2069 @ 0x8150 (33104) - IMAD R27, R26, c[0x0][0x25c], R27 ;
 Instr 2070 @ 0x8160 (33120) - IMAD R6, R27, c[0x0][0x318], R6 ;
 Instr 2071 @ 0x8170 (33136) - @!P1 BRA 0x8650 ;
Basic block id 245 - num instructions 8
 Instr 2072 @ 0x8180 (33152) - MOV R24, RZ ;
 Instr 2073 @ 0x8190 (33168) - ISETP.NE.AND P1, PT, R10, 0x10, PT ;
 Instr 2074 @ 0x81a0 (33184) - IMAD.HI.U32 R26, R25, c[0x0][0x26c], R24 ;
 Instr 2075 @ 0x81b0 (33200) - SHF.R.U32.HI R27, RZ, c[0x0][0x270], R26 ;
 Instr 2076 @ 0x81c0 (33216) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2077 @ 0x81d0 (33232) - IMAD R25, R24, c[0x0][0x268], R25 ;
 Instr 2078 @ 0x81e0 (33248) - IMAD R6, R25, c[0x0][0x31c], R6 ;
 Instr 2079 @ 0x81f0 (33264) - @!P1 BRA 0x8650 ;
Basic block id 246 - num instructions 8
 Instr 2080 @ 0x8200 (33280) - MOV R26, RZ ;
 Instr 2081 @ 0x8210 (33296) - ISETP.NE.AND P1, PT, R10, 0x11, PT ;
 Instr 2082 @ 0x8220 (33312) - IMAD.HI.U32 R24, R27, c[0x0][0x278], R26 ;
 Instr 2083 @ 0x8230 (33328) - SHF.R.U32.HI R25, RZ, c[0x0][0x27c], R24 ;
 Instr 2084 @ 0x8240 (33344) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2085 @ 0x8250 (33360) - IMAD R27, R26, c[0x0][0x274], R27 ;
 Instr 2086 @ 0x8260 (33376) - IMAD R6, R27, c[0x0][0x320], R6 ;
 Instr 2087 @ 0x8270 (33392) - @!P1 BRA 0x8650 ;
Basic block id 247 - num instructions 8
 Instr 2088 @ 0x8280 (33408) - MOV R24, RZ ;
 Instr 2089 @ 0x8290 (33424) - ISETP.NE.AND P1, PT, R10, 0x12, PT ;
 Instr 2090 @ 0x82a0 (33440) - IMAD.HI.U32 R26, R25, c[0x0][0x284], R24 ;
 Instr 2091 @ 0x82b0 (33456) - SHF.R.U32.HI R27, RZ, c[0x0][0x288], R26 ;
 Instr 2092 @ 0x82c0 (33472) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2093 @ 0x82d0 (33488) - IMAD R25, R24, c[0x0][0x280], R25 ;
 Instr 2094 @ 0x82e0 (33504) - IMAD R6, R25, c[0x0][0x324], R6 ;
 Instr 2095 @ 0x82f0 (33520) - @!P1 BRA 0x8650 ;
Basic block id 248 - num instructions 8
 Instr 2096 @ 0x8300 (33536) - MOV R26, RZ ;
 Instr 2097 @ 0x8310 (33552) - ISETP.NE.AND P1, PT, R10, 0x13, PT ;
 Instr 2098 @ 0x8320 (33568) - IMAD.HI.U32 R24, R27, c[0x0][0x290], R26 ;
 Instr 2099 @ 0x8330 (33584) - SHF.R.U32.HI R25, RZ, c[0x0][0x294], R24 ;
 Instr 2100 @ 0x8340 (33600) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2101 @ 0x8350 (33616) - IMAD R27, R26, c[0x0][0x28c], R27 ;
 Instr 2102 @ 0x8360 (33632) - IMAD R6, R27, c[0x0][0x328], R6 ;
 Instr 2103 @ 0x8370 (33648) - @!P1 BRA 0x8650 ;
Basic block id 249 - num instructions 8
 Instr 2104 @ 0x8380 (33664) - MOV R24, RZ ;
 Instr 2105 @ 0x8390 (33680) - ISETP.NE.AND P1, PT, R10, 0x14, PT ;
 Instr 2106 @ 0x83a0 (33696) - IMAD.HI.U32 R26, R25, c[0x0][0x29c], R24 ;
 Instr 2107 @ 0x83b0 (33712) - SHF.R.U32.HI R27, RZ, c[0x0][0x2a0], R26 ;
 Instr 2108 @ 0x83c0 (33728) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2109 @ 0x83d0 (33744) - IMAD R25, R24, c[0x0][0x298], R25 ;
 Instr 2110 @ 0x83e0 (33760) - IMAD R6, R25, c[0x0][0x32c], R6 ;
 Instr 2111 @ 0x83f0 (33776) - @!P1 BRA 0x8650 ;
Basic block id 250 - num instructions 8
 Instr 2112 @ 0x8400 (33792) - MOV R26, RZ ;
 Instr 2113 @ 0x8410 (33808) - ISETP.NE.AND P1, PT, R10, 0x15, PT ;
 Instr 2114 @ 0x8420 (33824) - IMAD.HI.U32 R24, R27, c[0x0][0x2a8], R26 ;
 Instr 2115 @ 0x8430 (33840) - SHF.R.U32.HI R25, RZ, c[0x0][0x2ac], R24 ;
 Instr 2116 @ 0x8440 (33856) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2117 @ 0x8450 (33872) - IMAD R27, R26, c[0x0][0x2a4], R27 ;
 Instr 2118 @ 0x8460 (33888) - IMAD R6, R27, c[0x0][0x330], R6 ;
 Instr 2119 @ 0x8470 (33904) - @!P1 BRA 0x8650 ;
Basic block id 251 - num instructions 8
 Instr 2120 @ 0x8480 (33920) - MOV R24, RZ ;
 Instr 2121 @ 0x8490 (33936) - ISETP.NE.AND P1, PT, R10, 0x16, PT ;
 Instr 2122 @ 0x84a0 (33952) - IMAD.HI.U32 R26, R25, c[0x0][0x2b4], R24 ;
 Instr 2123 @ 0x84b0 (33968) - SHF.R.U32.HI R27, RZ, c[0x0][0x2b8], R26 ;
 Instr 2124 @ 0x84c0 (33984) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2125 @ 0x84d0 (34000) - IMAD R25, R24, c[0x0][0x2b0], R25 ;
 Instr 2126 @ 0x84e0 (34016) - IMAD R6, R25, c[0x0][0x334], R6 ;
 Instr 2127 @ 0x84f0 (34032) - @!P1 BRA 0x8650 ;
Basic block id 252 - num instructions 8
 Instr 2128 @ 0x8500 (34048) - MOV R26, RZ ;
 Instr 2129 @ 0x8510 (34064) - ISETP.NE.AND P1, PT, R10, 0x17, PT ;
 Instr 2130 @ 0x8520 (34080) - IMAD.HI.U32 R24, R27, c[0x0][0x2c0], R26 ;
 Instr 2131 @ 0x8530 (34096) - SHF.R.U32.HI R25, RZ, c[0x0][0x2c4], R24 ;
 Instr 2132 @ 0x8540 (34112) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2133 @ 0x8550 (34128) - IMAD R27, R26, c[0x0][0x2bc], R27 ;
 Instr 2134 @ 0x8560 (34144) - IMAD R6, R27, c[0x0][0x338], R6 ;
 Instr 2135 @ 0x8570 (34160) - @!P1 BRA 0x8650 ;
Basic block id 253 - num instructions 13
 Instr 2136 @ 0x8580 (34176) - ISETP.NE.AND P1, PT, R10, 0x18, PT ;
 Instr 2137 @ 0x8590 (34192) - MOV R24, RZ ;
 Instr 2138 @ 0x85a0 (34208) - IMAD.HI.U32 R26, R25, c[0x0][0x2cc], R24 ;
 Instr 2139 @ 0x85b0 (34224) - SHF.R.U32.HI R27, RZ, c[0x0][0x2d0], R26 ;
 Instr 2140 @ 0x85c0 (34240) - @P1 IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 2141 @ 0x85d0 (34256) - IADD3 R24, -R27.reuse, RZ, RZ ;
 Instr 2142 @ 0x85e0 (34272) - @P1 IMAD.HI.U32 R10, R27, c[0x0][0x2d8], R26 ;
 Instr 2143 @ 0x85f0 (34288) - IMAD R25, R24, c[0x0][0x2c8], R25 ;
 Instr 2144 @ 0x8600 (34304) - @P1 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 2145 @ 0x8610 (34320) - IMAD R6, R25, c[0x0][0x33c], R6 ;
 Instr 2146 @ 0x8620 (34336) - @P1 IMAD.MOV R26, RZ, RZ, -R10 ;
 Instr 2147 @ 0x8630 (34352) - @P1 IMAD R27, R26, c[0x0][0x2d4], R27 ;
 Instr 2148 @ 0x8640 (34368) - @P1 IMAD R6, R27, c[0x0][0x340], R6 ;
Basic block id 254 - num instructions 4
 Instr 2149 @ 0x8650 (34384) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 2150 @ 0x8660 (34400) - IADD3 R24, P1, R4, R25, RZ ;
 Instr 2151 @ 0x8670 (34416) - IADD3.X R25, RZ, R5, RZ, P1, !PT ;
 Instr 2152 @ 0x8680 (34432) - LDG.E.64.SYS R24, [R24] ;
Basic block id 255 - num instructions 4
 Instr 2153 @ 0x8690 (34448) - BSYNC B1 ;
 Instr 2154 @ 0x86a0 (34464) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2155 @ 0x86b0 (34480) - BSSY B1, 0x8880 ;
 Instr 2156 @ 0x86c0 (34496) - @P0 BRA 0x8870 ;
Basic block id 256 - num instructions 6
 Instr 2157 @ 0x86d0 (34512) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
 Instr 2158 @ 0x86e0 (34528) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2159 @ 0x86f0 (34544) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2160 @ 0x8700 (34560) - DSETP.LT.OR P0, PT, R16, R18, P0 ;
 Instr 2161 @ 0x8710 (34576) - FSEL R16, R16, R18, P0 ;
 Instr 2162 @ 0x8720 (34592) - FSEL R17, R17, R19, P0 ;
Basic block id 257 - num instructions 1
 Instr 2163 @ 0x8730 (34608) - @P1 BRA 0x8870 ;
Basic block id 258 - num instructions 7
 Instr 2164 @ 0x8740 (34624) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2165 @ 0x8750 (34640) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2166 @ 0x8760 (34656) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2167 @ 0x8770 (34672) - DSETP.LT.OR P0, PT, R14, R20, P0 ;
 Instr 2168 @ 0x8780 (34688) - FSEL R14, R14, R20, P0 ;
 Instr 2169 @ 0x8790 (34704) - FSEL R15, R15, R21, P0 ;
 Instr 2170 @ 0x87a0 (34720) - @P1 BRA 0x8870 ;
Basic block id 259 - num instructions 12
 Instr 2171 @ 0x87b0 (34736) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2172 @ 0x87c0 (34752) - DSETP.GTU.AND P0, PT, |R12|, +INF , PT ;
 Instr 2173 @ 0x87d0 (34768) - ISETP.GE.U32.AND P2, PT, R4, c[0x0][0x174], PT ;
 Instr 2174 @ 0x87e0 (34784) - DSETP.LT.OR P0, PT, R12, R22, P0 ;
 Instr 2175 @ 0x87f0 (34800) - @!P2 DSETP.GTU.AND P1, PT, |R8|, +INF , PT ;
 Instr 2176 @ 0x8800 (34816) - FSEL R12, R12, R22, P0 ;
 Instr 2177 @ 0x8810 (34832) - FSEL R13, R13, R23, P0 ;
 Instr 2178 @ 0x8820 (34848) - @!P2 DSETP.LT.OR P1, PT, R8, R24, P1 ;
 Instr 2179 @ 0x8830 (34864) - @!P2 FSEL R4, R8, R24, P1 ;
 Instr 2180 @ 0x8840 (34880) - @!P2 FSEL R25, R9, R25, P1 ;
 Instr 2181 @ 0x8850 (34896) - @!P2 IMAD.MOV.U32 R8, RZ, RZ, R4 ;
 Instr 2182 @ 0x8860 (34912) - @!P2 MOV R9, R25 ;
Basic block id 260 - num instructions 14
 Instr 2183 @ 0x8870 (34928) - BSYNC B1 ;
 Instr 2184 @ 0x8880 (34944) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2185 @ 0x8890 (34960) - DSETP.LT.OR P0, PT, R16, R14, P0 ;
 Instr 2186 @ 0x88a0 (34976) - FSEL R4, R16, R14, P0 ;
 Instr 2187 @ 0x88b0 (34992) - FSEL R5, R17, R15, P0 ;
 Instr 2188 @ 0x88c0 (35008) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2189 @ 0x88d0 (35024) - DSETP.LT.OR P0, PT, R4, R12, P0 ;
 Instr 2190 @ 0x88e0 (35040) - FSEL R4, R4, R12, P0 ;
 Instr 2191 @ 0x88f0 (35056) - FSEL R5, R5, R13, P0 ;
 Instr 2192 @ 0x8900 (35072) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2193 @ 0x8910 (35088) - DSETP.LT.OR P0, PT, R4, R8, P0 ;
 Instr 2194 @ 0x8920 (35104) - FSEL R16, R4, R8, P0 ;
 Instr 2195 @ 0x8930 (35120) - FSEL R17, R5, R9, P0 ;
 Instr 2196 @ 0x8940 (35136) - BRA 0x98b0 ;
Basic block id 261 - num instructions 10
 Instr 2197 @ 0x8950 (35152) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
 Instr 2198 @ 0x8960 (35168) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2199 @ 0x8970 (35184) - BSSY B1, 0x8d00 ;
 Instr 2200 @ 0x8980 (35200) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2201 @ 0x8990 (35216) - MOV R13, c[0x0][0x16c] ;
 Instr 2202 @ 0x89a0 (35232) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 2203 @ 0x89b0 (35248) - MOV R17, c[0x0][0x16c] ;
 Instr 2204 @ 0x89c0 (35264) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 2205 @ 0x89d0 (35280) - MOV R15, c[0x0][0x16c] ;
 Instr 2206 @ 0x89e0 (35296) - @P0 BRA 0x8cf0 ;
Basic block id 262 - num instructions 7
 Instr 2207 @ 0x89f0 (35312) - BMOV.32.CLEAR RZ, B2 ;
 Instr 2208 @ 0x8a00 (35328) - BSSY B2, 0x8cb0 ;
 Instr 2209 @ 0x8a10 (35344) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2210 @ 0x8a20 (35360) - MOV R13, c[0x0][0x16c] ;
 Instr 2211 @ 0x8a30 (35376) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 2212 @ 0x8a40 (35392) - MOV R17, c[0x0][0x16c] ;
 Instr 2213 @ 0x8a50 (35408) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
Basic block id 263 - num instructions 1
 Instr 2214 @ 0x8a60 (35424) - MOV R15, c[0x0][0x16c] ;
Basic block id 264 - num instructions 35
 Instr 2215 @ 0x8a70 (35440) - IADD3 R21, R11, c[0x0][0x17c], RZ ;
 Instr 2216 @ 0x8a80 (35456) - IMAD R19, R6, R11, RZ ;
 Instr 2217 @ 0x8a90 (35472) - IADD3 R11, R21, c[0x0][0x17c], RZ ;
 Instr 2218 @ 0x8aa0 (35488) - IMAD R21, R6, R21, RZ ;
 Instr 2219 @ 0x8ab0 (35504) - IMAD.WIDE.U32 R18, R19, 0x8, R4 ;
 Instr 2220 @ 0x8ac0 (35520) - IMAD R23, R6.reuse, R11, RZ ;
 Instr 2221 @ 0x8ad0 (35536) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 2222 @ 0x8ae0 (35552) - IMAD.WIDE.U32 R20, R21, 0x8, R4.reuse ;
 Instr 2223 @ 0x8af0 (35568) - LDG.E.64.SYS R18, [R18] ;
 Instr 2224 @ 0x8b00 (35584) - IMAD R25, R6, R11, RZ ;
 Instr 2225 @ 0x8b10 (35600) - IMAD.WIDE.U32 R22, R23, 0x8, R4.reuse ;
 Instr 2226 @ 0x8b20 (35616) - LDG.E.64.SYS R20, [R20] ;
 Instr 2227 @ 0x8b30 (35632) - IMAD.WIDE.U32 R24, R25, 0x8, R4 ;
 Instr 2228 @ 0x8b40 (35648) - LDG.E.64.SYS R22, [R22] ;
 Instr 2229 @ 0x8b50 (35664) - LDG.E.64.SYS R24, [R24] ;
 Instr 2230 @ 0x8b60 (35680) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 2231 @ 0x8b70 (35696) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2232 @ 0x8b80 (35712) - IMAD R10, R26, 0x3, R11 ;
 Instr 2233 @ 0x8b90 (35728) - DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 2234 @ 0x8ba0 (35744) - DSETP.GTU.AND P2, PT, |R12|, +INF , PT ;
 Instr 2235 @ 0x8bb0 (35760) - ISETP.GE.U32.AND P4, PT, R10, c[0x0][0x174], PT ;
 Instr 2236 @ 0x8bc0 (35776) - DSETP.GTU.AND P3, PT, |R8|, +INF , PT ;
 Instr 2237 @ 0x8bd0 (35792) - DSETP.LT.OR P0, PT, R14, R18, P0 ;
 Instr 2238 @ 0x8be0 (35808) - DSETP.LT.OR P1, PT, R16, R20, P1 ;
 Instr 2239 @ 0x8bf0 (35824) - DSETP.LT.OR P2, PT, R12, R22, P2 ;
 Instr 2240 @ 0x8c00 (35840) - DSETP.LT.OR P3, PT, R8, R24, P3 ;
 Instr 2241 @ 0x8c10 (35856) - FSEL R14, R14, R18, P0 ;
 Instr 2242 @ 0x8c20 (35872) - FSEL R15, R15, R19, P0 ;
 Instr 2243 @ 0x8c30 (35888) - FSEL R16, R16, R20, P1 ;
 Instr 2244 @ 0x8c40 (35904) - FSEL R17, R17, R21, P1 ;
 Instr 2245 @ 0x8c50 (35920) - FSEL R12, R12, R22, P2 ;
 Instr 2246 @ 0x8c60 (35936) - FSEL R13, R13, R23, P2 ;
 Instr 2247 @ 0x8c70 (35952) - FSEL R8, R8, R24, P3 ;
 Instr 2248 @ 0x8c80 (35968) - FSEL R9, R9, R25, P3 ;
 Instr 2249 @ 0x8c90 (35984) - @!P4 BRA 0x8a70 ;
Basic block id 265 - num instructions 5
 Instr 2250 @ 0x8ca0 (36000) - BSYNC B2 ;
 Instr 2251 @ 0x8cb0 (36016) - IMAD.MOV.U32 R26, RZ, RZ, R18 ;
 Instr 2252 @ 0x8cc0 (36032) - MOV R27, R19 ;
 Instr 2253 @ 0x8cd0 (36048) - IMAD.MOV.U32 R18, RZ, RZ, R24 ;
 Instr 2254 @ 0x8ce0 (36064) - MOV R19, R25 ;
Basic block id 266 - num instructions 5
 Instr 2255 @ 0x8cf0 (36080) - BSYNC B1 ;
 Instr 2256 @ 0x8d00 (36096) - ISETP.GE.U32.AND P1, PT, R11, c[0x0][0x174], PT ;
 Instr 2257 @ 0x8d10 (36112) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2258 @ 0x8d20 (36128) - BSSY B1, 0x8e90 ;
 Instr 2259 @ 0x8d30 (36144) - @P1 BRA 0x8e80 ;
Basic block id 267 - num instructions 6
 Instr 2260 @ 0x8d40 (36160) - IMAD R27, R6, R11, RZ ;
 Instr 2261 @ 0x8d50 (36176) - IMAD.WIDE.U32 R26, R27, 0x8, R4 ;
 Instr 2262 @ 0x8d60 (36192) - LDG.E.64.SYS R26, [R26] ;
 Instr 2263 @ 0x8d70 (36208) - IADD3 R25, R11, c[0x0][0x17c], RZ ;
 Instr 2264 @ 0x8d80 (36224) - ISETP.GE.U32.AND P0, PT, R25, c[0x0][0x174], PT ;
 Instr 2265 @ 0x8d90 (36240) - @P0 BRA 0x8e80 ;
Basic block id 268 - num instructions 6
 Instr 2266 @ 0x8da0 (36256) - IMAD R21, R6, R25, RZ ;
 Instr 2267 @ 0x8db0 (36272) - IMAD.WIDE.U32 R20, R21, 0x8, R4 ;
 Instr 2268 @ 0x8dc0 (36288) - LDG.E.64.SYS R20, [R20] ;
 Instr 2269 @ 0x8dd0 (36304) - IADD3 R25, R25, c[0x0][0x17c], RZ ;
 Instr 2270 @ 0x8de0 (36320) - ISETP.GE.U32.AND P0, PT, R25, c[0x0][0x174], PT ;
 Instr 2271 @ 0x8df0 (36336) - @P0 BRA 0x8e80 ;
Basic block id 269 - num instructions 8
 Instr 2272 @ 0x8e00 (36352) - IADD3 R29, R25, c[0x0][0x17c], RZ ;
 Instr 2273 @ 0x8e10 (36368) - IMAD R23, R6, R25, RZ ;
 Instr 2274 @ 0x8e20 (36384) - ISETP.GE.U32.AND P0, PT, R29, c[0x0][0x174], PT ;
 Instr 2275 @ 0x8e30 (36400) - IMAD.WIDE.U32 R22, R23, 0x8, R4 ;
 Instr 2276 @ 0x8e40 (36416) - LDG.E.64.SYS R22, [R22] ;
 Instr 2277 @ 0x8e50 (36432) - @!P0 IMAD R25, R6, R29, RZ ;
 Instr 2278 @ 0x8e60 (36448) - @!P0 IMAD.WIDE.U32 R4, R25, 0x8, R4 ;
 Instr 2279 @ 0x8e70 (36464) - @!P0 LDG.E.64.SYS R18, [R4] ;
Basic block id 270 - num instructions 4
 Instr 2280 @ 0x8e80 (36480) - BSYNC B1 ;
 Instr 2281 @ 0x8e90 (36496) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2282 @ 0x8ea0 (36512) - BSSY B1, 0x9070 ;
 Instr 2283 @ 0x8eb0 (36528) - @P1 BRA 0x9060 ;
Basic block id 271 - num instructions 6
 Instr 2284 @ 0x8ec0 (36544) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
 Instr 2285 @ 0x8ed0 (36560) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2286 @ 0x8ee0 (36576) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2287 @ 0x8ef0 (36592) - DSETP.LT.OR P0, PT, R14, R26, P0 ;
 Instr 2288 @ 0x8f00 (36608) - FSEL R14, R14, R26, P0 ;
 Instr 2289 @ 0x8f10 (36624) - FSEL R15, R15, R27, P0 ;
Basic block id 272 - num instructions 1
 Instr 2290 @ 0x8f20 (36640) - @P1 BRA 0x9060 ;
Basic block id 273 - num instructions 7
 Instr 2291 @ 0x8f30 (36656) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2292 @ 0x8f40 (36672) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2293 @ 0x8f50 (36688) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2294 @ 0x8f60 (36704) - DSETP.LT.OR P0, PT, R16, R20, P0 ;
 Instr 2295 @ 0x8f70 (36720) - FSEL R16, R16, R20, P0 ;
 Instr 2296 @ 0x8f80 (36736) - FSEL R17, R17, R21, P0 ;
 Instr 2297 @ 0x8f90 (36752) - @P1 BRA 0x9060 ;
Basic block id 274 - num instructions 12
 Instr 2298 @ 0x8fa0 (36768) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2299 @ 0x8fb0 (36784) - DSETP.GTU.AND P0, PT, |R12|, +INF , PT ;
 Instr 2300 @ 0x8fc0 (36800) - ISETP.GE.U32.AND P2, PT, R4, c[0x0][0x174], PT ;
 Instr 2301 @ 0x8fd0 (36816) - DSETP.LT.OR P0, PT, R12, R22, P0 ;
 Instr 2302 @ 0x8fe0 (36832) - @!P2 DSETP.GTU.AND P1, PT, |R8|, +INF , PT ;
 Instr 2303 @ 0x8ff0 (36848) - FSEL R12, R12, R22, P0 ;
 Instr 2304 @ 0x9000 (36864) - FSEL R13, R13, R23, P0 ;
 Instr 2305 @ 0x9010 (36880) - @!P2 DSETP.LT.OR P1, PT, R8, R18, P1 ;
 Instr 2306 @ 0x9020 (36896) - @!P2 FSEL R4, R8, R18, P1 ;
 Instr 2307 @ 0x9030 (36912) - @!P2 FSEL R19, R9, R19, P1 ;
 Instr 2308 @ 0x9040 (36928) - @!P2 IMAD.MOV.U32 R8, RZ, RZ, R4 ;
 Instr 2309 @ 0x9050 (36944) - @!P2 MOV R9, R19 ;
Basic block id 275 - num instructions 14
 Instr 2310 @ 0x9060 (36960) - BSYNC B1 ;
 Instr 2311 @ 0x9070 (36976) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2312 @ 0x9080 (36992) - DSETP.LT.OR P0, PT, R14, R16, P0 ;
 Instr 2313 @ 0x9090 (37008) - FSEL R4, R14, R16, P0 ;
 Instr 2314 @ 0x90a0 (37024) - FSEL R5, R15, R17, P0 ;
 Instr 2315 @ 0x90b0 (37040) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2316 @ 0x90c0 (37056) - DSETP.LT.OR P0, PT, R4, R12, P0 ;
 Instr 2317 @ 0x90d0 (37072) - FSEL R4, R4, R12, P0 ;
 Instr 2318 @ 0x90e0 (37088) - FSEL R5, R5, R13, P0 ;
 Instr 2319 @ 0x90f0 (37104) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2320 @ 0x9100 (37120) - DSETP.LT.OR P0, PT, R4, R8, P0 ;
 Instr 2321 @ 0x9110 (37136) - FSEL R16, R4, R8, P0 ;
 Instr 2322 @ 0x9120 (37152) - FSEL R17, R5, R9, P0 ;
 Instr 2323 @ 0x9130 (37168) - BRA 0x98b0 ;
Basic block id 276 - num instructions 15
 Instr 2324 @ 0x9140 (37184) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x17c] ;
 Instr 2325 @ 0x9150 (37200) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2326 @ 0x9160 (37216) - BSSY B1, 0x94c0 ;
 Instr 2327 @ 0x9170 (37232) - MOV R25, R12 ;
 Instr 2328 @ 0x9180 (37248) - IMAD R6, R24, 0x3, R12 ;
 Instr 2329 @ 0x9190 (37264) - MOV R9, c[0x0][0x16c] ;
 Instr 2330 @ 0x91a0 (37280) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x168] ;
 Instr 2331 @ 0x91b0 (37296) - MOV R11, c[0x0][0x16c] ;
 Instr 2332 @ 0x91c0 (37312) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x168] ;
 Instr 2333 @ 0x91d0 (37328) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x174], PT ;
 Instr 2334 @ 0x91e0 (37344) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2335 @ 0x91f0 (37360) - MOV R13, c[0x0][0x16c] ;
 Instr 2336 @ 0x9200 (37376) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 2337 @ 0x9210 (37392) - MOV R15, c[0x0][0x16c] ;
 Instr 2338 @ 0x9220 (37408) - @P0 BRA 0x94b0 ;
Basic block id 277 - num instructions 8
 Instr 2339 @ 0x9230 (37424) - BMOV.32.CLEAR RZ, B2 ;
 Instr 2340 @ 0x9240 (37440) - BSSY B2, 0x94b0 ;
 Instr 2341 @ 0x9250 (37456) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x168] ;
 Instr 2342 @ 0x9260 (37472) - MOV R11, c[0x0][0x16c] ;
 Instr 2343 @ 0x9270 (37488) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2344 @ 0x9280 (37504) - MOV R13, c[0x0][0x16c] ;
 Instr 2345 @ 0x9290 (37520) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 2346 @ 0x92a0 (37536) - MOV R15, c[0x0][0x16c] ;
Basic block id 278 - num instructions 31
 Instr 2347 @ 0x92b0 (37552) - IADD3 R19, R25.reuse, c[0x0][0x17c], RZ ;
 Instr 2348 @ 0x92c0 (37568) - IMAD.WIDE.U32 R16, R25, 0x8, R4 ;
 Instr 2349 @ 0x92d0 (37584) - IADD3 R21, R19.reuse, c[0x0][0x17c], RZ ;
 Instr 2350 @ 0x92e0 (37600) - IMAD.WIDE.U32 R18, R19, 0x8, R4 ;
 Instr 2351 @ 0x92f0 (37616) - IADD3 R25, R21.reuse, c[0x0][0x17c], RZ ;
 Instr 2352 @ 0x9300 (37632) - IMAD.WIDE.U32 R20, R21, 0x8, R4.reuse ;
 Instr 2353 @ 0x9310 (37648) - LDG.E.64.SYS R16, [R16] ;
 Instr 2354 @ 0x9320 (37664) - IMAD.WIDE.U32 R22, R25.reuse, 0x8, R4 ;
 Instr 2355 @ 0x9330 (37680) - LDG.E.64.SYS R18, [R18] ;
 Instr 2356 @ 0x9340 (37696) - LDG.E.64.SYS R20, [R20] ;
 Instr 2357 @ 0x9350 (37712) - LDG.E.64.SYS R22, [R22] ;
 Instr 2358 @ 0x9360 (37728) - IADD3 R25, R25, c[0x0][0x17c], RZ ;
 Instr 2359 @ 0x9370 (37744) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2360 @ 0x9380 (37760) - IMAD R6, R24, 0x3, R25 ;
 Instr 2361 @ 0x9390 (37776) - DSETP.GTU.AND P1, PT, |R12|, +INF , PT ;
 Instr 2362 @ 0x93a0 (37792) - DSETP.GTU.AND P2, PT, |R10|, +INF , PT ;
 Instr 2363 @ 0x93b0 (37808) - ISETP.GE.U32.AND P4, PT, R6, c[0x0][0x174], PT ;
 Instr 2364 @ 0x93c0 (37824) - DSETP.GTU.AND P3, PT, |R8|, +INF , PT ;
 Instr 2365 @ 0x93d0 (37840) - DSETP.LT.OR P0, PT, R14, R16, P0 ;
 Instr 2366 @ 0x93e0 (37856) - DSETP.LT.OR P1, PT, R12, R18, P1 ;
 Instr 2367 @ 0x93f0 (37872) - DSETP.LT.OR P2, PT, R10, R20, P2 ;
 Instr 2368 @ 0x9400 (37888) - FSEL R14, R14, R16, P0 ;
 Instr 2369 @ 0x9410 (37904) - FSEL R15, R15, R17, P0 ;
 Instr 2370 @ 0x9420 (37920) - DSETP.LT.OR P3, PT, R8, R22, P3 ;
 Instr 2371 @ 0x9430 (37936) - FSEL R12, R12, R18, P1 ;
 Instr 2372 @ 0x9440 (37952) - FSEL R13, R13, R19, P1 ;
 Instr 2373 @ 0x9450 (37968) - FSEL R10, R10, R20, P2 ;
 Instr 2374 @ 0x9460 (37984) - FSEL R11, R11, R21, P2 ;
 Instr 2375 @ 0x9470 (38000) - FSEL R8, R8, R22, P3 ;
 Instr 2376 @ 0x9480 (38016) - FSEL R9, R9, R23, P3 ;
 Instr 2377 @ 0x9490 (38032) - @!P4 BRA 0x92b0 ;
Basic block id 279 - num instructions 1
 Instr 2378 @ 0x94a0 (38048) - BSYNC B2 ;
Basic block id 280 - num instructions 5
 Instr 2379 @ 0x94b0 (38064) - BSYNC B1 ;
 Instr 2380 @ 0x94c0 (38080) - ISETP.GE.U32.AND P1, PT, R25, c[0x0][0x174], PT ;
 Instr 2381 @ 0x94d0 (38096) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2382 @ 0x94e0 (38112) - BSSY B1, 0x9610 ;
 Instr 2383 @ 0x94f0 (38128) - @P1 BRA 0x9600 ;
Basic block id 281 - num instructions 5
 Instr 2384 @ 0x9500 (38144) - IMAD.WIDE.U32 R16, R25, 0x8, R4 ;
 Instr 2385 @ 0x9510 (38160) - LDG.E.64.SYS R16, [R16] ;
 Instr 2386 @ 0x9520 (38176) - IADD3 R27, R25, c[0x0][0x17c], RZ ;
 Instr 2387 @ 0x9530 (38192) - ISETP.GE.U32.AND P0, PT, R27, c[0x0][0x174], PT ;
 Instr 2388 @ 0x9540 (38208) - @P0 BRA 0x9600 ;
Basic block id 282 - num instructions 5
 Instr 2389 @ 0x9550 (38224) - IMAD.WIDE.U32 R18, R27, 0x8, R4 ;
 Instr 2390 @ 0x9560 (38240) - LDG.E.64.SYS R18, [R18] ;
 Instr 2391 @ 0x9570 (38256) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 2392 @ 0x9580 (38272) - ISETP.GE.U32.AND P0, PT, R27, c[0x0][0x174], PT ;
 Instr 2393 @ 0x9590 (38288) - @P0 BRA 0x9600 ;
Basic block id 283 - num instructions 6
 Instr 2394 @ 0x95a0 (38304) - IADD3 R29, R27.reuse, c[0x0][0x17c], RZ ;
 Instr 2395 @ 0x95b0 (38320) - IMAD.WIDE.U32 R20, R27, 0x8, R4 ;
 Instr 2396 @ 0x95c0 (38336) - ISETP.GE.U32.AND P0, PT, R29, c[0x0][0x174], PT ;
 Instr 2397 @ 0x95d0 (38352) - LDG.E.64.SYS R20, [R20] ;
 Instr 2398 @ 0x95e0 (38368) - @!P0 IMAD.WIDE.U32 R4, R29, 0x8, R4 ;
 Instr 2399 @ 0x95f0 (38384) - @!P0 LDG.E.64.SYS R22, [R4] ;
Basic block id 284 - num instructions 4
 Instr 2400 @ 0x9600 (38400) - BSYNC B1 ;
 Instr 2401 @ 0x9610 (38416) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2402 @ 0x9620 (38432) - BSSY B1, 0x97f0 ;
 Instr 2403 @ 0x9630 (38448) - @P1 BRA 0x97e0 ;
Basic block id 285 - num instructions 6
 Instr 2404 @ 0x9640 (38464) - IADD3 R4, R25, c[0x0][0x17c], RZ ;
 Instr 2405 @ 0x9650 (38480) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2406 @ 0x9660 (38496) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2407 @ 0x9670 (38512) - DSETP.LT.OR P0, PT, R14, R16, P0 ;
 Instr 2408 @ 0x9680 (38528) - FSEL R14, R14, R16, P0 ;
 Instr 2409 @ 0x9690 (38544) - FSEL R15, R15, R17, P0 ;
Basic block id 286 - num instructions 1
 Instr 2410 @ 0x96a0 (38560) - @P1 BRA 0x97e0 ;
Basic block id 287 - num instructions 7
 Instr 2411 @ 0x96b0 (38576) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2412 @ 0x96c0 (38592) - DSETP.GTU.AND P0, PT, |R12|, +INF , PT ;
 Instr 2413 @ 0x96d0 (38608) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2414 @ 0x96e0 (38624) - DSETP.LT.OR P0, PT, R12, R18, P0 ;
 Instr 2415 @ 0x96f0 (38640) - FSEL R12, R12, R18, P0 ;
 Instr 2416 @ 0x9700 (38656) - FSEL R13, R13, R19, P0 ;
 Instr 2417 @ 0x9710 (38672) - @P1 BRA 0x97e0 ;
Basic block id 288 - num instructions 12
 Instr 2418 @ 0x9720 (38688) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2419 @ 0x9730 (38704) - DSETP.GTU.AND P0, PT, |R10|, +INF , PT ;
 Instr 2420 @ 0x9740 (38720) - ISETP.GE.U32.AND P2, PT, R4, c[0x0][0x174], PT ;
 Instr 2421 @ 0x9750 (38736) - DSETP.LT.OR P0, PT, R10, R20, P0 ;
 Instr 2422 @ 0x9760 (38752) - @!P2 DSETP.GTU.AND P1, PT, |R8|, +INF , PT ;
 Instr 2423 @ 0x9770 (38768) - FSEL R10, R10, R20, P0 ;
 Instr 2424 @ 0x9780 (38784) - FSEL R11, R11, R21, P0 ;
 Instr 2425 @ 0x9790 (38800) - @!P2 DSETP.LT.OR P1, PT, R8, R22, P1 ;
 Instr 2426 @ 0x97a0 (38816) - @!P2 FSEL R4, R8, R22, P1 ;
 Instr 2427 @ 0x97b0 (38832) - @!P2 FSEL R23, R9, R23, P1 ;
 Instr 2428 @ 0x97c0 (38848) - @!P2 IMAD.MOV.U32 R8, RZ, RZ, R4 ;
 Instr 2429 @ 0x97d0 (38864) - @!P2 MOV R9, R23 ;
Basic block id 289 - num instructions 13
 Instr 2430 @ 0x97e0 (38880) - BSYNC B1 ;
 Instr 2431 @ 0x97f0 (38896) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2432 @ 0x9800 (38912) - DSETP.LT.OR P0, PT, R14, R12, P0 ;
 Instr 2433 @ 0x9810 (38928) - FSEL R4, R14, R12, P0 ;
 Instr 2434 @ 0x9820 (38944) - FSEL R5, R15, R13, P0 ;
 Instr 2435 @ 0x9830 (38960) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2436 @ 0x9840 (38976) - DSETP.LT.OR P0, PT, R4, R10, P0 ;
 Instr 2437 @ 0x9850 (38992) - FSEL R4, R4, R10, P0 ;
 Instr 2438 @ 0x9860 (39008) - FSEL R5, R5, R11, P0 ;
 Instr 2439 @ 0x9870 (39024) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2440 @ 0x9880 (39040) - DSETP.LT.OR P0, PT, R4, R8, P0 ;
 Instr 2441 @ 0x9890 (39056) - FSEL R16, R4, R8, P0 ;
 Instr 2442 @ 0x98a0 (39072) - FSEL R17, R5, R9, P0 ;
Basic block id 290 - num instructions 3
 Instr 2443 @ 0x98b0 (39088) - BSYNC B0 ;
 Instr 2444 @ 0x98c0 (39104) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
 Instr 2445 @ 0x98d0 (39120) - @!P0 BRA 0x9a50 ;
Basic block id 291 - num instructions 6
 Instr 2446 @ 0x98e0 (39136) - IMAD R9, R0, c[0x0][0x0], R7 ;
 Instr 2447 @ 0x98f0 (39152) - ULDC UR4, c[0x0][0x4] ;
 Instr 2448 @ 0x9900 (39168) - USHF.R.U32.HI UR4, URZ, 0x1, UR4 ;
 Instr 2449 @ 0x9910 (39184) - STS.64 [R9.X8+0x10], R16 ;
 Instr 2450 @ 0x9920 (39200) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 2451 @ 0x9930 (39216) - @!P0 BRA 0x9a50 ;
Basic block id 292 - num instructions 1
 Instr 2452 @ 0x9940 (39232) - IMAD.U32 R11, RZ, RZ, UR4 ;
Basic block id 293 - num instructions 16
 Instr 2453 @ 0x9950 (39248) - IADD3 R4, R0, R11, RZ ;
 Instr 2454 @ 0x9960 (39264) - BAR.SYNC 0x0 ;
 Instr 2455 @ 0x9970 (39280) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x4], PT ;
 Instr 2456 @ 0x9980 (39296) - ISETP.GE.U32.OR P0, PT, R0, R11, P0 ;
 Instr 2457 @ 0x9990 (39312) - @!P0 IMAD R4, R4, c[0x0][0x0], R7 ;
 Instr 2458 @ 0x99a0 (39328) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 2459 @ 0x99b0 (39344) - @!P0 LDS.U.64 R4, [R4.X8+0x10] ;
 Instr 2460 @ 0x99c0 (39360) - @!P0 DSETP.LT.OR P1, PT, R16, R4, P1 ;
 Instr 2461 @ 0x99d0 (39376) - @!P0 FSEL R6, R16, R4, P1 ;
 Instr 2462 @ 0x99e0 (39392) - @!P0 FSEL R5, R17, R5, P1 ;
 Instr 2463 @ 0x99f0 (39408) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, R6 ;
 Instr 2464 @ 0x9a00 (39424) - @!P0 MOV R17, R5 ;
 Instr 2465 @ 0x9a10 (39440) - @!P0 STS.64 [R9.X8+0x10], R16 ;
 Instr 2466 @ 0x9a20 (39456) - ISETP.GT.AND P0, PT, R11, 0x1, PT ;
 Instr 2467 @ 0x9a30 (39472) - SHF.R.S32.HI R11, RZ, 0x1, R11 ;
 Instr 2468 @ 0x9a40 (39488) - @P0 BRA 0x9950 ;
Basic block id 294 - num instructions 2
 Instr 2469 @ 0x9a50 (39504) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 2470 @ 0x9a60 (39520) - @!P0 BRA 0x9d40 ;
Basic block id 295 - num instructions 4
 Instr 2471 @ 0x9a70 (39536) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x0] ;
 Instr 2472 @ 0x9a80 (39552) - MOV R6, c[0x0][0x0] ;
 Instr 2473 @ 0x9a90 (39568) - ISETP.GT.AND P0, PT, R4, 0x20, PT ;
 Instr 2474 @ 0x9aa0 (39584) - @!P0 BRA 0x9c50 ;
Basic block id 296 - num instructions 7
 Instr 2475 @ 0x9ab0 (39600) - IMAD R9, R0, c[0x0][0x0], R7 ;
 Instr 2476 @ 0x9ac0 (39616) - LEA.HI R4, R4, c[0x0][0x0], RZ, 0x1 ;
 Instr 2477 @ 0x9ad0 (39632) - IMAD.MOV.U32 R6, RZ, RZ, 0x20 ;
 Instr 2478 @ 0x9ae0 (39648) - SHF.R.S32.HI R4, RZ, 0x1, R4 ;
 Instr 2479 @ 0x9af0 (39664) - STS.64 [R9.X8+0x10], R16 ;
 Instr 2480 @ 0x9b00 (39680) - ISETP.GE.AND P0, PT, R4, 0x20, PT ;
 Instr 2481 @ 0x9b10 (39696) - @!P0 BRA 0x9c50 ;
Basic block id 297 - num instructions 2
 Instr 2482 @ 0x9b20 (39712) - MOV R6, R4 ;
 Instr 2483 @ 0x9b30 (39728) - LEA R11, R9, 0x10, 0x3 ;
Basic block id 298 - num instructions 16
 Instr 2484 @ 0x9b40 (39744) - IMAD.IADD R4, R7, 0x1, R6 ;
 Instr 2485 @ 0x9b50 (39760) - BAR.SYNC 0x0 ;
 Instr 2486 @ 0x9b60 (39776) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x0], PT ;
 Instr 2487 @ 0x9b70 (39792) - ISETP.GE.U32.OR P0, PT, R7, R6, P0 ;
 Instr 2488 @ 0x9b80 (39808) - @!P0 LEA R4, R6, R11, 0x3 ;
 Instr 2489 @ 0x9b90 (39824) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 2490 @ 0x9ba0 (39840) - SHF.R.S32.HI R6, RZ, 0x1, R6 ;
 Instr 2491 @ 0x9bb0 (39856) - @!P0 LDS.U.64 R4, [R4] ;
 Instr 2492 @ 0x9bc0 (39872) - @!P0 DSETP.LT.OR P1, PT, R16, R4, P1 ;
 Instr 2493 @ 0x9bd0 (39888) - @!P0 FSEL R8, R16, R4, P1 ;
 Instr 2494 @ 0x9be0 (39904) - @!P0 FSEL R5, R17, R5, P1 ;
 Instr 2495 @ 0x9bf0 (39920) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, R8 ;
 Instr 2496 @ 0x9c00 (39936) - @!P0 MOV R17, R5 ;
 Instr 2497 @ 0x9c10 (39952) - @!P0 STS.64 [R9.X8+0x10], R16 ;
 Instr 2498 @ 0x9c20 (39968) - ISETP.GE.AND P0, PT, R6, 0x20, PT ;
 Instr 2499 @ 0x9c30 (39984) - @P0 BRA 0x9b40 ;
Basic block id 299 - num instructions 1
 Instr 2500 @ 0x9c40 (40000) - IMAD.MOV.U32 R6, RZ, RZ, 0x20 ;
Basic block id 300 - num instructions 3
 Instr 2501 @ 0x9c50 (40016) - BAR.SYNC 0x0 ;
 Instr 2502 @ 0x9c60 (40032) - ISETP.GE.AND P0, PT, R6, 0x2, PT ;
 Instr 2503 @ 0x9c70 (40048) - @!P0 BRA 0x9d40 ;
Basic block id 301 - num instructions 1
 Instr 2504 @ 0x9c80 (40064) - MOV R9, 0x1 ;
Basic block id 302 - num instructions 11
 Instr 2505 @ 0x9c90 (40080) - SHFL.DOWN PT, R5, R17, R9, 0x1f ;
 Instr 2506 @ 0x9ca0 (40096) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2507 @ 0x9cb0 (40112) - SHFL.DOWN PT, R4, R16, R9, 0x1f ;
 Instr 2508 @ 0x9cc0 (40128) - IMAD.SHL.U32 R9, R9, 0x2, RZ ;
 Instr 2509 @ 0x9cd0 (40144) - ISETP.GE.AND P1, PT, R9, R6, PT ;
 Instr 2510 @ 0x9ce0 (40160) - DSETP.LT.OR P0, PT, R16, R4, P0 ;
 Instr 2511 @ 0x9cf0 (40176) - FSEL R5, R17, R5, P0 ;
 Instr 2512 @ 0x9d00 (40192) - FSEL R4, R16, R4, P0 ;
 Instr 2513 @ 0x9d10 (40208) - IMAD.MOV.U32 R17, RZ, RZ, R5 ;
 Instr 2514 @ 0x9d20 (40224) - MOV R16, R4 ;
 Instr 2515 @ 0x9d30 (40240) - @!P1 BRA 0x9c90 ;
Basic block id 303 - num instructions 3
 Instr 2516 @ 0x9d40 (40256) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x344], PT ;
 Instr 2517 @ 0x9d50 (40272) - MOV R19, RZ ;
 Instr 2518 @ 0x9d60 (40288) - @!P1 BRA 0xa9e0 ;
Basic block id 304 - num instructions 9
 Instr 2519 @ 0x9d70 (40304) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 2520 @ 0x9d80 (40320) - MOV R6, 0x1 ;
 Instr 2521 @ 0x9d90 (40336) - IMAD.HI.U32 R4, R3, c[0x0][0x34c], R2 ;
 Instr 2522 @ 0x9da0 (40352) - ISETP.NE.AND P0, PT, R6, c[0x0][0x344], PT ;
 Instr 2523 @ 0x9db0 (40368) - SHF.R.U32.HI R5, RZ, c[0x0][0x350], R4 ;
 Instr 2524 @ 0x9dc0 (40384) - IMAD.MOV R9, RZ, RZ, -R5 ;
 Instr 2525 @ 0x9dd0 (40400) - IMAD R9, R9, c[0x0][0x348], R3 ;
 Instr 2526 @ 0x9de0 (40416) - IMAD R19, R9, c[0x0][0x474], RZ ;
 Instr 2527 @ 0x9df0 (40432) - @!P0 BRA 0xa9e0 ;
Basic block id 305 - num instructions 9
 Instr 2528 @ 0x9e00 (40448) - MOV R4, RZ ;
 Instr 2529 @ 0x9e10 (40464) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x344] ;
 Instr 2530 @ 0x9e20 (40480) - IMAD.HI.U32 R8, R5, c[0x0][0x358], R4 ;
 Instr 2531 @ 0x9e30 (40496) - ISETP.NE.AND P0, PT, R6, 0x2, PT ;
 Instr 2532 @ 0x9e40 (40512) - SHF.R.U32.HI R9, RZ, c[0x0][0x35c], R8 ;
 Instr 2533 @ 0x9e50 (40528) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2534 @ 0x9e60 (40544) - IMAD R4, R4, c[0x0][0x354], R5 ;
 Instr 2535 @ 0x9e70 (40560) - IMAD R19, R4, c[0x0][0x47c], R19 ;
 Instr 2536 @ 0x9e80 (40576) - @!P0 BRA 0xa9e0 ;
Basic block id 306 - num instructions 8
 Instr 2537 @ 0x9e90 (40592) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2538 @ 0x9ea0 (40608) - ISETP.NE.AND P0, PT, R6, 0x3, PT ;
 Instr 2539 @ 0x9eb0 (40624) - IMAD.HI.U32 R4, R9, c[0x0][0x364], R8 ;
 Instr 2540 @ 0x9ec0 (40640) - SHF.R.U32.HI R5, RZ, c[0x0][0x368], R4 ;
 Instr 2541 @ 0x9ed0 (40656) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2542 @ 0x9ee0 (40672) - IMAD R8, R8, c[0x0][0x360], R9 ;
 Instr 2543 @ 0x9ef0 (40688) - IMAD R19, R8, c[0x0][0x484], R19 ;
 Instr 2544 @ 0x9f00 (40704) - @!P0 BRA 0xa9e0 ;
Basic block id 307 - num instructions 8
 Instr 2545 @ 0x9f10 (40720) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2546 @ 0x9f20 (40736) - ISETP.NE.AND P0, PT, R6, 0x4, PT ;
 Instr 2547 @ 0x9f30 (40752) - IMAD.HI.U32 R8, R5, c[0x0][0x370], R4 ;
 Instr 2548 @ 0x9f40 (40768) - SHF.R.U32.HI R9, RZ, c[0x0][0x374], R8 ;
 Instr 2549 @ 0x9f50 (40784) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2550 @ 0x9f60 (40800) - IMAD R4, R4, c[0x0][0x36c], R5 ;
 Instr 2551 @ 0x9f70 (40816) - IMAD R19, R4, c[0x0][0x48c], R19 ;
 Instr 2552 @ 0x9f80 (40832) - @!P0 BRA 0xa9e0 ;
Basic block id 308 - num instructions 8
 Instr 2553 @ 0x9f90 (40848) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2554 @ 0x9fa0 (40864) - ISETP.NE.AND P0, PT, R6, 0x5, PT ;
 Instr 2555 @ 0x9fb0 (40880) - IMAD.HI.U32 R4, R9, c[0x0][0x37c], R8 ;
 Instr 2556 @ 0x9fc0 (40896) - SHF.R.U32.HI R5, RZ, c[0x0][0x380], R4 ;
 Instr 2557 @ 0x9fd0 (40912) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2558 @ 0x9fe0 (40928) - IMAD R8, R8, c[0x0][0x378], R9 ;
 Instr 2559 @ 0x9ff0 (40944) - IMAD R19, R8, c[0x0][0x494], R19 ;
 Instr 2560 @ 0xa000 (40960) - @!P0 BRA 0xa9e0 ;
Basic block id 309 - num instructions 8
 Instr 2561 @ 0xa010 (40976) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2562 @ 0xa020 (40992) - ISETP.NE.AND P0, PT, R6, 0x6, PT ;
 Instr 2563 @ 0xa030 (41008) - IMAD.HI.U32 R8, R5, c[0x0][0x388], R4 ;
 Instr 2564 @ 0xa040 (41024) - SHF.R.U32.HI R9, RZ, c[0x0][0x38c], R8 ;
 Instr 2565 @ 0xa050 (41040) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2566 @ 0xa060 (41056) - IMAD R4, R4, c[0x0][0x384], R5 ;
 Instr 2567 @ 0xa070 (41072) - IMAD R19, R4, c[0x0][0x49c], R19 ;
 Instr 2568 @ 0xa080 (41088) - @!P0 BRA 0xa9e0 ;
Basic block id 310 - num instructions 8
 Instr 2569 @ 0xa090 (41104) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2570 @ 0xa0a0 (41120) - ISETP.NE.AND P0, PT, R6, 0x7, PT ;
 Instr 2571 @ 0xa0b0 (41136) - IMAD.HI.U32 R4, R9, c[0x0][0x394], R8 ;
 Instr 2572 @ 0xa0c0 (41152) - SHF.R.U32.HI R5, RZ, c[0x0][0x398], R4 ;
 Instr 2573 @ 0xa0d0 (41168) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2574 @ 0xa0e0 (41184) - IMAD R8, R8, c[0x0][0x390], R9 ;
 Instr 2575 @ 0xa0f0 (41200) - IMAD R19, R8, c[0x0][0x4a4], R19 ;
 Instr 2576 @ 0xa100 (41216) - @!P0 BRA 0xa9e0 ;
Basic block id 311 - num instructions 8
 Instr 2577 @ 0xa110 (41232) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2578 @ 0xa120 (41248) - ISETP.NE.AND P0, PT, R6, 0x8, PT ;
 Instr 2579 @ 0xa130 (41264) - IMAD.HI.U32 R8, R5, c[0x0][0x3a0], R4 ;
 Instr 2580 @ 0xa140 (41280) - SHF.R.U32.HI R9, RZ, c[0x0][0x3a4], R8 ;
 Instr 2581 @ 0xa150 (41296) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2582 @ 0xa160 (41312) - IMAD R4, R4, c[0x0][0x39c], R5 ;
 Instr 2583 @ 0xa170 (41328) - IMAD R19, R4, c[0x0][0x4ac], R19 ;
 Instr 2584 @ 0xa180 (41344) - @!P0 BRA 0xa9e0 ;
Basic block id 312 - num instructions 8
 Instr 2585 @ 0xa190 (41360) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2586 @ 0xa1a0 (41376) - ISETP.NE.AND P0, PT, R6, 0x9, PT ;
 Instr 2587 @ 0xa1b0 (41392) - IMAD.HI.U32 R4, R9, c[0x0][0x3ac], R8 ;
 Instr 2588 @ 0xa1c0 (41408) - SHF.R.U32.HI R5, RZ, c[0x0][0x3b0], R4 ;
 Instr 2589 @ 0xa1d0 (41424) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2590 @ 0xa1e0 (41440) - IMAD R8, R8, c[0x0][0x3a8], R9 ;
 Instr 2591 @ 0xa1f0 (41456) - IMAD R19, R8, c[0x0][0x4b4], R19 ;
 Instr 2592 @ 0xa200 (41472) - @!P0 BRA 0xa9e0 ;
Basic block id 313 - num instructions 8
 Instr 2593 @ 0xa210 (41488) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2594 @ 0xa220 (41504) - ISETP.NE.AND P0, PT, R6, 0xa, PT ;
 Instr 2595 @ 0xa230 (41520) - IMAD.HI.U32 R8, R5, c[0x0][0x3b8], R4 ;
 Instr 2596 @ 0xa240 (41536) - SHF.R.U32.HI R9, RZ, c[0x0][0x3bc], R8 ;
 Instr 2597 @ 0xa250 (41552) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2598 @ 0xa260 (41568) - IMAD R4, R4, c[0x0][0x3b4], R5 ;
 Instr 2599 @ 0xa270 (41584) - IMAD R19, R4, c[0x0][0x4bc], R19 ;
 Instr 2600 @ 0xa280 (41600) - @!P0 BRA 0xa9e0 ;
Basic block id 314 - num instructions 8
 Instr 2601 @ 0xa290 (41616) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2602 @ 0xa2a0 (41632) - ISETP.NE.AND P0, PT, R6, 0xb, PT ;
 Instr 2603 @ 0xa2b0 (41648) - IMAD.HI.U32 R4, R9, c[0x0][0x3c4], R8 ;
 Instr 2604 @ 0xa2c0 (41664) - SHF.R.U32.HI R5, RZ, c[0x0][0x3c8], R4 ;
 Instr 2605 @ 0xa2d0 (41680) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2606 @ 0xa2e0 (41696) - IMAD R8, R8, c[0x0][0x3c0], R9 ;
 Instr 2607 @ 0xa2f0 (41712) - IMAD R19, R8, c[0x0][0x4c4], R19 ;
 Instr 2608 @ 0xa300 (41728) - @!P0 BRA 0xa9e0 ;
Basic block id 315 - num instructions 8
 Instr 2609 @ 0xa310 (41744) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2610 @ 0xa320 (41760) - ISETP.NE.AND P0, PT, R6, 0xc, PT ;
 Instr 2611 @ 0xa330 (41776) - IMAD.HI.U32 R8, R5, c[0x0][0x3d0], R4 ;
 Instr 2612 @ 0xa340 (41792) - SHF.R.U32.HI R9, RZ, c[0x0][0x3d4], R8 ;
 Instr 2613 @ 0xa350 (41808) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2614 @ 0xa360 (41824) - IMAD R4, R4, c[0x0][0x3cc], R5 ;
 Instr 2615 @ 0xa370 (41840) - IMAD R19, R4, c[0x0][0x4cc], R19 ;
 Instr 2616 @ 0xa380 (41856) - @!P0 BRA 0xa9e0 ;
Basic block id 316 - num instructions 8
 Instr 2617 @ 0xa390 (41872) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2618 @ 0xa3a0 (41888) - ISETP.NE.AND P0, PT, R6, 0xd, PT ;
 Instr 2619 @ 0xa3b0 (41904) - IMAD.HI.U32 R4, R9, c[0x0][0x3dc], R8 ;
 Instr 2620 @ 0xa3c0 (41920) - SHF.R.U32.HI R5, RZ, c[0x0][0x3e0], R4 ;
 Instr 2621 @ 0xa3d0 (41936) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2622 @ 0xa3e0 (41952) - IMAD R8, R8, c[0x0][0x3d8], R9 ;
 Instr 2623 @ 0xa3f0 (41968) - IMAD R19, R8, c[0x0][0x4d4], R19 ;
 Instr 2624 @ 0xa400 (41984) - @!P0 BRA 0xa9e0 ;
Basic block id 317 - num instructions 8
 Instr 2625 @ 0xa410 (42000) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2626 @ 0xa420 (42016) - ISETP.NE.AND P0, PT, R6, 0xe, PT ;
 Instr 2627 @ 0xa430 (42032) - IMAD.HI.U32 R8, R5, c[0x0][0x3e8], R4 ;
 Instr 2628 @ 0xa440 (42048) - SHF.R.U32.HI R9, RZ, c[0x0][0x3ec], R8 ;
 Instr 2629 @ 0xa450 (42064) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2630 @ 0xa460 (42080) - IMAD R4, R4, c[0x0][0x3e4], R5 ;
 Instr 2631 @ 0xa470 (42096) - IMAD R19, R4, c[0x0][0x4dc], R19 ;
 Instr 2632 @ 0xa480 (42112) - @!P0 BRA 0xa9e0 ;
Basic block id 318 - num instructions 8
 Instr 2633 @ 0xa490 (42128) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2634 @ 0xa4a0 (42144) - ISETP.NE.AND P0, PT, R6, 0xf, PT ;
 Instr 2635 @ 0xa4b0 (42160) - IMAD.HI.U32 R4, R9, c[0x0][0x3f4], R8 ;
 Instr 2636 @ 0xa4c0 (42176) - SHF.R.U32.HI R5, RZ, c[0x0][0x3f8], R4 ;
 Instr 2637 @ 0xa4d0 (42192) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2638 @ 0xa4e0 (42208) - IMAD R8, R8, c[0x0][0x3f0], R9 ;
 Instr 2639 @ 0xa4f0 (42224) - IMAD R19, R8, c[0x0][0x4e4], R19 ;
 Instr 2640 @ 0xa500 (42240) - @!P0 BRA 0xa9e0 ;
Basic block id 319 - num instructions 8
 Instr 2641 @ 0xa510 (42256) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2642 @ 0xa520 (42272) - ISETP.NE.AND P0, PT, R6, 0x10, PT ;
 Instr 2643 @ 0xa530 (42288) - IMAD.HI.U32 R8, R5, c[0x0][0x400], R4 ;
 Instr 2644 @ 0xa540 (42304) - SHF.R.U32.HI R9, RZ, c[0x0][0x404], R8 ;
 Instr 2645 @ 0xa550 (42320) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2646 @ 0xa560 (42336) - IMAD R4, R4, c[0x0][0x3fc], R5 ;
 Instr 2647 @ 0xa570 (42352) - IMAD R19, R4, c[0x0][0x4ec], R19 ;
 Instr 2648 @ 0xa580 (42368) - @!P0 BRA 0xa9e0 ;
Basic block id 320 - num instructions 8
 Instr 2649 @ 0xa590 (42384) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2650 @ 0xa5a0 (42400) - ISETP.NE.AND P0, PT, R6, 0x11, PT ;
 Instr 2651 @ 0xa5b0 (42416) - IMAD.HI.U32 R4, R9, c[0x0][0x40c], R8 ;
 Instr 2652 @ 0xa5c0 (42432) - SHF.R.U32.HI R5, RZ, c[0x0][0x410], R4 ;
 Instr 2653 @ 0xa5d0 (42448) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2654 @ 0xa5e0 (42464) - IMAD R8, R8, c[0x0][0x408], R9 ;
 Instr 2655 @ 0xa5f0 (42480) - IMAD R19, R8, c[0x0][0x4f4], R19 ;
 Instr 2656 @ 0xa600 (42496) - @!P0 BRA 0xa9e0 ;
Basic block id 321 - num instructions 8
 Instr 2657 @ 0xa610 (42512) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2658 @ 0xa620 (42528) - ISETP.NE.AND P0, PT, R6, 0x12, PT ;
 Instr 2659 @ 0xa630 (42544) - IMAD.HI.U32 R8, R5, c[0x0][0x418], R4 ;
 Instr 2660 @ 0xa640 (42560) - SHF.R.U32.HI R9, RZ, c[0x0][0x41c], R8 ;
 Instr 2661 @ 0xa650 (42576) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2662 @ 0xa660 (42592) - IMAD R4, R4, c[0x0][0x414], R5 ;
 Instr 2663 @ 0xa670 (42608) - IMAD R19, R4, c[0x0][0x4fc], R19 ;
 Instr 2664 @ 0xa680 (42624) - @!P0 BRA 0xa9e0 ;
Basic block id 322 - num instructions 8
 Instr 2665 @ 0xa690 (42640) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2666 @ 0xa6a0 (42656) - ISETP.NE.AND P0, PT, R6, 0x13, PT ;
 Instr 2667 @ 0xa6b0 (42672) - IMAD.HI.U32 R4, R9, c[0x0][0x424], R8 ;
 Instr 2668 @ 0xa6c0 (42688) - SHF.R.U32.HI R5, RZ, c[0x0][0x428], R4 ;
 Instr 2669 @ 0xa6d0 (42704) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2670 @ 0xa6e0 (42720) - IMAD R8, R8, c[0x0][0x420], R9 ;
 Instr 2671 @ 0xa6f0 (42736) - IMAD R19, R8, c[0x0][0x504], R19 ;
 Instr 2672 @ 0xa700 (42752) - @!P0 BRA 0xa9e0 ;
Basic block id 323 - num instructions 8
 Instr 2673 @ 0xa710 (42768) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2674 @ 0xa720 (42784) - ISETP.NE.AND P0, PT, R6, 0x14, PT ;
 Instr 2675 @ 0xa730 (42800) - IMAD.HI.U32 R8, R5, c[0x0][0x430], R4 ;
 Instr 2676 @ 0xa740 (42816) - SHF.R.U32.HI R9, RZ, c[0x0][0x434], R8 ;
 Instr 2677 @ 0xa750 (42832) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2678 @ 0xa760 (42848) - IMAD R4, R4, c[0x0][0x42c], R5 ;
 Instr 2679 @ 0xa770 (42864) - IMAD R19, R4, c[0x0][0x50c], R19 ;
 Instr 2680 @ 0xa780 (42880) - @!P0 BRA 0xa9e0 ;
Basic block id 324 - num instructions 8
 Instr 2681 @ 0xa790 (42896) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2682 @ 0xa7a0 (42912) - ISETP.NE.AND P0, PT, R6, 0x15, PT ;
 Instr 2683 @ 0xa7b0 (42928) - IMAD.HI.U32 R4, R9, c[0x0][0x43c], R8 ;
 Instr 2684 @ 0xa7c0 (42944) - SHF.R.U32.HI R5, RZ, c[0x0][0x440], R4 ;
 Instr 2685 @ 0xa7d0 (42960) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2686 @ 0xa7e0 (42976) - IMAD R8, R8, c[0x0][0x438], R9 ;
 Instr 2687 @ 0xa7f0 (42992) - IMAD R19, R8, c[0x0][0x514], R19 ;
 Instr 2688 @ 0xa800 (43008) - @!P0 BRA 0xa9e0 ;
Basic block id 325 - num instructions 8
 Instr 2689 @ 0xa810 (43024) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2690 @ 0xa820 (43040) - ISETP.NE.AND P0, PT, R6, 0x16, PT ;
 Instr 2691 @ 0xa830 (43056) - IMAD.HI.U32 R8, R5, c[0x0][0x448], R4 ;
 Instr 2692 @ 0xa840 (43072) - SHF.R.U32.HI R9, RZ, c[0x0][0x44c], R8 ;
 Instr 2693 @ 0xa850 (43088) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2694 @ 0xa860 (43104) - IMAD R4, R4, c[0x0][0x444], R5 ;
 Instr 2695 @ 0xa870 (43120) - IMAD R19, R4, c[0x0][0x51c], R19 ;
 Instr 2696 @ 0xa880 (43136) - @!P0 BRA 0xa9e0 ;
Basic block id 326 - num instructions 8
 Instr 2697 @ 0xa890 (43152) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2698 @ 0xa8a0 (43168) - ISETP.NE.AND P0, PT, R6, 0x17, PT ;
 Instr 2699 @ 0xa8b0 (43184) - IMAD.HI.U32 R4, R9, c[0x0][0x454], R8 ;
 Instr 2700 @ 0xa8c0 (43200) - SHF.R.U32.HI R5, RZ, c[0x0][0x458], R4 ;
 Instr 2701 @ 0xa8d0 (43216) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2702 @ 0xa8e0 (43232) - IMAD R8, R8, c[0x0][0x450], R9 ;
 Instr 2703 @ 0xa8f0 (43248) - IMAD R19, R8, c[0x0][0x524], R19 ;
 Instr 2704 @ 0xa900 (43264) - @!P0 BRA 0xa9e0 ;
Basic block id 327 - num instructions 13
 Instr 2705 @ 0xa910 (43280) - ISETP.NE.AND P0, PT, R6, 0x18, PT ;
 Instr 2706 @ 0xa920 (43296) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2707 @ 0xa930 (43312) - IMAD.HI.U32 R8, R5, c[0x0][0x460], R4 ;
 Instr 2708 @ 0xa940 (43328) - SHF.R.U32.HI R9, RZ, c[0x0][0x464], R8 ;
 Instr 2709 @ 0xa950 (43344) - @P0 MOV R8, RZ ;
 Instr 2710 @ 0xa960 (43360) - IMAD.MOV R4, RZ, RZ, -R9.reuse ;
 Instr 2711 @ 0xa970 (43376) - @P0 IMAD.HI.U32 R6, R9, c[0x0][0x46c], R8 ;
 Instr 2712 @ 0xa980 (43392) - IMAD R4, R4, c[0x0][0x45c], R5 ;
 Instr 2713 @ 0xa990 (43408) - @P0 SHF.R.U32.HI R6, RZ, c[0x0][0x470], R6 ;
 Instr 2714 @ 0xa9a0 (43424) - IMAD R19, R4, c[0x0][0x52c], R19 ;
 Instr 2715 @ 0xa9b0 (43440) - @P0 IADD3 R5, -R6, RZ, RZ ;
 Instr 2716 @ 0xa9c0 (43456) - @P0 IMAD R8, R5, c[0x0][0x468], R9 ;
 Instr 2717 @ 0xa9d0 (43472) - @P0 IMAD R19, R8, c[0x0][0x534], R19 ;
Basic block id 328 - num instructions 11
 Instr 2718 @ 0xa9e0 (43488) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x558], PT ;
 Instr 2719 @ 0xa9f0 (43504) - CS2R R4, SRZ ;
 Instr 2720 @ 0xaa00 (43520) - ISETP.NE.AND P4, PT, RZ, c[0x0][0x190], PT ;
 Instr 2721 @ 0xaa10 (43536) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 2722 @ 0xaa20 (43552) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x55c], PT, P0 ;
 Instr 2723 @ 0xaa30 (43568) - IADD3 R8, P2, R19, c[0x0][0x548], RZ ;
 Instr 2724 @ 0xaa40 (43584) - IMAD.X R9, RZ, RZ, c[0x0][0x54c], P2 ;
 Instr 2725 @ 0xaa50 (43600) - @P0 IADD3 R4, P3, R19, c[0x0][0x558], RZ ;
 Instr 2726 @ 0xaa60 (43616) - @P0 IADD3.X R5, RZ, c[0x0][0x55c], RZ, P3, !PT ;
 Instr 2727 @ 0xaa70 (43632) - @P0 MOV R6, R5 ;
 Instr 2728 @ 0xaa80 (43648) - @!P4 BRA 0xc6c0 ;
Basic block id 329 - num instructions 6
 Instr 2729 @ 0xaa90 (43664) - S2R R2, SR_CTAID.X ;
 Instr 2730 @ 0xaaa0 (43680) - IMAD R3, R7, c[0x0][0x194], RZ ;
 Instr 2731 @ 0xaab0 (43696) - IMAD.MOV.U32 R19, RZ, RZ, RZ ;
 Instr 2732 @ 0xaac0 (43712) - IMAD R3, R0, c[0x0][0x198], R3 ;
 Instr 2733 @ 0xaad0 (43728) - IMAD R9, R2, c[0x0][0x180], R3 ;
 Instr 2734 @ 0xaae0 (43744) - @!P1 BRA 0xb750 ;
Basic block id 330 - num instructions 9
 Instr 2735 @ 0xaaf0 (43760) - MOV R8, RZ ;
 Instr 2736 @ 0xab00 (43776) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x344] ;
 Instr 2737 @ 0xab10 (43792) - IMAD.HI.U32 R10, R9, c[0x0][0x34c], R8 ;
 Instr 2738 @ 0xab20 (43808) - ISETP.NE.AND P0, PT, R14, 0x1, PT ;
 Instr 2739 @ 0xab30 (43824) - SHF.R.U32.HI R11, RZ, c[0x0][0x350], R10 ;
 Instr 2740 @ 0xab40 (43840) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2741 @ 0xab50 (43856) - IMAD R3, R3, c[0x0][0x348], R9 ;
 Instr 2742 @ 0xab60 (43872) - IMAD R19, R3, c[0x0][0x474], RZ ;
 Instr 2743 @ 0xab70 (43888) - @!P0 BRA 0xb750 ;
Basic block id 331 - num instructions 8
 Instr 2744 @ 0xab80 (43904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2745 @ 0xab90 (43920) - ISETP.NE.AND P0, PT, R14, 0x2, PT ;
 Instr 2746 @ 0xaba0 (43936) - IMAD.HI.U32 R12, R11, c[0x0][0x358], R10 ;
 Instr 2747 @ 0xabb0 (43952) - SHF.R.U32.HI R13, RZ, c[0x0][0x35c], R12 ;
 Instr 2748 @ 0xabc0 (43968) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2749 @ 0xabd0 (43984) - IMAD R10, R3, c[0x0][0x354], R11 ;
 Instr 2750 @ 0xabe0 (44000) - IMAD R19, R10, c[0x0][0x47c], R19 ;
 Instr 2751 @ 0xabf0 (44016) - @!P0 BRA 0xb750 ;
Basic block id 332 - num instructions 8
 Instr 2752 @ 0xac00 (44032) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2753 @ 0xac10 (44048) - ISETP.NE.AND P0, PT, R14, 0x3, PT ;
 Instr 2754 @ 0xac20 (44064) - IMAD.HI.U32 R10, R13, c[0x0][0x364], R12 ;
 Instr 2755 @ 0xac30 (44080) - SHF.R.U32.HI R11, RZ, c[0x0][0x368], R10 ;
 Instr 2756 @ 0xac40 (44096) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2757 @ 0xac50 (44112) - IMAD R12, R3, c[0x0][0x360], R13 ;
 Instr 2758 @ 0xac60 (44128) - IMAD R19, R12, c[0x0][0x484], R19 ;
 Instr 2759 @ 0xac70 (44144) - @!P0 BRA 0xb750 ;
Basic block id 333 - num instructions 8
 Instr 2760 @ 0xac80 (44160) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2761 @ 0xac90 (44176) - ISETP.NE.AND P0, PT, R14, 0x4, PT ;
 Instr 2762 @ 0xaca0 (44192) - IMAD.HI.U32 R12, R11, c[0x0][0x370], R10 ;
 Instr 2763 @ 0xacb0 (44208) - SHF.R.U32.HI R13, RZ, c[0x0][0x374], R12 ;
 Instr 2764 @ 0xacc0 (44224) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2765 @ 0xacd0 (44240) - IMAD R10, R3, c[0x0][0x36c], R11 ;
 Instr 2766 @ 0xace0 (44256) - IMAD R19, R10, c[0x0][0x48c], R19 ;
 Instr 2767 @ 0xacf0 (44272) - @!P0 BRA 0xb750 ;
Basic block id 334 - num instructions 8
 Instr 2768 @ 0xad00 (44288) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2769 @ 0xad10 (44304) - ISETP.NE.AND P0, PT, R14, 0x5, PT ;
 Instr 2770 @ 0xad20 (44320) - IMAD.HI.U32 R10, R13, c[0x0][0x37c], R12 ;
 Instr 2771 @ 0xad30 (44336) - SHF.R.U32.HI R11, RZ, c[0x0][0x380], R10 ;
 Instr 2772 @ 0xad40 (44352) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2773 @ 0xad50 (44368) - IMAD R12, R3, c[0x0][0x378], R13 ;
 Instr 2774 @ 0xad60 (44384) - IMAD R19, R12, c[0x0][0x494], R19 ;
 Instr 2775 @ 0xad70 (44400) - @!P0 BRA 0xb750 ;
Basic block id 335 - num instructions 8
 Instr 2776 @ 0xad80 (44416) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2777 @ 0xad90 (44432) - ISETP.NE.AND P0, PT, R14, 0x6, PT ;
 Instr 2778 @ 0xada0 (44448) - IMAD.HI.U32 R12, R11, c[0x0][0x388], R10 ;
 Instr 2779 @ 0xadb0 (44464) - SHF.R.U32.HI R13, RZ, c[0x0][0x38c], R12 ;
 Instr 2780 @ 0xadc0 (44480) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2781 @ 0xadd0 (44496) - IMAD R10, R3, c[0x0][0x384], R11 ;
 Instr 2782 @ 0xade0 (44512) - IMAD R19, R10, c[0x0][0x49c], R19 ;
 Instr 2783 @ 0xadf0 (44528) - @!P0 BRA 0xb750 ;
Basic block id 336 - num instructions 8
 Instr 2784 @ 0xae00 (44544) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2785 @ 0xae10 (44560) - ISETP.NE.AND P0, PT, R14, 0x7, PT ;
 Instr 2786 @ 0xae20 (44576) - IMAD.HI.U32 R10, R13, c[0x0][0x394], R12 ;
 Instr 2787 @ 0xae30 (44592) - SHF.R.U32.HI R11, RZ, c[0x0][0x398], R10 ;
 Instr 2788 @ 0xae40 (44608) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2789 @ 0xae50 (44624) - IMAD R12, R3, c[0x0][0x390], R13 ;
 Instr 2790 @ 0xae60 (44640) - IMAD R19, R12, c[0x0][0x4a4], R19 ;
 Instr 2791 @ 0xae70 (44656) - @!P0 BRA 0xb750 ;
Basic block id 337 - num instructions 8
 Instr 2792 @ 0xae80 (44672) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2793 @ 0xae90 (44688) - ISETP.NE.AND P0, PT, R14, 0x8, PT ;
 Instr 2794 @ 0xaea0 (44704) - IMAD.HI.U32 R12, R11, c[0x0][0x3a0], R10 ;
 Instr 2795 @ 0xaeb0 (44720) - SHF.R.U32.HI R13, RZ, c[0x0][0x3a4], R12 ;
 Instr 2796 @ 0xaec0 (44736) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2797 @ 0xaed0 (44752) - IMAD R10, R3, c[0x0][0x39c], R11 ;
 Instr 2798 @ 0xaee0 (44768) - IMAD R19, R10, c[0x0][0x4ac], R19 ;
 Instr 2799 @ 0xaef0 (44784) - @!P0 BRA 0xb750 ;
Basic block id 338 - num instructions 8
 Instr 2800 @ 0xaf00 (44800) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2801 @ 0xaf10 (44816) - ISETP.NE.AND P0, PT, R14, 0x9, PT ;
 Instr 2802 @ 0xaf20 (44832) - IMAD.HI.U32 R10, R13, c[0x0][0x3ac], R12 ;
 Instr 2803 @ 0xaf30 (44848) - SHF.R.U32.HI R11, RZ, c[0x0][0x3b0], R10 ;
 Instr 2804 @ 0xaf40 (44864) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2805 @ 0xaf50 (44880) - IMAD R12, R3, c[0x0][0x3a8], R13 ;
 Instr 2806 @ 0xaf60 (44896) - IMAD R19, R12, c[0x0][0x4b4], R19 ;
 Instr 2807 @ 0xaf70 (44912) - @!P0 BRA 0xb750 ;
Basic block id 339 - num instructions 8
 Instr 2808 @ 0xaf80 (44928) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2809 @ 0xaf90 (44944) - ISETP.NE.AND P0, PT, R14, 0xa, PT ;
 Instr 2810 @ 0xafa0 (44960) - IMAD.HI.U32 R12, R11, c[0x0][0x3b8], R10 ;
 Instr 2811 @ 0xafb0 (44976) - SHF.R.U32.HI R13, RZ, c[0x0][0x3bc], R12 ;
 Instr 2812 @ 0xafc0 (44992) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2813 @ 0xafd0 (45008) - IMAD R10, R3, c[0x0][0x3b4], R11 ;
 Instr 2814 @ 0xafe0 (45024) - IMAD R19, R10, c[0x0][0x4bc], R19 ;
 Instr 2815 @ 0xaff0 (45040) - @!P0 BRA 0xb750 ;
Basic block id 340 - num instructions 8
 Instr 2816 @ 0xb000 (45056) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2817 @ 0xb010 (45072) - ISETP.NE.AND P0, PT, R14, 0xb, PT ;
 Instr 2818 @ 0xb020 (45088) - IMAD.HI.U32 R10, R13, c[0x0][0x3c4], R12 ;
 Instr 2819 @ 0xb030 (45104) - SHF.R.U32.HI R11, RZ, c[0x0][0x3c8], R10 ;
 Instr 2820 @ 0xb040 (45120) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2821 @ 0xb050 (45136) - IMAD R12, R3, c[0x0][0x3c0], R13 ;
 Instr 2822 @ 0xb060 (45152) - IMAD R19, R12, c[0x0][0x4c4], R19 ;
 Instr 2823 @ 0xb070 (45168) - @!P0 BRA 0xb750 ;
Basic block id 341 - num instructions 8
 Instr 2824 @ 0xb080 (45184) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2825 @ 0xb090 (45200) - ISETP.NE.AND P0, PT, R14, 0xc, PT ;
 Instr 2826 @ 0xb0a0 (45216) - IMAD.HI.U32 R12, R11, c[0x0][0x3d0], R10 ;
 Instr 2827 @ 0xb0b0 (45232) - SHF.R.U32.HI R13, RZ, c[0x0][0x3d4], R12 ;
 Instr 2828 @ 0xb0c0 (45248) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2829 @ 0xb0d0 (45264) - IMAD R10, R3, c[0x0][0x3cc], R11 ;
 Instr 2830 @ 0xb0e0 (45280) - IMAD R19, R10, c[0x0][0x4cc], R19 ;
 Instr 2831 @ 0xb0f0 (45296) - @!P0 BRA 0xb750 ;
Basic block id 342 - num instructions 8
 Instr 2832 @ 0xb100 (45312) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2833 @ 0xb110 (45328) - ISETP.NE.AND P0, PT, R14, 0xd, PT ;
 Instr 2834 @ 0xb120 (45344) - IMAD.HI.U32 R10, R13, c[0x0][0x3dc], R12 ;
 Instr 2835 @ 0xb130 (45360) - SHF.R.U32.HI R11, RZ, c[0x0][0x3e0], R10 ;
 Instr 2836 @ 0xb140 (45376) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2837 @ 0xb150 (45392) - IMAD R12, R3, c[0x0][0x3d8], R13 ;
 Instr 2838 @ 0xb160 (45408) - IMAD R19, R12, c[0x0][0x4d4], R19 ;
 Instr 2839 @ 0xb170 (45424) - @!P0 BRA 0xb750 ;
Basic block id 343 - num instructions 8
 Instr 2840 @ 0xb180 (45440) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2841 @ 0xb190 (45456) - ISETP.NE.AND P0, PT, R14, 0xe, PT ;
 Instr 2842 @ 0xb1a0 (45472) - IMAD.HI.U32 R12, R11, c[0x0][0x3e8], R10 ;
 Instr 2843 @ 0xb1b0 (45488) - SHF.R.U32.HI R13, RZ, c[0x0][0x3ec], R12 ;
 Instr 2844 @ 0xb1c0 (45504) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2845 @ 0xb1d0 (45520) - IMAD R10, R3, c[0x0][0x3e4], R11 ;
 Instr 2846 @ 0xb1e0 (45536) - IMAD R19, R10, c[0x0][0x4dc], R19 ;
 Instr 2847 @ 0xb1f0 (45552) - @!P0 BRA 0xb750 ;
Basic block id 344 - num instructions 8
 Instr 2848 @ 0xb200 (45568) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2849 @ 0xb210 (45584) - ISETP.NE.AND P0, PT, R14, 0xf, PT ;
 Instr 2850 @ 0xb220 (45600) - IMAD.HI.U32 R10, R13, c[0x0][0x3f4], R12 ;
 Instr 2851 @ 0xb230 (45616) - SHF.R.U32.HI R11, RZ, c[0x0][0x3f8], R10 ;
 Instr 2852 @ 0xb240 (45632) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2853 @ 0xb250 (45648) - IMAD R12, R3, c[0x0][0x3f0], R13 ;
 Instr 2854 @ 0xb260 (45664) - IMAD R19, R12, c[0x0][0x4e4], R19 ;
 Instr 2855 @ 0xb270 (45680) - @!P0 BRA 0xb750 ;
Basic block id 345 - num instructions 8
 Instr 2856 @ 0xb280 (45696) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2857 @ 0xb290 (45712) - ISETP.NE.AND P0, PT, R14, 0x10, PT ;
 Instr 2858 @ 0xb2a0 (45728) - IMAD.HI.U32 R12, R11, c[0x0][0x400], R10 ;
 Instr 2859 @ 0xb2b0 (45744) - SHF.R.U32.HI R13, RZ, c[0x0][0x404], R12 ;
 Instr 2860 @ 0xb2c0 (45760) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2861 @ 0xb2d0 (45776) - IMAD R10, R3, c[0x0][0x3fc], R11 ;
 Instr 2862 @ 0xb2e0 (45792) - IMAD R19, R10, c[0x0][0x4ec], R19 ;
 Instr 2863 @ 0xb2f0 (45808) - @!P0 BRA 0xb750 ;
Basic block id 346 - num instructions 8
 Instr 2864 @ 0xb300 (45824) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2865 @ 0xb310 (45840) - ISETP.NE.AND P0, PT, R14, 0x11, PT ;
 Instr 2866 @ 0xb320 (45856) - IMAD.HI.U32 R10, R13, c[0x0][0x40c], R12 ;
 Instr 2867 @ 0xb330 (45872) - SHF.R.U32.HI R11, RZ, c[0x0][0x410], R10 ;
 Instr 2868 @ 0xb340 (45888) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2869 @ 0xb350 (45904) - IMAD R12, R3, c[0x0][0x408], R13 ;
 Instr 2870 @ 0xb360 (45920) - IMAD R19, R12, c[0x0][0x4f4], R19 ;
 Instr 2871 @ 0xb370 (45936) - @!P0 BRA 0xb750 ;
Basic block id 347 - num instructions 8
 Instr 2872 @ 0xb380 (45952) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2873 @ 0xb390 (45968) - ISETP.NE.AND P0, PT, R14, 0x12, PT ;
 Instr 2874 @ 0xb3a0 (45984) - IMAD.HI.U32 R12, R11, c[0x0][0x418], R10 ;
 Instr 2875 @ 0xb3b0 (46000) - SHF.R.U32.HI R13, RZ, c[0x0][0x41c], R12 ;
 Instr 2876 @ 0xb3c0 (46016) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2877 @ 0xb3d0 (46032) - IMAD R10, R3, c[0x0][0x414], R11 ;
 Instr 2878 @ 0xb3e0 (46048) - IMAD R19, R10, c[0x0][0x4fc], R19 ;
 Instr 2879 @ 0xb3f0 (46064) - @!P0 BRA 0xb750 ;
Basic block id 348 - num instructions 8
 Instr 2880 @ 0xb400 (46080) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2881 @ 0xb410 (46096) - ISETP.NE.AND P0, PT, R14, 0x13, PT ;
 Instr 2882 @ 0xb420 (46112) - IMAD.HI.U32 R10, R13, c[0x0][0x424], R12 ;
 Instr 2883 @ 0xb430 (46128) - SHF.R.U32.HI R11, RZ, c[0x0][0x428], R10 ;
 Instr 2884 @ 0xb440 (46144) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2885 @ 0xb450 (46160) - IMAD R12, R3, c[0x0][0x420], R13 ;
 Instr 2886 @ 0xb460 (46176) - IMAD R19, R12, c[0x0][0x504], R19 ;
 Instr 2887 @ 0xb470 (46192) - @!P0 BRA 0xb750 ;
Basic block id 349 - num instructions 8
 Instr 2888 @ 0xb480 (46208) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2889 @ 0xb490 (46224) - ISETP.NE.AND P0, PT, R14, 0x14, PT ;
 Instr 2890 @ 0xb4a0 (46240) - IMAD.HI.U32 R12, R11, c[0x0][0x430], R10 ;
 Instr 2891 @ 0xb4b0 (46256) - SHF.R.U32.HI R13, RZ, c[0x0][0x434], R12 ;
 Instr 2892 @ 0xb4c0 (46272) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2893 @ 0xb4d0 (46288) - IMAD R10, R3, c[0x0][0x42c], R11 ;
 Instr 2894 @ 0xb4e0 (46304) - IMAD R19, R10, c[0x0][0x50c], R19 ;
 Instr 2895 @ 0xb4f0 (46320) - @!P0 BRA 0xb750 ;
Basic block id 350 - num instructions 8
 Instr 2896 @ 0xb500 (46336) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2897 @ 0xb510 (46352) - ISETP.NE.AND P0, PT, R14, 0x15, PT ;
 Instr 2898 @ 0xb520 (46368) - IMAD.HI.U32 R10, R13, c[0x0][0x43c], R12 ;
 Instr 2899 @ 0xb530 (46384) - SHF.R.U32.HI R11, RZ, c[0x0][0x440], R10 ;
 Instr 2900 @ 0xb540 (46400) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2901 @ 0xb550 (46416) - IMAD R12, R3, c[0x0][0x438], R13 ;
 Instr 2902 @ 0xb560 (46432) - IMAD R19, R12, c[0x0][0x514], R19 ;
 Instr 2903 @ 0xb570 (46448) - @!P0 BRA 0xb750 ;
Basic block id 351 - num instructions 8
 Instr 2904 @ 0xb580 (46464) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2905 @ 0xb590 (46480) - ISETP.NE.AND P0, PT, R14, 0x16, PT ;
 Instr 2906 @ 0xb5a0 (46496) - IMAD.HI.U32 R12, R11, c[0x0][0x448], R10 ;
 Instr 2907 @ 0xb5b0 (46512) - SHF.R.U32.HI R13, RZ, c[0x0][0x44c], R12 ;
 Instr 2908 @ 0xb5c0 (46528) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2909 @ 0xb5d0 (46544) - IMAD R10, R3, c[0x0][0x444], R11 ;
 Instr 2910 @ 0xb5e0 (46560) - IMAD R19, R10, c[0x0][0x51c], R19 ;
 Instr 2911 @ 0xb5f0 (46576) - @!P0 BRA 0xb750 ;
Basic block id 352 - num instructions 8
 Instr 2912 @ 0xb600 (46592) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2913 @ 0xb610 (46608) - ISETP.NE.AND P0, PT, R14, 0x17, PT ;
 Instr 2914 @ 0xb620 (46624) - IMAD.HI.U32 R10, R13, c[0x0][0x454], R12 ;
 Instr 2915 @ 0xb630 (46640) - SHF.R.U32.HI R11, RZ, c[0x0][0x458], R10 ;
 Instr 2916 @ 0xb640 (46656) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2917 @ 0xb650 (46672) - IMAD R12, R3, c[0x0][0x450], R13 ;
 Instr 2918 @ 0xb660 (46688) - IMAD R19, R12, c[0x0][0x524], R19 ;
 Instr 2919 @ 0xb670 (46704) - @!P0 BRA 0xb750 ;
Basic block id 353 - num instructions 13
 Instr 2920 @ 0xb680 (46720) - ISETP.NE.AND P0, PT, R14, 0x18, PT ;
 Instr 2921 @ 0xb690 (46736) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2922 @ 0xb6a0 (46752) - IMAD.HI.U32 R12, R11, c[0x0][0x460], R10 ;
 Instr 2923 @ 0xb6b0 (46768) - SHF.R.U32.HI R13, RZ, c[0x0][0x464], R12 ;
 Instr 2924 @ 0xb6c0 (46784) - @P0 MOV R12, RZ ;
 Instr 2925 @ 0xb6d0 (46800) - IMAD.MOV R3, RZ, RZ, -R13.reuse ;
 Instr 2926 @ 0xb6e0 (46816) - @P0 IMAD.HI.U32 R10, R13, c[0x0][0x46c], R12 ;
 Instr 2927 @ 0xb6f0 (46832) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x470], R10 ;
 Instr 2928 @ 0xb700 (46848) - IMAD R10, R3, c[0x0][0x45c], R11 ;
 Instr 2929 @ 0xb710 (46864) - @P0 IADD3 R12, -R12, RZ, RZ ;
 Instr 2930 @ 0xb720 (46880) - IMAD R19, R10, c[0x0][0x52c], R19 ;
 Instr 2931 @ 0xb730 (46896) - @P0 IMAD R12, R12, c[0x0][0x468], R13 ;
 Instr 2932 @ 0xb740 (46912) - @P0 IMAD R19, R12, c[0x0][0x534], R19 ;
Basic block id 354 - num instructions 7
 Instr 2933 @ 0xb750 (46928) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 2934 @ 0xb760 (46944) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2935 @ 0xb770 (46960) - BSSY B0, 0xb820 ;
 Instr 2936 @ 0xb780 (46976) - PRMT R3, RZ, 0x7610, R3 ;
 Instr 2937 @ 0xb790 (46992) - ISETP.NE.AND P0, PT, R7, RZ, P0 ;
 Instr 2938 @ 0xb7a0 (47008) - ISETP.GE.OR P0, PT, R9, c[0x0][0x178], P0 ;
 Instr 2939 @ 0xb7b0 (47024) - @P0 BRA 0xb810 ;
Basic block id 355 - num instructions 5
 Instr 2940 @ 0xb7c0 (47040) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x18c], PT ;
 Instr 2941 @ 0xb7d0 (47056) - IMAD.MOV.U32 R3, RZ, RZ, 0x1 ;
 Instr 2942 @ 0xb7e0 (47072) - @P1 ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 2943 @ 0xb7f0 (47088) - @P1 SEL R8, RZ, 0x1, P0 ;
 Instr 2944 @ 0xb800 (47104) - @P1 PRMT R3, R8, 0x7610, R3 ;
Basic block id 356 - num instructions 19
 Instr 2945 @ 0xb810 (47120) - BSYNC B0 ;
 Instr 2946 @ 0xb820 (47136) - PRMT R3, R3, 0x9910, RZ ;
 Instr 2947 @ 0xb830 (47152) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 2948 @ 0xb840 (47168) - ISETP.NE.OR P0, PT, RZ, c[0x0][0x188], !P2 ;
 Instr 2949 @ 0xb850 (47184) - @P2 S2R R3, SR_CTAID.Y ;
 Instr 2950 @ 0xb860 (47200) - @P2 MOV R9, 0x8 ;
 Instr 2951 @ 0xb870 (47216) - @P2 IMAD R8, R2, c[0x0][0x10], R3 ;
 Instr 2952 @ 0xb880 (47232) - @!P0 IMAD R8, R8, c[0x0][0x0], R7 ;
 Instr 2953 @ 0xb890 (47248) - LOP3.LUT P0, RZ, R7, R0, RZ, 0xfc, !PT ;
 Instr 2954 @ 0xb8a0 (47264) - @P2 IMAD.WIDE.U32 R8, R8, R9, c[0x0][0x560] ;
 Instr 2955 @ 0xb8b0 (47280) - @P2 STG.E.64.SYS [R8], R16 ;
 Instr 2956 @ 0xb8c0 (47296) - MEMBAR.SC.GPU ;
 Instr 2957 @ 0xb8d0 (47312) - ERRBAR;
 Instr 2958 @ 0xb8e0 (47328) - CCTL.IVALL ;
 Instr 2959 @ 0xb8f0 (47344) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2960 @ 0xb900 (47360) - BSSY B0, 0xba80 ;
 Instr 2961 @ 0xb910 (47376) - BAR.SYNC 0x0 ;
 Instr 2962 @ 0xb920 (47392) - BAR.SYNC 0x0 ;
 Instr 2963 @ 0xb930 (47408) - @P0 BRA 0xba70 ;
Basic block id 357 - num instructions 19
 Instr 2964 @ 0xb940 (47424) - S2R R3, SR_LANEID ;
 Instr 2965 @ 0xb950 (47440) - VOTEU.ANY UR4, UPT, PT ;
 Instr 2966 @ 0xb960 (47456) - IMAD.MOV.U32 R9, RZ, RZ, 0x4 ;
 Instr 2967 @ 0xb970 (47472) - FLO.U32 R10, UR4 ;
 Instr 2968 @ 0xb980 (47488) - IMAD.WIDE.U32 R8, R2, R9, c[0x0][0x568] ;
 Instr 2969 @ 0xb990 (47504) - POPC R11, UR4 ;
 Instr 2970 @ 0xb9a0 (47520) - ISETP.EQ.U32.AND P0, PT, R10, R3, PT ;
 Instr 2971 @ 0xb9b0 (47536) - @P0 ATOMG.E.ADD.STRONG.GPU PT, R9, [R8], R11 ;
 Instr 2972 @ 0xb9c0 (47552) - ULDC UR5, c[0x0][0x10] ;
 Instr 2973 @ 0xb9d0 (47568) - S2R R12, SR_LTMASK ;
 Instr 2974 @ 0xb9e0 (47584) - LOP3.LUT R12, R12, UR4, RZ, 0xc0, !PT ;
 Instr 2975 @ 0xb9f0 (47600) - UMOV UR4, 0x1 ;
 Instr 2976 @ 0xba00 (47616) - UIADD3 UR4, -UR4, UR5, URZ ;
 Instr 2977 @ 0xba10 (47632) - POPC R12, R12 ;
 Instr 2978 @ 0xba20 (47648) - SHFL.IDX PT, R3, R9, R10, 0x1f ;
 Instr 2979 @ 0xba30 (47664) - IADD3 R3, R3, R12, RZ ;
 Instr 2980 @ 0xba40 (47680) - ISETP.NE.AND P0, PT, R3, UR4, PT ;
 Instr 2981 @ 0xba50 (47696) - SEL R3, RZ, 0x1, P0 ;
 Instr 2982 @ 0xba60 (47712) - STS.U8 [RZ], R3 ;
Basic block id 358 - num instructions 7
 Instr 2983 @ 0xba70 (47728) - BSYNC B0 ;
 Instr 2984 @ 0xba80 (47744) - BAR.SYNC 0x0 ;
 Instr 2985 @ 0xba90 (47760) - LDS.U.U8 R3, [RZ] ;
 Instr 2986 @ 0xbaa0 (47776) - IADD3 R8, P1, R19, c[0x0][0x548], RZ ;
 Instr 2987 @ 0xbab0 (47792) - IMAD.X R9, RZ, RZ, c[0x0][0x54c], P1 ;
 Instr 2988 @ 0xbac0 (47808) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2989 @ 0xbad0 (47824) - @!P0 EXIT ;
Basic block id 359 - num instructions 9
 Instr 2990 @ 0xbae0 (47840) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 2991 @ 0xbaf0 (47856) - IMAD.MOV.U32 R17, RZ, RZ, c[0x0][0x16c] ;
 Instr 2992 @ 0xbb00 (47872) - MOV R16, c[0x0][0x168] ;
 Instr 2993 @ 0xbb10 (47888) - MEMBAR.SC.GPU ;
 Instr 2994 @ 0xbb20 (47904) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2995 @ 0xbb30 (47920) - BSSY B0, 0xbda0 ;
 Instr 2996 @ 0xbb40 (47936) - ERRBAR;
 Instr 2997 @ 0xbb50 (47952) - CCTL.IVALL ;
 Instr 2998 @ 0xbb60 (47968) - @!P0 BRA 0xbca0 ;
Basic block id 360 - num instructions 5
 Instr 2999 @ 0xbb70 (47984) - IMAD R3, R0, c[0x0][0x0], R7 ;
 Instr 3000 @ 0xbb80 (48000) - BMOV.32.CLEAR RZ, B1 ;
 Instr 3001 @ 0xbb90 (48016) - BSSY B1, 0xbc90 ;
 Instr 3002 @ 0xbba0 (48032) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x184], PT ;
 Instr 3003 @ 0xbbb0 (48048) - @P0 BRA 0xbc80 ;
Basic block id 361 - num instructions 12
 Instr 3004 @ 0xbbc0 (48064) - MOV R11, 0x8 ;
 Instr 3005 @ 0xbbd0 (48080) - IMAD R10, R2, c[0x0][0x10], R3 ;
 Instr 3006 @ 0xbbe0 (48096) - IMAD.WIDE.U32 R10, R10, R11, c[0x0][0x560] ;
 Instr 3007 @ 0xbbf0 (48112) - LDG.E.64.SYS R10, [R10] ;
 Instr 3008 @ 0xbc00 (48128) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x0] ;
 Instr 3009 @ 0xbc10 (48144) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 3010 @ 0xbc20 (48160) - IMAD R3, R12, c[0x0][0x4], R3 ;
 Instr 3011 @ 0xbc30 (48176) - ISETP.GE.U32.AND P1, PT, R3, c[0x0][0x184], PT ;
 Instr 3012 @ 0xbc40 (48192) - DSETP.LT.OR P0, PT, R16, R10, P0 ;
 Instr 3013 @ 0xbc50 (48208) - FSEL R16, R16, R10, P0 ;
 Instr 3014 @ 0xbc60 (48224) - FSEL R17, R17, R11, P0 ;
 Instr 3015 @ 0xbc70 (48240) - @!P1 BRA 0xbbc0 ;
Basic block id 362 - num instructions 2
 Instr 3016 @ 0xbc80 (48256) - BSYNC B1 ;
 Instr 3017 @ 0xbc90 (48272) - BRA 0xbd90 ;
Basic block id 363 - num instructions 2
 Instr 3018 @ 0xbca0 (48288) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x184], PT ;
 Instr 3019 @ 0xbcb0 (48304) - @P0 BRA 0xbd90 ;
Basic block id 364 - num instructions 1
 Instr 3020 @ 0xbcc0 (48320) - MOV R3, R0 ;
Basic block id 365 - num instructions 12
 Instr 3021 @ 0xbcd0 (48336) - IMAD R10, R2, c[0x0][0x10], R3 ;
 Instr 3022 @ 0xbce0 (48352) - MOV R11, 0x8 ;
 Instr 3023 @ 0xbcf0 (48368) - IMAD R10, R10, c[0x0][0x0], R7 ;
 Instr 3024 @ 0xbd00 (48384) - IMAD.WIDE.U32 R10, R10, R11, c[0x0][0x560] ;
 Instr 3025 @ 0xbd10 (48400) - LDG.E.64.SYS R10, [R10] ;
 Instr 3026 @ 0xbd20 (48416) - IADD3 R3, R3, c[0x0][0x4], RZ ;
 Instr 3027 @ 0xbd30 (48432) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 3028 @ 0xbd40 (48448) - ISETP.GE.U32.AND P1, PT, R3, c[0x0][0x184], PT ;
 Instr 3029 @ 0xbd50 (48464) - DSETP.LT.OR P0, PT, R16, R10, P0 ;
 Instr 3030 @ 0xbd60 (48480) - FSEL R16, R16, R10, P0 ;
 Instr 3031 @ 0xbd70 (48496) - FSEL R17, R17, R11, P0 ;
 Instr 3032 @ 0xbd80 (48512) - @!P1 BRA 0xbcd0 ;
Basic block id 366 - num instructions 8
 Instr 3033 @ 0xbd90 (48528) - BSYNC B0 ;
 Instr 3034 @ 0xbda0 (48544) - IMAD R13, R0, c[0x0][0x0], R7 ;
 Instr 3035 @ 0xbdb0 (48560) - ULDC UR4, c[0x0][0x4] ;
 Instr 3036 @ 0xbdc0 (48576) - ISETP.NE.AND P3, PT, RZ, c[0x0][0x188], PT ;
 Instr 3037 @ 0xbdd0 (48592) - USHF.R.U32.HI UR4, URZ, 0x1, UR4 ;
 Instr 3038 @ 0xbde0 (48608) - STS.64 [R13.X8+0x10], R16 ;
 Instr 3039 @ 0xbdf0 (48624) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3040 @ 0xbe00 (48640) - @!P0 BRA 0xbf20 ;
Basic block id 367 - num instructions 1
 Instr 3041 @ 0xbe10 (48656) - IMAD.U32 R11, RZ, RZ, UR4 ;
Basic block id 368 - num instructions 16
 Instr 3042 @ 0xbe20 (48672) - IADD3 R2, R0, R11, RZ ;
 Instr 3043 @ 0xbe30 (48688) - BAR.SYNC 0x0 ;
 Instr 3044 @ 0xbe40 (48704) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x4], PT ;
 Instr 3045 @ 0xbe50 (48720) - ISETP.GE.U32.OR P0, PT, R0, R11, P0 ;
 Instr 3046 @ 0xbe60 (48736) - @!P0 IMAD R2, R2, c[0x0][0x0], R7 ;
 Instr 3047 @ 0xbe70 (48752) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 3048 @ 0xbe80 (48768) - @!P0 LDS.U.64 R2, [R2.X8+0x10] ;
 Instr 3049 @ 0xbe90 (48784) - @!P0 DSETP.LT.OR P1, PT, R16, R2, P1 ;
 Instr 3050 @ 0xbea0 (48800) - @!P0 FSEL R3, R17, R3, P1 ;
 Instr 3051 @ 0xbeb0 (48816) - @!P0 FSEL R10, R16, R2, P1 ;
 Instr 3052 @ 0xbec0 (48832) - @!P0 IMAD.MOV.U32 R17, RZ, RZ, R3 ;
 Instr 3053 @ 0xbed0 (48848) - @!P0 MOV R16, R10 ;
 Instr 3054 @ 0xbee0 (48864) - @!P0 STS.64 [R13.X8+0x10], R16 ;
 Instr 3055 @ 0xbef0 (48880) - ISETP.GT.AND P0, PT, R11, 0x1, PT ;
 Instr 3056 @ 0xbf00 (48896) - SHF.R.S32.HI R11, RZ, 0x1, R11 ;
 Instr 3057 @ 0xbf10 (48912) - @P0 BRA 0xbe20 ;
Basic block id 369 - num instructions 2
 Instr 3058 @ 0xbf20 (48928) - LEA R11, R13, 0x10, 0x3 ;
 Instr 3059 @ 0xbf30 (48944) - @!P3 BRA 0xc1f0 ;
Basic block id 370 - num instructions 4
 Instr 3060 @ 0xbf40 (48960) - MOV R2, c[0x0][0x0] ;
 Instr 3061 @ 0xbf50 (48976) - MOV R0, c[0x0][0x0] ;
 Instr 3062 @ 0xbf60 (48992) - ISETP.GT.AND P0, PT, R2, 0x20, PT ;
 Instr 3063 @ 0xbf70 (49008) - @!P0 BRA 0xc100 ;
Basic block id 371 - num instructions 6
 Instr 3064 @ 0xbf80 (49024) - LEA.HI R2, R2, c[0x0][0x0], RZ, 0x1 ;
 Instr 3065 @ 0xbf90 (49040) - STS.64 [R13.X8+0x10], R16 ;
 Instr 3066 @ 0xbfa0 (49056) - IMAD.MOV.U32 R0, RZ, RZ, 0x20 ;
 Instr 3067 @ 0xbfb0 (49072) - SHF.R.S32.HI R2, RZ, 0x1, R2 ;
 Instr 3068 @ 0xbfc0 (49088) - ISETP.GE.AND P0, PT, R2, 0x20, PT ;
 Instr 3069 @ 0xbfd0 (49104) - @!P0 BRA 0xc100 ;
Basic block id 372 - num instructions 1
 Instr 3070 @ 0xbfe0 (49120) - MOV R0, R2 ;
Basic block id 373 - num instructions 16
 Instr 3071 @ 0xbff0 (49136) - IADD3 R2, R7, R0, RZ ;
 Instr 3072 @ 0xc000 (49152) - BAR.SYNC 0x0 ;
 Instr 3073 @ 0xc010 (49168) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x0], PT ;
 Instr 3074 @ 0xc020 (49184) - ISETP.GE.U32.OR P0, PT, R7, R0, P0 ;
 Instr 3075 @ 0xc030 (49200) - @!P0 IMAD R2, R0, 0x8, R11 ;
 Instr 3076 @ 0xc040 (49216) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 3077 @ 0xc050 (49232) - SHF.R.S32.HI R0, RZ, 0x1, R0 ;
 Instr 3078 @ 0xc060 (49248) - @!P0 LDS.U.64 R2, [R2] ;
 Instr 3079 @ 0xc070 (49264) - @!P0 DSETP.LT.OR P1, PT, R16, R2, P1 ;
 Instr 3080 @ 0xc080 (49280) - @!P0 FSEL R10, R16, R2, P1 ;
 Instr 3081 @ 0xc090 (49296) - @!P0 FSEL R3, R17, R3, P1 ;
 Instr 3082 @ 0xc0a0 (49312) - @!P0 MOV R16, R10 ;
 Instr 3083 @ 0xc0b0 (49328) - @!P0 MOV R17, R3 ;
 Instr 3084 @ 0xc0c0 (49344) - @!P0 STS.64 [R13.X8+0x10], R16 ;
 Instr 3085 @ 0xc0d0 (49360) - ISETP.GE.AND P0, PT, R0, 0x20, PT ;
 Instr 3086 @ 0xc0e0 (49376) - @P0 BRA 0xbff0 ;
Basic block id 374 - num instructions 1
 Instr 3087 @ 0xc0f0 (49392) - IMAD.MOV.U32 R0, RZ, RZ, 0x20 ;
Basic block id 375 - num instructions 3
 Instr 3088 @ 0xc100 (49408) - BAR.SYNC 0x0 ;
 Instr 3089 @ 0xc110 (49424) - ISETP.GE.AND P0, PT, R0, 0x2, PT ;
 Instr 3090 @ 0xc120 (49440) - @!P0 BRA 0xc1f0 ;
Basic block id 376 - num instructions 1
 Instr 3091 @ 0xc130 (49456) - MOV R7, 0x1 ;
Basic block id 377 - num instructions 11
 Instr 3092 @ 0xc140 (49472) - SHFL.DOWN PT, R3, R17, R7, 0x1f ;
 Instr 3093 @ 0xc150 (49488) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 3094 @ 0xc160 (49504) - SHFL.DOWN PT, R2, R16, R7, 0x1f ;
 Instr 3095 @ 0xc170 (49520) - SHF.L.U32 R7, R7, 0x1, RZ ;
 Instr 3096 @ 0xc180 (49536) - ISETP.GE.AND P1, PT, R7, R0, PT ;
 Instr 3097 @ 0xc190 (49552) - DSETP.LT.OR P0, PT, R16, R2, P0 ;
 Instr 3098 @ 0xc1a0 (49568) - FSEL R2, R16, R2, P0 ;
 Instr 3099 @ 0xc1b0 (49584) - FSEL R3, R17, R3, P0 ;
 Instr 3100 @ 0xc1c0 (49600) - IMAD.MOV.U32 R16, RZ, RZ, R2 ;
 Instr 3101 @ 0xc1d0 (49616) - MOV R17, R3 ;
 Instr 3102 @ 0xc1e0 (49632) - @!P1 BRA 0xc140 ;
Basic block id 378 - num instructions 1
 Instr 3103 @ 0xc1f0 (49648) - @!P2 EXIT ;
Basic block id 379 - num instructions 4
 Instr 3104 @ 0xc200 (49664) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
 Instr 3105 @ 0xc210 (49680) - ULDC.U8 UR36, c[0x0][0x578] ;
 Instr 3106 @ 0xc220 (49696) - ISETP.NE.AND.EX P0, PT, R6, RZ, PT, P0 ;
 Instr 3107 @ 0xc230 (49712) - @!P0 BRA 0xc480 ;
Basic block id 380 - num instructions 2
 Instr 3108 @ 0xc240 (49728) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3109 @ 0xc250 (49744) - @!P0 BRA 0xc2b0 ;
Basic block id 381 - num instructions 5
 Instr 3110 @ 0xc260 (49760) - LDG.E.64.SYS R2, [R4] ;
 Instr 3111 @ 0xc270 (49776) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3112 @ 0xc280 (49792) - DSETP.LT.OR P0, PT, R2, R16, P0 ;
 Instr 3113 @ 0xc290 (49808) - FSEL R16, R2, R16, P0 ;
 Instr 3114 @ 0xc2a0 (49824) - FSEL R17, R3, R17, P0 ;
Basic block id 382 - num instructions 3
 Instr 3115 @ 0xc2b0 (49840) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3116 @ 0xc2c0 (49856) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3117 @ 0xc2d0 (49872) - @!P0 BRA 0xc460 ;
Basic block id 383 - num instructions 3
 Instr 3118 @ 0xc2e0 (49888) - MOV R0, 0x1 ;
 Instr 3119 @ 0xc2f0 (49904) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3120 @ 0xc300 (49920) - @!P0 BRA 0xc430 ;
Basic block id 384 - num instructions 18
 Instr 3121 @ 0xc310 (49936) - UMOV UR8, 0xd9867700 ;
 Instr 3122 @ 0xc320 (49952) - IMAD.MOV.U32 R8, RZ, RZ, 0x2ea ;
 Instr 3123 @ 0xc330 (49968) - UMOV UR9, 0x7f88 ;
 Instr 3124 @ 0xc340 (49984) - MOV R12, 0x1 ;
 Instr 3125 @ 0xc350 (50000) - UMOV UR6, 0xd9867500 ;
 Instr 3126 @ 0xc360 (50016) - MOV R13, RZ ;
 Instr 3127 @ 0xc370 (50032) - UMOV UR7, 0x7f88 ;
 Instr 3128 @ 0xc380 (50048) - IMAD.U32 R4, RZ, RZ, UR8 ;
 Instr 3129 @ 0xc390 (50064) - UMOV UR4, 0xd985f800 ;
 Instr 3130 @ 0xc3a0 (50080) - MOV R5, UR9 ;
 Instr 3131 @ 0xc3b0 (50096) - UMOV UR5, 0x7f88 ;
 Instr 3132 @ 0xc3c0 (50112) - MOV R6, UR6 ;
 Instr 3133 @ 0xc3d0 (50128) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3134 @ 0xc3e0 (50144) - MOV R10, UR4 ;
 Instr 3135 @ 0xc3f0 (50160) - MOV R11, UR5 ;
 Instr 3136 @ 0xc400 (50176) - MOV R20, 0xda1f5c30 ;
 Instr 3137 @ 0xc410 (50192) - MOV R21, 0x7f88 ;
 Instr 3138 @ 0xc420 (50208) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 385 - num instructions 3
 Instr 3139 @ 0xc430 (50224) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3140 @ 0xc440 (50240) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3141 @ 0xc450 (50256) - EXIT ;
Basic block id 386 - num instructions 2
 Instr 3142 @ 0xc460 (50272) - STG.E.64.SYS [R4], R16 ;
 Instr 3143 @ 0xc470 (50288) - EXIT ;
Basic block id 387 - num instructions 2
 Instr 3144 @ 0xc480 (50304) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3145 @ 0xc490 (50320) - @!P0 BRA 0xc4f0 ;
Basic block id 388 - num instructions 5
 Instr 3146 @ 0xc4a0 (50336) - LDG.E.64.SYS R2, [R8] ;
 Instr 3147 @ 0xc4b0 (50352) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3148 @ 0xc4c0 (50368) - DSETP.LT.OR P0, PT, R2, R16, P0 ;
 Instr 3149 @ 0xc4d0 (50384) - FSEL R16, R2, R16, P0 ;
 Instr 3150 @ 0xc4e0 (50400) - FSEL R17, R3, R17, P0 ;
Basic block id 389 - num instructions 3
 Instr 3151 @ 0xc4f0 (50416) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3152 @ 0xc500 (50432) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3153 @ 0xc510 (50448) - @!P0 BRA 0xc6a0 ;
Basic block id 390 - num instructions 3
 Instr 3154 @ 0xc520 (50464) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 3155 @ 0xc530 (50480) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3156 @ 0xc540 (50496) - @!P0 BRA 0xc670 ;
Basic block id 391 - num instructions 18
 Instr 3157 @ 0xc550 (50512) - UMOV UR4, 0xd9867700 ;
 Instr 3158 @ 0xc560 (50528) - MOV R8, 0x2ea ;
 Instr 3159 @ 0xc570 (50544) - UMOV UR5, 0x7f88 ;
 Instr 3160 @ 0xc580 (50560) - MOV R12, 0x1 ;
 Instr 3161 @ 0xc590 (50576) - UMOV UR6, 0xd9867500 ;
 Instr 3162 @ 0xc5a0 (50592) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3163 @ 0xc5b0 (50608) - UMOV UR7, 0x7f88 ;
 Instr 3164 @ 0xc5c0 (50624) - MOV R4, UR4 ;
 Instr 3165 @ 0xc5d0 (50640) - UMOV UR8, 0xd985f800 ;
 Instr 3166 @ 0xc5e0 (50656) - MOV R5, UR5 ;
 Instr 3167 @ 0xc5f0 (50672) - UMOV UR9, 0x7f88 ;
 Instr 3168 @ 0xc600 (50688) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3169 @ 0xc610 (50704) - MOV R7, UR7 ;
 Instr 3170 @ 0xc620 (50720) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3171 @ 0xc630 (50736) - MOV R10, UR8 ;
 Instr 3172 @ 0xc640 (50752) - MOV R20, 0xda1f5e70 ;
 Instr 3173 @ 0xc650 (50768) - MOV R21, 0x7f88 ;
 Instr 3174 @ 0xc660 (50784) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 392 - num instructions 3
 Instr 3175 @ 0xc670 (50800) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3176 @ 0xc680 (50816) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3177 @ 0xc690 (50832) - EXIT ;
Basic block id 393 - num instructions 2
 Instr 3178 @ 0xc6a0 (50848) - STG.E.64.SYS [R8], R16 ;
 Instr 3179 @ 0xc6b0 (50864) - EXIT ;
Basic block id 394 - num instructions 2
 Instr 3180 @ 0xc6c0 (50880) - ISETP.GE.AND P0, PT, R3, c[0x0][0x178], PT ;
 Instr 3181 @ 0xc6d0 (50896) - @P0 EXIT ;
Basic block id 395 - num instructions 3
 Instr 3182 @ 0xc6e0 (50912) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
 Instr 3183 @ 0xc6f0 (50928) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 3184 @ 0xc700 (50944) - @P0 EXIT P1 ;
Basic block id 396 - num instructions 3
 Instr 3185 @ 0xc710 (50960) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
 Instr 3186 @ 0xc720 (50976) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
 Instr 3187 @ 0xc730 (50992) - @P0 EXIT P1 ;
Basic block id 397 - num instructions 4
 Instr 3188 @ 0xc740 (51008) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
 Instr 3189 @ 0xc750 (51024) - ULDC.U8 UR36, c[0x0][0x578] ;
 Instr 3190 @ 0xc760 (51040) - ISETP.NE.AND.EX P0, PT, R6, RZ, PT, P0 ;
 Instr 3191 @ 0xc770 (51056) - @!P0 BRA 0xc9c0 ;
Basic block id 398 - num instructions 2
 Instr 3192 @ 0xc780 (51072) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3193 @ 0xc790 (51088) - @!P0 BRA 0xc7f0 ;
Basic block id 399 - num instructions 5
 Instr 3194 @ 0xc7a0 (51104) - LDG.E.64.SYS R2, [R4] ;
 Instr 3195 @ 0xc7b0 (51120) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3196 @ 0xc7c0 (51136) - DSETP.LT.OR P0, PT, R2, R16, P0 ;
 Instr 3197 @ 0xc7d0 (51152) - FSEL R16, R2, R16, P0 ;
 Instr 3198 @ 0xc7e0 (51168) - FSEL R17, R3, R17, P0 ;
Basic block id 400 - num instructions 3
 Instr 3199 @ 0xc7f0 (51184) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3200 @ 0xc800 (51200) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3201 @ 0xc810 (51216) - @!P0 BRA 0xc9a0 ;
Basic block id 401 - num instructions 3
 Instr 3202 @ 0xc820 (51232) - MOV R0, 0x1 ;
 Instr 3203 @ 0xc830 (51248) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3204 @ 0xc840 (51264) - @!P0 BRA 0xc970 ;
Basic block id 402 - num instructions 18
 Instr 3205 @ 0xc850 (51280) - UMOV UR4, 0xd9867700 ;
 Instr 3206 @ 0xc860 (51296) - MOV R8, 0x2ea ;
 Instr 3207 @ 0xc870 (51312) - UMOV UR5, 0x7f88 ;
 Instr 3208 @ 0xc880 (51328) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3209 @ 0xc890 (51344) - UMOV UR6, 0xd9867500 ;
 Instr 3210 @ 0xc8a0 (51360) - MOV R13, RZ ;
 Instr 3211 @ 0xc8b0 (51376) - UMOV UR7, 0x7f88 ;
 Instr 3212 @ 0xc8c0 (51392) - MOV R4, UR4 ;
 Instr 3213 @ 0xc8d0 (51408) - UMOV UR8, 0xd985f800 ;
 Instr 3214 @ 0xc8e0 (51424) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3215 @ 0xc8f0 (51440) - UMOV UR9, 0x7f88 ;
 Instr 3216 @ 0xc900 (51456) - MOV R6, UR6 ;
 Instr 3217 @ 0xc910 (51472) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3218 @ 0xc920 (51488) - MOV R7, UR7 ;
 Instr 3219 @ 0xc930 (51504) - MOV R11, UR9 ;
 Instr 3220 @ 0xc940 (51520) - MOV R20, 0xda1f6170 ;
 Instr 3221 @ 0xc950 (51536) - MOV R21, 0x7f88 ;
 Instr 3222 @ 0xc960 (51552) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 403 - num instructions 3
 Instr 3223 @ 0xc970 (51568) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3224 @ 0xc980 (51584) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3225 @ 0xc990 (51600) - EXIT ;
Basic block id 404 - num instructions 2
 Instr 3226 @ 0xc9a0 (51616) - STG.E.64.SYS [R4], R16 ;
 Instr 3227 @ 0xc9b0 (51632) - EXIT ;
Basic block id 405 - num instructions 2
 Instr 3228 @ 0xc9c0 (51648) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3229 @ 0xc9d0 (51664) - @!P0 BRA 0xca30 ;
Basic block id 406 - num instructions 5
 Instr 3230 @ 0xc9e0 (51680) - LDG.E.64.SYS R2, [R8] ;
 Instr 3231 @ 0xc9f0 (51696) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3232 @ 0xca00 (51712) - DSETP.LT.OR P0, PT, R2, R16, P0 ;
 Instr 3233 @ 0xca10 (51728) - FSEL R16, R2, R16, P0 ;
 Instr 3234 @ 0xca20 (51744) - FSEL R17, R3, R17, P0 ;
Basic block id 407 - num instructions 3
 Instr 3235 @ 0xca30 (51760) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3236 @ 0xca40 (51776) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3237 @ 0xca50 (51792) - @!P0 BRA 0xcbe0 ;
Basic block id 408 - num instructions 3
 Instr 3238 @ 0xca60 (51808) - MOV R0, 0x1 ;
 Instr 3239 @ 0xca70 (51824) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3240 @ 0xca80 (51840) - @!P0 BRA 0xcbb0 ;
Basic block id 409 - num instructions 18
 Instr 3241 @ 0xca90 (51856) - UMOV UR4, 0xd9867700 ;
 Instr 3242 @ 0xcaa0 (51872) - IMAD.MOV.U32 R8, RZ, RZ, 0x2ea ;
 Instr 3243 @ 0xcab0 (51888) - UMOV UR5, 0x7f88 ;
 Instr 3244 @ 0xcac0 (51904) - MOV R12, 0x1 ;
 Instr 3245 @ 0xcad0 (51920) - UMOV UR6, 0xd9867500 ;
 Instr 3246 @ 0xcae0 (51936) - MOV R13, RZ ;
 Instr 3247 @ 0xcaf0 (51952) - UMOV UR7, 0x7f88 ;
 Instr 3248 @ 0xcb00 (51968) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3249 @ 0xcb10 (51984) - UMOV UR8, 0xd985f800 ;
 Instr 3250 @ 0xcb20 (52000) - MOV R5, UR5 ;
 Instr 3251 @ 0xcb30 (52016) - UMOV UR9, 0x7f88 ;
 Instr 3252 @ 0xcb40 (52032) - MOV R6, UR6 ;
 Instr 3253 @ 0xcb50 (52048) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3254 @ 0xcb60 (52064) - MOV R10, UR8 ;
 Instr 3255 @ 0xcb70 (52080) - MOV R11, UR9 ;
 Instr 3256 @ 0xcb80 (52096) - MOV R20, 0xda1f63b0 ;
 Instr 3257 @ 0xcb90 (52112) - MOV R21, 0x7f88 ;
 Instr 3258 @ 0xcba0 (52128) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 410 - num instructions 3
 Instr 3259 @ 0xcbb0 (52144) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3260 @ 0xcbc0 (52160) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3261 @ 0xcbd0 (52176) - EXIT ;
Basic block id 411 - num instructions 2
 Instr 3262 @ 0xcbe0 (52192) - STG.E.64.SYS [R8], R16 ;
 Instr 3263 @ 0xcbf0 (52208) - EXIT ;
Basic block id 412 - num instructions 1
 Instr 3264 @ 0xcc00 (52224) - BRA 0xcc00;
inspecting void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MinNanFunctor<double> >, unsigned int, double, 4, 4> >(at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MinNanFunctor<double> >, unsigned int, double, 4, 4>) - number basic blocks 413
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 5 @ 0x50 (80) - S2R R3, SR_TID.Y ;
Inject count_instr before - Instr 19 @ 0x130 (304) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 27 @ 0x1b0 (432) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 35 @ 0x230 (560) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 43 @ 0x2b0 (688) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 67 @ 0x430 (1072) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 75 @ 0x4b0 (1200) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 91 @ 0x5b0 (1456) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 99 @ 0x630 (1584) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 115 @ 0x730 (1840) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 123 @ 0x7b0 (1968) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 131 @ 0x830 (2096) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 139 @ 0x8b0 (2224) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 147 @ 0x930 (2352) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 155 @ 0x9b0 (2480) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 163 @ 0xa30 (2608) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 171 @ 0xab0 (2736) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 195 @ 0xc30 (3120) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 208 @ 0xd00 (3328) - S2R R0, SR_TID.Y ;
Inject count_instr before - Instr 222 @ 0xde0 (3552) - ULDC.U8 UR4, c[0x0][0x1a8] ;
Inject count_instr before - Instr 227 @ 0xe30 (3632) - SHF.R.U64 R8, R4, 0x3, R5 ;
Inject count_instr before - Instr 236 @ 0xec0 (3776) - ISETP.GE.U32.AND P0, PT, R7.reuse, R14, PT ;
Inject count_instr before - Instr 241 @ 0xf10 (3856) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
Inject count_instr before - Instr 247 @ 0xf70 (3952) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
Inject count_instr before - Instr 252 @ 0xfc0 (4032) - BSYNC B3 ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - IADD3 R9, P0, R7, -R14, RZ ;
Inject count_instr before - Instr 267 @ 0x10b0 (4272) - BSYNC B2 ;
Inject count_instr before - Instr 274 @ 0x1120 (4384) - BSYNC B1 ;
Inject count_instr before - Instr 288 @ 0x1200 (4608) - MOV R27, R12 ;
Inject count_instr before - Instr 293 @ 0x1250 (4688) - IMAD.WIDE.U32 R24, R27, 0x20, R4 ;
Inject count_instr before - Instr 316 @ 0x13c0 (5056) - BSYNC B1 ;
Inject count_instr before - Instr 321 @ 0x1410 (5136) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
Inject count_instr before - Instr 326 @ 0x1460 (5216) - BSYNC B1 ;
Inject count_instr before - Instr 332 @ 0x14c0 (5312) - LOP3.LUT R6, R26, 0xfffffffc, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 336 @ 0x1500 (5376) - IMAD.WIDE R4, R9, 0x8, R4 ;
Inject count_instr before - Instr 342 @ 0x1560 (5472) - BSYNC B1 ;
Inject count_instr before - Instr 356 @ 0x1640 (5696) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x2e0] ;
Inject count_instr before - Instr 363 @ 0x16b0 (5808) - IMAD.MOV.U32 R26, RZ, RZ, c[0x0][0x17c] ;
Inject count_instr before - Instr 369 @ 0x1710 (5904) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
Inject count_instr before - Instr 379 @ 0x17b0 (6064) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 388 @ 0x1840 (6208) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 391 @ 0x1870 (6256) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 400 @ 0x1900 (6400) - MOV R18, RZ ;
Inject count_instr before - Instr 410 @ 0x19a0 (6560) - MOV R18, RZ ;
Inject count_instr before - Instr 419 @ 0x1a30 (6704) - MOV R19, R21 ;
Inject count_instr before - Instr 428 @ 0x1ac0 (6848) - MOV R18, RZ ;
Inject count_instr before - Instr 437 @ 0x1b50 (6992) - MOV R19, R21 ;
Inject count_instr before - Instr 446 @ 0x1be0 (7136) - MOV R18, RZ ;
Inject count_instr before - Instr 455 @ 0x1c70 (7280) - MOV R19, R21 ;
Inject count_instr before - Instr 464 @ 0x1d00 (7424) - MOV R18, RZ ;
Inject count_instr before - Instr 473 @ 0x1d90 (7568) - MOV R19, R21 ;
Inject count_instr before - Instr 482 @ 0x1e20 (7712) - MOV R18, RZ ;
Inject count_instr before - Instr 491 @ 0x1eb0 (7856) - MOV R19, R21 ;
Inject count_instr before - Instr 500 @ 0x1f40 (8000) - MOV R18, RZ ;
Inject count_instr before - Instr 509 @ 0x1fd0 (8144) - MOV R19, R21 ;
Inject count_instr before - Instr 518 @ 0x2060 (8288) - MOV R18, RZ ;
Inject count_instr before - Instr 527 @ 0x20f0 (8432) - MOV R19, R21 ;
Inject count_instr before - Instr 536 @ 0x2180 (8576) - MOV R18, RZ ;
Inject count_instr before - Instr 545 @ 0x2210 (8720) - MOV R19, R21 ;
Inject count_instr before - Instr 554 @ 0x22a0 (8864) - MOV R18, RZ ;
Inject count_instr before - Instr 563 @ 0x2330 (9008) - MOV R19, R21 ;
Inject count_instr before - Instr 572 @ 0x23c0 (9152) - MOV R18, RZ ;
Inject count_instr before - Instr 581 @ 0x2450 (9296) - MOV R19, R21 ;
Inject count_instr before - Instr 590 @ 0x24e0 (9440) - MOV R18, RZ ;
Inject count_instr before - Instr 599 @ 0x2570 (9584) - ISETP.NE.AND P0, PT, R20, 0x18, PT ;
Inject count_instr before - Instr 613 @ 0x2650 (9808) - LOP3.LUT R19, R10, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 619 @ 0x26b0 (9904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 628 @ 0x2740 (10048) - MOV R20, RZ ;
Inject count_instr before - Instr 637 @ 0x27d0 (10192) - MOV R21, R23 ;
Inject count_instr before - Instr 646 @ 0x2860 (10336) - MOV R20, RZ ;
Inject count_instr before - Instr 655 @ 0x28f0 (10480) - MOV R21, R23 ;
Inject count_instr before - Instr 664 @ 0x2980 (10624) - MOV R20, RZ ;
Inject count_instr before - Instr 673 @ 0x2a10 (10768) - MOV R21, R23 ;
Inject count_instr before - Instr 682 @ 0x2aa0 (10912) - MOV R20, RZ ;
Inject count_instr before - Instr 691 @ 0x2b30 (11056) - MOV R21, R23 ;
Inject count_instr before - Instr 700 @ 0x2bc0 (11200) - MOV R20, RZ ;
Inject count_instr before - Instr 709 @ 0x2c50 (11344) - MOV R21, R23 ;
Inject count_instr before - Instr 718 @ 0x2ce0 (11488) - MOV R20, RZ ;
Inject count_instr before - Instr 727 @ 0x2d70 (11632) - MOV R21, R23 ;
Inject count_instr before - Instr 736 @ 0x2e00 (11776) - MOV R20, RZ ;
Inject count_instr before - Instr 745 @ 0x2e90 (11920) - MOV R21, R23 ;
Inject count_instr before - Instr 754 @ 0x2f20 (12064) - MOV R20, RZ ;
Inject count_instr before - Instr 763 @ 0x2fb0 (12208) - MOV R21, R23 ;
Inject count_instr before - Instr 772 @ 0x3040 (12352) - MOV R20, RZ ;
Inject count_instr before - Instr 781 @ 0x30d0 (12496) - MOV R21, R23 ;
Inject count_instr before - Instr 790 @ 0x3160 (12640) - MOV R20, RZ ;
Inject count_instr before - Instr 799 @ 0x31f0 (12784) - MOV R21, R23 ;
Inject count_instr before - Instr 808 @ 0x3280 (12928) - MOV R20, RZ ;
Inject count_instr before - Instr 817 @ 0x3310 (13072) - MOV R21, R23 ;
Inject count_instr before - Instr 826 @ 0x33a0 (13216) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 840 @ 0x3480 (13440) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 848 @ 0x3500 (13568) - MOV R10, RZ ;
Inject count_instr before - Instr 857 @ 0x3590 (13712) - MOV R23, R25 ;
Inject count_instr before - Instr 866 @ 0x3620 (13856) - MOV R22, RZ ;
Inject count_instr before - Instr 875 @ 0x36b0 (14000) - MOV R23, R25 ;
Inject count_instr before - Instr 884 @ 0x3740 (14144) - MOV R22, RZ ;
Inject count_instr before - Instr 893 @ 0x37d0 (14288) - MOV R23, R25 ;
Inject count_instr before - Instr 902 @ 0x3860 (14432) - MOV R22, RZ ;
Inject count_instr before - Instr 911 @ 0x38f0 (14576) - MOV R23, R25 ;
Inject count_instr before - Instr 920 @ 0x3980 (14720) - MOV R22, RZ ;
Inject count_instr before - Instr 929 @ 0x3a10 (14864) - MOV R23, R25 ;
Inject count_instr before - Instr 938 @ 0x3aa0 (15008) - MOV R22, RZ ;
Inject count_instr before - Instr 947 @ 0x3b30 (15152) - MOV R23, R25 ;
Inject count_instr before - Instr 956 @ 0x3bc0 (15296) - MOV R22, RZ ;
Inject count_instr before - Instr 965 @ 0x3c50 (15440) - MOV R23, R25 ;
Inject count_instr before - Instr 974 @ 0x3ce0 (15584) - MOV R22, RZ ;
Inject count_instr before - Instr 983 @ 0x3d70 (15728) - MOV R23, R25 ;
Inject count_instr before - Instr 992 @ 0x3e00 (15872) - MOV R22, RZ ;
Inject count_instr before - Instr 1001 @ 0x3e90 (16016) - MOV R23, R25 ;
Inject count_instr before - Instr 1010 @ 0x3f20 (16160) - MOV R22, RZ ;
Inject count_instr before - Instr 1019 @ 0x3fb0 (16304) - MOV R23, R25 ;
Inject count_instr before - Instr 1028 @ 0x4040 (16448) - MOV R22, RZ ;
Inject count_instr before - Instr 1037 @ 0x40d0 (16592) - MOV R23, R25 ;
Inject count_instr before - Instr 1046 @ 0x4160 (16736) - MOV R22, RZ ;
Inject count_instr before - Instr 1055 @ 0x41f0 (16880) - ISETP.NE.AND P0, PT, R24, 0x18, PT ;
Inject count_instr before - Instr 1069 @ 0x42d0 (17104) - LOP3.LUT R23, R10, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1075 @ 0x4330 (17200) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 1084 @ 0x43c0 (17344) - MOV R24, RZ ;
Inject count_instr before - Instr 1093 @ 0x4450 (17488) - MOV R25, R27 ;
Inject count_instr before - Instr 1102 @ 0x44e0 (17632) - MOV R24, RZ ;
Inject count_instr before - Instr 1111 @ 0x4570 (17776) - MOV R25, R27 ;
Inject count_instr before - Instr 1120 @ 0x4600 (17920) - MOV R24, RZ ;
Inject count_instr before - Instr 1129 @ 0x4690 (18064) - MOV R25, R27 ;
Inject count_instr before - Instr 1138 @ 0x4720 (18208) - MOV R24, RZ ;
Inject count_instr before - Instr 1147 @ 0x47b0 (18352) - MOV R25, R27 ;
Inject count_instr before - Instr 1156 @ 0x4840 (18496) - MOV R24, RZ ;
Inject count_instr before - Instr 1165 @ 0x48d0 (18640) - MOV R25, R27 ;
Inject count_instr before - Instr 1174 @ 0x4960 (18784) - MOV R24, RZ ;
Inject count_instr before - Instr 1183 @ 0x49f0 (18928) - MOV R25, R27 ;
Inject count_instr before - Instr 1192 @ 0x4a80 (19072) - MOV R24, RZ ;
Inject count_instr before - Instr 1201 @ 0x4b10 (19216) - MOV R25, R27 ;
Inject count_instr before - Instr 1210 @ 0x4ba0 (19360) - MOV R24, RZ ;
Inject count_instr before - Instr 1219 @ 0x4c30 (19504) - MOV R25, R27 ;
Inject count_instr before - Instr 1228 @ 0x4cc0 (19648) - MOV R24, RZ ;
Inject count_instr before - Instr 1237 @ 0x4d50 (19792) - MOV R25, R27 ;
Inject count_instr before - Instr 1246 @ 0x4de0 (19936) - MOV R24, RZ ;
Inject count_instr before - Instr 1255 @ 0x4e70 (20080) - MOV R25, R27 ;
Inject count_instr before - Instr 1264 @ 0x4f00 (20224) - MOV R24, RZ ;
Inject count_instr before - Instr 1273 @ 0x4f90 (20368) - MOV R25, R27 ;
Inject count_instr before - Instr 1282 @ 0x5020 (20512) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1296 @ 0x5100 (20736) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1321 @ 0x5290 (21136) - BSYNC B2 ;
Inject count_instr before - Instr 1322 @ 0x52a0 (21152) - BSYNC B1 ;
Inject count_instr before - Instr 1327 @ 0x52f0 (21232) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x1b0], PT ;
Inject count_instr before - Instr 1330 @ 0x5320 (21280) - MOV R10, RZ ;
Inject count_instr before - Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1347 @ 0x5430 (21552) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1355 @ 0x54b0 (21680) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1363 @ 0x5530 (21808) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1371 @ 0x55b0 (21936) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1379 @ 0x5630 (22064) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1387 @ 0x56b0 (22192) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1395 @ 0x5730 (22320) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1403 @ 0x57b0 (22448) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1411 @ 0x5830 (22576) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1419 @ 0x58b0 (22704) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1427 @ 0x5930 (22832) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1435 @ 0x59b0 (22960) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1443 @ 0x5a30 (23088) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1451 @ 0x5ab0 (23216) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1459 @ 0x5b30 (23344) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1467 @ 0x5bb0 (23472) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1475 @ 0x5c30 (23600) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1483 @ 0x5cb0 (23728) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1491 @ 0x5d30 (23856) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1499 @ 0x5db0 (23984) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1507 @ 0x5e30 (24112) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1515 @ 0x5eb0 (24240) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1528 @ 0x5f80 (24448) - LOP3.LUT R19, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1533 @ 0x5fd0 (24528) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
Inject count_instr before - Instr 1535 @ 0x5ff0 (24560) - MOV R6, RZ ;
Inject count_instr before - Instr 1537 @ 0x6010 (24592) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1546 @ 0x60a0 (24736) - MOV R20, RZ ;
Inject count_instr before - Instr 1554 @ 0x6120 (24864) - MOV R28, RZ ;
Inject count_instr before - Instr 1562 @ 0x61a0 (24992) - MOV R20, RZ ;
Inject count_instr before - Instr 1570 @ 0x6220 (25120) - MOV R28, RZ ;
Inject count_instr before - Instr 1578 @ 0x62a0 (25248) - MOV R20, RZ ;
Inject count_instr before - Instr 1586 @ 0x6320 (25376) - MOV R28, RZ ;
Inject count_instr before - Instr 1594 @ 0x63a0 (25504) - MOV R20, RZ ;
Inject count_instr before - Instr 1602 @ 0x6420 (25632) - MOV R28, RZ ;
Inject count_instr before - Instr 1610 @ 0x64a0 (25760) - MOV R20, RZ ;
Inject count_instr before - Instr 1618 @ 0x6520 (25888) - MOV R28, RZ ;
Inject count_instr before - Instr 1626 @ 0x65a0 (26016) - MOV R20, RZ ;
Inject count_instr before - Instr 1634 @ 0x6620 (26144) - MOV R28, RZ ;
Inject count_instr before - Instr 1642 @ 0x66a0 (26272) - MOV R20, RZ ;
Inject count_instr before - Instr 1650 @ 0x6720 (26400) - MOV R28, RZ ;
Inject count_instr before - Instr 1658 @ 0x67a0 (26528) - MOV R20, RZ ;
Inject count_instr before - Instr 1666 @ 0x6820 (26656) - MOV R28, RZ ;
Inject count_instr before - Instr 1674 @ 0x68a0 (26784) - MOV R20, RZ ;
Inject count_instr before - Instr 1682 @ 0x6920 (26912) - MOV R28, RZ ;
Inject count_instr before - Instr 1690 @ 0x69a0 (27040) - MOV R20, RZ ;
Inject count_instr before - Instr 1698 @ 0x6a20 (27168) - MOV R28, RZ ;
Inject count_instr before - Instr 1706 @ 0x6aa0 (27296) - MOV R20, RZ ;
Inject count_instr before - Instr 1714 @ 0x6b20 (27424) - MOV R28, RZ ;
Inject count_instr before - Instr 1722 @ 0x6ba0 (27552) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1735 @ 0x6c70 (27760) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1742 @ 0x6ce0 (27872) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 1744 @ 0x6d00 (27904) - MOV R26, RZ ;
Inject count_instr before - Instr 1753 @ 0x6d90 (28048) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1761 @ 0x6e10 (28176) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1769 @ 0x6e90 (28304) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1777 @ 0x6f10 (28432) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1785 @ 0x6f90 (28560) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1793 @ 0x7010 (28688) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1801 @ 0x7090 (28816) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1809 @ 0x7110 (28944) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1817 @ 0x7190 (29072) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1825 @ 0x7210 (29200) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1841 @ 0x7310 (29456) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1849 @ 0x7390 (29584) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1857 @ 0x7410 (29712) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1865 @ 0x7490 (29840) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1873 @ 0x7510 (29968) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1881 @ 0x7590 (30096) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1889 @ 0x7610 (30224) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1897 @ 0x7690 (30352) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1905 @ 0x7710 (30480) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1913 @ 0x7790 (30608) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1921 @ 0x7810 (30736) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1929 @ 0x7890 (30864) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1942 @ 0x7960 (31072) - LOP3.LUT R23, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1949 @ 0x79d0 (31184) - MOV R6, RZ ;
Inject count_instr before - Instr 1951 @ 0x79f0 (31216) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1960 @ 0x7a80 (31360) - MOV R24, RZ ;
Inject count_instr before - Instr 1968 @ 0x7b00 (31488) - MOV R26, RZ ;
Inject count_instr before - Instr 1976 @ 0x7b80 (31616) - MOV R24, RZ ;
Inject count_instr before - Instr 1984 @ 0x7c00 (31744) - MOV R26, RZ ;
Inject count_instr before - Instr 1992 @ 0x7c80 (31872) - MOV R24, RZ ;
Inject count_instr before - Instr 2000 @ 0x7d00 (32000) - MOV R26, RZ ;
Inject count_instr before - Instr 2008 @ 0x7d80 (32128) - MOV R24, RZ ;
Inject count_instr before - Instr 2016 @ 0x7e00 (32256) - MOV R26, RZ ;
Inject count_instr before - Instr 2024 @ 0x7e80 (32384) - MOV R24, RZ ;
Inject count_instr before - Instr 2032 @ 0x7f00 (32512) - MOV R26, RZ ;
Inject count_instr before - Instr 2040 @ 0x7f80 (32640) - MOV R24, RZ ;
Inject count_instr before - Instr 2048 @ 0x8000 (32768) - MOV R26, RZ ;
Inject count_instr before - Instr 2056 @ 0x8080 (32896) - MOV R24, RZ ;
Inject count_instr before - Instr 2064 @ 0x8100 (33024) - MOV R26, RZ ;
Inject count_instr before - Instr 2072 @ 0x8180 (33152) - MOV R24, RZ ;
Inject count_instr before - Instr 2080 @ 0x8200 (33280) - MOV R26, RZ ;
Inject count_instr before - Instr 2088 @ 0x8280 (33408) - MOV R24, RZ ;
Inject count_instr before - Instr 2096 @ 0x8300 (33536) - MOV R26, RZ ;
Inject count_instr before - Instr 2104 @ 0x8380 (33664) - MOV R24, RZ ;
Inject count_instr before - Instr 2112 @ 0x8400 (33792) - MOV R26, RZ ;
Inject count_instr before - Instr 2120 @ 0x8480 (33920) - MOV R24, RZ ;
Inject count_instr before - Instr 2128 @ 0x8500 (34048) - MOV R26, RZ ;
Inject count_instr before - Instr 2136 @ 0x8580 (34176) - ISETP.NE.AND P1, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 2149 @ 0x8650 (34384) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2153 @ 0x8690 (34448) - BSYNC B1 ;
Inject count_instr before - Instr 2157 @ 0x86d0 (34512) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2163 @ 0x8730 (34608) - @P1 BRA 0x8870 ;
Inject count_instr before - Instr 2164 @ 0x8740 (34624) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2171 @ 0x87b0 (34736) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2183 @ 0x8870 (34928) - BSYNC B1 ;
Inject count_instr before - Instr 2197 @ 0x8950 (35152) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
Inject count_instr before - Instr 2207 @ 0x89f0 (35312) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 2214 @ 0x8a60 (35424) - MOV R15, c[0x0][0x16c] ;
Inject count_instr before - Instr 2215 @ 0x8a70 (35440) - IADD3 R21, R11, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2250 @ 0x8ca0 (36000) - BSYNC B2 ;
Inject count_instr before - Instr 2255 @ 0x8cf0 (36080) - BSYNC B1 ;
Inject count_instr before - Instr 2260 @ 0x8d40 (36160) - IMAD R27, R6, R11, RZ ;
Inject count_instr before - Instr 2266 @ 0x8da0 (36256) - IMAD R21, R6, R25, RZ ;
Inject count_instr before - Instr 2272 @ 0x8e00 (36352) - IADD3 R29, R25, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2280 @ 0x8e80 (36480) - BSYNC B1 ;
Inject count_instr before - Instr 2284 @ 0x8ec0 (36544) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2290 @ 0x8f20 (36640) - @P1 BRA 0x9060 ;
Inject count_instr before - Instr 2291 @ 0x8f30 (36656) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2298 @ 0x8fa0 (36768) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2310 @ 0x9060 (36960) - BSYNC B1 ;
Inject count_instr before - Instr 2324 @ 0x9140 (37184) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x17c] ;
Inject count_instr before - Instr 2339 @ 0x9230 (37424) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 2347 @ 0x92b0 (37552) - IADD3 R19, R25.reuse, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2378 @ 0x94a0 (38048) - BSYNC B2 ;
Inject count_instr before - Instr 2379 @ 0x94b0 (38064) - BSYNC B1 ;
Inject count_instr before - Instr 2384 @ 0x9500 (38144) - IMAD.WIDE.U32 R16, R25, 0x8, R4 ;
Inject count_instr before - Instr 2389 @ 0x9550 (38224) - IMAD.WIDE.U32 R18, R27, 0x8, R4 ;
Inject count_instr before - Instr 2394 @ 0x95a0 (38304) - IADD3 R29, R27.reuse, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2400 @ 0x9600 (38400) - BSYNC B1 ;
Inject count_instr before - Instr 2404 @ 0x9640 (38464) - IADD3 R4, R25, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2410 @ 0x96a0 (38560) - @P1 BRA 0x97e0 ;
Inject count_instr before - Instr 2411 @ 0x96b0 (38576) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2418 @ 0x9720 (38688) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2430 @ 0x97e0 (38880) - BSYNC B1 ;
Inject count_instr before - Instr 2443 @ 0x98b0 (39088) - BSYNC B0 ;
Inject count_instr before - Instr 2446 @ 0x98e0 (39136) - IMAD R9, R0, c[0x0][0x0], R7 ;
Inject count_instr before - Instr 2452 @ 0x9940 (39232) - IMAD.U32 R11, RZ, RZ, UR4 ;
Inject count_instr before - Instr 2453 @ 0x9950 (39248) - IADD3 R4, R0, R11, RZ ;
Inject count_instr before - Instr 2469 @ 0x9a50 (39504) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 2471 @ 0x9a70 (39536) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x0] ;
Inject count_instr before - Instr 2475 @ 0x9ab0 (39600) - IMAD R9, R0, c[0x0][0x0], R7 ;
Inject count_instr before - Instr 2482 @ 0x9b20 (39712) - MOV R6, R4 ;
Inject count_instr before - Instr 2484 @ 0x9b40 (39744) - IMAD.IADD R4, R7, 0x1, R6 ;
Inject count_instr before - Instr 2500 @ 0x9c40 (40000) - IMAD.MOV.U32 R6, RZ, RZ, 0x20 ;
Inject count_instr before - Instr 2501 @ 0x9c50 (40016) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 2504 @ 0x9c80 (40064) - MOV R9, 0x1 ;
Inject count_instr before - Instr 2505 @ 0x9c90 (40080) - SHFL.DOWN PT, R5, R17, R9, 0x1f ;
Inject count_instr before - Instr 2516 @ 0x9d40 (40256) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x344], PT ;
Inject count_instr before - Instr 2519 @ 0x9d70 (40304) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 2528 @ 0x9e00 (40448) - MOV R4, RZ ;
Inject count_instr before - Instr 2537 @ 0x9e90 (40592) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2545 @ 0x9f10 (40720) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2553 @ 0x9f90 (40848) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2561 @ 0xa010 (40976) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2569 @ 0xa090 (41104) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2577 @ 0xa110 (41232) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2585 @ 0xa190 (41360) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2593 @ 0xa210 (41488) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2601 @ 0xa290 (41616) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2609 @ 0xa310 (41744) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2617 @ 0xa390 (41872) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2625 @ 0xa410 (42000) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2633 @ 0xa490 (42128) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2641 @ 0xa510 (42256) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2649 @ 0xa590 (42384) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2657 @ 0xa610 (42512) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2665 @ 0xa690 (42640) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2673 @ 0xa710 (42768) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2681 @ 0xa790 (42896) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2689 @ 0xa810 (43024) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2697 @ 0xa890 (43152) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2705 @ 0xa910 (43280) - ISETP.NE.AND P0, PT, R6, 0x18, PT ;
Inject count_instr before - Instr 2718 @ 0xa9e0 (43488) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x558], PT ;
Inject count_instr before - Instr 2729 @ 0xaa90 (43664) - S2R R2, SR_CTAID.X ;
Inject count_instr before - Instr 2735 @ 0xaaf0 (43760) - MOV R8, RZ ;
Inject count_instr before - Instr 2744 @ 0xab80 (43904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2752 @ 0xac00 (44032) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2760 @ 0xac80 (44160) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2768 @ 0xad00 (44288) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2776 @ 0xad80 (44416) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2784 @ 0xae00 (44544) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2792 @ 0xae80 (44672) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2800 @ 0xaf00 (44800) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2808 @ 0xaf80 (44928) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2816 @ 0xb000 (45056) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2824 @ 0xb080 (45184) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2832 @ 0xb100 (45312) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2840 @ 0xb180 (45440) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2848 @ 0xb200 (45568) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2856 @ 0xb280 (45696) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2864 @ 0xb300 (45824) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2872 @ 0xb380 (45952) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2880 @ 0xb400 (46080) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2888 @ 0xb480 (46208) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2896 @ 0xb500 (46336) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2904 @ 0xb580 (46464) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2912 @ 0xb600 (46592) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2920 @ 0xb680 (46720) - ISETP.NE.AND P0, PT, R14, 0x18, PT ;
Inject count_instr before - Instr 2933 @ 0xb750 (46928) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 2940 @ 0xb7c0 (47040) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x18c], PT ;
Inject count_instr before - Instr 2945 @ 0xb810 (47120) - BSYNC B0 ;
Inject count_instr before - Instr 2964 @ 0xb940 (47424) - S2R R3, SR_LANEID ;
Inject count_instr before - Instr 2983 @ 0xba70 (47728) - BSYNC B0 ;
Inject count_instr before - Instr 2990 @ 0xbae0 (47840) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 2999 @ 0xbb70 (47984) - IMAD R3, R0, c[0x0][0x0], R7 ;
Inject count_instr before - Instr 3004 @ 0xbbc0 (48064) - MOV R11, 0x8 ;
Inject count_instr before - Instr 3016 @ 0xbc80 (48256) - BSYNC B1 ;
Inject count_instr before - Instr 3018 @ 0xbca0 (48288) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x184], PT ;
Inject count_instr before - Instr 3020 @ 0xbcc0 (48320) - MOV R3, R0 ;
Inject count_instr before - Instr 3021 @ 0xbcd0 (48336) - IMAD R10, R2, c[0x0][0x10], R3 ;
Inject count_instr before - Instr 3033 @ 0xbd90 (48528) - BSYNC B0 ;
Inject count_instr before - Instr 3041 @ 0xbe10 (48656) - IMAD.U32 R11, RZ, RZ, UR4 ;
Inject count_instr before - Instr 3042 @ 0xbe20 (48672) - IADD3 R2, R0, R11, RZ ;
Inject count_instr before - Instr 3058 @ 0xbf20 (48928) - LEA R11, R13, 0x10, 0x3 ;
Inject count_instr before - Instr 3060 @ 0xbf40 (48960) - MOV R2, c[0x0][0x0] ;
Inject count_instr before - Instr 3064 @ 0xbf80 (49024) - LEA.HI R2, R2, c[0x0][0x0], RZ, 0x1 ;
Inject count_instr before - Instr 3070 @ 0xbfe0 (49120) - MOV R0, R2 ;
Inject count_instr before - Instr 3071 @ 0xbff0 (49136) - IADD3 R2, R7, R0, RZ ;
Inject count_instr before - Instr 3087 @ 0xc0f0 (49392) - IMAD.MOV.U32 R0, RZ, RZ, 0x20 ;
Inject count_instr before - Instr 3088 @ 0xc100 (49408) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 3091 @ 0xc130 (49456) - MOV R7, 0x1 ;
Inject count_instr before - Instr 3092 @ 0xc140 (49472) - SHFL.DOWN PT, R3, R17, R7, 0x1f ;
Inject count_instr before - Instr 3103 @ 0xc1f0 (49648) - @!P2 EXIT ;
Inject count_instr before - Instr 3104 @ 0xc200 (49664) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
Inject count_instr before - Instr 3108 @ 0xc240 (49728) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3110 @ 0xc260 (49760) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 3115 @ 0xc2b0 (49840) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3118 @ 0xc2e0 (49888) - MOV R0, 0x1 ;
Inject count_instr before - Instr 3121 @ 0xc310 (49936) - UMOV UR8, 0xd9867700 ;
Inject count_instr before - Instr 3139 @ 0xc430 (50224) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3142 @ 0xc460 (50272) - STG.E.64.SYS [R4], R16 ;
Inject count_instr before - Instr 3144 @ 0xc480 (50304) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3146 @ 0xc4a0 (50336) - LDG.E.64.SYS R2, [R8] ;
Inject count_instr before - Instr 3151 @ 0xc4f0 (50416) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3154 @ 0xc520 (50464) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 3157 @ 0xc550 (50512) - UMOV UR4, 0xd9867700 ;
Inject count_instr before - Instr 3175 @ 0xc670 (50800) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3178 @ 0xc6a0 (50848) - STG.E.64.SYS [R8], R16 ;
Inject count_instr before - Instr 3180 @ 0xc6c0 (50880) - ISETP.GE.AND P0, PT, R3, c[0x0][0x178], PT ;
Inject count_instr before - Instr 3182 @ 0xc6e0 (50912) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
Inject count_instr before - Instr 3185 @ 0xc710 (50960) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
Inject count_instr before - Instr 3188 @ 0xc740 (51008) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
Inject count_instr before - Instr 3192 @ 0xc780 (51072) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3194 @ 0xc7a0 (51104) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 3199 @ 0xc7f0 (51184) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3202 @ 0xc820 (51232) - MOV R0, 0x1 ;
Inject count_instr before - Instr 3205 @ 0xc850 (51280) - UMOV UR4, 0xd9867700 ;
Inject count_instr before - Instr 3223 @ 0xc970 (51568) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3226 @ 0xc9a0 (51616) - STG.E.64.SYS [R4], R16 ;
Inject count_instr before - Instr 3228 @ 0xc9c0 (51648) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3230 @ 0xc9e0 (51680) - LDG.E.64.SYS R2, [R8] ;
Inject count_instr before - Instr 3235 @ 0xca30 (51760) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3238 @ 0xca60 (51808) - MOV R0, 0x1 ;
Inject count_instr before - Instr 3241 @ 0xca90 (51856) - UMOV UR4, 0xd9867700 ;
Inject count_instr before - Instr 3259 @ 0xcbb0 (52144) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3262 @ 0xcbe0 (52192) - STG.E.64.SYS [R8], R16 ;
Inject count_instr before - Instr 3264 @ 0xcc00 (52224) - BRA 0xcc00;
kernel 280 - _ZN2at6native13reduce_kernelILi512ELi1ENS0_8ReduceOpIdNS0_14func_wrapper_tIdNS0_13MinNanFunctorIdEEEEjdLi4ELi4EEEEEvT1_ - #thread-blocks 1,  kernel instructions 1067, total instructions 65671466
Function void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MaxNanFunctor<double> >, unsigned int, double, 4, 4> >(at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MaxNanFunctor<double> >, unsigned int, double, 4, 4>)
Basic block id 0 - num instructions 5
 Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R7, SR_TID.X ;
 Instr 2 @ 0x20 (32) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x344], PT ;
 Instr 3 @ 0x30 (48) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 4 @ 0x40 (64) - @!P0 BRA 0xd00 ;
Basic block id 1 - num instructions 14
 Instr 5 @ 0x50 (80) - S2R R3, SR_TID.Y ;
 Instr 6 @ 0x60 (96) - IMAD R0, R7, c[0x0][0x194], RZ ;
 Instr 7 @ 0x70 (112) - MOV R2, RZ ;
 Instr 8 @ 0x80 (128) - S2R R5, SR_CTAID.X ;
 Instr 9 @ 0x90 (144) - IMAD R0, R3, c[0x0][0x198], R0 ;
 Instr 10 @ 0xa0 (160) - IMAD R3, R5, c[0x0][0x180], R0 ;
 Instr 11 @ 0xb0 (176) - IMAD.MOV.U32 R0, RZ, RZ, c[0x0][0x344] ;
 Instr 12 @ 0xc0 (192) - IMAD.HI.U32 R4, R3, c[0x0][0x34c], R2 ;
 Instr 13 @ 0xd0 (208) - ISETP.NE.AND P0, PT, R0, 0x1, PT ;
 Instr 14 @ 0xe0 (224) - SHF.R.U32.HI R5, RZ, c[0x0][0x350], R4 ;
 Instr 15 @ 0xf0 (240) - IADD3 R2, -R5, RZ, RZ ;
 Instr 16 @ 0x100 (256) - IMAD R2, R2, c[0x0][0x348], R3 ;
 Instr 17 @ 0x110 (272) - IMAD R2, R2, c[0x0][0x478], RZ ;
 Instr 18 @ 0x120 (288) - @!P0 BRA 0xd00 ;
Basic block id 2 - num instructions 8
 Instr 19 @ 0x130 (304) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 20 @ 0x140 (320) - ISETP.NE.AND P0, PT, R0, 0x2, PT ;
 Instr 21 @ 0x150 (336) - IMAD.HI.U32 R8, R5, c[0x0][0x358], R4 ;
 Instr 22 @ 0x160 (352) - SHF.R.U32.HI R9, RZ, c[0x0][0x35c], R8 ;
 Instr 23 @ 0x170 (368) - IADD3 R3, -R9, RZ, RZ ;
 Instr 24 @ 0x180 (384) - IMAD R5, R3, c[0x0][0x354], R5 ;
 Instr 25 @ 0x190 (400) - IMAD R2, R5, c[0x0][0x480], R2 ;
 Instr 26 @ 0x1a0 (416) - @!P0 BRA 0xd00 ;
Basic block id 3 - num instructions 8
 Instr 27 @ 0x1b0 (432) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 28 @ 0x1c0 (448) - ISETP.NE.AND P0, PT, R0, 0x3, PT ;
 Instr 29 @ 0x1d0 (464) - IMAD.HI.U32 R4, R9, c[0x0][0x364], R8 ;
 Instr 30 @ 0x1e0 (480) - SHF.R.U32.HI R5, RZ, c[0x0][0x368], R4 ;
 Instr 31 @ 0x1f0 (496) - IADD3 R3, -R5, RZ, RZ ;
 Instr 32 @ 0x200 (512) - IMAD R9, R3, c[0x0][0x360], R9 ;
 Instr 33 @ 0x210 (528) - IMAD R2, R9, c[0x0][0x488], R2 ;
 Instr 34 @ 0x220 (544) - @!P0 BRA 0xd00 ;
Basic block id 4 - num instructions 8
 Instr 35 @ 0x230 (560) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 36 @ 0x240 (576) - ISETP.NE.AND P0, PT, R0, 0x4, PT ;
 Instr 37 @ 0x250 (592) - IMAD.HI.U32 R8, R5, c[0x0][0x370], R4 ;
 Instr 38 @ 0x260 (608) - SHF.R.U32.HI R9, RZ, c[0x0][0x374], R8 ;
 Instr 39 @ 0x270 (624) - IADD3 R3, -R9, RZ, RZ ;
 Instr 40 @ 0x280 (640) - IMAD R5, R3, c[0x0][0x36c], R5 ;
 Instr 41 @ 0x290 (656) - IMAD R2, R5, c[0x0][0x490], R2 ;
 Instr 42 @ 0x2a0 (672) - @!P0 BRA 0xd00 ;
Basic block id 5 - num instructions 8
 Instr 43 @ 0x2b0 (688) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 44 @ 0x2c0 (704) - ISETP.NE.AND P0, PT, R0, 0x5, PT ;
 Instr 45 @ 0x2d0 (720) - IMAD.HI.U32 R4, R9, c[0x0][0x37c], R8 ;
 Instr 46 @ 0x2e0 (736) - SHF.R.U32.HI R5, RZ, c[0x0][0x380], R4 ;
 Instr 47 @ 0x2f0 (752) - IADD3 R3, -R5, RZ, RZ ;
 Instr 48 @ 0x300 (768) - IMAD R9, R3, c[0x0][0x378], R9 ;
 Instr 49 @ 0x310 (784) - IMAD R2, R9, c[0x0][0x498], R2 ;
 Instr 50 @ 0x320 (800) - @!P0 BRA 0xd00 ;
Basic block id 6 - num instructions 8
 Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 52 @ 0x340 (832) - ISETP.NE.AND P0, PT, R0, 0x6, PT ;
 Instr 53 @ 0x350 (848) - IMAD.HI.U32 R8, R5, c[0x0][0x388], R4 ;
 Instr 54 @ 0x360 (864) - SHF.R.U32.HI R9, RZ, c[0x0][0x38c], R8 ;
 Instr 55 @ 0x370 (880) - IADD3 R3, -R9, RZ, RZ ;
 Instr 56 @ 0x380 (896) - IMAD R5, R3, c[0x0][0x384], R5 ;
 Instr 57 @ 0x390 (912) - IMAD R2, R5, c[0x0][0x4a0], R2 ;
 Instr 58 @ 0x3a0 (928) - @!P0 BRA 0xd00 ;
Basic block id 7 - num instructions 8
 Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 60 @ 0x3c0 (960) - ISETP.NE.AND P0, PT, R0, 0x7, PT ;
 Instr 61 @ 0x3d0 (976) - IMAD.HI.U32 R4, R9, c[0x0][0x394], R8 ;
 Instr 62 @ 0x3e0 (992) - SHF.R.U32.HI R5, RZ, c[0x0][0x398], R4 ;
 Instr 63 @ 0x3f0 (1008) - IADD3 R3, -R5, RZ, RZ ;
 Instr 64 @ 0x400 (1024) - IMAD R9, R3, c[0x0][0x390], R9 ;
 Instr 65 @ 0x410 (1040) - IMAD R2, R9, c[0x0][0x4a8], R2 ;
 Instr 66 @ 0x420 (1056) - @!P0 BRA 0xd00 ;
Basic block id 8 - num instructions 8
 Instr 67 @ 0x430 (1072) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 68 @ 0x440 (1088) - ISETP.NE.AND P0, PT, R0, 0x8, PT ;
 Instr 69 @ 0x450 (1104) - IMAD.HI.U32 R8, R5, c[0x0][0x3a0], R4 ;
 Instr 70 @ 0x460 (1120) - SHF.R.U32.HI R9, RZ, c[0x0][0x3a4], R8 ;
 Instr 71 @ 0x470 (1136) - IADD3 R3, -R9, RZ, RZ ;
 Instr 72 @ 0x480 (1152) - IMAD R5, R3, c[0x0][0x39c], R5 ;
 Instr 73 @ 0x490 (1168) - IMAD R2, R5, c[0x0][0x4b0], R2 ;
 Instr 74 @ 0x4a0 (1184) - @!P0 BRA 0xd00 ;
Basic block id 9 - num instructions 8
 Instr 75 @ 0x4b0 (1200) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 76 @ 0x4c0 (1216) - ISETP.NE.AND P0, PT, R0, 0x9, PT ;
 Instr 77 @ 0x4d0 (1232) - IMAD.HI.U32 R4, R9, c[0x0][0x3ac], R8 ;
 Instr 78 @ 0x4e0 (1248) - SHF.R.U32.HI R5, RZ, c[0x0][0x3b0], R4 ;
 Instr 79 @ 0x4f0 (1264) - IADD3 R3, -R5, RZ, RZ ;
 Instr 80 @ 0x500 (1280) - IMAD R9, R3, c[0x0][0x3a8], R9 ;
 Instr 81 @ 0x510 (1296) - IMAD R2, R9, c[0x0][0x4b8], R2 ;
 Instr 82 @ 0x520 (1312) - @!P0 BRA 0xd00 ;
Basic block id 10 - num instructions 8
 Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 84 @ 0x540 (1344) - ISETP.NE.AND P0, PT, R0, 0xa, PT ;
 Instr 85 @ 0x550 (1360) - IMAD.HI.U32 R8, R5, c[0x0][0x3b8], R4 ;
 Instr 86 @ 0x560 (1376) - SHF.R.U32.HI R9, RZ, c[0x0][0x3bc], R8 ;
 Instr 87 @ 0x570 (1392) - IADD3 R3, -R9, RZ, RZ ;
 Instr 88 @ 0x580 (1408) - IMAD R5, R3, c[0x0][0x3b4], R5 ;
 Instr 89 @ 0x590 (1424) - IMAD R2, R5, c[0x0][0x4c0], R2 ;
 Instr 90 @ 0x5a0 (1440) - @!P0 BRA 0xd00 ;
Basic block id 11 - num instructions 8
 Instr 91 @ 0x5b0 (1456) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 92 @ 0x5c0 (1472) - ISETP.NE.AND P0, PT, R0, 0xb, PT ;
 Instr 93 @ 0x5d0 (1488) - IMAD.HI.U32 R4, R9, c[0x0][0x3c4], R8 ;
 Instr 94 @ 0x5e0 (1504) - SHF.R.U32.HI R5, RZ, c[0x0][0x3c8], R4 ;
 Instr 95 @ 0x5f0 (1520) - IADD3 R3, -R5, RZ, RZ ;
 Instr 96 @ 0x600 (1536) - IMAD R9, R3, c[0x0][0x3c0], R9 ;
 Instr 97 @ 0x610 (1552) - IMAD R2, R9, c[0x0][0x4c8], R2 ;
 Instr 98 @ 0x620 (1568) - @!P0 BRA 0xd00 ;
Basic block id 12 - num instructions 8
 Instr 99 @ 0x630 (1584) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 100 @ 0x640 (1600) - ISETP.NE.AND P0, PT, R0, 0xc, PT ;
 Instr 101 @ 0x650 (1616) - IMAD.HI.U32 R8, R5, c[0x0][0x3d0], R4 ;
 Instr 102 @ 0x660 (1632) - SHF.R.U32.HI R9, RZ, c[0x0][0x3d4], R8 ;
 Instr 103 @ 0x670 (1648) - IADD3 R3, -R9, RZ, RZ ;
 Instr 104 @ 0x680 (1664) - IMAD R5, R3, c[0x0][0x3cc], R5 ;
 Instr 105 @ 0x690 (1680) - IMAD R2, R5, c[0x0][0x4d0], R2 ;
 Instr 106 @ 0x6a0 (1696) - @!P0 BRA 0xd00 ;
Basic block id 13 - num instructions 8
 Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 108 @ 0x6c0 (1728) - ISETP.NE.AND P0, PT, R0, 0xd, PT ;
 Instr 109 @ 0x6d0 (1744) - IMAD.HI.U32 R4, R9, c[0x0][0x3dc], R8 ;
 Instr 110 @ 0x6e0 (1760) - SHF.R.U32.HI R5, RZ, c[0x0][0x3e0], R4 ;
 Instr 111 @ 0x6f0 (1776) - IADD3 R3, -R5, RZ, RZ ;
 Instr 112 @ 0x700 (1792) - IMAD R9, R3, c[0x0][0x3d8], R9 ;
 Instr 113 @ 0x710 (1808) - IMAD R2, R9, c[0x0][0x4d8], R2 ;
 Instr 114 @ 0x720 (1824) - @!P0 BRA 0xd00 ;
Basic block id 14 - num instructions 8
 Instr 115 @ 0x730 (1840) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 116 @ 0x740 (1856) - ISETP.NE.AND P0, PT, R0, 0xe, PT ;
 Instr 117 @ 0x750 (1872) - IMAD.HI.U32 R8, R5, c[0x0][0x3e8], R4 ;
 Instr 118 @ 0x760 (1888) - SHF.R.U32.HI R9, RZ, c[0x0][0x3ec], R8 ;
 Instr 119 @ 0x770 (1904) - IADD3 R3, -R9, RZ, RZ ;
 Instr 120 @ 0x780 (1920) - IMAD R5, R3, c[0x0][0x3e4], R5 ;
 Instr 121 @ 0x790 (1936) - IMAD R2, R5, c[0x0][0x4e0], R2 ;
 Instr 122 @ 0x7a0 (1952) - @!P0 BRA 0xd00 ;
Basic block id 15 - num instructions 8
 Instr 123 @ 0x7b0 (1968) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 124 @ 0x7c0 (1984) - ISETP.NE.AND P0, PT, R0, 0xf, PT ;
 Instr 125 @ 0x7d0 (2000) - IMAD.HI.U32 R4, R9, c[0x0][0x3f4], R8 ;
 Instr 126 @ 0x7e0 (2016) - SHF.R.U32.HI R5, RZ, c[0x0][0x3f8], R4 ;
 Instr 127 @ 0x7f0 (2032) - IADD3 R3, -R5, RZ, RZ ;
 Instr 128 @ 0x800 (2048) - IMAD R9, R3, c[0x0][0x3f0], R9 ;
 Instr 129 @ 0x810 (2064) - IMAD R2, R9, c[0x0][0x4e8], R2 ;
 Instr 130 @ 0x820 (2080) - @!P0 BRA 0xd00 ;
Basic block id 16 - num instructions 8
 Instr 131 @ 0x830 (2096) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 132 @ 0x840 (2112) - ISETP.NE.AND P0, PT, R0, 0x10, PT ;
 Instr 133 @ 0x850 (2128) - IMAD.HI.U32 R8, R5, c[0x0][0x400], R4 ;
 Instr 134 @ 0x860 (2144) - SHF.R.U32.HI R9, RZ, c[0x0][0x404], R8 ;
 Instr 135 @ 0x870 (2160) - IADD3 R3, -R9, RZ, RZ ;
 Instr 136 @ 0x880 (2176) - IMAD R5, R3, c[0x0][0x3fc], R5 ;
 Instr 137 @ 0x890 (2192) - IMAD R2, R5, c[0x0][0x4f0], R2 ;
 Instr 138 @ 0x8a0 (2208) - @!P0 BRA 0xd00 ;
Basic block id 17 - num instructions 8
 Instr 139 @ 0x8b0 (2224) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 140 @ 0x8c0 (2240) - ISETP.NE.AND P0, PT, R0, 0x11, PT ;
 Instr 141 @ 0x8d0 (2256) - IMAD.HI.U32 R4, R9, c[0x0][0x40c], R8 ;
 Instr 142 @ 0x8e0 (2272) - SHF.R.U32.HI R5, RZ, c[0x0][0x410], R4 ;
 Instr 143 @ 0x8f0 (2288) - IADD3 R3, -R5, RZ, RZ ;
 Instr 144 @ 0x900 (2304) - IMAD R9, R3, c[0x0][0x408], R9 ;
 Instr 145 @ 0x910 (2320) - IMAD R2, R9, c[0x0][0x4f8], R2 ;
 Instr 146 @ 0x920 (2336) - @!P0 BRA 0xd00 ;
Basic block id 18 - num instructions 8
 Instr 147 @ 0x930 (2352) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 148 @ 0x940 (2368) - ISETP.NE.AND P0, PT, R0, 0x12, PT ;
 Instr 149 @ 0x950 (2384) - IMAD.HI.U32 R8, R5, c[0x0][0x418], R4 ;
 Instr 150 @ 0x960 (2400) - SHF.R.U32.HI R9, RZ, c[0x0][0x41c], R8 ;
 Instr 151 @ 0x970 (2416) - IADD3 R3, -R9, RZ, RZ ;
 Instr 152 @ 0x980 (2432) - IMAD R5, R3, c[0x0][0x414], R5 ;
 Instr 153 @ 0x990 (2448) - IMAD R2, R5, c[0x0][0x500], R2 ;
 Instr 154 @ 0x9a0 (2464) - @!P0 BRA 0xd00 ;
Basic block id 19 - num instructions 8
 Instr 155 @ 0x9b0 (2480) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 156 @ 0x9c0 (2496) - ISETP.NE.AND P0, PT, R0, 0x13, PT ;
 Instr 157 @ 0x9d0 (2512) - IMAD.HI.U32 R4, R9, c[0x0][0x424], R8 ;
 Instr 158 @ 0x9e0 (2528) - SHF.R.U32.HI R5, RZ, c[0x0][0x428], R4 ;
 Instr 159 @ 0x9f0 (2544) - IADD3 R3, -R5, RZ, RZ ;
 Instr 160 @ 0xa00 (2560) - IMAD R9, R3, c[0x0][0x420], R9 ;
 Instr 161 @ 0xa10 (2576) - IMAD R2, R9, c[0x0][0x508], R2 ;
 Instr 162 @ 0xa20 (2592) - @!P0 BRA 0xd00 ;
Basic block id 20 - num instructions 8
 Instr 163 @ 0xa30 (2608) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 164 @ 0xa40 (2624) - ISETP.NE.AND P0, PT, R0, 0x14, PT ;
 Instr 165 @ 0xa50 (2640) - IMAD.HI.U32 R8, R5, c[0x0][0x430], R4 ;
 Instr 166 @ 0xa60 (2656) - SHF.R.U32.HI R9, RZ, c[0x0][0x434], R8 ;
 Instr 167 @ 0xa70 (2672) - IADD3 R3, -R9, RZ, RZ ;
 Instr 168 @ 0xa80 (2688) - IMAD R5, R3, c[0x0][0x42c], R5 ;
 Instr 169 @ 0xa90 (2704) - IMAD R2, R5, c[0x0][0x510], R2 ;
 Instr 170 @ 0xaa0 (2720) - @!P0 BRA 0xd00 ;
Basic block id 21 - num instructions 8
 Instr 171 @ 0xab0 (2736) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 172 @ 0xac0 (2752) - ISETP.NE.AND P0, PT, R0, 0x15, PT ;
 Instr 173 @ 0xad0 (2768) - IMAD.HI.U32 R4, R9, c[0x0][0x43c], R8 ;
 Instr 174 @ 0xae0 (2784) - SHF.R.U32.HI R5, RZ, c[0x0][0x440], R4 ;
 Instr 175 @ 0xaf0 (2800) - IADD3 R3, -R5, RZ, RZ ;
 Instr 176 @ 0xb00 (2816) - IMAD R9, R3, c[0x0][0x438], R9 ;
 Instr 177 @ 0xb10 (2832) - IMAD R2, R9, c[0x0][0x518], R2 ;
 Instr 178 @ 0xb20 (2848) - @!P0 BRA 0xd00 ;
Basic block id 22 - num instructions 8
 Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 180 @ 0xb40 (2880) - ISETP.NE.AND P0, PT, R0, 0x16, PT ;
 Instr 181 @ 0xb50 (2896) - IMAD.HI.U32 R8, R5, c[0x0][0x448], R4 ;
 Instr 182 @ 0xb60 (2912) - SHF.R.U32.HI R9, RZ, c[0x0][0x44c], R8 ;
 Instr 183 @ 0xb70 (2928) - IADD3 R3, -R9, RZ, RZ ;
 Instr 184 @ 0xb80 (2944) - IMAD R5, R3, c[0x0][0x444], R5 ;
 Instr 185 @ 0xb90 (2960) - IMAD R2, R5, c[0x0][0x520], R2 ;
 Instr 186 @ 0xba0 (2976) - @!P0 BRA 0xd00 ;
Basic block id 23 - num instructions 8
 Instr 187 @ 0xbb0 (2992) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 188 @ 0xbc0 (3008) - ISETP.NE.AND P0, PT, R0, 0x17, PT ;
 Instr 189 @ 0xbd0 (3024) - IMAD.HI.U32 R4, R9, c[0x0][0x454], R8 ;
 Instr 190 @ 0xbe0 (3040) - SHF.R.U32.HI R5, RZ, c[0x0][0x458], R4 ;
 Instr 191 @ 0xbf0 (3056) - IADD3 R3, -R5, RZ, RZ ;
 Instr 192 @ 0xc00 (3072) - IMAD R9, R3, c[0x0][0x450], R9 ;
 Instr 193 @ 0xc10 (3088) - IMAD R2, R9, c[0x0][0x528], R2 ;
 Instr 194 @ 0xc20 (3104) - @!P0 BRA 0xd00 ;
Basic block id 24 - num instructions 13
 Instr 195 @ 0xc30 (3120) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
 Instr 196 @ 0xc40 (3136) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 197 @ 0xc50 (3152) - IMAD.HI.U32 R8, R5, c[0x0][0x460], R4 ;
 Instr 198 @ 0xc60 (3168) - SHF.R.U32.HI R9, RZ, c[0x0][0x464], R8 ;
 Instr 199 @ 0xc70 (3184) - @P0 MOV R8, RZ ;
 Instr 200 @ 0xc80 (3200) - IMAD.MOV R3, RZ, RZ, -R9.reuse ;
 Instr 201 @ 0xc90 (3216) - @P0 IMAD.HI.U32 R0, R9, c[0x0][0x46c], R8 ;
 Instr 202 @ 0xca0 (3232) - IMAD R5, R3, c[0x0][0x45c], R5 ;
 Instr 203 @ 0xcb0 (3248) - @P0 SHF.R.U32.HI R0, RZ, c[0x0][0x470], R0 ;
 Instr 204 @ 0xcc0 (3264) - IMAD R2, R5, c[0x0][0x530], R2 ;
 Instr 205 @ 0xcd0 (3280) - @P0 IADD3 R3, -R0, RZ, RZ ;
 Instr 206 @ 0xce0 (3296) - @P0 IMAD R9, R3, c[0x0][0x468], R9 ;
 Instr 207 @ 0xcf0 (3312) - @P0 IMAD R2, R9, c[0x0][0x538], R2 ;
Basic block id 25 - num instructions 14
 Instr 208 @ 0xd00 (3328) - S2R R0, SR_TID.Y ;
 Instr 209 @ 0xd10 (3344) - IMAD R3, R7.reuse, c[0x0][0x188], RZ ;
 Instr 210 @ 0xd20 (3360) - BMOV.32.CLEAR RZ, B0 ;
 Instr 211 @ 0xd30 (3376) - IMAD R5, R7, c[0x0][0x194], RZ ;
 Instr 212 @ 0xd40 (3392) - S2R R6, SR_CTAID.Y ;
 Instr 213 @ 0xd50 (3408) - BSSY B0, 0x98c0 ;
 Instr 214 @ 0xd60 (3424) - S2R R4, SR_CTAID.X ;
 Instr 215 @ 0xd70 (3440) - IMAD R3, R0.reuse, c[0x0][0x18c], R3 ;
 Instr 216 @ 0xd80 (3456) - IMAD R5, R0, c[0x0][0x198], R5 ;
 Instr 217 @ 0xd90 (3472) - IMAD R12, R6, c[0x0][0x190], R3 ;
 Instr 218 @ 0xda0 (3488) - IMAD R3, R4, c[0x0][0x180], R5 ;
 Instr 219 @ 0xdb0 (3504) - ISETP.GE.U32.AND P0, PT, R12, c[0x0][0x174], PT ;
 Instr 220 @ 0xdc0 (3520) - ISETP.GE.U32.OR P0, PT, R3, c[0x0][0x178], P0 ;
 Instr 221 @ 0xdd0 (3536) - @P0 BRA 0x98b0 ;
Basic block id 26 - num instructions 5
 Instr 222 @ 0xde0 (3552) - ULDC.U8 UR4, c[0x0][0x1a8] ;
 Instr 223 @ 0xdf0 (3568) - IADD3 R4, P1, R2, c[0x0][0x540], RZ ;
 Instr 224 @ 0xe00 (3584) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 225 @ 0xe10 (3600) - IMAD.X R5, RZ, RZ, c[0x0][0x544], P1 ;
 Instr 226 @ 0xe20 (3616) - @!P0 BRA 0x1640 ;
Basic block id 27 - num instructions 9
 Instr 227 @ 0xe30 (3632) - SHF.R.U64 R8, R4, 0x3, R5 ;
 Instr 228 @ 0xe40 (3648) - BMOV.32.CLEAR RZ, B1 ;
 Instr 229 @ 0xe50 (3664) - BSSY B1, 0x1130 ;
 Instr 230 @ 0xe60 (3680) - MOV R26, c[0x0][0x174] ;
 Instr 231 @ 0xe70 (3696) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 232 @ 0xe80 (3712) - LOP3.LUT R14, R8, 0x3, RZ, 0xc0, !PT ;
 Instr 233 @ 0xe90 (3728) - MOV R17, c[0x0][0x16c] ;
 Instr 234 @ 0xea0 (3744) - ISETP.NE.AND P0, PT, R14, RZ, PT ;
 Instr 235 @ 0xeb0 (3760) - @!P0 BRA 0x1120 ;
Basic block id 28 - num instructions 5
 Instr 236 @ 0xec0 (3776) - ISETP.GE.U32.AND P0, PT, R7.reuse, R14, PT ;
 Instr 237 @ 0xed0 (3792) - BMOV.32.CLEAR RZ, B2 ;
 Instr 238 @ 0xee0 (3808) - BSSY B2, 0x10c0 ;
 Instr 239 @ 0xef0 (3824) - ISETP.GT.U32.OR P0, PT, R7, 0x3, !P0 ;
 Instr 240 @ 0xf00 (3840) - @P0 BRA 0x10b0 ;
Basic block id 29 - num instructions 6
 Instr 241 @ 0xf10 (3856) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
 Instr 242 @ 0xf20 (3872) - BMOV.32.CLEAR RZ, B3 ;
 Instr 243 @ 0xf30 (3888) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
 Instr 244 @ 0xf40 (3904) - BSSY B3, 0xfd0 ;
 Instr 245 @ 0xf50 (3920) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 246 @ 0xf60 (3936) - @P0 BRA P1, 0xfc0 ;
Basic block id 30 - num instructions 5
 Instr 247 @ 0xf70 (3952) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
 Instr 248 @ 0xf80 (3968) - IMAD.MOV.U32 R8, RZ, RZ, 0x1 ;
 Instr 249 @ 0xf90 (3984) - @P0 ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 250 @ 0xfa0 (4000) - @P0 SEL R9, RZ, 0x1, P1 ;
 Instr 251 @ 0xfb0 (4016) - @P0 PRMT R8, R9, 0x7610, R8 ;
Basic block id 31 - num instructions 4
 Instr 252 @ 0xfc0 (4032) - BSYNC B3 ;
 Instr 253 @ 0xfd0 (4048) - PRMT R8, R8, 0x9910, RZ ;
 Instr 254 @ 0xfe0 (4064) - ISETP.NE.AND P0, PT, R8, RZ, PT ;
 Instr 255 @ 0xff0 (4080) - @!P0 BRA 0x10b0 ;
Basic block id 32 - num instructions 11
 Instr 256 @ 0x1000 (4096) - IADD3 R9, P0, R7, -R14, RZ ;
 Instr 257 @ 0x1010 (4112) - IADD3.X R10, RZ, -0x1, RZ, P0, !PT ;
 Instr 258 @ 0x1020 (4128) - LEA R8, P0, R9, R4, 0x3 ;
 Instr 259 @ 0x1030 (4144) - LEA.HI.X R9, R9, R5, R10, 0x3, P0 ;
 Instr 260 @ 0x1040 (4160) - LDG.E.64.SYS R8, [R8] ;
 Instr 261 @ 0x1050 (4176) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x168] ;
 Instr 262 @ 0x1060 (4192) - MOV R11, c[0x0][0x16c] ;
 Instr 263 @ 0x1070 (4208) - DSETP.GTU.AND P0, PT, |R10|, +INF , PT ;
 Instr 264 @ 0x1080 (4224) - DSETP.LT.OR P0, PT, R8, c[0x0][0x168], P0 ;
 Instr 265 @ 0x1090 (4240) - FSEL R16, R8, c[0x0][0x168], !P0 ;
 Instr 266 @ 0x10a0 (4256) - FSEL R17, R9, c[0x0][0x16c], !P0 ;
Basic block id 33 - num instructions 7
 Instr 267 @ 0x10b0 (4272) - BSYNC B2 ;
 Instr 268 @ 0x10c0 (4288) - IADD3 R9, P0, -R14.reuse, 0x4, RZ ;
 Instr 269 @ 0x10d0 (4304) - IADD3 R26, R14, c[0x0][0x174], RZ ;
 Instr 270 @ 0x10e0 (4320) - IMAD.X R8, RZ, RZ, -0x1, P0 ;
 Instr 271 @ 0x10f0 (4336) - LEA R4, P0, R9.reuse, R4, 0x3 ;
 Instr 272 @ 0x1100 (4352) - IADD3 R26, R26, -0x4, RZ ;
 Instr 273 @ 0x1110 (4368) - LEA.HI.X R5, R9, R5, R8, 0x3, P0 ;
Basic block id 34 - num instructions 14
 Instr 274 @ 0x1120 (4384) - BSYNC B1 ;
 Instr 275 @ 0x1130 (4400) - LEA R9, R12, 0x3, 0x2 ;
 Instr 276 @ 0x1140 (4416) - BMOV.32.CLEAR RZ, B1 ;
 Instr 277 @ 0x1150 (4432) - BSSY B1, 0x13d0 ;
 Instr 278 @ 0x1160 (4448) - ISETP.NE.AND P4, PT, RZ, c[0x0][0x18c], PT ;
 Instr 279 @ 0x1170 (4464) - IMAD.MOV.U32 R19, RZ, RZ, c[0x0][0x16c] ;
 Instr 280 @ 0x1180 (4480) - ISETP.GE.U32.AND P0, PT, R9, R26, PT ;
 Instr 281 @ 0x1190 (4496) - IMAD.MOV.U32 R21, RZ, RZ, c[0x0][0x16c] ;
 Instr 282 @ 0x11a0 (4512) - ISETP.NE.AND P5, PT, R0, RZ, PT ;
 Instr 283 @ 0x11b0 (4528) - IMAD.MOV.U32 R23, RZ, RZ, c[0x0][0x16c] ;
 Instr 284 @ 0x11c0 (4544) - MOV R18, c[0x0][0x168] ;
 Instr 285 @ 0x11d0 (4560) - MOV R20, c[0x0][0x168] ;
 Instr 286 @ 0x11e0 (4576) - MOV R22, c[0x0][0x168] ;
 Instr 287 @ 0x11f0 (4592) - @P0 BRA 0x13c0 ;
Basic block id 35 - num instructions 5
 Instr 288 @ 0x1200 (4608) - MOV R27, R12 ;
 Instr 289 @ 0x1210 (4624) - IMAD.MOV.U32 R20, RZ, RZ, c[0x0][0x168] ;
 Instr 290 @ 0x1220 (4640) - MOV R21, c[0x0][0x16c] ;
 Instr 291 @ 0x1230 (4656) - IMAD.MOV.U32 R22, RZ, RZ, c[0x0][0x168] ;
 Instr 292 @ 0x1240 (4672) - MOV R23, c[0x0][0x16c] ;
Basic block id 36 - num instructions 23
 Instr 293 @ 0x1250 (4688) - IMAD.WIDE.U32 R24, R27, 0x20, R4 ;
 Instr 294 @ 0x1260 (4704) - LDG.E.128.SYS R8, [R24] ;
 Instr 295 @ 0x1270 (4720) - LDG.E.128.SYS R12, [R24+0x10] ;
 Instr 296 @ 0x1280 (4736) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 297 @ 0x1290 (4752) - DSETP.GTU.AND P2, PT, |R16|, +INF , PT ;
 Instr 298 @ 0x12a0 (4768) - LEA R29, R27, 0x3, 0x2 ;
 Instr 299 @ 0x12b0 (4784) - DSETP.GTU.AND P3, PT, |R22|, +INF , PT ;
 Instr 300 @ 0x12c0 (4800) - ISETP.GE.U32.AND P6, PT, R29, R26, PT ;
 Instr 301 @ 0x12d0 (4816) - DSETP.GTU.AND P1, PT, |R20|, +INF , PT ;
 Instr 302 @ 0x12e0 (4832) - DSETP.GTU.AND P0, PT, |R18|, +INF , PT ;
 Instr 303 @ 0x12f0 (4848) - DSETP.GT.OR P2, PT, R16, R8, P2 ;
 Instr 304 @ 0x1300 (4864) - DSETP.GT.OR P3, PT, R22, R10, P3 ;
 Instr 305 @ 0x1310 (4880) - DSETP.GT.OR P1, PT, R20, R12, P1 ;
 Instr 306 @ 0x1320 (4896) - FSEL R16, R16, R8, P2 ;
 Instr 307 @ 0x1330 (4912) - FSEL R17, R17, R9, P2 ;
 Instr 308 @ 0x1340 (4928) - DSETP.GT.OR P0, PT, R18, R14, P0 ;
 Instr 309 @ 0x1350 (4944) - FSEL R22, R22, R10, P3 ;
 Instr 310 @ 0x1360 (4960) - FSEL R23, R23, R11, P3 ;
 Instr 311 @ 0x1370 (4976) - FSEL R20, R20, R12, P1 ;
 Instr 312 @ 0x1380 (4992) - FSEL R21, R21, R13, P1 ;
 Instr 313 @ 0x1390 (5008) - FSEL R18, R18, R14, P0 ;
 Instr 314 @ 0x13a0 (5024) - FSEL R19, R19, R15, P0 ;
 Instr 315 @ 0x13b0 (5040) - @!P6 BRA 0x1250 ;
Basic block id 37 - num instructions 5
 Instr 316 @ 0x13c0 (5056) - BSYNC B1 ;
 Instr 317 @ 0x13d0 (5072) - BMOV.32.CLEAR RZ, B1 ;
 Instr 318 @ 0x13e0 (5088) - BSSY B1, 0x1470 ;
 Instr 319 @ 0x13f0 (5104) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 320 @ 0x1400 (5120) - @P4 BRA P5, 0x1460 ;
Basic block id 38 - num instructions 5
 Instr 321 @ 0x1410 (5136) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
 Instr 322 @ 0x1420 (5152) - IMAD.MOV.U32 R8, RZ, RZ, 0x1 ;
 Instr 323 @ 0x1430 (5168) - @P0 ISETP.NE.AND P1, PT, R6, RZ, PT ;
 Instr 324 @ 0x1440 (5184) - @P0 SEL R6, RZ, 0x1, P1 ;
 Instr 325 @ 0x1450 (5200) - @P0 PRMT R8, R6, 0x7610, R8 ;
Basic block id 39 - num instructions 6
 Instr 326 @ 0x1460 (5216) - BSYNC B1 ;
 Instr 327 @ 0x1470 (5232) - PRMT R6, R8, 0x9910, RZ ;
 Instr 328 @ 0x1480 (5248) - BMOV.32.CLEAR RZ, B1 ;
 Instr 329 @ 0x1490 (5264) - BSSY B1, 0x1570 ;
 Instr 330 @ 0x14a0 (5280) - ISETP.NE.AND P0, PT, R6, RZ, PT ;
 Instr 331 @ 0x14b0 (5296) - @!P0 BRA 0x1560 ;
Basic block id 40 - num instructions 4
 Instr 332 @ 0x14c0 (5312) - LOP3.LUT R6, R26, 0xfffffffc, RZ, 0xc0, !PT ;
 Instr 333 @ 0x14d0 (5328) - IADD3 R9, R6, R7, RZ ;
 Instr 334 @ 0x14e0 (5344) - ISETP.GE.U32.AND P0, PT, R9, R26, PT ;
 Instr 335 @ 0x14f0 (5360) - @P0 BRA 0x1560 ;
Basic block id 41 - num instructions 6
 Instr 336 @ 0x1500 (5376) - IMAD.WIDE R4, R9, 0x8, R4 ;
 Instr 337 @ 0x1510 (5392) - LDG.E.64.SYS R4, [R4] ;
 Instr 338 @ 0x1520 (5408) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 339 @ 0x1530 (5424) - DSETP.GT.OR P0, PT, R16, R4, P0 ;
 Instr 340 @ 0x1540 (5440) - FSEL R16, R16, R4, P0 ;
 Instr 341 @ 0x1550 (5456) - FSEL R17, R17, R5, P0 ;
Basic block id 42 - num instructions 14
 Instr 342 @ 0x1560 (5472) - BSYNC B1 ;
 Instr 343 @ 0x1570 (5488) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 344 @ 0x1580 (5504) - DSETP.GT.OR P0, PT, R16, R22, P0 ;
 Instr 345 @ 0x1590 (5520) - FSEL R4, R16, R22, P0 ;
 Instr 346 @ 0x15a0 (5536) - FSEL R5, R17, R23, P0 ;
 Instr 347 @ 0x15b0 (5552) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 348 @ 0x15c0 (5568) - DSETP.GT.OR P0, PT, R4, R20, P0 ;
 Instr 349 @ 0x15d0 (5584) - FSEL R4, R4, R20, P0 ;
 Instr 350 @ 0x15e0 (5600) - FSEL R5, R5, R21, P0 ;
 Instr 351 @ 0x15f0 (5616) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 352 @ 0x1600 (5632) - DSETP.GT.OR P0, PT, R4, R18, P0 ;
 Instr 353 @ 0x1610 (5648) - FSEL R16, R4, R18, P0 ;
 Instr 354 @ 0x1620 (5664) - FSEL R17, R5, R19, P0 ;
 Instr 355 @ 0x1630 (5680) - BRA 0x98b0 ;
Basic block id 43 - num instructions 7
 Instr 356 @ 0x1640 (5696) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x2e0] ;
 Instr 357 @ 0x1650 (5712) - MOV R8, 0x1 ;
 Instr 358 @ 0x1660 (5728) - SHF.R.U32.HI R6, RZ, 0x3, R6 ;
 Instr 359 @ 0x1670 (5744) - ISETP.EQ.AND P2, PT, R8, c[0x0][0x1b0], PT ;
 Instr 360 @ 0x1680 (5760) - ISETP.NE.AND P0, PT, R6, 0x1, PT ;
 Instr 361 @ 0x1690 (5776) - ISETP.NE.AND P1, PT, R8, c[0x0][0x1b0], PT ;
 Instr 362 @ 0x16a0 (5792) - @!P0 BRA P2, 0x9140 ;
Basic block id 44 - num instructions 6
 Instr 363 @ 0x16b0 (5808) - IMAD.MOV.U32 R26, RZ, RZ, c[0x0][0x17c] ;
 Instr 364 @ 0x16c0 (5824) - MOV R11, R12 ;
 Instr 365 @ 0x16d0 (5840) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x168] ;
 Instr 366 @ 0x16e0 (5856) - MOV R9, c[0x0][0x16c] ;
 Instr 367 @ 0x16f0 (5872) - IMAD R10, R26, 0x3, R12 ;
 Instr 368 @ 0x1700 (5888) - @!P1 BRA 0x8950 ;
Basic block id 45 - num instructions 10
 Instr 369 @ 0x1710 (5904) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
 Instr 370 @ 0x1720 (5920) - BMOV.32.CLEAR RZ, B1 ;
 Instr 371 @ 0x1730 (5936) - BSSY B1, 0x52b0 ;
 Instr 372 @ 0x1740 (5952) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 373 @ 0x1750 (5968) - MOV R13, c[0x0][0x16c] ;
 Instr 374 @ 0x1760 (5984) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 375 @ 0x1770 (6000) - MOV R15, c[0x0][0x16c] ;
 Instr 376 @ 0x1780 (6016) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 377 @ 0x1790 (6032) - MOV R17, c[0x0][0x16c] ;
 Instr 378 @ 0x17a0 (6048) - @P0 BRA 0x52a0 ;
Basic block id 46 - num instructions 9
 Instr 379 @ 0x17b0 (6064) - BMOV.32.CLEAR RZ, B2 ;
 Instr 380 @ 0x17c0 (6080) - BSSY B2, 0x52a0 ;
 Instr 381 @ 0x17d0 (6096) - ISETP.NE.AND P4, PT, RZ, c[0x0][0x1b0], PT ;
 Instr 382 @ 0x17e0 (6112) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 383 @ 0x17f0 (6128) - MOV R13, c[0x0][0x16c] ;
 Instr 384 @ 0x1800 (6144) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 385 @ 0x1810 (6160) - MOV R15, c[0x0][0x16c] ;
 Instr 386 @ 0x1820 (6176) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 387 @ 0x1830 (6192) - MOV R17, c[0x0][0x16c] ;
Basic block id 47 - num instructions 3
 Instr 388 @ 0x1840 (6208) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 389 @ 0x1850 (6224) - MOV R10, RZ ;
 Instr 390 @ 0x1860 (6240) - @!P4 BRA 0x2650 ;
Basic block id 48 - num instructions 9
 Instr 391 @ 0x1870 (6256) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 392 @ 0x1880 (6272) - MOV R18, 0x1 ;
 Instr 393 @ 0x1890 (6288) - IMAD.HI.U32 R10, R11, c[0x0][0x1b8], R10 ;
 Instr 394 @ 0x18a0 (6304) - ISETP.NE.AND P0, PT, R18, c[0x0][0x1b0], PT ;
 Instr 395 @ 0x18b0 (6320) - SHF.R.U32.HI R21, RZ, c[0x0][0x1bc], R10 ;
 Instr 396 @ 0x18c0 (6336) - IMAD.MOV R10, RZ, RZ, -R21 ;
 Instr 397 @ 0x18d0 (6352) - IMAD R10, R10, c[0x0][0x1b4], R11 ;
 Instr 398 @ 0x18e0 (6368) - IMAD R10, R10, c[0x0][0x2e0], RZ ;
 Instr 399 @ 0x18f0 (6384) - @!P0 BRA 0x2650 ;
Basic block id 49 - num instructions 10
 Instr 400 @ 0x1900 (6400) - MOV R18, RZ ;
 Instr 401 @ 0x1910 (6416) - IMAD.MOV.U32 R19, RZ, RZ, R21 ;
 Instr 402 @ 0x1920 (6432) - MOV R20, c[0x0][0x1b0] ;
 Instr 403 @ 0x1930 (6448) - IMAD.HI.U32 R18, R21, c[0x0][0x1c4], R18 ;
 Instr 404 @ 0x1940 (6464) - ISETP.NE.AND P0, PT, R20, 0x2, PT ;
 Instr 405 @ 0x1950 (6480) - SHF.R.U32.HI R22, RZ, c[0x0][0x1c8], R18 ;
 Instr 406 @ 0x1960 (6496) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 407 @ 0x1970 (6512) - IMAD R19, R19, c[0x0][0x1c0], R21 ;
 Instr 408 @ 0x1980 (6528) - IMAD R10, R19, c[0x0][0x2e4], R10 ;
 Instr 409 @ 0x1990 (6544) - @!P0 BRA 0x2650 ;
Basic block id 50 - num instructions 9
 Instr 410 @ 0x19a0 (6560) - MOV R18, RZ ;
 Instr 411 @ 0x19b0 (6576) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 412 @ 0x19c0 (6592) - ISETP.NE.AND P0, PT, R20, 0x3, PT ;
 Instr 413 @ 0x19d0 (6608) - IMAD.HI.U32 R18, R22, c[0x0][0x1d0], R18 ;
 Instr 414 @ 0x19e0 (6624) - SHF.R.U32.HI R21, RZ, c[0x0][0x1d4], R18 ;
 Instr 415 @ 0x19f0 (6640) - IADD3 R19, -R21, RZ, RZ ;
 Instr 416 @ 0x1a00 (6656) - IMAD R19, R19, c[0x0][0x1cc], R22 ;
 Instr 417 @ 0x1a10 (6672) - IMAD R10, R19, c[0x0][0x2e8], R10 ;
 Instr 418 @ 0x1a20 (6688) - @!P0 BRA 0x2650 ;
Basic block id 51 - num instructions 9
 Instr 419 @ 0x1a30 (6704) - MOV R19, R21 ;
 Instr 420 @ 0x1a40 (6720) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 421 @ 0x1a50 (6736) - ISETP.NE.AND P0, PT, R20, 0x4, PT ;
 Instr 422 @ 0x1a60 (6752) - IMAD.HI.U32 R18, R21, c[0x0][0x1dc], R18 ;
 Instr 423 @ 0x1a70 (6768) - SHF.R.U32.HI R22, RZ, c[0x0][0x1e0], R18 ;
 Instr 424 @ 0x1a80 (6784) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 425 @ 0x1a90 (6800) - IMAD R19, R19, c[0x0][0x1d8], R21 ;
 Instr 426 @ 0x1aa0 (6816) - IMAD R10, R19, c[0x0][0x2ec], R10 ;
 Instr 427 @ 0x1ab0 (6832) - @!P0 BRA 0x2650 ;
Basic block id 52 - num instructions 9
 Instr 428 @ 0x1ac0 (6848) - MOV R18, RZ ;
 Instr 429 @ 0x1ad0 (6864) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 430 @ 0x1ae0 (6880) - ISETP.NE.AND P0, PT, R20, 0x5, PT ;
 Instr 431 @ 0x1af0 (6896) - IMAD.HI.U32 R18, R22, c[0x0][0x1e8], R18 ;
 Instr 432 @ 0x1b00 (6912) - SHF.R.U32.HI R21, RZ, c[0x0][0x1ec], R18 ;
 Instr 433 @ 0x1b10 (6928) - IADD3 R19, -R21, RZ, RZ ;
 Instr 434 @ 0x1b20 (6944) - IMAD R19, R19, c[0x0][0x1e4], R22 ;
 Instr 435 @ 0x1b30 (6960) - IMAD R10, R19, c[0x0][0x2f0], R10 ;
 Instr 436 @ 0x1b40 (6976) - @!P0 BRA 0x2650 ;
Basic block id 53 - num instructions 9
 Instr 437 @ 0x1b50 (6992) - MOV R19, R21 ;
 Instr 438 @ 0x1b60 (7008) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 439 @ 0x1b70 (7024) - ISETP.NE.AND P0, PT, R20, 0x6, PT ;
 Instr 440 @ 0x1b80 (7040) - IMAD.HI.U32 R18, R21, c[0x0][0x1f4], R18 ;
 Instr 441 @ 0x1b90 (7056) - SHF.R.U32.HI R22, RZ, c[0x0][0x1f8], R18 ;
 Instr 442 @ 0x1ba0 (7072) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 443 @ 0x1bb0 (7088) - IMAD R19, R19, c[0x0][0x1f0], R21 ;
 Instr 444 @ 0x1bc0 (7104) - IMAD R10, R19, c[0x0][0x2f4], R10 ;
 Instr 445 @ 0x1bd0 (7120) - @!P0 BRA 0x2650 ;
Basic block id 54 - num instructions 9
 Instr 446 @ 0x1be0 (7136) - MOV R18, RZ ;
 Instr 447 @ 0x1bf0 (7152) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 448 @ 0x1c00 (7168) - ISETP.NE.AND P0, PT, R20, 0x7, PT ;
 Instr 449 @ 0x1c10 (7184) - IMAD.HI.U32 R18, R22, c[0x0][0x200], R18 ;
 Instr 450 @ 0x1c20 (7200) - SHF.R.U32.HI R21, RZ, c[0x0][0x204], R18 ;
 Instr 451 @ 0x1c30 (7216) - IADD3 R19, -R21, RZ, RZ ;
 Instr 452 @ 0x1c40 (7232) - IMAD R19, R19, c[0x0][0x1fc], R22 ;
 Instr 453 @ 0x1c50 (7248) - IMAD R10, R19, c[0x0][0x2f8], R10 ;
 Instr 454 @ 0x1c60 (7264) - @!P0 BRA 0x2650 ;
Basic block id 55 - num instructions 9
 Instr 455 @ 0x1c70 (7280) - MOV R19, R21 ;
 Instr 456 @ 0x1c80 (7296) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 457 @ 0x1c90 (7312) - ISETP.NE.AND P0, PT, R20, 0x8, PT ;
 Instr 458 @ 0x1ca0 (7328) - IMAD.HI.U32 R18, R21, c[0x0][0x20c], R18 ;
 Instr 459 @ 0x1cb0 (7344) - SHF.R.U32.HI R22, RZ, c[0x0][0x210], R18 ;
 Instr 460 @ 0x1cc0 (7360) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 461 @ 0x1cd0 (7376) - IMAD R19, R19, c[0x0][0x208], R21 ;
 Instr 462 @ 0x1ce0 (7392) - IMAD R10, R19, c[0x0][0x2fc], R10 ;
 Instr 463 @ 0x1cf0 (7408) - @!P0 BRA 0x2650 ;
Basic block id 56 - num instructions 9
 Instr 464 @ 0x1d00 (7424) - MOV R18, RZ ;
 Instr 465 @ 0x1d10 (7440) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 466 @ 0x1d20 (7456) - ISETP.NE.AND P0, PT, R20, 0x9, PT ;
 Instr 467 @ 0x1d30 (7472) - IMAD.HI.U32 R18, R22, c[0x0][0x218], R18 ;
 Instr 468 @ 0x1d40 (7488) - SHF.R.U32.HI R21, RZ, c[0x0][0x21c], R18 ;
 Instr 469 @ 0x1d50 (7504) - IADD3 R19, -R21, RZ, RZ ;
 Instr 470 @ 0x1d60 (7520) - IMAD R19, R19, c[0x0][0x214], R22 ;
 Instr 471 @ 0x1d70 (7536) - IMAD R10, R19, c[0x0][0x300], R10 ;
 Instr 472 @ 0x1d80 (7552) - @!P0 BRA 0x2650 ;
Basic block id 57 - num instructions 9
 Instr 473 @ 0x1d90 (7568) - MOV R19, R21 ;
 Instr 474 @ 0x1da0 (7584) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 475 @ 0x1db0 (7600) - ISETP.NE.AND P0, PT, R20, 0xa, PT ;
 Instr 476 @ 0x1dc0 (7616) - IMAD.HI.U32 R18, R21, c[0x0][0x224], R18 ;
 Instr 477 @ 0x1dd0 (7632) - SHF.R.U32.HI R22, RZ, c[0x0][0x228], R18 ;
 Instr 478 @ 0x1de0 (7648) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 479 @ 0x1df0 (7664) - IMAD R19, R19, c[0x0][0x220], R21 ;
 Instr 480 @ 0x1e00 (7680) - IMAD R10, R19, c[0x0][0x304], R10 ;
 Instr 481 @ 0x1e10 (7696) - @!P0 BRA 0x2650 ;
Basic block id 58 - num instructions 9
 Instr 482 @ 0x1e20 (7712) - MOV R18, RZ ;
 Instr 483 @ 0x1e30 (7728) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 484 @ 0x1e40 (7744) - ISETP.NE.AND P0, PT, R20, 0xb, PT ;
 Instr 485 @ 0x1e50 (7760) - IMAD.HI.U32 R18, R22, c[0x0][0x230], R18 ;
 Instr 486 @ 0x1e60 (7776) - SHF.R.U32.HI R21, RZ, c[0x0][0x234], R18 ;
 Instr 487 @ 0x1e70 (7792) - IADD3 R19, -R21, RZ, RZ ;
 Instr 488 @ 0x1e80 (7808) - IMAD R19, R19, c[0x0][0x22c], R22 ;
 Instr 489 @ 0x1e90 (7824) - IMAD R10, R19, c[0x0][0x308], R10 ;
 Instr 490 @ 0x1ea0 (7840) - @!P0 BRA 0x2650 ;
Basic block id 59 - num instructions 9
 Instr 491 @ 0x1eb0 (7856) - MOV R19, R21 ;
 Instr 492 @ 0x1ec0 (7872) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 493 @ 0x1ed0 (7888) - ISETP.NE.AND P0, PT, R20, 0xc, PT ;
 Instr 494 @ 0x1ee0 (7904) - IMAD.HI.U32 R18, R21, c[0x0][0x23c], R18 ;
 Instr 495 @ 0x1ef0 (7920) - SHF.R.U32.HI R22, RZ, c[0x0][0x240], R18 ;
 Instr 496 @ 0x1f00 (7936) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 497 @ 0x1f10 (7952) - IMAD R19, R19, c[0x0][0x238], R21 ;
 Instr 498 @ 0x1f20 (7968) - IMAD R10, R19, c[0x0][0x30c], R10 ;
 Instr 499 @ 0x1f30 (7984) - @!P0 BRA 0x2650 ;
Basic block id 60 - num instructions 9
 Instr 500 @ 0x1f40 (8000) - MOV R18, RZ ;
 Instr 501 @ 0x1f50 (8016) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 502 @ 0x1f60 (8032) - ISETP.NE.AND P0, PT, R20, 0xd, PT ;
 Instr 503 @ 0x1f70 (8048) - IMAD.HI.U32 R18, R22, c[0x0][0x248], R18 ;
 Instr 504 @ 0x1f80 (8064) - SHF.R.U32.HI R21, RZ, c[0x0][0x24c], R18 ;
 Instr 505 @ 0x1f90 (8080) - IADD3 R19, -R21, RZ, RZ ;
 Instr 506 @ 0x1fa0 (8096) - IMAD R19, R19, c[0x0][0x244], R22 ;
 Instr 507 @ 0x1fb0 (8112) - IMAD R10, R19, c[0x0][0x310], R10 ;
 Instr 508 @ 0x1fc0 (8128) - @!P0 BRA 0x2650 ;
Basic block id 61 - num instructions 9
 Instr 509 @ 0x1fd0 (8144) - MOV R19, R21 ;
 Instr 510 @ 0x1fe0 (8160) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 511 @ 0x1ff0 (8176) - ISETP.NE.AND P0, PT, R20, 0xe, PT ;
 Instr 512 @ 0x2000 (8192) - IMAD.HI.U32 R18, R21, c[0x0][0x254], R18 ;
 Instr 513 @ 0x2010 (8208) - SHF.R.U32.HI R22, RZ, c[0x0][0x258], R18 ;
 Instr 514 @ 0x2020 (8224) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 515 @ 0x2030 (8240) - IMAD R19, R19, c[0x0][0x250], R21 ;
 Instr 516 @ 0x2040 (8256) - IMAD R10, R19, c[0x0][0x314], R10 ;
 Instr 517 @ 0x2050 (8272) - @!P0 BRA 0x2650 ;
Basic block id 62 - num instructions 9
 Instr 518 @ 0x2060 (8288) - MOV R18, RZ ;
 Instr 519 @ 0x2070 (8304) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 520 @ 0x2080 (8320) - ISETP.NE.AND P0, PT, R20, 0xf, PT ;
 Instr 521 @ 0x2090 (8336) - IMAD.HI.U32 R18, R22, c[0x0][0x260], R18 ;
 Instr 522 @ 0x20a0 (8352) - SHF.R.U32.HI R21, RZ, c[0x0][0x264], R18 ;
 Instr 523 @ 0x20b0 (8368) - IADD3 R19, -R21, RZ, RZ ;
 Instr 524 @ 0x20c0 (8384) - IMAD R19, R19, c[0x0][0x25c], R22 ;
 Instr 525 @ 0x20d0 (8400) - IMAD R10, R19, c[0x0][0x318], R10 ;
 Instr 526 @ 0x20e0 (8416) - @!P0 BRA 0x2650 ;
Basic block id 63 - num instructions 9
 Instr 527 @ 0x20f0 (8432) - MOV R19, R21 ;
 Instr 528 @ 0x2100 (8448) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 529 @ 0x2110 (8464) - ISETP.NE.AND P0, PT, R20, 0x10, PT ;
 Instr 530 @ 0x2120 (8480) - IMAD.HI.U32 R18, R21, c[0x0][0x26c], R18 ;
 Instr 531 @ 0x2130 (8496) - SHF.R.U32.HI R22, RZ, c[0x0][0x270], R18 ;
 Instr 532 @ 0x2140 (8512) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 533 @ 0x2150 (8528) - IMAD R19, R19, c[0x0][0x268], R21 ;
 Instr 534 @ 0x2160 (8544) - IMAD R10, R19, c[0x0][0x31c], R10 ;
 Instr 535 @ 0x2170 (8560) - @!P0 BRA 0x2650 ;
Basic block id 64 - num instructions 9
 Instr 536 @ 0x2180 (8576) - MOV R18, RZ ;
 Instr 537 @ 0x2190 (8592) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 538 @ 0x21a0 (8608) - ISETP.NE.AND P0, PT, R20, 0x11, PT ;
 Instr 539 @ 0x21b0 (8624) - IMAD.HI.U32 R18, R22, c[0x0][0x278], R18 ;
 Instr 540 @ 0x21c0 (8640) - SHF.R.U32.HI R21, RZ, c[0x0][0x27c], R18 ;
 Instr 541 @ 0x21d0 (8656) - IADD3 R19, -R21, RZ, RZ ;
 Instr 542 @ 0x21e0 (8672) - IMAD R19, R19, c[0x0][0x274], R22 ;
 Instr 543 @ 0x21f0 (8688) - IMAD R10, R19, c[0x0][0x320], R10 ;
 Instr 544 @ 0x2200 (8704) - @!P0 BRA 0x2650 ;
Basic block id 65 - num instructions 9
 Instr 545 @ 0x2210 (8720) - MOV R19, R21 ;
 Instr 546 @ 0x2220 (8736) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 547 @ 0x2230 (8752) - ISETP.NE.AND P0, PT, R20, 0x12, PT ;
 Instr 548 @ 0x2240 (8768) - IMAD.HI.U32 R18, R21, c[0x0][0x284], R18 ;
 Instr 549 @ 0x2250 (8784) - SHF.R.U32.HI R22, RZ, c[0x0][0x288], R18 ;
 Instr 550 @ 0x2260 (8800) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 551 @ 0x2270 (8816) - IMAD R19, R19, c[0x0][0x280], R21 ;
 Instr 552 @ 0x2280 (8832) - IMAD R10, R19, c[0x0][0x324], R10 ;
 Instr 553 @ 0x2290 (8848) - @!P0 BRA 0x2650 ;
Basic block id 66 - num instructions 9
 Instr 554 @ 0x22a0 (8864) - MOV R18, RZ ;
 Instr 555 @ 0x22b0 (8880) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 556 @ 0x22c0 (8896) - ISETP.NE.AND P0, PT, R20, 0x13, PT ;
 Instr 557 @ 0x22d0 (8912) - IMAD.HI.U32 R18, R22, c[0x0][0x290], R18 ;
 Instr 558 @ 0x22e0 (8928) - SHF.R.U32.HI R21, RZ, c[0x0][0x294], R18 ;
 Instr 559 @ 0x22f0 (8944) - IADD3 R19, -R21, RZ, RZ ;
 Instr 560 @ 0x2300 (8960) - IMAD R19, R19, c[0x0][0x28c], R22 ;
 Instr 561 @ 0x2310 (8976) - IMAD R10, R19, c[0x0][0x328], R10 ;
 Instr 562 @ 0x2320 (8992) - @!P0 BRA 0x2650 ;
Basic block id 67 - num instructions 9
 Instr 563 @ 0x2330 (9008) - MOV R19, R21 ;
 Instr 564 @ 0x2340 (9024) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 565 @ 0x2350 (9040) - ISETP.NE.AND P0, PT, R20, 0x14, PT ;
 Instr 566 @ 0x2360 (9056) - IMAD.HI.U32 R18, R21, c[0x0][0x29c], R18 ;
 Instr 567 @ 0x2370 (9072) - SHF.R.U32.HI R22, RZ, c[0x0][0x2a0], R18 ;
 Instr 568 @ 0x2380 (9088) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 569 @ 0x2390 (9104) - IMAD R19, R19, c[0x0][0x298], R21 ;
 Instr 570 @ 0x23a0 (9120) - IMAD R10, R19, c[0x0][0x32c], R10 ;
 Instr 571 @ 0x23b0 (9136) - @!P0 BRA 0x2650 ;
Basic block id 68 - num instructions 9
 Instr 572 @ 0x23c0 (9152) - MOV R18, RZ ;
 Instr 573 @ 0x23d0 (9168) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 574 @ 0x23e0 (9184) - ISETP.NE.AND P0, PT, R20, 0x15, PT ;
 Instr 575 @ 0x23f0 (9200) - IMAD.HI.U32 R18, R22, c[0x0][0x2a8], R18 ;
 Instr 576 @ 0x2400 (9216) - SHF.R.U32.HI R21, RZ, c[0x0][0x2ac], R18 ;
 Instr 577 @ 0x2410 (9232) - IADD3 R19, -R21, RZ, RZ ;
 Instr 578 @ 0x2420 (9248) - IMAD R19, R19, c[0x0][0x2a4], R22 ;
 Instr 579 @ 0x2430 (9264) - IMAD R10, R19, c[0x0][0x330], R10 ;
 Instr 580 @ 0x2440 (9280) - @!P0 BRA 0x2650 ;
Basic block id 69 - num instructions 9
 Instr 581 @ 0x2450 (9296) - MOV R19, R21 ;
 Instr 582 @ 0x2460 (9312) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 583 @ 0x2470 (9328) - ISETP.NE.AND P0, PT, R20, 0x16, PT ;
 Instr 584 @ 0x2480 (9344) - IMAD.HI.U32 R18, R21, c[0x0][0x2b4], R18 ;
 Instr 585 @ 0x2490 (9360) - SHF.R.U32.HI R22, RZ, c[0x0][0x2b8], R18 ;
 Instr 586 @ 0x24a0 (9376) - IMAD.MOV R19, RZ, RZ, -R22 ;
 Instr 587 @ 0x24b0 (9392) - IMAD R19, R19, c[0x0][0x2b0], R21 ;
 Instr 588 @ 0x24c0 (9408) - IMAD R10, R19, c[0x0][0x334], R10 ;
 Instr 589 @ 0x24d0 (9424) - @!P0 BRA 0x2650 ;
Basic block id 70 - num instructions 9
 Instr 590 @ 0x24e0 (9440) - MOV R18, RZ ;
 Instr 591 @ 0x24f0 (9456) - IMAD.MOV.U32 R19, RZ, RZ, R22 ;
 Instr 592 @ 0x2500 (9472) - ISETP.NE.AND P0, PT, R20, 0x17, PT ;
 Instr 593 @ 0x2510 (9488) - IMAD.HI.U32 R18, R22, c[0x0][0x2c0], R18 ;
 Instr 594 @ 0x2520 (9504) - SHF.R.U32.HI R23, RZ, c[0x0][0x2c4], R18 ;
 Instr 595 @ 0x2530 (9520) - IADD3 R19, -R23, RZ, RZ ;
 Instr 596 @ 0x2540 (9536) - IMAD R19, R19, c[0x0][0x2bc], R22 ;
 Instr 597 @ 0x2550 (9552) - IMAD R10, R19, c[0x0][0x338], R10 ;
 Instr 598 @ 0x2560 (9568) - @!P0 BRA 0x2650 ;
Basic block id 71 - num instructions 14
 Instr 599 @ 0x2570 (9584) - ISETP.NE.AND P0, PT, R20, 0x18, PT ;
 Instr 600 @ 0x2580 (9600) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 601 @ 0x2590 (9616) - MOV R19, R23 ;
 Instr 602 @ 0x25a0 (9632) - IMAD.HI.U32 R18, R23, c[0x0][0x2cc], R18 ;
 Instr 603 @ 0x25b0 (9648) - SHF.R.U32.HI R19, RZ, c[0x0][0x2d0], R18 ;
 Instr 604 @ 0x25c0 (9664) - @P0 IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 605 @ 0x25d0 (9680) - IADD3 R21, -R19.reuse, RZ, RZ ;
 Instr 606 @ 0x25e0 (9696) - @P0 IMAD.HI.U32 R18, R19, c[0x0][0x2d8], R18 ;
 Instr 607 @ 0x25f0 (9712) - IMAD R21, R21, c[0x0][0x2c8], R23 ;
 Instr 608 @ 0x2600 (9728) - @P0 SHF.R.U32.HI R18, RZ, c[0x0][0x2dc], R18 ;
 Instr 609 @ 0x2610 (9744) - IMAD R10, R21, c[0x0][0x33c], R10 ;
 Instr 610 @ 0x2620 (9760) - @P0 IMAD.MOV R18, RZ, RZ, -R18 ;
 Instr 611 @ 0x2630 (9776) - @P0 IMAD R19, R18, c[0x0][0x2d4], R19 ;
 Instr 612 @ 0x2640 (9792) - @P0 IMAD R10, R19, c[0x0][0x340], R10 ;
Basic block id 72 - num instructions 6
 Instr 613 @ 0x2650 (9808) - LOP3.LUT R19, R10, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 614 @ 0x2660 (9824) - IADD3 R18, P0, R4, R19, RZ ;
 Instr 615 @ 0x2670 (9840) - IADD3.X R19, RZ, R5, RZ, P0, !PT ;
 Instr 616 @ 0x2680 (9856) - LDG.E.64.SYS R18, [R18] ;
 Instr 617 @ 0x2690 (9872) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 618 @ 0x26a0 (9888) - @!P4 BRA 0x3480 ;
Basic block id 73 - num instructions 9
 Instr 619 @ 0x26b0 (9904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 620 @ 0x26c0 (9920) - IMAD.HI.U32 R6, R11, c[0x0][0x1b8], R10 ;
 Instr 621 @ 0x26d0 (9936) - MOV R10, c[0x0][0x1b0] ;
 Instr 622 @ 0x26e0 (9952) - ISETP.NE.AND P0, PT, R10, 0x1, PT ;
 Instr 623 @ 0x26f0 (9968) - SHF.R.U32.HI R22, RZ, c[0x0][0x1bc], R6 ;
 Instr 624 @ 0x2700 (9984) - IMAD.MOV R6, RZ, RZ, -R22 ;
 Instr 625 @ 0x2710 (10000) - IMAD R6, R6, c[0x0][0x1b4], R11 ;
 Instr 626 @ 0x2720 (10016) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 627 @ 0x2730 (10032) - @!P0 BRA 0x3480 ;
Basic block id 74 - num instructions 9
 Instr 628 @ 0x2740 (10048) - MOV R20, RZ ;
 Instr 629 @ 0x2750 (10064) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 630 @ 0x2760 (10080) - ISETP.NE.AND P0, PT, R10, 0x2, PT ;
 Instr 631 @ 0x2770 (10096) - IMAD.HI.U32 R20, R22, c[0x0][0x1c4], R20 ;
 Instr 632 @ 0x2780 (10112) - SHF.R.U32.HI R23, RZ, c[0x0][0x1c8], R20 ;
 Instr 633 @ 0x2790 (10128) - IADD3 R21, -R23, RZ, RZ ;
 Instr 634 @ 0x27a0 (10144) - IMAD R21, R21, c[0x0][0x1c0], R22 ;
 Instr 635 @ 0x27b0 (10160) - IMAD R6, R21, c[0x0][0x2e4], R6 ;
 Instr 636 @ 0x27c0 (10176) - @!P0 BRA 0x3480 ;
Basic block id 75 - num instructions 9
 Instr 637 @ 0x27d0 (10192) - MOV R21, R23 ;
 Instr 638 @ 0x27e0 (10208) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 639 @ 0x27f0 (10224) - ISETP.NE.AND P0, PT, R10, 0x3, PT ;
 Instr 640 @ 0x2800 (10240) - IMAD.HI.U32 R20, R23, c[0x0][0x1d0], R20 ;
 Instr 641 @ 0x2810 (10256) - SHF.R.U32.HI R22, RZ, c[0x0][0x1d4], R20 ;
 Instr 642 @ 0x2820 (10272) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 643 @ 0x2830 (10288) - IMAD R21, R21, c[0x0][0x1cc], R23 ;
 Instr 644 @ 0x2840 (10304) - IMAD R6, R21, c[0x0][0x2e8], R6 ;
 Instr 645 @ 0x2850 (10320) - @!P0 BRA 0x3480 ;
Basic block id 76 - num instructions 9
 Instr 646 @ 0x2860 (10336) - MOV R20, RZ ;
 Instr 647 @ 0x2870 (10352) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 648 @ 0x2880 (10368) - ISETP.NE.AND P0, PT, R10, 0x4, PT ;
 Instr 649 @ 0x2890 (10384) - IMAD.HI.U32 R20, R22, c[0x0][0x1dc], R20 ;
 Instr 650 @ 0x28a0 (10400) - SHF.R.U32.HI R23, RZ, c[0x0][0x1e0], R20 ;
 Instr 651 @ 0x28b0 (10416) - IADD3 R21, -R23, RZ, RZ ;
 Instr 652 @ 0x28c0 (10432) - IMAD R21, R21, c[0x0][0x1d8], R22 ;
 Instr 653 @ 0x28d0 (10448) - IMAD R6, R21, c[0x0][0x2ec], R6 ;
 Instr 654 @ 0x28e0 (10464) - @!P0 BRA 0x3480 ;
Basic block id 77 - num instructions 9
 Instr 655 @ 0x28f0 (10480) - MOV R21, R23 ;
 Instr 656 @ 0x2900 (10496) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 657 @ 0x2910 (10512) - ISETP.NE.AND P0, PT, R10, 0x5, PT ;
 Instr 658 @ 0x2920 (10528) - IMAD.HI.U32 R20, R23, c[0x0][0x1e8], R20 ;
 Instr 659 @ 0x2930 (10544) - SHF.R.U32.HI R22, RZ, c[0x0][0x1ec], R20 ;
 Instr 660 @ 0x2940 (10560) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 661 @ 0x2950 (10576) - IMAD R21, R21, c[0x0][0x1e4], R23 ;
 Instr 662 @ 0x2960 (10592) - IMAD R6, R21, c[0x0][0x2f0], R6 ;
 Instr 663 @ 0x2970 (10608) - @!P0 BRA 0x3480 ;
Basic block id 78 - num instructions 9
 Instr 664 @ 0x2980 (10624) - MOV R20, RZ ;
 Instr 665 @ 0x2990 (10640) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 666 @ 0x29a0 (10656) - ISETP.NE.AND P0, PT, R10, 0x6, PT ;
 Instr 667 @ 0x29b0 (10672) - IMAD.HI.U32 R20, R22, c[0x0][0x1f4], R20 ;
 Instr 668 @ 0x29c0 (10688) - SHF.R.U32.HI R23, RZ, c[0x0][0x1f8], R20 ;
 Instr 669 @ 0x29d0 (10704) - IADD3 R21, -R23, RZ, RZ ;
 Instr 670 @ 0x29e0 (10720) - IMAD R21, R21, c[0x0][0x1f0], R22 ;
 Instr 671 @ 0x29f0 (10736) - IMAD R6, R21, c[0x0][0x2f4], R6 ;
 Instr 672 @ 0x2a00 (10752) - @!P0 BRA 0x3480 ;
Basic block id 79 - num instructions 9
 Instr 673 @ 0x2a10 (10768) - MOV R21, R23 ;
 Instr 674 @ 0x2a20 (10784) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 675 @ 0x2a30 (10800) - ISETP.NE.AND P0, PT, R10, 0x7, PT ;
 Instr 676 @ 0x2a40 (10816) - IMAD.HI.U32 R20, R23, c[0x0][0x200], R20 ;
 Instr 677 @ 0x2a50 (10832) - SHF.R.U32.HI R22, RZ, c[0x0][0x204], R20 ;
 Instr 678 @ 0x2a60 (10848) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 679 @ 0x2a70 (10864) - IMAD R21, R21, c[0x0][0x1fc], R23 ;
 Instr 680 @ 0x2a80 (10880) - IMAD R6, R21, c[0x0][0x2f8], R6 ;
 Instr 681 @ 0x2a90 (10896) - @!P0 BRA 0x3480 ;
Basic block id 80 - num instructions 9
 Instr 682 @ 0x2aa0 (10912) - MOV R20, RZ ;
 Instr 683 @ 0x2ab0 (10928) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 684 @ 0x2ac0 (10944) - ISETP.NE.AND P0, PT, R10, 0x8, PT ;
 Instr 685 @ 0x2ad0 (10960) - IMAD.HI.U32 R20, R22, c[0x0][0x20c], R20 ;
 Instr 686 @ 0x2ae0 (10976) - SHF.R.U32.HI R23, RZ, c[0x0][0x210], R20 ;
 Instr 687 @ 0x2af0 (10992) - IADD3 R21, -R23, RZ, RZ ;
 Instr 688 @ 0x2b00 (11008) - IMAD R21, R21, c[0x0][0x208], R22 ;
 Instr 689 @ 0x2b10 (11024) - IMAD R6, R21, c[0x0][0x2fc], R6 ;
 Instr 690 @ 0x2b20 (11040) - @!P0 BRA 0x3480 ;
Basic block id 81 - num instructions 9
 Instr 691 @ 0x2b30 (11056) - MOV R21, R23 ;
 Instr 692 @ 0x2b40 (11072) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 693 @ 0x2b50 (11088) - ISETP.NE.AND P0, PT, R10, 0x9, PT ;
 Instr 694 @ 0x2b60 (11104) - IMAD.HI.U32 R20, R23, c[0x0][0x218], R20 ;
 Instr 695 @ 0x2b70 (11120) - SHF.R.U32.HI R22, RZ, c[0x0][0x21c], R20 ;
 Instr 696 @ 0x2b80 (11136) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 697 @ 0x2b90 (11152) - IMAD R21, R21, c[0x0][0x214], R23 ;
 Instr 698 @ 0x2ba0 (11168) - IMAD R6, R21, c[0x0][0x300], R6 ;
 Instr 699 @ 0x2bb0 (11184) - @!P0 BRA 0x3480 ;
Basic block id 82 - num instructions 9
 Instr 700 @ 0x2bc0 (11200) - MOV R20, RZ ;
 Instr 701 @ 0x2bd0 (11216) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 702 @ 0x2be0 (11232) - ISETP.NE.AND P0, PT, R10, 0xa, PT ;
 Instr 703 @ 0x2bf0 (11248) - IMAD.HI.U32 R20, R22, c[0x0][0x224], R20 ;
 Instr 704 @ 0x2c00 (11264) - SHF.R.U32.HI R23, RZ, c[0x0][0x228], R20 ;
 Instr 705 @ 0x2c10 (11280) - IADD3 R21, -R23, RZ, RZ ;
 Instr 706 @ 0x2c20 (11296) - IMAD R21, R21, c[0x0][0x220], R22 ;
 Instr 707 @ 0x2c30 (11312) - IMAD R6, R21, c[0x0][0x304], R6 ;
 Instr 708 @ 0x2c40 (11328) - @!P0 BRA 0x3480 ;
Basic block id 83 - num instructions 9
 Instr 709 @ 0x2c50 (11344) - MOV R21, R23 ;
 Instr 710 @ 0x2c60 (11360) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 711 @ 0x2c70 (11376) - ISETP.NE.AND P0, PT, R10, 0xb, PT ;
 Instr 712 @ 0x2c80 (11392) - IMAD.HI.U32 R20, R23, c[0x0][0x230], R20 ;
 Instr 713 @ 0x2c90 (11408) - SHF.R.U32.HI R22, RZ, c[0x0][0x234], R20 ;
 Instr 714 @ 0x2ca0 (11424) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 715 @ 0x2cb0 (11440) - IMAD R21, R21, c[0x0][0x22c], R23 ;
 Instr 716 @ 0x2cc0 (11456) - IMAD R6, R21, c[0x0][0x308], R6 ;
 Instr 717 @ 0x2cd0 (11472) - @!P0 BRA 0x3480 ;
Basic block id 84 - num instructions 9
 Instr 718 @ 0x2ce0 (11488) - MOV R20, RZ ;
 Instr 719 @ 0x2cf0 (11504) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 720 @ 0x2d00 (11520) - ISETP.NE.AND P0, PT, R10, 0xc, PT ;
 Instr 721 @ 0x2d10 (11536) - IMAD.HI.U32 R20, R22, c[0x0][0x23c], R20 ;
 Instr 722 @ 0x2d20 (11552) - SHF.R.U32.HI R23, RZ, c[0x0][0x240], R20 ;
 Instr 723 @ 0x2d30 (11568) - IADD3 R21, -R23, RZ, RZ ;
 Instr 724 @ 0x2d40 (11584) - IMAD R21, R21, c[0x0][0x238], R22 ;
 Instr 725 @ 0x2d50 (11600) - IMAD R6, R21, c[0x0][0x30c], R6 ;
 Instr 726 @ 0x2d60 (11616) - @!P0 BRA 0x3480 ;
Basic block id 85 - num instructions 9
 Instr 727 @ 0x2d70 (11632) - MOV R21, R23 ;
 Instr 728 @ 0x2d80 (11648) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 729 @ 0x2d90 (11664) - ISETP.NE.AND P0, PT, R10, 0xd, PT ;
 Instr 730 @ 0x2da0 (11680) - IMAD.HI.U32 R20, R23, c[0x0][0x248], R20 ;
 Instr 731 @ 0x2db0 (11696) - SHF.R.U32.HI R22, RZ, c[0x0][0x24c], R20 ;
 Instr 732 @ 0x2dc0 (11712) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 733 @ 0x2dd0 (11728) - IMAD R21, R21, c[0x0][0x244], R23 ;
 Instr 734 @ 0x2de0 (11744) - IMAD R6, R21, c[0x0][0x310], R6 ;
 Instr 735 @ 0x2df0 (11760) - @!P0 BRA 0x3480 ;
Basic block id 86 - num instructions 9
 Instr 736 @ 0x2e00 (11776) - MOV R20, RZ ;
 Instr 737 @ 0x2e10 (11792) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 738 @ 0x2e20 (11808) - ISETP.NE.AND P0, PT, R10, 0xe, PT ;
 Instr 739 @ 0x2e30 (11824) - IMAD.HI.U32 R20, R22, c[0x0][0x254], R20 ;
 Instr 740 @ 0x2e40 (11840) - SHF.R.U32.HI R23, RZ, c[0x0][0x258], R20 ;
 Instr 741 @ 0x2e50 (11856) - IADD3 R21, -R23, RZ, RZ ;
 Instr 742 @ 0x2e60 (11872) - IMAD R21, R21, c[0x0][0x250], R22 ;
 Instr 743 @ 0x2e70 (11888) - IMAD R6, R21, c[0x0][0x314], R6 ;
 Instr 744 @ 0x2e80 (11904) - @!P0 BRA 0x3480 ;
Basic block id 87 - num instructions 9
 Instr 745 @ 0x2e90 (11920) - MOV R21, R23 ;
 Instr 746 @ 0x2ea0 (11936) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 747 @ 0x2eb0 (11952) - ISETP.NE.AND P0, PT, R10, 0xf, PT ;
 Instr 748 @ 0x2ec0 (11968) - IMAD.HI.U32 R20, R23, c[0x0][0x260], R20 ;
 Instr 749 @ 0x2ed0 (11984) - SHF.R.U32.HI R22, RZ, c[0x0][0x264], R20 ;
 Instr 750 @ 0x2ee0 (12000) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 751 @ 0x2ef0 (12016) - IMAD R21, R21, c[0x0][0x25c], R23 ;
 Instr 752 @ 0x2f00 (12032) - IMAD R6, R21, c[0x0][0x318], R6 ;
 Instr 753 @ 0x2f10 (12048) - @!P0 BRA 0x3480 ;
Basic block id 88 - num instructions 9
 Instr 754 @ 0x2f20 (12064) - MOV R20, RZ ;
 Instr 755 @ 0x2f30 (12080) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 756 @ 0x2f40 (12096) - ISETP.NE.AND P0, PT, R10, 0x10, PT ;
 Instr 757 @ 0x2f50 (12112) - IMAD.HI.U32 R20, R22, c[0x0][0x26c], R20 ;
 Instr 758 @ 0x2f60 (12128) - SHF.R.U32.HI R23, RZ, c[0x0][0x270], R20 ;
 Instr 759 @ 0x2f70 (12144) - IADD3 R21, -R23, RZ, RZ ;
 Instr 760 @ 0x2f80 (12160) - IMAD R21, R21, c[0x0][0x268], R22 ;
 Instr 761 @ 0x2f90 (12176) - IMAD R6, R21, c[0x0][0x31c], R6 ;
 Instr 762 @ 0x2fa0 (12192) - @!P0 BRA 0x3480 ;
Basic block id 89 - num instructions 9
 Instr 763 @ 0x2fb0 (12208) - MOV R21, R23 ;
 Instr 764 @ 0x2fc0 (12224) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 765 @ 0x2fd0 (12240) - ISETP.NE.AND P0, PT, R10, 0x11, PT ;
 Instr 766 @ 0x2fe0 (12256) - IMAD.HI.U32 R20, R23, c[0x0][0x278], R20 ;
 Instr 767 @ 0x2ff0 (12272) - SHF.R.U32.HI R22, RZ, c[0x0][0x27c], R20 ;
 Instr 768 @ 0x3000 (12288) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 769 @ 0x3010 (12304) - IMAD R21, R21, c[0x0][0x274], R23 ;
 Instr 770 @ 0x3020 (12320) - IMAD R6, R21, c[0x0][0x320], R6 ;
 Instr 771 @ 0x3030 (12336) - @!P0 BRA 0x3480 ;
Basic block id 90 - num instructions 9
 Instr 772 @ 0x3040 (12352) - MOV R20, RZ ;
 Instr 773 @ 0x3050 (12368) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 774 @ 0x3060 (12384) - ISETP.NE.AND P0, PT, R10, 0x12, PT ;
 Instr 775 @ 0x3070 (12400) - IMAD.HI.U32 R20, R22, c[0x0][0x284], R20 ;
 Instr 776 @ 0x3080 (12416) - SHF.R.U32.HI R23, RZ, c[0x0][0x288], R20 ;
 Instr 777 @ 0x3090 (12432) - IADD3 R21, -R23, RZ, RZ ;
 Instr 778 @ 0x30a0 (12448) - IMAD R21, R21, c[0x0][0x280], R22 ;
 Instr 779 @ 0x30b0 (12464) - IMAD R6, R21, c[0x0][0x324], R6 ;
 Instr 780 @ 0x30c0 (12480) - @!P0 BRA 0x3480 ;
Basic block id 91 - num instructions 9
 Instr 781 @ 0x30d0 (12496) - MOV R21, R23 ;
 Instr 782 @ 0x30e0 (12512) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 783 @ 0x30f0 (12528) - ISETP.NE.AND P0, PT, R10, 0x13, PT ;
 Instr 784 @ 0x3100 (12544) - IMAD.HI.U32 R20, R23, c[0x0][0x290], R20 ;
 Instr 785 @ 0x3110 (12560) - SHF.R.U32.HI R22, RZ, c[0x0][0x294], R20 ;
 Instr 786 @ 0x3120 (12576) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 787 @ 0x3130 (12592) - IMAD R21, R21, c[0x0][0x28c], R23 ;
 Instr 788 @ 0x3140 (12608) - IMAD R6, R21, c[0x0][0x328], R6 ;
 Instr 789 @ 0x3150 (12624) - @!P0 BRA 0x3480 ;
Basic block id 92 - num instructions 9
 Instr 790 @ 0x3160 (12640) - MOV R20, RZ ;
 Instr 791 @ 0x3170 (12656) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 792 @ 0x3180 (12672) - ISETP.NE.AND P0, PT, R10, 0x14, PT ;
 Instr 793 @ 0x3190 (12688) - IMAD.HI.U32 R20, R22, c[0x0][0x29c], R20 ;
 Instr 794 @ 0x31a0 (12704) - SHF.R.U32.HI R23, RZ, c[0x0][0x2a0], R20 ;
 Instr 795 @ 0x31b0 (12720) - IADD3 R21, -R23, RZ, RZ ;
 Instr 796 @ 0x31c0 (12736) - IMAD R21, R21, c[0x0][0x298], R22 ;
 Instr 797 @ 0x31d0 (12752) - IMAD R6, R21, c[0x0][0x32c], R6 ;
 Instr 798 @ 0x31e0 (12768) - @!P0 BRA 0x3480 ;
Basic block id 93 - num instructions 9
 Instr 799 @ 0x31f0 (12784) - MOV R21, R23 ;
 Instr 800 @ 0x3200 (12800) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 801 @ 0x3210 (12816) - ISETP.NE.AND P0, PT, R10, 0x15, PT ;
 Instr 802 @ 0x3220 (12832) - IMAD.HI.U32 R20, R23, c[0x0][0x2a8], R20 ;
 Instr 803 @ 0x3230 (12848) - SHF.R.U32.HI R22, RZ, c[0x0][0x2ac], R20 ;
 Instr 804 @ 0x3240 (12864) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 805 @ 0x3250 (12880) - IMAD R21, R21, c[0x0][0x2a4], R23 ;
 Instr 806 @ 0x3260 (12896) - IMAD R6, R21, c[0x0][0x330], R6 ;
 Instr 807 @ 0x3270 (12912) - @!P0 BRA 0x3480 ;
Basic block id 94 - num instructions 9
 Instr 808 @ 0x3280 (12928) - MOV R20, RZ ;
 Instr 809 @ 0x3290 (12944) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 810 @ 0x32a0 (12960) - ISETP.NE.AND P0, PT, R10, 0x16, PT ;
 Instr 811 @ 0x32b0 (12976) - IMAD.HI.U32 R20, R22, c[0x0][0x2b4], R20 ;
 Instr 812 @ 0x32c0 (12992) - SHF.R.U32.HI R23, RZ, c[0x0][0x2b8], R20 ;
 Instr 813 @ 0x32d0 (13008) - IADD3 R21, -R23, RZ, RZ ;
 Instr 814 @ 0x32e0 (13024) - IMAD R21, R21, c[0x0][0x2b0], R22 ;
 Instr 815 @ 0x32f0 (13040) - IMAD R6, R21, c[0x0][0x334], R6 ;
 Instr 816 @ 0x3300 (13056) - @!P0 BRA 0x3480 ;
Basic block id 95 - num instructions 9
 Instr 817 @ 0x3310 (13072) - MOV R21, R23 ;
 Instr 818 @ 0x3320 (13088) - IMAD.MOV.U32 R20, RZ, RZ, RZ ;
 Instr 819 @ 0x3330 (13104) - ISETP.NE.AND P0, PT, R10, 0x17, PT ;
 Instr 820 @ 0x3340 (13120) - IMAD.HI.U32 R20, R23, c[0x0][0x2c0], R20 ;
 Instr 821 @ 0x3350 (13136) - SHF.R.U32.HI R22, RZ, c[0x0][0x2c4], R20 ;
 Instr 822 @ 0x3360 (13152) - IMAD.MOV R21, RZ, RZ, -R22 ;
 Instr 823 @ 0x3370 (13168) - IMAD R21, R21, c[0x0][0x2bc], R23 ;
 Instr 824 @ 0x3380 (13184) - IMAD R6, R21, c[0x0][0x338], R6 ;
 Instr 825 @ 0x3390 (13200) - @!P0 BRA 0x3480 ;
Basic block id 96 - num instructions 14
 Instr 826 @ 0x33a0 (13216) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
 Instr 827 @ 0x33b0 (13232) - IMAD.MOV.U32 R21, RZ, RZ, R22 ;
 Instr 828 @ 0x33c0 (13248) - MOV R20, RZ ;
 Instr 829 @ 0x33d0 (13264) - IMAD.HI.U32 R20, R22, c[0x0][0x2cc], R20 ;
 Instr 830 @ 0x33e0 (13280) - SHF.R.U32.HI R21, RZ, c[0x0][0x2d0], R20 ;
 Instr 831 @ 0x33f0 (13296) - @P0 MOV R20, RZ ;
 Instr 832 @ 0x3400 (13312) - IMAD.MOV R23, RZ, RZ, -R21.reuse ;
 Instr 833 @ 0x3410 (13328) - @P0 IMAD.HI.U32 R10, R21, c[0x0][0x2d8], R20 ;
 Instr 834 @ 0x3420 (13344) - IMAD R23, R23, c[0x0][0x2c8], R22 ;
 Instr 835 @ 0x3430 (13360) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 836 @ 0x3440 (13376) - IMAD R6, R23, c[0x0][0x33c], R6 ;
 Instr 837 @ 0x3450 (13392) - @P0 IADD3 R20, -R10, RZ, RZ ;
 Instr 838 @ 0x3460 (13408) - @P0 IMAD R21, R20, c[0x0][0x2d4], R21 ;
 Instr 839 @ 0x3470 (13424) - @P0 IMAD R6, R21, c[0x0][0x340], R6 ;
Basic block id 97 - num instructions 8
 Instr 840 @ 0x3480 (13440) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 841 @ 0x3490 (13456) - IADD3 R20, P0, R4, R21, RZ ;
 Instr 842 @ 0x34a0 (13472) - IMAD.X R21, RZ, RZ, R5, P0 ;
 Instr 843 @ 0x34b0 (13488) - LDG.E.64.SYS R20, [R20] ;
 Instr 844 @ 0x34c0 (13504) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 845 @ 0x34d0 (13520) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 846 @ 0x34e0 (13536) - MOV R6, RZ ;
 Instr 847 @ 0x34f0 (13552) - @!P4 BRA 0x42d0 ;
Basic block id 98 - num instructions 9
 Instr 848 @ 0x3500 (13568) - MOV R10, RZ ;
 Instr 849 @ 0x3510 (13584) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x1b0] ;
 Instr 850 @ 0x3520 (13600) - IMAD.HI.U32 R10, R11, c[0x0][0x1b8], R10 ;
 Instr 851 @ 0x3530 (13616) - ISETP.NE.AND P0, PT, R24, 0x1, PT ;
 Instr 852 @ 0x3540 (13632) - SHF.R.U32.HI R25, RZ, c[0x0][0x1bc], R10 ;
 Instr 853 @ 0x3550 (13648) - IADD3 R10, -R25, RZ, RZ ;
 Instr 854 @ 0x3560 (13664) - IMAD R10, R10, c[0x0][0x1b4], R11 ;
 Instr 855 @ 0x3570 (13680) - IMAD R10, R10, c[0x0][0x2e0], RZ ;
 Instr 856 @ 0x3580 (13696) - @!P0 BRA 0x42d0 ;
Basic block id 99 - num instructions 9
 Instr 857 @ 0x3590 (13712) - MOV R23, R25 ;
 Instr 858 @ 0x35a0 (13728) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 859 @ 0x35b0 (13744) - ISETP.NE.AND P0, PT, R24, 0x2, PT ;
 Instr 860 @ 0x35c0 (13760) - IMAD.HI.U32 R22, R25, c[0x0][0x1c4], R22 ;
 Instr 861 @ 0x35d0 (13776) - SHF.R.U32.HI R26, RZ, c[0x0][0x1c8], R22 ;
 Instr 862 @ 0x35e0 (13792) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 863 @ 0x35f0 (13808) - IMAD R23, R23, c[0x0][0x1c0], R25 ;
 Instr 864 @ 0x3600 (13824) - IMAD R10, R23, c[0x0][0x2e4], R10 ;
 Instr 865 @ 0x3610 (13840) - @!P0 BRA 0x42d0 ;
Basic block id 100 - num instructions 9
 Instr 866 @ 0x3620 (13856) - MOV R22, RZ ;
 Instr 867 @ 0x3630 (13872) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 868 @ 0x3640 (13888) - ISETP.NE.AND P0, PT, R24, 0x3, PT ;
 Instr 869 @ 0x3650 (13904) - IMAD.HI.U32 R22, R26, c[0x0][0x1d0], R22 ;
 Instr 870 @ 0x3660 (13920) - SHF.R.U32.HI R25, RZ, c[0x0][0x1d4], R22 ;
 Instr 871 @ 0x3670 (13936) - IADD3 R23, -R25, RZ, RZ ;
 Instr 872 @ 0x3680 (13952) - IMAD R23, R23, c[0x0][0x1cc], R26 ;
 Instr 873 @ 0x3690 (13968) - IMAD R10, R23, c[0x0][0x2e8], R10 ;
 Instr 874 @ 0x36a0 (13984) - @!P0 BRA 0x42d0 ;
Basic block id 101 - num instructions 9
 Instr 875 @ 0x36b0 (14000) - MOV R23, R25 ;
 Instr 876 @ 0x36c0 (14016) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 877 @ 0x36d0 (14032) - ISETP.NE.AND P0, PT, R24, 0x4, PT ;
 Instr 878 @ 0x36e0 (14048) - IMAD.HI.U32 R22, R25, c[0x0][0x1dc], R22 ;
 Instr 879 @ 0x36f0 (14064) - SHF.R.U32.HI R26, RZ, c[0x0][0x1e0], R22 ;
 Instr 880 @ 0x3700 (14080) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 881 @ 0x3710 (14096) - IMAD R23, R23, c[0x0][0x1d8], R25 ;
 Instr 882 @ 0x3720 (14112) - IMAD R10, R23, c[0x0][0x2ec], R10 ;
 Instr 883 @ 0x3730 (14128) - @!P0 BRA 0x42d0 ;
Basic block id 102 - num instructions 9
 Instr 884 @ 0x3740 (14144) - MOV R22, RZ ;
 Instr 885 @ 0x3750 (14160) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 886 @ 0x3760 (14176) - ISETP.NE.AND P0, PT, R24, 0x5, PT ;
 Instr 887 @ 0x3770 (14192) - IMAD.HI.U32 R22, R26, c[0x0][0x1e8], R22 ;
 Instr 888 @ 0x3780 (14208) - SHF.R.U32.HI R25, RZ, c[0x0][0x1ec], R22 ;
 Instr 889 @ 0x3790 (14224) - IADD3 R23, -R25, RZ, RZ ;
 Instr 890 @ 0x37a0 (14240) - IMAD R23, R23, c[0x0][0x1e4], R26 ;
 Instr 891 @ 0x37b0 (14256) - IMAD R10, R23, c[0x0][0x2f0], R10 ;
 Instr 892 @ 0x37c0 (14272) - @!P0 BRA 0x42d0 ;
Basic block id 103 - num instructions 9
 Instr 893 @ 0x37d0 (14288) - MOV R23, R25 ;
 Instr 894 @ 0x37e0 (14304) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 895 @ 0x37f0 (14320) - ISETP.NE.AND P0, PT, R24, 0x6, PT ;
 Instr 896 @ 0x3800 (14336) - IMAD.HI.U32 R22, R25, c[0x0][0x1f4], R22 ;
 Instr 897 @ 0x3810 (14352) - SHF.R.U32.HI R26, RZ, c[0x0][0x1f8], R22 ;
 Instr 898 @ 0x3820 (14368) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 899 @ 0x3830 (14384) - IMAD R23, R23, c[0x0][0x1f0], R25 ;
 Instr 900 @ 0x3840 (14400) - IMAD R10, R23, c[0x0][0x2f4], R10 ;
 Instr 901 @ 0x3850 (14416) - @!P0 BRA 0x42d0 ;
Basic block id 104 - num instructions 9
 Instr 902 @ 0x3860 (14432) - MOV R22, RZ ;
 Instr 903 @ 0x3870 (14448) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 904 @ 0x3880 (14464) - ISETP.NE.AND P0, PT, R24, 0x7, PT ;
 Instr 905 @ 0x3890 (14480) - IMAD.HI.U32 R22, R26, c[0x0][0x200], R22 ;
 Instr 906 @ 0x38a0 (14496) - SHF.R.U32.HI R25, RZ, c[0x0][0x204], R22 ;
 Instr 907 @ 0x38b0 (14512) - IADD3 R23, -R25, RZ, RZ ;
 Instr 908 @ 0x38c0 (14528) - IMAD R23, R23, c[0x0][0x1fc], R26 ;
 Instr 909 @ 0x38d0 (14544) - IMAD R10, R23, c[0x0][0x2f8], R10 ;
 Instr 910 @ 0x38e0 (14560) - @!P0 BRA 0x42d0 ;
Basic block id 105 - num instructions 9
 Instr 911 @ 0x38f0 (14576) - MOV R23, R25 ;
 Instr 912 @ 0x3900 (14592) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 913 @ 0x3910 (14608) - ISETP.NE.AND P0, PT, R24, 0x8, PT ;
 Instr 914 @ 0x3920 (14624) - IMAD.HI.U32 R22, R25, c[0x0][0x20c], R22 ;
 Instr 915 @ 0x3930 (14640) - SHF.R.U32.HI R26, RZ, c[0x0][0x210], R22 ;
 Instr 916 @ 0x3940 (14656) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 917 @ 0x3950 (14672) - IMAD R23, R23, c[0x0][0x208], R25 ;
 Instr 918 @ 0x3960 (14688) - IMAD R10, R23, c[0x0][0x2fc], R10 ;
 Instr 919 @ 0x3970 (14704) - @!P0 BRA 0x42d0 ;
Basic block id 106 - num instructions 9
 Instr 920 @ 0x3980 (14720) - MOV R22, RZ ;
 Instr 921 @ 0x3990 (14736) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 922 @ 0x39a0 (14752) - ISETP.NE.AND P0, PT, R24, 0x9, PT ;
 Instr 923 @ 0x39b0 (14768) - IMAD.HI.U32 R22, R26, c[0x0][0x218], R22 ;
 Instr 924 @ 0x39c0 (14784) - SHF.R.U32.HI R25, RZ, c[0x0][0x21c], R22 ;
 Instr 925 @ 0x39d0 (14800) - IADD3 R23, -R25, RZ, RZ ;
 Instr 926 @ 0x39e0 (14816) - IMAD R23, R23, c[0x0][0x214], R26 ;
 Instr 927 @ 0x39f0 (14832) - IMAD R10, R23, c[0x0][0x300], R10 ;
 Instr 928 @ 0x3a00 (14848) - @!P0 BRA 0x42d0 ;
Basic block id 107 - num instructions 9
 Instr 929 @ 0x3a10 (14864) - MOV R23, R25 ;
 Instr 930 @ 0x3a20 (14880) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 931 @ 0x3a30 (14896) - ISETP.NE.AND P0, PT, R24, 0xa, PT ;
 Instr 932 @ 0x3a40 (14912) - IMAD.HI.U32 R22, R25, c[0x0][0x224], R22 ;
 Instr 933 @ 0x3a50 (14928) - SHF.R.U32.HI R26, RZ, c[0x0][0x228], R22 ;
 Instr 934 @ 0x3a60 (14944) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 935 @ 0x3a70 (14960) - IMAD R23, R23, c[0x0][0x220], R25 ;
 Instr 936 @ 0x3a80 (14976) - IMAD R10, R23, c[0x0][0x304], R10 ;
 Instr 937 @ 0x3a90 (14992) - @!P0 BRA 0x42d0 ;
Basic block id 108 - num instructions 9
 Instr 938 @ 0x3aa0 (15008) - MOV R22, RZ ;
 Instr 939 @ 0x3ab0 (15024) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 940 @ 0x3ac0 (15040) - ISETP.NE.AND P0, PT, R24, 0xb, PT ;
 Instr 941 @ 0x3ad0 (15056) - IMAD.HI.U32 R22, R26, c[0x0][0x230], R22 ;
 Instr 942 @ 0x3ae0 (15072) - SHF.R.U32.HI R25, RZ, c[0x0][0x234], R22 ;
 Instr 943 @ 0x3af0 (15088) - IADD3 R23, -R25, RZ, RZ ;
 Instr 944 @ 0x3b00 (15104) - IMAD R23, R23, c[0x0][0x22c], R26 ;
 Instr 945 @ 0x3b10 (15120) - IMAD R10, R23, c[0x0][0x308], R10 ;
 Instr 946 @ 0x3b20 (15136) - @!P0 BRA 0x42d0 ;
Basic block id 109 - num instructions 9
 Instr 947 @ 0x3b30 (15152) - MOV R23, R25 ;
 Instr 948 @ 0x3b40 (15168) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 949 @ 0x3b50 (15184) - ISETP.NE.AND P0, PT, R24, 0xc, PT ;
 Instr 950 @ 0x3b60 (15200) - IMAD.HI.U32 R22, R25, c[0x0][0x23c], R22 ;
 Instr 951 @ 0x3b70 (15216) - SHF.R.U32.HI R26, RZ, c[0x0][0x240], R22 ;
 Instr 952 @ 0x3b80 (15232) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 953 @ 0x3b90 (15248) - IMAD R23, R23, c[0x0][0x238], R25 ;
 Instr 954 @ 0x3ba0 (15264) - IMAD R10, R23, c[0x0][0x30c], R10 ;
 Instr 955 @ 0x3bb0 (15280) - @!P0 BRA 0x42d0 ;
Basic block id 110 - num instructions 9
 Instr 956 @ 0x3bc0 (15296) - MOV R22, RZ ;
 Instr 957 @ 0x3bd0 (15312) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 958 @ 0x3be0 (15328) - ISETP.NE.AND P0, PT, R24, 0xd, PT ;
 Instr 959 @ 0x3bf0 (15344) - IMAD.HI.U32 R22, R26, c[0x0][0x248], R22 ;
 Instr 960 @ 0x3c00 (15360) - SHF.R.U32.HI R25, RZ, c[0x0][0x24c], R22 ;
 Instr 961 @ 0x3c10 (15376) - IADD3 R23, -R25, RZ, RZ ;
 Instr 962 @ 0x3c20 (15392) - IMAD R23, R23, c[0x0][0x244], R26 ;
 Instr 963 @ 0x3c30 (15408) - IMAD R10, R23, c[0x0][0x310], R10 ;
 Instr 964 @ 0x3c40 (15424) - @!P0 BRA 0x42d0 ;
Basic block id 111 - num instructions 9
 Instr 965 @ 0x3c50 (15440) - MOV R23, R25 ;
 Instr 966 @ 0x3c60 (15456) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 967 @ 0x3c70 (15472) - ISETP.NE.AND P0, PT, R24, 0xe, PT ;
 Instr 968 @ 0x3c80 (15488) - IMAD.HI.U32 R22, R25, c[0x0][0x254], R22 ;
 Instr 969 @ 0x3c90 (15504) - SHF.R.U32.HI R26, RZ, c[0x0][0x258], R22 ;
 Instr 970 @ 0x3ca0 (15520) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 971 @ 0x3cb0 (15536) - IMAD R23, R23, c[0x0][0x250], R25 ;
 Instr 972 @ 0x3cc0 (15552) - IMAD R10, R23, c[0x0][0x314], R10 ;
 Instr 973 @ 0x3cd0 (15568) - @!P0 BRA 0x42d0 ;
Basic block id 112 - num instructions 9
 Instr 974 @ 0x3ce0 (15584) - MOV R22, RZ ;
 Instr 975 @ 0x3cf0 (15600) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 976 @ 0x3d00 (15616) - ISETP.NE.AND P0, PT, R24, 0xf, PT ;
 Instr 977 @ 0x3d10 (15632) - IMAD.HI.U32 R22, R26, c[0x0][0x260], R22 ;
 Instr 978 @ 0x3d20 (15648) - SHF.R.U32.HI R25, RZ, c[0x0][0x264], R22 ;
 Instr 979 @ 0x3d30 (15664) - IADD3 R23, -R25, RZ, RZ ;
 Instr 980 @ 0x3d40 (15680) - IMAD R23, R23, c[0x0][0x25c], R26 ;
 Instr 981 @ 0x3d50 (15696) - IMAD R10, R23, c[0x0][0x318], R10 ;
 Instr 982 @ 0x3d60 (15712) - @!P0 BRA 0x42d0 ;
Basic block id 113 - num instructions 9
 Instr 983 @ 0x3d70 (15728) - MOV R23, R25 ;
 Instr 984 @ 0x3d80 (15744) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 985 @ 0x3d90 (15760) - ISETP.NE.AND P0, PT, R24, 0x10, PT ;
 Instr 986 @ 0x3da0 (15776) - IMAD.HI.U32 R22, R25, c[0x0][0x26c], R22 ;
 Instr 987 @ 0x3db0 (15792) - SHF.R.U32.HI R26, RZ, c[0x0][0x270], R22 ;
 Instr 988 @ 0x3dc0 (15808) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 989 @ 0x3dd0 (15824) - IMAD R23, R23, c[0x0][0x268], R25 ;
 Instr 990 @ 0x3de0 (15840) - IMAD R10, R23, c[0x0][0x31c], R10 ;
 Instr 991 @ 0x3df0 (15856) - @!P0 BRA 0x42d0 ;
Basic block id 114 - num instructions 9
 Instr 992 @ 0x3e00 (15872) - MOV R22, RZ ;
 Instr 993 @ 0x3e10 (15888) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 994 @ 0x3e20 (15904) - ISETP.NE.AND P0, PT, R24, 0x11, PT ;
 Instr 995 @ 0x3e30 (15920) - IMAD.HI.U32 R22, R26, c[0x0][0x278], R22 ;
 Instr 996 @ 0x3e40 (15936) - SHF.R.U32.HI R25, RZ, c[0x0][0x27c], R22 ;
 Instr 997 @ 0x3e50 (15952) - IADD3 R23, -R25, RZ, RZ ;
 Instr 998 @ 0x3e60 (15968) - IMAD R23, R23, c[0x0][0x274], R26 ;
 Instr 999 @ 0x3e70 (15984) - IMAD R10, R23, c[0x0][0x320], R10 ;
 Instr 1000 @ 0x3e80 (16000) - @!P0 BRA 0x42d0 ;
Basic block id 115 - num instructions 9
 Instr 1001 @ 0x3e90 (16016) - MOV R23, R25 ;
 Instr 1002 @ 0x3ea0 (16032) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1003 @ 0x3eb0 (16048) - ISETP.NE.AND P0, PT, R24, 0x12, PT ;
 Instr 1004 @ 0x3ec0 (16064) - IMAD.HI.U32 R22, R25, c[0x0][0x284], R22 ;
 Instr 1005 @ 0x3ed0 (16080) - SHF.R.U32.HI R26, RZ, c[0x0][0x288], R22 ;
 Instr 1006 @ 0x3ee0 (16096) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 1007 @ 0x3ef0 (16112) - IMAD R23, R23, c[0x0][0x280], R25 ;
 Instr 1008 @ 0x3f00 (16128) - IMAD R10, R23, c[0x0][0x324], R10 ;
 Instr 1009 @ 0x3f10 (16144) - @!P0 BRA 0x42d0 ;
Basic block id 116 - num instructions 9
 Instr 1010 @ 0x3f20 (16160) - MOV R22, RZ ;
 Instr 1011 @ 0x3f30 (16176) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 1012 @ 0x3f40 (16192) - ISETP.NE.AND P0, PT, R24, 0x13, PT ;
 Instr 1013 @ 0x3f50 (16208) - IMAD.HI.U32 R22, R26, c[0x0][0x290], R22 ;
 Instr 1014 @ 0x3f60 (16224) - SHF.R.U32.HI R25, RZ, c[0x0][0x294], R22 ;
 Instr 1015 @ 0x3f70 (16240) - IADD3 R23, -R25, RZ, RZ ;
 Instr 1016 @ 0x3f80 (16256) - IMAD R23, R23, c[0x0][0x28c], R26 ;
 Instr 1017 @ 0x3f90 (16272) - IMAD R10, R23, c[0x0][0x328], R10 ;
 Instr 1018 @ 0x3fa0 (16288) - @!P0 BRA 0x42d0 ;
Basic block id 117 - num instructions 9
 Instr 1019 @ 0x3fb0 (16304) - MOV R23, R25 ;
 Instr 1020 @ 0x3fc0 (16320) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1021 @ 0x3fd0 (16336) - ISETP.NE.AND P0, PT, R24, 0x14, PT ;
 Instr 1022 @ 0x3fe0 (16352) - IMAD.HI.U32 R22, R25, c[0x0][0x29c], R22 ;
 Instr 1023 @ 0x3ff0 (16368) - SHF.R.U32.HI R26, RZ, c[0x0][0x2a0], R22 ;
 Instr 1024 @ 0x4000 (16384) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 1025 @ 0x4010 (16400) - IMAD R23, R23, c[0x0][0x298], R25 ;
 Instr 1026 @ 0x4020 (16416) - IMAD R10, R23, c[0x0][0x32c], R10 ;
 Instr 1027 @ 0x4030 (16432) - @!P0 BRA 0x42d0 ;
Basic block id 118 - num instructions 9
 Instr 1028 @ 0x4040 (16448) - MOV R22, RZ ;
 Instr 1029 @ 0x4050 (16464) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 1030 @ 0x4060 (16480) - ISETP.NE.AND P0, PT, R24, 0x15, PT ;
 Instr 1031 @ 0x4070 (16496) - IMAD.HI.U32 R22, R26, c[0x0][0x2a8], R22 ;
 Instr 1032 @ 0x4080 (16512) - SHF.R.U32.HI R25, RZ, c[0x0][0x2ac], R22 ;
 Instr 1033 @ 0x4090 (16528) - IADD3 R23, -R25, RZ, RZ ;
 Instr 1034 @ 0x40a0 (16544) - IMAD R23, R23, c[0x0][0x2a4], R26 ;
 Instr 1035 @ 0x40b0 (16560) - IMAD R10, R23, c[0x0][0x330], R10 ;
 Instr 1036 @ 0x40c0 (16576) - @!P0 BRA 0x42d0 ;
Basic block id 119 - num instructions 9
 Instr 1037 @ 0x40d0 (16592) - MOV R23, R25 ;
 Instr 1038 @ 0x40e0 (16608) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1039 @ 0x40f0 (16624) - ISETP.NE.AND P0, PT, R24, 0x16, PT ;
 Instr 1040 @ 0x4100 (16640) - IMAD.HI.U32 R22, R25, c[0x0][0x2b4], R22 ;
 Instr 1041 @ 0x4110 (16656) - SHF.R.U32.HI R26, RZ, c[0x0][0x2b8], R22 ;
 Instr 1042 @ 0x4120 (16672) - IMAD.MOV R23, RZ, RZ, -R26 ;
 Instr 1043 @ 0x4130 (16688) - IMAD R23, R23, c[0x0][0x2b0], R25 ;
 Instr 1044 @ 0x4140 (16704) - IMAD R10, R23, c[0x0][0x334], R10 ;
 Instr 1045 @ 0x4150 (16720) - @!P0 BRA 0x42d0 ;
Basic block id 120 - num instructions 9
 Instr 1046 @ 0x4160 (16736) - MOV R22, RZ ;
 Instr 1047 @ 0x4170 (16752) - IMAD.MOV.U32 R23, RZ, RZ, R26 ;
 Instr 1048 @ 0x4180 (16768) - ISETP.NE.AND P0, PT, R24, 0x17, PT ;
 Instr 1049 @ 0x4190 (16784) - IMAD.HI.U32 R22, R26, c[0x0][0x2c0], R22 ;
 Instr 1050 @ 0x41a0 (16800) - SHF.R.U32.HI R27, RZ, c[0x0][0x2c4], R22 ;
 Instr 1051 @ 0x41b0 (16816) - IADD3 R23, -R27, RZ, RZ ;
 Instr 1052 @ 0x41c0 (16832) - IMAD R23, R23, c[0x0][0x2bc], R26 ;
 Instr 1053 @ 0x41d0 (16848) - IMAD R10, R23, c[0x0][0x338], R10 ;
 Instr 1054 @ 0x41e0 (16864) - @!P0 BRA 0x42d0 ;
Basic block id 121 - num instructions 14
 Instr 1055 @ 0x41f0 (16880) - ISETP.NE.AND P0, PT, R24, 0x18, PT ;
 Instr 1056 @ 0x4200 (16896) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1057 @ 0x4210 (16912) - MOV R23, R27 ;
 Instr 1058 @ 0x4220 (16928) - IMAD.HI.U32 R22, R27, c[0x0][0x2cc], R22 ;
 Instr 1059 @ 0x4230 (16944) - SHF.R.U32.HI R23, RZ, c[0x0][0x2d0], R22 ;
 Instr 1060 @ 0x4240 (16960) - @P0 IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1061 @ 0x4250 (16976) - IADD3 R25, -R23.reuse, RZ, RZ ;
 Instr 1062 @ 0x4260 (16992) - @P0 IMAD.HI.U32 R22, R23, c[0x0][0x2d8], R22 ;
 Instr 1063 @ 0x4270 (17008) - IMAD R25, R25, c[0x0][0x2c8], R27 ;
 Instr 1064 @ 0x4280 (17024) - @P0 SHF.R.U32.HI R22, RZ, c[0x0][0x2dc], R22 ;
 Instr 1065 @ 0x4290 (17040) - IMAD R10, R25, c[0x0][0x33c], R10 ;
 Instr 1066 @ 0x42a0 (17056) - @P0 IMAD.MOV R22, RZ, RZ, -R22 ;
 Instr 1067 @ 0x42b0 (17072) - @P0 IMAD R23, R22, c[0x0][0x2d4], R23 ;
 Instr 1068 @ 0x42c0 (17088) - @P0 IMAD R10, R23, c[0x0][0x340], R10 ;
Basic block id 122 - num instructions 6
 Instr 1069 @ 0x42d0 (17104) - LOP3.LUT R23, R10, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1070 @ 0x42e0 (17120) - IADD3 R22, P0, R4, R23, RZ ;
 Instr 1071 @ 0x42f0 (17136) - IADD3.X R23, RZ, R5, RZ, P0, !PT ;
 Instr 1072 @ 0x4300 (17152) - LDG.E.64.SYS R22, [R22] ;
 Instr 1073 @ 0x4310 (17168) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 1074 @ 0x4320 (17184) - @!P4 BRA 0x5100 ;
Basic block id 123 - num instructions 9
 Instr 1075 @ 0x4330 (17200) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 1076 @ 0x4340 (17216) - IMAD.HI.U32 R6, R11, c[0x0][0x1b8], R10 ;
 Instr 1077 @ 0x4350 (17232) - MOV R10, c[0x0][0x1b0] ;
 Instr 1078 @ 0x4360 (17248) - ISETP.NE.AND P0, PT, R10, 0x1, PT ;
 Instr 1079 @ 0x4370 (17264) - SHF.R.U32.HI R26, RZ, c[0x0][0x1bc], R6 ;
 Instr 1080 @ 0x4380 (17280) - IMAD.MOV R6, RZ, RZ, -R26 ;
 Instr 1081 @ 0x4390 (17296) - IMAD R6, R6, c[0x0][0x1b4], R11 ;
 Instr 1082 @ 0x43a0 (17312) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1083 @ 0x43b0 (17328) - @!P0 BRA 0x5100 ;
Basic block id 124 - num instructions 9
 Instr 1084 @ 0x43c0 (17344) - MOV R24, RZ ;
 Instr 1085 @ 0x43d0 (17360) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1086 @ 0x43e0 (17376) - ISETP.NE.AND P0, PT, R10, 0x2, PT ;
 Instr 1087 @ 0x43f0 (17392) - IMAD.HI.U32 R24, R26, c[0x0][0x1c4], R24 ;
 Instr 1088 @ 0x4400 (17408) - SHF.R.U32.HI R27, RZ, c[0x0][0x1c8], R24 ;
 Instr 1089 @ 0x4410 (17424) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1090 @ 0x4420 (17440) - IMAD R25, R25, c[0x0][0x1c0], R26 ;
 Instr 1091 @ 0x4430 (17456) - IMAD R6, R25, c[0x0][0x2e4], R6 ;
 Instr 1092 @ 0x4440 (17472) - @!P0 BRA 0x5100 ;
Basic block id 125 - num instructions 9
 Instr 1093 @ 0x4450 (17488) - MOV R25, R27 ;
 Instr 1094 @ 0x4460 (17504) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1095 @ 0x4470 (17520) - ISETP.NE.AND P0, PT, R10, 0x3, PT ;
 Instr 1096 @ 0x4480 (17536) - IMAD.HI.U32 R24, R27, c[0x0][0x1d0], R24 ;
 Instr 1097 @ 0x4490 (17552) - SHF.R.U32.HI R26, RZ, c[0x0][0x1d4], R24 ;
 Instr 1098 @ 0x44a0 (17568) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1099 @ 0x44b0 (17584) - IMAD R25, R25, c[0x0][0x1cc], R27 ;
 Instr 1100 @ 0x44c0 (17600) - IMAD R6, R25, c[0x0][0x2e8], R6 ;
 Instr 1101 @ 0x44d0 (17616) - @!P0 BRA 0x5100 ;
Basic block id 126 - num instructions 9
 Instr 1102 @ 0x44e0 (17632) - MOV R24, RZ ;
 Instr 1103 @ 0x44f0 (17648) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1104 @ 0x4500 (17664) - ISETP.NE.AND P0, PT, R10, 0x4, PT ;
 Instr 1105 @ 0x4510 (17680) - IMAD.HI.U32 R24, R26, c[0x0][0x1dc], R24 ;
 Instr 1106 @ 0x4520 (17696) - SHF.R.U32.HI R27, RZ, c[0x0][0x1e0], R24 ;
 Instr 1107 @ 0x4530 (17712) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1108 @ 0x4540 (17728) - IMAD R25, R25, c[0x0][0x1d8], R26 ;
 Instr 1109 @ 0x4550 (17744) - IMAD R6, R25, c[0x0][0x2ec], R6 ;
 Instr 1110 @ 0x4560 (17760) - @!P0 BRA 0x5100 ;
Basic block id 127 - num instructions 9
 Instr 1111 @ 0x4570 (17776) - MOV R25, R27 ;
 Instr 1112 @ 0x4580 (17792) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1113 @ 0x4590 (17808) - ISETP.NE.AND P0, PT, R10, 0x5, PT ;
 Instr 1114 @ 0x45a0 (17824) - IMAD.HI.U32 R24, R27, c[0x0][0x1e8], R24 ;
 Instr 1115 @ 0x45b0 (17840) - SHF.R.U32.HI R26, RZ, c[0x0][0x1ec], R24 ;
 Instr 1116 @ 0x45c0 (17856) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1117 @ 0x45d0 (17872) - IMAD R25, R25, c[0x0][0x1e4], R27 ;
 Instr 1118 @ 0x45e0 (17888) - IMAD R6, R25, c[0x0][0x2f0], R6 ;
 Instr 1119 @ 0x45f0 (17904) - @!P0 BRA 0x5100 ;
Basic block id 128 - num instructions 9
 Instr 1120 @ 0x4600 (17920) - MOV R24, RZ ;
 Instr 1121 @ 0x4610 (17936) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1122 @ 0x4620 (17952) - ISETP.NE.AND P0, PT, R10, 0x6, PT ;
 Instr 1123 @ 0x4630 (17968) - IMAD.HI.U32 R24, R26, c[0x0][0x1f4], R24 ;
 Instr 1124 @ 0x4640 (17984) - SHF.R.U32.HI R27, RZ, c[0x0][0x1f8], R24 ;
 Instr 1125 @ 0x4650 (18000) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1126 @ 0x4660 (18016) - IMAD R25, R25, c[0x0][0x1f0], R26 ;
 Instr 1127 @ 0x4670 (18032) - IMAD R6, R25, c[0x0][0x2f4], R6 ;
 Instr 1128 @ 0x4680 (18048) - @!P0 BRA 0x5100 ;
Basic block id 129 - num instructions 9
 Instr 1129 @ 0x4690 (18064) - MOV R25, R27 ;
 Instr 1130 @ 0x46a0 (18080) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1131 @ 0x46b0 (18096) - ISETP.NE.AND P0, PT, R10, 0x7, PT ;
 Instr 1132 @ 0x46c0 (18112) - IMAD.HI.U32 R24, R27, c[0x0][0x200], R24 ;
 Instr 1133 @ 0x46d0 (18128) - SHF.R.U32.HI R26, RZ, c[0x0][0x204], R24 ;
 Instr 1134 @ 0x46e0 (18144) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1135 @ 0x46f0 (18160) - IMAD R25, R25, c[0x0][0x1fc], R27 ;
 Instr 1136 @ 0x4700 (18176) - IMAD R6, R25, c[0x0][0x2f8], R6 ;
 Instr 1137 @ 0x4710 (18192) - @!P0 BRA 0x5100 ;
Basic block id 130 - num instructions 9
 Instr 1138 @ 0x4720 (18208) - MOV R24, RZ ;
 Instr 1139 @ 0x4730 (18224) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1140 @ 0x4740 (18240) - ISETP.NE.AND P0, PT, R10, 0x8, PT ;
 Instr 1141 @ 0x4750 (18256) - IMAD.HI.U32 R24, R26, c[0x0][0x20c], R24 ;
 Instr 1142 @ 0x4760 (18272) - SHF.R.U32.HI R27, RZ, c[0x0][0x210], R24 ;
 Instr 1143 @ 0x4770 (18288) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1144 @ 0x4780 (18304) - IMAD R25, R25, c[0x0][0x208], R26 ;
 Instr 1145 @ 0x4790 (18320) - IMAD R6, R25, c[0x0][0x2fc], R6 ;
 Instr 1146 @ 0x47a0 (18336) - @!P0 BRA 0x5100 ;
Basic block id 131 - num instructions 9
 Instr 1147 @ 0x47b0 (18352) - MOV R25, R27 ;
 Instr 1148 @ 0x47c0 (18368) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1149 @ 0x47d0 (18384) - ISETP.NE.AND P0, PT, R10, 0x9, PT ;
 Instr 1150 @ 0x47e0 (18400) - IMAD.HI.U32 R24, R27, c[0x0][0x218], R24 ;
 Instr 1151 @ 0x47f0 (18416) - SHF.R.U32.HI R26, RZ, c[0x0][0x21c], R24 ;
 Instr 1152 @ 0x4800 (18432) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1153 @ 0x4810 (18448) - IMAD R25, R25, c[0x0][0x214], R27 ;
 Instr 1154 @ 0x4820 (18464) - IMAD R6, R25, c[0x0][0x300], R6 ;
 Instr 1155 @ 0x4830 (18480) - @!P0 BRA 0x5100 ;
Basic block id 132 - num instructions 9
 Instr 1156 @ 0x4840 (18496) - MOV R24, RZ ;
 Instr 1157 @ 0x4850 (18512) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1158 @ 0x4860 (18528) - ISETP.NE.AND P0, PT, R10, 0xa, PT ;
 Instr 1159 @ 0x4870 (18544) - IMAD.HI.U32 R24, R26, c[0x0][0x224], R24 ;
 Instr 1160 @ 0x4880 (18560) - SHF.R.U32.HI R27, RZ, c[0x0][0x228], R24 ;
 Instr 1161 @ 0x4890 (18576) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1162 @ 0x48a0 (18592) - IMAD R25, R25, c[0x0][0x220], R26 ;
 Instr 1163 @ 0x48b0 (18608) - IMAD R6, R25, c[0x0][0x304], R6 ;
 Instr 1164 @ 0x48c0 (18624) - @!P0 BRA 0x5100 ;
Basic block id 133 - num instructions 9
 Instr 1165 @ 0x48d0 (18640) - MOV R25, R27 ;
 Instr 1166 @ 0x48e0 (18656) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1167 @ 0x48f0 (18672) - ISETP.NE.AND P0, PT, R10, 0xb, PT ;
 Instr 1168 @ 0x4900 (18688) - IMAD.HI.U32 R24, R27, c[0x0][0x230], R24 ;
 Instr 1169 @ 0x4910 (18704) - SHF.R.U32.HI R26, RZ, c[0x0][0x234], R24 ;
 Instr 1170 @ 0x4920 (18720) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1171 @ 0x4930 (18736) - IMAD R25, R25, c[0x0][0x22c], R27 ;
 Instr 1172 @ 0x4940 (18752) - IMAD R6, R25, c[0x0][0x308], R6 ;
 Instr 1173 @ 0x4950 (18768) - @!P0 BRA 0x5100 ;
Basic block id 134 - num instructions 9
 Instr 1174 @ 0x4960 (18784) - MOV R24, RZ ;
 Instr 1175 @ 0x4970 (18800) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1176 @ 0x4980 (18816) - ISETP.NE.AND P0, PT, R10, 0xc, PT ;
 Instr 1177 @ 0x4990 (18832) - IMAD.HI.U32 R24, R26, c[0x0][0x23c], R24 ;
 Instr 1178 @ 0x49a0 (18848) - SHF.R.U32.HI R27, RZ, c[0x0][0x240], R24 ;
 Instr 1179 @ 0x49b0 (18864) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1180 @ 0x49c0 (18880) - IMAD R25, R25, c[0x0][0x238], R26 ;
 Instr 1181 @ 0x49d0 (18896) - IMAD R6, R25, c[0x0][0x30c], R6 ;
 Instr 1182 @ 0x49e0 (18912) - @!P0 BRA 0x5100 ;
Basic block id 135 - num instructions 9
 Instr 1183 @ 0x49f0 (18928) - MOV R25, R27 ;
 Instr 1184 @ 0x4a00 (18944) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1185 @ 0x4a10 (18960) - ISETP.NE.AND P0, PT, R10, 0xd, PT ;
 Instr 1186 @ 0x4a20 (18976) - IMAD.HI.U32 R24, R27, c[0x0][0x248], R24 ;
 Instr 1187 @ 0x4a30 (18992) - SHF.R.U32.HI R26, RZ, c[0x0][0x24c], R24 ;
 Instr 1188 @ 0x4a40 (19008) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1189 @ 0x4a50 (19024) - IMAD R25, R25, c[0x0][0x244], R27 ;
 Instr 1190 @ 0x4a60 (19040) - IMAD R6, R25, c[0x0][0x310], R6 ;
 Instr 1191 @ 0x4a70 (19056) - @!P0 BRA 0x5100 ;
Basic block id 136 - num instructions 9
 Instr 1192 @ 0x4a80 (19072) - MOV R24, RZ ;
 Instr 1193 @ 0x4a90 (19088) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1194 @ 0x4aa0 (19104) - ISETP.NE.AND P0, PT, R10, 0xe, PT ;
 Instr 1195 @ 0x4ab0 (19120) - IMAD.HI.U32 R24, R26, c[0x0][0x254], R24 ;
 Instr 1196 @ 0x4ac0 (19136) - SHF.R.U32.HI R27, RZ, c[0x0][0x258], R24 ;
 Instr 1197 @ 0x4ad0 (19152) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1198 @ 0x4ae0 (19168) - IMAD R25, R25, c[0x0][0x250], R26 ;
 Instr 1199 @ 0x4af0 (19184) - IMAD R6, R25, c[0x0][0x314], R6 ;
 Instr 1200 @ 0x4b00 (19200) - @!P0 BRA 0x5100 ;
Basic block id 137 - num instructions 9
 Instr 1201 @ 0x4b10 (19216) - MOV R25, R27 ;
 Instr 1202 @ 0x4b20 (19232) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1203 @ 0x4b30 (19248) - ISETP.NE.AND P0, PT, R10, 0xf, PT ;
 Instr 1204 @ 0x4b40 (19264) - IMAD.HI.U32 R24, R27, c[0x0][0x260], R24 ;
 Instr 1205 @ 0x4b50 (19280) - SHF.R.U32.HI R26, RZ, c[0x0][0x264], R24 ;
 Instr 1206 @ 0x4b60 (19296) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1207 @ 0x4b70 (19312) - IMAD R25, R25, c[0x0][0x25c], R27 ;
 Instr 1208 @ 0x4b80 (19328) - IMAD R6, R25, c[0x0][0x318], R6 ;
 Instr 1209 @ 0x4b90 (19344) - @!P0 BRA 0x5100 ;
Basic block id 138 - num instructions 9
 Instr 1210 @ 0x4ba0 (19360) - MOV R24, RZ ;
 Instr 1211 @ 0x4bb0 (19376) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1212 @ 0x4bc0 (19392) - ISETP.NE.AND P0, PT, R10, 0x10, PT ;
 Instr 1213 @ 0x4bd0 (19408) - IMAD.HI.U32 R24, R26, c[0x0][0x26c], R24 ;
 Instr 1214 @ 0x4be0 (19424) - SHF.R.U32.HI R27, RZ, c[0x0][0x270], R24 ;
 Instr 1215 @ 0x4bf0 (19440) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1216 @ 0x4c00 (19456) - IMAD R25, R25, c[0x0][0x268], R26 ;
 Instr 1217 @ 0x4c10 (19472) - IMAD R6, R25, c[0x0][0x31c], R6 ;
 Instr 1218 @ 0x4c20 (19488) - @!P0 BRA 0x5100 ;
Basic block id 139 - num instructions 9
 Instr 1219 @ 0x4c30 (19504) - MOV R25, R27 ;
 Instr 1220 @ 0x4c40 (19520) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1221 @ 0x4c50 (19536) - ISETP.NE.AND P0, PT, R10, 0x11, PT ;
 Instr 1222 @ 0x4c60 (19552) - IMAD.HI.U32 R24, R27, c[0x0][0x278], R24 ;
 Instr 1223 @ 0x4c70 (19568) - SHF.R.U32.HI R26, RZ, c[0x0][0x27c], R24 ;
 Instr 1224 @ 0x4c80 (19584) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1225 @ 0x4c90 (19600) - IMAD R25, R25, c[0x0][0x274], R27 ;
 Instr 1226 @ 0x4ca0 (19616) - IMAD R6, R25, c[0x0][0x320], R6 ;
 Instr 1227 @ 0x4cb0 (19632) - @!P0 BRA 0x5100 ;
Basic block id 140 - num instructions 9
 Instr 1228 @ 0x4cc0 (19648) - MOV R24, RZ ;
 Instr 1229 @ 0x4cd0 (19664) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1230 @ 0x4ce0 (19680) - ISETP.NE.AND P0, PT, R10, 0x12, PT ;
 Instr 1231 @ 0x4cf0 (19696) - IMAD.HI.U32 R24, R26, c[0x0][0x284], R24 ;
 Instr 1232 @ 0x4d00 (19712) - SHF.R.U32.HI R27, RZ, c[0x0][0x288], R24 ;
 Instr 1233 @ 0x4d10 (19728) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1234 @ 0x4d20 (19744) - IMAD R25, R25, c[0x0][0x280], R26 ;
 Instr 1235 @ 0x4d30 (19760) - IMAD R6, R25, c[0x0][0x324], R6 ;
 Instr 1236 @ 0x4d40 (19776) - @!P0 BRA 0x5100 ;
Basic block id 141 - num instructions 9
 Instr 1237 @ 0x4d50 (19792) - MOV R25, R27 ;
 Instr 1238 @ 0x4d60 (19808) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1239 @ 0x4d70 (19824) - ISETP.NE.AND P0, PT, R10, 0x13, PT ;
 Instr 1240 @ 0x4d80 (19840) - IMAD.HI.U32 R24, R27, c[0x0][0x290], R24 ;
 Instr 1241 @ 0x4d90 (19856) - SHF.R.U32.HI R26, RZ, c[0x0][0x294], R24 ;
 Instr 1242 @ 0x4da0 (19872) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1243 @ 0x4db0 (19888) - IMAD R25, R25, c[0x0][0x28c], R27 ;
 Instr 1244 @ 0x4dc0 (19904) - IMAD R6, R25, c[0x0][0x328], R6 ;
 Instr 1245 @ 0x4dd0 (19920) - @!P0 BRA 0x5100 ;
Basic block id 142 - num instructions 9
 Instr 1246 @ 0x4de0 (19936) - MOV R24, RZ ;
 Instr 1247 @ 0x4df0 (19952) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1248 @ 0x4e00 (19968) - ISETP.NE.AND P0, PT, R10, 0x14, PT ;
 Instr 1249 @ 0x4e10 (19984) - IMAD.HI.U32 R24, R26, c[0x0][0x29c], R24 ;
 Instr 1250 @ 0x4e20 (20000) - SHF.R.U32.HI R27, RZ, c[0x0][0x2a0], R24 ;
 Instr 1251 @ 0x4e30 (20016) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1252 @ 0x4e40 (20032) - IMAD R25, R25, c[0x0][0x298], R26 ;
 Instr 1253 @ 0x4e50 (20048) - IMAD R6, R25, c[0x0][0x32c], R6 ;
 Instr 1254 @ 0x4e60 (20064) - @!P0 BRA 0x5100 ;
Basic block id 143 - num instructions 9
 Instr 1255 @ 0x4e70 (20080) - MOV R25, R27 ;
 Instr 1256 @ 0x4e80 (20096) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1257 @ 0x4e90 (20112) - ISETP.NE.AND P0, PT, R10, 0x15, PT ;
 Instr 1258 @ 0x4ea0 (20128) - IMAD.HI.U32 R24, R27, c[0x0][0x2a8], R24 ;
 Instr 1259 @ 0x4eb0 (20144) - SHF.R.U32.HI R26, RZ, c[0x0][0x2ac], R24 ;
 Instr 1260 @ 0x4ec0 (20160) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1261 @ 0x4ed0 (20176) - IMAD R25, R25, c[0x0][0x2a4], R27 ;
 Instr 1262 @ 0x4ee0 (20192) - IMAD R6, R25, c[0x0][0x330], R6 ;
 Instr 1263 @ 0x4ef0 (20208) - @!P0 BRA 0x5100 ;
Basic block id 144 - num instructions 9
 Instr 1264 @ 0x4f00 (20224) - MOV R24, RZ ;
 Instr 1265 @ 0x4f10 (20240) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1266 @ 0x4f20 (20256) - ISETP.NE.AND P0, PT, R10, 0x16, PT ;
 Instr 1267 @ 0x4f30 (20272) - IMAD.HI.U32 R24, R26, c[0x0][0x2b4], R24 ;
 Instr 1268 @ 0x4f40 (20288) - SHF.R.U32.HI R27, RZ, c[0x0][0x2b8], R24 ;
 Instr 1269 @ 0x4f50 (20304) - IADD3 R25, -R27, RZ, RZ ;
 Instr 1270 @ 0x4f60 (20320) - IMAD R25, R25, c[0x0][0x2b0], R26 ;
 Instr 1271 @ 0x4f70 (20336) - IMAD R6, R25, c[0x0][0x334], R6 ;
 Instr 1272 @ 0x4f80 (20352) - @!P0 BRA 0x5100 ;
Basic block id 145 - num instructions 9
 Instr 1273 @ 0x4f90 (20368) - MOV R25, R27 ;
 Instr 1274 @ 0x4fa0 (20384) - IMAD.MOV.U32 R24, RZ, RZ, RZ ;
 Instr 1275 @ 0x4fb0 (20400) - ISETP.NE.AND P0, PT, R10, 0x17, PT ;
 Instr 1276 @ 0x4fc0 (20416) - IMAD.HI.U32 R24, R27, c[0x0][0x2c0], R24 ;
 Instr 1277 @ 0x4fd0 (20432) - SHF.R.U32.HI R26, RZ, c[0x0][0x2c4], R24 ;
 Instr 1278 @ 0x4fe0 (20448) - IMAD.MOV R25, RZ, RZ, -R26 ;
 Instr 1279 @ 0x4ff0 (20464) - IMAD R25, R25, c[0x0][0x2bc], R27 ;
 Instr 1280 @ 0x5000 (20480) - IMAD R6, R25, c[0x0][0x338], R6 ;
 Instr 1281 @ 0x5010 (20496) - @!P0 BRA 0x5100 ;
Basic block id 146 - num instructions 14
 Instr 1282 @ 0x5020 (20512) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
 Instr 1283 @ 0x5030 (20528) - IMAD.MOV.U32 R25, RZ, RZ, R26 ;
 Instr 1284 @ 0x5040 (20544) - MOV R24, RZ ;
 Instr 1285 @ 0x5050 (20560) - IMAD.HI.U32 R24, R26, c[0x0][0x2cc], R24 ;
 Instr 1286 @ 0x5060 (20576) - SHF.R.U32.HI R25, RZ, c[0x0][0x2d0], R24 ;
 Instr 1287 @ 0x5070 (20592) - @P0 MOV R24, RZ ;
 Instr 1288 @ 0x5080 (20608) - IMAD.MOV R27, RZ, RZ, -R25.reuse ;
 Instr 1289 @ 0x5090 (20624) - @P0 IMAD.HI.U32 R10, R25, c[0x0][0x2d8], R24 ;
 Instr 1290 @ 0x50a0 (20640) - IMAD R27, R27, c[0x0][0x2c8], R26 ;
 Instr 1291 @ 0x50b0 (20656) - @P0 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1292 @ 0x50c0 (20672) - IMAD R6, R27, c[0x0][0x33c], R6 ;
 Instr 1293 @ 0x50d0 (20688) - @P0 IADD3 R24, -R10, RZ, RZ ;
 Instr 1294 @ 0x50e0 (20704) - @P0 IMAD R25, R24, c[0x0][0x2d4], R25 ;
 Instr 1295 @ 0x50f0 (20720) - @P0 IMAD R6, R25, c[0x0][0x340], R6 ;
Basic block id 147 - num instructions 25
 Instr 1296 @ 0x5100 (20736) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1297 @ 0x5110 (20752) - IADD3 R24, P0, R4, R25, RZ ;
 Instr 1298 @ 0x5120 (20768) - IMAD.X R25, RZ, RZ, R5, P0 ;
 Instr 1299 @ 0x5130 (20784) - LDG.E.64.SYS R24, [R24] ;
 Instr 1300 @ 0x5140 (20800) - DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 1301 @ 0x5150 (20816) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 1302 @ 0x5160 (20832) - MOV R6, c[0x0][0x17c] ;
 Instr 1303 @ 0x5170 (20848) - DSETP.GTU.AND P2, PT, |R14|, +INF , PT ;
 Instr 1304 @ 0x5180 (20864) - DSETP.GT.OR P1, PT, R16, R18, P1 ;
 Instr 1305 @ 0x5190 (20880) - IMAD R6, R6, 0x3, R11 ;
 Instr 1306 @ 0x51a0 (20896) - DSETP.GTU.AND P3, PT, |R12|, +INF , PT ;
 Instr 1307 @ 0x51b0 (20912) - DSETP.GTU.AND P0, PT, |R8|, +INF , PT ;
 Instr 1308 @ 0x51c0 (20928) - FSEL R16, R16, R18, P1 ;
 Instr 1309 @ 0x51d0 (20944) - FSEL R17, R17, R19, P1 ;
 Instr 1310 @ 0x51e0 (20960) - DSETP.GT.OR P2, PT, R14, R20, P2 ;
 Instr 1311 @ 0x51f0 (20976) - ISETP.GE.U32.AND P1, PT, R6, c[0x0][0x174], PT ;
 Instr 1312 @ 0x5200 (20992) - DSETP.GT.OR P3, PT, R12, R22, P3 ;
 Instr 1313 @ 0x5210 (21008) - FSEL R14, R14, R20, P2 ;
 Instr 1314 @ 0x5220 (21024) - FSEL R15, R15, R21, P2 ;
 Instr 1315 @ 0x5230 (21040) - FSEL R12, R12, R22, P3 ;
 Instr 1316 @ 0x5240 (21056) - FSEL R13, R13, R23, P3 ;
 Instr 1317 @ 0x5250 (21072) - DSETP.GT.OR P0, PT, R8, R24, P0 ;
 Instr 1318 @ 0x5260 (21088) - FSEL R8, R8, R24, P0 ;
 Instr 1319 @ 0x5270 (21104) - FSEL R9, R9, R25, P0 ;
 Instr 1320 @ 0x5280 (21120) - @!P1 BRA 0x1840 ;
Basic block id 148 - num instructions 1
 Instr 1321 @ 0x5290 (21136) - BSYNC B2 ;
Basic block id 149 - num instructions 5
 Instr 1322 @ 0x52a0 (21152) - BSYNC B1 ;
 Instr 1323 @ 0x52b0 (21168) - ISETP.GE.U32.AND P0, PT, R11, c[0x0][0x174], PT ;
 Instr 1324 @ 0x52c0 (21184) - BMOV.32.CLEAR RZ, B1 ;
 Instr 1325 @ 0x52d0 (21200) - BSSY B1, 0x86a0 ;
 Instr 1326 @ 0x52e0 (21216) - @P0 BRA 0x8690 ;
Basic block id 150 - num instructions 3
 Instr 1327 @ 0x52f0 (21232) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x1b0], PT ;
 Instr 1328 @ 0x5300 (21248) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 1329 @ 0x5310 (21264) - @!P1 BRA 0x5f80 ;
Basic block id 151 - num instructions 9
 Instr 1330 @ 0x5320 (21280) - MOV R10, RZ ;
 Instr 1331 @ 0x5330 (21296) - IMAD.HI.U32 R18, R11, c[0x0][0x1b8], R10 ;
 Instr 1332 @ 0x5340 (21312) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x1b0] ;
 Instr 1333 @ 0x5350 (21328) - SHF.R.U32.HI R19, RZ, c[0x0][0x1bc], R18 ;
 Instr 1334 @ 0x5360 (21344) - ISETP.NE.AND P2, PT, R10, 0x1, PT ;
 Instr 1335 @ 0x5370 (21360) - IADD3 R6, -R19, RZ, RZ ;
 Instr 1336 @ 0x5380 (21376) - IMAD R6, R6, c[0x0][0x1b4], R11 ;
 Instr 1337 @ 0x5390 (21392) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1338 @ 0x53a0 (21408) - @!P2 BRA 0x5f80 ;
Basic block id 152 - num instructions 8
 Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1340 @ 0x53c0 (21440) - ISETP.NE.AND P2, PT, R10, 0x2, PT ;
 Instr 1341 @ 0x53d0 (21456) - IMAD.HI.U32 R26, R19, c[0x0][0x1c4], R18 ;
 Instr 1342 @ 0x53e0 (21472) - SHF.R.U32.HI R27, RZ, c[0x0][0x1c8], R26 ;
 Instr 1343 @ 0x53f0 (21488) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1344 @ 0x5400 (21504) - IMAD R19, R18, c[0x0][0x1c0], R19 ;
 Instr 1345 @ 0x5410 (21520) - IMAD R6, R19, c[0x0][0x2e4], R6 ;
 Instr 1346 @ 0x5420 (21536) - @!P2 BRA 0x5f80 ;
Basic block id 153 - num instructions 8
 Instr 1347 @ 0x5430 (21552) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1348 @ 0x5440 (21568) - ISETP.NE.AND P2, PT, R10, 0x3, PT ;
 Instr 1349 @ 0x5450 (21584) - IMAD.HI.U32 R18, R27, c[0x0][0x1d0], R26 ;
 Instr 1350 @ 0x5460 (21600) - SHF.R.U32.HI R19, RZ, c[0x0][0x1d4], R18 ;
 Instr 1351 @ 0x5470 (21616) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1352 @ 0x5480 (21632) - IMAD R27, R26, c[0x0][0x1cc], R27 ;
 Instr 1353 @ 0x5490 (21648) - IMAD R6, R27, c[0x0][0x2e8], R6 ;
 Instr 1354 @ 0x54a0 (21664) - @!P2 BRA 0x5f80 ;
Basic block id 154 - num instructions 8
 Instr 1355 @ 0x54b0 (21680) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1356 @ 0x54c0 (21696) - ISETP.NE.AND P2, PT, R10, 0x4, PT ;
 Instr 1357 @ 0x54d0 (21712) - IMAD.HI.U32 R26, R19, c[0x0][0x1dc], R18 ;
 Instr 1358 @ 0x54e0 (21728) - SHF.R.U32.HI R27, RZ, c[0x0][0x1e0], R26 ;
 Instr 1359 @ 0x54f0 (21744) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1360 @ 0x5500 (21760) - IMAD R19, R18, c[0x0][0x1d8], R19 ;
 Instr 1361 @ 0x5510 (21776) - IMAD R6, R19, c[0x0][0x2ec], R6 ;
 Instr 1362 @ 0x5520 (21792) - @!P2 BRA 0x5f80 ;
Basic block id 155 - num instructions 8
 Instr 1363 @ 0x5530 (21808) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1364 @ 0x5540 (21824) - ISETP.NE.AND P2, PT, R10, 0x5, PT ;
 Instr 1365 @ 0x5550 (21840) - IMAD.HI.U32 R18, R27, c[0x0][0x1e8], R26 ;
 Instr 1366 @ 0x5560 (21856) - SHF.R.U32.HI R19, RZ, c[0x0][0x1ec], R18 ;
 Instr 1367 @ 0x5570 (21872) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1368 @ 0x5580 (21888) - IMAD R27, R26, c[0x0][0x1e4], R27 ;
 Instr 1369 @ 0x5590 (21904) - IMAD R6, R27, c[0x0][0x2f0], R6 ;
 Instr 1370 @ 0x55a0 (21920) - @!P2 BRA 0x5f80 ;
Basic block id 156 - num instructions 8
 Instr 1371 @ 0x55b0 (21936) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1372 @ 0x55c0 (21952) - ISETP.NE.AND P2, PT, R10, 0x6, PT ;
 Instr 1373 @ 0x55d0 (21968) - IMAD.HI.U32 R26, R19, c[0x0][0x1f4], R18 ;
 Instr 1374 @ 0x55e0 (21984) - SHF.R.U32.HI R27, RZ, c[0x0][0x1f8], R26 ;
 Instr 1375 @ 0x55f0 (22000) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1376 @ 0x5600 (22016) - IMAD R19, R18, c[0x0][0x1f0], R19 ;
 Instr 1377 @ 0x5610 (22032) - IMAD R6, R19, c[0x0][0x2f4], R6 ;
 Instr 1378 @ 0x5620 (22048) - @!P2 BRA 0x5f80 ;
Basic block id 157 - num instructions 8
 Instr 1379 @ 0x5630 (22064) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1380 @ 0x5640 (22080) - ISETP.NE.AND P2, PT, R10, 0x7, PT ;
 Instr 1381 @ 0x5650 (22096) - IMAD.HI.U32 R18, R27, c[0x0][0x200], R26 ;
 Instr 1382 @ 0x5660 (22112) - SHF.R.U32.HI R19, RZ, c[0x0][0x204], R18 ;
 Instr 1383 @ 0x5670 (22128) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1384 @ 0x5680 (22144) - IMAD R27, R26, c[0x0][0x1fc], R27 ;
 Instr 1385 @ 0x5690 (22160) - IMAD R6, R27, c[0x0][0x2f8], R6 ;
 Instr 1386 @ 0x56a0 (22176) - @!P2 BRA 0x5f80 ;
Basic block id 158 - num instructions 8
 Instr 1387 @ 0x56b0 (22192) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1388 @ 0x56c0 (22208) - ISETP.NE.AND P2, PT, R10, 0x8, PT ;
 Instr 1389 @ 0x56d0 (22224) - IMAD.HI.U32 R26, R19, c[0x0][0x20c], R18 ;
 Instr 1390 @ 0x56e0 (22240) - SHF.R.U32.HI R27, RZ, c[0x0][0x210], R26 ;
 Instr 1391 @ 0x56f0 (22256) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1392 @ 0x5700 (22272) - IMAD R19, R18, c[0x0][0x208], R19 ;
 Instr 1393 @ 0x5710 (22288) - IMAD R6, R19, c[0x0][0x2fc], R6 ;
 Instr 1394 @ 0x5720 (22304) - @!P2 BRA 0x5f80 ;
Basic block id 159 - num instructions 8
 Instr 1395 @ 0x5730 (22320) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1396 @ 0x5740 (22336) - ISETP.NE.AND P2, PT, R10, 0x9, PT ;
 Instr 1397 @ 0x5750 (22352) - IMAD.HI.U32 R18, R27, c[0x0][0x218], R26 ;
 Instr 1398 @ 0x5760 (22368) - SHF.R.U32.HI R19, RZ, c[0x0][0x21c], R18 ;
 Instr 1399 @ 0x5770 (22384) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1400 @ 0x5780 (22400) - IMAD R27, R26, c[0x0][0x214], R27 ;
 Instr 1401 @ 0x5790 (22416) - IMAD R6, R27, c[0x0][0x300], R6 ;
 Instr 1402 @ 0x57a0 (22432) - @!P2 BRA 0x5f80 ;
Basic block id 160 - num instructions 8
 Instr 1403 @ 0x57b0 (22448) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1404 @ 0x57c0 (22464) - ISETP.NE.AND P2, PT, R10, 0xa, PT ;
 Instr 1405 @ 0x57d0 (22480) - IMAD.HI.U32 R26, R19, c[0x0][0x224], R18 ;
 Instr 1406 @ 0x57e0 (22496) - SHF.R.U32.HI R27, RZ, c[0x0][0x228], R26 ;
 Instr 1407 @ 0x57f0 (22512) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1408 @ 0x5800 (22528) - IMAD R19, R18, c[0x0][0x220], R19 ;
 Instr 1409 @ 0x5810 (22544) - IMAD R6, R19, c[0x0][0x304], R6 ;
 Instr 1410 @ 0x5820 (22560) - @!P2 BRA 0x5f80 ;
Basic block id 161 - num instructions 8
 Instr 1411 @ 0x5830 (22576) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1412 @ 0x5840 (22592) - ISETP.NE.AND P2, PT, R10, 0xb, PT ;
 Instr 1413 @ 0x5850 (22608) - IMAD.HI.U32 R18, R27, c[0x0][0x230], R26 ;
 Instr 1414 @ 0x5860 (22624) - SHF.R.U32.HI R19, RZ, c[0x0][0x234], R18 ;
 Instr 1415 @ 0x5870 (22640) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1416 @ 0x5880 (22656) - IMAD R27, R26, c[0x0][0x22c], R27 ;
 Instr 1417 @ 0x5890 (22672) - IMAD R6, R27, c[0x0][0x308], R6 ;
 Instr 1418 @ 0x58a0 (22688) - @!P2 BRA 0x5f80 ;
Basic block id 162 - num instructions 8
 Instr 1419 @ 0x58b0 (22704) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1420 @ 0x58c0 (22720) - ISETP.NE.AND P2, PT, R10, 0xc, PT ;
 Instr 1421 @ 0x58d0 (22736) - IMAD.HI.U32 R26, R19, c[0x0][0x23c], R18 ;
 Instr 1422 @ 0x58e0 (22752) - SHF.R.U32.HI R27, RZ, c[0x0][0x240], R26 ;
 Instr 1423 @ 0x58f0 (22768) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1424 @ 0x5900 (22784) - IMAD R19, R18, c[0x0][0x238], R19 ;
 Instr 1425 @ 0x5910 (22800) - IMAD R6, R19, c[0x0][0x30c], R6 ;
 Instr 1426 @ 0x5920 (22816) - @!P2 BRA 0x5f80 ;
Basic block id 163 - num instructions 8
 Instr 1427 @ 0x5930 (22832) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1428 @ 0x5940 (22848) - ISETP.NE.AND P2, PT, R10, 0xd, PT ;
 Instr 1429 @ 0x5950 (22864) - IMAD.HI.U32 R18, R27, c[0x0][0x248], R26 ;
 Instr 1430 @ 0x5960 (22880) - SHF.R.U32.HI R19, RZ, c[0x0][0x24c], R18 ;
 Instr 1431 @ 0x5970 (22896) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1432 @ 0x5980 (22912) - IMAD R27, R26, c[0x0][0x244], R27 ;
 Instr 1433 @ 0x5990 (22928) - IMAD R6, R27, c[0x0][0x310], R6 ;
 Instr 1434 @ 0x59a0 (22944) - @!P2 BRA 0x5f80 ;
Basic block id 164 - num instructions 8
 Instr 1435 @ 0x59b0 (22960) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1436 @ 0x59c0 (22976) - ISETP.NE.AND P2, PT, R10, 0xe, PT ;
 Instr 1437 @ 0x59d0 (22992) - IMAD.HI.U32 R26, R19, c[0x0][0x254], R18 ;
 Instr 1438 @ 0x59e0 (23008) - SHF.R.U32.HI R27, RZ, c[0x0][0x258], R26 ;
 Instr 1439 @ 0x59f0 (23024) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1440 @ 0x5a00 (23040) - IMAD R19, R18, c[0x0][0x250], R19 ;
 Instr 1441 @ 0x5a10 (23056) - IMAD R6, R19, c[0x0][0x314], R6 ;
 Instr 1442 @ 0x5a20 (23072) - @!P2 BRA 0x5f80 ;
Basic block id 165 - num instructions 8
 Instr 1443 @ 0x5a30 (23088) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1444 @ 0x5a40 (23104) - ISETP.NE.AND P2, PT, R10, 0xf, PT ;
 Instr 1445 @ 0x5a50 (23120) - IMAD.HI.U32 R18, R27, c[0x0][0x260], R26 ;
 Instr 1446 @ 0x5a60 (23136) - SHF.R.U32.HI R19, RZ, c[0x0][0x264], R18 ;
 Instr 1447 @ 0x5a70 (23152) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1448 @ 0x5a80 (23168) - IMAD R27, R26, c[0x0][0x25c], R27 ;
 Instr 1449 @ 0x5a90 (23184) - IMAD R6, R27, c[0x0][0x318], R6 ;
 Instr 1450 @ 0x5aa0 (23200) - @!P2 BRA 0x5f80 ;
Basic block id 166 - num instructions 8
 Instr 1451 @ 0x5ab0 (23216) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1452 @ 0x5ac0 (23232) - ISETP.NE.AND P2, PT, R10, 0x10, PT ;
 Instr 1453 @ 0x5ad0 (23248) - IMAD.HI.U32 R26, R19, c[0x0][0x26c], R18 ;
 Instr 1454 @ 0x5ae0 (23264) - SHF.R.U32.HI R27, RZ, c[0x0][0x270], R26 ;
 Instr 1455 @ 0x5af0 (23280) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1456 @ 0x5b00 (23296) - IMAD R19, R18, c[0x0][0x268], R19 ;
 Instr 1457 @ 0x5b10 (23312) - IMAD R6, R19, c[0x0][0x31c], R6 ;
 Instr 1458 @ 0x5b20 (23328) - @!P2 BRA 0x5f80 ;
Basic block id 167 - num instructions 8
 Instr 1459 @ 0x5b30 (23344) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1460 @ 0x5b40 (23360) - ISETP.NE.AND P2, PT, R10, 0x11, PT ;
 Instr 1461 @ 0x5b50 (23376) - IMAD.HI.U32 R18, R27, c[0x0][0x278], R26 ;
 Instr 1462 @ 0x5b60 (23392) - SHF.R.U32.HI R19, RZ, c[0x0][0x27c], R18 ;
 Instr 1463 @ 0x5b70 (23408) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1464 @ 0x5b80 (23424) - IMAD R27, R26, c[0x0][0x274], R27 ;
 Instr 1465 @ 0x5b90 (23440) - IMAD R6, R27, c[0x0][0x320], R6 ;
 Instr 1466 @ 0x5ba0 (23456) - @!P2 BRA 0x5f80 ;
Basic block id 168 - num instructions 8
 Instr 1467 @ 0x5bb0 (23472) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1468 @ 0x5bc0 (23488) - ISETP.NE.AND P2, PT, R10, 0x12, PT ;
 Instr 1469 @ 0x5bd0 (23504) - IMAD.HI.U32 R26, R19, c[0x0][0x284], R18 ;
 Instr 1470 @ 0x5be0 (23520) - SHF.R.U32.HI R27, RZ, c[0x0][0x288], R26 ;
 Instr 1471 @ 0x5bf0 (23536) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1472 @ 0x5c00 (23552) - IMAD R19, R18, c[0x0][0x280], R19 ;
 Instr 1473 @ 0x5c10 (23568) - IMAD R6, R19, c[0x0][0x324], R6 ;
 Instr 1474 @ 0x5c20 (23584) - @!P2 BRA 0x5f80 ;
Basic block id 169 - num instructions 8
 Instr 1475 @ 0x5c30 (23600) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1476 @ 0x5c40 (23616) - ISETP.NE.AND P2, PT, R10, 0x13, PT ;
 Instr 1477 @ 0x5c50 (23632) - IMAD.HI.U32 R18, R27, c[0x0][0x290], R26 ;
 Instr 1478 @ 0x5c60 (23648) - SHF.R.U32.HI R19, RZ, c[0x0][0x294], R18 ;
 Instr 1479 @ 0x5c70 (23664) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1480 @ 0x5c80 (23680) - IMAD R27, R26, c[0x0][0x28c], R27 ;
 Instr 1481 @ 0x5c90 (23696) - IMAD R6, R27, c[0x0][0x328], R6 ;
 Instr 1482 @ 0x5ca0 (23712) - @!P2 BRA 0x5f80 ;
Basic block id 170 - num instructions 8
 Instr 1483 @ 0x5cb0 (23728) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1484 @ 0x5cc0 (23744) - ISETP.NE.AND P2, PT, R10, 0x14, PT ;
 Instr 1485 @ 0x5cd0 (23760) - IMAD.HI.U32 R26, R19, c[0x0][0x29c], R18 ;
 Instr 1486 @ 0x5ce0 (23776) - SHF.R.U32.HI R27, RZ, c[0x0][0x2a0], R26 ;
 Instr 1487 @ 0x5cf0 (23792) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1488 @ 0x5d00 (23808) - IMAD R19, R18, c[0x0][0x298], R19 ;
 Instr 1489 @ 0x5d10 (23824) - IMAD R6, R19, c[0x0][0x32c], R6 ;
 Instr 1490 @ 0x5d20 (23840) - @!P2 BRA 0x5f80 ;
Basic block id 171 - num instructions 8
 Instr 1491 @ 0x5d30 (23856) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1492 @ 0x5d40 (23872) - ISETP.NE.AND P2, PT, R10, 0x15, PT ;
 Instr 1493 @ 0x5d50 (23888) - IMAD.HI.U32 R18, R27, c[0x0][0x2a8], R26 ;
 Instr 1494 @ 0x5d60 (23904) - SHF.R.U32.HI R19, RZ, c[0x0][0x2ac], R18 ;
 Instr 1495 @ 0x5d70 (23920) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1496 @ 0x5d80 (23936) - IMAD R27, R26, c[0x0][0x2a4], R27 ;
 Instr 1497 @ 0x5d90 (23952) - IMAD R6, R27, c[0x0][0x330], R6 ;
 Instr 1498 @ 0x5da0 (23968) - @!P2 BRA 0x5f80 ;
Basic block id 172 - num instructions 8
 Instr 1499 @ 0x5db0 (23984) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1500 @ 0x5dc0 (24000) - ISETP.NE.AND P2, PT, R10, 0x16, PT ;
 Instr 1501 @ 0x5dd0 (24016) - IMAD.HI.U32 R26, R19, c[0x0][0x2b4], R18 ;
 Instr 1502 @ 0x5de0 (24032) - SHF.R.U32.HI R27, RZ, c[0x0][0x2b8], R26 ;
 Instr 1503 @ 0x5df0 (24048) - IADD3 R18, -R27, RZ, RZ ;
 Instr 1504 @ 0x5e00 (24064) - IMAD R19, R18, c[0x0][0x2b0], R19 ;
 Instr 1505 @ 0x5e10 (24080) - IMAD R6, R19, c[0x0][0x334], R6 ;
 Instr 1506 @ 0x5e20 (24096) - @!P2 BRA 0x5f80 ;
Basic block id 173 - num instructions 8
 Instr 1507 @ 0x5e30 (24112) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1508 @ 0x5e40 (24128) - ISETP.NE.AND P2, PT, R10, 0x17, PT ;
 Instr 1509 @ 0x5e50 (24144) - IMAD.HI.U32 R18, R27, c[0x0][0x2c0], R26 ;
 Instr 1510 @ 0x5e60 (24160) - SHF.R.U32.HI R19, RZ, c[0x0][0x2c4], R18 ;
 Instr 1511 @ 0x5e70 (24176) - IADD3 R26, -R19, RZ, RZ ;
 Instr 1512 @ 0x5e80 (24192) - IMAD R27, R26, c[0x0][0x2bc], R27 ;
 Instr 1513 @ 0x5e90 (24208) - IMAD R6, R27, c[0x0][0x338], R6 ;
 Instr 1514 @ 0x5ea0 (24224) - @!P2 BRA 0x5f80 ;
Basic block id 174 - num instructions 13
 Instr 1515 @ 0x5eb0 (24240) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
 Instr 1516 @ 0x5ec0 (24256) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
 Instr 1517 @ 0x5ed0 (24272) - IMAD.HI.U32 R26, R19, c[0x0][0x2cc], R18 ;
 Instr 1518 @ 0x5ee0 (24288) - SHF.R.U32.HI R27, RZ, c[0x0][0x2d0], R26 ;
 Instr 1519 @ 0x5ef0 (24304) - @P2 MOV R26, RZ ;
 Instr 1520 @ 0x5f00 (24320) - IMAD.MOV R18, RZ, RZ, -R27.reuse ;
 Instr 1521 @ 0x5f10 (24336) - @P2 IMAD.HI.U32 R10, R27, c[0x0][0x2d8], R26 ;
 Instr 1522 @ 0x5f20 (24352) - IMAD R19, R18, c[0x0][0x2c8], R19 ;
 Instr 1523 @ 0x5f30 (24368) - @P2 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1524 @ 0x5f40 (24384) - IMAD R6, R19, c[0x0][0x33c], R6 ;
 Instr 1525 @ 0x5f50 (24400) - @P2 IADD3 R26, -R10, RZ, RZ ;
 Instr 1526 @ 0x5f60 (24416) - @P2 IMAD R27, R26, c[0x0][0x2d4], R27 ;
 Instr 1527 @ 0x5f70 (24432) - @P2 IMAD R6, R27, c[0x0][0x340], R6 ;
Basic block id 175 - num instructions 5
 Instr 1528 @ 0x5f80 (24448) - LOP3.LUT R19, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1529 @ 0x5f90 (24464) - IADD3 R18, P2, R4, R19, RZ ;
 Instr 1530 @ 0x5fa0 (24480) - IMAD.X R19, RZ, RZ, R5, P2 ;
 Instr 1531 @ 0x5fb0 (24496) - LDG.E.64.SYS R18, [R18] ;
 Instr 1532 @ 0x5fc0 (24512) - IADD3 R27, R11, c[0x0][0x17c], RZ ;
Basic block id 176 - num instructions 2
 Instr 1533 @ 0x5fd0 (24528) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
 Instr 1534 @ 0x5fe0 (24544) - @P2 BRA 0x8690 ;
Basic block id 177 - num instructions 2
 Instr 1535 @ 0x5ff0 (24560) - MOV R6, RZ ;
 Instr 1536 @ 0x6000 (24576) - @!P1 BRA 0x6c70 ;
Basic block id 178 - num instructions 9
 Instr 1537 @ 0x6010 (24592) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1538 @ 0x6020 (24608) - MOV R10, c[0x0][0x1b0] ;
 Instr 1539 @ 0x6030 (24624) - IMAD.HI.U32 R20, R27, c[0x0][0x1b8], R26 ;
 Instr 1540 @ 0x6040 (24640) - ISETP.NE.AND P2, PT, R10, 0x1, PT ;
 Instr 1541 @ 0x6050 (24656) - SHF.R.U32.HI R21, RZ, c[0x0][0x1bc], R20 ;
 Instr 1542 @ 0x6060 (24672) - IMAD.MOV R29, RZ, RZ, -R21 ;
 Instr 1543 @ 0x6070 (24688) - IMAD R6, R29, c[0x0][0x1b4], R27 ;
 Instr 1544 @ 0x6080 (24704) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1545 @ 0x6090 (24720) - @!P2 BRA 0x6c70 ;
Basic block id 179 - num instructions 8
 Instr 1546 @ 0x60a0 (24736) - MOV R20, RZ ;
 Instr 1547 @ 0x60b0 (24752) - ISETP.NE.AND P2, PT, R10, 0x2, PT ;
 Instr 1548 @ 0x60c0 (24768) - IMAD.HI.U32 R28, R21, c[0x0][0x1c4], R20 ;
 Instr 1549 @ 0x60d0 (24784) - SHF.R.U32.HI R29, RZ, c[0x0][0x1c8], R28 ;
 Instr 1550 @ 0x60e0 (24800) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1551 @ 0x60f0 (24816) - IMAD R21, R20, c[0x0][0x1c0], R21 ;
 Instr 1552 @ 0x6100 (24832) - IMAD R6, R21, c[0x0][0x2e4], R6 ;
 Instr 1553 @ 0x6110 (24848) - @!P2 BRA 0x6c70 ;
Basic block id 180 - num instructions 8
 Instr 1554 @ 0x6120 (24864) - MOV R28, RZ ;
 Instr 1555 @ 0x6130 (24880) - ISETP.NE.AND P2, PT, R10, 0x3, PT ;
 Instr 1556 @ 0x6140 (24896) - IMAD.HI.U32 R20, R29, c[0x0][0x1d0], R28 ;
 Instr 1557 @ 0x6150 (24912) - SHF.R.U32.HI R21, RZ, c[0x0][0x1d4], R20 ;
 Instr 1558 @ 0x6160 (24928) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1559 @ 0x6170 (24944) - IMAD R29, R28, c[0x0][0x1cc], R29 ;
 Instr 1560 @ 0x6180 (24960) - IMAD R6, R29, c[0x0][0x2e8], R6 ;
 Instr 1561 @ 0x6190 (24976) - @!P2 BRA 0x6c70 ;
Basic block id 181 - num instructions 8
 Instr 1562 @ 0x61a0 (24992) - MOV R20, RZ ;
 Instr 1563 @ 0x61b0 (25008) - ISETP.NE.AND P2, PT, R10, 0x4, PT ;
 Instr 1564 @ 0x61c0 (25024) - IMAD.HI.U32 R28, R21, c[0x0][0x1dc], R20 ;
 Instr 1565 @ 0x61d0 (25040) - SHF.R.U32.HI R29, RZ, c[0x0][0x1e0], R28 ;
 Instr 1566 @ 0x61e0 (25056) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1567 @ 0x61f0 (25072) - IMAD R21, R20, c[0x0][0x1d8], R21 ;
 Instr 1568 @ 0x6200 (25088) - IMAD R6, R21, c[0x0][0x2ec], R6 ;
 Instr 1569 @ 0x6210 (25104) - @!P2 BRA 0x6c70 ;
Basic block id 182 - num instructions 8
 Instr 1570 @ 0x6220 (25120) - MOV R28, RZ ;
 Instr 1571 @ 0x6230 (25136) - ISETP.NE.AND P2, PT, R10, 0x5, PT ;
 Instr 1572 @ 0x6240 (25152) - IMAD.HI.U32 R20, R29, c[0x0][0x1e8], R28 ;
 Instr 1573 @ 0x6250 (25168) - SHF.R.U32.HI R21, RZ, c[0x0][0x1ec], R20 ;
 Instr 1574 @ 0x6260 (25184) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1575 @ 0x6270 (25200) - IMAD R29, R28, c[0x0][0x1e4], R29 ;
 Instr 1576 @ 0x6280 (25216) - IMAD R6, R29, c[0x0][0x2f0], R6 ;
 Instr 1577 @ 0x6290 (25232) - @!P2 BRA 0x6c70 ;
Basic block id 183 - num instructions 8
 Instr 1578 @ 0x62a0 (25248) - MOV R20, RZ ;
 Instr 1579 @ 0x62b0 (25264) - ISETP.NE.AND P2, PT, R10, 0x6, PT ;
 Instr 1580 @ 0x62c0 (25280) - IMAD.HI.U32 R28, R21, c[0x0][0x1f4], R20 ;
 Instr 1581 @ 0x62d0 (25296) - SHF.R.U32.HI R29, RZ, c[0x0][0x1f8], R28 ;
 Instr 1582 @ 0x62e0 (25312) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1583 @ 0x62f0 (25328) - IMAD R21, R20, c[0x0][0x1f0], R21 ;
 Instr 1584 @ 0x6300 (25344) - IMAD R6, R21, c[0x0][0x2f4], R6 ;
 Instr 1585 @ 0x6310 (25360) - @!P2 BRA 0x6c70 ;
Basic block id 184 - num instructions 8
 Instr 1586 @ 0x6320 (25376) - MOV R28, RZ ;
 Instr 1587 @ 0x6330 (25392) - ISETP.NE.AND P2, PT, R10, 0x7, PT ;
 Instr 1588 @ 0x6340 (25408) - IMAD.HI.U32 R20, R29, c[0x0][0x200], R28 ;
 Instr 1589 @ 0x6350 (25424) - SHF.R.U32.HI R21, RZ, c[0x0][0x204], R20 ;
 Instr 1590 @ 0x6360 (25440) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1591 @ 0x6370 (25456) - IMAD R29, R28, c[0x0][0x1fc], R29 ;
 Instr 1592 @ 0x6380 (25472) - IMAD R6, R29, c[0x0][0x2f8], R6 ;
 Instr 1593 @ 0x6390 (25488) - @!P2 BRA 0x6c70 ;
Basic block id 185 - num instructions 8
 Instr 1594 @ 0x63a0 (25504) - MOV R20, RZ ;
 Instr 1595 @ 0x63b0 (25520) - ISETP.NE.AND P2, PT, R10, 0x8, PT ;
 Instr 1596 @ 0x63c0 (25536) - IMAD.HI.U32 R28, R21, c[0x0][0x20c], R20 ;
 Instr 1597 @ 0x63d0 (25552) - SHF.R.U32.HI R29, RZ, c[0x0][0x210], R28 ;
 Instr 1598 @ 0x63e0 (25568) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1599 @ 0x63f0 (25584) - IMAD R21, R20, c[0x0][0x208], R21 ;
 Instr 1600 @ 0x6400 (25600) - IMAD R6, R21, c[0x0][0x2fc], R6 ;
 Instr 1601 @ 0x6410 (25616) - @!P2 BRA 0x6c70 ;
Basic block id 186 - num instructions 8
 Instr 1602 @ 0x6420 (25632) - MOV R28, RZ ;
 Instr 1603 @ 0x6430 (25648) - ISETP.NE.AND P2, PT, R10, 0x9, PT ;
 Instr 1604 @ 0x6440 (25664) - IMAD.HI.U32 R20, R29, c[0x0][0x218], R28 ;
 Instr 1605 @ 0x6450 (25680) - SHF.R.U32.HI R21, RZ, c[0x0][0x21c], R20 ;
 Instr 1606 @ 0x6460 (25696) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1607 @ 0x6470 (25712) - IMAD R29, R28, c[0x0][0x214], R29 ;
 Instr 1608 @ 0x6480 (25728) - IMAD R6, R29, c[0x0][0x300], R6 ;
 Instr 1609 @ 0x6490 (25744) - @!P2 BRA 0x6c70 ;
Basic block id 187 - num instructions 8
 Instr 1610 @ 0x64a0 (25760) - MOV R20, RZ ;
 Instr 1611 @ 0x64b0 (25776) - ISETP.NE.AND P2, PT, R10, 0xa, PT ;
 Instr 1612 @ 0x64c0 (25792) - IMAD.HI.U32 R28, R21, c[0x0][0x224], R20 ;
 Instr 1613 @ 0x64d0 (25808) - SHF.R.U32.HI R29, RZ, c[0x0][0x228], R28 ;
 Instr 1614 @ 0x64e0 (25824) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1615 @ 0x64f0 (25840) - IMAD R21, R20, c[0x0][0x220], R21 ;
 Instr 1616 @ 0x6500 (25856) - IMAD R6, R21, c[0x0][0x304], R6 ;
 Instr 1617 @ 0x6510 (25872) - @!P2 BRA 0x6c70 ;
Basic block id 188 - num instructions 8
 Instr 1618 @ 0x6520 (25888) - MOV R28, RZ ;
 Instr 1619 @ 0x6530 (25904) - ISETP.NE.AND P2, PT, R10, 0xb, PT ;
 Instr 1620 @ 0x6540 (25920) - IMAD.HI.U32 R20, R29, c[0x0][0x230], R28 ;
 Instr 1621 @ 0x6550 (25936) - SHF.R.U32.HI R21, RZ, c[0x0][0x234], R20 ;
 Instr 1622 @ 0x6560 (25952) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1623 @ 0x6570 (25968) - IMAD R29, R28, c[0x0][0x22c], R29 ;
 Instr 1624 @ 0x6580 (25984) - IMAD R6, R29, c[0x0][0x308], R6 ;
 Instr 1625 @ 0x6590 (26000) - @!P2 BRA 0x6c70 ;
Basic block id 189 - num instructions 8
 Instr 1626 @ 0x65a0 (26016) - MOV R20, RZ ;
 Instr 1627 @ 0x65b0 (26032) - ISETP.NE.AND P2, PT, R10, 0xc, PT ;
 Instr 1628 @ 0x65c0 (26048) - IMAD.HI.U32 R28, R21, c[0x0][0x23c], R20 ;
 Instr 1629 @ 0x65d0 (26064) - SHF.R.U32.HI R29, RZ, c[0x0][0x240], R28 ;
 Instr 1630 @ 0x65e0 (26080) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1631 @ 0x65f0 (26096) - IMAD R21, R20, c[0x0][0x238], R21 ;
 Instr 1632 @ 0x6600 (26112) - IMAD R6, R21, c[0x0][0x30c], R6 ;
 Instr 1633 @ 0x6610 (26128) - @!P2 BRA 0x6c70 ;
Basic block id 190 - num instructions 8
 Instr 1634 @ 0x6620 (26144) - MOV R28, RZ ;
 Instr 1635 @ 0x6630 (26160) - ISETP.NE.AND P2, PT, R10, 0xd, PT ;
 Instr 1636 @ 0x6640 (26176) - IMAD.HI.U32 R20, R29, c[0x0][0x248], R28 ;
 Instr 1637 @ 0x6650 (26192) - SHF.R.U32.HI R21, RZ, c[0x0][0x24c], R20 ;
 Instr 1638 @ 0x6660 (26208) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1639 @ 0x6670 (26224) - IMAD R29, R28, c[0x0][0x244], R29 ;
 Instr 1640 @ 0x6680 (26240) - IMAD R6, R29, c[0x0][0x310], R6 ;
 Instr 1641 @ 0x6690 (26256) - @!P2 BRA 0x6c70 ;
Basic block id 191 - num instructions 8
 Instr 1642 @ 0x66a0 (26272) - MOV R20, RZ ;
 Instr 1643 @ 0x66b0 (26288) - ISETP.NE.AND P2, PT, R10, 0xe, PT ;
 Instr 1644 @ 0x66c0 (26304) - IMAD.HI.U32 R28, R21, c[0x0][0x254], R20 ;
 Instr 1645 @ 0x66d0 (26320) - SHF.R.U32.HI R29, RZ, c[0x0][0x258], R28 ;
 Instr 1646 @ 0x66e0 (26336) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1647 @ 0x66f0 (26352) - IMAD R21, R20, c[0x0][0x250], R21 ;
 Instr 1648 @ 0x6700 (26368) - IMAD R6, R21, c[0x0][0x314], R6 ;
 Instr 1649 @ 0x6710 (26384) - @!P2 BRA 0x6c70 ;
Basic block id 192 - num instructions 8
 Instr 1650 @ 0x6720 (26400) - MOV R28, RZ ;
 Instr 1651 @ 0x6730 (26416) - ISETP.NE.AND P2, PT, R10, 0xf, PT ;
 Instr 1652 @ 0x6740 (26432) - IMAD.HI.U32 R20, R29, c[0x0][0x260], R28 ;
 Instr 1653 @ 0x6750 (26448) - SHF.R.U32.HI R21, RZ, c[0x0][0x264], R20 ;
 Instr 1654 @ 0x6760 (26464) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1655 @ 0x6770 (26480) - IMAD R29, R28, c[0x0][0x25c], R29 ;
 Instr 1656 @ 0x6780 (26496) - IMAD R6, R29, c[0x0][0x318], R6 ;
 Instr 1657 @ 0x6790 (26512) - @!P2 BRA 0x6c70 ;
Basic block id 193 - num instructions 8
 Instr 1658 @ 0x67a0 (26528) - MOV R20, RZ ;
 Instr 1659 @ 0x67b0 (26544) - ISETP.NE.AND P2, PT, R10, 0x10, PT ;
 Instr 1660 @ 0x67c0 (26560) - IMAD.HI.U32 R28, R21, c[0x0][0x26c], R20 ;
 Instr 1661 @ 0x67d0 (26576) - SHF.R.U32.HI R29, RZ, c[0x0][0x270], R28 ;
 Instr 1662 @ 0x67e0 (26592) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1663 @ 0x67f0 (26608) - IMAD R21, R20, c[0x0][0x268], R21 ;
 Instr 1664 @ 0x6800 (26624) - IMAD R6, R21, c[0x0][0x31c], R6 ;
 Instr 1665 @ 0x6810 (26640) - @!P2 BRA 0x6c70 ;
Basic block id 194 - num instructions 8
 Instr 1666 @ 0x6820 (26656) - MOV R28, RZ ;
 Instr 1667 @ 0x6830 (26672) - ISETP.NE.AND P2, PT, R10, 0x11, PT ;
 Instr 1668 @ 0x6840 (26688) - IMAD.HI.U32 R20, R29, c[0x0][0x278], R28 ;
 Instr 1669 @ 0x6850 (26704) - SHF.R.U32.HI R21, RZ, c[0x0][0x27c], R20 ;
 Instr 1670 @ 0x6860 (26720) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1671 @ 0x6870 (26736) - IMAD R29, R28, c[0x0][0x274], R29 ;
 Instr 1672 @ 0x6880 (26752) - IMAD R6, R29, c[0x0][0x320], R6 ;
 Instr 1673 @ 0x6890 (26768) - @!P2 BRA 0x6c70 ;
Basic block id 195 - num instructions 8
 Instr 1674 @ 0x68a0 (26784) - MOV R20, RZ ;
 Instr 1675 @ 0x68b0 (26800) - ISETP.NE.AND P2, PT, R10, 0x12, PT ;
 Instr 1676 @ 0x68c0 (26816) - IMAD.HI.U32 R28, R21, c[0x0][0x284], R20 ;
 Instr 1677 @ 0x68d0 (26832) - SHF.R.U32.HI R29, RZ, c[0x0][0x288], R28 ;
 Instr 1678 @ 0x68e0 (26848) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1679 @ 0x68f0 (26864) - IMAD R21, R20, c[0x0][0x280], R21 ;
 Instr 1680 @ 0x6900 (26880) - IMAD R6, R21, c[0x0][0x324], R6 ;
 Instr 1681 @ 0x6910 (26896) - @!P2 BRA 0x6c70 ;
Basic block id 196 - num instructions 8
 Instr 1682 @ 0x6920 (26912) - MOV R28, RZ ;
 Instr 1683 @ 0x6930 (26928) - ISETP.NE.AND P2, PT, R10, 0x13, PT ;
 Instr 1684 @ 0x6940 (26944) - IMAD.HI.U32 R20, R29, c[0x0][0x290], R28 ;
 Instr 1685 @ 0x6950 (26960) - SHF.R.U32.HI R21, RZ, c[0x0][0x294], R20 ;
 Instr 1686 @ 0x6960 (26976) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1687 @ 0x6970 (26992) - IMAD R29, R28, c[0x0][0x28c], R29 ;
 Instr 1688 @ 0x6980 (27008) - IMAD R6, R29, c[0x0][0x328], R6 ;
 Instr 1689 @ 0x6990 (27024) - @!P2 BRA 0x6c70 ;
Basic block id 197 - num instructions 8
 Instr 1690 @ 0x69a0 (27040) - MOV R20, RZ ;
 Instr 1691 @ 0x69b0 (27056) - ISETP.NE.AND P2, PT, R10, 0x14, PT ;
 Instr 1692 @ 0x69c0 (27072) - IMAD.HI.U32 R28, R21, c[0x0][0x29c], R20 ;
 Instr 1693 @ 0x69d0 (27088) - SHF.R.U32.HI R29, RZ, c[0x0][0x2a0], R28 ;
 Instr 1694 @ 0x69e0 (27104) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1695 @ 0x69f0 (27120) - IMAD R21, R20, c[0x0][0x298], R21 ;
 Instr 1696 @ 0x6a00 (27136) - IMAD R6, R21, c[0x0][0x32c], R6 ;
 Instr 1697 @ 0x6a10 (27152) - @!P2 BRA 0x6c70 ;
Basic block id 198 - num instructions 8
 Instr 1698 @ 0x6a20 (27168) - MOV R28, RZ ;
 Instr 1699 @ 0x6a30 (27184) - ISETP.NE.AND P2, PT, R10, 0x15, PT ;
 Instr 1700 @ 0x6a40 (27200) - IMAD.HI.U32 R20, R29, c[0x0][0x2a8], R28 ;
 Instr 1701 @ 0x6a50 (27216) - SHF.R.U32.HI R21, RZ, c[0x0][0x2ac], R20 ;
 Instr 1702 @ 0x6a60 (27232) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1703 @ 0x6a70 (27248) - IMAD R29, R28, c[0x0][0x2a4], R29 ;
 Instr 1704 @ 0x6a80 (27264) - IMAD R6, R29, c[0x0][0x330], R6 ;
 Instr 1705 @ 0x6a90 (27280) - @!P2 BRA 0x6c70 ;
Basic block id 199 - num instructions 8
 Instr 1706 @ 0x6aa0 (27296) - MOV R20, RZ ;
 Instr 1707 @ 0x6ab0 (27312) - ISETP.NE.AND P2, PT, R10, 0x16, PT ;
 Instr 1708 @ 0x6ac0 (27328) - IMAD.HI.U32 R28, R21, c[0x0][0x2b4], R20 ;
 Instr 1709 @ 0x6ad0 (27344) - SHF.R.U32.HI R29, RZ, c[0x0][0x2b8], R28 ;
 Instr 1710 @ 0x6ae0 (27360) - IMAD.MOV R20, RZ, RZ, -R29 ;
 Instr 1711 @ 0x6af0 (27376) - IMAD R21, R20, c[0x0][0x2b0], R21 ;
 Instr 1712 @ 0x6b00 (27392) - IMAD R6, R21, c[0x0][0x334], R6 ;
 Instr 1713 @ 0x6b10 (27408) - @!P2 BRA 0x6c70 ;
Basic block id 200 - num instructions 8
 Instr 1714 @ 0x6b20 (27424) - MOV R28, RZ ;
 Instr 1715 @ 0x6b30 (27440) - ISETP.NE.AND P2, PT, R10, 0x17, PT ;
 Instr 1716 @ 0x6b40 (27456) - IMAD.HI.U32 R20, R29, c[0x0][0x2c0], R28 ;
 Instr 1717 @ 0x6b50 (27472) - SHF.R.U32.HI R21, RZ, c[0x0][0x2c4], R20 ;
 Instr 1718 @ 0x6b60 (27488) - IMAD.MOV R28, RZ, RZ, -R21 ;
 Instr 1719 @ 0x6b70 (27504) - IMAD R29, R28, c[0x0][0x2bc], R29 ;
 Instr 1720 @ 0x6b80 (27520) - IMAD R6, R29, c[0x0][0x338], R6 ;
 Instr 1721 @ 0x6b90 (27536) - @!P2 BRA 0x6c70 ;
Basic block id 201 - num instructions 13
 Instr 1722 @ 0x6ba0 (27552) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
 Instr 1723 @ 0x6bb0 (27568) - MOV R20, RZ ;
 Instr 1724 @ 0x6bc0 (27584) - IMAD.HI.U32 R28, R21, c[0x0][0x2cc], R20 ;
 Instr 1725 @ 0x6bd0 (27600) - SHF.R.U32.HI R29, RZ, c[0x0][0x2d0], R28 ;
 Instr 1726 @ 0x6be0 (27616) - @P2 IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1727 @ 0x6bf0 (27632) - IADD3 R20, -R29.reuse, RZ, RZ ;
 Instr 1728 @ 0x6c00 (27648) - @P2 IMAD.HI.U32 R10, R29, c[0x0][0x2d8], R28 ;
 Instr 1729 @ 0x6c10 (27664) - IMAD R21, R20, c[0x0][0x2c8], R21 ;
 Instr 1730 @ 0x6c20 (27680) - @P2 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1731 @ 0x6c30 (27696) - IMAD R6, R21, c[0x0][0x33c], R6 ;
 Instr 1732 @ 0x6c40 (27712) - @P2 IMAD.MOV R28, RZ, RZ, -R10 ;
 Instr 1733 @ 0x6c50 (27728) - @P2 IMAD R29, R28, c[0x0][0x2d4], R29 ;
 Instr 1734 @ 0x6c60 (27744) - @P2 IMAD R6, R29, c[0x0][0x340], R6 ;
Basic block id 202 - num instructions 7
 Instr 1735 @ 0x6c70 (27760) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1736 @ 0x6c80 (27776) - IADD3 R20, P2, R4, R21, RZ ;
 Instr 1737 @ 0x6c90 (27792) - IADD3.X R21, RZ, R5, RZ, P2, !PT ;
 Instr 1738 @ 0x6ca0 (27808) - LDG.E.64.SYS R20, [R20] ;
 Instr 1739 @ 0x6cb0 (27824) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 1740 @ 0x6cc0 (27840) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
 Instr 1741 @ 0x6cd0 (27856) - @P2 BRA 0x8690 ;
Basic block id 203 - num instructions 2
 Instr 1742 @ 0x6ce0 (27872) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 1743 @ 0x6cf0 (27888) - @!P1 BRA 0x7960 ;
Basic block id 204 - num instructions 9
 Instr 1744 @ 0x6d00 (27904) - MOV R26, RZ ;
 Instr 1745 @ 0x6d10 (27920) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x1b0] ;
 Instr 1746 @ 0x6d20 (27936) - IMAD.HI.U32 R22, R27, c[0x0][0x1b8], R26 ;
 Instr 1747 @ 0x6d30 (27952) - ISETP.NE.AND P2, PT, R10, 0x1, PT ;
 Instr 1748 @ 0x6d40 (27968) - SHF.R.U32.HI R23, RZ, c[0x0][0x1bc], R22 ;
 Instr 1749 @ 0x6d50 (27984) - IADD3 R29, -R23, RZ, RZ ;
 Instr 1750 @ 0x6d60 (28000) - IMAD R6, R29, c[0x0][0x1b4], R27 ;
 Instr 1751 @ 0x6d70 (28016) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1752 @ 0x6d80 (28032) - @!P2 BRA 0x7960 ;
Basic block id 205 - num instructions 8
 Instr 1753 @ 0x6d90 (28048) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1754 @ 0x6da0 (28064) - ISETP.NE.AND P2, PT, R10, 0x2, PT ;
 Instr 1755 @ 0x6db0 (28080) - IMAD.HI.U32 R28, R23, c[0x0][0x1c4], R22 ;
 Instr 1756 @ 0x6dc0 (28096) - SHF.R.U32.HI R29, RZ, c[0x0][0x1c8], R28 ;
 Instr 1757 @ 0x6dd0 (28112) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1758 @ 0x6de0 (28128) - IMAD R23, R22, c[0x0][0x1c0], R23 ;
 Instr 1759 @ 0x6df0 (28144) - IMAD R6, R23, c[0x0][0x2e4], R6 ;
 Instr 1760 @ 0x6e00 (28160) - @!P2 BRA 0x7960 ;
Basic block id 206 - num instructions 8
 Instr 1761 @ 0x6e10 (28176) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1762 @ 0x6e20 (28192) - ISETP.NE.AND P2, PT, R10, 0x3, PT ;
 Instr 1763 @ 0x6e30 (28208) - IMAD.HI.U32 R22, R29, c[0x0][0x1d0], R28 ;
 Instr 1764 @ 0x6e40 (28224) - SHF.R.U32.HI R23, RZ, c[0x0][0x1d4], R22 ;
 Instr 1765 @ 0x6e50 (28240) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1766 @ 0x6e60 (28256) - IMAD R29, R28, c[0x0][0x1cc], R29 ;
 Instr 1767 @ 0x6e70 (28272) - IMAD R6, R29, c[0x0][0x2e8], R6 ;
 Instr 1768 @ 0x6e80 (28288) - @!P2 BRA 0x7960 ;
Basic block id 207 - num instructions 8
 Instr 1769 @ 0x6e90 (28304) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1770 @ 0x6ea0 (28320) - ISETP.NE.AND P2, PT, R10, 0x4, PT ;
 Instr 1771 @ 0x6eb0 (28336) - IMAD.HI.U32 R28, R23, c[0x0][0x1dc], R22 ;
 Instr 1772 @ 0x6ec0 (28352) - SHF.R.U32.HI R29, RZ, c[0x0][0x1e0], R28 ;
 Instr 1773 @ 0x6ed0 (28368) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1774 @ 0x6ee0 (28384) - IMAD R23, R22, c[0x0][0x1d8], R23 ;
 Instr 1775 @ 0x6ef0 (28400) - IMAD R6, R23, c[0x0][0x2ec], R6 ;
 Instr 1776 @ 0x6f00 (28416) - @!P2 BRA 0x7960 ;
Basic block id 208 - num instructions 8
 Instr 1777 @ 0x6f10 (28432) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1778 @ 0x6f20 (28448) - ISETP.NE.AND P2, PT, R10, 0x5, PT ;
 Instr 1779 @ 0x6f30 (28464) - IMAD.HI.U32 R22, R29, c[0x0][0x1e8], R28 ;
 Instr 1780 @ 0x6f40 (28480) - SHF.R.U32.HI R23, RZ, c[0x0][0x1ec], R22 ;
 Instr 1781 @ 0x6f50 (28496) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1782 @ 0x6f60 (28512) - IMAD R29, R28, c[0x0][0x1e4], R29 ;
 Instr 1783 @ 0x6f70 (28528) - IMAD R6, R29, c[0x0][0x2f0], R6 ;
 Instr 1784 @ 0x6f80 (28544) - @!P2 BRA 0x7960 ;
Basic block id 209 - num instructions 8
 Instr 1785 @ 0x6f90 (28560) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1786 @ 0x6fa0 (28576) - ISETP.NE.AND P2, PT, R10, 0x6, PT ;
 Instr 1787 @ 0x6fb0 (28592) - IMAD.HI.U32 R28, R23, c[0x0][0x1f4], R22 ;
 Instr 1788 @ 0x6fc0 (28608) - SHF.R.U32.HI R29, RZ, c[0x0][0x1f8], R28 ;
 Instr 1789 @ 0x6fd0 (28624) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1790 @ 0x6fe0 (28640) - IMAD R23, R22, c[0x0][0x1f0], R23 ;
 Instr 1791 @ 0x6ff0 (28656) - IMAD R6, R23, c[0x0][0x2f4], R6 ;
 Instr 1792 @ 0x7000 (28672) - @!P2 BRA 0x7960 ;
Basic block id 210 - num instructions 8
 Instr 1793 @ 0x7010 (28688) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1794 @ 0x7020 (28704) - ISETP.NE.AND P2, PT, R10, 0x7, PT ;
 Instr 1795 @ 0x7030 (28720) - IMAD.HI.U32 R22, R29, c[0x0][0x200], R28 ;
 Instr 1796 @ 0x7040 (28736) - SHF.R.U32.HI R23, RZ, c[0x0][0x204], R22 ;
 Instr 1797 @ 0x7050 (28752) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1798 @ 0x7060 (28768) - IMAD R29, R28, c[0x0][0x1fc], R29 ;
 Instr 1799 @ 0x7070 (28784) - IMAD R6, R29, c[0x0][0x2f8], R6 ;
 Instr 1800 @ 0x7080 (28800) - @!P2 BRA 0x7960 ;
Basic block id 211 - num instructions 8
 Instr 1801 @ 0x7090 (28816) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1802 @ 0x70a0 (28832) - ISETP.NE.AND P2, PT, R10, 0x8, PT ;
 Instr 1803 @ 0x70b0 (28848) - IMAD.HI.U32 R28, R23, c[0x0][0x20c], R22 ;
 Instr 1804 @ 0x70c0 (28864) - SHF.R.U32.HI R29, RZ, c[0x0][0x210], R28 ;
 Instr 1805 @ 0x70d0 (28880) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1806 @ 0x70e0 (28896) - IMAD R23, R22, c[0x0][0x208], R23 ;
 Instr 1807 @ 0x70f0 (28912) - IMAD R6, R23, c[0x0][0x2fc], R6 ;
 Instr 1808 @ 0x7100 (28928) - @!P2 BRA 0x7960 ;
Basic block id 212 - num instructions 8
 Instr 1809 @ 0x7110 (28944) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1810 @ 0x7120 (28960) - ISETP.NE.AND P2, PT, R10, 0x9, PT ;
 Instr 1811 @ 0x7130 (28976) - IMAD.HI.U32 R22, R29, c[0x0][0x218], R28 ;
 Instr 1812 @ 0x7140 (28992) - SHF.R.U32.HI R23, RZ, c[0x0][0x21c], R22 ;
 Instr 1813 @ 0x7150 (29008) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1814 @ 0x7160 (29024) - IMAD R29, R28, c[0x0][0x214], R29 ;
 Instr 1815 @ 0x7170 (29040) - IMAD R6, R29, c[0x0][0x300], R6 ;
 Instr 1816 @ 0x7180 (29056) - @!P2 BRA 0x7960 ;
Basic block id 213 - num instructions 8
 Instr 1817 @ 0x7190 (29072) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1818 @ 0x71a0 (29088) - ISETP.NE.AND P2, PT, R10, 0xa, PT ;
 Instr 1819 @ 0x71b0 (29104) - IMAD.HI.U32 R28, R23, c[0x0][0x224], R22 ;
 Instr 1820 @ 0x71c0 (29120) - SHF.R.U32.HI R29, RZ, c[0x0][0x228], R28 ;
 Instr 1821 @ 0x71d0 (29136) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1822 @ 0x71e0 (29152) - IMAD R23, R22, c[0x0][0x220], R23 ;
 Instr 1823 @ 0x71f0 (29168) - IMAD R6, R23, c[0x0][0x304], R6 ;
 Instr 1824 @ 0x7200 (29184) - @!P2 BRA 0x7960 ;
Basic block id 214 - num instructions 8
 Instr 1825 @ 0x7210 (29200) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1826 @ 0x7220 (29216) - ISETP.NE.AND P2, PT, R10, 0xb, PT ;
 Instr 1827 @ 0x7230 (29232) - IMAD.HI.U32 R22, R29, c[0x0][0x230], R28 ;
 Instr 1828 @ 0x7240 (29248) - SHF.R.U32.HI R23, RZ, c[0x0][0x234], R22 ;
 Instr 1829 @ 0x7250 (29264) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1830 @ 0x7260 (29280) - IMAD R29, R28, c[0x0][0x22c], R29 ;
 Instr 1831 @ 0x7270 (29296) - IMAD R6, R29, c[0x0][0x308], R6 ;
 Instr 1832 @ 0x7280 (29312) - @!P2 BRA 0x7960 ;
Basic block id 215 - num instructions 8
 Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1834 @ 0x72a0 (29344) - ISETP.NE.AND P2, PT, R10, 0xc, PT ;
 Instr 1835 @ 0x72b0 (29360) - IMAD.HI.U32 R28, R23, c[0x0][0x23c], R22 ;
 Instr 1836 @ 0x72c0 (29376) - SHF.R.U32.HI R29, RZ, c[0x0][0x240], R28 ;
 Instr 1837 @ 0x72d0 (29392) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1838 @ 0x72e0 (29408) - IMAD R23, R22, c[0x0][0x238], R23 ;
 Instr 1839 @ 0x72f0 (29424) - IMAD R6, R23, c[0x0][0x30c], R6 ;
 Instr 1840 @ 0x7300 (29440) - @!P2 BRA 0x7960 ;
Basic block id 216 - num instructions 8
 Instr 1841 @ 0x7310 (29456) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1842 @ 0x7320 (29472) - ISETP.NE.AND P2, PT, R10, 0xd, PT ;
 Instr 1843 @ 0x7330 (29488) - IMAD.HI.U32 R22, R29, c[0x0][0x248], R28 ;
 Instr 1844 @ 0x7340 (29504) - SHF.R.U32.HI R23, RZ, c[0x0][0x24c], R22 ;
 Instr 1845 @ 0x7350 (29520) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1846 @ 0x7360 (29536) - IMAD R29, R28, c[0x0][0x244], R29 ;
 Instr 1847 @ 0x7370 (29552) - IMAD R6, R29, c[0x0][0x310], R6 ;
 Instr 1848 @ 0x7380 (29568) - @!P2 BRA 0x7960 ;
Basic block id 217 - num instructions 8
 Instr 1849 @ 0x7390 (29584) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1850 @ 0x73a0 (29600) - ISETP.NE.AND P2, PT, R10, 0xe, PT ;
 Instr 1851 @ 0x73b0 (29616) - IMAD.HI.U32 R28, R23, c[0x0][0x254], R22 ;
 Instr 1852 @ 0x73c0 (29632) - SHF.R.U32.HI R29, RZ, c[0x0][0x258], R28 ;
 Instr 1853 @ 0x73d0 (29648) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1854 @ 0x73e0 (29664) - IMAD R23, R22, c[0x0][0x250], R23 ;
 Instr 1855 @ 0x73f0 (29680) - IMAD R6, R23, c[0x0][0x314], R6 ;
 Instr 1856 @ 0x7400 (29696) - @!P2 BRA 0x7960 ;
Basic block id 218 - num instructions 8
 Instr 1857 @ 0x7410 (29712) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1858 @ 0x7420 (29728) - ISETP.NE.AND P2, PT, R10, 0xf, PT ;
 Instr 1859 @ 0x7430 (29744) - IMAD.HI.U32 R22, R29, c[0x0][0x260], R28 ;
 Instr 1860 @ 0x7440 (29760) - SHF.R.U32.HI R23, RZ, c[0x0][0x264], R22 ;
 Instr 1861 @ 0x7450 (29776) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1862 @ 0x7460 (29792) - IMAD R29, R28, c[0x0][0x25c], R29 ;
 Instr 1863 @ 0x7470 (29808) - IMAD R6, R29, c[0x0][0x318], R6 ;
 Instr 1864 @ 0x7480 (29824) - @!P2 BRA 0x7960 ;
Basic block id 219 - num instructions 8
 Instr 1865 @ 0x7490 (29840) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1866 @ 0x74a0 (29856) - ISETP.NE.AND P2, PT, R10, 0x10, PT ;
 Instr 1867 @ 0x74b0 (29872) - IMAD.HI.U32 R28, R23, c[0x0][0x26c], R22 ;
 Instr 1868 @ 0x74c0 (29888) - SHF.R.U32.HI R29, RZ, c[0x0][0x270], R28 ;
 Instr 1869 @ 0x74d0 (29904) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1870 @ 0x74e0 (29920) - IMAD R23, R22, c[0x0][0x268], R23 ;
 Instr 1871 @ 0x74f0 (29936) - IMAD R6, R23, c[0x0][0x31c], R6 ;
 Instr 1872 @ 0x7500 (29952) - @!P2 BRA 0x7960 ;
Basic block id 220 - num instructions 8
 Instr 1873 @ 0x7510 (29968) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1874 @ 0x7520 (29984) - ISETP.NE.AND P2, PT, R10, 0x11, PT ;
 Instr 1875 @ 0x7530 (30000) - IMAD.HI.U32 R22, R29, c[0x0][0x278], R28 ;
 Instr 1876 @ 0x7540 (30016) - SHF.R.U32.HI R23, RZ, c[0x0][0x27c], R22 ;
 Instr 1877 @ 0x7550 (30032) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1878 @ 0x7560 (30048) - IMAD R29, R28, c[0x0][0x274], R29 ;
 Instr 1879 @ 0x7570 (30064) - IMAD R6, R29, c[0x0][0x320], R6 ;
 Instr 1880 @ 0x7580 (30080) - @!P2 BRA 0x7960 ;
Basic block id 221 - num instructions 8
 Instr 1881 @ 0x7590 (30096) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1882 @ 0x75a0 (30112) - ISETP.NE.AND P2, PT, R10, 0x12, PT ;
 Instr 1883 @ 0x75b0 (30128) - IMAD.HI.U32 R28, R23, c[0x0][0x284], R22 ;
 Instr 1884 @ 0x75c0 (30144) - SHF.R.U32.HI R29, RZ, c[0x0][0x288], R28 ;
 Instr 1885 @ 0x75d0 (30160) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1886 @ 0x75e0 (30176) - IMAD R23, R22, c[0x0][0x280], R23 ;
 Instr 1887 @ 0x75f0 (30192) - IMAD R6, R23, c[0x0][0x324], R6 ;
 Instr 1888 @ 0x7600 (30208) - @!P2 BRA 0x7960 ;
Basic block id 222 - num instructions 8
 Instr 1889 @ 0x7610 (30224) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1890 @ 0x7620 (30240) - ISETP.NE.AND P2, PT, R10, 0x13, PT ;
 Instr 1891 @ 0x7630 (30256) - IMAD.HI.U32 R22, R29, c[0x0][0x290], R28 ;
 Instr 1892 @ 0x7640 (30272) - SHF.R.U32.HI R23, RZ, c[0x0][0x294], R22 ;
 Instr 1893 @ 0x7650 (30288) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1894 @ 0x7660 (30304) - IMAD R29, R28, c[0x0][0x28c], R29 ;
 Instr 1895 @ 0x7670 (30320) - IMAD R6, R29, c[0x0][0x328], R6 ;
 Instr 1896 @ 0x7680 (30336) - @!P2 BRA 0x7960 ;
Basic block id 223 - num instructions 8
 Instr 1897 @ 0x7690 (30352) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1898 @ 0x76a0 (30368) - ISETP.NE.AND P2, PT, R10, 0x14, PT ;
 Instr 1899 @ 0x76b0 (30384) - IMAD.HI.U32 R28, R23, c[0x0][0x29c], R22 ;
 Instr 1900 @ 0x76c0 (30400) - SHF.R.U32.HI R29, RZ, c[0x0][0x2a0], R28 ;
 Instr 1901 @ 0x76d0 (30416) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1902 @ 0x76e0 (30432) - IMAD R23, R22, c[0x0][0x298], R23 ;
 Instr 1903 @ 0x76f0 (30448) - IMAD R6, R23, c[0x0][0x32c], R6 ;
 Instr 1904 @ 0x7700 (30464) - @!P2 BRA 0x7960 ;
Basic block id 224 - num instructions 8
 Instr 1905 @ 0x7710 (30480) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1906 @ 0x7720 (30496) - ISETP.NE.AND P2, PT, R10, 0x15, PT ;
 Instr 1907 @ 0x7730 (30512) - IMAD.HI.U32 R22, R29, c[0x0][0x2a8], R28 ;
 Instr 1908 @ 0x7740 (30528) - SHF.R.U32.HI R23, RZ, c[0x0][0x2ac], R22 ;
 Instr 1909 @ 0x7750 (30544) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1910 @ 0x7760 (30560) - IMAD R29, R28, c[0x0][0x2a4], R29 ;
 Instr 1911 @ 0x7770 (30576) - IMAD R6, R29, c[0x0][0x330], R6 ;
 Instr 1912 @ 0x7780 (30592) - @!P2 BRA 0x7960 ;
Basic block id 225 - num instructions 8
 Instr 1913 @ 0x7790 (30608) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1914 @ 0x77a0 (30624) - ISETP.NE.AND P2, PT, R10, 0x16, PT ;
 Instr 1915 @ 0x77b0 (30640) - IMAD.HI.U32 R28, R23, c[0x0][0x2b4], R22 ;
 Instr 1916 @ 0x77c0 (30656) - SHF.R.U32.HI R29, RZ, c[0x0][0x2b8], R28 ;
 Instr 1917 @ 0x77d0 (30672) - IADD3 R22, -R29, RZ, RZ ;
 Instr 1918 @ 0x77e0 (30688) - IMAD R23, R22, c[0x0][0x2b0], R23 ;
 Instr 1919 @ 0x77f0 (30704) - IMAD R6, R23, c[0x0][0x334], R6 ;
 Instr 1920 @ 0x7800 (30720) - @!P2 BRA 0x7960 ;
Basic block id 226 - num instructions 8
 Instr 1921 @ 0x7810 (30736) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
 Instr 1922 @ 0x7820 (30752) - ISETP.NE.AND P2, PT, R10, 0x17, PT ;
 Instr 1923 @ 0x7830 (30768) - IMAD.HI.U32 R22, R29, c[0x0][0x2c0], R28 ;
 Instr 1924 @ 0x7840 (30784) - SHF.R.U32.HI R23, RZ, c[0x0][0x2c4], R22 ;
 Instr 1925 @ 0x7850 (30800) - IADD3 R28, -R23, RZ, RZ ;
 Instr 1926 @ 0x7860 (30816) - IMAD R29, R28, c[0x0][0x2bc], R29 ;
 Instr 1927 @ 0x7870 (30832) - IMAD R6, R29, c[0x0][0x338], R6 ;
 Instr 1928 @ 0x7880 (30848) - @!P2 BRA 0x7960 ;
Basic block id 227 - num instructions 13
 Instr 1929 @ 0x7890 (30864) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
 Instr 1930 @ 0x78a0 (30880) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
 Instr 1931 @ 0x78b0 (30896) - IMAD.HI.U32 R28, R23, c[0x0][0x2cc], R22 ;
 Instr 1932 @ 0x78c0 (30912) - SHF.R.U32.HI R29, RZ, c[0x0][0x2d0], R28 ;
 Instr 1933 @ 0x78d0 (30928) - @P2 MOV R28, RZ ;
 Instr 1934 @ 0x78e0 (30944) - IMAD.MOV R22, RZ, RZ, -R29.reuse ;
 Instr 1935 @ 0x78f0 (30960) - @P2 IMAD.HI.U32 R10, R29, c[0x0][0x2d8], R28 ;
 Instr 1936 @ 0x7900 (30976) - IMAD R23, R22, c[0x0][0x2c8], R23 ;
 Instr 1937 @ 0x7910 (30992) - @P2 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 1938 @ 0x7920 (31008) - IMAD R6, R23, c[0x0][0x33c], R6 ;
 Instr 1939 @ 0x7930 (31024) - @P2 IADD3 R28, -R10, RZ, RZ ;
 Instr 1940 @ 0x7940 (31040) - @P2 IMAD R29, R28, c[0x0][0x2d4], R29 ;
 Instr 1941 @ 0x7950 (31056) - @P2 IMAD R6, R29, c[0x0][0x340], R6 ;
Basic block id 228 - num instructions 7
 Instr 1942 @ 0x7960 (31072) - LOP3.LUT R23, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 1943 @ 0x7970 (31088) - IADD3 R22, P2, R4, R23, RZ ;
 Instr 1944 @ 0x7980 (31104) - IMAD.X R23, RZ, RZ, R5, P2 ;
 Instr 1945 @ 0x7990 (31120) - LDG.E.64.SYS R22, [R22] ;
 Instr 1946 @ 0x79a0 (31136) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 1947 @ 0x79b0 (31152) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
 Instr 1948 @ 0x79c0 (31168) - @P2 BRA 0x8690 ;
Basic block id 229 - num instructions 2
 Instr 1949 @ 0x79d0 (31184) - MOV R6, RZ ;
 Instr 1950 @ 0x79e0 (31200) - @!P1 BRA 0x8650 ;
Basic block id 230 - num instructions 9
 Instr 1951 @ 0x79f0 (31216) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 1952 @ 0x7a00 (31232) - MOV R10, c[0x0][0x1b0] ;
 Instr 1953 @ 0x7a10 (31248) - IMAD.HI.U32 R24, R27, c[0x0][0x1b8], R26 ;
 Instr 1954 @ 0x7a20 (31264) - ISETP.NE.AND P1, PT, R10, 0x1, PT ;
 Instr 1955 @ 0x7a30 (31280) - SHF.R.U32.HI R25, RZ, c[0x0][0x1bc], R24 ;
 Instr 1956 @ 0x7a40 (31296) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 1957 @ 0x7a50 (31312) - IMAD R6, R26, c[0x0][0x1b4], R27 ;
 Instr 1958 @ 0x7a60 (31328) - IMAD R6, R6, c[0x0][0x2e0], RZ ;
 Instr 1959 @ 0x7a70 (31344) - @!P1 BRA 0x8650 ;
Basic block id 231 - num instructions 8
 Instr 1960 @ 0x7a80 (31360) - MOV R24, RZ ;
 Instr 1961 @ 0x7a90 (31376) - ISETP.NE.AND P1, PT, R10, 0x2, PT ;
 Instr 1962 @ 0x7aa0 (31392) - IMAD.HI.U32 R26, R25, c[0x0][0x1c4], R24 ;
 Instr 1963 @ 0x7ab0 (31408) - SHF.R.U32.HI R27, RZ, c[0x0][0x1c8], R26 ;
 Instr 1964 @ 0x7ac0 (31424) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 1965 @ 0x7ad0 (31440) - IMAD R25, R24, c[0x0][0x1c0], R25 ;
 Instr 1966 @ 0x7ae0 (31456) - IMAD R6, R25, c[0x0][0x2e4], R6 ;
 Instr 1967 @ 0x7af0 (31472) - @!P1 BRA 0x8650 ;
Basic block id 232 - num instructions 8
 Instr 1968 @ 0x7b00 (31488) - MOV R26, RZ ;
 Instr 1969 @ 0x7b10 (31504) - ISETP.NE.AND P1, PT, R10, 0x3, PT ;
 Instr 1970 @ 0x7b20 (31520) - IMAD.HI.U32 R24, R27, c[0x0][0x1d0], R26 ;
 Instr 1971 @ 0x7b30 (31536) - SHF.R.U32.HI R25, RZ, c[0x0][0x1d4], R24 ;
 Instr 1972 @ 0x7b40 (31552) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 1973 @ 0x7b50 (31568) - IMAD R27, R26, c[0x0][0x1cc], R27 ;
 Instr 1974 @ 0x7b60 (31584) - IMAD R6, R27, c[0x0][0x2e8], R6 ;
 Instr 1975 @ 0x7b70 (31600) - @!P1 BRA 0x8650 ;
Basic block id 233 - num instructions 8
 Instr 1976 @ 0x7b80 (31616) - MOV R24, RZ ;
 Instr 1977 @ 0x7b90 (31632) - ISETP.NE.AND P1, PT, R10, 0x4, PT ;
 Instr 1978 @ 0x7ba0 (31648) - IMAD.HI.U32 R26, R25, c[0x0][0x1dc], R24 ;
 Instr 1979 @ 0x7bb0 (31664) - SHF.R.U32.HI R27, RZ, c[0x0][0x1e0], R26 ;
 Instr 1980 @ 0x7bc0 (31680) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 1981 @ 0x7bd0 (31696) - IMAD R25, R24, c[0x0][0x1d8], R25 ;
 Instr 1982 @ 0x7be0 (31712) - IMAD R6, R25, c[0x0][0x2ec], R6 ;
 Instr 1983 @ 0x7bf0 (31728) - @!P1 BRA 0x8650 ;
Basic block id 234 - num instructions 8
 Instr 1984 @ 0x7c00 (31744) - MOV R26, RZ ;
 Instr 1985 @ 0x7c10 (31760) - ISETP.NE.AND P1, PT, R10, 0x5, PT ;
 Instr 1986 @ 0x7c20 (31776) - IMAD.HI.U32 R24, R27, c[0x0][0x1e8], R26 ;
 Instr 1987 @ 0x7c30 (31792) - SHF.R.U32.HI R25, RZ, c[0x0][0x1ec], R24 ;
 Instr 1988 @ 0x7c40 (31808) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 1989 @ 0x7c50 (31824) - IMAD R27, R26, c[0x0][0x1e4], R27 ;
 Instr 1990 @ 0x7c60 (31840) - IMAD R6, R27, c[0x0][0x2f0], R6 ;
 Instr 1991 @ 0x7c70 (31856) - @!P1 BRA 0x8650 ;
Basic block id 235 - num instructions 8
 Instr 1992 @ 0x7c80 (31872) - MOV R24, RZ ;
 Instr 1993 @ 0x7c90 (31888) - ISETP.NE.AND P1, PT, R10, 0x6, PT ;
 Instr 1994 @ 0x7ca0 (31904) - IMAD.HI.U32 R26, R25, c[0x0][0x1f4], R24 ;
 Instr 1995 @ 0x7cb0 (31920) - SHF.R.U32.HI R27, RZ, c[0x0][0x1f8], R26 ;
 Instr 1996 @ 0x7cc0 (31936) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 1997 @ 0x7cd0 (31952) - IMAD R25, R24, c[0x0][0x1f0], R25 ;
 Instr 1998 @ 0x7ce0 (31968) - IMAD R6, R25, c[0x0][0x2f4], R6 ;
 Instr 1999 @ 0x7cf0 (31984) - @!P1 BRA 0x8650 ;
Basic block id 236 - num instructions 8
 Instr 2000 @ 0x7d00 (32000) - MOV R26, RZ ;
 Instr 2001 @ 0x7d10 (32016) - ISETP.NE.AND P1, PT, R10, 0x7, PT ;
 Instr 2002 @ 0x7d20 (32032) - IMAD.HI.U32 R24, R27, c[0x0][0x200], R26 ;
 Instr 2003 @ 0x7d30 (32048) - SHF.R.U32.HI R25, RZ, c[0x0][0x204], R24 ;
 Instr 2004 @ 0x7d40 (32064) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2005 @ 0x7d50 (32080) - IMAD R27, R26, c[0x0][0x1fc], R27 ;
 Instr 2006 @ 0x7d60 (32096) - IMAD R6, R27, c[0x0][0x2f8], R6 ;
 Instr 2007 @ 0x7d70 (32112) - @!P1 BRA 0x8650 ;
Basic block id 237 - num instructions 8
 Instr 2008 @ 0x7d80 (32128) - MOV R24, RZ ;
 Instr 2009 @ 0x7d90 (32144) - ISETP.NE.AND P1, PT, R10, 0x8, PT ;
 Instr 2010 @ 0x7da0 (32160) - IMAD.HI.U32 R26, R25, c[0x0][0x20c], R24 ;
 Instr 2011 @ 0x7db0 (32176) - SHF.R.U32.HI R27, RZ, c[0x0][0x210], R26 ;
 Instr 2012 @ 0x7dc0 (32192) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2013 @ 0x7dd0 (32208) - IMAD R25, R24, c[0x0][0x208], R25 ;
 Instr 2014 @ 0x7de0 (32224) - IMAD R6, R25, c[0x0][0x2fc], R6 ;
 Instr 2015 @ 0x7df0 (32240) - @!P1 BRA 0x8650 ;
Basic block id 238 - num instructions 8
 Instr 2016 @ 0x7e00 (32256) - MOV R26, RZ ;
 Instr 2017 @ 0x7e10 (32272) - ISETP.NE.AND P1, PT, R10, 0x9, PT ;
 Instr 2018 @ 0x7e20 (32288) - IMAD.HI.U32 R24, R27, c[0x0][0x218], R26 ;
 Instr 2019 @ 0x7e30 (32304) - SHF.R.U32.HI R25, RZ, c[0x0][0x21c], R24 ;
 Instr 2020 @ 0x7e40 (32320) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2021 @ 0x7e50 (32336) - IMAD R27, R26, c[0x0][0x214], R27 ;
 Instr 2022 @ 0x7e60 (32352) - IMAD R6, R27, c[0x0][0x300], R6 ;
 Instr 2023 @ 0x7e70 (32368) - @!P1 BRA 0x8650 ;
Basic block id 239 - num instructions 8
 Instr 2024 @ 0x7e80 (32384) - MOV R24, RZ ;
 Instr 2025 @ 0x7e90 (32400) - ISETP.NE.AND P1, PT, R10, 0xa, PT ;
 Instr 2026 @ 0x7ea0 (32416) - IMAD.HI.U32 R26, R25, c[0x0][0x224], R24 ;
 Instr 2027 @ 0x7eb0 (32432) - SHF.R.U32.HI R27, RZ, c[0x0][0x228], R26 ;
 Instr 2028 @ 0x7ec0 (32448) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2029 @ 0x7ed0 (32464) - IMAD R25, R24, c[0x0][0x220], R25 ;
 Instr 2030 @ 0x7ee0 (32480) - IMAD R6, R25, c[0x0][0x304], R6 ;
 Instr 2031 @ 0x7ef0 (32496) - @!P1 BRA 0x8650 ;
Basic block id 240 - num instructions 8
 Instr 2032 @ 0x7f00 (32512) - MOV R26, RZ ;
 Instr 2033 @ 0x7f10 (32528) - ISETP.NE.AND P1, PT, R10, 0xb, PT ;
 Instr 2034 @ 0x7f20 (32544) - IMAD.HI.U32 R24, R27, c[0x0][0x230], R26 ;
 Instr 2035 @ 0x7f30 (32560) - SHF.R.U32.HI R25, RZ, c[0x0][0x234], R24 ;
 Instr 2036 @ 0x7f40 (32576) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2037 @ 0x7f50 (32592) - IMAD R27, R26, c[0x0][0x22c], R27 ;
 Instr 2038 @ 0x7f60 (32608) - IMAD R6, R27, c[0x0][0x308], R6 ;
 Instr 2039 @ 0x7f70 (32624) - @!P1 BRA 0x8650 ;
Basic block id 241 - num instructions 8
 Instr 2040 @ 0x7f80 (32640) - MOV R24, RZ ;
 Instr 2041 @ 0x7f90 (32656) - ISETP.NE.AND P1, PT, R10, 0xc, PT ;
 Instr 2042 @ 0x7fa0 (32672) - IMAD.HI.U32 R26, R25, c[0x0][0x23c], R24 ;
 Instr 2043 @ 0x7fb0 (32688) - SHF.R.U32.HI R27, RZ, c[0x0][0x240], R26 ;
 Instr 2044 @ 0x7fc0 (32704) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2045 @ 0x7fd0 (32720) - IMAD R25, R24, c[0x0][0x238], R25 ;
 Instr 2046 @ 0x7fe0 (32736) - IMAD R6, R25, c[0x0][0x30c], R6 ;
 Instr 2047 @ 0x7ff0 (32752) - @!P1 BRA 0x8650 ;
Basic block id 242 - num instructions 8
 Instr 2048 @ 0x8000 (32768) - MOV R26, RZ ;
 Instr 2049 @ 0x8010 (32784) - ISETP.NE.AND P1, PT, R10, 0xd, PT ;
 Instr 2050 @ 0x8020 (32800) - IMAD.HI.U32 R24, R27, c[0x0][0x248], R26 ;
 Instr 2051 @ 0x8030 (32816) - SHF.R.U32.HI R25, RZ, c[0x0][0x24c], R24 ;
 Instr 2052 @ 0x8040 (32832) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2053 @ 0x8050 (32848) - IMAD R27, R26, c[0x0][0x244], R27 ;
 Instr 2054 @ 0x8060 (32864) - IMAD R6, R27, c[0x0][0x310], R6 ;
 Instr 2055 @ 0x8070 (32880) - @!P1 BRA 0x8650 ;
Basic block id 243 - num instructions 8
 Instr 2056 @ 0x8080 (32896) - MOV R24, RZ ;
 Instr 2057 @ 0x8090 (32912) - ISETP.NE.AND P1, PT, R10, 0xe, PT ;
 Instr 2058 @ 0x80a0 (32928) - IMAD.HI.U32 R26, R25, c[0x0][0x254], R24 ;
 Instr 2059 @ 0x80b0 (32944) - SHF.R.U32.HI R27, RZ, c[0x0][0x258], R26 ;
 Instr 2060 @ 0x80c0 (32960) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2061 @ 0x80d0 (32976) - IMAD R25, R24, c[0x0][0x250], R25 ;
 Instr 2062 @ 0x80e0 (32992) - IMAD R6, R25, c[0x0][0x314], R6 ;
 Instr 2063 @ 0x80f0 (33008) - @!P1 BRA 0x8650 ;
Basic block id 244 - num instructions 8
 Instr 2064 @ 0x8100 (33024) - MOV R26, RZ ;
 Instr 2065 @ 0x8110 (33040) - ISETP.NE.AND P1, PT, R10, 0xf, PT ;
 Instr 2066 @ 0x8120 (33056) - IMAD.HI.U32 R24, R27, c[0x0][0x260], R26 ;
 Instr 2067 @ 0x8130 (33072) - SHF.R.U32.HI R25, RZ, c[0x0][0x264], R24 ;
 Instr 2068 @ 0x8140 (33088) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2069 @ 0x8150 (33104) - IMAD R27, R26, c[0x0][0x25c], R27 ;
 Instr 2070 @ 0x8160 (33120) - IMAD R6, R27, c[0x0][0x318], R6 ;
 Instr 2071 @ 0x8170 (33136) - @!P1 BRA 0x8650 ;
Basic block id 245 - num instructions 8
 Instr 2072 @ 0x8180 (33152) - MOV R24, RZ ;
 Instr 2073 @ 0x8190 (33168) - ISETP.NE.AND P1, PT, R10, 0x10, PT ;
 Instr 2074 @ 0x81a0 (33184) - IMAD.HI.U32 R26, R25, c[0x0][0x26c], R24 ;
 Instr 2075 @ 0x81b0 (33200) - SHF.R.U32.HI R27, RZ, c[0x0][0x270], R26 ;
 Instr 2076 @ 0x81c0 (33216) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2077 @ 0x81d0 (33232) - IMAD R25, R24, c[0x0][0x268], R25 ;
 Instr 2078 @ 0x81e0 (33248) - IMAD R6, R25, c[0x0][0x31c], R6 ;
 Instr 2079 @ 0x81f0 (33264) - @!P1 BRA 0x8650 ;
Basic block id 246 - num instructions 8
 Instr 2080 @ 0x8200 (33280) - MOV R26, RZ ;
 Instr 2081 @ 0x8210 (33296) - ISETP.NE.AND P1, PT, R10, 0x11, PT ;
 Instr 2082 @ 0x8220 (33312) - IMAD.HI.U32 R24, R27, c[0x0][0x278], R26 ;
 Instr 2083 @ 0x8230 (33328) - SHF.R.U32.HI R25, RZ, c[0x0][0x27c], R24 ;
 Instr 2084 @ 0x8240 (33344) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2085 @ 0x8250 (33360) - IMAD R27, R26, c[0x0][0x274], R27 ;
 Instr 2086 @ 0x8260 (33376) - IMAD R6, R27, c[0x0][0x320], R6 ;
 Instr 2087 @ 0x8270 (33392) - @!P1 BRA 0x8650 ;
Basic block id 247 - num instructions 8
 Instr 2088 @ 0x8280 (33408) - MOV R24, RZ ;
 Instr 2089 @ 0x8290 (33424) - ISETP.NE.AND P1, PT, R10, 0x12, PT ;
 Instr 2090 @ 0x82a0 (33440) - IMAD.HI.U32 R26, R25, c[0x0][0x284], R24 ;
 Instr 2091 @ 0x82b0 (33456) - SHF.R.U32.HI R27, RZ, c[0x0][0x288], R26 ;
 Instr 2092 @ 0x82c0 (33472) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2093 @ 0x82d0 (33488) - IMAD R25, R24, c[0x0][0x280], R25 ;
 Instr 2094 @ 0x82e0 (33504) - IMAD R6, R25, c[0x0][0x324], R6 ;
 Instr 2095 @ 0x82f0 (33520) - @!P1 BRA 0x8650 ;
Basic block id 248 - num instructions 8
 Instr 2096 @ 0x8300 (33536) - MOV R26, RZ ;
 Instr 2097 @ 0x8310 (33552) - ISETP.NE.AND P1, PT, R10, 0x13, PT ;
 Instr 2098 @ 0x8320 (33568) - IMAD.HI.U32 R24, R27, c[0x0][0x290], R26 ;
 Instr 2099 @ 0x8330 (33584) - SHF.R.U32.HI R25, RZ, c[0x0][0x294], R24 ;
 Instr 2100 @ 0x8340 (33600) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2101 @ 0x8350 (33616) - IMAD R27, R26, c[0x0][0x28c], R27 ;
 Instr 2102 @ 0x8360 (33632) - IMAD R6, R27, c[0x0][0x328], R6 ;
 Instr 2103 @ 0x8370 (33648) - @!P1 BRA 0x8650 ;
Basic block id 249 - num instructions 8
 Instr 2104 @ 0x8380 (33664) - MOV R24, RZ ;
 Instr 2105 @ 0x8390 (33680) - ISETP.NE.AND P1, PT, R10, 0x14, PT ;
 Instr 2106 @ 0x83a0 (33696) - IMAD.HI.U32 R26, R25, c[0x0][0x29c], R24 ;
 Instr 2107 @ 0x83b0 (33712) - SHF.R.U32.HI R27, RZ, c[0x0][0x2a0], R26 ;
 Instr 2108 @ 0x83c0 (33728) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2109 @ 0x83d0 (33744) - IMAD R25, R24, c[0x0][0x298], R25 ;
 Instr 2110 @ 0x83e0 (33760) - IMAD R6, R25, c[0x0][0x32c], R6 ;
 Instr 2111 @ 0x83f0 (33776) - @!P1 BRA 0x8650 ;
Basic block id 250 - num instructions 8
 Instr 2112 @ 0x8400 (33792) - MOV R26, RZ ;
 Instr 2113 @ 0x8410 (33808) - ISETP.NE.AND P1, PT, R10, 0x15, PT ;
 Instr 2114 @ 0x8420 (33824) - IMAD.HI.U32 R24, R27, c[0x0][0x2a8], R26 ;
 Instr 2115 @ 0x8430 (33840) - SHF.R.U32.HI R25, RZ, c[0x0][0x2ac], R24 ;
 Instr 2116 @ 0x8440 (33856) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2117 @ 0x8450 (33872) - IMAD R27, R26, c[0x0][0x2a4], R27 ;
 Instr 2118 @ 0x8460 (33888) - IMAD R6, R27, c[0x0][0x330], R6 ;
 Instr 2119 @ 0x8470 (33904) - @!P1 BRA 0x8650 ;
Basic block id 251 - num instructions 8
 Instr 2120 @ 0x8480 (33920) - MOV R24, RZ ;
 Instr 2121 @ 0x8490 (33936) - ISETP.NE.AND P1, PT, R10, 0x16, PT ;
 Instr 2122 @ 0x84a0 (33952) - IMAD.HI.U32 R26, R25, c[0x0][0x2b4], R24 ;
 Instr 2123 @ 0x84b0 (33968) - SHF.R.U32.HI R27, RZ, c[0x0][0x2b8], R26 ;
 Instr 2124 @ 0x84c0 (33984) - IMAD.MOV R24, RZ, RZ, -R27 ;
 Instr 2125 @ 0x84d0 (34000) - IMAD R25, R24, c[0x0][0x2b0], R25 ;
 Instr 2126 @ 0x84e0 (34016) - IMAD R6, R25, c[0x0][0x334], R6 ;
 Instr 2127 @ 0x84f0 (34032) - @!P1 BRA 0x8650 ;
Basic block id 252 - num instructions 8
 Instr 2128 @ 0x8500 (34048) - MOV R26, RZ ;
 Instr 2129 @ 0x8510 (34064) - ISETP.NE.AND P1, PT, R10, 0x17, PT ;
 Instr 2130 @ 0x8520 (34080) - IMAD.HI.U32 R24, R27, c[0x0][0x2c0], R26 ;
 Instr 2131 @ 0x8530 (34096) - SHF.R.U32.HI R25, RZ, c[0x0][0x2c4], R24 ;
 Instr 2132 @ 0x8540 (34112) - IMAD.MOV R26, RZ, RZ, -R25 ;
 Instr 2133 @ 0x8550 (34128) - IMAD R27, R26, c[0x0][0x2bc], R27 ;
 Instr 2134 @ 0x8560 (34144) - IMAD R6, R27, c[0x0][0x338], R6 ;
 Instr 2135 @ 0x8570 (34160) - @!P1 BRA 0x8650 ;
Basic block id 253 - num instructions 13
 Instr 2136 @ 0x8580 (34176) - ISETP.NE.AND P1, PT, R10, 0x18, PT ;
 Instr 2137 @ 0x8590 (34192) - MOV R24, RZ ;
 Instr 2138 @ 0x85a0 (34208) - IMAD.HI.U32 R26, R25, c[0x0][0x2cc], R24 ;
 Instr 2139 @ 0x85b0 (34224) - SHF.R.U32.HI R27, RZ, c[0x0][0x2d0], R26 ;
 Instr 2140 @ 0x85c0 (34240) - @P1 IMAD.MOV.U32 R26, RZ, RZ, RZ ;
 Instr 2141 @ 0x85d0 (34256) - IADD3 R24, -R27.reuse, RZ, RZ ;
 Instr 2142 @ 0x85e0 (34272) - @P1 IMAD.HI.U32 R10, R27, c[0x0][0x2d8], R26 ;
 Instr 2143 @ 0x85f0 (34288) - IMAD R25, R24, c[0x0][0x2c8], R25 ;
 Instr 2144 @ 0x8600 (34304) - @P1 SHF.R.U32.HI R10, RZ, c[0x0][0x2dc], R10 ;
 Instr 2145 @ 0x8610 (34320) - IMAD R6, R25, c[0x0][0x33c], R6 ;
 Instr 2146 @ 0x8620 (34336) - @P1 IMAD.MOV R26, RZ, RZ, -R10 ;
 Instr 2147 @ 0x8630 (34352) - @P1 IMAD R27, R26, c[0x0][0x2d4], R27 ;
 Instr 2148 @ 0x8640 (34368) - @P1 IMAD R6, R27, c[0x0][0x340], R6 ;
Basic block id 254 - num instructions 4
 Instr 2149 @ 0x8650 (34384) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
 Instr 2150 @ 0x8660 (34400) - IADD3 R24, P1, R4, R25, RZ ;
 Instr 2151 @ 0x8670 (34416) - IADD3.X R25, RZ, R5, RZ, P1, !PT ;
 Instr 2152 @ 0x8680 (34432) - LDG.E.64.SYS R24, [R24] ;
Basic block id 255 - num instructions 4
 Instr 2153 @ 0x8690 (34448) - BSYNC B1 ;
 Instr 2154 @ 0x86a0 (34464) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2155 @ 0x86b0 (34480) - BSSY B1, 0x8880 ;
 Instr 2156 @ 0x86c0 (34496) - @P0 BRA 0x8870 ;
Basic block id 256 - num instructions 6
 Instr 2157 @ 0x86d0 (34512) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
 Instr 2158 @ 0x86e0 (34528) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2159 @ 0x86f0 (34544) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2160 @ 0x8700 (34560) - DSETP.GT.OR P0, PT, R16, R18, P0 ;
 Instr 2161 @ 0x8710 (34576) - FSEL R16, R16, R18, P0 ;
 Instr 2162 @ 0x8720 (34592) - FSEL R17, R17, R19, P0 ;
Basic block id 257 - num instructions 1
 Instr 2163 @ 0x8730 (34608) - @P1 BRA 0x8870 ;
Basic block id 258 - num instructions 7
 Instr 2164 @ 0x8740 (34624) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2165 @ 0x8750 (34640) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2166 @ 0x8760 (34656) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2167 @ 0x8770 (34672) - DSETP.GT.OR P0, PT, R14, R20, P0 ;
 Instr 2168 @ 0x8780 (34688) - FSEL R14, R14, R20, P0 ;
 Instr 2169 @ 0x8790 (34704) - FSEL R15, R15, R21, P0 ;
 Instr 2170 @ 0x87a0 (34720) - @P1 BRA 0x8870 ;
Basic block id 259 - num instructions 12
 Instr 2171 @ 0x87b0 (34736) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2172 @ 0x87c0 (34752) - DSETP.GTU.AND P0, PT, |R12|, +INF , PT ;
 Instr 2173 @ 0x87d0 (34768) - ISETP.GE.U32.AND P2, PT, R4, c[0x0][0x174], PT ;
 Instr 2174 @ 0x87e0 (34784) - DSETP.GT.OR P0, PT, R12, R22, P0 ;
 Instr 2175 @ 0x87f0 (34800) - @!P2 DSETP.GTU.AND P1, PT, |R8|, +INF , PT ;
 Instr 2176 @ 0x8800 (34816) - FSEL R12, R12, R22, P0 ;
 Instr 2177 @ 0x8810 (34832) - FSEL R13, R13, R23, P0 ;
 Instr 2178 @ 0x8820 (34848) - @!P2 DSETP.GT.OR P1, PT, R8, R24, P1 ;
 Instr 2179 @ 0x8830 (34864) - @!P2 FSEL R4, R8, R24, P1 ;
 Instr 2180 @ 0x8840 (34880) - @!P2 FSEL R25, R9, R25, P1 ;
 Instr 2181 @ 0x8850 (34896) - @!P2 IMAD.MOV.U32 R8, RZ, RZ, R4 ;
 Instr 2182 @ 0x8860 (34912) - @!P2 MOV R9, R25 ;
Basic block id 260 - num instructions 14
 Instr 2183 @ 0x8870 (34928) - BSYNC B1 ;
 Instr 2184 @ 0x8880 (34944) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2185 @ 0x8890 (34960) - DSETP.GT.OR P0, PT, R16, R14, P0 ;
 Instr 2186 @ 0x88a0 (34976) - FSEL R4, R16, R14, P0 ;
 Instr 2187 @ 0x88b0 (34992) - FSEL R5, R17, R15, P0 ;
 Instr 2188 @ 0x88c0 (35008) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2189 @ 0x88d0 (35024) - DSETP.GT.OR P0, PT, R4, R12, P0 ;
 Instr 2190 @ 0x88e0 (35040) - FSEL R4, R4, R12, P0 ;
 Instr 2191 @ 0x88f0 (35056) - FSEL R5, R5, R13, P0 ;
 Instr 2192 @ 0x8900 (35072) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2193 @ 0x8910 (35088) - DSETP.GT.OR P0, PT, R4, R8, P0 ;
 Instr 2194 @ 0x8920 (35104) - FSEL R16, R4, R8, P0 ;
 Instr 2195 @ 0x8930 (35120) - FSEL R17, R5, R9, P0 ;
 Instr 2196 @ 0x8940 (35136) - BRA 0x98b0 ;
Basic block id 261 - num instructions 10
 Instr 2197 @ 0x8950 (35152) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
 Instr 2198 @ 0x8960 (35168) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2199 @ 0x8970 (35184) - BSSY B1, 0x8d00 ;
 Instr 2200 @ 0x8980 (35200) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2201 @ 0x8990 (35216) - MOV R13, c[0x0][0x16c] ;
 Instr 2202 @ 0x89a0 (35232) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 2203 @ 0x89b0 (35248) - MOV R17, c[0x0][0x16c] ;
 Instr 2204 @ 0x89c0 (35264) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 2205 @ 0x89d0 (35280) - MOV R15, c[0x0][0x16c] ;
 Instr 2206 @ 0x89e0 (35296) - @P0 BRA 0x8cf0 ;
Basic block id 262 - num instructions 7
 Instr 2207 @ 0x89f0 (35312) - BMOV.32.CLEAR RZ, B2 ;
 Instr 2208 @ 0x8a00 (35328) - BSSY B2, 0x8cb0 ;
 Instr 2209 @ 0x8a10 (35344) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2210 @ 0x8a20 (35360) - MOV R13, c[0x0][0x16c] ;
 Instr 2211 @ 0x8a30 (35376) - IMAD.MOV.U32 R16, RZ, RZ, c[0x0][0x168] ;
 Instr 2212 @ 0x8a40 (35392) - MOV R17, c[0x0][0x16c] ;
 Instr 2213 @ 0x8a50 (35408) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
Basic block id 263 - num instructions 1
 Instr 2214 @ 0x8a60 (35424) - MOV R15, c[0x0][0x16c] ;
Basic block id 264 - num instructions 35
 Instr 2215 @ 0x8a70 (35440) - IADD3 R21, R11, c[0x0][0x17c], RZ ;
 Instr 2216 @ 0x8a80 (35456) - IMAD R19, R6, R11, RZ ;
 Instr 2217 @ 0x8a90 (35472) - IADD3 R11, R21, c[0x0][0x17c], RZ ;
 Instr 2218 @ 0x8aa0 (35488) - IMAD R21, R6, R21, RZ ;
 Instr 2219 @ 0x8ab0 (35504) - IMAD.WIDE.U32 R18, R19, 0x8, R4 ;
 Instr 2220 @ 0x8ac0 (35520) - IMAD R23, R6.reuse, R11, RZ ;
 Instr 2221 @ 0x8ad0 (35536) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 2222 @ 0x8ae0 (35552) - IMAD.WIDE.U32 R20, R21, 0x8, R4.reuse ;
 Instr 2223 @ 0x8af0 (35568) - LDG.E.64.SYS R18, [R18] ;
 Instr 2224 @ 0x8b00 (35584) - IMAD R25, R6, R11, RZ ;
 Instr 2225 @ 0x8b10 (35600) - IMAD.WIDE.U32 R22, R23, 0x8, R4.reuse ;
 Instr 2226 @ 0x8b20 (35616) - LDG.E.64.SYS R20, [R20] ;
 Instr 2227 @ 0x8b30 (35632) - IMAD.WIDE.U32 R24, R25, 0x8, R4 ;
 Instr 2228 @ 0x8b40 (35648) - LDG.E.64.SYS R22, [R22] ;
 Instr 2229 @ 0x8b50 (35664) - LDG.E.64.SYS R24, [R24] ;
 Instr 2230 @ 0x8b60 (35680) - IADD3 R11, R11, c[0x0][0x17c], RZ ;
 Instr 2231 @ 0x8b70 (35696) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2232 @ 0x8b80 (35712) - IMAD R10, R26, 0x3, R11 ;
 Instr 2233 @ 0x8b90 (35728) - DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 2234 @ 0x8ba0 (35744) - DSETP.GTU.AND P2, PT, |R12|, +INF , PT ;
 Instr 2235 @ 0x8bb0 (35760) - ISETP.GE.U32.AND P4, PT, R10, c[0x0][0x174], PT ;
 Instr 2236 @ 0x8bc0 (35776) - DSETP.GTU.AND P3, PT, |R8|, +INF , PT ;
 Instr 2237 @ 0x8bd0 (35792) - DSETP.GT.OR P0, PT, R14, R18, P0 ;
 Instr 2238 @ 0x8be0 (35808) - DSETP.GT.OR P1, PT, R16, R20, P1 ;
 Instr 2239 @ 0x8bf0 (35824) - DSETP.GT.OR P2, PT, R12, R22, P2 ;
 Instr 2240 @ 0x8c00 (35840) - DSETP.GT.OR P3, PT, R8, R24, P3 ;
 Instr 2241 @ 0x8c10 (35856) - FSEL R14, R14, R18, P0 ;
 Instr 2242 @ 0x8c20 (35872) - FSEL R15, R15, R19, P0 ;
 Instr 2243 @ 0x8c30 (35888) - FSEL R16, R16, R20, P1 ;
 Instr 2244 @ 0x8c40 (35904) - FSEL R17, R17, R21, P1 ;
 Instr 2245 @ 0x8c50 (35920) - FSEL R12, R12, R22, P2 ;
 Instr 2246 @ 0x8c60 (35936) - FSEL R13, R13, R23, P2 ;
 Instr 2247 @ 0x8c70 (35952) - FSEL R8, R8, R24, P3 ;
 Instr 2248 @ 0x8c80 (35968) - FSEL R9, R9, R25, P3 ;
 Instr 2249 @ 0x8c90 (35984) - @!P4 BRA 0x8a70 ;
Basic block id 265 - num instructions 5
 Instr 2250 @ 0x8ca0 (36000) - BSYNC B2 ;
 Instr 2251 @ 0x8cb0 (36016) - IMAD.MOV.U32 R26, RZ, RZ, R18 ;
 Instr 2252 @ 0x8cc0 (36032) - MOV R27, R19 ;
 Instr 2253 @ 0x8cd0 (36048) - IMAD.MOV.U32 R18, RZ, RZ, R24 ;
 Instr 2254 @ 0x8ce0 (36064) - MOV R19, R25 ;
Basic block id 266 - num instructions 5
 Instr 2255 @ 0x8cf0 (36080) - BSYNC B1 ;
 Instr 2256 @ 0x8d00 (36096) - ISETP.GE.U32.AND P1, PT, R11, c[0x0][0x174], PT ;
 Instr 2257 @ 0x8d10 (36112) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2258 @ 0x8d20 (36128) - BSSY B1, 0x8e90 ;
 Instr 2259 @ 0x8d30 (36144) - @P1 BRA 0x8e80 ;
Basic block id 267 - num instructions 6
 Instr 2260 @ 0x8d40 (36160) - IMAD R27, R6, R11, RZ ;
 Instr 2261 @ 0x8d50 (36176) - IMAD.WIDE.U32 R26, R27, 0x8, R4 ;
 Instr 2262 @ 0x8d60 (36192) - LDG.E.64.SYS R26, [R26] ;
 Instr 2263 @ 0x8d70 (36208) - IADD3 R25, R11, c[0x0][0x17c], RZ ;
 Instr 2264 @ 0x8d80 (36224) - ISETP.GE.U32.AND P0, PT, R25, c[0x0][0x174], PT ;
 Instr 2265 @ 0x8d90 (36240) - @P0 BRA 0x8e80 ;
Basic block id 268 - num instructions 6
 Instr 2266 @ 0x8da0 (36256) - IMAD R21, R6, R25, RZ ;
 Instr 2267 @ 0x8db0 (36272) - IMAD.WIDE.U32 R20, R21, 0x8, R4 ;
 Instr 2268 @ 0x8dc0 (36288) - LDG.E.64.SYS R20, [R20] ;
 Instr 2269 @ 0x8dd0 (36304) - IADD3 R25, R25, c[0x0][0x17c], RZ ;
 Instr 2270 @ 0x8de0 (36320) - ISETP.GE.U32.AND P0, PT, R25, c[0x0][0x174], PT ;
 Instr 2271 @ 0x8df0 (36336) - @P0 BRA 0x8e80 ;
Basic block id 269 - num instructions 8
 Instr 2272 @ 0x8e00 (36352) - IADD3 R29, R25, c[0x0][0x17c], RZ ;
 Instr 2273 @ 0x8e10 (36368) - IMAD R23, R6, R25, RZ ;
 Instr 2274 @ 0x8e20 (36384) - ISETP.GE.U32.AND P0, PT, R29, c[0x0][0x174], PT ;
 Instr 2275 @ 0x8e30 (36400) - IMAD.WIDE.U32 R22, R23, 0x8, R4 ;
 Instr 2276 @ 0x8e40 (36416) - LDG.E.64.SYS R22, [R22] ;
 Instr 2277 @ 0x8e50 (36432) - @!P0 IMAD R25, R6, R29, RZ ;
 Instr 2278 @ 0x8e60 (36448) - @!P0 IMAD.WIDE.U32 R4, R25, 0x8, R4 ;
 Instr 2279 @ 0x8e70 (36464) - @!P0 LDG.E.64.SYS R18, [R4] ;
Basic block id 270 - num instructions 4
 Instr 2280 @ 0x8e80 (36480) - BSYNC B1 ;
 Instr 2281 @ 0x8e90 (36496) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2282 @ 0x8ea0 (36512) - BSSY B1, 0x9070 ;
 Instr 2283 @ 0x8eb0 (36528) - @P1 BRA 0x9060 ;
Basic block id 271 - num instructions 6
 Instr 2284 @ 0x8ec0 (36544) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
 Instr 2285 @ 0x8ed0 (36560) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2286 @ 0x8ee0 (36576) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2287 @ 0x8ef0 (36592) - DSETP.GT.OR P0, PT, R14, R26, P0 ;
 Instr 2288 @ 0x8f00 (36608) - FSEL R14, R14, R26, P0 ;
 Instr 2289 @ 0x8f10 (36624) - FSEL R15, R15, R27, P0 ;
Basic block id 272 - num instructions 1
 Instr 2290 @ 0x8f20 (36640) - @P1 BRA 0x9060 ;
Basic block id 273 - num instructions 7
 Instr 2291 @ 0x8f30 (36656) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2292 @ 0x8f40 (36672) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2293 @ 0x8f50 (36688) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2294 @ 0x8f60 (36704) - DSETP.GT.OR P0, PT, R16, R20, P0 ;
 Instr 2295 @ 0x8f70 (36720) - FSEL R16, R16, R20, P0 ;
 Instr 2296 @ 0x8f80 (36736) - FSEL R17, R17, R21, P0 ;
 Instr 2297 @ 0x8f90 (36752) - @P1 BRA 0x9060 ;
Basic block id 274 - num instructions 12
 Instr 2298 @ 0x8fa0 (36768) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2299 @ 0x8fb0 (36784) - DSETP.GTU.AND P0, PT, |R12|, +INF , PT ;
 Instr 2300 @ 0x8fc0 (36800) - ISETP.GE.U32.AND P2, PT, R4, c[0x0][0x174], PT ;
 Instr 2301 @ 0x8fd0 (36816) - DSETP.GT.OR P0, PT, R12, R22, P0 ;
 Instr 2302 @ 0x8fe0 (36832) - @!P2 DSETP.GTU.AND P1, PT, |R8|, +INF , PT ;
 Instr 2303 @ 0x8ff0 (36848) - FSEL R12, R12, R22, P0 ;
 Instr 2304 @ 0x9000 (36864) - FSEL R13, R13, R23, P0 ;
 Instr 2305 @ 0x9010 (36880) - @!P2 DSETP.GT.OR P1, PT, R8, R18, P1 ;
 Instr 2306 @ 0x9020 (36896) - @!P2 FSEL R4, R8, R18, P1 ;
 Instr 2307 @ 0x9030 (36912) - @!P2 FSEL R19, R9, R19, P1 ;
 Instr 2308 @ 0x9040 (36928) - @!P2 IMAD.MOV.U32 R8, RZ, RZ, R4 ;
 Instr 2309 @ 0x9050 (36944) - @!P2 MOV R9, R19 ;
Basic block id 275 - num instructions 14
 Instr 2310 @ 0x9060 (36960) - BSYNC B1 ;
 Instr 2311 @ 0x9070 (36976) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2312 @ 0x9080 (36992) - DSETP.GT.OR P0, PT, R14, R16, P0 ;
 Instr 2313 @ 0x9090 (37008) - FSEL R4, R14, R16, P0 ;
 Instr 2314 @ 0x90a0 (37024) - FSEL R5, R15, R17, P0 ;
 Instr 2315 @ 0x90b0 (37040) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2316 @ 0x90c0 (37056) - DSETP.GT.OR P0, PT, R4, R12, P0 ;
 Instr 2317 @ 0x90d0 (37072) - FSEL R4, R4, R12, P0 ;
 Instr 2318 @ 0x90e0 (37088) - FSEL R5, R5, R13, P0 ;
 Instr 2319 @ 0x90f0 (37104) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2320 @ 0x9100 (37120) - DSETP.GT.OR P0, PT, R4, R8, P0 ;
 Instr 2321 @ 0x9110 (37136) - FSEL R16, R4, R8, P0 ;
 Instr 2322 @ 0x9120 (37152) - FSEL R17, R5, R9, P0 ;
 Instr 2323 @ 0x9130 (37168) - BRA 0x98b0 ;
Basic block id 276 - num instructions 15
 Instr 2324 @ 0x9140 (37184) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x17c] ;
 Instr 2325 @ 0x9150 (37200) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2326 @ 0x9160 (37216) - BSSY B1, 0x94c0 ;
 Instr 2327 @ 0x9170 (37232) - MOV R25, R12 ;
 Instr 2328 @ 0x9180 (37248) - IMAD R6, R24, 0x3, R12 ;
 Instr 2329 @ 0x9190 (37264) - MOV R9, c[0x0][0x16c] ;
 Instr 2330 @ 0x91a0 (37280) - IMAD.MOV.U32 R8, RZ, RZ, c[0x0][0x168] ;
 Instr 2331 @ 0x91b0 (37296) - MOV R11, c[0x0][0x16c] ;
 Instr 2332 @ 0x91c0 (37312) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x168] ;
 Instr 2333 @ 0x91d0 (37328) - ISETP.GE.U32.AND P0, PT, R6, c[0x0][0x174], PT ;
 Instr 2334 @ 0x91e0 (37344) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2335 @ 0x91f0 (37360) - MOV R13, c[0x0][0x16c] ;
 Instr 2336 @ 0x9200 (37376) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 2337 @ 0x9210 (37392) - MOV R15, c[0x0][0x16c] ;
 Instr 2338 @ 0x9220 (37408) - @P0 BRA 0x94b0 ;
Basic block id 277 - num instructions 8
 Instr 2339 @ 0x9230 (37424) - BMOV.32.CLEAR RZ, B2 ;
 Instr 2340 @ 0x9240 (37440) - BSSY B2, 0x94b0 ;
 Instr 2341 @ 0x9250 (37456) - IMAD.MOV.U32 R10, RZ, RZ, c[0x0][0x168] ;
 Instr 2342 @ 0x9260 (37472) - MOV R11, c[0x0][0x16c] ;
 Instr 2343 @ 0x9270 (37488) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x168] ;
 Instr 2344 @ 0x9280 (37504) - MOV R13, c[0x0][0x16c] ;
 Instr 2345 @ 0x9290 (37520) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x168] ;
 Instr 2346 @ 0x92a0 (37536) - MOV R15, c[0x0][0x16c] ;
Basic block id 278 - num instructions 31
 Instr 2347 @ 0x92b0 (37552) - IADD3 R19, R25.reuse, c[0x0][0x17c], RZ ;
 Instr 2348 @ 0x92c0 (37568) - IMAD.WIDE.U32 R16, R25, 0x8, R4 ;
 Instr 2349 @ 0x92d0 (37584) - IADD3 R21, R19.reuse, c[0x0][0x17c], RZ ;
 Instr 2350 @ 0x92e0 (37600) - IMAD.WIDE.U32 R18, R19, 0x8, R4 ;
 Instr 2351 @ 0x92f0 (37616) - IADD3 R25, R21.reuse, c[0x0][0x17c], RZ ;
 Instr 2352 @ 0x9300 (37632) - IMAD.WIDE.U32 R20, R21, 0x8, R4.reuse ;
 Instr 2353 @ 0x9310 (37648) - LDG.E.64.SYS R16, [R16] ;
 Instr 2354 @ 0x9320 (37664) - IMAD.WIDE.U32 R22, R25.reuse, 0x8, R4 ;
 Instr 2355 @ 0x9330 (37680) - LDG.E.64.SYS R18, [R18] ;
 Instr 2356 @ 0x9340 (37696) - LDG.E.64.SYS R20, [R20] ;
 Instr 2357 @ 0x9350 (37712) - LDG.E.64.SYS R22, [R22] ;
 Instr 2358 @ 0x9360 (37728) - IADD3 R25, R25, c[0x0][0x17c], RZ ;
 Instr 2359 @ 0x9370 (37744) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2360 @ 0x9380 (37760) - IMAD R6, R24, 0x3, R25 ;
 Instr 2361 @ 0x9390 (37776) - DSETP.GTU.AND P1, PT, |R12|, +INF , PT ;
 Instr 2362 @ 0x93a0 (37792) - DSETP.GTU.AND P2, PT, |R10|, +INF , PT ;
 Instr 2363 @ 0x93b0 (37808) - ISETP.GE.U32.AND P4, PT, R6, c[0x0][0x174], PT ;
 Instr 2364 @ 0x93c0 (37824) - DSETP.GTU.AND P3, PT, |R8|, +INF , PT ;
 Instr 2365 @ 0x93d0 (37840) - DSETP.GT.OR P0, PT, R14, R16, P0 ;
 Instr 2366 @ 0x93e0 (37856) - DSETP.GT.OR P1, PT, R12, R18, P1 ;
 Instr 2367 @ 0x93f0 (37872) - DSETP.GT.OR P2, PT, R10, R20, P2 ;
 Instr 2368 @ 0x9400 (37888) - FSEL R14, R14, R16, P0 ;
 Instr 2369 @ 0x9410 (37904) - FSEL R15, R15, R17, P0 ;
 Instr 2370 @ 0x9420 (37920) - DSETP.GT.OR P3, PT, R8, R22, P3 ;
 Instr 2371 @ 0x9430 (37936) - FSEL R12, R12, R18, P1 ;
 Instr 2372 @ 0x9440 (37952) - FSEL R13, R13, R19, P1 ;
 Instr 2373 @ 0x9450 (37968) - FSEL R10, R10, R20, P2 ;
 Instr 2374 @ 0x9460 (37984) - FSEL R11, R11, R21, P2 ;
 Instr 2375 @ 0x9470 (38000) - FSEL R8, R8, R22, P3 ;
 Instr 2376 @ 0x9480 (38016) - FSEL R9, R9, R23, P3 ;
 Instr 2377 @ 0x9490 (38032) - @!P4 BRA 0x92b0 ;
Basic block id 279 - num instructions 1
 Instr 2378 @ 0x94a0 (38048) - BSYNC B2 ;
Basic block id 280 - num instructions 5
 Instr 2379 @ 0x94b0 (38064) - BSYNC B1 ;
 Instr 2380 @ 0x94c0 (38080) - ISETP.GE.U32.AND P1, PT, R25, c[0x0][0x174], PT ;
 Instr 2381 @ 0x94d0 (38096) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2382 @ 0x94e0 (38112) - BSSY B1, 0x9610 ;
 Instr 2383 @ 0x94f0 (38128) - @P1 BRA 0x9600 ;
Basic block id 281 - num instructions 5
 Instr 2384 @ 0x9500 (38144) - IMAD.WIDE.U32 R16, R25, 0x8, R4 ;
 Instr 2385 @ 0x9510 (38160) - LDG.E.64.SYS R16, [R16] ;
 Instr 2386 @ 0x9520 (38176) - IADD3 R27, R25, c[0x0][0x17c], RZ ;
 Instr 2387 @ 0x9530 (38192) - ISETP.GE.U32.AND P0, PT, R27, c[0x0][0x174], PT ;
 Instr 2388 @ 0x9540 (38208) - @P0 BRA 0x9600 ;
Basic block id 282 - num instructions 5
 Instr 2389 @ 0x9550 (38224) - IMAD.WIDE.U32 R18, R27, 0x8, R4 ;
 Instr 2390 @ 0x9560 (38240) - LDG.E.64.SYS R18, [R18] ;
 Instr 2391 @ 0x9570 (38256) - IADD3 R27, R27, c[0x0][0x17c], RZ ;
 Instr 2392 @ 0x9580 (38272) - ISETP.GE.U32.AND P0, PT, R27, c[0x0][0x174], PT ;
 Instr 2393 @ 0x9590 (38288) - @P0 BRA 0x9600 ;
Basic block id 283 - num instructions 6
 Instr 2394 @ 0x95a0 (38304) - IADD3 R29, R27.reuse, c[0x0][0x17c], RZ ;
 Instr 2395 @ 0x95b0 (38320) - IMAD.WIDE.U32 R20, R27, 0x8, R4 ;
 Instr 2396 @ 0x95c0 (38336) - ISETP.GE.U32.AND P0, PT, R29, c[0x0][0x174], PT ;
 Instr 2397 @ 0x95d0 (38352) - LDG.E.64.SYS R20, [R20] ;
 Instr 2398 @ 0x95e0 (38368) - @!P0 IMAD.WIDE.U32 R4, R29, 0x8, R4 ;
 Instr 2399 @ 0x95f0 (38384) - @!P0 LDG.E.64.SYS R22, [R4] ;
Basic block id 284 - num instructions 4
 Instr 2400 @ 0x9600 (38400) - BSYNC B1 ;
 Instr 2401 @ 0x9610 (38416) - BMOV.32.CLEAR RZ, B1 ;
 Instr 2402 @ 0x9620 (38432) - BSSY B1, 0x97f0 ;
 Instr 2403 @ 0x9630 (38448) - @P1 BRA 0x97e0 ;
Basic block id 285 - num instructions 6
 Instr 2404 @ 0x9640 (38464) - IADD3 R4, R25, c[0x0][0x17c], RZ ;
 Instr 2405 @ 0x9650 (38480) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2406 @ 0x9660 (38496) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2407 @ 0x9670 (38512) - DSETP.GT.OR P0, PT, R14, R16, P0 ;
 Instr 2408 @ 0x9680 (38528) - FSEL R14, R14, R16, P0 ;
 Instr 2409 @ 0x9690 (38544) - FSEL R15, R15, R17, P0 ;
Basic block id 286 - num instructions 1
 Instr 2410 @ 0x96a0 (38560) - @P1 BRA 0x97e0 ;
Basic block id 287 - num instructions 7
 Instr 2411 @ 0x96b0 (38576) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2412 @ 0x96c0 (38592) - DSETP.GTU.AND P0, PT, |R12|, +INF , PT ;
 Instr 2413 @ 0x96d0 (38608) - ISETP.GE.U32.AND P1, PT, R4, c[0x0][0x174], PT ;
 Instr 2414 @ 0x96e0 (38624) - DSETP.GT.OR P0, PT, R12, R18, P0 ;
 Instr 2415 @ 0x96f0 (38640) - FSEL R12, R12, R18, P0 ;
 Instr 2416 @ 0x9700 (38656) - FSEL R13, R13, R19, P0 ;
 Instr 2417 @ 0x9710 (38672) - @P1 BRA 0x97e0 ;
Basic block id 288 - num instructions 12
 Instr 2418 @ 0x9720 (38688) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
 Instr 2419 @ 0x9730 (38704) - DSETP.GTU.AND P0, PT, |R10|, +INF , PT ;
 Instr 2420 @ 0x9740 (38720) - ISETP.GE.U32.AND P2, PT, R4, c[0x0][0x174], PT ;
 Instr 2421 @ 0x9750 (38736) - DSETP.GT.OR P0, PT, R10, R20, P0 ;
 Instr 2422 @ 0x9760 (38752) - @!P2 DSETP.GTU.AND P1, PT, |R8|, +INF , PT ;
 Instr 2423 @ 0x9770 (38768) - FSEL R10, R10, R20, P0 ;
 Instr 2424 @ 0x9780 (38784) - FSEL R11, R11, R21, P0 ;
 Instr 2425 @ 0x9790 (38800) - @!P2 DSETP.GT.OR P1, PT, R8, R22, P1 ;
 Instr 2426 @ 0x97a0 (38816) - @!P2 FSEL R4, R8, R22, P1 ;
 Instr 2427 @ 0x97b0 (38832) - @!P2 FSEL R23, R9, R23, P1 ;
 Instr 2428 @ 0x97c0 (38848) - @!P2 IMAD.MOV.U32 R8, RZ, RZ, R4 ;
 Instr 2429 @ 0x97d0 (38864) - @!P2 MOV R9, R23 ;
Basic block id 289 - num instructions 13
 Instr 2430 @ 0x97e0 (38880) - BSYNC B1 ;
 Instr 2431 @ 0x97f0 (38896) - DSETP.GTU.AND P0, PT, |R14|, +INF , PT ;
 Instr 2432 @ 0x9800 (38912) - DSETP.GT.OR P0, PT, R14, R12, P0 ;
 Instr 2433 @ 0x9810 (38928) - FSEL R4, R14, R12, P0 ;
 Instr 2434 @ 0x9820 (38944) - FSEL R5, R15, R13, P0 ;
 Instr 2435 @ 0x9830 (38960) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2436 @ 0x9840 (38976) - DSETP.GT.OR P0, PT, R4, R10, P0 ;
 Instr 2437 @ 0x9850 (38992) - FSEL R4, R4, R10, P0 ;
 Instr 2438 @ 0x9860 (39008) - FSEL R5, R5, R11, P0 ;
 Instr 2439 @ 0x9870 (39024) - DSETP.GTU.AND P0, PT, |R4|, +INF , PT ;
 Instr 2440 @ 0x9880 (39040) - DSETP.GT.OR P0, PT, R4, R8, P0 ;
 Instr 2441 @ 0x9890 (39056) - FSEL R16, R4, R8, P0 ;
 Instr 2442 @ 0x98a0 (39072) - FSEL R17, R5, R9, P0 ;
Basic block id 290 - num instructions 3
 Instr 2443 @ 0x98b0 (39088) - BSYNC B0 ;
 Instr 2444 @ 0x98c0 (39104) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
 Instr 2445 @ 0x98d0 (39120) - @!P0 BRA 0x9a50 ;
Basic block id 291 - num instructions 6
 Instr 2446 @ 0x98e0 (39136) - IMAD R9, R0, c[0x0][0x0], R7 ;
 Instr 2447 @ 0x98f0 (39152) - ULDC UR4, c[0x0][0x4] ;
 Instr 2448 @ 0x9900 (39168) - USHF.R.U32.HI UR4, URZ, 0x1, UR4 ;
 Instr 2449 @ 0x9910 (39184) - STS.64 [R9.X8+0x10], R16 ;
 Instr 2450 @ 0x9920 (39200) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 2451 @ 0x9930 (39216) - @!P0 BRA 0x9a50 ;
Basic block id 292 - num instructions 1
 Instr 2452 @ 0x9940 (39232) - IMAD.U32 R11, RZ, RZ, UR4 ;
Basic block id 293 - num instructions 16
 Instr 2453 @ 0x9950 (39248) - IADD3 R4, R0, R11, RZ ;
 Instr 2454 @ 0x9960 (39264) - BAR.SYNC 0x0 ;
 Instr 2455 @ 0x9970 (39280) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x4], PT ;
 Instr 2456 @ 0x9980 (39296) - ISETP.GE.U32.OR P0, PT, R0, R11, P0 ;
 Instr 2457 @ 0x9990 (39312) - @!P0 IMAD R4, R4, c[0x0][0x0], R7 ;
 Instr 2458 @ 0x99a0 (39328) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 2459 @ 0x99b0 (39344) - @!P0 LDS.U.64 R4, [R4.X8+0x10] ;
 Instr 2460 @ 0x99c0 (39360) - @!P0 DSETP.GT.OR P1, PT, R16, R4, P1 ;
 Instr 2461 @ 0x99d0 (39376) - @!P0 FSEL R6, R16, R4, P1 ;
 Instr 2462 @ 0x99e0 (39392) - @!P0 FSEL R5, R17, R5, P1 ;
 Instr 2463 @ 0x99f0 (39408) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, R6 ;
 Instr 2464 @ 0x9a00 (39424) - @!P0 MOV R17, R5 ;
 Instr 2465 @ 0x9a10 (39440) - @!P0 STS.64 [R9.X8+0x10], R16 ;
 Instr 2466 @ 0x9a20 (39456) - ISETP.GT.AND P0, PT, R11, 0x1, PT ;
 Instr 2467 @ 0x9a30 (39472) - SHF.R.S32.HI R11, RZ, 0x1, R11 ;
 Instr 2468 @ 0x9a40 (39488) - @P0 BRA 0x9950 ;
Basic block id 294 - num instructions 2
 Instr 2469 @ 0x9a50 (39504) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 2470 @ 0x9a60 (39520) - @!P0 BRA 0x9d40 ;
Basic block id 295 - num instructions 4
 Instr 2471 @ 0x9a70 (39536) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x0] ;
 Instr 2472 @ 0x9a80 (39552) - MOV R6, c[0x0][0x0] ;
 Instr 2473 @ 0x9a90 (39568) - ISETP.GT.AND P0, PT, R4, 0x20, PT ;
 Instr 2474 @ 0x9aa0 (39584) - @!P0 BRA 0x9c50 ;
Basic block id 296 - num instructions 7
 Instr 2475 @ 0x9ab0 (39600) - IMAD R9, R0, c[0x0][0x0], R7 ;
 Instr 2476 @ 0x9ac0 (39616) - LEA.HI R4, R4, c[0x0][0x0], RZ, 0x1 ;
 Instr 2477 @ 0x9ad0 (39632) - IMAD.MOV.U32 R6, RZ, RZ, 0x20 ;
 Instr 2478 @ 0x9ae0 (39648) - SHF.R.S32.HI R4, RZ, 0x1, R4 ;
 Instr 2479 @ 0x9af0 (39664) - STS.64 [R9.X8+0x10], R16 ;
 Instr 2480 @ 0x9b00 (39680) - ISETP.GE.AND P0, PT, R4, 0x20, PT ;
 Instr 2481 @ 0x9b10 (39696) - @!P0 BRA 0x9c50 ;
Basic block id 297 - num instructions 2
 Instr 2482 @ 0x9b20 (39712) - MOV R6, R4 ;
 Instr 2483 @ 0x9b30 (39728) - LEA R11, R9, 0x10, 0x3 ;
Basic block id 298 - num instructions 16
 Instr 2484 @ 0x9b40 (39744) - IMAD.IADD R4, R7, 0x1, R6 ;
 Instr 2485 @ 0x9b50 (39760) - BAR.SYNC 0x0 ;
 Instr 2486 @ 0x9b60 (39776) - ISETP.GE.U32.AND P0, PT, R4, c[0x0][0x0], PT ;
 Instr 2487 @ 0x9b70 (39792) - ISETP.GE.U32.OR P0, PT, R7, R6, P0 ;
 Instr 2488 @ 0x9b80 (39808) - @!P0 LEA R4, R6, R11, 0x3 ;
 Instr 2489 @ 0x9b90 (39824) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 2490 @ 0x9ba0 (39840) - SHF.R.S32.HI R6, RZ, 0x1, R6 ;
 Instr 2491 @ 0x9bb0 (39856) - @!P0 LDS.U.64 R4, [R4] ;
 Instr 2492 @ 0x9bc0 (39872) - @!P0 DSETP.GT.OR P1, PT, R16, R4, P1 ;
 Instr 2493 @ 0x9bd0 (39888) - @!P0 FSEL R8, R16, R4, P1 ;
 Instr 2494 @ 0x9be0 (39904) - @!P0 FSEL R5, R17, R5, P1 ;
 Instr 2495 @ 0x9bf0 (39920) - @!P0 IMAD.MOV.U32 R16, RZ, RZ, R8 ;
 Instr 2496 @ 0x9c00 (39936) - @!P0 MOV R17, R5 ;
 Instr 2497 @ 0x9c10 (39952) - @!P0 STS.64 [R9.X8+0x10], R16 ;
 Instr 2498 @ 0x9c20 (39968) - ISETP.GE.AND P0, PT, R6, 0x20, PT ;
 Instr 2499 @ 0x9c30 (39984) - @P0 BRA 0x9b40 ;
Basic block id 299 - num instructions 1
 Instr 2500 @ 0x9c40 (40000) - IMAD.MOV.U32 R6, RZ, RZ, 0x20 ;
Basic block id 300 - num instructions 3
 Instr 2501 @ 0x9c50 (40016) - BAR.SYNC 0x0 ;
 Instr 2502 @ 0x9c60 (40032) - ISETP.GE.AND P0, PT, R6, 0x2, PT ;
 Instr 2503 @ 0x9c70 (40048) - @!P0 BRA 0x9d40 ;
Basic block id 301 - num instructions 1
 Instr 2504 @ 0x9c80 (40064) - MOV R9, 0x1 ;
Basic block id 302 - num instructions 11
 Instr 2505 @ 0x9c90 (40080) - SHFL.DOWN PT, R5, R17, R9, 0x1f ;
 Instr 2506 @ 0x9ca0 (40096) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 2507 @ 0x9cb0 (40112) - SHFL.DOWN PT, R4, R16, R9, 0x1f ;
 Instr 2508 @ 0x9cc0 (40128) - IMAD.SHL.U32 R9, R9, 0x2, RZ ;
 Instr 2509 @ 0x9cd0 (40144) - ISETP.GE.AND P1, PT, R9, R6, PT ;
 Instr 2510 @ 0x9ce0 (40160) - DSETP.GT.OR P0, PT, R16, R4, P0 ;
 Instr 2511 @ 0x9cf0 (40176) - FSEL R5, R17, R5, P0 ;
 Instr 2512 @ 0x9d00 (40192) - FSEL R4, R16, R4, P0 ;
 Instr 2513 @ 0x9d10 (40208) - IMAD.MOV.U32 R17, RZ, RZ, R5 ;
 Instr 2514 @ 0x9d20 (40224) - MOV R16, R4 ;
 Instr 2515 @ 0x9d30 (40240) - @!P1 BRA 0x9c90 ;
Basic block id 303 - num instructions 3
 Instr 2516 @ 0x9d40 (40256) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x344], PT ;
 Instr 2517 @ 0x9d50 (40272) - MOV R19, RZ ;
 Instr 2518 @ 0x9d60 (40288) - @!P1 BRA 0xa9e0 ;
Basic block id 304 - num instructions 9
 Instr 2519 @ 0x9d70 (40304) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
 Instr 2520 @ 0x9d80 (40320) - MOV R6, 0x1 ;
 Instr 2521 @ 0x9d90 (40336) - IMAD.HI.U32 R4, R3, c[0x0][0x34c], R2 ;
 Instr 2522 @ 0x9da0 (40352) - ISETP.NE.AND P0, PT, R6, c[0x0][0x344], PT ;
 Instr 2523 @ 0x9db0 (40368) - SHF.R.U32.HI R5, RZ, c[0x0][0x350], R4 ;
 Instr 2524 @ 0x9dc0 (40384) - IMAD.MOV R9, RZ, RZ, -R5 ;
 Instr 2525 @ 0x9dd0 (40400) - IMAD R9, R9, c[0x0][0x348], R3 ;
 Instr 2526 @ 0x9de0 (40416) - IMAD R19, R9, c[0x0][0x474], RZ ;
 Instr 2527 @ 0x9df0 (40432) - @!P0 BRA 0xa9e0 ;
Basic block id 305 - num instructions 9
 Instr 2528 @ 0x9e00 (40448) - MOV R4, RZ ;
 Instr 2529 @ 0x9e10 (40464) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x344] ;
 Instr 2530 @ 0x9e20 (40480) - IMAD.HI.U32 R8, R5, c[0x0][0x358], R4 ;
 Instr 2531 @ 0x9e30 (40496) - ISETP.NE.AND P0, PT, R6, 0x2, PT ;
 Instr 2532 @ 0x9e40 (40512) - SHF.R.U32.HI R9, RZ, c[0x0][0x35c], R8 ;
 Instr 2533 @ 0x9e50 (40528) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2534 @ 0x9e60 (40544) - IMAD R4, R4, c[0x0][0x354], R5 ;
 Instr 2535 @ 0x9e70 (40560) - IMAD R19, R4, c[0x0][0x47c], R19 ;
 Instr 2536 @ 0x9e80 (40576) - @!P0 BRA 0xa9e0 ;
Basic block id 306 - num instructions 8
 Instr 2537 @ 0x9e90 (40592) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2538 @ 0x9ea0 (40608) - ISETP.NE.AND P0, PT, R6, 0x3, PT ;
 Instr 2539 @ 0x9eb0 (40624) - IMAD.HI.U32 R4, R9, c[0x0][0x364], R8 ;
 Instr 2540 @ 0x9ec0 (40640) - SHF.R.U32.HI R5, RZ, c[0x0][0x368], R4 ;
 Instr 2541 @ 0x9ed0 (40656) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2542 @ 0x9ee0 (40672) - IMAD R8, R8, c[0x0][0x360], R9 ;
 Instr 2543 @ 0x9ef0 (40688) - IMAD R19, R8, c[0x0][0x484], R19 ;
 Instr 2544 @ 0x9f00 (40704) - @!P0 BRA 0xa9e0 ;
Basic block id 307 - num instructions 8
 Instr 2545 @ 0x9f10 (40720) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2546 @ 0x9f20 (40736) - ISETP.NE.AND P0, PT, R6, 0x4, PT ;
 Instr 2547 @ 0x9f30 (40752) - IMAD.HI.U32 R8, R5, c[0x0][0x370], R4 ;
 Instr 2548 @ 0x9f40 (40768) - SHF.R.U32.HI R9, RZ, c[0x0][0x374], R8 ;
 Instr 2549 @ 0x9f50 (40784) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2550 @ 0x9f60 (40800) - IMAD R4, R4, c[0x0][0x36c], R5 ;
 Instr 2551 @ 0x9f70 (40816) - IMAD R19, R4, c[0x0][0x48c], R19 ;
 Instr 2552 @ 0x9f80 (40832) - @!P0 BRA 0xa9e0 ;
Basic block id 308 - num instructions 8
 Instr 2553 @ 0x9f90 (40848) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2554 @ 0x9fa0 (40864) - ISETP.NE.AND P0, PT, R6, 0x5, PT ;
 Instr 2555 @ 0x9fb0 (40880) - IMAD.HI.U32 R4, R9, c[0x0][0x37c], R8 ;
 Instr 2556 @ 0x9fc0 (40896) - SHF.R.U32.HI R5, RZ, c[0x0][0x380], R4 ;
 Instr 2557 @ 0x9fd0 (40912) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2558 @ 0x9fe0 (40928) - IMAD R8, R8, c[0x0][0x378], R9 ;
 Instr 2559 @ 0x9ff0 (40944) - IMAD R19, R8, c[0x0][0x494], R19 ;
 Instr 2560 @ 0xa000 (40960) - @!P0 BRA 0xa9e0 ;
Basic block id 309 - num instructions 8
 Instr 2561 @ 0xa010 (40976) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2562 @ 0xa020 (40992) - ISETP.NE.AND P0, PT, R6, 0x6, PT ;
 Instr 2563 @ 0xa030 (41008) - IMAD.HI.U32 R8, R5, c[0x0][0x388], R4 ;
 Instr 2564 @ 0xa040 (41024) - SHF.R.U32.HI R9, RZ, c[0x0][0x38c], R8 ;
 Instr 2565 @ 0xa050 (41040) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2566 @ 0xa060 (41056) - IMAD R4, R4, c[0x0][0x384], R5 ;
 Instr 2567 @ 0xa070 (41072) - IMAD R19, R4, c[0x0][0x49c], R19 ;
 Instr 2568 @ 0xa080 (41088) - @!P0 BRA 0xa9e0 ;
Basic block id 310 - num instructions 8
 Instr 2569 @ 0xa090 (41104) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2570 @ 0xa0a0 (41120) - ISETP.NE.AND P0, PT, R6, 0x7, PT ;
 Instr 2571 @ 0xa0b0 (41136) - IMAD.HI.U32 R4, R9, c[0x0][0x394], R8 ;
 Instr 2572 @ 0xa0c0 (41152) - SHF.R.U32.HI R5, RZ, c[0x0][0x398], R4 ;
 Instr 2573 @ 0xa0d0 (41168) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2574 @ 0xa0e0 (41184) - IMAD R8, R8, c[0x0][0x390], R9 ;
 Instr 2575 @ 0xa0f0 (41200) - IMAD R19, R8, c[0x0][0x4a4], R19 ;
 Instr 2576 @ 0xa100 (41216) - @!P0 BRA 0xa9e0 ;
Basic block id 311 - num instructions 8
 Instr 2577 @ 0xa110 (41232) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2578 @ 0xa120 (41248) - ISETP.NE.AND P0, PT, R6, 0x8, PT ;
 Instr 2579 @ 0xa130 (41264) - IMAD.HI.U32 R8, R5, c[0x0][0x3a0], R4 ;
 Instr 2580 @ 0xa140 (41280) - SHF.R.U32.HI R9, RZ, c[0x0][0x3a4], R8 ;
 Instr 2581 @ 0xa150 (41296) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2582 @ 0xa160 (41312) - IMAD R4, R4, c[0x0][0x39c], R5 ;
 Instr 2583 @ 0xa170 (41328) - IMAD R19, R4, c[0x0][0x4ac], R19 ;
 Instr 2584 @ 0xa180 (41344) - @!P0 BRA 0xa9e0 ;
Basic block id 312 - num instructions 8
 Instr 2585 @ 0xa190 (41360) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2586 @ 0xa1a0 (41376) - ISETP.NE.AND P0, PT, R6, 0x9, PT ;
 Instr 2587 @ 0xa1b0 (41392) - IMAD.HI.U32 R4, R9, c[0x0][0x3ac], R8 ;
 Instr 2588 @ 0xa1c0 (41408) - SHF.R.U32.HI R5, RZ, c[0x0][0x3b0], R4 ;
 Instr 2589 @ 0xa1d0 (41424) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2590 @ 0xa1e0 (41440) - IMAD R8, R8, c[0x0][0x3a8], R9 ;
 Instr 2591 @ 0xa1f0 (41456) - IMAD R19, R8, c[0x0][0x4b4], R19 ;
 Instr 2592 @ 0xa200 (41472) - @!P0 BRA 0xa9e0 ;
Basic block id 313 - num instructions 8
 Instr 2593 @ 0xa210 (41488) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2594 @ 0xa220 (41504) - ISETP.NE.AND P0, PT, R6, 0xa, PT ;
 Instr 2595 @ 0xa230 (41520) - IMAD.HI.U32 R8, R5, c[0x0][0x3b8], R4 ;
 Instr 2596 @ 0xa240 (41536) - SHF.R.U32.HI R9, RZ, c[0x0][0x3bc], R8 ;
 Instr 2597 @ 0xa250 (41552) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2598 @ 0xa260 (41568) - IMAD R4, R4, c[0x0][0x3b4], R5 ;
 Instr 2599 @ 0xa270 (41584) - IMAD R19, R4, c[0x0][0x4bc], R19 ;
 Instr 2600 @ 0xa280 (41600) - @!P0 BRA 0xa9e0 ;
Basic block id 314 - num instructions 8
 Instr 2601 @ 0xa290 (41616) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2602 @ 0xa2a0 (41632) - ISETP.NE.AND P0, PT, R6, 0xb, PT ;
 Instr 2603 @ 0xa2b0 (41648) - IMAD.HI.U32 R4, R9, c[0x0][0x3c4], R8 ;
 Instr 2604 @ 0xa2c0 (41664) - SHF.R.U32.HI R5, RZ, c[0x0][0x3c8], R4 ;
 Instr 2605 @ 0xa2d0 (41680) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2606 @ 0xa2e0 (41696) - IMAD R8, R8, c[0x0][0x3c0], R9 ;
 Instr 2607 @ 0xa2f0 (41712) - IMAD R19, R8, c[0x0][0x4c4], R19 ;
 Instr 2608 @ 0xa300 (41728) - @!P0 BRA 0xa9e0 ;
Basic block id 315 - num instructions 8
 Instr 2609 @ 0xa310 (41744) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2610 @ 0xa320 (41760) - ISETP.NE.AND P0, PT, R6, 0xc, PT ;
 Instr 2611 @ 0xa330 (41776) - IMAD.HI.U32 R8, R5, c[0x0][0x3d0], R4 ;
 Instr 2612 @ 0xa340 (41792) - SHF.R.U32.HI R9, RZ, c[0x0][0x3d4], R8 ;
 Instr 2613 @ 0xa350 (41808) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2614 @ 0xa360 (41824) - IMAD R4, R4, c[0x0][0x3cc], R5 ;
 Instr 2615 @ 0xa370 (41840) - IMAD R19, R4, c[0x0][0x4cc], R19 ;
 Instr 2616 @ 0xa380 (41856) - @!P0 BRA 0xa9e0 ;
Basic block id 316 - num instructions 8
 Instr 2617 @ 0xa390 (41872) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2618 @ 0xa3a0 (41888) - ISETP.NE.AND P0, PT, R6, 0xd, PT ;
 Instr 2619 @ 0xa3b0 (41904) - IMAD.HI.U32 R4, R9, c[0x0][0x3dc], R8 ;
 Instr 2620 @ 0xa3c0 (41920) - SHF.R.U32.HI R5, RZ, c[0x0][0x3e0], R4 ;
 Instr 2621 @ 0xa3d0 (41936) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2622 @ 0xa3e0 (41952) - IMAD R8, R8, c[0x0][0x3d8], R9 ;
 Instr 2623 @ 0xa3f0 (41968) - IMAD R19, R8, c[0x0][0x4d4], R19 ;
 Instr 2624 @ 0xa400 (41984) - @!P0 BRA 0xa9e0 ;
Basic block id 317 - num instructions 8
 Instr 2625 @ 0xa410 (42000) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2626 @ 0xa420 (42016) - ISETP.NE.AND P0, PT, R6, 0xe, PT ;
 Instr 2627 @ 0xa430 (42032) - IMAD.HI.U32 R8, R5, c[0x0][0x3e8], R4 ;
 Instr 2628 @ 0xa440 (42048) - SHF.R.U32.HI R9, RZ, c[0x0][0x3ec], R8 ;
 Instr 2629 @ 0xa450 (42064) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2630 @ 0xa460 (42080) - IMAD R4, R4, c[0x0][0x3e4], R5 ;
 Instr 2631 @ 0xa470 (42096) - IMAD R19, R4, c[0x0][0x4dc], R19 ;
 Instr 2632 @ 0xa480 (42112) - @!P0 BRA 0xa9e0 ;
Basic block id 318 - num instructions 8
 Instr 2633 @ 0xa490 (42128) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2634 @ 0xa4a0 (42144) - ISETP.NE.AND P0, PT, R6, 0xf, PT ;
 Instr 2635 @ 0xa4b0 (42160) - IMAD.HI.U32 R4, R9, c[0x0][0x3f4], R8 ;
 Instr 2636 @ 0xa4c0 (42176) - SHF.R.U32.HI R5, RZ, c[0x0][0x3f8], R4 ;
 Instr 2637 @ 0xa4d0 (42192) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2638 @ 0xa4e0 (42208) - IMAD R8, R8, c[0x0][0x3f0], R9 ;
 Instr 2639 @ 0xa4f0 (42224) - IMAD R19, R8, c[0x0][0x4e4], R19 ;
 Instr 2640 @ 0xa500 (42240) - @!P0 BRA 0xa9e0 ;
Basic block id 319 - num instructions 8
 Instr 2641 @ 0xa510 (42256) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2642 @ 0xa520 (42272) - ISETP.NE.AND P0, PT, R6, 0x10, PT ;
 Instr 2643 @ 0xa530 (42288) - IMAD.HI.U32 R8, R5, c[0x0][0x400], R4 ;
 Instr 2644 @ 0xa540 (42304) - SHF.R.U32.HI R9, RZ, c[0x0][0x404], R8 ;
 Instr 2645 @ 0xa550 (42320) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2646 @ 0xa560 (42336) - IMAD R4, R4, c[0x0][0x3fc], R5 ;
 Instr 2647 @ 0xa570 (42352) - IMAD R19, R4, c[0x0][0x4ec], R19 ;
 Instr 2648 @ 0xa580 (42368) - @!P0 BRA 0xa9e0 ;
Basic block id 320 - num instructions 8
 Instr 2649 @ 0xa590 (42384) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2650 @ 0xa5a0 (42400) - ISETP.NE.AND P0, PT, R6, 0x11, PT ;
 Instr 2651 @ 0xa5b0 (42416) - IMAD.HI.U32 R4, R9, c[0x0][0x40c], R8 ;
 Instr 2652 @ 0xa5c0 (42432) - SHF.R.U32.HI R5, RZ, c[0x0][0x410], R4 ;
 Instr 2653 @ 0xa5d0 (42448) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2654 @ 0xa5e0 (42464) - IMAD R8, R8, c[0x0][0x408], R9 ;
 Instr 2655 @ 0xa5f0 (42480) - IMAD R19, R8, c[0x0][0x4f4], R19 ;
 Instr 2656 @ 0xa600 (42496) - @!P0 BRA 0xa9e0 ;
Basic block id 321 - num instructions 8
 Instr 2657 @ 0xa610 (42512) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2658 @ 0xa620 (42528) - ISETP.NE.AND P0, PT, R6, 0x12, PT ;
 Instr 2659 @ 0xa630 (42544) - IMAD.HI.U32 R8, R5, c[0x0][0x418], R4 ;
 Instr 2660 @ 0xa640 (42560) - SHF.R.U32.HI R9, RZ, c[0x0][0x41c], R8 ;
 Instr 2661 @ 0xa650 (42576) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2662 @ 0xa660 (42592) - IMAD R4, R4, c[0x0][0x414], R5 ;
 Instr 2663 @ 0xa670 (42608) - IMAD R19, R4, c[0x0][0x4fc], R19 ;
 Instr 2664 @ 0xa680 (42624) - @!P0 BRA 0xa9e0 ;
Basic block id 322 - num instructions 8
 Instr 2665 @ 0xa690 (42640) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2666 @ 0xa6a0 (42656) - ISETP.NE.AND P0, PT, R6, 0x13, PT ;
 Instr 2667 @ 0xa6b0 (42672) - IMAD.HI.U32 R4, R9, c[0x0][0x424], R8 ;
 Instr 2668 @ 0xa6c0 (42688) - SHF.R.U32.HI R5, RZ, c[0x0][0x428], R4 ;
 Instr 2669 @ 0xa6d0 (42704) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2670 @ 0xa6e0 (42720) - IMAD R8, R8, c[0x0][0x420], R9 ;
 Instr 2671 @ 0xa6f0 (42736) - IMAD R19, R8, c[0x0][0x504], R19 ;
 Instr 2672 @ 0xa700 (42752) - @!P0 BRA 0xa9e0 ;
Basic block id 323 - num instructions 8
 Instr 2673 @ 0xa710 (42768) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2674 @ 0xa720 (42784) - ISETP.NE.AND P0, PT, R6, 0x14, PT ;
 Instr 2675 @ 0xa730 (42800) - IMAD.HI.U32 R8, R5, c[0x0][0x430], R4 ;
 Instr 2676 @ 0xa740 (42816) - SHF.R.U32.HI R9, RZ, c[0x0][0x434], R8 ;
 Instr 2677 @ 0xa750 (42832) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2678 @ 0xa760 (42848) - IMAD R4, R4, c[0x0][0x42c], R5 ;
 Instr 2679 @ 0xa770 (42864) - IMAD R19, R4, c[0x0][0x50c], R19 ;
 Instr 2680 @ 0xa780 (42880) - @!P0 BRA 0xa9e0 ;
Basic block id 324 - num instructions 8
 Instr 2681 @ 0xa790 (42896) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2682 @ 0xa7a0 (42912) - ISETP.NE.AND P0, PT, R6, 0x15, PT ;
 Instr 2683 @ 0xa7b0 (42928) - IMAD.HI.U32 R4, R9, c[0x0][0x43c], R8 ;
 Instr 2684 @ 0xa7c0 (42944) - SHF.R.U32.HI R5, RZ, c[0x0][0x440], R4 ;
 Instr 2685 @ 0xa7d0 (42960) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2686 @ 0xa7e0 (42976) - IMAD R8, R8, c[0x0][0x438], R9 ;
 Instr 2687 @ 0xa7f0 (42992) - IMAD R19, R8, c[0x0][0x514], R19 ;
 Instr 2688 @ 0xa800 (43008) - @!P0 BRA 0xa9e0 ;
Basic block id 325 - num instructions 8
 Instr 2689 @ 0xa810 (43024) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2690 @ 0xa820 (43040) - ISETP.NE.AND P0, PT, R6, 0x16, PT ;
 Instr 2691 @ 0xa830 (43056) - IMAD.HI.U32 R8, R5, c[0x0][0x448], R4 ;
 Instr 2692 @ 0xa840 (43072) - SHF.R.U32.HI R9, RZ, c[0x0][0x44c], R8 ;
 Instr 2693 @ 0xa850 (43088) - IADD3 R4, -R9, RZ, RZ ;
 Instr 2694 @ 0xa860 (43104) - IMAD R4, R4, c[0x0][0x444], R5 ;
 Instr 2695 @ 0xa870 (43120) - IMAD R19, R4, c[0x0][0x51c], R19 ;
 Instr 2696 @ 0xa880 (43136) - @!P0 BRA 0xa9e0 ;
Basic block id 326 - num instructions 8
 Instr 2697 @ 0xa890 (43152) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
 Instr 2698 @ 0xa8a0 (43168) - ISETP.NE.AND P0, PT, R6, 0x17, PT ;
 Instr 2699 @ 0xa8b0 (43184) - IMAD.HI.U32 R4, R9, c[0x0][0x454], R8 ;
 Instr 2700 @ 0xa8c0 (43200) - SHF.R.U32.HI R5, RZ, c[0x0][0x458], R4 ;
 Instr 2701 @ 0xa8d0 (43216) - IADD3 R8, -R5, RZ, RZ ;
 Instr 2702 @ 0xa8e0 (43232) - IMAD R8, R8, c[0x0][0x450], R9 ;
 Instr 2703 @ 0xa8f0 (43248) - IMAD R19, R8, c[0x0][0x524], R19 ;
 Instr 2704 @ 0xa900 (43264) - @!P0 BRA 0xa9e0 ;
Basic block id 327 - num instructions 13
 Instr 2705 @ 0xa910 (43280) - ISETP.NE.AND P0, PT, R6, 0x18, PT ;
 Instr 2706 @ 0xa920 (43296) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
 Instr 2707 @ 0xa930 (43312) - IMAD.HI.U32 R8, R5, c[0x0][0x460], R4 ;
 Instr 2708 @ 0xa940 (43328) - SHF.R.U32.HI R9, RZ, c[0x0][0x464], R8 ;
 Instr 2709 @ 0xa950 (43344) - @P0 MOV R8, RZ ;
 Instr 2710 @ 0xa960 (43360) - IMAD.MOV R4, RZ, RZ, -R9.reuse ;
 Instr 2711 @ 0xa970 (43376) - @P0 IMAD.HI.U32 R6, R9, c[0x0][0x46c], R8 ;
 Instr 2712 @ 0xa980 (43392) - IMAD R4, R4, c[0x0][0x45c], R5 ;
 Instr 2713 @ 0xa990 (43408) - @P0 SHF.R.U32.HI R6, RZ, c[0x0][0x470], R6 ;
 Instr 2714 @ 0xa9a0 (43424) - IMAD R19, R4, c[0x0][0x52c], R19 ;
 Instr 2715 @ 0xa9b0 (43440) - @P0 IADD3 R5, -R6, RZ, RZ ;
 Instr 2716 @ 0xa9c0 (43456) - @P0 IMAD R8, R5, c[0x0][0x468], R9 ;
 Instr 2717 @ 0xa9d0 (43472) - @P0 IMAD R19, R8, c[0x0][0x534], R19 ;
Basic block id 328 - num instructions 11
 Instr 2718 @ 0xa9e0 (43488) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x558], PT ;
 Instr 2719 @ 0xa9f0 (43504) - CS2R R4, SRZ ;
 Instr 2720 @ 0xaa00 (43520) - ISETP.NE.AND P4, PT, RZ, c[0x0][0x190], PT ;
 Instr 2721 @ 0xaa10 (43536) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
 Instr 2722 @ 0xaa20 (43552) - ISETP.NE.AND.EX P0, PT, RZ, c[0x0][0x55c], PT, P0 ;
 Instr 2723 @ 0xaa30 (43568) - IADD3 R8, P2, R19, c[0x0][0x548], RZ ;
 Instr 2724 @ 0xaa40 (43584) - IMAD.X R9, RZ, RZ, c[0x0][0x54c], P2 ;
 Instr 2725 @ 0xaa50 (43600) - @P0 IADD3 R4, P3, R19, c[0x0][0x558], RZ ;
 Instr 2726 @ 0xaa60 (43616) - @P0 IADD3.X R5, RZ, c[0x0][0x55c], RZ, P3, !PT ;
 Instr 2727 @ 0xaa70 (43632) - @P0 MOV R6, R5 ;
 Instr 2728 @ 0xaa80 (43648) - @!P4 BRA 0xc6c0 ;
Basic block id 329 - num instructions 6
 Instr 2729 @ 0xaa90 (43664) - S2R R2, SR_CTAID.X ;
 Instr 2730 @ 0xaaa0 (43680) - IMAD R3, R7, c[0x0][0x194], RZ ;
 Instr 2731 @ 0xaab0 (43696) - IMAD.MOV.U32 R19, RZ, RZ, RZ ;
 Instr 2732 @ 0xaac0 (43712) - IMAD R3, R0, c[0x0][0x198], R3 ;
 Instr 2733 @ 0xaad0 (43728) - IMAD R9, R2, c[0x0][0x180], R3 ;
 Instr 2734 @ 0xaae0 (43744) - @!P1 BRA 0xb750 ;
Basic block id 330 - num instructions 9
 Instr 2735 @ 0xaaf0 (43760) - MOV R8, RZ ;
 Instr 2736 @ 0xab00 (43776) - IMAD.MOV.U32 R14, RZ, RZ, c[0x0][0x344] ;
 Instr 2737 @ 0xab10 (43792) - IMAD.HI.U32 R10, R9, c[0x0][0x34c], R8 ;
 Instr 2738 @ 0xab20 (43808) - ISETP.NE.AND P0, PT, R14, 0x1, PT ;
 Instr 2739 @ 0xab30 (43824) - SHF.R.U32.HI R11, RZ, c[0x0][0x350], R10 ;
 Instr 2740 @ 0xab40 (43840) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2741 @ 0xab50 (43856) - IMAD R3, R3, c[0x0][0x348], R9 ;
 Instr 2742 @ 0xab60 (43872) - IMAD R19, R3, c[0x0][0x474], RZ ;
 Instr 2743 @ 0xab70 (43888) - @!P0 BRA 0xb750 ;
Basic block id 331 - num instructions 8
 Instr 2744 @ 0xab80 (43904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2745 @ 0xab90 (43920) - ISETP.NE.AND P0, PT, R14, 0x2, PT ;
 Instr 2746 @ 0xaba0 (43936) - IMAD.HI.U32 R12, R11, c[0x0][0x358], R10 ;
 Instr 2747 @ 0xabb0 (43952) - SHF.R.U32.HI R13, RZ, c[0x0][0x35c], R12 ;
 Instr 2748 @ 0xabc0 (43968) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2749 @ 0xabd0 (43984) - IMAD R10, R3, c[0x0][0x354], R11 ;
 Instr 2750 @ 0xabe0 (44000) - IMAD R19, R10, c[0x0][0x47c], R19 ;
 Instr 2751 @ 0xabf0 (44016) - @!P0 BRA 0xb750 ;
Basic block id 332 - num instructions 8
 Instr 2752 @ 0xac00 (44032) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2753 @ 0xac10 (44048) - ISETP.NE.AND P0, PT, R14, 0x3, PT ;
 Instr 2754 @ 0xac20 (44064) - IMAD.HI.U32 R10, R13, c[0x0][0x364], R12 ;
 Instr 2755 @ 0xac30 (44080) - SHF.R.U32.HI R11, RZ, c[0x0][0x368], R10 ;
 Instr 2756 @ 0xac40 (44096) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2757 @ 0xac50 (44112) - IMAD R12, R3, c[0x0][0x360], R13 ;
 Instr 2758 @ 0xac60 (44128) - IMAD R19, R12, c[0x0][0x484], R19 ;
 Instr 2759 @ 0xac70 (44144) - @!P0 BRA 0xb750 ;
Basic block id 333 - num instructions 8
 Instr 2760 @ 0xac80 (44160) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2761 @ 0xac90 (44176) - ISETP.NE.AND P0, PT, R14, 0x4, PT ;
 Instr 2762 @ 0xaca0 (44192) - IMAD.HI.U32 R12, R11, c[0x0][0x370], R10 ;
 Instr 2763 @ 0xacb0 (44208) - SHF.R.U32.HI R13, RZ, c[0x0][0x374], R12 ;
 Instr 2764 @ 0xacc0 (44224) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2765 @ 0xacd0 (44240) - IMAD R10, R3, c[0x0][0x36c], R11 ;
 Instr 2766 @ 0xace0 (44256) - IMAD R19, R10, c[0x0][0x48c], R19 ;
 Instr 2767 @ 0xacf0 (44272) - @!P0 BRA 0xb750 ;
Basic block id 334 - num instructions 8
 Instr 2768 @ 0xad00 (44288) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2769 @ 0xad10 (44304) - ISETP.NE.AND P0, PT, R14, 0x5, PT ;
 Instr 2770 @ 0xad20 (44320) - IMAD.HI.U32 R10, R13, c[0x0][0x37c], R12 ;
 Instr 2771 @ 0xad30 (44336) - SHF.R.U32.HI R11, RZ, c[0x0][0x380], R10 ;
 Instr 2772 @ 0xad40 (44352) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2773 @ 0xad50 (44368) - IMAD R12, R3, c[0x0][0x378], R13 ;
 Instr 2774 @ 0xad60 (44384) - IMAD R19, R12, c[0x0][0x494], R19 ;
 Instr 2775 @ 0xad70 (44400) - @!P0 BRA 0xb750 ;
Basic block id 335 - num instructions 8
 Instr 2776 @ 0xad80 (44416) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2777 @ 0xad90 (44432) - ISETP.NE.AND P0, PT, R14, 0x6, PT ;
 Instr 2778 @ 0xada0 (44448) - IMAD.HI.U32 R12, R11, c[0x0][0x388], R10 ;
 Instr 2779 @ 0xadb0 (44464) - SHF.R.U32.HI R13, RZ, c[0x0][0x38c], R12 ;
 Instr 2780 @ 0xadc0 (44480) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2781 @ 0xadd0 (44496) - IMAD R10, R3, c[0x0][0x384], R11 ;
 Instr 2782 @ 0xade0 (44512) - IMAD R19, R10, c[0x0][0x49c], R19 ;
 Instr 2783 @ 0xadf0 (44528) - @!P0 BRA 0xb750 ;
Basic block id 336 - num instructions 8
 Instr 2784 @ 0xae00 (44544) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2785 @ 0xae10 (44560) - ISETP.NE.AND P0, PT, R14, 0x7, PT ;
 Instr 2786 @ 0xae20 (44576) - IMAD.HI.U32 R10, R13, c[0x0][0x394], R12 ;
 Instr 2787 @ 0xae30 (44592) - SHF.R.U32.HI R11, RZ, c[0x0][0x398], R10 ;
 Instr 2788 @ 0xae40 (44608) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2789 @ 0xae50 (44624) - IMAD R12, R3, c[0x0][0x390], R13 ;
 Instr 2790 @ 0xae60 (44640) - IMAD R19, R12, c[0x0][0x4a4], R19 ;
 Instr 2791 @ 0xae70 (44656) - @!P0 BRA 0xb750 ;
Basic block id 337 - num instructions 8
 Instr 2792 @ 0xae80 (44672) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2793 @ 0xae90 (44688) - ISETP.NE.AND P0, PT, R14, 0x8, PT ;
 Instr 2794 @ 0xaea0 (44704) - IMAD.HI.U32 R12, R11, c[0x0][0x3a0], R10 ;
 Instr 2795 @ 0xaeb0 (44720) - SHF.R.U32.HI R13, RZ, c[0x0][0x3a4], R12 ;
 Instr 2796 @ 0xaec0 (44736) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2797 @ 0xaed0 (44752) - IMAD R10, R3, c[0x0][0x39c], R11 ;
 Instr 2798 @ 0xaee0 (44768) - IMAD R19, R10, c[0x0][0x4ac], R19 ;
 Instr 2799 @ 0xaef0 (44784) - @!P0 BRA 0xb750 ;
Basic block id 338 - num instructions 8
 Instr 2800 @ 0xaf00 (44800) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2801 @ 0xaf10 (44816) - ISETP.NE.AND P0, PT, R14, 0x9, PT ;
 Instr 2802 @ 0xaf20 (44832) - IMAD.HI.U32 R10, R13, c[0x0][0x3ac], R12 ;
 Instr 2803 @ 0xaf30 (44848) - SHF.R.U32.HI R11, RZ, c[0x0][0x3b0], R10 ;
 Instr 2804 @ 0xaf40 (44864) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2805 @ 0xaf50 (44880) - IMAD R12, R3, c[0x0][0x3a8], R13 ;
 Instr 2806 @ 0xaf60 (44896) - IMAD R19, R12, c[0x0][0x4b4], R19 ;
 Instr 2807 @ 0xaf70 (44912) - @!P0 BRA 0xb750 ;
Basic block id 339 - num instructions 8
 Instr 2808 @ 0xaf80 (44928) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2809 @ 0xaf90 (44944) - ISETP.NE.AND P0, PT, R14, 0xa, PT ;
 Instr 2810 @ 0xafa0 (44960) - IMAD.HI.U32 R12, R11, c[0x0][0x3b8], R10 ;
 Instr 2811 @ 0xafb0 (44976) - SHF.R.U32.HI R13, RZ, c[0x0][0x3bc], R12 ;
 Instr 2812 @ 0xafc0 (44992) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2813 @ 0xafd0 (45008) - IMAD R10, R3, c[0x0][0x3b4], R11 ;
 Instr 2814 @ 0xafe0 (45024) - IMAD R19, R10, c[0x0][0x4bc], R19 ;
 Instr 2815 @ 0xaff0 (45040) - @!P0 BRA 0xb750 ;
Basic block id 340 - num instructions 8
 Instr 2816 @ 0xb000 (45056) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2817 @ 0xb010 (45072) - ISETP.NE.AND P0, PT, R14, 0xb, PT ;
 Instr 2818 @ 0xb020 (45088) - IMAD.HI.U32 R10, R13, c[0x0][0x3c4], R12 ;
 Instr 2819 @ 0xb030 (45104) - SHF.R.U32.HI R11, RZ, c[0x0][0x3c8], R10 ;
 Instr 2820 @ 0xb040 (45120) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2821 @ 0xb050 (45136) - IMAD R12, R3, c[0x0][0x3c0], R13 ;
 Instr 2822 @ 0xb060 (45152) - IMAD R19, R12, c[0x0][0x4c4], R19 ;
 Instr 2823 @ 0xb070 (45168) - @!P0 BRA 0xb750 ;
Basic block id 341 - num instructions 8
 Instr 2824 @ 0xb080 (45184) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2825 @ 0xb090 (45200) - ISETP.NE.AND P0, PT, R14, 0xc, PT ;
 Instr 2826 @ 0xb0a0 (45216) - IMAD.HI.U32 R12, R11, c[0x0][0x3d0], R10 ;
 Instr 2827 @ 0xb0b0 (45232) - SHF.R.U32.HI R13, RZ, c[0x0][0x3d4], R12 ;
 Instr 2828 @ 0xb0c0 (45248) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2829 @ 0xb0d0 (45264) - IMAD R10, R3, c[0x0][0x3cc], R11 ;
 Instr 2830 @ 0xb0e0 (45280) - IMAD R19, R10, c[0x0][0x4cc], R19 ;
 Instr 2831 @ 0xb0f0 (45296) - @!P0 BRA 0xb750 ;
Basic block id 342 - num instructions 8
 Instr 2832 @ 0xb100 (45312) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2833 @ 0xb110 (45328) - ISETP.NE.AND P0, PT, R14, 0xd, PT ;
 Instr 2834 @ 0xb120 (45344) - IMAD.HI.U32 R10, R13, c[0x0][0x3dc], R12 ;
 Instr 2835 @ 0xb130 (45360) - SHF.R.U32.HI R11, RZ, c[0x0][0x3e0], R10 ;
 Instr 2836 @ 0xb140 (45376) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2837 @ 0xb150 (45392) - IMAD R12, R3, c[0x0][0x3d8], R13 ;
 Instr 2838 @ 0xb160 (45408) - IMAD R19, R12, c[0x0][0x4d4], R19 ;
 Instr 2839 @ 0xb170 (45424) - @!P0 BRA 0xb750 ;
Basic block id 343 - num instructions 8
 Instr 2840 @ 0xb180 (45440) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2841 @ 0xb190 (45456) - ISETP.NE.AND P0, PT, R14, 0xe, PT ;
 Instr 2842 @ 0xb1a0 (45472) - IMAD.HI.U32 R12, R11, c[0x0][0x3e8], R10 ;
 Instr 2843 @ 0xb1b0 (45488) - SHF.R.U32.HI R13, RZ, c[0x0][0x3ec], R12 ;
 Instr 2844 @ 0xb1c0 (45504) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2845 @ 0xb1d0 (45520) - IMAD R10, R3, c[0x0][0x3e4], R11 ;
 Instr 2846 @ 0xb1e0 (45536) - IMAD R19, R10, c[0x0][0x4dc], R19 ;
 Instr 2847 @ 0xb1f0 (45552) - @!P0 BRA 0xb750 ;
Basic block id 344 - num instructions 8
 Instr 2848 @ 0xb200 (45568) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2849 @ 0xb210 (45584) - ISETP.NE.AND P0, PT, R14, 0xf, PT ;
 Instr 2850 @ 0xb220 (45600) - IMAD.HI.U32 R10, R13, c[0x0][0x3f4], R12 ;
 Instr 2851 @ 0xb230 (45616) - SHF.R.U32.HI R11, RZ, c[0x0][0x3f8], R10 ;
 Instr 2852 @ 0xb240 (45632) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2853 @ 0xb250 (45648) - IMAD R12, R3, c[0x0][0x3f0], R13 ;
 Instr 2854 @ 0xb260 (45664) - IMAD R19, R12, c[0x0][0x4e4], R19 ;
 Instr 2855 @ 0xb270 (45680) - @!P0 BRA 0xb750 ;
Basic block id 345 - num instructions 8
 Instr 2856 @ 0xb280 (45696) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2857 @ 0xb290 (45712) - ISETP.NE.AND P0, PT, R14, 0x10, PT ;
 Instr 2858 @ 0xb2a0 (45728) - IMAD.HI.U32 R12, R11, c[0x0][0x400], R10 ;
 Instr 2859 @ 0xb2b0 (45744) - SHF.R.U32.HI R13, RZ, c[0x0][0x404], R12 ;
 Instr 2860 @ 0xb2c0 (45760) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2861 @ 0xb2d0 (45776) - IMAD R10, R3, c[0x0][0x3fc], R11 ;
 Instr 2862 @ 0xb2e0 (45792) - IMAD R19, R10, c[0x0][0x4ec], R19 ;
 Instr 2863 @ 0xb2f0 (45808) - @!P0 BRA 0xb750 ;
Basic block id 346 - num instructions 8
 Instr 2864 @ 0xb300 (45824) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2865 @ 0xb310 (45840) - ISETP.NE.AND P0, PT, R14, 0x11, PT ;
 Instr 2866 @ 0xb320 (45856) - IMAD.HI.U32 R10, R13, c[0x0][0x40c], R12 ;
 Instr 2867 @ 0xb330 (45872) - SHF.R.U32.HI R11, RZ, c[0x0][0x410], R10 ;
 Instr 2868 @ 0xb340 (45888) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2869 @ 0xb350 (45904) - IMAD R12, R3, c[0x0][0x408], R13 ;
 Instr 2870 @ 0xb360 (45920) - IMAD R19, R12, c[0x0][0x4f4], R19 ;
 Instr 2871 @ 0xb370 (45936) - @!P0 BRA 0xb750 ;
Basic block id 347 - num instructions 8
 Instr 2872 @ 0xb380 (45952) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2873 @ 0xb390 (45968) - ISETP.NE.AND P0, PT, R14, 0x12, PT ;
 Instr 2874 @ 0xb3a0 (45984) - IMAD.HI.U32 R12, R11, c[0x0][0x418], R10 ;
 Instr 2875 @ 0xb3b0 (46000) - SHF.R.U32.HI R13, RZ, c[0x0][0x41c], R12 ;
 Instr 2876 @ 0xb3c0 (46016) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2877 @ 0xb3d0 (46032) - IMAD R10, R3, c[0x0][0x414], R11 ;
 Instr 2878 @ 0xb3e0 (46048) - IMAD R19, R10, c[0x0][0x4fc], R19 ;
 Instr 2879 @ 0xb3f0 (46064) - @!P0 BRA 0xb750 ;
Basic block id 348 - num instructions 8
 Instr 2880 @ 0xb400 (46080) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2881 @ 0xb410 (46096) - ISETP.NE.AND P0, PT, R14, 0x13, PT ;
 Instr 2882 @ 0xb420 (46112) - IMAD.HI.U32 R10, R13, c[0x0][0x424], R12 ;
 Instr 2883 @ 0xb430 (46128) - SHF.R.U32.HI R11, RZ, c[0x0][0x428], R10 ;
 Instr 2884 @ 0xb440 (46144) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2885 @ 0xb450 (46160) - IMAD R12, R3, c[0x0][0x420], R13 ;
 Instr 2886 @ 0xb460 (46176) - IMAD R19, R12, c[0x0][0x504], R19 ;
 Instr 2887 @ 0xb470 (46192) - @!P0 BRA 0xb750 ;
Basic block id 349 - num instructions 8
 Instr 2888 @ 0xb480 (46208) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2889 @ 0xb490 (46224) - ISETP.NE.AND P0, PT, R14, 0x14, PT ;
 Instr 2890 @ 0xb4a0 (46240) - IMAD.HI.U32 R12, R11, c[0x0][0x430], R10 ;
 Instr 2891 @ 0xb4b0 (46256) - SHF.R.U32.HI R13, RZ, c[0x0][0x434], R12 ;
 Instr 2892 @ 0xb4c0 (46272) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2893 @ 0xb4d0 (46288) - IMAD R10, R3, c[0x0][0x42c], R11 ;
 Instr 2894 @ 0xb4e0 (46304) - IMAD R19, R10, c[0x0][0x50c], R19 ;
 Instr 2895 @ 0xb4f0 (46320) - @!P0 BRA 0xb750 ;
Basic block id 350 - num instructions 8
 Instr 2896 @ 0xb500 (46336) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2897 @ 0xb510 (46352) - ISETP.NE.AND P0, PT, R14, 0x15, PT ;
 Instr 2898 @ 0xb520 (46368) - IMAD.HI.U32 R10, R13, c[0x0][0x43c], R12 ;
 Instr 2899 @ 0xb530 (46384) - SHF.R.U32.HI R11, RZ, c[0x0][0x440], R10 ;
 Instr 2900 @ 0xb540 (46400) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2901 @ 0xb550 (46416) - IMAD R12, R3, c[0x0][0x438], R13 ;
 Instr 2902 @ 0xb560 (46432) - IMAD R19, R12, c[0x0][0x514], R19 ;
 Instr 2903 @ 0xb570 (46448) - @!P0 BRA 0xb750 ;
Basic block id 351 - num instructions 8
 Instr 2904 @ 0xb580 (46464) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2905 @ 0xb590 (46480) - ISETP.NE.AND P0, PT, R14, 0x16, PT ;
 Instr 2906 @ 0xb5a0 (46496) - IMAD.HI.U32 R12, R11, c[0x0][0x448], R10 ;
 Instr 2907 @ 0xb5b0 (46512) - SHF.R.U32.HI R13, RZ, c[0x0][0x44c], R12 ;
 Instr 2908 @ 0xb5c0 (46528) - IADD3 R3, -R13, RZ, RZ ;
 Instr 2909 @ 0xb5d0 (46544) - IMAD R10, R3, c[0x0][0x444], R11 ;
 Instr 2910 @ 0xb5e0 (46560) - IMAD R19, R10, c[0x0][0x51c], R19 ;
 Instr 2911 @ 0xb5f0 (46576) - @!P0 BRA 0xb750 ;
Basic block id 352 - num instructions 8
 Instr 2912 @ 0xb600 (46592) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
 Instr 2913 @ 0xb610 (46608) - ISETP.NE.AND P0, PT, R14, 0x17, PT ;
 Instr 2914 @ 0xb620 (46624) - IMAD.HI.U32 R10, R13, c[0x0][0x454], R12 ;
 Instr 2915 @ 0xb630 (46640) - SHF.R.U32.HI R11, RZ, c[0x0][0x458], R10 ;
 Instr 2916 @ 0xb640 (46656) - IADD3 R3, -R11, RZ, RZ ;
 Instr 2917 @ 0xb650 (46672) - IMAD R12, R3, c[0x0][0x450], R13 ;
 Instr 2918 @ 0xb660 (46688) - IMAD R19, R12, c[0x0][0x524], R19 ;
 Instr 2919 @ 0xb670 (46704) - @!P0 BRA 0xb750 ;
Basic block id 353 - num instructions 13
 Instr 2920 @ 0xb680 (46720) - ISETP.NE.AND P0, PT, R14, 0x18, PT ;
 Instr 2921 @ 0xb690 (46736) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
 Instr 2922 @ 0xb6a0 (46752) - IMAD.HI.U32 R12, R11, c[0x0][0x460], R10 ;
 Instr 2923 @ 0xb6b0 (46768) - SHF.R.U32.HI R13, RZ, c[0x0][0x464], R12 ;
 Instr 2924 @ 0xb6c0 (46784) - @P0 MOV R12, RZ ;
 Instr 2925 @ 0xb6d0 (46800) - IMAD.MOV R3, RZ, RZ, -R13.reuse ;
 Instr 2926 @ 0xb6e0 (46816) - @P0 IMAD.HI.U32 R10, R13, c[0x0][0x46c], R12 ;
 Instr 2927 @ 0xb6f0 (46832) - @P0 SHF.R.U32.HI R12, RZ, c[0x0][0x470], R10 ;
 Instr 2928 @ 0xb700 (46848) - IMAD R10, R3, c[0x0][0x45c], R11 ;
 Instr 2929 @ 0xb710 (46864) - @P0 IADD3 R12, -R12, RZ, RZ ;
 Instr 2930 @ 0xb720 (46880) - IMAD R19, R10, c[0x0][0x52c], R19 ;
 Instr 2931 @ 0xb730 (46896) - @P0 IMAD R12, R12, c[0x0][0x468], R13 ;
 Instr 2932 @ 0xb740 (46912) - @P0 IMAD R19, R12, c[0x0][0x534], R19 ;
Basic block id 354 - num instructions 7
 Instr 2933 @ 0xb750 (46928) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 2934 @ 0xb760 (46944) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2935 @ 0xb770 (46960) - BSSY B0, 0xb820 ;
 Instr 2936 @ 0xb780 (46976) - PRMT R3, RZ, 0x7610, R3 ;
 Instr 2937 @ 0xb790 (46992) - ISETP.NE.AND P0, PT, R7, RZ, P0 ;
 Instr 2938 @ 0xb7a0 (47008) - ISETP.GE.OR P0, PT, R9, c[0x0][0x178], P0 ;
 Instr 2939 @ 0xb7b0 (47024) - @P0 BRA 0xb810 ;
Basic block id 355 - num instructions 5
 Instr 2940 @ 0xb7c0 (47040) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x18c], PT ;
 Instr 2941 @ 0xb7d0 (47056) - IMAD.MOV.U32 R3, RZ, RZ, 0x1 ;
 Instr 2942 @ 0xb7e0 (47072) - @P1 ISETP.NE.AND P0, PT, R0, RZ, PT ;
 Instr 2943 @ 0xb7f0 (47088) - @P1 SEL R8, RZ, 0x1, P0 ;
 Instr 2944 @ 0xb800 (47104) - @P1 PRMT R3, R8, 0x7610, R3 ;
Basic block id 356 - num instructions 19
 Instr 2945 @ 0xb810 (47120) - BSYNC B0 ;
 Instr 2946 @ 0xb820 (47136) - PRMT R3, R3, 0x9910, RZ ;
 Instr 2947 @ 0xb830 (47152) - ISETP.NE.AND P2, PT, R3, RZ, PT ;
 Instr 2948 @ 0xb840 (47168) - ISETP.NE.OR P0, PT, RZ, c[0x0][0x188], !P2 ;
 Instr 2949 @ 0xb850 (47184) - @P2 S2R R3, SR_CTAID.Y ;
 Instr 2950 @ 0xb860 (47200) - @P2 MOV R9, 0x8 ;
 Instr 2951 @ 0xb870 (47216) - @P2 IMAD R8, R2, c[0x0][0x10], R3 ;
 Instr 2952 @ 0xb880 (47232) - @!P0 IMAD R8, R8, c[0x0][0x0], R7 ;
 Instr 2953 @ 0xb890 (47248) - LOP3.LUT P0, RZ, R7, R0, RZ, 0xfc, !PT ;
 Instr 2954 @ 0xb8a0 (47264) - @P2 IMAD.WIDE.U32 R8, R8, R9, c[0x0][0x560] ;
 Instr 2955 @ 0xb8b0 (47280) - @P2 STG.E.64.SYS [R8], R16 ;
 Instr 2956 @ 0xb8c0 (47296) - MEMBAR.SC.GPU ;
 Instr 2957 @ 0xb8d0 (47312) - ERRBAR;
 Instr 2958 @ 0xb8e0 (47328) - CCTL.IVALL ;
 Instr 2959 @ 0xb8f0 (47344) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2960 @ 0xb900 (47360) - BSSY B0, 0xba80 ;
 Instr 2961 @ 0xb910 (47376) - BAR.SYNC 0x0 ;
 Instr 2962 @ 0xb920 (47392) - BAR.SYNC 0x0 ;
 Instr 2963 @ 0xb930 (47408) - @P0 BRA 0xba70 ;
Basic block id 357 - num instructions 19
 Instr 2964 @ 0xb940 (47424) - S2R R3, SR_LANEID ;
 Instr 2965 @ 0xb950 (47440) - VOTEU.ANY UR4, UPT, PT ;
 Instr 2966 @ 0xb960 (47456) - IMAD.MOV.U32 R9, RZ, RZ, 0x4 ;
 Instr 2967 @ 0xb970 (47472) - FLO.U32 R10, UR4 ;
 Instr 2968 @ 0xb980 (47488) - IMAD.WIDE.U32 R8, R2, R9, c[0x0][0x568] ;
 Instr 2969 @ 0xb990 (47504) - POPC R11, UR4 ;
 Instr 2970 @ 0xb9a0 (47520) - ISETP.EQ.U32.AND P0, PT, R10, R3, PT ;
 Instr 2971 @ 0xb9b0 (47536) - @P0 ATOMG.E.ADD.STRONG.GPU PT, R9, [R8], R11 ;
 Instr 2972 @ 0xb9c0 (47552) - ULDC UR5, c[0x0][0x10] ;
 Instr 2973 @ 0xb9d0 (47568) - S2R R12, SR_LTMASK ;
 Instr 2974 @ 0xb9e0 (47584) - LOP3.LUT R12, R12, UR4, RZ, 0xc0, !PT ;
 Instr 2975 @ 0xb9f0 (47600) - UMOV UR4, 0x1 ;
 Instr 2976 @ 0xba00 (47616) - UIADD3 UR4, -UR4, UR5, URZ ;
 Instr 2977 @ 0xba10 (47632) - POPC R12, R12 ;
 Instr 2978 @ 0xba20 (47648) - SHFL.IDX PT, R3, R9, R10, 0x1f ;
 Instr 2979 @ 0xba30 (47664) - IADD3 R3, R3, R12, RZ ;
 Instr 2980 @ 0xba40 (47680) - ISETP.NE.AND P0, PT, R3, UR4, PT ;
 Instr 2981 @ 0xba50 (47696) - SEL R3, RZ, 0x1, P0 ;
 Instr 2982 @ 0xba60 (47712) - STS.U8 [RZ], R3 ;
Basic block id 358 - num instructions 7
 Instr 2983 @ 0xba70 (47728) - BSYNC B0 ;
 Instr 2984 @ 0xba80 (47744) - BAR.SYNC 0x0 ;
 Instr 2985 @ 0xba90 (47760) - LDS.U.U8 R3, [RZ] ;
 Instr 2986 @ 0xbaa0 (47776) - IADD3 R8, P1, R19, c[0x0][0x548], RZ ;
 Instr 2987 @ 0xbab0 (47792) - IMAD.X R9, RZ, RZ, c[0x0][0x54c], P1 ;
 Instr 2988 @ 0xbac0 (47808) - ISETP.NE.AND P0, PT, R3, RZ, PT ;
 Instr 2989 @ 0xbad0 (47824) - @!P0 EXIT ;
Basic block id 359 - num instructions 9
 Instr 2990 @ 0xbae0 (47840) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 2991 @ 0xbaf0 (47856) - IMAD.MOV.U32 R17, RZ, RZ, c[0x0][0x16c] ;
 Instr 2992 @ 0xbb00 (47872) - MOV R16, c[0x0][0x168] ;
 Instr 2993 @ 0xbb10 (47888) - MEMBAR.SC.GPU ;
 Instr 2994 @ 0xbb20 (47904) - BMOV.32.CLEAR RZ, B0 ;
 Instr 2995 @ 0xbb30 (47920) - BSSY B0, 0xbda0 ;
 Instr 2996 @ 0xbb40 (47936) - ERRBAR;
 Instr 2997 @ 0xbb50 (47952) - CCTL.IVALL ;
 Instr 2998 @ 0xbb60 (47968) - @!P0 BRA 0xbca0 ;
Basic block id 360 - num instructions 5
 Instr 2999 @ 0xbb70 (47984) - IMAD R3, R0, c[0x0][0x0], R7 ;
 Instr 3000 @ 0xbb80 (48000) - BMOV.32.CLEAR RZ, B1 ;
 Instr 3001 @ 0xbb90 (48016) - BSSY B1, 0xbc90 ;
 Instr 3002 @ 0xbba0 (48032) - ISETP.GE.U32.AND P0, PT, R3, c[0x0][0x184], PT ;
 Instr 3003 @ 0xbbb0 (48048) - @P0 BRA 0xbc80 ;
Basic block id 361 - num instructions 12
 Instr 3004 @ 0xbbc0 (48064) - MOV R11, 0x8 ;
 Instr 3005 @ 0xbbd0 (48080) - IMAD R10, R2, c[0x0][0x10], R3 ;
 Instr 3006 @ 0xbbe0 (48096) - IMAD.WIDE.U32 R10, R10, R11, c[0x0][0x560] ;
 Instr 3007 @ 0xbbf0 (48112) - LDG.E.64.SYS R10, [R10] ;
 Instr 3008 @ 0xbc00 (48128) - IMAD.MOV.U32 R12, RZ, RZ, c[0x0][0x0] ;
 Instr 3009 @ 0xbc10 (48144) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 3010 @ 0xbc20 (48160) - IMAD R3, R12, c[0x0][0x4], R3 ;
 Instr 3011 @ 0xbc30 (48176) - ISETP.GE.U32.AND P1, PT, R3, c[0x0][0x184], PT ;
 Instr 3012 @ 0xbc40 (48192) - DSETP.GT.OR P0, PT, R16, R10, P0 ;
 Instr 3013 @ 0xbc50 (48208) - FSEL R16, R16, R10, P0 ;
 Instr 3014 @ 0xbc60 (48224) - FSEL R17, R17, R11, P0 ;
 Instr 3015 @ 0xbc70 (48240) - @!P1 BRA 0xbbc0 ;
Basic block id 362 - num instructions 2
 Instr 3016 @ 0xbc80 (48256) - BSYNC B1 ;
 Instr 3017 @ 0xbc90 (48272) - BRA 0xbd90 ;
Basic block id 363 - num instructions 2
 Instr 3018 @ 0xbca0 (48288) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x184], PT ;
 Instr 3019 @ 0xbcb0 (48304) - @P0 BRA 0xbd90 ;
Basic block id 364 - num instructions 1
 Instr 3020 @ 0xbcc0 (48320) - MOV R3, R0 ;
Basic block id 365 - num instructions 12
 Instr 3021 @ 0xbcd0 (48336) - IMAD R10, R2, c[0x0][0x10], R3 ;
 Instr 3022 @ 0xbce0 (48352) - MOV R11, 0x8 ;
 Instr 3023 @ 0xbcf0 (48368) - IMAD R10, R10, c[0x0][0x0], R7 ;
 Instr 3024 @ 0xbd00 (48384) - IMAD.WIDE.U32 R10, R10, R11, c[0x0][0x560] ;
 Instr 3025 @ 0xbd10 (48400) - LDG.E.64.SYS R10, [R10] ;
 Instr 3026 @ 0xbd20 (48416) - IADD3 R3, R3, c[0x0][0x4], RZ ;
 Instr 3027 @ 0xbd30 (48432) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 3028 @ 0xbd40 (48448) - ISETP.GE.U32.AND P1, PT, R3, c[0x0][0x184], PT ;
 Instr 3029 @ 0xbd50 (48464) - DSETP.GT.OR P0, PT, R16, R10, P0 ;
 Instr 3030 @ 0xbd60 (48480) - FSEL R16, R16, R10, P0 ;
 Instr 3031 @ 0xbd70 (48496) - FSEL R17, R17, R11, P0 ;
 Instr 3032 @ 0xbd80 (48512) - @!P1 BRA 0xbcd0 ;
Basic block id 366 - num instructions 8
 Instr 3033 @ 0xbd90 (48528) - BSYNC B0 ;
 Instr 3034 @ 0xbda0 (48544) - IMAD R13, R0, c[0x0][0x0], R7 ;
 Instr 3035 @ 0xbdb0 (48560) - ULDC UR4, c[0x0][0x4] ;
 Instr 3036 @ 0xbdc0 (48576) - ISETP.NE.AND P3, PT, RZ, c[0x0][0x188], PT ;
 Instr 3037 @ 0xbdd0 (48592) - USHF.R.U32.HI UR4, URZ, 0x1, UR4 ;
 Instr 3038 @ 0xbde0 (48608) - STS.64 [R13.X8+0x10], R16 ;
 Instr 3039 @ 0xbdf0 (48624) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3040 @ 0xbe00 (48640) - @!P0 BRA 0xbf20 ;
Basic block id 367 - num instructions 1
 Instr 3041 @ 0xbe10 (48656) - IMAD.U32 R11, RZ, RZ, UR4 ;
Basic block id 368 - num instructions 16
 Instr 3042 @ 0xbe20 (48672) - IADD3 R2, R0, R11, RZ ;
 Instr 3043 @ 0xbe30 (48688) - BAR.SYNC 0x0 ;
 Instr 3044 @ 0xbe40 (48704) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x4], PT ;
 Instr 3045 @ 0xbe50 (48720) - ISETP.GE.U32.OR P0, PT, R0, R11, P0 ;
 Instr 3046 @ 0xbe60 (48736) - @!P0 IMAD R2, R2, c[0x0][0x0], R7 ;
 Instr 3047 @ 0xbe70 (48752) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 3048 @ 0xbe80 (48768) - @!P0 LDS.U.64 R2, [R2.X8+0x10] ;
 Instr 3049 @ 0xbe90 (48784) - @!P0 DSETP.GT.OR P1, PT, R16, R2, P1 ;
 Instr 3050 @ 0xbea0 (48800) - @!P0 FSEL R3, R17, R3, P1 ;
 Instr 3051 @ 0xbeb0 (48816) - @!P0 FSEL R10, R16, R2, P1 ;
 Instr 3052 @ 0xbec0 (48832) - @!P0 IMAD.MOV.U32 R17, RZ, RZ, R3 ;
 Instr 3053 @ 0xbed0 (48848) - @!P0 MOV R16, R10 ;
 Instr 3054 @ 0xbee0 (48864) - @!P0 STS.64 [R13.X8+0x10], R16 ;
 Instr 3055 @ 0xbef0 (48880) - ISETP.GT.AND P0, PT, R11, 0x1, PT ;
 Instr 3056 @ 0xbf00 (48896) - SHF.R.S32.HI R11, RZ, 0x1, R11 ;
 Instr 3057 @ 0xbf10 (48912) - @P0 BRA 0xbe20 ;
Basic block id 369 - num instructions 2
 Instr 3058 @ 0xbf20 (48928) - LEA R11, R13, 0x10, 0x3 ;
 Instr 3059 @ 0xbf30 (48944) - @!P3 BRA 0xc1f0 ;
Basic block id 370 - num instructions 4
 Instr 3060 @ 0xbf40 (48960) - MOV R2, c[0x0][0x0] ;
 Instr 3061 @ 0xbf50 (48976) - MOV R0, c[0x0][0x0] ;
 Instr 3062 @ 0xbf60 (48992) - ISETP.GT.AND P0, PT, R2, 0x20, PT ;
 Instr 3063 @ 0xbf70 (49008) - @!P0 BRA 0xc100 ;
Basic block id 371 - num instructions 6
 Instr 3064 @ 0xbf80 (49024) - LEA.HI R2, R2, c[0x0][0x0], RZ, 0x1 ;
 Instr 3065 @ 0xbf90 (49040) - STS.64 [R13.X8+0x10], R16 ;
 Instr 3066 @ 0xbfa0 (49056) - IMAD.MOV.U32 R0, RZ, RZ, 0x20 ;
 Instr 3067 @ 0xbfb0 (49072) - SHF.R.S32.HI R2, RZ, 0x1, R2 ;
 Instr 3068 @ 0xbfc0 (49088) - ISETP.GE.AND P0, PT, R2, 0x20, PT ;
 Instr 3069 @ 0xbfd0 (49104) - @!P0 BRA 0xc100 ;
Basic block id 372 - num instructions 1
 Instr 3070 @ 0xbfe0 (49120) - MOV R0, R2 ;
Basic block id 373 - num instructions 16
 Instr 3071 @ 0xbff0 (49136) - IADD3 R2, R7, R0, RZ ;
 Instr 3072 @ 0xc000 (49152) - BAR.SYNC 0x0 ;
 Instr 3073 @ 0xc010 (49168) - ISETP.GE.U32.AND P0, PT, R2, c[0x0][0x0], PT ;
 Instr 3074 @ 0xc020 (49184) - ISETP.GE.U32.OR P0, PT, R7, R0, P0 ;
 Instr 3075 @ 0xc030 (49200) - @!P0 IMAD R2, R0, 0x8, R11 ;
 Instr 3076 @ 0xc040 (49216) - @!P0 DSETP.GTU.AND P1, PT, |R16|, +INF , PT ;
 Instr 3077 @ 0xc050 (49232) - SHF.R.S32.HI R0, RZ, 0x1, R0 ;
 Instr 3078 @ 0xc060 (49248) - @!P0 LDS.U.64 R2, [R2] ;
 Instr 3079 @ 0xc070 (49264) - @!P0 DSETP.GT.OR P1, PT, R16, R2, P1 ;
 Instr 3080 @ 0xc080 (49280) - @!P0 FSEL R10, R16, R2, P1 ;
 Instr 3081 @ 0xc090 (49296) - @!P0 FSEL R3, R17, R3, P1 ;
 Instr 3082 @ 0xc0a0 (49312) - @!P0 MOV R16, R10 ;
 Instr 3083 @ 0xc0b0 (49328) - @!P0 MOV R17, R3 ;
 Instr 3084 @ 0xc0c0 (49344) - @!P0 STS.64 [R13.X8+0x10], R16 ;
 Instr 3085 @ 0xc0d0 (49360) - ISETP.GE.AND P0, PT, R0, 0x20, PT ;
 Instr 3086 @ 0xc0e0 (49376) - @P0 BRA 0xbff0 ;
Basic block id 374 - num instructions 1
 Instr 3087 @ 0xc0f0 (49392) - IMAD.MOV.U32 R0, RZ, RZ, 0x20 ;
Basic block id 375 - num instructions 3
 Instr 3088 @ 0xc100 (49408) - BAR.SYNC 0x0 ;
 Instr 3089 @ 0xc110 (49424) - ISETP.GE.AND P0, PT, R0, 0x2, PT ;
 Instr 3090 @ 0xc120 (49440) - @!P0 BRA 0xc1f0 ;
Basic block id 376 - num instructions 1
 Instr 3091 @ 0xc130 (49456) - MOV R7, 0x1 ;
Basic block id 377 - num instructions 11
 Instr 3092 @ 0xc140 (49472) - SHFL.DOWN PT, R3, R17, R7, 0x1f ;
 Instr 3093 @ 0xc150 (49488) - DSETP.GTU.AND P0, PT, |R16|, +INF , PT ;
 Instr 3094 @ 0xc160 (49504) - SHFL.DOWN PT, R2, R16, R7, 0x1f ;
 Instr 3095 @ 0xc170 (49520) - SHF.L.U32 R7, R7, 0x1, RZ ;
 Instr 3096 @ 0xc180 (49536) - ISETP.GE.AND P1, PT, R7, R0, PT ;
 Instr 3097 @ 0xc190 (49552) - DSETP.GT.OR P0, PT, R16, R2, P0 ;
 Instr 3098 @ 0xc1a0 (49568) - FSEL R2, R16, R2, P0 ;
 Instr 3099 @ 0xc1b0 (49584) - FSEL R3, R17, R3, P0 ;
 Instr 3100 @ 0xc1c0 (49600) - IMAD.MOV.U32 R16, RZ, RZ, R2 ;
 Instr 3101 @ 0xc1d0 (49616) - MOV R17, R3 ;
 Instr 3102 @ 0xc1e0 (49632) - @!P1 BRA 0xc140 ;
Basic block id 378 - num instructions 1
 Instr 3103 @ 0xc1f0 (49648) - @!P2 EXIT ;
Basic block id 379 - num instructions 4
 Instr 3104 @ 0xc200 (49664) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
 Instr 3105 @ 0xc210 (49680) - ULDC.U8 UR36, c[0x0][0x578] ;
 Instr 3106 @ 0xc220 (49696) - ISETP.NE.AND.EX P0, PT, R6, RZ, PT, P0 ;
 Instr 3107 @ 0xc230 (49712) - @!P0 BRA 0xc480 ;
Basic block id 380 - num instructions 2
 Instr 3108 @ 0xc240 (49728) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3109 @ 0xc250 (49744) - @!P0 BRA 0xc2b0 ;
Basic block id 381 - num instructions 5
 Instr 3110 @ 0xc260 (49760) - LDG.E.64.SYS R2, [R4] ;
 Instr 3111 @ 0xc270 (49776) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3112 @ 0xc280 (49792) - DSETP.GT.OR P0, PT, R2, R16, P0 ;
 Instr 3113 @ 0xc290 (49808) - FSEL R16, R2, R16, P0 ;
 Instr 3114 @ 0xc2a0 (49824) - FSEL R17, R3, R17, P0 ;
Basic block id 382 - num instructions 3
 Instr 3115 @ 0xc2b0 (49840) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3116 @ 0xc2c0 (49856) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3117 @ 0xc2d0 (49872) - @!P0 BRA 0xc460 ;
Basic block id 383 - num instructions 3
 Instr 3118 @ 0xc2e0 (49888) - MOV R0, 0x1 ;
 Instr 3119 @ 0xc2f0 (49904) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3120 @ 0xc300 (49920) - @!P0 BRA 0xc430 ;
Basic block id 384 - num instructions 18
 Instr 3121 @ 0xc310 (49936) - UMOV UR8, 0xfb1e1800 ;
 Instr 3122 @ 0xc320 (49952) - IMAD.MOV.U32 R8, RZ, RZ, 0x2ea ;
 Instr 3123 @ 0xc330 (49968) - UMOV UR9, 0x7f88 ;
 Instr 3124 @ 0xc340 (49984) - MOV R12, 0x1 ;
 Instr 3125 @ 0xc350 (50000) - UMOV UR6, 0xfb1e1600 ;
 Instr 3126 @ 0xc360 (50016) - MOV R13, RZ ;
 Instr 3127 @ 0xc370 (50032) - UMOV UR7, 0x7f88 ;
 Instr 3128 @ 0xc380 (50048) - IMAD.U32 R4, RZ, RZ, UR8 ;
 Instr 3129 @ 0xc390 (50064) - UMOV UR4, 0xfb1d9900 ;
 Instr 3130 @ 0xc3a0 (50080) - MOV R5, UR9 ;
 Instr 3131 @ 0xc3b0 (50096) - UMOV UR5, 0x7f88 ;
 Instr 3132 @ 0xc3c0 (50112) - MOV R6, UR6 ;
 Instr 3133 @ 0xc3d0 (50128) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3134 @ 0xc3e0 (50144) - MOV R10, UR4 ;
 Instr 3135 @ 0xc3f0 (50160) - MOV R11, UR5 ;
 Instr 3136 @ 0xc400 (50176) - MOV R20, 0xe2992530 ;
 Instr 3137 @ 0xc410 (50192) - MOV R21, 0x7f88 ;
 Instr 3138 @ 0xc420 (50208) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 385 - num instructions 3
 Instr 3139 @ 0xc430 (50224) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3140 @ 0xc440 (50240) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3141 @ 0xc450 (50256) - EXIT ;
Basic block id 386 - num instructions 2
 Instr 3142 @ 0xc460 (50272) - STG.E.64.SYS [R4], R16 ;
 Instr 3143 @ 0xc470 (50288) - EXIT ;
Basic block id 387 - num instructions 2
 Instr 3144 @ 0xc480 (50304) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3145 @ 0xc490 (50320) - @!P0 BRA 0xc4f0 ;
Basic block id 388 - num instructions 5
 Instr 3146 @ 0xc4a0 (50336) - LDG.E.64.SYS R2, [R8] ;
 Instr 3147 @ 0xc4b0 (50352) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3148 @ 0xc4c0 (50368) - DSETP.GT.OR P0, PT, R2, R16, P0 ;
 Instr 3149 @ 0xc4d0 (50384) - FSEL R16, R2, R16, P0 ;
 Instr 3150 @ 0xc4e0 (50400) - FSEL R17, R3, R17, P0 ;
Basic block id 389 - num instructions 3
 Instr 3151 @ 0xc4f0 (50416) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3152 @ 0xc500 (50432) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3153 @ 0xc510 (50448) - @!P0 BRA 0xc6a0 ;
Basic block id 390 - num instructions 3
 Instr 3154 @ 0xc520 (50464) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
 Instr 3155 @ 0xc530 (50480) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3156 @ 0xc540 (50496) - @!P0 BRA 0xc670 ;
Basic block id 391 - num instructions 18
 Instr 3157 @ 0xc550 (50512) - UMOV UR4, 0xfb1e1800 ;
 Instr 3158 @ 0xc560 (50528) - MOV R8, 0x2ea ;
 Instr 3159 @ 0xc570 (50544) - UMOV UR5, 0x7f88 ;
 Instr 3160 @ 0xc580 (50560) - MOV R12, 0x1 ;
 Instr 3161 @ 0xc590 (50576) - UMOV UR6, 0xfb1e1600 ;
 Instr 3162 @ 0xc5a0 (50592) - IMAD.MOV.U32 R13, RZ, RZ, RZ ;
 Instr 3163 @ 0xc5b0 (50608) - UMOV UR7, 0x7f88 ;
 Instr 3164 @ 0xc5c0 (50624) - MOV R4, UR4 ;
 Instr 3165 @ 0xc5d0 (50640) - UMOV UR8, 0xfb1d9900 ;
 Instr 3166 @ 0xc5e0 (50656) - MOV R5, UR5 ;
 Instr 3167 @ 0xc5f0 (50672) - UMOV UR9, 0x7f88 ;
 Instr 3168 @ 0xc600 (50688) - IMAD.U32 R6, RZ, RZ, UR6 ;
 Instr 3169 @ 0xc610 (50704) - MOV R7, UR7 ;
 Instr 3170 @ 0xc620 (50720) - IMAD.U32 R11, RZ, RZ, UR9 ;
 Instr 3171 @ 0xc630 (50736) - MOV R10, UR8 ;
 Instr 3172 @ 0xc640 (50752) - MOV R20, 0xe2992770 ;
 Instr 3173 @ 0xc650 (50768) - MOV R21, 0x7f88 ;
 Instr 3174 @ 0xc660 (50784) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 392 - num instructions 3
 Instr 3175 @ 0xc670 (50800) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3176 @ 0xc680 (50816) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3177 @ 0xc690 (50832) - EXIT ;
Basic block id 393 - num instructions 2
 Instr 3178 @ 0xc6a0 (50848) - STG.E.64.SYS [R8], R16 ;
 Instr 3179 @ 0xc6b0 (50864) - EXIT ;
Basic block id 394 - num instructions 2
 Instr 3180 @ 0xc6c0 (50880) - ISETP.GE.AND P0, PT, R3, c[0x0][0x178], PT ;
 Instr 3181 @ 0xc6d0 (50896) - @P0 EXIT ;
Basic block id 395 - num instructions 3
 Instr 3182 @ 0xc6e0 (50912) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
 Instr 3183 @ 0xc6f0 (50928) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
 Instr 3184 @ 0xc700 (50944) - @P0 EXIT P1 ;
Basic block id 396 - num instructions 3
 Instr 3185 @ 0xc710 (50960) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
 Instr 3186 @ 0xc720 (50976) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
 Instr 3187 @ 0xc730 (50992) - @P0 EXIT P1 ;
Basic block id 397 - num instructions 4
 Instr 3188 @ 0xc740 (51008) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
 Instr 3189 @ 0xc750 (51024) - ULDC.U8 UR36, c[0x0][0x578] ;
 Instr 3190 @ 0xc760 (51040) - ISETP.NE.AND.EX P0, PT, R6, RZ, PT, P0 ;
 Instr 3191 @ 0xc770 (51056) - @!P0 BRA 0xc9c0 ;
Basic block id 398 - num instructions 2
 Instr 3192 @ 0xc780 (51072) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3193 @ 0xc790 (51088) - @!P0 BRA 0xc7f0 ;
Basic block id 399 - num instructions 5
 Instr 3194 @ 0xc7a0 (51104) - LDG.E.64.SYS R2, [R4] ;
 Instr 3195 @ 0xc7b0 (51120) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3196 @ 0xc7c0 (51136) - DSETP.GT.OR P0, PT, R2, R16, P0 ;
 Instr 3197 @ 0xc7d0 (51152) - FSEL R16, R2, R16, P0 ;
 Instr 3198 @ 0xc7e0 (51168) - FSEL R17, R3, R17, P0 ;
Basic block id 400 - num instructions 3
 Instr 3199 @ 0xc7f0 (51184) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3200 @ 0xc800 (51200) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3201 @ 0xc810 (51216) - @!P0 BRA 0xc9a0 ;
Basic block id 401 - num instructions 3
 Instr 3202 @ 0xc820 (51232) - MOV R0, 0x1 ;
 Instr 3203 @ 0xc830 (51248) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3204 @ 0xc840 (51264) - @!P0 BRA 0xc970 ;
Basic block id 402 - num instructions 18
 Instr 3205 @ 0xc850 (51280) - UMOV UR4, 0xfb1e1800 ;
 Instr 3206 @ 0xc860 (51296) - MOV R8, 0x2ea ;
 Instr 3207 @ 0xc870 (51312) - UMOV UR5, 0x7f88 ;
 Instr 3208 @ 0xc880 (51328) - IMAD.MOV.U32 R12, RZ, RZ, 0x1 ;
 Instr 3209 @ 0xc890 (51344) - UMOV UR6, 0xfb1e1600 ;
 Instr 3210 @ 0xc8a0 (51360) - MOV R13, RZ ;
 Instr 3211 @ 0xc8b0 (51376) - UMOV UR7, 0x7f88 ;
 Instr 3212 @ 0xc8c0 (51392) - MOV R4, UR4 ;
 Instr 3213 @ 0xc8d0 (51408) - UMOV UR8, 0xfb1d9900 ;
 Instr 3214 @ 0xc8e0 (51424) - IMAD.U32 R5, RZ, RZ, UR5 ;
 Instr 3215 @ 0xc8f0 (51440) - UMOV UR9, 0x7f88 ;
 Instr 3216 @ 0xc900 (51456) - MOV R6, UR6 ;
 Instr 3217 @ 0xc910 (51472) - IMAD.U32 R10, RZ, RZ, UR8 ;
 Instr 3218 @ 0xc920 (51488) - MOV R7, UR7 ;
 Instr 3219 @ 0xc930 (51504) - MOV R11, UR9 ;
 Instr 3220 @ 0xc940 (51520) - MOV R20, 0xe2992a70 ;
 Instr 3221 @ 0xc950 (51536) - MOV R21, 0x7f88 ;
 Instr 3222 @ 0xc960 (51552) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 403 - num instructions 3
 Instr 3223 @ 0xc970 (51568) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3224 @ 0xc980 (51584) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3225 @ 0xc990 (51600) - EXIT ;
Basic block id 404 - num instructions 2
 Instr 3226 @ 0xc9a0 (51616) - STG.E.64.SYS [R4], R16 ;
 Instr 3227 @ 0xc9b0 (51632) - EXIT ;
Basic block id 405 - num instructions 2
 Instr 3228 @ 0xc9c0 (51648) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
 Instr 3229 @ 0xc9d0 (51664) - @!P0 BRA 0xca30 ;
Basic block id 406 - num instructions 5
 Instr 3230 @ 0xc9e0 (51680) - LDG.E.64.SYS R2, [R8] ;
 Instr 3231 @ 0xc9f0 (51696) - DSETP.GTU.AND P0, PT, |R2|, +INF , PT ;
 Instr 3232 @ 0xca00 (51712) - DSETP.GT.OR P0, PT, R2, R16, P0 ;
 Instr 3233 @ 0xca10 (51728) - FSEL R16, R2, R16, P0 ;
 Instr 3234 @ 0xca20 (51744) - FSEL R17, R3, R17, P0 ;
Basic block id 407 - num instructions 3
 Instr 3235 @ 0xca30 (51760) - ULDC.U8 UR4, c[0x0][0x579] ;
 Instr 3236 @ 0xca40 (51776) - ISETP.NE.AND P0, PT, RZ, UR4, PT ;
 Instr 3237 @ 0xca50 (51792) - @!P0 BRA 0xcbe0 ;
Basic block id 408 - num instructions 3
 Instr 3238 @ 0xca60 (51808) - MOV R0, 0x1 ;
 Instr 3239 @ 0xca70 (51824) - ISETP.NE.AND P0, PT, R0, c[0x0][0x57c], PT ;
 Instr 3240 @ 0xca80 (51840) - @!P0 BRA 0xcbb0 ;
Basic block id 409 - num instructions 18
 Instr 3241 @ 0xca90 (51856) - UMOV UR4, 0xfb1e1800 ;
 Instr 3242 @ 0xcaa0 (51872) - IMAD.MOV.U32 R8, RZ, RZ, 0x2ea ;
 Instr 3243 @ 0xcab0 (51888) - UMOV UR5, 0x7f88 ;
 Instr 3244 @ 0xcac0 (51904) - MOV R12, 0x1 ;
 Instr 3245 @ 0xcad0 (51920) - UMOV UR6, 0xfb1e1600 ;
 Instr 3246 @ 0xcae0 (51936) - MOV R13, RZ ;
 Instr 3247 @ 0xcaf0 (51952) - UMOV UR7, 0x7f88 ;
 Instr 3248 @ 0xcb00 (51968) - IMAD.U32 R4, RZ, RZ, UR4 ;
 Instr 3249 @ 0xcb10 (51984) - UMOV UR8, 0xfb1d9900 ;
 Instr 3250 @ 0xcb20 (52000) - MOV R5, UR5 ;
 Instr 3251 @ 0xcb30 (52016) - UMOV UR9, 0x7f88 ;
 Instr 3252 @ 0xcb40 (52032) - MOV R6, UR6 ;
 Instr 3253 @ 0xcb50 (52048) - IMAD.U32 R7, RZ, RZ, UR7 ;
 Instr 3254 @ 0xcb60 (52064) - MOV R10, UR8 ;
 Instr 3255 @ 0xcb70 (52080) - MOV R11, UR9 ;
 Instr 3256 @ 0xcb80 (52096) - MOV R20, 0xe2992cb0 ;
 Instr 3257 @ 0xcb90 (52112) - MOV R21, 0x7f88 ;
 Instr 3258 @ 0xcba0 (52128) - CALL.ABS.NOINC 0x7f893af62600 ;
Basic block id 410 - num instructions 3
 Instr 3259 @ 0xcbb0 (52144) - ULDC.64 UR4, c[0x0][0x548] ;
 Instr 3260 @ 0xcbc0 (52160) - STG.E.64.SYS [R19.U32+UR4], R16 ;
 Instr 3261 @ 0xcbd0 (52176) - EXIT ;
Basic block id 411 - num instructions 2
 Instr 3262 @ 0xcbe0 (52192) - STG.E.64.SYS [R8], R16 ;
 Instr 3263 @ 0xcbf0 (52208) - EXIT ;
Basic block id 412 - num instructions 1
 Instr 3264 @ 0xcc00 (52224) - BRA 0xcc00;
inspecting void at::native::reduce_kernel<512, 1, at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MaxNanFunctor<double> >, unsigned int, double, 4, 4> >(at::native::ReduceOp<double, at::native::func_wrapper_t<double, at::native::MaxNanFunctor<double> >, unsigned int, double, 4, 4>) - number basic blocks 413
Inject count_instr before - Instr 0 @ 0x0 (0) - MOV R1, c[0x0][0x28] ;
Inject count_instr before - Instr 5 @ 0x50 (80) - S2R R3, SR_TID.Y ;
Inject count_instr before - Instr 19 @ 0x130 (304) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 27 @ 0x1b0 (432) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 35 @ 0x230 (560) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 43 @ 0x2b0 (688) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 51 @ 0x330 (816) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 67 @ 0x430 (1072) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 75 @ 0x4b0 (1200) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 91 @ 0x5b0 (1456) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 99 @ 0x630 (1584) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 115 @ 0x730 (1840) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 123 @ 0x7b0 (1968) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 131 @ 0x830 (2096) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 139 @ 0x8b0 (2224) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 147 @ 0x930 (2352) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 155 @ 0x9b0 (2480) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 163 @ 0xa30 (2608) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 171 @ 0xab0 (2736) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 195 @ 0xc30 (3120) - ISETP.NE.AND P0, PT, R0, 0x18, PT ;
Inject count_instr before - Instr 208 @ 0xd00 (3328) - S2R R0, SR_TID.Y ;
Inject count_instr before - Instr 222 @ 0xde0 (3552) - ULDC.U8 UR4, c[0x0][0x1a8] ;
Inject count_instr before - Instr 227 @ 0xe30 (3632) - SHF.R.U64 R8, R4, 0x3, R5 ;
Inject count_instr before - Instr 236 @ 0xec0 (3776) - ISETP.GE.U32.AND P0, PT, R7.reuse, R14, PT ;
Inject count_instr before - Instr 241 @ 0xf10 (3856) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x18c], PT ;
Inject count_instr before - Instr 247 @ 0xf70 (3952) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
Inject count_instr before - Instr 252 @ 0xfc0 (4032) - BSYNC B3 ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - IADD3 R9, P0, R7, -R14, RZ ;
Inject count_instr before - Instr 267 @ 0x10b0 (4272) - BSYNC B2 ;
Inject count_instr before - Instr 274 @ 0x1120 (4384) - BSYNC B1 ;
Inject count_instr before - Instr 288 @ 0x1200 (4608) - MOV R27, R12 ;
Inject count_instr before - Instr 293 @ 0x1250 (4688) - IMAD.WIDE.U32 R24, R27, 0x20, R4 ;
Inject count_instr before - Instr 316 @ 0x13c0 (5056) - BSYNC B1 ;
Inject count_instr before - Instr 321 @ 0x1410 (5136) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x190], PT ;
Inject count_instr before - Instr 326 @ 0x1460 (5216) - BSYNC B1 ;
Inject count_instr before - Instr 332 @ 0x14c0 (5312) - LOP3.LUT R6, R26, 0xfffffffc, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 336 @ 0x1500 (5376) - IMAD.WIDE R4, R9, 0x8, R4 ;
Inject count_instr before - Instr 342 @ 0x1560 (5472) - BSYNC B1 ;
Inject count_instr before - Instr 356 @ 0x1640 (5696) - IMAD.MOV.U32 R6, RZ, RZ, c[0x0][0x2e0] ;
Inject count_instr before - Instr 363 @ 0x16b0 (5808) - IMAD.MOV.U32 R26, RZ, RZ, c[0x0][0x17c] ;
Inject count_instr before - Instr 369 @ 0x1710 (5904) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
Inject count_instr before - Instr 379 @ 0x17b0 (6064) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 388 @ 0x1840 (6208) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 391 @ 0x1870 (6256) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 400 @ 0x1900 (6400) - MOV R18, RZ ;
Inject count_instr before - Instr 410 @ 0x19a0 (6560) - MOV R18, RZ ;
Inject count_instr before - Instr 419 @ 0x1a30 (6704) - MOV R19, R21 ;
Inject count_instr before - Instr 428 @ 0x1ac0 (6848) - MOV R18, RZ ;
Inject count_instr before - Instr 437 @ 0x1b50 (6992) - MOV R19, R21 ;
Inject count_instr before - Instr 446 @ 0x1be0 (7136) - MOV R18, RZ ;
Inject count_instr before - Instr 455 @ 0x1c70 (7280) - MOV R19, R21 ;
Inject count_instr before - Instr 464 @ 0x1d00 (7424) - MOV R18, RZ ;
Inject count_instr before - Instr 473 @ 0x1d90 (7568) - MOV R19, R21 ;
Inject count_instr before - Instr 482 @ 0x1e20 (7712) - MOV R18, RZ ;
Inject count_instr before - Instr 491 @ 0x1eb0 (7856) - MOV R19, R21 ;
Inject count_instr before - Instr 500 @ 0x1f40 (8000) - MOV R18, RZ ;
Inject count_instr before - Instr 509 @ 0x1fd0 (8144) - MOV R19, R21 ;
Inject count_instr before - Instr 518 @ 0x2060 (8288) - MOV R18, RZ ;
Inject count_instr before - Instr 527 @ 0x20f0 (8432) - MOV R19, R21 ;
Inject count_instr before - Instr 536 @ 0x2180 (8576) - MOV R18, RZ ;
Inject count_instr before - Instr 545 @ 0x2210 (8720) - MOV R19, R21 ;
Inject count_instr before - Instr 554 @ 0x22a0 (8864) - MOV R18, RZ ;
Inject count_instr before - Instr 563 @ 0x2330 (9008) - MOV R19, R21 ;
Inject count_instr before - Instr 572 @ 0x23c0 (9152) - MOV R18, RZ ;
Inject count_instr before - Instr 581 @ 0x2450 (9296) - MOV R19, R21 ;
Inject count_instr before - Instr 590 @ 0x24e0 (9440) - MOV R18, RZ ;
Inject count_instr before - Instr 599 @ 0x2570 (9584) - ISETP.NE.AND P0, PT, R20, 0x18, PT ;
Inject count_instr before - Instr 613 @ 0x2650 (9808) - LOP3.LUT R19, R10, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 619 @ 0x26b0 (9904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 628 @ 0x2740 (10048) - MOV R20, RZ ;
Inject count_instr before - Instr 637 @ 0x27d0 (10192) - MOV R21, R23 ;
Inject count_instr before - Instr 646 @ 0x2860 (10336) - MOV R20, RZ ;
Inject count_instr before - Instr 655 @ 0x28f0 (10480) - MOV R21, R23 ;
Inject count_instr before - Instr 664 @ 0x2980 (10624) - MOV R20, RZ ;
Inject count_instr before - Instr 673 @ 0x2a10 (10768) - MOV R21, R23 ;
Inject count_instr before - Instr 682 @ 0x2aa0 (10912) - MOV R20, RZ ;
Inject count_instr before - Instr 691 @ 0x2b30 (11056) - MOV R21, R23 ;
Inject count_instr before - Instr 700 @ 0x2bc0 (11200) - MOV R20, RZ ;
Inject count_instr before - Instr 709 @ 0x2c50 (11344) - MOV R21, R23 ;
Inject count_instr before - Instr 718 @ 0x2ce0 (11488) - MOV R20, RZ ;
Inject count_instr before - Instr 727 @ 0x2d70 (11632) - MOV R21, R23 ;
Inject count_instr before - Instr 736 @ 0x2e00 (11776) - MOV R20, RZ ;
Inject count_instr before - Instr 745 @ 0x2e90 (11920) - MOV R21, R23 ;
Inject count_instr before - Instr 754 @ 0x2f20 (12064) - MOV R20, RZ ;
Inject count_instr before - Instr 763 @ 0x2fb0 (12208) - MOV R21, R23 ;
Inject count_instr before - Instr 772 @ 0x3040 (12352) - MOV R20, RZ ;
Inject count_instr before - Instr 781 @ 0x30d0 (12496) - MOV R21, R23 ;
Inject count_instr before - Instr 790 @ 0x3160 (12640) - MOV R20, RZ ;
Inject count_instr before - Instr 799 @ 0x31f0 (12784) - MOV R21, R23 ;
Inject count_instr before - Instr 808 @ 0x3280 (12928) - MOV R20, RZ ;
Inject count_instr before - Instr 817 @ 0x3310 (13072) - MOV R21, R23 ;
Inject count_instr before - Instr 826 @ 0x33a0 (13216) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 840 @ 0x3480 (13440) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 848 @ 0x3500 (13568) - MOV R10, RZ ;
Inject count_instr before - Instr 857 @ 0x3590 (13712) - MOV R23, R25 ;
Inject count_instr before - Instr 866 @ 0x3620 (13856) - MOV R22, RZ ;
Inject count_instr before - Instr 875 @ 0x36b0 (14000) - MOV R23, R25 ;
Inject count_instr before - Instr 884 @ 0x3740 (14144) - MOV R22, RZ ;
Inject count_instr before - Instr 893 @ 0x37d0 (14288) - MOV R23, R25 ;
Inject count_instr before - Instr 902 @ 0x3860 (14432) - MOV R22, RZ ;
Inject count_instr before - Instr 911 @ 0x38f0 (14576) - MOV R23, R25 ;
Inject count_instr before - Instr 920 @ 0x3980 (14720) - MOV R22, RZ ;
Inject count_instr before - Instr 929 @ 0x3a10 (14864) - MOV R23, R25 ;
Inject count_instr before - Instr 938 @ 0x3aa0 (15008) - MOV R22, RZ ;
Inject count_instr before - Instr 947 @ 0x3b30 (15152) - MOV R23, R25 ;
Inject count_instr before - Instr 956 @ 0x3bc0 (15296) - MOV R22, RZ ;
Inject count_instr before - Instr 965 @ 0x3c50 (15440) - MOV R23, R25 ;
Inject count_instr before - Instr 974 @ 0x3ce0 (15584) - MOV R22, RZ ;
Inject count_instr before - Instr 983 @ 0x3d70 (15728) - MOV R23, R25 ;
Inject count_instr before - Instr 992 @ 0x3e00 (15872) - MOV R22, RZ ;
Inject count_instr before - Instr 1001 @ 0x3e90 (16016) - MOV R23, R25 ;
Inject count_instr before - Instr 1010 @ 0x3f20 (16160) - MOV R22, RZ ;
Inject count_instr before - Instr 1019 @ 0x3fb0 (16304) - MOV R23, R25 ;
Inject count_instr before - Instr 1028 @ 0x4040 (16448) - MOV R22, RZ ;
Inject count_instr before - Instr 1037 @ 0x40d0 (16592) - MOV R23, R25 ;
Inject count_instr before - Instr 1046 @ 0x4160 (16736) - MOV R22, RZ ;
Inject count_instr before - Instr 1055 @ 0x41f0 (16880) - ISETP.NE.AND P0, PT, R24, 0x18, PT ;
Inject count_instr before - Instr 1069 @ 0x42d0 (17104) - LOP3.LUT R23, R10, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1075 @ 0x4330 (17200) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 1084 @ 0x43c0 (17344) - MOV R24, RZ ;
Inject count_instr before - Instr 1093 @ 0x4450 (17488) - MOV R25, R27 ;
Inject count_instr before - Instr 1102 @ 0x44e0 (17632) - MOV R24, RZ ;
Inject count_instr before - Instr 1111 @ 0x4570 (17776) - MOV R25, R27 ;
Inject count_instr before - Instr 1120 @ 0x4600 (17920) - MOV R24, RZ ;
Inject count_instr before - Instr 1129 @ 0x4690 (18064) - MOV R25, R27 ;
Inject count_instr before - Instr 1138 @ 0x4720 (18208) - MOV R24, RZ ;
Inject count_instr before - Instr 1147 @ 0x47b0 (18352) - MOV R25, R27 ;
Inject count_instr before - Instr 1156 @ 0x4840 (18496) - MOV R24, RZ ;
Inject count_instr before - Instr 1165 @ 0x48d0 (18640) - MOV R25, R27 ;
Inject count_instr before - Instr 1174 @ 0x4960 (18784) - MOV R24, RZ ;
Inject count_instr before - Instr 1183 @ 0x49f0 (18928) - MOV R25, R27 ;
Inject count_instr before - Instr 1192 @ 0x4a80 (19072) - MOV R24, RZ ;
Inject count_instr before - Instr 1201 @ 0x4b10 (19216) - MOV R25, R27 ;
Inject count_instr before - Instr 1210 @ 0x4ba0 (19360) - MOV R24, RZ ;
Inject count_instr before - Instr 1219 @ 0x4c30 (19504) - MOV R25, R27 ;
Inject count_instr before - Instr 1228 @ 0x4cc0 (19648) - MOV R24, RZ ;
Inject count_instr before - Instr 1237 @ 0x4d50 (19792) - MOV R25, R27 ;
Inject count_instr before - Instr 1246 @ 0x4de0 (19936) - MOV R24, RZ ;
Inject count_instr before - Instr 1255 @ 0x4e70 (20080) - MOV R25, R27 ;
Inject count_instr before - Instr 1264 @ 0x4f00 (20224) - MOV R24, RZ ;
Inject count_instr before - Instr 1273 @ 0x4f90 (20368) - MOV R25, R27 ;
Inject count_instr before - Instr 1282 @ 0x5020 (20512) - ISETP.NE.AND P0, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1296 @ 0x5100 (20736) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1321 @ 0x5290 (21136) - BSYNC B2 ;
Inject count_instr before - Instr 1322 @ 0x52a0 (21152) - BSYNC B1 ;
Inject count_instr before - Instr 1327 @ 0x52f0 (21232) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x1b0], PT ;
Inject count_instr before - Instr 1330 @ 0x5320 (21280) - MOV R10, RZ ;
Inject count_instr before - Instr 1339 @ 0x53b0 (21424) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1347 @ 0x5430 (21552) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1355 @ 0x54b0 (21680) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1363 @ 0x5530 (21808) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1371 @ 0x55b0 (21936) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1379 @ 0x5630 (22064) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1387 @ 0x56b0 (22192) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1395 @ 0x5730 (22320) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1403 @ 0x57b0 (22448) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1411 @ 0x5830 (22576) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1419 @ 0x58b0 (22704) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1427 @ 0x5930 (22832) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1435 @ 0x59b0 (22960) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1443 @ 0x5a30 (23088) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1451 @ 0x5ab0 (23216) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1459 @ 0x5b30 (23344) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1467 @ 0x5bb0 (23472) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1475 @ 0x5c30 (23600) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1483 @ 0x5cb0 (23728) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1491 @ 0x5d30 (23856) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1499 @ 0x5db0 (23984) - IMAD.MOV.U32 R18, RZ, RZ, RZ ;
Inject count_instr before - Instr 1507 @ 0x5e30 (24112) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1515 @ 0x5eb0 (24240) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1528 @ 0x5f80 (24448) - LOP3.LUT R19, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1533 @ 0x5fd0 (24528) - ISETP.GE.U32.AND P2, PT, R27, c[0x0][0x174], PT ;
Inject count_instr before - Instr 1535 @ 0x5ff0 (24560) - MOV R6, RZ ;
Inject count_instr before - Instr 1537 @ 0x6010 (24592) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1546 @ 0x60a0 (24736) - MOV R20, RZ ;
Inject count_instr before - Instr 1554 @ 0x6120 (24864) - MOV R28, RZ ;
Inject count_instr before - Instr 1562 @ 0x61a0 (24992) - MOV R20, RZ ;
Inject count_instr before - Instr 1570 @ 0x6220 (25120) - MOV R28, RZ ;
Inject count_instr before - Instr 1578 @ 0x62a0 (25248) - MOV R20, RZ ;
Inject count_instr before - Instr 1586 @ 0x6320 (25376) - MOV R28, RZ ;
Inject count_instr before - Instr 1594 @ 0x63a0 (25504) - MOV R20, RZ ;
Inject count_instr before - Instr 1602 @ 0x6420 (25632) - MOV R28, RZ ;
Inject count_instr before - Instr 1610 @ 0x64a0 (25760) - MOV R20, RZ ;
Inject count_instr before - Instr 1618 @ 0x6520 (25888) - MOV R28, RZ ;
Inject count_instr before - Instr 1626 @ 0x65a0 (26016) - MOV R20, RZ ;
Inject count_instr before - Instr 1634 @ 0x6620 (26144) - MOV R28, RZ ;
Inject count_instr before - Instr 1642 @ 0x66a0 (26272) - MOV R20, RZ ;
Inject count_instr before - Instr 1650 @ 0x6720 (26400) - MOV R28, RZ ;
Inject count_instr before - Instr 1658 @ 0x67a0 (26528) - MOV R20, RZ ;
Inject count_instr before - Instr 1666 @ 0x6820 (26656) - MOV R28, RZ ;
Inject count_instr before - Instr 1674 @ 0x68a0 (26784) - MOV R20, RZ ;
Inject count_instr before - Instr 1682 @ 0x6920 (26912) - MOV R28, RZ ;
Inject count_instr before - Instr 1690 @ 0x69a0 (27040) - MOV R20, RZ ;
Inject count_instr before - Instr 1698 @ 0x6a20 (27168) - MOV R28, RZ ;
Inject count_instr before - Instr 1706 @ 0x6aa0 (27296) - MOV R20, RZ ;
Inject count_instr before - Instr 1714 @ 0x6b20 (27424) - MOV R28, RZ ;
Inject count_instr before - Instr 1722 @ 0x6ba0 (27552) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1735 @ 0x6c70 (27760) - LOP3.LUT R21, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1742 @ 0x6ce0 (27872) - IMAD.MOV.U32 R6, RZ, RZ, RZ ;
Inject count_instr before - Instr 1744 @ 0x6d00 (27904) - MOV R26, RZ ;
Inject count_instr before - Instr 1753 @ 0x6d90 (28048) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1761 @ 0x6e10 (28176) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1769 @ 0x6e90 (28304) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1777 @ 0x6f10 (28432) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1785 @ 0x6f90 (28560) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1793 @ 0x7010 (28688) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1801 @ 0x7090 (28816) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1809 @ 0x7110 (28944) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1817 @ 0x7190 (29072) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1825 @ 0x7210 (29200) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1833 @ 0x7290 (29328) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1841 @ 0x7310 (29456) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1849 @ 0x7390 (29584) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1857 @ 0x7410 (29712) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1865 @ 0x7490 (29840) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1873 @ 0x7510 (29968) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1881 @ 0x7590 (30096) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1889 @ 0x7610 (30224) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1897 @ 0x7690 (30352) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1905 @ 0x7710 (30480) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1913 @ 0x7790 (30608) - IMAD.MOV.U32 R22, RZ, RZ, RZ ;
Inject count_instr before - Instr 1921 @ 0x7810 (30736) - IMAD.MOV.U32 R28, RZ, RZ, RZ ;
Inject count_instr before - Instr 1929 @ 0x7890 (30864) - ISETP.NE.AND P2, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 1942 @ 0x7960 (31072) - LOP3.LUT R23, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 1949 @ 0x79d0 (31184) - MOV R6, RZ ;
Inject count_instr before - Instr 1951 @ 0x79f0 (31216) - IMAD.MOV.U32 R26, RZ, RZ, RZ ;
Inject count_instr before - Instr 1960 @ 0x7a80 (31360) - MOV R24, RZ ;
Inject count_instr before - Instr 1968 @ 0x7b00 (31488) - MOV R26, RZ ;
Inject count_instr before - Instr 1976 @ 0x7b80 (31616) - MOV R24, RZ ;
Inject count_instr before - Instr 1984 @ 0x7c00 (31744) - MOV R26, RZ ;
Inject count_instr before - Instr 1992 @ 0x7c80 (31872) - MOV R24, RZ ;
Inject count_instr before - Instr 2000 @ 0x7d00 (32000) - MOV R26, RZ ;
Inject count_instr before - Instr 2008 @ 0x7d80 (32128) - MOV R24, RZ ;
Inject count_instr before - Instr 2016 @ 0x7e00 (32256) - MOV R26, RZ ;
Inject count_instr before - Instr 2024 @ 0x7e80 (32384) - MOV R24, RZ ;
Inject count_instr before - Instr 2032 @ 0x7f00 (32512) - MOV R26, RZ ;
Inject count_instr before - Instr 2040 @ 0x7f80 (32640) - MOV R24, RZ ;
Inject count_instr before - Instr 2048 @ 0x8000 (32768) - MOV R26, RZ ;
Inject count_instr before - Instr 2056 @ 0x8080 (32896) - MOV R24, RZ ;
Inject count_instr before - Instr 2064 @ 0x8100 (33024) - MOV R26, RZ ;
Inject count_instr before - Instr 2072 @ 0x8180 (33152) - MOV R24, RZ ;
Inject count_instr before - Instr 2080 @ 0x8200 (33280) - MOV R26, RZ ;
Inject count_instr before - Instr 2088 @ 0x8280 (33408) - MOV R24, RZ ;
Inject count_instr before - Instr 2096 @ 0x8300 (33536) - MOV R26, RZ ;
Inject count_instr before - Instr 2104 @ 0x8380 (33664) - MOV R24, RZ ;
Inject count_instr before - Instr 2112 @ 0x8400 (33792) - MOV R26, RZ ;
Inject count_instr before - Instr 2120 @ 0x8480 (33920) - MOV R24, RZ ;
Inject count_instr before - Instr 2128 @ 0x8500 (34048) - MOV R26, RZ ;
Inject count_instr before - Instr 2136 @ 0x8580 (34176) - ISETP.NE.AND P1, PT, R10, 0x18, PT ;
Inject count_instr before - Instr 2149 @ 0x8650 (34384) - LOP3.LUT R25, R6, 0xfffffff8, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 2153 @ 0x8690 (34448) - BSYNC B1 ;
Inject count_instr before - Instr 2157 @ 0x86d0 (34512) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2163 @ 0x8730 (34608) - @P1 BRA 0x8870 ;
Inject count_instr before - Instr 2164 @ 0x8740 (34624) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2171 @ 0x87b0 (34736) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2183 @ 0x8870 (34928) - BSYNC B1 ;
Inject count_instr before - Instr 2197 @ 0x8950 (35152) - ISETP.GE.U32.AND P0, PT, R10, c[0x0][0x174], PT ;
Inject count_instr before - Instr 2207 @ 0x89f0 (35312) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 2214 @ 0x8a60 (35424) - MOV R15, c[0x0][0x16c] ;
Inject count_instr before - Instr 2215 @ 0x8a70 (35440) - IADD3 R21, R11, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2250 @ 0x8ca0 (36000) - BSYNC B2 ;
Inject count_instr before - Instr 2255 @ 0x8cf0 (36080) - BSYNC B1 ;
Inject count_instr before - Instr 2260 @ 0x8d40 (36160) - IMAD R27, R6, R11, RZ ;
Inject count_instr before - Instr 2266 @ 0x8da0 (36256) - IMAD R21, R6, R25, RZ ;
Inject count_instr before - Instr 2272 @ 0x8e00 (36352) - IADD3 R29, R25, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2280 @ 0x8e80 (36480) - BSYNC B1 ;
Inject count_instr before - Instr 2284 @ 0x8ec0 (36544) - IADD3 R4, R11, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2290 @ 0x8f20 (36640) - @P1 BRA 0x9060 ;
Inject count_instr before - Instr 2291 @ 0x8f30 (36656) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2298 @ 0x8fa0 (36768) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2310 @ 0x9060 (36960) - BSYNC B1 ;
Inject count_instr before - Instr 2324 @ 0x9140 (37184) - IMAD.MOV.U32 R24, RZ, RZ, c[0x0][0x17c] ;
Inject count_instr before - Instr 2339 @ 0x9230 (37424) - BMOV.32.CLEAR RZ, B2 ;
Inject count_instr before - Instr 2347 @ 0x92b0 (37552) - IADD3 R19, R25.reuse, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2378 @ 0x94a0 (38048) - BSYNC B2 ;
Inject count_instr before - Instr 2379 @ 0x94b0 (38064) - BSYNC B1 ;
Inject count_instr before - Instr 2384 @ 0x9500 (38144) - IMAD.WIDE.U32 R16, R25, 0x8, R4 ;
Inject count_instr before - Instr 2389 @ 0x9550 (38224) - IMAD.WIDE.U32 R18, R27, 0x8, R4 ;
Inject count_instr before - Instr 2394 @ 0x95a0 (38304) - IADD3 R29, R27.reuse, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2400 @ 0x9600 (38400) - BSYNC B1 ;
Inject count_instr before - Instr 2404 @ 0x9640 (38464) - IADD3 R4, R25, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2410 @ 0x96a0 (38560) - @P1 BRA 0x97e0 ;
Inject count_instr before - Instr 2411 @ 0x96b0 (38576) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2418 @ 0x9720 (38688) - IADD3 R4, R4, c[0x0][0x17c], RZ ;
Inject count_instr before - Instr 2430 @ 0x97e0 (38880) - BSYNC B1 ;
Inject count_instr before - Instr 2443 @ 0x98b0 (39088) - BSYNC B0 ;
Inject count_instr before - Instr 2446 @ 0x98e0 (39136) - IMAD R9, R0, c[0x0][0x0], R7 ;
Inject count_instr before - Instr 2452 @ 0x9940 (39232) - IMAD.U32 R11, RZ, RZ, UR4 ;
Inject count_instr before - Instr 2453 @ 0x9950 (39248) - IADD3 R4, R0, R11, RZ ;
Inject count_instr before - Instr 2469 @ 0x9a50 (39504) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 2471 @ 0x9a70 (39536) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x0] ;
Inject count_instr before - Instr 2475 @ 0x9ab0 (39600) - IMAD R9, R0, c[0x0][0x0], R7 ;
Inject count_instr before - Instr 2482 @ 0x9b20 (39712) - MOV R6, R4 ;
Inject count_instr before - Instr 2484 @ 0x9b40 (39744) - IMAD.IADD R4, R7, 0x1, R6 ;
Inject count_instr before - Instr 2500 @ 0x9c40 (40000) - IMAD.MOV.U32 R6, RZ, RZ, 0x20 ;
Inject count_instr before - Instr 2501 @ 0x9c50 (40016) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 2504 @ 0x9c80 (40064) - MOV R9, 0x1 ;
Inject count_instr before - Instr 2505 @ 0x9c90 (40080) - SHFL.DOWN PT, R5, R17, R9, 0x1f ;
Inject count_instr before - Instr 2516 @ 0x9d40 (40256) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x344], PT ;
Inject count_instr before - Instr 2519 @ 0x9d70 (40304) - IMAD.MOV.U32 R2, RZ, RZ, RZ ;
Inject count_instr before - Instr 2528 @ 0x9e00 (40448) - MOV R4, RZ ;
Inject count_instr before - Instr 2537 @ 0x9e90 (40592) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2545 @ 0x9f10 (40720) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2553 @ 0x9f90 (40848) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2561 @ 0xa010 (40976) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2569 @ 0xa090 (41104) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2577 @ 0xa110 (41232) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2585 @ 0xa190 (41360) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2593 @ 0xa210 (41488) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2601 @ 0xa290 (41616) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2609 @ 0xa310 (41744) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2617 @ 0xa390 (41872) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2625 @ 0xa410 (42000) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2633 @ 0xa490 (42128) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2641 @ 0xa510 (42256) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2649 @ 0xa590 (42384) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2657 @ 0xa610 (42512) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2665 @ 0xa690 (42640) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2673 @ 0xa710 (42768) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2681 @ 0xa790 (42896) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2689 @ 0xa810 (43024) - IMAD.MOV.U32 R4, RZ, RZ, RZ ;
Inject count_instr before - Instr 2697 @ 0xa890 (43152) - IMAD.MOV.U32 R8, RZ, RZ, RZ ;
Inject count_instr before - Instr 2705 @ 0xa910 (43280) - ISETP.NE.AND P0, PT, R6, 0x18, PT ;
Inject count_instr before - Instr 2718 @ 0xa9e0 (43488) - ISETP.NE.U32.AND P0, PT, RZ, c[0x0][0x558], PT ;
Inject count_instr before - Instr 2729 @ 0xaa90 (43664) - S2R R2, SR_CTAID.X ;
Inject count_instr before - Instr 2735 @ 0xaaf0 (43760) - MOV R8, RZ ;
Inject count_instr before - Instr 2744 @ 0xab80 (43904) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2752 @ 0xac00 (44032) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2760 @ 0xac80 (44160) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2768 @ 0xad00 (44288) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2776 @ 0xad80 (44416) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2784 @ 0xae00 (44544) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2792 @ 0xae80 (44672) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2800 @ 0xaf00 (44800) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2808 @ 0xaf80 (44928) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2816 @ 0xb000 (45056) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2824 @ 0xb080 (45184) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2832 @ 0xb100 (45312) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2840 @ 0xb180 (45440) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2848 @ 0xb200 (45568) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2856 @ 0xb280 (45696) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2864 @ 0xb300 (45824) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2872 @ 0xb380 (45952) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2880 @ 0xb400 (46080) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2888 @ 0xb480 (46208) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2896 @ 0xb500 (46336) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2904 @ 0xb580 (46464) - IMAD.MOV.U32 R10, RZ, RZ, RZ ;
Inject count_instr before - Instr 2912 @ 0xb600 (46592) - IMAD.MOV.U32 R12, RZ, RZ, RZ ;
Inject count_instr before - Instr 2920 @ 0xb680 (46720) - ISETP.NE.AND P0, PT, R14, 0x18, PT ;
Inject count_instr before - Instr 2933 @ 0xb750 (46928) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 2940 @ 0xb7c0 (47040) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x18c], PT ;
Inject count_instr before - Instr 2945 @ 0xb810 (47120) - BSYNC B0 ;
Inject count_instr before - Instr 2964 @ 0xb940 (47424) - S2R R3, SR_LANEID ;
Inject count_instr before - Instr 2983 @ 0xba70 (47728) - BSYNC B0 ;
Inject count_instr before - Instr 2990 @ 0xbae0 (47840) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x188], PT ;
Inject count_instr before - Instr 2999 @ 0xbb70 (47984) - IMAD R3, R0, c[0x0][0x0], R7 ;
Inject count_instr before - Instr 3004 @ 0xbbc0 (48064) - MOV R11, 0x8 ;
Inject count_instr before - Instr 3016 @ 0xbc80 (48256) - BSYNC B1 ;
Inject count_instr before - Instr 3018 @ 0xbca0 (48288) - ISETP.GE.U32.AND P0, PT, R0, c[0x0][0x184], PT ;
Inject count_instr before - Instr 3020 @ 0xbcc0 (48320) - MOV R3, R0 ;
Inject count_instr before - Instr 3021 @ 0xbcd0 (48336) - IMAD R10, R2, c[0x0][0x10], R3 ;
Inject count_instr before - Instr 3033 @ 0xbd90 (48528) - BSYNC B0 ;
Inject count_instr before - Instr 3041 @ 0xbe10 (48656) - IMAD.U32 R11, RZ, RZ, UR4 ;
Inject count_instr before - Instr 3042 @ 0xbe20 (48672) - IADD3 R2, R0, R11, RZ ;
Inject count_instr before - Instr 3058 @ 0xbf20 (48928) - LEA R11, R13, 0x10, 0x3 ;
Inject count_instr before - Instr 3060 @ 0xbf40 (48960) - MOV R2, c[0x0][0x0] ;
Inject count_instr before - Instr 3064 @ 0xbf80 (49024) - LEA.HI R2, R2, c[0x0][0x0], RZ, 0x1 ;
Inject count_instr before - Instr 3070 @ 0xbfe0 (49120) - MOV R0, R2 ;
Inject count_instr before - Instr 3071 @ 0xbff0 (49136) - IADD3 R2, R7, R0, RZ ;
Inject count_instr before - Instr 3087 @ 0xc0f0 (49392) - IMAD.MOV.U32 R0, RZ, RZ, 0x20 ;
Inject count_instr before - Instr 3088 @ 0xc100 (49408) - BAR.SYNC 0x0 ;
Inject count_instr before - Instr 3091 @ 0xc130 (49456) - MOV R7, 0x1 ;
Inject count_instr before - Instr 3092 @ 0xc140 (49472) - SHFL.DOWN PT, R3, R17, R7, 0x1f ;
Inject count_instr before - Instr 3103 @ 0xc1f0 (49648) - @!P2 EXIT ;
Inject count_instr before - Instr 3104 @ 0xc200 (49664) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
Inject count_instr before - Instr 3108 @ 0xc240 (49728) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3110 @ 0xc260 (49760) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 3115 @ 0xc2b0 (49840) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3118 @ 0xc2e0 (49888) - MOV R0, 0x1 ;
Inject count_instr before - Instr 3121 @ 0xc310 (49936) - UMOV UR8, 0xfb1e1800 ;
Inject count_instr before - Instr 3139 @ 0xc430 (50224) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3142 @ 0xc460 (50272) - STG.E.64.SYS [R4], R16 ;
Inject count_instr before - Instr 3144 @ 0xc480 (50304) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3146 @ 0xc4a0 (50336) - LDG.E.64.SYS R2, [R8] ;
Inject count_instr before - Instr 3151 @ 0xc4f0 (50416) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3154 @ 0xc520 (50464) - IMAD.MOV.U32 R0, RZ, RZ, 0x1 ;
Inject count_instr before - Instr 3157 @ 0xc550 (50512) - UMOV UR4, 0xfb1e1800 ;
Inject count_instr before - Instr 3175 @ 0xc670 (50800) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3178 @ 0xc6a0 (50848) - STG.E.64.SYS [R8], R16 ;
Inject count_instr before - Instr 3180 @ 0xc6c0 (50880) - ISETP.GE.AND P0, PT, R3, c[0x0][0x178], PT ;
Inject count_instr before - Instr 3182 @ 0xc6e0 (50912) - ISETP.NE.AND P1, PT, R7, RZ, PT ;
Inject count_instr before - Instr 3185 @ 0xc710 (50960) - ISETP.NE.AND P1, PT, R0, RZ, PT ;
Inject count_instr before - Instr 3188 @ 0xc740 (51008) - ISETP.NE.U32.AND P0, PT, R4, RZ, PT ;
Inject count_instr before - Instr 3192 @ 0xc780 (51072) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3194 @ 0xc7a0 (51104) - LDG.E.64.SYS R2, [R4] ;
Inject count_instr before - Instr 3199 @ 0xc7f0 (51184) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3202 @ 0xc820 (51232) - MOV R0, 0x1 ;
Inject count_instr before - Instr 3205 @ 0xc850 (51280) - UMOV UR4, 0xfb1e1800 ;
Inject count_instr before - Instr 3223 @ 0xc970 (51568) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3226 @ 0xc9a0 (51616) - STG.E.64.SYS [R4], R16 ;
Inject count_instr before - Instr 3228 @ 0xc9c0 (51648) - ISETP.NE.AND P0, PT, RZ, UR36, PT ;
Inject count_instr before - Instr 3230 @ 0xc9e0 (51680) - LDG.E.64.SYS R2, [R8] ;
Inject count_instr before - Instr 3235 @ 0xca30 (51760) - ULDC.U8 UR4, c[0x0][0x579] ;
Inject count_instr before - Instr 3238 @ 0xca60 (51808) - MOV R0, 0x1 ;
Inject count_instr before - Instr 3241 @ 0xca90 (51856) - UMOV UR4, 0xfb1e1800 ;
Inject count_instr before - Instr 3259 @ 0xcbb0 (52144) - ULDC.64 UR4, c[0x0][0x548] ;
Inject count_instr before - Instr 3262 @ 0xcbe0 (52192) - STG.E.64.SYS [R8], R16 ;
Inject count_instr before - Instr 3264 @ 0xcc00 (52224) - BRA 0xcc00;
kernel 281 - _ZN2at6native13reduce_kernelILi512ELi1ENS0_8ReduceOpIdNS0_14func_wrapper_tIdNS0_13MaxNanFunctorIdEEEEjdLi4ELi4EEEEEvT1_ - #thread-blocks 1,  kernel instructions 1067, total instructions 65672533
Function void at::native::vectorized_elementwise_kernel<8, at::native::ceil_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul> >(int, at::native::ceil_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul>)
Basic block id 0 - num instructions 7
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R3, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - S2R R0, SR_TID.X ;
 Instr 3 @ 0x30 (48) - IMAD.SHL.U32 R3, R3, 0x400, RZ ;
 Instr 4 @ 0x40 (64) - IADD3 R7, -R3, c[0x0][0x160], RZ ;
 Instr 5 @ 0x50 (80) - ISETP.GE.U32.AND P0, PT, R7, 0x400, PT ;
 Instr 6 @ 0x60 (96) - @!P0 BRA 0x2b0 ;
Basic block id 1 - num instructions 36
 Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R16, RZ, RZ, 0x2 ;
 Instr 8 @ 0x80 (128) - IMAD.WIDE R4, R3, R16, c[0x0][0x170] ;
 Instr 9 @ 0x90 (144) - IMAD.WIDE.U32 R4, R0, 0x10, R4 ;
 Instr 10 @ 0xa0 (160) - LDG.E.128.SYS R4, [R4] ;
 Instr 11 @ 0xb0 (176) - HADD2.F32 R2, R4.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 12 @ 0xc0 (192) - HADD2.F32 R9, R4.H1_H1, -RZ.H0_H0 ;
 Instr 13 @ 0xd0 (208) - HADD2.F32 R12, R6.H0_H0, -RZ.H0_H0 ;
 Instr 14 @ 0xe0 (224) - HADD2.F32 R4, R7.H1_H1, -RZ.H0_H0 ;
 Instr 15 @ 0xf0 (240) - HADD2.F32 R10, R5.reuse.H0_H0, -RZ.H0_H0 ;
 Instr 16 @ 0x100 (256) - FRND.CEIL R8, R2 ;
 Instr 17 @ 0x110 (272) - HADD2.F32 R11, R5.H1_H1, -RZ.H0_H0 ;
 Instr 18 @ 0x120 (288) - HADD2.F32 R6, R6.H1_H1, -RZ.H0_H0 ;
 Instr 19 @ 0x130 (304) - HADD2.F32 R7, R7.H0_H0, -RZ.H0_H0 ;
 Instr 20 @ 0x140 (320) - FRND.CEIL R9, R9 ;
 Instr 21 @ 0x150 (336) - IMAD.WIDE.U32 R2, R3, R16, c[0x0][0x168] ;
 Instr 22 @ 0x160 (352) - IMAD.WIDE R2, R0, 0x10, R2 ;
 Instr 23 @ 0x170 (368) - FRND.CEIL R10, R10 ;
 Instr 24 @ 0x180 (384) - FRND.CEIL R11, R11 ;
 Instr 25 @ 0x190 (400) - FRND.CEIL R12, R12 ;
 Instr 26 @ 0x1a0 (416) - FRND.CEIL R6, R6 ;
 Instr 27 @ 0x1b0 (432) - FRND.CEIL R4, R4 ;
 Instr 28 @ 0x1c0 (448) - FRND.CEIL R7, R7 ;
 Instr 29 @ 0x1d0 (464) - F2F.F16.F32 R9, R9 ;
 Instr 30 @ 0x1e0 (480) - F2F.F16.F32 R8, R8 ;
 Instr 31 @ 0x1f0 (496) - F2F.F16.F32 R5, R11 ;
 Instr 32 @ 0x200 (512) - F2F.F16.F32 R10, R10 ;
 Instr 33 @ 0x210 (528) - F2F.F16.F32 R13, R6 ;
 Instr 34 @ 0x220 (544) - F2F.F16.F32 R12, R12 ;
 Instr 35 @ 0x230 (560) - PRMT R5, R10, 0x5410, R5 ;
 Instr 36 @ 0x240 (576) - F2F.F16.F32 R14, R4 ;
 Instr 37 @ 0x250 (592) - F2F.F16.F32 R15, R7 ;
 Instr 38 @ 0x260 (608) - PRMT R4, R8, 0x5410, R9 ;
 Instr 39 @ 0x270 (624) - PRMT R6, R12, 0x5410, R13 ;
 Instr 40 @ 0x280 (640) - PRMT R7, R15, 0x5410, R14 ;
 Instr 41 @ 0x290 (656) - STG.E.128.SYS [R2], R4 ;
 Instr 42 @ 0x2a0 (672) - EXIT ;
Basic block id 2 - num instructions 12
 Instr 43 @ 0x2b0 (688) - ISETP.GE.AND P6, PT, R0, R7, PT ;
 Instr 44 @ 0x2c0 (704) - BMOV.32.CLEAR RZ, B0 ;
 Instr 45 @ 0x2d0 (720) - BSSY B0, 0x570 ;
 Instr 46 @ 0x2e0 (736) - PRMT R2, RZ, 0x7610, R2 ;
 Instr 47 @ 0x2f0 (752) - PRMT R6, RZ, 0x7610, R6 ;
 Instr 48 @ 0x300 (768) - PRMT R8, RZ, 0x7610, R8 ;
 Instr 49 @ 0x310 (784) - PRMT R9, RZ, 0x7610, R9 ;
 Instr 50 @ 0x320 (800) - PRMT R10, RZ, 0x7610, R10 ;
 Instr 51 @ 0x330 (816) - PRMT R11, RZ, 0x7610, R11 ;
 Instr 52 @ 0x340 (832) - PRMT R12, RZ, 0x7610, R12 ;
 Instr 53 @ 0x350 (848) - PRMT R13, RZ, 0x7610, R13 ;
 Instr 54 @ 0x360 (864) - @P6 BRA 0x560 ;
Basic block id 3 - num instructions 7
 Instr 55 @ 0x370 (880) - IMAD.IADD R4, R3, 0x1, R0 ;
 Instr 56 @ 0x380 (896) - IMAD.MOV.U32 R5, RZ, RZ, 0x2 ;
 Instr 57 @ 0x390 (912) - IMAD.WIDE.U32 R4, R4, R5, c[0x0][0x170] ;
 Instr 58 @ 0x3a0 (928) - LDG.E.U16.SYS R13, [R4] ;
 Instr 59 @ 0x3b0 (944) - IADD3 R14, R0, 0x80, RZ ;
 Instr 60 @ 0x3c0 (960) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 61 @ 0x3d0 (976) - @P0 BRA 0x560 ;
Basic block id 4 - num instructions 4
 Instr 62 @ 0x3e0 (992) - LDG.E.U16.SYS R12, [R4+0x100] ;
 Instr 63 @ 0x3f0 (1008) - IADD3 R14, R0, 0x100, RZ ;
 Instr 64 @ 0x400 (1024) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 65 @ 0x410 (1040) - @P0 BRA 0x560 ;
Basic block id 5 - num instructions 4
 Instr 66 @ 0x420 (1056) - LDG.E.U16.SYS R11, [R4+0x200] ;
 Instr 67 @ 0x430 (1072) - IADD3 R14, R0, 0x180, RZ ;
 Instr 68 @ 0x440 (1088) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 69 @ 0x450 (1104) - @P0 BRA 0x560 ;
Basic block id 6 - num instructions 4
 Instr 70 @ 0x460 (1120) - LDG.E.U16.SYS R10, [R4+0x300] ;
 Instr 71 @ 0x470 (1136) - IADD3 R14, R0, 0x200, RZ ;
 Instr 72 @ 0x480 (1152) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 73 @ 0x490 (1168) - @P0 BRA 0x560 ;
Basic block id 7 - num instructions 4
 Instr 74 @ 0x4a0 (1184) - LDG.E.U16.SYS R9, [R4+0x400] ;
 Instr 75 @ 0x4b0 (1200) - IADD3 R14, R0, 0x280, RZ ;
 Instr 76 @ 0x4c0 (1216) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 77 @ 0x4d0 (1232) - @P0 BRA 0x560 ;
Basic block id 8 - num instructions 4
 Instr 78 @ 0x4e0 (1248) - LDG.E.U16.SYS R8, [R4+0x500] ;
 Instr 79 @ 0x4f0 (1264) - IADD3 R14, R0, 0x300, RZ ;
 Instr 80 @ 0x500 (1280) - ISETP.GE.AND P0, PT, R14, R7, PT ;
 Instr 81 @ 0x510 (1296) - @P0 BRA 0x560 ;
Basic block id 9 - num instructions 4
 Instr 82 @ 0x520 (1312) - IADD3 R6, R0, 0x380, RZ ;
 Instr 83 @ 0x530 (1328) - ISETP.GE.AND P0, PT, R6, R7, PT ;
 Instr 84 @ 0x540 (1344) - LDG.E.U16.SYS R6, [R4+0x600] ;
 Instr 85 @ 0x550 (1360) - @!P0 LDG.E.U16.SYS R2, [R4+0x700] ;
Basic block id 10 - num instructions 39
 Instr 86 @ 0x560 (1376) - BSYNC B0 ;
 Instr 87 @ 0x570 (1392) - IADD3 R4, R0.reuse, 0x80, RZ ;
 Instr 88 @ 0x580 (1408) - @!P6 HADD2.F32 R13, R13.H0_H0, -RZ.H0_H0 ;
 Instr 89 @ 0x590 (1424) - IADD3 R14, R0, 0x180, RZ ;
 Instr 90 @ 0x5a0 (1440) - ISETP.GE.AND P4, PT, R4, R7.reuse, PT ;
 Instr 91 @ 0x5b0 (1456) - IADD3 R4, R0, 0x100, RZ ;
 Instr 92 @ 0x5c0 (1472) - ISETP.GE.AND P1, PT, R14, R7.reuse, PT ;
 Instr 93 @ 0x5d0 (1488) - @!P6 FRND.CEIL R13, R13 ;
 Instr 94 @ 0x5e0 (1504) - ISETP.GE.AND P0, PT, R4, R7, PT ;
 Instr 95 @ 0x5f0 (1520) - IADD3 R4, R0.reuse, 0x200, RZ ;
 Instr 96 @ 0x600 (1536) - IADD3 R14, R0, 0x280, RZ ;
 Instr 97 @ 0x610 (1552) - @!P4 HADD2.F32 R12, R12.H0_H0, -RZ.H0_H0 ;
 Instr 98 @ 0x620 (1568) - ISETP.GE.AND P2, PT, R4, R7.reuse, PT ;
 Instr 99 @ 0x630 (1584) - ISETP.GE.AND P3, PT, R14, R7, PT ;
 Instr 100 @ 0x640 (1600) - @!P1 HADD2.F32 R10, R10.H0_H0, -RZ.H0_H0 ;
 Instr 101 @ 0x650 (1616) - IADD3 R14, R0, 0x300, RZ ;
 Instr 102 @ 0x660 (1632) - @!P0 HADD2.F32 R11, R11.H0_H0, -RZ.H0_H0 ;
 Instr 103 @ 0x670 (1648) - P2R R16, PR, RZ, 0x10 ;
 Instr 104 @ 0x680 (1664) - @!P4 FRND.CEIL R12, R12 ;
 Instr 105 @ 0x690 (1680) - @!P2 HADD2.F32 R4, R9.H0_H0, -RZ.H0_H0 ;
 Instr 106 @ 0x6a0 (1696) - @!P3 HADD2.F32 R8, R8.H0_H0, -RZ.H0_H0 ;
 Instr 107 @ 0x6b0 (1712) - @!P0 FRND.CEIL R11, R11 ;
 Instr 108 @ 0x6c0 (1728) - @!P4 F2F.F16.F32 R15, R12 ;
 Instr 109 @ 0x6d0 (1744) - ISETP.GE.AND P4, PT, R14, R7, PT ;
 Instr 110 @ 0x6e0 (1760) - IADD3 R12, R0, 0x380, RZ ;
 Instr 111 @ 0x6f0 (1776) - @!P1 FRND.CEIL R10, R10 ;
 Instr 112 @ 0x700 (1792) - ISETP.GE.AND P5, PT, R12, R7, PT ;
 Instr 113 @ 0x710 (1808) - @!P4 HADD2.F32 R6, R6.H0_H0, -RZ.H0_H0 ;
 Instr 114 @ 0x720 (1824) - @!P2 FRND.CEIL R4, R4 ;
 Instr 115 @ 0x730 (1840) - @!P5 HADD2.F32 R2, R2.H0_H0, -RZ.H0_H0 ;
 Instr 116 @ 0x740 (1856) - @!P3 FRND.CEIL R8, R8 ;
 Instr 117 @ 0x750 (1872) - @!P6 F2F.F16.F32 R5, R13 ;
 Instr 118 @ 0x760 (1888) - @!P0 F2F.F16.F32 R9, R11 ;
 Instr 119 @ 0x770 (1904) - @!P1 F2F.F16.F32 R17, R10 ;
 Instr 120 @ 0x780 (1920) - @!P2 F2F.F16.F32 R19, R4 ;
 Instr 121 @ 0x790 (1936) - @!P3 F2F.F16.F32 R21, R8 ;
 Instr 122 @ 0x7a0 (1952) - @!P4 FRND.CEIL R6, R6 ;
 Instr 123 @ 0x7b0 (1968) - @!P5 FRND.CEIL R12, R2 ;
 Instr 124 @ 0x7c0 (1984) - @P6 EXIT ;
Basic block id 11 - num instructions 8
 Instr 125 @ 0x7d0 (2000) - IMAD.IADD R3, R3, 0x1, R0 ;
 Instr 126 @ 0x7e0 (2016) - ISETP.NE.AND P6, PT, R16, RZ, PT ;
 Instr 127 @ 0x7f0 (2032) - IMAD.MOV.U32 R2, RZ, RZ, 0x2 ;
 Instr 128 @ 0x800 (2048) - @!P4 F2F.F16.F32 R7, R6 ;
 Instr 129 @ 0x810 (2064) - IMAD.WIDE.U32 R2, R3, R2, c[0x0][0x168] ;
 Instr 130 @ 0x820 (2080) - @!P5 F2F.F16.F32 R11, R12 ;
 Instr 131 @ 0x830 (2096) - STG.E.U16.SYS [R2], R5 ;
 Instr 132 @ 0x840 (2112) - @P6 EXIT ;
Basic block id 12 - num instructions 2
 Instr 133 @ 0x850 (2128) - STG.E.U16.SYS [R2+0x100], R15 ;
 Instr 134 @ 0x860 (2144) - @P0 EXIT ;
Basic block id 13 - num instructions 2
 Instr 135 @ 0x870 (2160) - STG.E.U16.SYS [R2+0x200], R9 ;
 Instr 136 @ 0x880 (2176) - @P1 EXIT ;
Basic block id 14 - num instructions 2
 Instr 137 @ 0x890 (2192) - STG.E.U16.SYS [R2+0x300], R17 ;
 Instr 138 @ 0x8a0 (2208) - @P2 EXIT ;
Basic block id 15 - num instructions 2
 Instr 139 @ 0x8b0 (2224) - STG.E.U16.SYS [R2+0x400], R19 ;
 Instr 140 @ 0x8c0 (2240) - @P3 EXIT ;
Basic block id 16 - num instructions 2
 Instr 141 @ 0x8d0 (2256) - STG.E.U16.SYS [R2+0x500], R21 ;
 Instr 142 @ 0x8e0 (2272) - @P4 EXIT ;
Basic block id 17 - num instructions 2
 Instr 143 @ 0x8f0 (2288) - STG.E.U16.SYS [R2+0x600], R7 ;
 Instr 144 @ 0x900 (2304) - @P5 EXIT ;
Basic block id 18 - num instructions 2
 Instr 145 @ 0x910 (2320) - STG.E.U16.SYS [R2+0x700], R11 ;
 Instr 146 @ 0x920 (2336) - EXIT ;
Basic block id 19 - num instructions 1
 Instr 147 @ 0x930 (2352) - BRA 0x930;
inspecting void at::native::vectorized_elementwise_kernel<8, at::native::ceil_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul> >(int, at::native::ceil_kernel_cuda(at::TensorIteratorBase&)::{lambda()#1}::operator()() const::{lambda()#3}::operator()() const::{lambda(c10::Half)#1}, std::array<char*, 2ul>) - number basic blocks 20
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 7 @ 0x70 (112) - IMAD.MOV.U32 R16, RZ, RZ, 0x2 ;
Inject count_instr before - Instr 43 @ 0x2b0 (688) - ISETP.GE.AND P6, PT, R0, R7, PT ;
Inject count_instr before - Instr 55 @ 0x370 (880) - IMAD.IADD R4, R3, 0x1, R0 ;
Inject count_instr before - Instr 62 @ 0x3e0 (992) - LDG.E.U16.SYS R12, [R4+0x100] ;
Inject count_instr before - Instr 66 @ 0x420 (1056) - LDG.E.U16.SYS R11, [R4+0x200] ;
Inject count_instr before - Instr 70 @ 0x460 (1120) - LDG.E.U16.SYS R10, [R4+0x300] ;
Inject count_instr before - Instr 74 @ 0x4a0 (1184) - LDG.E.U16.SYS R9, [R4+0x400] ;
Inject count_instr before - Instr 78 @ 0x4e0 (1248) - LDG.E.U16.SYS R8, [R4+0x500] ;
Inject count_instr before - Instr 82 @ 0x520 (1312) - IADD3 R6, R0, 0x380, RZ ;
Inject count_instr before - Instr 86 @ 0x560 (1376) - BSYNC B0 ;
Inject count_instr before - Instr 125 @ 0x7d0 (2000) - IMAD.IADD R3, R3, 0x1, R0 ;
Inject count_instr before - Instr 133 @ 0x850 (2128) - STG.E.U16.SYS [R2+0x100], R15 ;
Inject count_instr before - Instr 135 @ 0x870 (2160) - STG.E.U16.SYS [R2+0x200], R9 ;
Inject count_instr before - Instr 137 @ 0x890 (2192) - STG.E.U16.SYS [R2+0x300], R17 ;
Inject count_instr before - Instr 139 @ 0x8b0 (2224) - STG.E.U16.SYS [R2+0x400], R19 ;
Inject count_instr before - Instr 141 @ 0x8d0 (2256) - STG.E.U16.SYS [R2+0x500], R21 ;
Inject count_instr before - Instr 143 @ 0x8f0 (2288) - STG.E.U16.SYS [R2+0x600], R7 ;
Inject count_instr before - Instr 145 @ 0x910 (2320) - STG.E.U16.SYS [R2+0x700], R11 ;
Inject count_instr before - Instr 147 @ 0x930 (2352) - BRA 0x930;
kernel 282 - _ZN2at6native29vectorized_elementwise_kernelILi8EZZZNS0_16ceil_kernel_cudaERNS_18TensorIteratorBaseEENKUlvE_clEvENKUlvE1_clEvEUlN3c104HalfEE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 286, total instructions 65672819
kernel 283 - _ZN2at6native29vectorized_elementwise_kernelILi4ENS0_13BinaryFunctorIN3c104HalfES4_bNS0_51_GLOBAL__N__28ce311f_18_CompareEQKernel_cu_d8008c9616CompareEqFunctorIS4_EEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 370, total instructions 65673189
Function void at::native::vectorized_elementwise_kernel<2, at::native::BinaryFunctor<double, double, double, at::native::binary_internal::DivFunctor<double> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<double, double, double, at::native::binary_internal::DivFunctor<double> >, std::array<char*, 3ul>)
Basic block id 0 - num instructions 21
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R52, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - CS2R R6, SRZ ;
 Instr 3 @ 0x30 (48) - CS2R R8, SRZ ;
 Instr 4 @ 0x40 (64) - CS2R R10, SRZ ;
 Instr 5 @ 0x50 (80) - S2R R51, SR_TID.X ;
 Instr 6 @ 0x60 (96) - CS2R R12, SRZ ;
 Instr 7 @ 0x70 (112) - CS2R R14, SRZ ;
 Instr 8 @ 0x80 (128) - CS2R R16, SRZ ;
 Instr 9 @ 0x90 (144) - CS2R R18, SRZ ;
 Instr 10 @ 0xa0 (160) - CS2R R20, SRZ ;
 Instr 11 @ 0xb0 (176) - CS2R R22, SRZ ;
 Instr 12 @ 0xc0 (192) - CS2R R24, SRZ ;
 Instr 13 @ 0xd0 (208) - CS2R R26, SRZ ;
 Instr 14 @ 0xe0 (224) - CS2R R28, SRZ ;
 Instr 15 @ 0xf0 (240) - CS2R R30, SRZ ;
 Instr 16 @ 0x100 (256) - CS2R R32, SRZ ;
 Instr 17 @ 0x110 (272) - IMAD.SHL.U32 R52, R52, 0x400, RZ ;
 Instr 18 @ 0x120 (288) - IADD3 R44, -R52, c[0x0][0x160], RZ ;
 Instr 19 @ 0x130 (304) - ISETP.GE.U32.AND P0, PT, R44, 0x400, PT ;
 Instr 20 @ 0x140 (320) - @!P0 BRA 0xf10 ;
Basic block id 1 - num instructions 31
 Instr 21 @ 0x150 (336) - IMAD.MOV.U32 R3, RZ, RZ, 0x8 ;
 Instr 22 @ 0x160 (352) - IMAD.WIDE R4, R52, R3, c[0x0][0x178] ;
 Instr 23 @ 0x170 (368) - IMAD.WIDE.U32 R40, R51, 0x10, R4 ;
 Instr 24 @ 0x180 (384) - LDG.E.128.SYS R36, [R40] ;
 Instr 25 @ 0x190 (400) - IMAD.WIDE R4, R52, R3, c[0x0][0x170] ;
 Instr 26 @ 0x1a0 (416) - LDG.E.128.SYS R16, [R40+0x800] ;
 Instr 27 @ 0x1b0 (432) - IMAD.WIDE.U32 R4, R51, 0x10, R4 ;
 Instr 28 @ 0x1c0 (448) - LDG.E.128.SYS R12, [R40+0x1000] ;
 Instr 29 @ 0x1d0 (464) - LDG.E.128.SYS R8, [R40+0x1800] ;
 Instr 30 @ 0x1e0 (480) - LDG.E.128.SYS R32, [R4] ;
 Instr 31 @ 0x1f0 (496) - IMAD.MOV.U32 R6, RZ, RZ, 0x1 ;
 Instr 32 @ 0x200 (512) - LDG.E.128.SYS R28, [R4+0x800] ;
 Instr 33 @ 0x210 (528) - LDG.E.128.SYS R24, [R4+0x1000] ;
 Instr 34 @ 0x220 (544) - LDG.E.128.SYS R20, [R4+0x1800] ;
 Instr 35 @ 0x230 (560) - IMAD.WIDE.U32 R44, R52, R3, c[0x0][0x168] ;
 Instr 36 @ 0x240 (576) - BMOV.32.CLEAR RZ, B1 ;
 Instr 37 @ 0x250 (592) - BSSY B1, 0x3d0 ;
 Instr 38 @ 0x260 (608) - IMAD.WIDE R44, R51, 0x10, R44 ;
 Instr 39 @ 0x270 (624) - MUFU.RCP64H R7, R39 ;
 Instr 40 @ 0x280 (640) - DFMA R42, -R38, R6, 1 ;
 Instr 41 @ 0x290 (656) - DFMA R42, R42, R42, R42 ;
 Instr 42 @ 0x2a0 (672) - DFMA R42, R6, R42, R6 ;
 Instr 43 @ 0x2b0 (688) - DFMA R6, -R38, R42, 1 ;
 Instr 44 @ 0x2c0 (704) - DFMA R6, R42, R6, R42 ;
 Instr 45 @ 0x2d0 (720) - DMUL R4, R34, R6 ;
 Instr 46 @ 0x2e0 (736) - DFMA R42, -R38, R4, R34 ;
 Instr 47 @ 0x2f0 (752) - DFMA R6, R6, R42, R4 ;
 Instr 48 @ 0x300 (768) - FSETP.GTU.AND P1, PT, |R35|, 6.4490557925156731238e-37, PT ;
 Instr 49 @ 0x310 (784) - FFMA R0, RZ, R39, R7 ;
 Instr 50 @ 0x320 (800) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 51 @ 0x330 (816) - @P0 BRA P1, 0x3c0 ;
Basic block id 2 - num instructions 6
 Instr 52 @ 0x340 (832) - IMAD.MOV.U32 R2, RZ, RZ, R34 ;
 Instr 53 @ 0x350 (848) - MOV R3, R35 ;
 Instr 54 @ 0x360 (864) - IMAD.MOV.U32 R4, RZ, RZ, R38 ;
 Instr 55 @ 0x370 (880) - MOV R0, 0x3a0 ;
 Instr 56 @ 0x380 (896) - IMAD.MOV.U32 R5, RZ, RZ, R39 ;
 Instr 57 @ 0x390 (912) - CALL.REL.NOINC 0x2140 ;
Basic block id 3 - num instructions 2
 Instr 58 @ 0x3a0 (928) - IMAD.MOV.U32 R6, RZ, RZ, R2 ;
 Instr 59 @ 0x3b0 (944) - IMAD.MOV.U32 R7, RZ, RZ, R3 ;
Basic block id 4 - num instructions 11
 Instr 60 @ 0x3c0 (960) - BSYNC B1 ;
 Instr 61 @ 0x3d0 (976) - MUFU.RCP64H R3, R37 ;
 Instr 62 @ 0x3e0 (992) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 63 @ 0x3f0 (1008) - FSETP.GTU.AND P1, PT, |R33|, 6.4490557925156731238e-37, PT ;
 Instr 64 @ 0x400 (1024) - BMOV.32.CLEAR RZ, B1 ;
 Instr 65 @ 0x410 (1040) - BSSY B1, 0x560 ;
 Instr 66 @ 0x420 (1056) - DFMA R4, -R36, R2, 1 ;
 Instr 67 @ 0x430 (1072) - DFMA R4, R4, R4, R4 ;
 Instr 68 @ 0x440 (1088) - DFMA R4, R2, R4, R2 ;
 Instr 69 @ 0x450 (1104) - DFMA R2, -R36, R4, 1 ;
 Instr 70 @ 0x460 (1120) - DFMA R2, R4, R2, R4 ;
Basic block id 5 - num instructions 6
 Instr 71 @ 0x470 (1136) - DMUL R4, R32, R2 ;
 Instr 72 @ 0x480 (1152) - DFMA R34, -R36, R4, R32 ;
 Instr 73 @ 0x490 (1168) - DFMA R4, R2, R34, R4 ;
 Instr 74 @ 0x4a0 (1184) - FFMA R0, RZ, R37, R5 ;
 Instr 75 @ 0x4b0 (1200) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 76 @ 0x4c0 (1216) - @P0 BRA P1, 0x550 ;
Basic block id 6 - num instructions 6
 Instr 77 @ 0x4d0 (1232) - MOV R2, R32 ;
 Instr 78 @ 0x4e0 (1248) - IMAD.MOV.U32 R3, RZ, RZ, R33 ;
 Instr 79 @ 0x4f0 (1264) - MOV R0, 0x530 ;
 Instr 80 @ 0x500 (1280) - IMAD.MOV.U32 R4, RZ, RZ, R36 ;
 Instr 81 @ 0x510 (1296) - IMAD.MOV.U32 R5, RZ, RZ, R37 ;
 Instr 82 @ 0x520 (1312) - CALL.REL.NOINC 0x2140 ;
Basic block id 7 - num instructions 2
 Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
 Instr 84 @ 0x540 (1344) - IMAD.MOV.U32 R5, RZ, RZ, R3 ;
Basic block id 8 - num instructions 12
 Instr 85 @ 0x550 (1360) - BSYNC B1 ;
 Instr 86 @ 0x560 (1376) - MUFU.RCP64H R3, R19 ;
 Instr 87 @ 0x570 (1392) - MOV R2, 0x1 ;
 Instr 88 @ 0x580 (1408) - STG.E.128.SYS [R44], R4 ;
 Instr 89 @ 0x590 (1424) - FSETP.GTU.AND P1, PT, |R31|, 6.4490557925156731238e-37, PT ;
 Instr 90 @ 0x5a0 (1440) - BMOV.32.CLEAR RZ, B1 ;
 Instr 91 @ 0x5b0 (1456) - BSSY B1, 0x700 ;
 Instr 92 @ 0x5c0 (1472) - DFMA R32, -R18, R2, 1 ;
 Instr 93 @ 0x5d0 (1488) - DFMA R32, R32, R32, R32 ;
 Instr 94 @ 0x5e0 (1504) - DFMA R32, R2, R32, R2 ;
 Instr 95 @ 0x5f0 (1520) - DFMA R2, -R18, R32, 1 ;
 Instr 96 @ 0x600 (1536) - DFMA R2, R32, R2, R32 ;
Basic block id 9 - num instructions 6
 Instr 97 @ 0x610 (1552) - DMUL R34, R30, R2 ;
 Instr 98 @ 0x620 (1568) - DFMA R32, -R18, R34, R30 ;
 Instr 99 @ 0x630 (1584) - DFMA R34, R2, R32, R34 ;
 Instr 100 @ 0x640 (1600) - FFMA R0, RZ, R19, R35 ;
 Instr 101 @ 0x650 (1616) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 102 @ 0x660 (1632) - @P0 BRA P1, 0x6f0 ;
Basic block id 10 - num instructions 6
 Instr 103 @ 0x670 (1648) - IMAD.MOV.U32 R2, RZ, RZ, R30 ;
 Instr 104 @ 0x680 (1664) - MOV R0, 0x6d0 ;
 Instr 105 @ 0x690 (1680) - IMAD.MOV.U32 R3, RZ, RZ, R31 ;
 Instr 106 @ 0x6a0 (1696) - IMAD.MOV.U32 R4, RZ, RZ, R18 ;
 Instr 107 @ 0x6b0 (1712) - IMAD.MOV.U32 R5, RZ, RZ, R19 ;
 Instr 108 @ 0x6c0 (1728) - CALL.REL.NOINC 0x2140 ;
Basic block id 11 - num instructions 2
 Instr 109 @ 0x6d0 (1744) - IMAD.MOV.U32 R34, RZ, RZ, R2 ;
 Instr 110 @ 0x6e0 (1760) - MOV R35, R3 ;
Basic block id 12 - num instructions 11
 Instr 111 @ 0x6f0 (1776) - BSYNC B1 ;
 Instr 112 @ 0x700 (1792) - MUFU.RCP64H R3, R17 ;
 Instr 113 @ 0x710 (1808) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 114 @ 0x720 (1824) - FSETP.GTU.AND P1, PT, |R29|, 6.4490557925156731238e-37, PT ;
 Instr 115 @ 0x730 (1840) - BMOV.32.CLEAR RZ, B1 ;
 Instr 116 @ 0x740 (1856) - BSSY B1, 0x890 ;
 Instr 117 @ 0x750 (1872) - DFMA R4, -R16, R2, 1 ;
 Instr 118 @ 0x760 (1888) - DFMA R4, R4, R4, R4 ;
 Instr 119 @ 0x770 (1904) - DFMA R4, R2, R4, R2 ;
 Instr 120 @ 0x780 (1920) - DFMA R2, -R16, R4, 1 ;
 Instr 121 @ 0x790 (1936) - DFMA R2, R4, R2, R4 ;
Basic block id 13 - num instructions 6
 Instr 122 @ 0x7a0 (1952) - DMUL R32, R28, R2 ;
 Instr 123 @ 0x7b0 (1968) - DFMA R4, -R16, R32, R28 ;
 Instr 124 @ 0x7c0 (1984) - DFMA R32, R2, R4, R32 ;
 Instr 125 @ 0x7d0 (2000) - FFMA R0, RZ, R17, R33 ;
 Instr 126 @ 0x7e0 (2016) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 127 @ 0x7f0 (2032) - @P0 BRA P1, 0x880 ;
Basic block id 14 - num instructions 6
 Instr 128 @ 0x800 (2048) - IMAD.MOV.U32 R2, RZ, RZ, R28 ;
 Instr 129 @ 0x810 (2064) - MOV R0, 0x860 ;
 Instr 130 @ 0x820 (2080) - IMAD.MOV.U32 R3, RZ, RZ, R29 ;
 Instr 131 @ 0x830 (2096) - IMAD.MOV.U32 R4, RZ, RZ, R16 ;
 Instr 132 @ 0x840 (2112) - IMAD.MOV.U32 R5, RZ, RZ, R17 ;
 Instr 133 @ 0x850 (2128) - CALL.REL.NOINC 0x2140 ;
Basic block id 15 - num instructions 2
 Instr 134 @ 0x860 (2144) - MOV R32, R2 ;
 Instr 135 @ 0x870 (2160) - IMAD.MOV.U32 R33, RZ, RZ, R3 ;
Basic block id 16 - num instructions 12
 Instr 136 @ 0x880 (2176) - BSYNC B1 ;
 Instr 137 @ 0x890 (2192) - MUFU.RCP64H R3, R15 ;
 Instr 138 @ 0x8a0 (2208) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 139 @ 0x8b0 (2224) - STG.E.128.SYS [R44+0x800], R32 ;
 Instr 140 @ 0x8c0 (2240) - FSETP.GTU.AND P1, PT, |R27|, 6.4490557925156731238e-37, PT ;
 Instr 141 @ 0x8d0 (2256) - BMOV.32.CLEAR RZ, B1 ;
 Instr 142 @ 0x8e0 (2272) - BSSY B1, 0xa30 ;
 Instr 143 @ 0x8f0 (2288) - DFMA R4, -R14, R2, 1 ;
 Instr 144 @ 0x900 (2304) - DFMA R4, R4, R4, R4 ;
 Instr 145 @ 0x910 (2320) - DFMA R4, R2, R4, R2 ;
 Instr 146 @ 0x920 (2336) - DFMA R2, -R14, R4, 1 ;
 Instr 147 @ 0x930 (2352) - DFMA R2, R4, R2, R4 ;
Basic block id 17 - num instructions 6
 Instr 148 @ 0x940 (2368) - DMUL R6, R26, R2 ;
 Instr 149 @ 0x950 (2384) - DFMA R4, -R14, R6, R26 ;
 Instr 150 @ 0x960 (2400) - DFMA R6, R2, R4, R6 ;
 Instr 151 @ 0x970 (2416) - FFMA R0, RZ, R15, R7 ;
 Instr 152 @ 0x980 (2432) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 153 @ 0x990 (2448) - @P0 BRA P1, 0xa20 ;
Basic block id 18 - num instructions 6
 Instr 154 @ 0x9a0 (2464) - IMAD.MOV.U32 R2, RZ, RZ, R26 ;
 Instr 155 @ 0x9b0 (2480) - MOV R5, R15 ;
 Instr 156 @ 0x9c0 (2496) - IMAD.MOV.U32 R3, RZ, RZ, R27 ;
 Instr 157 @ 0x9d0 (2512) - MOV R0, 0xa00 ;
 Instr 158 @ 0x9e0 (2528) - IMAD.MOV.U32 R4, RZ, RZ, R14 ;
 Instr 159 @ 0x9f0 (2544) - CALL.REL.NOINC 0x2140 ;
Basic block id 19 - num instructions 2
 Instr 160 @ 0xa00 (2560) - IMAD.MOV.U32 R6, RZ, RZ, R2 ;
 Instr 161 @ 0xa10 (2576) - IMAD.MOV.U32 R7, RZ, RZ, R3 ;
Basic block id 20 - num instructions 11
 Instr 162 @ 0xa20 (2592) - BSYNC B1 ;
 Instr 163 @ 0xa30 (2608) - MUFU.RCP64H R3, R13 ;
 Instr 164 @ 0xa40 (2624) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 165 @ 0xa50 (2640) - FSETP.GTU.AND P1, PT, |R25|, 6.4490557925156731238e-37, PT ;
 Instr 166 @ 0xa60 (2656) - BMOV.32.CLEAR RZ, B1 ;
 Instr 167 @ 0xa70 (2672) - BSSY B1, 0xbc0 ;
 Instr 168 @ 0xa80 (2688) - DFMA R4, -R12, R2, 1 ;
 Instr 169 @ 0xa90 (2704) - DFMA R4, R4, R4, R4 ;
 Instr 170 @ 0xaa0 (2720) - DFMA R4, R2, R4, R2 ;
 Instr 171 @ 0xab0 (2736) - DFMA R2, -R12, R4, 1 ;
 Instr 172 @ 0xac0 (2752) - DFMA R2, R4, R2, R4 ;
Basic block id 21 - num instructions 6
 Instr 173 @ 0xad0 (2768) - DMUL R4, R24, R2 ;
 Instr 174 @ 0xae0 (2784) - DFMA R14, -R12, R4, R24 ;
 Instr 175 @ 0xaf0 (2800) - DFMA R4, R2, R14, R4 ;
 Instr 176 @ 0xb00 (2816) - FFMA R0, RZ, R13, R5 ;
 Instr 177 @ 0xb10 (2832) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 178 @ 0xb20 (2848) - @P0 BRA P1, 0xbb0 ;
Basic block id 22 - num instructions 6
 Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R2, RZ, RZ, R24 ;
 Instr 180 @ 0xb40 (2880) - MOV R4, R12 ;
 Instr 181 @ 0xb50 (2896) - IMAD.MOV.U32 R3, RZ, RZ, R25 ;
 Instr 182 @ 0xb60 (2912) - MOV R0, 0xb90 ;
 Instr 183 @ 0xb70 (2928) - IMAD.MOV.U32 R5, RZ, RZ, R13 ;
 Instr 184 @ 0xb80 (2944) - CALL.REL.NOINC 0x2140 ;
Basic block id 23 - num instructions 2
 Instr 185 @ 0xb90 (2960) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
 Instr 186 @ 0xba0 (2976) - IMAD.MOV.U32 R5, RZ, RZ, R3 ;
Basic block id 24 - num instructions 12
 Instr 187 @ 0xbb0 (2992) - BSYNC B1 ;
 Instr 188 @ 0xbc0 (3008) - MUFU.RCP64H R3, R11 ;
 Instr 189 @ 0xbd0 (3024) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 190 @ 0xbe0 (3040) - STG.E.128.SYS [R44+0x1000], R4 ;
 Instr 191 @ 0xbf0 (3056) - FSETP.GTU.AND P1, PT, |R23|, 6.4490557925156731238e-37, PT ;
 Instr 192 @ 0xc00 (3072) - BMOV.32.CLEAR RZ, B1 ;
 Instr 193 @ 0xc10 (3088) - BSSY B1, 0xd60 ;
 Instr 194 @ 0xc20 (3104) - DFMA R12, -R10, R2, 1 ;
 Instr 195 @ 0xc30 (3120) - DFMA R12, R12, R12, R12 ;
 Instr 196 @ 0xc40 (3136) - DFMA R12, R2, R12, R2 ;
 Instr 197 @ 0xc50 (3152) - DFMA R2, -R10, R12, 1 ;
 Instr 198 @ 0xc60 (3168) - DFMA R2, R12, R2, R12 ;
Basic block id 25 - num instructions 6
 Instr 199 @ 0xc70 (3184) - DMUL R14, R22, R2 ;
 Instr 200 @ 0xc80 (3200) - DFMA R12, -R10, R14, R22 ;
 Instr 201 @ 0xc90 (3216) - DFMA R14, R2, R12, R14 ;
 Instr 202 @ 0xca0 (3232) - FFMA R0, RZ, R11, R15 ;
 Instr 203 @ 0xcb0 (3248) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 204 @ 0xcc0 (3264) - @P0 BRA P1, 0xd50 ;
Basic block id 26 - num instructions 6
 Instr 205 @ 0xcd0 (3280) - IMAD.MOV.U32 R2, RZ, RZ, R22 ;
 Instr 206 @ 0xce0 (3296) - MOV R3, R23 ;
 Instr 207 @ 0xcf0 (3312) - IMAD.MOV.U32 R4, RZ, RZ, R10 ;
 Instr 208 @ 0xd00 (3328) - MOV R0, 0xd30 ;
 Instr 209 @ 0xd10 (3344) - IMAD.MOV.U32 R5, RZ, RZ, R11 ;
 Instr 210 @ 0xd20 (3360) - CALL.REL.NOINC 0x2140 ;
Basic block id 27 - num instructions 2
 Instr 211 @ 0xd30 (3376) - IMAD.MOV.U32 R14, RZ, RZ, R2 ;
 Instr 212 @ 0xd40 (3392) - IMAD.MOV.U32 R15, RZ, RZ, R3 ;
Basic block id 28 - num instructions 11
 Instr 213 @ 0xd50 (3408) - BSYNC B1 ;
 Instr 214 @ 0xd60 (3424) - MUFU.RCP64H R3, R9 ;
 Instr 215 @ 0xd70 (3440) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 216 @ 0xd80 (3456) - FSETP.GTU.AND P1, PT, |R21|, 6.4490557925156731238e-37, PT ;
 Instr 217 @ 0xd90 (3472) - BMOV.32.CLEAR RZ, B1 ;
 Instr 218 @ 0xda0 (3488) - BSSY B1, 0xef0 ;
 Instr 219 @ 0xdb0 (3504) - DFMA R4, -R8, R2, 1 ;
 Instr 220 @ 0xdc0 (3520) - DFMA R4, R4, R4, R4 ;
 Instr 221 @ 0xdd0 (3536) - DFMA R4, R2, R4, R2 ;
 Instr 222 @ 0xde0 (3552) - DFMA R2, -R8, R4, 1 ;
 Instr 223 @ 0xdf0 (3568) - DFMA R2, R4, R2, R4 ;
Basic block id 29 - num instructions 6
 Instr 224 @ 0xe00 (3584) - DMUL R12, R20, R2 ;
 Instr 225 @ 0xe10 (3600) - DFMA R4, -R8, R12, R20 ;
 Instr 226 @ 0xe20 (3616) - DFMA R12, R2, R4, R12 ;
 Instr 227 @ 0xe30 (3632) - FFMA R0, RZ, R9, R13 ;
 Instr 228 @ 0xe40 (3648) - FSETP.GT.AND P0, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 229 @ 0xe50 (3664) - @P0 BRA P1, 0xee0 ;
Basic block id 30 - num instructions 6
 Instr 230 @ 0xe60 (3680) - MOV R2, R20 ;
 Instr 231 @ 0xe70 (3696) - IMAD.MOV.U32 R3, RZ, RZ, R21 ;
 Instr 232 @ 0xe80 (3712) - MOV R0, 0xec0 ;
 Instr 233 @ 0xe90 (3728) - IMAD.MOV.U32 R4, RZ, RZ, R8 ;
 Instr 234 @ 0xea0 (3744) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 235 @ 0xeb0 (3760) - CALL.REL.NOINC 0x2140 ;
Basic block id 31 - num instructions 2
 Instr 236 @ 0xec0 (3776) - IMAD.MOV.U32 R12, RZ, RZ, R2 ;
 Instr 237 @ 0xed0 (3792) - IMAD.MOV.U32 R13, RZ, RZ, R3 ;
Basic block id 32 - num instructions 3
 Instr 238 @ 0xee0 (3808) - BSYNC B1 ;
 Instr 239 @ 0xef0 (3824) - STG.E.128.SYS [R44+0x1800], R12 ;
 Instr 240 @ 0xf00 (3840) - EXIT ;
Basic block id 33 - num instructions 6
 Instr 241 @ 0xf10 (3856) - ISETP.GE.AND P0, PT, R51, R44, PT ;
 Instr 242 @ 0xf20 (3872) - BMOV.32.CLEAR RZ, B0 ;
 Instr 243 @ 0xf30 (3888) - BSSY B0, 0x1200 ;
 Instr 244 @ 0xf40 (3904) - CS2R R2, SRZ ;
 Instr 245 @ 0xf50 (3920) - CS2R R4, SRZ ;
 Instr 246 @ 0xf60 (3936) - @P0 BRA 0x11f0 ;
Basic block id 34 - num instructions 8
 Instr 247 @ 0xf70 (3952) - IADD3 R36, R52, R51, RZ ;
 Instr 248 @ 0xf80 (3968) - IMAD.MOV.U32 R37, RZ, RZ, 0x8 ;
 Instr 249 @ 0xf90 (3984) - IMAD.WIDE.U32 R34, R36, R37, c[0x0][0x170] ;
 Instr 250 @ 0xfa0 (4000) - IMAD.WIDE.U32 R36, R36, R37, c[0x0][0x178] ;
 Instr 251 @ 0xfb0 (4016) - LDG.E.64.SYS R2, [R34] ;
 Instr 252 @ 0xfc0 (4032) - LDG.E.64.SYS R4, [R36] ;
 Instr 253 @ 0xfd0 (4048) - IADD3 R39, R51, 0x80, RZ ;
 Instr 254 @ 0xfe0 (4064) - ISETP.GE.AND P1, PT, R39, R44, PT ;
Basic block id 35 - num instructions 1
 Instr 255 @ 0xff0 (4080) - @P1 BRA 0x11f0 ;
Basic block id 36 - num instructions 5
 Instr 256 @ 0x1000 (4096) - LDG.E.64.SYS R30, [R34+0x400] ;
 Instr 257 @ 0x1010 (4112) - LDG.E.64.SYS R32, [R36+0x400] ;
 Instr 258 @ 0x1020 (4128) - IADD3 R39, R51, 0x100, RZ ;
 Instr 259 @ 0x1030 (4144) - ISETP.GE.AND P1, PT, R39, R44, PT ;
 Instr 260 @ 0x1040 (4160) - @P1 BRA 0x11f0 ;
Basic block id 37 - num instructions 5
 Instr 261 @ 0x1050 (4176) - LDG.E.64.SYS R26, [R34+0x800] ;
 Instr 262 @ 0x1060 (4192) - LDG.E.64.SYS R28, [R36+0x800] ;
 Instr 263 @ 0x1070 (4208) - IADD3 R39, R51, 0x180, RZ ;
 Instr 264 @ 0x1080 (4224) - ISETP.GE.AND P1, PT, R39, R44, PT ;
 Instr 265 @ 0x1090 (4240) - @P1 BRA 0x11f0 ;
Basic block id 38 - num instructions 5
 Instr 266 @ 0x10a0 (4256) - LDG.E.64.SYS R22, [R34+0xc00] ;
 Instr 267 @ 0x10b0 (4272) - LDG.E.64.SYS R24, [R36+0xc00] ;
 Instr 268 @ 0x10c0 (4288) - IADD3 R39, R51, 0x200, RZ ;
 Instr 269 @ 0x10d0 (4304) - ISETP.GE.AND P1, PT, R39, R44, PT ;
 Instr 270 @ 0x10e0 (4320) - @P1 BRA 0x11f0 ;
Basic block id 39 - num instructions 5
 Instr 271 @ 0x10f0 (4336) - LDG.E.64.SYS R18, [R34+0x1000] ;
 Instr 272 @ 0x1100 (4352) - LDG.E.64.SYS R20, [R36+0x1000] ;
 Instr 273 @ 0x1110 (4368) - IADD3 R39, R51, 0x280, RZ ;
 Instr 274 @ 0x1120 (4384) - ISETP.GE.AND P1, PT, R39, R44, PT ;
 Instr 275 @ 0x1130 (4400) - @P1 BRA 0x11f0 ;
Basic block id 40 - num instructions 5
 Instr 276 @ 0x1140 (4416) - LDG.E.64.SYS R14, [R34+0x1400] ;
 Instr 277 @ 0x1150 (4432) - LDG.E.64.SYS R16, [R36+0x1400] ;
 Instr 278 @ 0x1160 (4448) - IADD3 R39, R51, 0x300, RZ ;
 Instr 279 @ 0x1170 (4464) - ISETP.GE.AND P1, PT, R39, R44, PT ;
 Instr 280 @ 0x1180 (4480) - @P1 BRA 0x11f0 ;
Basic block id 41 - num instructions 6
 Instr 281 @ 0x1190 (4496) - IADD3 R11, R51, 0x380, RZ ;
 Instr 282 @ 0x11a0 (4512) - LDG.E.64.SYS R12, [R36+0x1800] ;
 Instr 283 @ 0x11b0 (4528) - ISETP.GE.AND P1, PT, R11, R44, PT ;
 Instr 284 @ 0x11c0 (4544) - LDG.E.64.SYS R10, [R34+0x1800] ;
 Instr 285 @ 0x11d0 (4560) - @!P1 LDG.E.64.SYS R6, [R34+0x1c00] ;
 Instr 286 @ 0x11e0 (4576) - @!P1 LDG.E.64.SYS R8, [R36+0x1c00] ;
Basic block id 42 - num instructions 4
 Instr 287 @ 0x11f0 (4592) - BSYNC B0 ;
 Instr 288 @ 0x1200 (4608) - BMOV.32.CLEAR RZ, B1 ;
 Instr 289 @ 0x1210 (4624) - BSSY B1, 0x1360 ;
 Instr 290 @ 0x1220 (4640) - @P0 BRA 0x1350 ;
Basic block id 43 - num instructions 4
 Instr 291 @ 0x1230 (4656) - MUFU.RCP64H R35, R5 ;
 Instr 292 @ 0x1240 (4672) - IMAD.MOV.U32 R34, RZ, RZ, 0x1 ;
 Instr 293 @ 0x1250 (4688) - FSETP.GTU.AND P2, PT, |R3|, 6.4490557925156731238e-37, PT ;
 Instr 294 @ 0x1260 (4704) - DFMA R36, R34, -R4, 1 ;
Basic block id 44 - num instructions 10
 Instr 295 @ 0x1270 (4720) - DFMA R36, R36, R36, R36 ;
 Instr 296 @ 0x1280 (4736) - DFMA R36, R34, R36, R34 ;
 Instr 297 @ 0x1290 (4752) - DFMA R34, R36, -R4, 1 ;
 Instr 298 @ 0x12a0 (4768) - DFMA R34, R36, R34, R36 ;
 Instr 299 @ 0x12b0 (4784) - DMUL R36, R34, R2 ;
 Instr 300 @ 0x12c0 (4800) - DFMA R38, R36, -R4, R2 ;
 Instr 301 @ 0x12d0 (4816) - DFMA R36, R34, R38, R36 ;
 Instr 302 @ 0x12e0 (4832) - FFMA R0, RZ, R5, R37 ;
 Instr 303 @ 0x12f0 (4848) - FSETP.GT.AND P1, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 304 @ 0x1300 (4864) - @P1 BRA P2, 0x1350 ;
Basic block id 45 - num instructions 2
 Instr 305 @ 0x1310 (4880) - MOV R0, 0x1330 ;
 Instr 306 @ 0x1320 (4896) - CALL.REL.NOINC 0x2140 ;
Basic block id 46 - num instructions 2
 Instr 307 @ 0x1330 (4912) - IMAD.MOV.U32 R36, RZ, RZ, R2 ;
 Instr 308 @ 0x1340 (4928) - IMAD.MOV.U32 R37, RZ, RZ, R3 ;
Basic block id 47 - num instructions 7
 Instr 309 @ 0x1350 (4944) - BSYNC B1 ;
 Instr 310 @ 0x1360 (4960) - IADD3 R3, R51, 0x80, RZ ;
 Instr 311 @ 0x1370 (4976) - BMOV.32.CLEAR RZ, B1 ;
 Instr 312 @ 0x1380 (4992) - BSSY B1, 0x1530 ;
 Instr 313 @ 0x1390 (5008) - ISETP.GE.AND P1, PT, R3, R44, PT ;
 Instr 314 @ 0x13a0 (5024) - P2R R45, PR, RZ, 0x2 ;
 Instr 315 @ 0x13b0 (5040) - @P1 BRA 0x1520 ;
Basic block id 48 - num instructions 14
 Instr 316 @ 0x13c0 (5056) - MUFU.RCP64H R3, R33 ;
 Instr 317 @ 0x13d0 (5072) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 318 @ 0x13e0 (5088) - FSETP.GTU.AND P2, PT, |R31|, 6.4490557925156731238e-37, PT ;
 Instr 319 @ 0x13f0 (5104) - DFMA R4, R2, -R32, 1 ;
 Instr 320 @ 0x1400 (5120) - DFMA R4, R4, R4, R4 ;
 Instr 321 @ 0x1410 (5136) - DFMA R4, R2, R4, R2 ;
 Instr 322 @ 0x1420 (5152) - DFMA R2, R4, -R32, 1 ;
 Instr 323 @ 0x1430 (5168) - DFMA R2, R4, R2, R4 ;
 Instr 324 @ 0x1440 (5184) - DMUL R34, R2, R30 ;
 Instr 325 @ 0x1450 (5200) - DFMA R4, R34, -R32, R30 ;
 Instr 326 @ 0x1460 (5216) - DFMA R34, R2, R4, R34 ;
 Instr 327 @ 0x1470 (5232) - FFMA R0, RZ, R33, R35 ;
 Instr 328 @ 0x1480 (5248) - FSETP.GT.AND P1, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 329 @ 0x1490 (5264) - @P1 BRA P2, 0x1520 ;
Basic block id 49 - num instructions 6
 Instr 330 @ 0x14a0 (5280) - MOV R2, R30 ;
 Instr 331 @ 0x14b0 (5296) - IMAD.MOV.U32 R3, RZ, RZ, R31 ;
 Instr 332 @ 0x14c0 (5312) - MOV R0, 0x1500 ;
 Instr 333 @ 0x14d0 (5328) - IMAD.MOV.U32 R4, RZ, RZ, R32 ;
 Instr 334 @ 0x14e0 (5344) - IMAD.MOV.U32 R5, RZ, RZ, R33 ;
 Instr 335 @ 0x14f0 (5360) - CALL.REL.NOINC 0x2140 ;
Basic block id 50 - num instructions 2
 Instr 336 @ 0x1500 (5376) - IMAD.MOV.U32 R34, RZ, RZ, R2 ;
 Instr 337 @ 0x1510 (5392) - IMAD.MOV.U32 R35, RZ, RZ, R3 ;
Basic block id 51 - num instructions 7
 Instr 338 @ 0x1520 (5408) - BSYNC B1 ;
 Instr 339 @ 0x1530 (5424) - IADD3 R3, R51, 0x100, RZ ;
 Instr 340 @ 0x1540 (5440) - BMOV.32.CLEAR RZ, B1 ;
 Instr 341 @ 0x1550 (5456) - BSSY B1, 0x1700 ;
 Instr 342 @ 0x1560 (5472) - ISETP.GE.AND P1, PT, R3, R44, PT ;
 Instr 343 @ 0x1570 (5488) - P2R R32, PR, RZ, 0x2 ;
 Instr 344 @ 0x1580 (5504) - @P1 BRA 0x16f0 ;
Basic block id 52 - num instructions 14
 Instr 345 @ 0x1590 (5520) - MUFU.RCP64H R3, R29 ;
 Instr 346 @ 0x15a0 (5536) - MOV R2, 0x1 ;
 Instr 347 @ 0x15b0 (5552) - FSETP.GTU.AND P2, PT, |R27|, 6.4490557925156731238e-37, PT ;
 Instr 348 @ 0x15c0 (5568) - DFMA R4, R2, -R28, 1 ;
 Instr 349 @ 0x15d0 (5584) - DFMA R4, R4, R4, R4 ;
 Instr 350 @ 0x15e0 (5600) - DFMA R4, R2, R4, R2 ;
 Instr 351 @ 0x15f0 (5616) - DFMA R2, R4, -R28, 1 ;
 Instr 352 @ 0x1600 (5632) - DFMA R2, R4, R2, R4 ;
 Instr 353 @ 0x1610 (5648) - DMUL R30, R2, R26 ;
 Instr 354 @ 0x1620 (5664) - DFMA R4, R30, -R28, R26 ;
 Instr 355 @ 0x1630 (5680) - DFMA R30, R2, R4, R30 ;
 Instr 356 @ 0x1640 (5696) - FFMA R0, RZ, R29, R31 ;
 Instr 357 @ 0x1650 (5712) - FSETP.GT.AND P1, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 358 @ 0x1660 (5728) - @P1 BRA P2, 0x16f0 ;
Basic block id 53 - num instructions 6
 Instr 359 @ 0x1670 (5744) - IMAD.MOV.U32 R2, RZ, RZ, R26 ;
 Instr 360 @ 0x1680 (5760) - MOV R0, 0x16d0 ;
 Instr 361 @ 0x1690 (5776) - IMAD.MOV.U32 R3, RZ, RZ, R27 ;
 Instr 362 @ 0x16a0 (5792) - IMAD.MOV.U32 R4, RZ, RZ, R28 ;
 Instr 363 @ 0x16b0 (5808) - IMAD.MOV.U32 R5, RZ, RZ, R29 ;
 Instr 364 @ 0x16c0 (5824) - CALL.REL.NOINC 0x2140 ;
Basic block id 54 - num instructions 2
 Instr 365 @ 0x16d0 (5840) - IMAD.MOV.U32 R30, RZ, RZ, R2 ;
 Instr 366 @ 0x16e0 (5856) - MOV R31, R3 ;
Basic block id 55 - num instructions 7
 Instr 367 @ 0x16f0 (5872) - BSYNC B1 ;
 Instr 368 @ 0x1700 (5888) - IADD3 R3, R51, 0x180, RZ ;
 Instr 369 @ 0x1710 (5904) - BMOV.32.CLEAR RZ, B1 ;
 Instr 370 @ 0x1720 (5920) - BSSY B1, 0x18d0 ;
 Instr 371 @ 0x1730 (5936) - ISETP.GE.AND P1, PT, R3, R44, PT ;
 Instr 372 @ 0x1740 (5952) - P2R R28, PR, RZ, 0x2 ;
 Instr 373 @ 0x1750 (5968) - @P1 BRA 0x18c0 ;
Basic block id 56 - num instructions 14
 Instr 374 @ 0x1760 (5984) - MUFU.RCP64H R3, R25 ;
 Instr 375 @ 0x1770 (6000) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 376 @ 0x1780 (6016) - FSETP.GTU.AND P2, PT, |R23|, 6.4490557925156731238e-37, PT ;
 Instr 377 @ 0x1790 (6032) - DFMA R4, R2, -R24, 1 ;
 Instr 378 @ 0x17a0 (6048) - DFMA R4, R4, R4, R4 ;
 Instr 379 @ 0x17b0 (6064) - DFMA R4, R2, R4, R2 ;
 Instr 380 @ 0x17c0 (6080) - DFMA R2, R4, -R24, 1 ;
 Instr 381 @ 0x17d0 (6096) - DFMA R2, R4, R2, R4 ;
 Instr 382 @ 0x17e0 (6112) - DMUL R26, R2, R22 ;
 Instr 383 @ 0x17f0 (6128) - DFMA R4, R26, -R24, R22 ;
 Instr 384 @ 0x1800 (6144) - DFMA R26, R2, R4, R26 ;
 Instr 385 @ 0x1810 (6160) - FFMA R0, RZ, R25, R27 ;
 Instr 386 @ 0x1820 (6176) - FSETP.GT.AND P1, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 387 @ 0x1830 (6192) - @P1 BRA P2, 0x18c0 ;
Basic block id 57 - num instructions 6
 Instr 388 @ 0x1840 (6208) - IMAD.MOV.U32 R2, RZ, RZ, R22 ;
 Instr 389 @ 0x1850 (6224) - MOV R0, 0x18a0 ;
 Instr 390 @ 0x1860 (6240) - IMAD.MOV.U32 R3, RZ, RZ, R23 ;
 Instr 391 @ 0x1870 (6256) - IMAD.MOV.U32 R4, RZ, RZ, R24 ;
 Instr 392 @ 0x1880 (6272) - IMAD.MOV.U32 R5, RZ, RZ, R25 ;
 Instr 393 @ 0x1890 (6288) - CALL.REL.NOINC 0x2140 ;
Basic block id 58 - num instructions 2
 Instr 394 @ 0x18a0 (6304) - MOV R26, R2 ;
 Instr 395 @ 0x18b0 (6320) - IMAD.MOV.U32 R27, RZ, RZ, R3 ;
Basic block id 59 - num instructions 6
 Instr 396 @ 0x18c0 (6336) - BSYNC B1 ;
 Instr 397 @ 0x18d0 (6352) - IADD3 R3, R51, 0x200, RZ ;
 Instr 398 @ 0x18e0 (6368) - BMOV.32.CLEAR RZ, B1 ;
 Instr 399 @ 0x18f0 (6384) - BSSY B1, 0x1a90 ;
 Instr 400 @ 0x1900 (6400) - ISETP.GE.AND P1, PT, R3, R44, PT ;
 Instr 401 @ 0x1910 (6416) - @P1 BRA 0x1a80 ;
Basic block id 60 - num instructions 14
 Instr 402 @ 0x1920 (6432) - MUFU.RCP64H R3, R21 ;
 Instr 403 @ 0x1930 (6448) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 404 @ 0x1940 (6464) - FSETP.GTU.AND P3, PT, |R19|, 6.4490557925156731238e-37, PT ;
 Instr 405 @ 0x1950 (6480) - DFMA R4, R2, -R20, 1 ;
 Instr 406 @ 0x1960 (6496) - DFMA R4, R4, R4, R4 ;
 Instr 407 @ 0x1970 (6512) - DFMA R4, R2, R4, R2 ;
 Instr 408 @ 0x1980 (6528) - DFMA R2, R4, -R20, 1 ;
 Instr 409 @ 0x1990 (6544) - DFMA R2, R4, R2, R4 ;
 Instr 410 @ 0x19a0 (6560) - DMUL R22, R2, R18 ;
 Instr 411 @ 0x19b0 (6576) - DFMA R4, R22, -R20, R18 ;
 Instr 412 @ 0x19c0 (6592) - DFMA R22, R2, R4, R22 ;
 Instr 413 @ 0x19d0 (6608) - FFMA R0, RZ, R21, R23 ;
 Instr 414 @ 0x19e0 (6624) - FSETP.GT.AND P2, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 415 @ 0x19f0 (6640) - @P2 BRA P3, 0x1a80 ;
Basic block id 61 - num instructions 6
 Instr 416 @ 0x1a00 (6656) - IMAD.MOV.U32 R2, RZ, RZ, R18 ;
 Instr 417 @ 0x1a10 (6672) - MOV R5, R21 ;
 Instr 418 @ 0x1a20 (6688) - IMAD.MOV.U32 R3, RZ, RZ, R19 ;
 Instr 419 @ 0x1a30 (6704) - MOV R0, 0x1a60 ;
 Instr 420 @ 0x1a40 (6720) - IMAD.MOV.U32 R4, RZ, RZ, R20 ;
 Instr 421 @ 0x1a50 (6736) - CALL.REL.NOINC 0x2140 ;
Basic block id 62 - num instructions 2
 Instr 422 @ 0x1a60 (6752) - IMAD.MOV.U32 R22, RZ, RZ, R2 ;
 Instr 423 @ 0x1a70 (6768) - IMAD.MOV.U32 R23, RZ, RZ, R3 ;
Basic block id 63 - num instructions 6
 Instr 424 @ 0x1a80 (6784) - BSYNC B1 ;
 Instr 425 @ 0x1a90 (6800) - IADD3 R3, R51, 0x280, RZ ;
 Instr 426 @ 0x1aa0 (6816) - BMOV.32.CLEAR RZ, B1 ;
 Instr 427 @ 0x1ab0 (6832) - BSSY B1, 0x1c50 ;
 Instr 428 @ 0x1ac0 (6848) - ISETP.GE.AND P2, PT, R3, R44, PT ;
 Instr 429 @ 0x1ad0 (6864) - @P2 BRA 0x1c40 ;
Basic block id 64 - num instructions 14
 Instr 430 @ 0x1ae0 (6880) - MUFU.RCP64H R3, R17 ;
 Instr 431 @ 0x1af0 (6896) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 432 @ 0x1b00 (6912) - FSETP.GTU.AND P3, PT, |R15|, 6.4490557925156731238e-37, PT ;
 Instr 433 @ 0x1b10 (6928) - DFMA R4, R2, -R16, 1 ;
 Instr 434 @ 0x1b20 (6944) - DFMA R4, R4, R4, R4 ;
 Instr 435 @ 0x1b30 (6960) - DFMA R4, R2, R4, R2 ;
 Instr 436 @ 0x1b40 (6976) - DFMA R2, R4, -R16, 1 ;
 Instr 437 @ 0x1b50 (6992) - DFMA R2, R4, R2, R4 ;
 Instr 438 @ 0x1b60 (7008) - DMUL R18, R2, R14 ;
 Instr 439 @ 0x1b70 (7024) - DFMA R4, R18, -R16, R14 ;
 Instr 440 @ 0x1b80 (7040) - DFMA R18, R2, R4, R18 ;
 Instr 441 @ 0x1b90 (7056) - FFMA R0, RZ, R17, R19 ;
 Instr 442 @ 0x1ba0 (7072) - FSETP.GT.AND P4, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 443 @ 0x1bb0 (7088) - @P4 BRA P3, 0x1c40 ;
Basic block id 65 - num instructions 6
 Instr 444 @ 0x1bc0 (7104) - IMAD.MOV.U32 R2, RZ, RZ, R14 ;
 Instr 445 @ 0x1bd0 (7120) - MOV R3, R15 ;
 Instr 446 @ 0x1be0 (7136) - IMAD.MOV.U32 R4, RZ, RZ, R16 ;
 Instr 447 @ 0x1bf0 (7152) - MOV R0, 0x1c20 ;
 Instr 448 @ 0x1c00 (7168) - IMAD.MOV.U32 R5, RZ, RZ, R17 ;
 Instr 449 @ 0x1c10 (7184) - CALL.REL.NOINC 0x2140 ;
Basic block id 66 - num instructions 2
 Instr 450 @ 0x1c20 (7200) - IMAD.MOV.U32 R18, RZ, RZ, R2 ;
 Instr 451 @ 0x1c30 (7216) - IMAD.MOV.U32 R19, RZ, RZ, R3 ;
Basic block id 67 - num instructions 6
 Instr 452 @ 0x1c40 (7232) - BSYNC B1 ;
 Instr 453 @ 0x1c50 (7248) - IADD3 R3, R51, 0x300, RZ ;
 Instr 454 @ 0x1c60 (7264) - BMOV.32.CLEAR RZ, B1 ;
 Instr 455 @ 0x1c70 (7280) - BSSY B1, 0x1e10 ;
 Instr 456 @ 0x1c80 (7296) - ISETP.GE.AND P3, PT, R3, R44, PT ;
 Instr 457 @ 0x1c90 (7312) - @P3 BRA 0x1e00 ;
Basic block id 68 - num instructions 14
 Instr 458 @ 0x1ca0 (7328) - MUFU.RCP64H R3, R13 ;
 Instr 459 @ 0x1cb0 (7344) - MOV R2, 0x1 ;
 Instr 460 @ 0x1cc0 (7360) - FSETP.GTU.AND P4, PT, |R11|, 6.4490557925156731238e-37, PT ;
 Instr 461 @ 0x1cd0 (7376) - DFMA R4, R2, -R12, 1 ;
 Instr 462 @ 0x1ce0 (7392) - DFMA R4, R4, R4, R4 ;
 Instr 463 @ 0x1cf0 (7408) - DFMA R4, R2, R4, R2 ;
 Instr 464 @ 0x1d00 (7424) - DFMA R2, R4, -R12, 1 ;
 Instr 465 @ 0x1d10 (7440) - DFMA R2, R4, R2, R4 ;
 Instr 466 @ 0x1d20 (7456) - DMUL R14, R2, R10 ;
 Instr 467 @ 0x1d30 (7472) - DFMA R4, R14, -R12, R10 ;
 Instr 468 @ 0x1d40 (7488) - DFMA R14, R2, R4, R14 ;
 Instr 469 @ 0x1d50 (7504) - FFMA R0, RZ, R13, R15 ;
 Instr 470 @ 0x1d60 (7520) - FSETP.GT.AND P5, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 471 @ 0x1d70 (7536) - @P5 BRA P4, 0x1e00 ;
Basic block id 69 - num instructions 6
 Instr 472 @ 0x1d80 (7552) - IMAD.MOV.U32 R2, RZ, RZ, R10 ;
 Instr 473 @ 0x1d90 (7568) - MOV R0, 0x1de0 ;
 Instr 474 @ 0x1da0 (7584) - IMAD.MOV.U32 R3, RZ, RZ, R11 ;
 Instr 475 @ 0x1db0 (7600) - IMAD.MOV.U32 R4, RZ, RZ, R12 ;
 Instr 476 @ 0x1dc0 (7616) - IMAD.MOV.U32 R5, RZ, RZ, R13 ;
 Instr 477 @ 0x1dd0 (7632) - CALL.REL.NOINC 0x2140 ;
Basic block id 70 - num instructions 2
 Instr 478 @ 0x1de0 (7648) - MOV R14, R2 ;
 Instr 479 @ 0x1df0 (7664) - IMAD.MOV.U32 R15, RZ, RZ, R3 ;
Basic block id 71 - num instructions 6
 Instr 480 @ 0x1e00 (7680) - BSYNC B1 ;
 Instr 481 @ 0x1e10 (7696) - IADD3 R3, R51, 0x380, RZ ;
 Instr 482 @ 0x1e20 (7712) - BMOV.32.CLEAR RZ, B1 ;
 Instr 483 @ 0x1e30 (7728) - BSSY B1, 0x1fd0 ;
 Instr 484 @ 0x1e40 (7744) - ISETP.GE.AND P4, PT, R3, R44, PT ;
 Instr 485 @ 0x1e50 (7760) - @P4 BRA 0x1fc0 ;
Basic block id 72 - num instructions 14
 Instr 486 @ 0x1e60 (7776) - MUFU.RCP64H R3, R9 ;
 Instr 487 @ 0x1e70 (7792) - IMAD.MOV.U32 R2, RZ, RZ, 0x1 ;
 Instr 488 @ 0x1e80 (7808) - FSETP.GTU.AND P5, PT, |R7|, 6.4490557925156731238e-37, PT ;
 Instr 489 @ 0x1e90 (7824) - DFMA R4, R2, -R8, 1 ;
 Instr 490 @ 0x1ea0 (7840) - DFMA R4, R4, R4, R4 ;
 Instr 491 @ 0x1eb0 (7856) - DFMA R4, R2, R4, R2 ;
 Instr 492 @ 0x1ec0 (7872) - DFMA R2, R4, -R8, 1 ;
 Instr 493 @ 0x1ed0 (7888) - DFMA R2, R4, R2, R4 ;
 Instr 494 @ 0x1ee0 (7904) - DMUL R10, R2, R6 ;
 Instr 495 @ 0x1ef0 (7920) - DFMA R4, R10, -R8, R6 ;
 Instr 496 @ 0x1f00 (7936) - DFMA R10, R2, R4, R10 ;
 Instr 497 @ 0x1f10 (7952) - FFMA R0, RZ, R9, R11 ;
 Instr 498 @ 0x1f20 (7968) - FSETP.GT.AND P6, PT, |R0|, 4.8978884574313168671e-40, PT ;
 Instr 499 @ 0x1f30 (7984) - @P6 BRA P5, 0x1fc0 ;
Basic block id 73 - num instructions 6
 Instr 500 @ 0x1f40 (8000) - IMAD.MOV.U32 R2, RZ, RZ, R6 ;
 Instr 501 @ 0x1f50 (8016) - MOV R4, R8 ;
 Instr 502 @ 0x1f60 (8032) - IMAD.MOV.U32 R3, RZ, RZ, R7 ;
 Instr 503 @ 0x1f70 (8048) - MOV R0, 0x1fa0 ;
 Instr 504 @ 0x1f80 (8064) - IMAD.MOV.U32 R5, RZ, RZ, R9 ;
 Instr 505 @ 0x1f90 (8080) - CALL.REL.NOINC 0x2140 ;
Basic block id 74 - num instructions 2
 Instr 506 @ 0x1fa0 (8096) - IMAD.MOV.U32 R10, RZ, RZ, R2 ;
 Instr 507 @ 0x1fb0 (8112) - IMAD.MOV.U32 R11, RZ, RZ, R3 ;
Basic block id 75 - num instructions 2
 Instr 508 @ 0x1fc0 (8128) - BSYNC B1 ;
 Instr 509 @ 0x1fd0 (8144) - @P0 EXIT ;
Basic block id 76 - num instructions 6
 Instr 510 @ 0x1fe0 (8160) - MOV R3, 0x8 ;
 Instr 511 @ 0x1ff0 (8176) - IMAD.IADD R2, R52, 0x1, R51 ;
 Instr 512 @ 0x2000 (8192) - ISETP.NE.AND P5, PT, R45, RZ, PT ;
 Instr 513 @ 0x2010 (8208) - IMAD.WIDE.U32 R2, R2, R3, c[0x0][0x168] ;
 Instr 514 @ 0x2020 (8224) - STG.E.64.SYS [R2], R36 ;
 Instr 515 @ 0x2030 (8240) - @P5 EXIT ;
Basic block id 77 - num instructions 3
 Instr 516 @ 0x2040 (8256) - ISETP.NE.AND P5, PT, R32, RZ, PT ;
 Instr 517 @ 0x2050 (8272) - STG.E.64.SYS [R2+0x400], R34 ;
 Instr 518 @ 0x2060 (8288) - @P5 EXIT ;
Basic block id 78 - num instructions 3
 Instr 519 @ 0x2070 (8304) - ISETP.NE.AND P5, PT, R28, RZ, PT ;
 Instr 520 @ 0x2080 (8320) - STG.E.64.SYS [R2+0x800], R30 ;
 Instr 521 @ 0x2090 (8336) - @P5 EXIT ;
Basic block id 79 - num instructions 2
 Instr 522 @ 0x20a0 (8352) - STG.E.64.SYS [R2+0xc00], R26 ;
 Instr 523 @ 0x20b0 (8368) - @P1 EXIT ;
Basic block id 80 - num instructions 2
 Instr 524 @ 0x20c0 (8384) - STG.E.64.SYS [R2+0x1000], R22 ;
 Instr 525 @ 0x20d0 (8400) - @P2 EXIT ;
Basic block id 81 - num instructions 2
 Instr 526 @ 0x20e0 (8416) - STG.E.64.SYS [R2+0x1400], R18 ;
 Instr 527 @ 0x20f0 (8432) - @P3 EXIT ;
Basic block id 82 - num instructions 2
 Instr 528 @ 0x2100 (8448) - STG.E.64.SYS [R2+0x1800], R14 ;
 Instr 529 @ 0x2110 (8464) - @P4 EXIT ;
Basic block id 83 - num instructions 2
 Instr 530 @ 0x2120 (8480) - STG.E.64.SYS [R2+0x1c00], R10 ;
 Instr 531 @ 0x2130 (8496) - EXIT ;
Basic block id 84 - num instructions 25
 Instr 532 @ 0x2140 (8512) - LOP3.LUT R38, R5, 0x40000000, RZ, 0xc0, !PT ;
 Instr 533 @ 0x2150 (8528) - IMAD.MOV.U32 R53, RZ, RZ, 0x5ff00000 ;
 Instr 534 @ 0x2160 (8544) - LOP3.LUT R50, R3, 0x7f800000, RZ, 0xc0, !PT ;
 Instr 535 @ 0x2170 (8560) - IMAD.MOV.U32 R40, RZ, RZ, 0x1 ;
 Instr 536 @ 0x2180 (8576) - ISETP.GE.U32.AND P5, PT, R38, 0x40000000, PT ;
 Instr 537 @ 0x2190 (8592) - IMAD.MOV.U32 R38, RZ, RZ, RZ ;
 Instr 538 @ 0x21a0 (8608) - BMOV.32.CLEAR RZ, B0 ;
 Instr 539 @ 0x21b0 (8624) - BSSY B0, 0x2680 ;
 Instr 540 @ 0x21c0 (8640) - SEL R39, R53, 0x1ff00000, !P5 ;
 Instr 541 @ 0x21d0 (8656) - ISETP.GE.U32.AND P5, PT, R50, 0x3e800000, PT ;
 Instr 542 @ 0x21e0 (8672) - DMUL R42, R4, R38 ;
 Instr 543 @ 0x21f0 (8688) - MUFU.RCP64H R41, R43 ;
 Instr 544 @ 0x2200 (8704) - DFMA R46, -R42, R40, 1 ;
 Instr 545 @ 0x2210 (8720) - DFMA R46, R46, R46, R46 ;
 Instr 546 @ 0x2220 (8736) - DFMA R40, R40, R46, R40 ;
 Instr 547 @ 0x2230 (8752) - DFMA R48, -R42, R40, 1 ;
 Instr 548 @ 0x2240 (8768) - DFMA R48, R40, R48, R40 ;
 Instr 549 @ 0x2250 (8784) - SEL R41, R53, 0x1ff00000, !P5 ;
 Instr 550 @ 0x2260 (8800) - IMAD.MOV.U32 R40, RZ, RZ, RZ ;
 Instr 551 @ 0x2270 (8816) - DMUL R46, R2, R40 ;
 Instr 552 @ 0x2280 (8832) - DMUL R40, R46, R48 ;
 Instr 553 @ 0x2290 (8848) - DFMA R42, -R42, R40, R46 ;
 Instr 554 @ 0x22a0 (8864) - DFMA R40, R48, R42, R40 ;
 Instr 555 @ 0x22b0 (8880) - DSETP.GT.AND P5, PT, |R40|, RZ, PT ;
 Instr 556 @ 0x22c0 (8896) - @!P5 BRA 0x25a0 ;
Basic block id 85 - num instructions 2
 Instr 557 @ 0x22d0 (8912) - ISETP.GT.U32.AND P5, PT, R50, 0x3e7fffff, PT ;
 Instr 558 @ 0x22e0 (8928) - DMUL R48, R38, R40 ;
Basic block id 86 - num instructions 13
 Instr 559 @ 0x22f0 (8944) - MOV R42, RZ ;
 Instr 560 @ 0x2300 (8960) - SEL R43, R53, 0x1ff00000, P5 ;
 Instr 561 @ 0x2310 (8976) - DMUL R46, R40, R42 ;
 Instr 562 @ 0x2320 (8992) - DMUL R40, R42, R48 ;
 Instr 563 @ 0x2330 (9008) - DMUL R38, R38, R46 ;
 Instr 564 @ 0x2340 (9024) - DFMA R46, R4, R40, -R2 ;
 Instr 565 @ 0x2350 (9040) - DFMA R42, R4, R38, -R2 ;
 Instr 566 @ 0x2360 (9056) - DSETP.GT.AND P5, PT, |R46|, |R42|, PT ;
 Instr 567 @ 0x2370 (9072) - FSEL R41, R39, R41, P5 ;
 Instr 568 @ 0x2380 (9088) - FSEL R38, R38, R40, P5 ;
 Instr 569 @ 0x2390 (9104) - FSETP.GTU.AND P5, PT, |R41|, 1.469367938527859385e-39, PT ;
 Instr 570 @ 0x23a0 (9120) - IMAD.MOV.U32 R39, RZ, RZ, R41 ;
 Instr 571 @ 0x23b0 (9136) - @P5 BRA 0x2670 ;
Basic block id 87 - num instructions 30
 Instr 572 @ 0x23c0 (9152) - IMAD.MOV.U32 R42, RZ, RZ, 0x58500000 ;
 Instr 573 @ 0x23d0 (9168) - FSETP.GEU.AND P5, PT, |R3|, 1.5046327690525280102e-36, PT ;
 Instr 574 @ 0x23e0 (9184) - IMAD.MOV.U32 R39, RZ, RZ, R41 ;
 Instr 575 @ 0x23f0 (9200) - LOP3.LUT R40, R38, 0xfffffffe, RZ, 0xc0, !PT ;
 Instr 576 @ 0x2400 (9216) - SEL R43, R42, 0x3ff00000, !P5 ;
 Instr 577 @ 0x2410 (9232) - IMAD.MOV.U32 R42, RZ, RZ, RZ ;
 Instr 578 @ 0x2420 (9248) - LOP3.LUT R38, R38, 0x1, RZ, 0xfc, !PT ;
 Instr 579 @ 0x2430 (9264) - DMUL R46, R4, R42 ;
 Instr 580 @ 0x2440 (9280) - DMUL R42, R2, R42 ;
 Instr 581 @ 0x2450 (9296) - DFMA R4, R40, R46, -R42 ;
 Instr 582 @ 0x2460 (9312) - DFMA R2, R38, R46, -R42 ;
 Instr 583 @ 0x2470 (9328) - DSETP.GT.AND P5, PT, |R4|, |R2|, PT ;
 Instr 584 @ 0x2480 (9344) - FSEL R2, R38, R40, P5 ;
 Instr 585 @ 0x2490 (9360) - IADD3 R4, P5, R2.reuse, 0x1, RZ ;
 Instr 586 @ 0x24a0 (9376) - LOP3.LUT R3, R2.reuse, 0x1, RZ, 0xc0, !PT ;
 Instr 587 @ 0x24b0 (9392) - IADD3.X R38, RZ, R41, RZ, P5, !PT ;
 Instr 588 @ 0x24c0 (9408) - IADD3 R5, P5, R2, -0x1, RZ ;
 Instr 589 @ 0x24d0 (9424) - IADD3.X R39, R41, -0x1, RZ, P5, !PT ;
 Instr 590 @ 0x24e0 (9440) - ISETP.NE.U32.AND P5, PT, R3, 0x1, PT ;
 Instr 591 @ 0x24f0 (9456) - FSEL R4, R2, R4, P5 ;
 Instr 592 @ 0x2500 (9472) - FSEL R2, R5, R2, P5 ;
 Instr 593 @ 0x2510 (9488) - FSEL R5, R41, R38, P5 ;
 Instr 594 @ 0x2520 (9504) - FSEL R3, R39, R41, P5 ;
 Instr 595 @ 0x2530 (9520) - DFMA R38, R46, R4, -R42 ;
 Instr 596 @ 0x2540 (9536) - DFMA R42, R46, R2, -R42 ;
 Instr 597 @ 0x2550 (9552) - DSETP.GT.AND P5, PT, |R38|, |R42|, PT ;
 Instr 598 @ 0x2560 (9568) - FSEL R38, R2, R4, P5 ;
 Instr 599 @ 0x2570 (9584) - FSEL R2, R3, R5, P5 ;
 Instr 600 @ 0x2580 (9600) - IMAD.MOV.U32 R39, RZ, RZ, R2 ;
 Instr 601 @ 0x2590 (9616) - BRA 0x2670 ;
Basic block id 88 - num instructions 2
 Instr 602 @ 0x25a0 (9632) - DSETP.NEU.AND P5, PT, R40, RZ, PT ;
 Instr 603 @ 0x25b0 (9648) - @!P5 BRA 0x2660 ;
Basic block id 89 - num instructions 10
 Instr 604 @ 0x25c0 (9664) - MUFU.RCP64H R39, R5 ;
 Instr 605 @ 0x25d0 (9680) - IMAD.MOV.U32 R38, RZ, RZ, RZ ;
 Instr 606 @ 0x25e0 (9696) - DSETP.GT.AND P5, PT, |R38|, RZ, PT ;
 Instr 607 @ 0x25f0 (9712) - @!P5 DSETP.NEU.AND P6, PT, |R4|, +INF , PT ;
 Instr 608 @ 0x2600 (9728) - @!P5 FSEL R40, R4, R38, P6 ;
 Instr 609 @ 0x2610 (9744) - @!P5 FSEL R4, R5, R39, P6 ;
 Instr 610 @ 0x2620 (9760) - @!P5 IMAD.MOV.U32 R38, RZ, RZ, R40 ;
 Instr 611 @ 0x2630 (9776) - @!P5 IMAD.MOV.U32 R39, RZ, RZ, R4 ;
 Instr 612 @ 0x2640 (9792) - DMUL R38, R2, R38 ;
 Instr 613 @ 0x2650 (9808) - BRA 0x2670 ;
Basic block id 90 - num instructions 1
 Instr 614 @ 0x2660 (9824) - DMUL R38, R2, R4 ;
Basic block id 91 - num instructions 6
 Instr 615 @ 0x2670 (9840) - BSYNC B0 ;
 Instr 616 @ 0x2680 (9856) - IMAD.MOV.U32 R4, RZ, RZ, R0 ;
 Instr 617 @ 0x2690 (9872) - MOV R2, R38 ;
 Instr 618 @ 0x26a0 (9888) - IMAD.MOV.U32 R5, RZ, RZ, 0x0 ;
 Instr 619 @ 0x26b0 (9904) - IMAD.MOV.U32 R3, RZ, RZ, R39 ;
 Instr 620 @ 0x26c0 (9920) - RET.REL.NODEC R4 0x0 ;
Basic block id 92 - num instructions 1
 Instr 621 @ 0x26d0 (9936) - BRA 0x26d0;
inspecting void at::native::vectorized_elementwise_kernel<2, at::native::BinaryFunctor<double, double, double, at::native::binary_internal::DivFunctor<double> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<double, double, double, at::native::binary_internal::DivFunctor<double> >, std::array<char*, 3ul>) - number basic blocks 93
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 21 @ 0x150 (336) - IMAD.MOV.U32 R3, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 52 @ 0x340 (832) - IMAD.MOV.U32 R2, RZ, RZ, R34 ;
Inject count_instr before - Instr 58 @ 0x3a0 (928) - IMAD.MOV.U32 R6, RZ, RZ, R2 ;
Inject count_instr before - Instr 60 @ 0x3c0 (960) - BSYNC B1 ;
Inject count_instr before - Instr 71 @ 0x470 (1136) - DMUL R4, R32, R2 ;
Inject count_instr before - Instr 77 @ 0x4d0 (1232) - MOV R2, R32 ;
Inject count_instr before - Instr 83 @ 0x530 (1328) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
Inject count_instr before - Instr 85 @ 0x550 (1360) - BSYNC B1 ;
Inject count_instr before - Instr 97 @ 0x610 (1552) - DMUL R34, R30, R2 ;
Inject count_instr before - Instr 103 @ 0x670 (1648) - IMAD.MOV.U32 R2, RZ, RZ, R30 ;
Inject count_instr before - Instr 109 @ 0x6d0 (1744) - IMAD.MOV.U32 R34, RZ, RZ, R2 ;
Inject count_instr before - Instr 111 @ 0x6f0 (1776) - BSYNC B1 ;
Inject count_instr before - Instr 122 @ 0x7a0 (1952) - DMUL R32, R28, R2 ;
Inject count_instr before - Instr 128 @ 0x800 (2048) - IMAD.MOV.U32 R2, RZ, RZ, R28 ;
Inject count_instr before - Instr 134 @ 0x860 (2144) - MOV R32, R2 ;
Inject count_instr before - Instr 136 @ 0x880 (2176) - BSYNC B1 ;
Inject count_instr before - Instr 148 @ 0x940 (2368) - DMUL R6, R26, R2 ;
Inject count_instr before - Instr 154 @ 0x9a0 (2464) - IMAD.MOV.U32 R2, RZ, RZ, R26 ;
Inject count_instr before - Instr 160 @ 0xa00 (2560) - IMAD.MOV.U32 R6, RZ, RZ, R2 ;
Inject count_instr before - Instr 162 @ 0xa20 (2592) - BSYNC B1 ;
Inject count_instr before - Instr 173 @ 0xad0 (2768) - DMUL R4, R24, R2 ;
Inject count_instr before - Instr 179 @ 0xb30 (2864) - IMAD.MOV.U32 R2, RZ, RZ, R24 ;
Inject count_instr before - Instr 185 @ 0xb90 (2960) - IMAD.MOV.U32 R4, RZ, RZ, R2 ;
Inject count_instr before - Instr 187 @ 0xbb0 (2992) - BSYNC B1 ;
Inject count_instr before - Instr 199 @ 0xc70 (3184) - DMUL R14, R22, R2 ;
Inject count_instr before - Instr 205 @ 0xcd0 (3280) - IMAD.MOV.U32 R2, RZ, RZ, R22 ;
Inject count_instr before - Instr 211 @ 0xd30 (3376) - IMAD.MOV.U32 R14, RZ, RZ, R2 ;
Inject count_instr before - Instr 213 @ 0xd50 (3408) - BSYNC B1 ;
Inject count_instr before - Instr 224 @ 0xe00 (3584) - DMUL R12, R20, R2 ;
Inject count_instr before - Instr 230 @ 0xe60 (3680) - MOV R2, R20 ;
Inject count_instr before - Instr 236 @ 0xec0 (3776) - IMAD.MOV.U32 R12, RZ, RZ, R2 ;
Inject count_instr before - Instr 238 @ 0xee0 (3808) - BSYNC B1 ;
Inject count_instr before - Instr 241 @ 0xf10 (3856) - ISETP.GE.AND P0, PT, R51, R44, PT ;
Inject count_instr before - Instr 247 @ 0xf70 (3952) - IADD3 R36, R52, R51, RZ ;
Inject count_instr before - Instr 255 @ 0xff0 (4080) - @P1 BRA 0x11f0 ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - LDG.E.64.SYS R30, [R34+0x400] ;
Inject count_instr before - Instr 261 @ 0x1050 (4176) - LDG.E.64.SYS R26, [R34+0x800] ;
Inject count_instr before - Instr 266 @ 0x10a0 (4256) - LDG.E.64.SYS R22, [R34+0xc00] ;
Inject count_instr before - Instr 271 @ 0x10f0 (4336) - LDG.E.64.SYS R18, [R34+0x1000] ;
Inject count_instr before - Instr 276 @ 0x1140 (4416) - LDG.E.64.SYS R14, [R34+0x1400] ;
Inject count_instr before - Instr 281 @ 0x1190 (4496) - IADD3 R11, R51, 0x380, RZ ;
Inject count_instr before - Instr 287 @ 0x11f0 (4592) - BSYNC B0 ;
Inject count_instr before - Instr 291 @ 0x1230 (4656) - MUFU.RCP64H R35, R5 ;
Inject count_instr before - Instr 295 @ 0x1270 (4720) - DFMA R36, R36, R36, R36 ;
Inject count_instr before - Instr 305 @ 0x1310 (4880) - MOV R0, 0x1330 ;
Inject count_instr before - Instr 307 @ 0x1330 (4912) - IMAD.MOV.U32 R36, RZ, RZ, R2 ;
Inject count_instr before - Instr 309 @ 0x1350 (4944) - BSYNC B1 ;
Inject count_instr before - Instr 316 @ 0x13c0 (5056) - MUFU.RCP64H R3, R33 ;
Inject count_instr before - Instr 330 @ 0x14a0 (5280) - MOV R2, R30 ;
Inject count_instr before - Instr 336 @ 0x1500 (5376) - IMAD.MOV.U32 R34, RZ, RZ, R2 ;
Inject count_instr before - Instr 338 @ 0x1520 (5408) - BSYNC B1 ;
Inject count_instr before - Instr 345 @ 0x1590 (5520) - MUFU.RCP64H R3, R29 ;
Inject count_instr before - Instr 359 @ 0x1670 (5744) - IMAD.MOV.U32 R2, RZ, RZ, R26 ;
Inject count_instr before - Instr 365 @ 0x16d0 (5840) - IMAD.MOV.U32 R30, RZ, RZ, R2 ;
Inject count_instr before - Instr 367 @ 0x16f0 (5872) - BSYNC B1 ;
Inject count_instr before - Instr 374 @ 0x1760 (5984) - MUFU.RCP64H R3, R25 ;
Inject count_instr before - Instr 388 @ 0x1840 (6208) - IMAD.MOV.U32 R2, RZ, RZ, R22 ;
Inject count_instr before - Instr 394 @ 0x18a0 (6304) - MOV R26, R2 ;
Inject count_instr before - Instr 396 @ 0x18c0 (6336) - BSYNC B1 ;
Inject count_instr before - Instr 402 @ 0x1920 (6432) - MUFU.RCP64H R3, R21 ;
Inject count_instr before - Instr 416 @ 0x1a00 (6656) - IMAD.MOV.U32 R2, RZ, RZ, R18 ;
Inject count_instr before - Instr 422 @ 0x1a60 (6752) - IMAD.MOV.U32 R22, RZ, RZ, R2 ;
Inject count_instr before - Instr 424 @ 0x1a80 (6784) - BSYNC B1 ;
Inject count_instr before - Instr 430 @ 0x1ae0 (6880) - MUFU.RCP64H R3, R17 ;
Inject count_instr before - Instr 444 @ 0x1bc0 (7104) - IMAD.MOV.U32 R2, RZ, RZ, R14 ;
Inject count_instr before - Instr 450 @ 0x1c20 (7200) - IMAD.MOV.U32 R18, RZ, RZ, R2 ;
Inject count_instr before - Instr 452 @ 0x1c40 (7232) - BSYNC B1 ;
Inject count_instr before - Instr 458 @ 0x1ca0 (7328) - MUFU.RCP64H R3, R13 ;
Inject count_instr before - Instr 472 @ 0x1d80 (7552) - IMAD.MOV.U32 R2, RZ, RZ, R10 ;
Inject count_instr before - Instr 478 @ 0x1de0 (7648) - MOV R14, R2 ;
Inject count_instr before - Instr 480 @ 0x1e00 (7680) - BSYNC B1 ;
Inject count_instr before - Instr 486 @ 0x1e60 (7776) - MUFU.RCP64H R3, R9 ;
Inject count_instr before - Instr 500 @ 0x1f40 (8000) - IMAD.MOV.U32 R2, RZ, RZ, R6 ;
Inject count_instr before - Instr 506 @ 0x1fa0 (8096) - IMAD.MOV.U32 R10, RZ, RZ, R2 ;
Inject count_instr before - Instr 508 @ 0x1fc0 (8128) - BSYNC B1 ;
Inject count_instr before - Instr 510 @ 0x1fe0 (8160) - MOV R3, 0x8 ;
Inject count_instr before - Instr 516 @ 0x2040 (8256) - ISETP.NE.AND P5, PT, R32, RZ, PT ;
Inject count_instr before - Instr 519 @ 0x2070 (8304) - ISETP.NE.AND P5, PT, R28, RZ, PT ;
Inject count_instr before - Instr 522 @ 0x20a0 (8352) - STG.E.64.SYS [R2+0xc00], R26 ;
Inject count_instr before - Instr 524 @ 0x20c0 (8384) - STG.E.64.SYS [R2+0x1000], R22 ;
Inject count_instr before - Instr 526 @ 0x20e0 (8416) - STG.E.64.SYS [R2+0x1400], R18 ;
Inject count_instr before - Instr 528 @ 0x2100 (8448) - STG.E.64.SYS [R2+0x1800], R14 ;
Inject count_instr before - Instr 530 @ 0x2120 (8480) - STG.E.64.SYS [R2+0x1c00], R10 ;
Inject count_instr before - Instr 532 @ 0x2140 (8512) - LOP3.LUT R38, R5, 0x40000000, RZ, 0xc0, !PT ;
Inject count_instr before - Instr 557 @ 0x22d0 (8912) - ISETP.GT.U32.AND P5, PT, R50, 0x3e7fffff, PT ;
Inject count_instr before - Instr 559 @ 0x22f0 (8944) - MOV R42, RZ ;
Inject count_instr before - Instr 572 @ 0x23c0 (9152) - IMAD.MOV.U32 R42, RZ, RZ, 0x58500000 ;
Inject count_instr before - Instr 602 @ 0x25a0 (9632) - DSETP.NEU.AND P5, PT, R40, RZ, PT ;
Inject count_instr before - Instr 604 @ 0x25c0 (9664) - MUFU.RCP64H R39, R5 ;
Inject count_instr before - Instr 614 @ 0x2660 (9824) - DMUL R38, R2, R4 ;
Inject count_instr before - Instr 615 @ 0x2670 (9840) - BSYNC B0 ;
Inject count_instr before - Instr 621 @ 0x26d0 (9936) - BRA 0x26d0;
kernel 284 - _ZN2at6native29vectorized_elementwise_kernelILi2ENS0_13BinaryFunctorIdddNS0_15binary_internal10DivFunctorIdEEEESt5arrayIPcLm3EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 352, total instructions 65673541
Function void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<double>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, double)::{lambda(double)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<double>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, double)::{lambda(double)#1}, std::array<char*, 2ul>)
Basic block id 0 - num instructions 14
 Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
 Instr 1 @ 0x10 (16) - S2R R5, SR_CTAID.X ;
 Instr 2 @ 0x20 (32) - CS2R R2, SRZ ;
 Instr 3 @ 0x30 (48) - CS2R R14, SRZ ;
 Instr 4 @ 0x40 (64) - CS2R R16, SRZ ;
 Instr 5 @ 0x50 (80) - S2R R0, SR_TID.X ;
 Instr 6 @ 0x60 (96) - CS2R R10, SRZ ;
 Instr 7 @ 0x70 (112) - CS2R R18, SRZ ;
 Instr 8 @ 0x80 (128) - CS2R R20, SRZ ;
 Instr 9 @ 0x90 (144) - CS2R R22, SRZ ;
 Instr 10 @ 0xa0 (160) - IMAD.SHL.U32 R5, R5, 0x400, RZ ;
 Instr 11 @ 0xb0 (176) - IADD3 R7, -R5, c[0x0][0x160], RZ ;
 Instr 12 @ 0xc0 (192) - ISETP.GE.U32.AND P0, PT, R7, 0x400, PT ;
 Instr 13 @ 0xd0 (208) - @!P0 BRA 0x5a0 ;
Basic block id 1 - num instructions 9
 Instr 14 @ 0xe0 (224) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
 Instr 15 @ 0xf0 (240) - IMAD.WIDE R2, R5, R2, c[0x0][0x188] ;
 Instr 16 @ 0x100 (256) - IMAD.WIDE.U32 R2, R0, 0x20, R2 ;
 Instr 17 @ 0x110 (272) - LDG.E.128.SYS R20, [R2] ;
 Instr 18 @ 0x120 (288) - LDG.E.128.SYS R8, [R2+0x10] ;
 Instr 19 @ 0x130 (304) - LDG.E.128.SYS R12, [R2+0x1000] ;
 Instr 20 @ 0x140 (320) - LDG.E.128.SYS R16, [R2+0x1010] ;
 Instr 21 @ 0x150 (336) - ISETP.NE.AND P0, PT, RZ, c[0x0][0x168], PT ;
 Instr 22 @ 0x160 (352) - @!P0 BRA 0x3a0 ;
Basic block id 2 - num instructions 3
 Instr 23 @ 0x170 (368) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x168] ;
 Instr 24 @ 0x180 (384) - ISETP.NE.AND P0, PT, R2, 0x1, PT ;
 Instr 25 @ 0x190 (400) - @!P0 BRA 0x300 ;
Basic block id 3 - num instructions 2
 Instr 26 @ 0x1a0 (416) - ISETP.NE.AND P0, PT, R2, 0x2, PT ;
 Instr 27 @ 0x1b0 (432) - @P0 BRA 0x260 ;
Basic block id 4 - num instructions 10
 Instr 28 @ 0x1c0 (448) - DSETP.LE.AND P2, PT, R20, c[0x0][0x170], PT ;
 Instr 29 @ 0x1d0 (464) - DSETP.LE.AND P0, PT, R22, c[0x0][0x170], PT ;
 Instr 30 @ 0x1e0 (480) - DSETP.LE.AND P1, PT, R8, c[0x0][0x170], PT ;
 Instr 31 @ 0x1f0 (496) - P2R R2, PR, RZ, 0x4 ;
 Instr 32 @ 0x200 (512) - DSETP.LE.AND P2, PT, R10, c[0x0][0x170], PT ;
 Instr 33 @ 0x210 (528) - DSETP.LE.AND P3, PT, R12, c[0x0][0x170], PT ;
 Instr 34 @ 0x220 (544) - DSETP.LE.AND P4, PT, R14, c[0x0][0x170], PT ;
 Instr 35 @ 0x230 (560) - DSETP.LE.AND P5, PT, R16, c[0x0][0x170], PT ;
 Instr 36 @ 0x240 (576) - DSETP.LE.AND P6, PT, R18, c[0x0][0x170], PT ;
 Instr 37 @ 0x250 (592) - BRA 0x430 ;
Basic block id 5 - num instructions 10
 Instr 38 @ 0x260 (608) - DSETP.LT.AND P2, PT, R20, c[0x0][0x170], PT ;
 Instr 39 @ 0x270 (624) - DSETP.LT.AND P0, PT, R22, c[0x0][0x170], PT ;
 Instr 40 @ 0x280 (640) - DSETP.LT.AND P1, PT, R8, c[0x0][0x170], PT ;
 Instr 41 @ 0x290 (656) - P2R R2, PR, RZ, 0x4 ;
 Instr 42 @ 0x2a0 (672) - DSETP.LT.AND P2, PT, R10, c[0x0][0x170], PT ;
 Instr 43 @ 0x2b0 (688) - DSETP.LT.AND P3, PT, R12, c[0x0][0x170], PT ;
 Instr 44 @ 0x2c0 (704) - DSETP.LT.AND P4, PT, R14, c[0x0][0x170], PT ;
 Instr 45 @ 0x2d0 (720) - DSETP.LT.AND P5, PT, R16, c[0x0][0x170], PT ;
 Instr 46 @ 0x2e0 (736) - DSETP.LT.AND P6, PT, R18, c[0x0][0x170], PT ;
 Instr 47 @ 0x2f0 (752) - BRA 0x430 ;
Basic block id 6 - num instructions 10
 Instr 48 @ 0x300 (768) - DSETP.GT.AND P2, PT, R20, c[0x0][0x170], PT ;
 Instr 49 @ 0x310 (784) - DSETP.GT.AND P0, PT, R22, c[0x0][0x170], PT ;
 Instr 50 @ 0x320 (800) - DSETP.GT.AND P1, PT, R8, c[0x0][0x170], PT ;
 Instr 51 @ 0x330 (816) - P2R R2, PR, RZ, 0x4 ;
 Instr 52 @ 0x340 (832) - DSETP.GT.AND P2, PT, R10, c[0x0][0x170], PT ;
 Instr 53 @ 0x350 (848) - DSETP.GT.AND P3, PT, R12, c[0x0][0x170], PT ;
 Instr 54 @ 0x360 (864) - DSETP.GT.AND P4, PT, R14, c[0x0][0x170], PT ;
 Instr 55 @ 0x370 (880) - DSETP.GT.AND P5, PT, R16, c[0x0][0x170], PT ;
 Instr 56 @ 0x380 (896) - DSETP.GT.AND P6, PT, R18, c[0x0][0x170], PT ;
 Instr 57 @ 0x390 (912) - BRA 0x430 ;
Basic block id 7 - num instructions 9
 Instr 58 @ 0x3a0 (928) - DSETP.GE.AND P2, PT, R20, c[0x0][0x170], PT ;
 Instr 59 @ 0x3b0 (944) - DSETP.GE.AND P0, PT, R22, c[0x0][0x170], PT ;
 Instr 60 @ 0x3c0 (960) - DSETP.GE.AND P1, PT, R8, c[0x0][0x170], PT ;
 Instr 61 @ 0x3d0 (976) - P2R R2, PR, RZ, 0x4 ;
 Instr 62 @ 0x3e0 (992) - DSETP.GE.AND P2, PT, R10, c[0x0][0x170], PT ;
 Instr 63 @ 0x3f0 (1008) - DSETP.GE.AND P3, PT, R12, c[0x0][0x170], PT ;
 Instr 64 @ 0x400 (1024) - DSETP.GE.AND P4, PT, R14, c[0x0][0x170], PT ;
 Instr 65 @ 0x410 (1040) - DSETP.GE.AND P5, PT, R16, c[0x0][0x170], PT ;
 Instr 66 @ 0x420 (1056) - DSETP.GE.AND P6, PT, R18, c[0x0][0x170], PT ;
Basic block id 8 - num instructions 23
 Instr 67 @ 0x430 (1072) - P2R R3, PR, RZ, 0x40 ;
 Instr 68 @ 0x440 (1088) - ISETP.NE.AND P6, PT, R2, RZ, PT ;
 Instr 69 @ 0x450 (1104) - SEL R4, RZ, 0x1, !P3 ;
 Instr 70 @ 0x460 (1120) - SEL R2, RZ, 0x1, !P6 ;
 Instr 71 @ 0x470 (1136) - ISETP.NE.AND P6, PT, R3, RZ, PT ;
 Instr 72 @ 0x480 (1152) - SEL R3, RZ, 0x1, !P0 ;
 Instr 73 @ 0x490 (1168) - SEL R7, RZ, 0x1, !P4 ;
 Instr 74 @ 0x4a0 (1184) - PRMT R9, R3, 0x7604, R2 ;
 Instr 75 @ 0x4b0 (1200) - IADD3 R2, P0, R5, c[0x0][0x180], RZ ;
 Instr 76 @ 0x4c0 (1216) - PRMT R6, R7, 0x7604, R4 ;
 Instr 77 @ 0x4d0 (1232) - SEL R4, RZ, 0x1, !P1 ;
 Instr 78 @ 0x4e0 (1248) - IMAD.X R3, RZ, RZ, c[0x0][0x184], P0 ;
 Instr 79 @ 0x4f0 (1264) - SEL R5, RZ, 0x1, !P5 ;
 Instr 80 @ 0x500 (1280) - PRMT R9, R4, 0x7054, R9 ;
 Instr 81 @ 0x510 (1296) - IMAD.WIDE R2, R0, 0x4, R2 ;
 Instr 82 @ 0x520 (1312) - PRMT R6, R5, 0x7054, R6 ;
 Instr 83 @ 0x530 (1328) - SEL R4, RZ, 0x1, !P2 ;
 Instr 84 @ 0x540 (1344) - SEL R5, RZ, 0x1, !P6 ;
 Instr 85 @ 0x550 (1360) - PRMT R9, R4, 0x654, R9 ;
 Instr 86 @ 0x560 (1376) - PRMT R5, R5, 0x654, R6 ;
 Instr 87 @ 0x570 (1392) - STG.E.SYS [R2], R9 ;
 Instr 88 @ 0x580 (1408) - STG.E.SYS [R2+0x200], R5 ;
 Instr 89 @ 0x590 (1424) - EXIT ;
Basic block id 9 - num instructions 5
 Instr 90 @ 0x5a0 (1440) - ISETP.GE.AND P0, PT, R0, R7, PT ;
 Instr 91 @ 0x5b0 (1456) - BMOV.32.CLEAR RZ, B0 ;
 Instr 92 @ 0x5c0 (1472) - BSSY B0, 0x7f0 ;
 Instr 93 @ 0x5d0 (1488) - CS2R R24, SRZ ;
 Instr 94 @ 0x5e0 (1504) - @P0 BRA 0x7e0 ;
Basic block id 10 - num instructions 7
 Instr 95 @ 0x5f0 (1520) - IMAD.IADD R8, R5, 0x1, R0 ;
 Instr 96 @ 0x600 (1536) - IMAD.MOV.U32 R9, RZ, RZ, 0x8 ;
 Instr 97 @ 0x610 (1552) - IMAD.WIDE.U32 R8, R8, R9, c[0x0][0x188] ;
 Instr 98 @ 0x620 (1568) - LDG.E.64.SYS R24, [R8] ;
 Instr 99 @ 0x630 (1584) - IADD3 R4, R0, 0x80, RZ ;
 Instr 100 @ 0x640 (1600) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 101 @ 0x650 (1616) - @P1 BRA 0x7e0 ;
Basic block id 11 - num instructions 4
 Instr 102 @ 0x660 (1632) - LDG.E.64.SYS R22, [R8+0x400] ;
 Instr 103 @ 0x670 (1648) - IADD3 R4, R0, 0x100, RZ ;
 Instr 104 @ 0x680 (1664) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 105 @ 0x690 (1680) - @P1 BRA 0x7e0 ;
Basic block id 12 - num instructions 4
 Instr 106 @ 0x6a0 (1696) - LDG.E.64.SYS R20, [R8+0x800] ;
 Instr 107 @ 0x6b0 (1712) - IADD3 R4, R0, 0x180, RZ ;
 Instr 108 @ 0x6c0 (1728) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 109 @ 0x6d0 (1744) - @P1 BRA 0x7e0 ;
Basic block id 13 - num instructions 4
 Instr 110 @ 0x6e0 (1760) - LDG.E.64.SYS R18, [R8+0xc00] ;
 Instr 111 @ 0x6f0 (1776) - IADD3 R4, R0, 0x200, RZ ;
 Instr 112 @ 0x700 (1792) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 113 @ 0x710 (1808) - @P1 BRA 0x7e0 ;
Basic block id 14 - num instructions 4
 Instr 114 @ 0x720 (1824) - LDG.E.64.SYS R10, [R8+0x1000] ;
 Instr 115 @ 0x730 (1840) - IADD3 R4, R0, 0x280, RZ ;
 Instr 116 @ 0x740 (1856) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 117 @ 0x750 (1872) - @P1 BRA 0x7e0 ;
Basic block id 15 - num instructions 4
 Instr 118 @ 0x760 (1888) - LDG.E.64.SYS R16, [R8+0x1400] ;
 Instr 119 @ 0x770 (1904) - IADD3 R4, R0, 0x300, RZ ;
 Instr 120 @ 0x780 (1920) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 121 @ 0x790 (1936) - @P1 BRA 0x7e0 ;
Basic block id 16 - num instructions 4
 Instr 122 @ 0x7a0 (1952) - IADD3 R4, R0, 0x380, RZ ;
 Instr 123 @ 0x7b0 (1968) - LDG.E.64.SYS R14, [R8+0x1800] ;
 Instr 124 @ 0x7c0 (1984) - ISETP.GE.AND P1, PT, R4, R7, PT ;
 Instr 125 @ 0x7d0 (2000) - @!P1 LDG.E.64.SYS R2, [R8+0x1c00] ;
Basic block id 17 - num instructions 6
 Instr 126 @ 0x7e0 (2016) - BSYNC B0 ;
 Instr 127 @ 0x7f0 (2032) - ISETP.NE.AND P1, PT, RZ, c[0x0][0x168], PT ;
 Instr 128 @ 0x800 (2048) - BMOV.32.CLEAR RZ, B0 ;
 Instr 129 @ 0x810 (2064) - BSSY B0, 0xdc0 ;
 Instr 130 @ 0x820 (2080) - IADD3 R12, R0, 0x380, RZ ;
 Instr 131 @ 0x830 (2096) - @!P1 BRA 0xc70 ;
Basic block id 18 - num instructions 3
 Instr 132 @ 0x840 (2112) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x168] ;
 Instr 133 @ 0x850 (2128) - ISETP.NE.AND P1, PT, R4, 0x1, PT ;
 Instr 134 @ 0x860 (2144) - @!P1 BRA 0xb30 ;
Basic block id 19 - num instructions 2
 Instr 135 @ 0x870 (2160) - ISETP.NE.AND P1, PT, R4, 0x2, PT ;
 Instr 136 @ 0x880 (2176) - @P1 BRA 0x9f0 ;
Basic block id 20 - num instructions 19
 Instr 137 @ 0x890 (2192) - DSETP.GTU.AND P1, PT, R22, c[0x0][0x170], PT ;
 Instr 138 @ 0x8a0 (2208) - DSETP.GTU.AND P5, PT, R24, c[0x0][0x170], PT ;
 Instr 139 @ 0x8b0 (2224) - DSETP.GTU.AND P6, PT, R20, c[0x0][0x170], PT ;
 Instr 140 @ 0x8c0 (2240) - SEL R6, RZ, 0x1, P1 ;
 Instr 141 @ 0x8d0 (2256) - ISETP.GE.AND P1, PT, R12, R7, PT ;
 Instr 142 @ 0x8e0 (2272) - DSETP.GTU.AND P2, PT, R18, c[0x0][0x170], PT ;
 Instr 143 @ 0x8f0 (2288) - SEL R4, RZ, 0x1, P5 ;
 Instr 144 @ 0x900 (2304) - DSETP.GTU.AND P3, PT, R10, c[0x0][0x170], PT ;
 Instr 145 @ 0x910 (2320) - SEL R8, RZ, 0x1, P6 ;
 Instr 146 @ 0x920 (2336) - PRMT R10, R4, 0x7610, R10 ;
 Instr 147 @ 0x930 (2352) - DSETP.GTU.AND P4, PT, R16, c[0x0][0x170], PT ;
 Instr 148 @ 0x940 (2368) - PRMT R11, R8, 0x7610, R11 ;
 Instr 149 @ 0x950 (2384) - PRMT R10, R10, 0x5410, R6 ;
 Instr 150 @ 0x960 (2400) - DSETP.GTU.AND P5, PT, R14, c[0x0][0x170], PT ;
 Instr 151 @ 0x970 (2416) - SEL R4, RZ, 0x1, P2 ;
 Instr 152 @ 0x980 (2432) - SEL R6, RZ, 0x1, P3 ;
 Instr 153 @ 0x990 (2448) - SEL R8, RZ, 0x1, P4 ;
 Instr 154 @ 0x9a0 (2464) - SEL R9, RZ, 0x1, P5 ;
 Instr 155 @ 0x9b0 (2480) - @P1 BRA 0xdb0 ;
Basic block id 21 - num instructions 3
 Instr 156 @ 0x9c0 (2496) - DSETP.GTU.AND P2, PT, R2, c[0x0][0x170], PT ;
 Instr 157 @ 0x9d0 (2512) - SEL R2, RZ, 0x1, P2 ;
 Instr 158 @ 0x9e0 (2528) - BRA 0xdb0 ;
Basic block id 22 - num instructions 17
 Instr 159 @ 0x9f0 (2544) - DSETP.GEU.AND P1, PT, R22, c[0x0][0x170], PT ;
 Instr 160 @ 0xa00 (2560) - DSETP.GEU.AND P5, PT, R24, c[0x0][0x170], PT ;
 Instr 161 @ 0xa10 (2576) - DSETP.GEU.AND P3, PT, R10, c[0x0][0x170], PT ;
 Instr 162 @ 0xa20 (2592) - SEL R4, RZ, 0x1, P1 ;
 Instr 163 @ 0xa30 (2608) - ISETP.GE.AND P1, PT, R12, R7, PT ;
 Instr 164 @ 0xa40 (2624) - DSETP.GEU.AND P6, PT, R20, c[0x0][0x170], PT ;
 Instr 165 @ 0xa50 (2640) - SEL R10, RZ, 0x1, P5 ;
 Instr 166 @ 0xa60 (2656) - DSETP.GEU.AND P2, PT, R18, c[0x0][0x170], PT ;
 Instr 167 @ 0xa70 (2672) - PRMT R10, R10, 0x5410, R4 ;
 Instr 168 @ 0xa80 (2688) - SEL R6, RZ, 0x1, P3 ;
 Instr 169 @ 0xa90 (2704) - DSETP.GEU.AND P4, PT, R16, c[0x0][0x170], PT ;
 Instr 170 @ 0xaa0 (2720) - SEL R11, RZ, 0x1, P6 ;
 Instr 171 @ 0xab0 (2736) - DSETP.GEU.AND P5, PT, R14, c[0x0][0x170], PT ;
 Instr 172 @ 0xac0 (2752) - SEL R4, RZ, 0x1, P2 ;
 Instr 173 @ 0xad0 (2768) - SEL R8, RZ, 0x1, P4 ;
 Instr 174 @ 0xae0 (2784) - SEL R9, RZ, 0x1, P5 ;
 Instr 175 @ 0xaf0 (2800) - @P1 BRA 0xdb0 ;
Basic block id 23 - num instructions 3
 Instr 176 @ 0xb00 (2816) - DSETP.GEU.AND P2, PT, R2, c[0x0][0x170], PT ;
 Instr 177 @ 0xb10 (2832) - SEL R2, RZ, 0x1, P2 ;
 Instr 178 @ 0xb20 (2848) - BRA 0xdb0 ;
Basic block id 24 - num instructions 17
 Instr 179 @ 0xb30 (2864) - DSETP.GT.AND P1, PT, R22, c[0x0][0x170], PT ;
 Instr 180 @ 0xb40 (2880) - DSETP.GT.AND P5, PT, R24, c[0x0][0x170], PT ;
 Instr 181 @ 0xb50 (2896) - DSETP.GT.AND P3, PT, R10, c[0x0][0x170], PT ;
 Instr 182 @ 0xb60 (2912) - SEL R4, RZ, 0x1, !P1 ;
 Instr 183 @ 0xb70 (2928) - ISETP.GE.AND P1, PT, R12, R7, PT ;
 Instr 184 @ 0xb80 (2944) - DSETP.GT.AND P6, PT, R20, c[0x0][0x170], PT ;
 Instr 185 @ 0xb90 (2960) - SEL R10, RZ, 0x1, !P5 ;
 Instr 186 @ 0xba0 (2976) - DSETP.GT.AND P2, PT, R18, c[0x0][0x170], PT ;
 Instr 187 @ 0xbb0 (2992) - PRMT R10, R10, 0x5410, R4 ;
 Instr 188 @ 0xbc0 (3008) - SEL R6, RZ, 0x1, !P3 ;
 Instr 189 @ 0xbd0 (3024) - DSETP.GT.AND P4, PT, R16, c[0x0][0x170], PT ;
 Instr 190 @ 0xbe0 (3040) - SEL R11, RZ, 0x1, !P6 ;
 Instr 191 @ 0xbf0 (3056) - DSETP.GT.AND P5, PT, R14, c[0x0][0x170], PT ;
 Instr 192 @ 0xc00 (3072) - SEL R4, RZ, 0x1, !P2 ;
 Instr 193 @ 0xc10 (3088) - SEL R8, RZ, 0x1, !P4 ;
 Instr 194 @ 0xc20 (3104) - SEL R9, RZ, 0x1, !P5 ;
 Instr 195 @ 0xc30 (3120) - @P1 BRA 0xdb0 ;
Basic block id 25 - num instructions 3
 Instr 196 @ 0xc40 (3136) - DSETP.GT.AND P2, PT, R2, c[0x0][0x170], PT ;
 Instr 197 @ 0xc50 (3152) - SEL R2, RZ, 0x1, !P2 ;
 Instr 198 @ 0xc60 (3168) - BRA 0xdb0 ;
Basic block id 26 - num instructions 20
 Instr 199 @ 0xc70 (3184) - ISETP.GE.AND P1, PT, R12, R7, PT ;
 Instr 200 @ 0xc80 (3200) - DSETP.GE.AND P5, PT, R20, c[0x0][0x170], PT ;
 Instr 201 @ 0xc90 (3216) - DSETP.GE.AND P3, PT, R24, c[0x0][0x170], PT ;
 Instr 202 @ 0xca0 (3232) - DSETP.GE.AND P6, PT, R22, c[0x0][0x170], PT ;
 Instr 203 @ 0xcb0 (3248) - DSETP.GE.AND P2, PT, R18, c[0x0][0x170], PT ;
 Instr 204 @ 0xcc0 (3264) - DSETP.GE.AND P4, PT, R10, c[0x0][0x170], PT ;
 Instr 205 @ 0xcd0 (3280) - SEL R4, RZ, 0x1, !P6 ;
 Instr 206 @ 0xce0 (3296) - SEL R11, RZ, 0x1, !P5 ;
 Instr 207 @ 0xcf0 (3312) - DSETP.GE.AND P6, PT, R14, c[0x0][0x170], PT ;
 Instr 208 @ 0xd00 (3328) - SEL R10, RZ, 0x1, !P3 ;
 Instr 209 @ 0xd10 (3344) - @!P1 DSETP.GE.AND P5, PT, R2, c[0x0][0x170], PT ;
 Instr 210 @ 0xd20 (3360) - PRMT R10, R10, 0x5410, R4.reuse ;
 Instr 211 @ 0xd30 (3376) - SEL R3, RZ, 0x1, !P2 ;
 Instr 212 @ 0xd40 (3392) - DSETP.GE.AND P3, PT, R16, c[0x0][0x170], PT ;
 Instr 213 @ 0xd50 (3408) - SEL R6, RZ, 0x1, !P4 ;
 Instr 214 @ 0xd60 (3424) - PRMT R4, R3, 0x7610, R4 ;
 Instr 215 @ 0xd70 (3440) - @!P1 SEL R3, RZ, 0x1, !P5 ;
 Instr 216 @ 0xd80 (3456) - SEL R9, RZ, 0x1, !P6 ;
 Instr 217 @ 0xd90 (3472) - SEL R8, RZ, 0x1, !P3 ;
 Instr 218 @ 0xda0 (3488) - @!P1 PRMT R2, R3, 0x7610, R2 ;
Basic block id 27 - num instructions 2
 Instr 219 @ 0xdb0 (3504) - BSYNC B0 ;
 Instr 220 @ 0xdc0 (3520) - @P0 EXIT ;
Basic block id 28 - num instructions 6
 Instr 221 @ 0xdd0 (3536) - IADD3 R12, R0, 0x80, RZ ;
 Instr 222 @ 0xde0 (3552) - IMAD.IADD R5, R5, 0x1, R0 ;
 Instr 223 @ 0xdf0 (3568) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 224 @ 0xe00 (3584) - ISETP.GE.AND P0, PT, R12, R7, PT ;
 Instr 225 @ 0xe10 (3600) - STG.E.U8.SYS [R5.U32+UR4], R10 ;
 Instr 226 @ 0xe20 (3616) - @P0 EXIT ;
Basic block id 29 - num instructions 6
 Instr 227 @ 0xe30 (3632) - IADD3 R12, R0, 0x100, RZ ;
 Instr 228 @ 0xe40 (3648) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 229 @ 0xe50 (3664) - PRMT R3, R10, 0x7632, R3 ;
 Instr 230 @ 0xe60 (3680) - ISETP.GE.AND P0, PT, R12, R7, PT ;
 Instr 231 @ 0xe70 (3696) - STG.E.U8.SYS [R5.U32+UR4+0x80], R3 ;
 Instr 232 @ 0xe80 (3712) - @P0 EXIT ;
Basic block id 30 - num instructions 5
 Instr 233 @ 0xe90 (3728) - IADD3 R10, R0, 0x180, RZ ;
 Instr 234 @ 0xea0 (3744) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 235 @ 0xeb0 (3760) - STG.E.U8.SYS [R5.U32+UR4+0x100], R11 ;
 Instr 236 @ 0xec0 (3776) - ISETP.GE.AND P0, PT, R10, R7, PT ;
 Instr 237 @ 0xed0 (3792) - @P0 EXIT ;
Basic block id 31 - num instructions 5
 Instr 238 @ 0xee0 (3808) - IADD3 R10, R0, 0x200, RZ ;
 Instr 239 @ 0xef0 (3824) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 240 @ 0xf00 (3840) - STG.E.U8.SYS [R5.U32+UR4+0x180], R4 ;
 Instr 241 @ 0xf10 (3856) - ISETP.GE.AND P0, PT, R10, R7, PT ;
 Instr 242 @ 0xf20 (3872) - @P0 EXIT ;
Basic block id 32 - num instructions 5
 Instr 243 @ 0xf30 (3888) - IADD3 R4, R0, 0x280, RZ ;
 Instr 244 @ 0xf40 (3904) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 245 @ 0xf50 (3920) - STG.E.U8.SYS [R5.U32+UR4+0x200], R6 ;
 Instr 246 @ 0xf60 (3936) - ISETP.GE.AND P0, PT, R4, R7, PT ;
 Instr 247 @ 0xf70 (3952) - @P0 EXIT ;
Basic block id 33 - num instructions 5
 Instr 248 @ 0xf80 (3968) - IADD3 R0, R0, 0x300, RZ ;
 Instr 249 @ 0xf90 (3984) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 250 @ 0xfa0 (4000) - STG.E.U8.SYS [R5.U32+UR4+0x280], R8 ;
 Instr 251 @ 0xfb0 (4016) - ISETP.GE.AND P0, PT, R0, R7, PT ;
 Instr 252 @ 0xfc0 (4032) - @P0 EXIT ;
Basic block id 34 - num instructions 3
 Instr 253 @ 0xfd0 (4048) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 254 @ 0xfe0 (4064) - STG.E.U8.SYS [R5.U32+UR4+0x300], R9 ;
 Instr 255 @ 0xff0 (4080) - @P1 EXIT ;
Basic block id 35 - num instructions 3
 Instr 256 @ 0x1000 (4096) - ULDC.64 UR4, c[0x0][0x180] ;
 Instr 257 @ 0x1010 (4112) - STG.E.U8.SYS [R5.U32+UR4+0x380], R2 ;
 Instr 258 @ 0x1020 (4128) - EXIT ;
Basic block id 36 - nPython version: 3.11.11
PyTorch version: 2.7.0+cu118
CUDA version: 11.8
cuDNN version: 90100
CUDA available: True
Device name: NVIDIA GeForce RTX 2080
cudnn on?  True
tensor([[ 1.3506e+00,  3.0742e+00,  3.2363e+00,  3.4180e+00,  4.8086e+00,
          4.0234e+00,  4.3711e+00,  2.4011e-01, -9.8682e-01, -4.9780e-01,
         -3.1860e-01,  1.5352e+00,  6.8994e-01,  1.7041e+00,  2.0938e+00,
          1.0098e+00, -5.7861e-01,  9.4482e-02,  1.4941e+00,  5.5762e-01,
          6.5857e-02,  3.2959e-01,  1.7568e+00,  8.2373e-01, -5.7373e-02,
          1.9678e-01,  1.0850e+00,  6.6113e-01,  3.1519e-01,  1.1611e+00,
          1.5586e+00,  3.3252e-01, -6.3672e-01,  2.7695e+00,  3.3164e+00,
          8.3301e-01,  5.6641e-01,  2.1082e-01,  3.1592e-01,  1.8203e+00,
          1.7090e+00,  8.1152e-01,  9.4141e-01,  4.5581e-01,  1.4062e+00,
          1.3037e-01,  1.6553e+00, -1.1104e+00,  1.7900e+00,  9.2139e-01,
          2.3027e+00, -1.6543e+00,  7.1436e-01,  6.6162e-01, -5.4785e-01,
          1.3945e+00, -9.9854e-01,  1.3928e-01,  2.1777e+00,  4.6387e-01,
          1.3057e+00, -3.3154e-01,  1.3084e-02, -1.3271e+00,  4.2627e-01,
          4.5898e+00, -8.4534e-02, -5.2783e-01,  1.3928e-01,  2.0723e+00,
          1.5430e+00,  1.9756e+00,  5.2246e-01,  1.0459e+00,  7.6270e-01,
          2.0820e+00,  1.0605e+00,  1.3828e+00,  1.5371e+00,  2.2910e+00,
         -1.3125e+00,  1.2363e+00,  1.5965e-03, -2.9492e+00,  6.2012e-01,
          9.9805e-01, -3.6572e-01, -3.3911e-01, -9.5215e-02,  1.7783e+00,
         -1.0215e+00, -7.6172e-01,  1.0557e+00, -2.9834e-01,  6.9775e-01,
         -2.1074e+00,  5.1709e-01, -5.5029e-01, -1.3389e+00,  3.6841e-01,
          8.9294e-02, -1.7539e+00, -1.7607e+00,  7.6074e-01,  3.4375e-01,
         -3.4448e-01, -1.0370e-01,  6.7812e+00,  2.4141e+00,  2.8730e+00,
          1.8965e+00,  4.9062e+00,  2.6426e+00,  2.1504e+00,  1.8740e+00,
          4.6967e-02,  9.3848e-01,  1.4785e+00,  5.6152e-01,  5.2979e-01,
          6.5918e-01,  1.3318e-01,  7.6318e-01,  1.9219e+00,  2.8418e+00,
          1.9561e+00,  2.6699e+00,  3.9990e-01,  7.9590e-01,  1.4883e+00,
          8.8318e-02,  7.3291e-01,  2.3223e+00,  6.8945e-01,  1.2031e+00,
         -3.2959e-01, -1.2451e+00,  4.2944e-01,  7.3975e-01, -1.3794e-01,
          1.4453e-01,  4.8193e-01,  2.7930e-01,  9.4971e-01,  8.5303e-01,
          6.0352e-01, -3.9307e-01,  3.5107e-01,  7.7441e-01,  2.7012e+00,
          1.4502e+00, -7.3340e-01, -2.8223e+00,  1.3464e-01, -1.1006e+00,
         -3.5327e-01, -1.6221e+00, -1.2803e+00, -1.1338e+00, -1.1562e+00,
         -2.8242e+00, -9.8999e-02, -9.9487e-02, -7.2900e-01, -1.1309e+00,
         -1.7344e+00, -1.1299e+00, -2.4453e+00, -1.2637e+00, -1.3086e+00,
         -1.9180e+00, -5.1611e-01, -1.6709e+00, -3.8232e-01, -1.3164e+00,
         -2.6738e+00, -1.6396e+00, -2.4199e+00,  5.3174e-01, -1.3896e+00,
         -7.0801e-01, -1.2314e+00, -1.1758e+00, -1.5352e+00, -1.5869e+00,
         -1.0615e+00, -1.9219e+00, -6.4355e-01, -2.7598e+00, -1.1162e+00,
         -1.4971e+00, -1.7139e+00, -1.2471e+00, -2.1445e+00, -2.3125e+00,
          4.8584e-02, -1.3359e+00, -2.8867e+00, -2.4062e+00, -1.0430e+00,
         -3.1055e+00, -4.4458e-01, -1.2861e+00,  1.2285e+00,  4.9072e-01,
         -1.9902e+00, -2.1582e+00, -2.3511e-01, -1.3184e+00, -1.3367e-01,
         -2.2578e+00, -1.7207e+00, -1.4268e+00, -7.2168e-01, -2.1660e+00,
         -1.3857e+00, -1.4766e+00, -4.5410e-01, -8.8770e-01, -1.5674e+00,
         -2.9473e+00, -1.4971e+00, -1.8164e+00, -4.7266e-01, -6.9287e-01,
         -1.5615e+00, -1.9893e+00, -2.2852e+00, -2.9961e+00, -1.0938e+00,
         -7.1826e-01, -1.2637e+00, -3.7622e-01, -3.1602e+00, -9.7705e-01,
         -1.2422e+00, -1.1670e+00, -1.2979e+00, -1.1475e+00, -1.7266e+00,
         -1.3213e+00, -1.7578e+00, -7.8662e-01, -1.4717e+00, -4.3711e+00,
         -5.4297e-01, -2.0938e+00, -1.3301e+00, -3.1055e-01, -1.6816e+00,
         -7.5342e-01, -8.1982e-01, -3.3066e+00, -8.0518e-01, -8.7939e-01,
         -2.7051e+00, -2.6172e+00, -1.2539e+00, -7.3633e-01, -3.8306e-01,
         -2.2070e+00, -1.9424e+00, -3.4902e+00, -6.9287e-01, -1.3828e+00,
         -1.1387e+00, -1.4883e+00, -2.4062e+00, -2.7441e+00, -1.0869e+00,
         -3.8916e-01, -1.5938e+00, -1.1436e-02, -1.8076e+00, -1.3369e+00,
         -2.2812e+00, -2.4609e+00, -8.5498e-01, -1.5391e+00,  7.7344e-01,
          2.2192e-01,  3.5303e-01,  5.8594e-01, -8.0322e-02,  4.1577e-01,
         -4.3213e-01, -1.1455e+00, -1.2285e+00, -6.4795e-01, -1.3506e+00,
         -2.7109e+00, -1.8115e+00, -8.5742e-01, -2.1523e+00, -9.8682e-01,
         -2.6978e-02,  8.6523e-01, -2.8340e+00,  3.9502e-01, -9.5703e-01,
          3.7628e-02,  1.4014e+00,  8.3008e-01,  1.7881e+00,  1.1725e-01,
         -6.2286e-02,  8.5449e-01,  1.1924e+00,  7.1289e-01,  1.5320e-01,
          3.0898e+00,  1.2812e+00,  1.8057e+00,  1.9277e+00,  2.9902e+00,
          2.5723e+00,  1.7344e+00,  2.6289e+00,  3.4863e+00,  1.5967e+00,
          7.8271e-01, -4.8730e-01, -1.5449e+00, -4.1260e-01,  1.4746e+00,
         -2.6050e-01,  2.7124e-01,  3.9590e+00,  1.5527e+00,  3.1562e+00,
         -9.8801e-03,  4.2236e-01, -3.4180e-01,  1.8661e-02,  2.4512e-01,
          5.9033e-01, -1.4050e-01, -1.1322e-01, -3.2178e-01, -2.1836e+00,
         -1.9932e+00, -2.0527e+00, -1.2812e+00, -7.8613e-01,  2.1509e-01,
         -1.5293e+00, -1.9658e+00, -1.1377e+00, -1.6426e+00, -7.7051e-01,
          4.3823e-02, -1.7031e+00, -1.1152e+00, -7.3486e-01, -1.4492e+00,
         -2.3945e+00,  1.5588e-01, -2.9272e-01,  1.8555e-01, -1.1078e-01,
         -3.2275e-01,  1.8467e+00,  1.8884e-01,  1.1602e+00, -9.9170e-01,
         -6.1230e-01, -2.3203e+00, -1.2012e+00, -1.1836e+00, -1.0107e+00,
          7.7332e-02, -2.5527e+00, -1.9521e+00, -3.1421e-01,  9.1309e-01,
         -6.2549e-01, -1.1475e-01, -1.0596e-01, -1.1143e+00, -1.0176e+00,
         -8.7305e-01, -6.9727e-01, -5.3613e-01,  3.6255e-01, -9.1943e-01,
         -1.5488e+00, -1.4346e+00, -1.3604e+00, -1.7520e+00,  8.2764e-01,
          3.3008e+00,  2.9570e+00,  2.3164e+00,  1.9326e+00,  2.2129e+00,
          2.2949e+00,  3.0254e+00,  2.5195e+00,  1.8726e-01, -4.2139e-01,
         -1.9971e+00, -3.1934e-01,  1.1299e+00, -3.3154e-01,  6.1264e-03,
          2.0117e+00, -4.8071e-01, -2.3203e+00, -2.2930e+00,  1.9238e+00,
          1.1621e+00, -5.1855e-01,  1.0586e+00,  3.7866e-01, -3.4351e-01,
         -2.0703e+00, -4.5898e-01,  1.5869e+00,  1.6006e+00,  1.6494e+00,
         -1.0278e-01,  1.1162e+00,  6.2988e-01, -2.4434e+00, -1.7773e+00,
          9.8730e-01,  4.3408e-01,  8.0957e-01, -3.6407e-02,  2.4199e+00,
         -3.2959e-01, -2.0469e+00, -1.9873e-01,  8.5449e-01, -1.0352e+00,
         -1.1279e+00, -1.3623e+00,  9.6240e-01,  4.3945e-01, -2.2695e+00,
          2.4316e+00,  1.9678e+00, -3.9600e-01, -2.0630e-01, -7.9590e-01,
         -4.9219e-01,  1.7246e+00,  4.9194e-01,  6.0156e-01,  9.7473e-02,
         -2.3770e+00,  6.3086e-01, -1.1104e+00, -9.7363e-01, -1.2910e+00,
          2.8711e+00,  6.8066e-01, -1.2901e-02,  2.1777e+00,  4.2041e-01,
          1.2939e+00,  4.1351e-02,  6.4600e-01,  2.3262e+00,  3.9014e-01,
         -1.6826e+00, -1.8789e+00, -2.1836e+00,  1.4717e+00,  5.1727e-02,
         -8.8257e-02,  5.6824e-02, -9.7290e-02, -1.4941e-01,  1.4824e+00,
         -7.1240e-01, -4.1055e+00, -1.0723e+00,  3.9551e-01,  4.5459e-01,
          9.1895e-01,  2.4453e+00, -1.8750e-01,  2.2031e+00, -1.0278e-01,
          3.7183e-01, -1.5808e-01, -6.6943e-01,  3.5684e+00,  3.4453e+00,
          1.4043e+00,  2.9297e-01,  4.2285e-01, -2.2227e+00,  1.1279e+00,
         -1.6572e+00, -4.6631e-01,  1.6006e+00,  7.8564e-01,  1.5552e-01,
         -1.2354e-01, -9.2871e-01,  9.9658e-01, -6.2061e-01, -2.3389e-01,
         -3.4497e-01,  1.9336e+00,  2.0273e+00,  1.2402e+00, -1.6182e+00,
         -1.6543e+00, -2.0273e+00,  1.1816e+00, -2.4536e-01, -1.7053e-01,
         -1.2683e-01, -2.0117e+00,  7.9785e-01, -4.6948e-01, -5.7275e-01,
         -2.2949e+00, -1.1436e+00,  3.1079e-01,  1.4707e+00, -1.0469e+00,
          5.1056e-02, -1.3691e+00, -1.1611e+00,  8.1062e-04, -5.6152e-01,
          1.4941e+00, -2.6074e-01, -2.0801e+00,  7.2412e-01, -1.5000e+00,
         -5.4395e-01, -4.6631e-01, -3.8281e-01,  2.3867e+00,  2.7344e+00,
         -8.6084e-01, -2.7856e-01,  9.2432e-01,  2.0691e-01,  1.0068e+00,
          1.3457e+00,  1.8555e-01, -2.6777e+00, -1.6514e+00,  1.9053e+00,
         -3.4570e+00, -1.2617e+00,  2.2888e-01, -4.0674e-01, -1.0596e+00,
         -2.0977e+00, -2.6147e-01,  1.3438e+00,  8.9233e-02,  1.3252e+00,
          1.0029e+00, -1.2812e+00,  3.4629e+00,  1.8877e+00, -1.9590e+00,
         -1.0557e+00,  1.1530e-01,  1.0498e+00, -2.1230e+00, -9.2041e-01,
          3.6230e-01, -1.3447e+00,  2.4573e-01, -1.0752e+00,  2.5098e+00,
         -2.2305e+00, -8.8525e-01,  5.8496e-01, -8.6963e-01, -7.4585e-02,
         -3.2397e-01,  7.3975e-01, -2.1914e+00, -9.8828e-01, -2.4060e-01,
         -1.3174e+00, -1.9814e+00,  1.7627e+00, -6.6602e-01, -1.7090e-01,
         -1.0771e+00, -2.6489e-01,  3.6450e-01,  8.0273e-01, -6.5498e-03,
         -9.7266e-01,  6.3037e-01,  1.3193e+00,  2.8125e-01,  1.3350e+00,
          2.2539e+00, -9.9023e-01, -2.0569e-01, -2.8789e+00,  1.5039e+00,
          1.1689e+00,  1.9941e+00, -1.2246e+00,  2.1309e+00, -1.8740e+00,
          1.9119e-02,  5.7461e+00, -2.4238e+00,  1.6064e+00, -1.7939e+00,
          1.1133e+00,  2.9863e+00, -1.7676e+00,  4.3115e-01,  6.8799e-01,
          1.1992e+00, -4.0845e-01,  2.8496e+00,  9.1650e-01, -9.4922e-01,
         -1.4355e+00,  2.9883e-01, -1.5488e+00,  1.6711e-01, -5.9619e-01,
         -1.4771e-01, -4.9658e-01,  1.3174e+00,  1.8604e+00, -3.0840e+00,
          5.6885e-01, -6.6455e-01,  1.2607e+00,  1.3000e-01,  1.7242e-02,
          3.3359e+00, -8.3057e-01, -1.8857e+00,  4.5142e-01,  3.8359e+00,
         -1.2432e+00,  1.9268e+00,  4.0552e-01, -1.3076e+00,  6.4844e-01,
          1.3916e+00, -1.1973e+00, -1.5469e+00,  5.3125e-01, -1.8311e+00,
          2.9541e-01, -1.4258e+00,  1.3799e+00,  7.0850e-01,  4.1064e-01,
         -9.0674e-01, -1.8506e+00,  1.3281e+00,  4.4214e-01,  1.6191e+00,
         -1.3354e-01,  9.9707e-01,  5.9619e-01,  1.6094e+00,  1.3086e-01,
         -1.9736e+00,  1.7358e-01,  5.2246e-01,  2.0039e+00,  2.2422e+00,
         -1.8701e+00, -2.1055e+00,  3.0078e+00, -1.2402e+00,  2.0176e+00,
         -4.9170e-01,  1.2861e+00,  1.9854e+00,  2.9614e-01,  5.9131e-01,
          4.4897e-01, -4.3945e-01, -1.8711e+00,  1.7490e+00, -2.1445e+00,
         -3.2676e+00,  2.0593e-01,  7.0020e-01,  2.6514e-01, -7.0215e-01,
          3.2129e+00,  1.6230e+00, -1.6377e+00,  6.8213e-01, -7.1436e-01,
          1.0000e+00,  1.7764e+00, -7.3682e-01,  8.5986e-01,  1.8438e+00,
         -2.4355e+00,  2.5293e-01,  6.7676e-01, -4.4043e-01,  3.3423e-01,
          1.2559e+00,  9.1260e-01,  2.8066e+00, -2.8125e+00,  1.9912e+00,
         -1.4062e+00,  1.1641e+00, -2.4668e+00,  1.5986e+00,  5.5908e-01,
          2.4453e+00,  1.7798e-01,  3.7500e+00,  7.3486e-01, -3.3203e-01,
          3.9526e-01, -1.4287e+00,  2.4395e+00,  1.8154e+00, -2.1445e+00,
          4.0436e-02,  3.1958e-01, -1.3584e+00,  2.9316e+00, -2.8828e+00,
          1.3076e+00,  1.8281e+00,  1.5371e+00, -7.2217e-01, -2.5156e+00,
          6.3867e-01,  2.5059e+00, -1.2529e+00,  5.6006e-01,  8.3105e-01,
         -7.1680e-01,  9.1895e-01,  4.8798e-02, -1.6174e-01,  1.5840e+00,
          3.7549e-01, -1.6514e+00,  2.4082e+00,  1.4463e+00,  1.4832e-01,
          3.3716e-01,  3.6719e-01, -2.0254e+00,  1.0791e+00,  4.7974e-01,
         -6.3818e-01,  9.9170e-01, -2.2344e+00,  2.0977e+00,  8.0750e-02,
         -5.6934e-01, -2.3281e+00,  2.4727e+00,  1.6846e-02,  2.0293e+00,
          1.4297e+00,  1.3662e+00,  1.3438e+00,  1.3643e+00,  5.0830e-01,
          7.2510e-01,  8.1006e-01,  1.4092e+00,  3.9526e-01,  1.8616e-01,
         -6.8359e-01, -2.7124e-01,  1.8174e+00,  3.0938e+00,  2.2168e+00,
         -2.5430e+00, -2.8955e-01, -1.7456e-01, -1.7803e+00, -1.9180e+00,
         -1.2686e+00,  1.5625e+00,  8.0859e-01, -9.0137e-01,  1.0488e+00,
          8.4033e-01, -6.8115e-02, -1.2412e+00, -4.8730e-01, -9.2529e-01,
         -2.0840e+00,  1.3721e+00, -9.0479e-01, -7.2998e-01,  9.5117e-01,
          1.1533e+00,  1.4004e+00, -1.1680e+00, -7.0557e-01,  3.5522e-01,
         -2.3965e+00,  1.2686e+00,  7.4707e-01, -2.3523e-01,  5.6836e-01,
          2.5312e+00, -3.3545e-01, -2.7793e+00,  2.7949e+00,  3.2715e-01,
         -1.9189e+00,  6.4209e-01, -1.4805e+00, -1.5533e-02,  3.2422e-01,
         -2.6538e-01,  8.5010e-01, -8.7744e-01,  3.0293e+00, -1.6328e+00,
         -1.4785e+00, -1.7295e+00,  3.8062e-01,  6.0760e-02, -3.7891e-01,
          2.0293e+00,  6.1768e-01,  8.1445e-01, -9.0137e-01,  1.1123e+00,
          3.1274e-01, -2.2705e-01,  4.8608e-01,  1.0469e+00,  3.4922e+00,
          4.7773e+00, -1.7859e-01, -2.6074e+00,  3.1226e-01, -8.1970e-02,
         -4.1504e-01,  1.5234e+00,  3.8867e+00,  2.3901e-01, -5.0049e-02,
          1.4854e+00, -3.7578e+00, -1.0225e+00,  1.3896e+00, -3.3295e-02,
         -2.2832e+00, -3.0664e-01, -3.7231e-01, -9.8694e-02, -1.3135e+00,
         -2.8594e+00, -9.2969e-01, -6.2451e-01,  9.0771e-01, -8.8916e-01,
          2.9297e-01, -6.2988e-01,  1.8633e+00,  1.3398e+00, -3.1465e+00,
         -5.1416e-01, -3.1787e-01, -9.4482e-01, -1.7383e+00,  2.7012e+00,
          1.0699e-01,  1.3000e-01,  6.0986e-01, -1.4954e-01,  1.0273e+00,
          1.3457e+00, -3.7427e-01, -1.6006e+00,  1.4170e+00, -4.8022e-01,
          5.0146e-01, -1.2285e+00,  2.9160e+00,  1.8193e+00, -5.6592e-01,
         -4.5532e-01,  1.0748e-01, -1.3057e+00,  2.3066e+00, -1.9812e-01,
          9.1895e-01, -1.5771e+00,  1.5117e+00, -7.7881e-01,  1.9453e+00,
         -5.5420e-01, -1.5879e+00,  1.0088e+00,  2.2246e+00,  1.5967e-01,
          3.5474e-01,  3.5425e-01, -2.9761e-01,  2.5117e+00, -1.9531e+00,
         -7.7002e-01, -5.3662e-01, -3.4448e-01, -5.8545e-01,  8.8574e-01,
          2.0488e+00,  2.2351e-01, -6.8311e-01, -1.8672e+00, -1.1670e+00,
         -9.5020e-01, -3.2930e+00, -5.0586e-01, -1.1523e+00,  9.7852e-01,
         -1.2871e+00, -5.9229e-01,  5.7922e-02, -1.9463e+00, -1.8076e+00,
         -1.0195e+00, -1.6562e+00,  1.4346e+00, -1.1768e+00, -1.5020e+00,
         -8.3789e-01, -2.8789e+00, -1.7344e+00, -1.5977e+00, -2.0234e+00,
         -7.5586e-01, -1.7100e+00, -6.2061e-01,  4.2236e-01, -1.1340e-01,
          9.6973e-01,  1.9932e+00,  9.3848e-01, -1.7812e+00, -3.2373e-01,
          8.5010e-01, -2.8867e+00, -1.3025e-01,  5.9375e-01, -1.1240e+00,
         -1.4785e+00,  1.1951e-01, -1.6191e+00, -5.4810e-02, -2.2090e+00,
         -3.8477e+00,  2.9199e-01,  9.8975e-01,  7.0557e-01, -5.2002e-01,
         -7.7734e-01,  4.3320e+00,  1.7773e-01,  3.5801e+00,  1.3877e+00,
          1.9316e+00,  1.2959e+00,  3.1582e+00,  2.3398e+00,  4.2041e-01,
          2.2695e+00,  7.8174e-01, -2.8149e-01,  3.8203e+00,  1.6797e+00,
          8.7646e-01,  8.1360e-02,  1.7471e+00,  1.6680e+00, -3.6230e-01,
          2.8003e-01, -6.2549e-01, -8.3398e-01, -4.1172e+00, -2.8652e+00,
         -1.8086e+00, -2.2285e+00,  4.5990e-02,  1.9092e-01,  1.1348e+00]],
       device='cuda:0', dtype=torch.float16)
um instructions 1
 Instr 259 @ 0x1030 (4144) - BRA 0x1030;
inspecting void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<double>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, double)::{lambda(double)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<double>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, double)::{lambda(double)#1}, std::array<char*, 2ul>) - number basic blocks 37
Inject count_instr before - Instr 0 @ 0x0 (0) - IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
Inject count_instr before - Instr 14 @ 0xe0 (224) - IMAD.MOV.U32 R2, RZ, RZ, 0x8 ;
Inject count_instr before - Instr 23 @ 0x170 (368) - IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x168] ;
Inject count_instr before - Instr 26 @ 0x1a0 (416) - ISETP.NE.AND P0, PT, R2, 0x2, PT ;
Inject count_instr before - Instr 28 @ 0x1c0 (448) - DSETP.LE.AND P2, PT, R20, c[0x0][0x170], PT ;
Inject count_instr before - Instr 38 @ 0x260 (608) - DSETP.LT.AND P2, PT, R20, c[0x0][0x170], PT ;
Inject count_instr before - Instr 48 @ 0x300 (768) - DSETP.GT.AND P2, PT, R20, c[0x0][0x170], PT ;
Inject count_instr before - Instr 58 @ 0x3a0 (928) - DSETP.GE.AND P2, PT, R20, c[0x0][0x170], PT ;
Inject count_instr before - Instr 67 @ 0x430 (1072) - P2R R3, PR, RZ, 0x40 ;
Inject count_instr before - Instr 90 @ 0x5a0 (1440) - ISETP.GE.AND P0, PT, R0, R7, PT ;
Inject count_instr before - Instr 95 @ 0x5f0 (1520) - IMAD.IADD R8, R5, 0x1, R0 ;
Inject count_instr before - Instr 102 @ 0x660 (1632) - LDG.E.64.SYS R22, [R8+0x400] ;
Inject count_instr before - Instr 106 @ 0x6a0 (1696) - LDG.E.64.SYS R20, [R8+0x800] ;
Inject count_instr before - Instr 110 @ 0x6e0 (1760) - LDG.E.64.SYS R18, [R8+0xc00] ;
Inject count_instr before - Instr 114 @ 0x720 (1824) - LDG.E.64.SYS R10, [R8+0x1000] ;
Inject count_instr before - Instr 118 @ 0x760 (1888) - LDG.E.64.SYS R16, [R8+0x1400] ;
Inject count_instr before - Instr 122 @ 0x7a0 (1952) - IADD3 R4, R0, 0x380, RZ ;
Inject count_instr before - Instr 126 @ 0x7e0 (2016) - BSYNC B0 ;
Inject count_instr before - Instr 132 @ 0x840 (2112) - IMAD.MOV.U32 R4, RZ, RZ, c[0x0][0x168] ;
Inject count_instr before - Instr 135 @ 0x870 (2160) - ISETP.NE.AND P1, PT, R4, 0x2, PT ;
Inject count_instr before - Instr 137 @ 0x890 (2192) - DSETP.GTU.AND P1, PT, R22, c[0x0][0x170], PT ;
Inject count_instr before - Instr 156 @ 0x9c0 (2496) - DSETP.GTU.AND P2, PT, R2, c[0x0][0x170], PT ;
Inject count_instr before - Instr 159 @ 0x9f0 (2544) - DSETP.GEU.AND P1, PT, R22, c[0x0][0x170], PT ;
Inject count_instr before - Instr 176 @ 0xb00 (2816) - DSETP.GEU.AND P2, PT, R2, c[0x0][0x170], PT ;
Inject count_instr before - Instr 179 @ 0xb30 (2864) - DSETP.GT.AND P1, PT, R22, c[0x0][0x170], PT ;
Inject count_instr before - Instr 196 @ 0xc40 (3136) - DSETP.GT.AND P2, PT, R2, c[0x0][0x170], PT ;
Inject count_instr before - Instr 199 @ 0xc70 (3184) - ISETP.GE.AND P1, PT, R12, R7, PT ;
Inject count_instr before - Instr 219 @ 0xdb0 (3504) - BSYNC B0 ;
Inject count_instr before - Instr 221 @ 0xdd0 (3536) - IADD3 R12, R0, 0x80, RZ ;
Inject count_instr before - Instr 227 @ 0xe30 (3632) - IADD3 R12, R0, 0x100, RZ ;
Inject count_instr before - Instr 233 @ 0xe90 (3728) - IADD3 R10, R0, 0x180, RZ ;
Inject count_instr before - Instr 238 @ 0xee0 (3808) - IADD3 R10, R0, 0x200, RZ ;
Inject count_instr before - Instr 243 @ 0xf30 (3888) - IADD3 R4, R0, 0x280, RZ ;
Inject count_instr before - Instr 248 @ 0xf80 (3968) - IADD3 R0, R0, 0x300, RZ ;
Inject count_instr before - Instr 253 @ 0xfd0 (4048) - ULDC.64 UR4, c[0x0][0x180] ;
Inject count_instr before - Instr 256 @ 0x1000 (4096) - ULDC.64 UR4, c[0x0][0x180] ;
Inject count_instr before - Instr 259 @ 0x1030 (4144) - BRA 0x1030;
kernel 285 - _ZN2at6native29vectorized_elementwise_kernelILi4EZNS0_21compare_scalar_kernelIdEEvRNS_18TensorIteratorBaseENS0_50_GLOBAL__N__e50ef81d_17_CompareKernels_cu_8f1b29aa6OpTypeET_EUldE_St5arrayIPcLm2EEEEviT0_T1_ - #thread-blocks 1,  kernel instructions 207, total instructions 65673748
Total app instructions: 65673748
